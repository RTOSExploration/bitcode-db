; ModuleID = 'build/96b_aerocore2/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [91 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [91 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235417 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235397 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235387 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235487 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235477 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235467 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235457 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235447 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235437 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235427 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237212 to i8*), void (i8*)* inttoptr (i32 134235407 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [59 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_100 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_101 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_102 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_103 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_104 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_105 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_106 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_97 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_98 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_99 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_100 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_101 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_102 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_103 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_104 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_105 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_106 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_97 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_98 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_99 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_49 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_60 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_63 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !456
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !485
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !505
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.109 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.105 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.106 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.107 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.108 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.99 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.98 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !517
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !664
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !523
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !673
@.str.121 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !709
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), %struct.ctr_params { i32 117571624 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i32 0, i32 0), %struct.ctr_params { i32 285933602 } }], align 4, !dbg !719
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !724
@.str.137 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !744
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !907
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !892
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !865
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !881
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !909
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !923
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !925
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !927
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !929
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !931
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !933
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !935
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !937
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !939
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !941
@__devicehdl_dts_ord_8 = dso_local constant [19 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 32767], section ".__device_handles_pass2", align 2, !dbg !951
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !994
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1088
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1077
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 -134, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1129
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1195
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !989
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1233
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1231
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1204
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1220
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1361
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_97 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !977
@.str.169 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1377
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1683
@__devstate_dts_ord_97 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1641
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1627
@__init___device_dts_ord_97 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_97 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1554
@__devicehdl_dts_ord_98 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !975
@.str.1.170 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1685
@__devstate_dts_ord_98 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1645
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1643
@__init___device_dts_ord_98 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_98 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1568
@__devicehdl_dts_ord_99 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !973
@.str.2.171 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1698
@__devstate_dts_ord_99 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1649
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1647
@__init___device_dts_ord_99 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_99 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1574
@__devicehdl_dts_ord_100 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !971
@.str.3.172 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1700
@__devstate_dts_ord_100 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1651
@__init___device_dts_ord_100 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_100 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1580
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !969
@.str.4.173 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1702
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1657
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1655
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1589
@__devicehdl_dts_ord_101 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !967
@.str.5.174 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1704
@__devstate_dts_ord_101 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1661
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1659
@__init___device_dts_ord_101 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_101 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1595
@__devicehdl_dts_ord_102 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !965
@.str.6.175 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1706
@__devstate_dts_ord_102 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1665
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1663
@__init___device_dts_ord_102 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_102 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1601
@__devicehdl_dts_ord_103 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !963
@.str.7.176 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1708
@__devstate_dts_ord_103 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1669
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1667
@__init___device_dts_ord_103 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_103 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1607
@__devicehdl_dts_ord_104 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !961
@.str.8.177 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1710
@__devstate_dts_ord_104 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1673
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1671
@__init___device_dts_ord_104 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_104 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1613
@__devicehdl_dts_ord_105 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !959
@.str.9.178 = private unnamed_addr constant [14 x i8] c"gpio@40022400\00", align 1
@gpio_stm32_cfg_j = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073882112 to i32*), i32 9, %struct._thread_arch { i32 48, i32 512 } }, align 4, !dbg !1712
@__devstate_dts_ord_105 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1677
@gpio_stm32_data_j = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1675
@__init___device_dts_ord_105 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_105 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1619
@__devicehdl_dts_ord_106 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !957
@.str.10.179 = private unnamed_addr constant [14 x i8] c"gpio@40022800\00", align 1
@gpio_stm32_cfg_k = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073883136 to i32*), i32 10, %struct._thread_arch { i32 48, i32 1024 } }, align 4, !dbg !1714
@__devstate_dts_ord_106 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1681
@gpio_stm32_data_k = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1679
@__init___device_dts_ord_106 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_106 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1625
@.str.183 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.183, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1716
@__devicehdl_dts_ord_63 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !987
@.str.1.184 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_63 }, align 4, !dbg !1904
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1959
@__devstate_dts_ord_63 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1894
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1961
@__device_dts_ord_63 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.184, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_63, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_63, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1861
@__init___device_dts_ord_63 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_63 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1863
@__devicehdl_dts_ord_49 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !985
@.str.2.187 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_49 }, align 4, !dbg !1967
@__devstate_dts_ord_49 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1896
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1977
@__device_dts_ord_49 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.187, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_49, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_49, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1872
@__init___device_dts_ord_49 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_49 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1874
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !983
@.str.3.188 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1979
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1898
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1989
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.188, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1878
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1880
@__devicehdl_dts_ord_57 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !981
@.str.4.191 = private unnamed_addr constant [16 x i8] c"serial@40007800\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073772544 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_57 }, align 4, !dbg !1991
@__devstate_dts_ord_57 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1900
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2001
@__device_dts_ord_57 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.191, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_57, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1884
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1886
@__devicehdl_dts_ord_60 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !979
@.str.5.192 = private unnamed_addr constant [16 x i8] c"serial@40007c00\00", align 1
@uart_stm32_cfg_4 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073773568 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_4, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_60 }, align 4, !dbg !2003
@__devstate_dts_ord_60 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1902
@uart_stm32_data_4 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2013
@__device_dts_ord_60 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.192, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_4 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_60, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_4 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_60, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1890
@__init___device_dts_ord_60 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_60 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1892
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1948
@__pinctrl_dev_config__device_dts_ord_63 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_63, i32 0, i32 0), i8 1 }, align 4, !dbg !1951
@__pinctrl_states__device_dts_ord_63 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_63, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1953
@__pinctrl_state_pins_0__device_dts_ord_63 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 711, i32 512 }, %struct._thread_arch { i32 743, i32 0 }], align 4, !dbg !1956
@.str.6.186 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.7.195 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.197 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.198 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1061
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1969
@__pinctrl_dev_config__device_dts_ord_49 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_49, i32 0, i32 0), i8 1 }, align 4, !dbg !1971
@__pinctrl_states__device_dts_ord_49 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_49, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1973
@__pinctrl_state_pins_0__device_dts_ord_49 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1975
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1981
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1983
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1985
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1987
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 1073741824 }], align 4, !dbg !1993
@__pinctrl_dev_config__device_dts_ord_57 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_57, i32 0, i32 0), i8 1 }, align 4, !dbg !1995
@__pinctrl_states__device_dts_ord_57 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_57, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1997
@__pinctrl_state_pins_0__device_dts_ord_57 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2312, i32 512 }, %struct._thread_arch { i32 2280, i32 0 }], align 4, !dbg !1999
@pclken_4 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 -2147483648 }], align 4, !dbg !2005
@__pinctrl_dev_config__device_dts_ord_60 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_60, i32 0, i32 0), i8 1 }, align 4, !dbg !2007
@__pinctrl_states__device_dts_ord_60 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_60, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2009
@__pinctrl_state_pins_0__device_dts_ord_60 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2088, i32 512 }, %struct._thread_arch { i32 2056, i32 0 }], align 4, !dbg !2011
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2020
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2129
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2131
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2127
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2098
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_97, %struct.device* @__device_dts_ord_98, %struct.device* @__device_dts_ord_99, %struct.device* @__device_dts_ord_100, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_101, %struct.device* @__device_dts_ord_102, %struct.device* @__device_dts_ord_103, %struct.device* @__device_dts_ord_104, %struct.device* @__device_dts_ord_105, %struct.device* @__device_dts_ord_106], align 4, !dbg !2133
@__device_dts_ord_97 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_97, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_97, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1552
@__device_dts_ord_98 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_98, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_98, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1566
@__device_dts_ord_99 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_99, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_99, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1572
@__device_dts_ord_100 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.172, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_100, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_100, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1578
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.173, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1587
@__device_dts_ord_101 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_101, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_101, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1593
@__device_dts_ord_102 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_102, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_102, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1599
@__device_dts_ord_103 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_103, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_103, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1605
@__device_dts_ord_104 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.177, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_104, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_104, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1611
@__device_dts_ord_105 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.178, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_j to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_105, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_j to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_105, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1617
@__device_dts_ord_106 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.179, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_k to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_106, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_k to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_106, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1623
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2223
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2265
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2268
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2272
@.str.235 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.239 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.240 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.241 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.245 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.246 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.247 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.248 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.249 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.244 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.243 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.245, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.246, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.247, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.248, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.249, i32 0, i32 0)], align 4
@.str.251 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2279
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2502
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2488
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2497
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2509
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2514
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.260 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.265, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.267, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.268, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.269, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.270, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.271, i32 0, i32 0)], align 4, !dbg !2544
@.str.265 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.266 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.267 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.268 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.269 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.270 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.264 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.271 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2656
@.str.8.263 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2669
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2777
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2780
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2782
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2507
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2499
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2784
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2820
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2366
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2818
@.str.324 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3438 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3442, !srcloc !3443
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3444, !srcloc !3445
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3446, !srcloc !3447
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3448, !srcloc !3449
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3450, !srcloc !3451
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3452, !srcloc !3453
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3454, !srcloc !3455
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3456, !srcloc !3457
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3458, !srcloc !3459
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3460, !srcloc !3461
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3462, !srcloc !3463
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3464, !srcloc !3465
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3466, !srcloc !3467
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3468, !srcloc !3469
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3470, !srcloc !3471
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3472, !srcloc !3473
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3474, !srcloc !3475
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3476, !srcloc !3477
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3478, !srcloc !3479
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3480, !srcloc !3481
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3482, !srcloc !3483
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3484, !srcloc !3485
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3486, !srcloc !3487
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3488, !srcloc !3489
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3490, !srcloc !3491
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3492, !srcloc !3493
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3494, !srcloc !3495
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3496, !srcloc !3499
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3500, !srcloc !3501
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3502, !srcloc !3503
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3504, !srcloc !3505
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3506, !srcloc !3507
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3508, !srcloc !3509
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3510, !srcloc !3511
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3512, !srcloc !3513
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3514, !srcloc !3515
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3516, !srcloc !3517
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3518, !srcloc !3519
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3520, !srcloc !3521
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3522, !srcloc !3523
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3524, !srcloc !3525
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3526, !srcloc !3527
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3528, !srcloc !3529
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3530, !srcloc !3531
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3532, !srcloc !3533
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3534, !srcloc !3535
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3536, !srcloc !3537
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3538, !srcloc !3539
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3540, !srcloc !3541
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3542, !srcloc !3543
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3544, !srcloc !3545
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3546, !srcloc !3547
  ret void, !dbg !3548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3553, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 0, metadata !3554, metadata !DIExpression()), !dbg !3555
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %2, metadata !3554, metadata !DIExpression()), !dbg !3555
  %3 = and i32 %2, 2, !dbg !3557
  %4 = icmp eq i32 %3, 0, !dbg !3559
  br i1 %4, label %5, label %8, !dbg !3560

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3561
  %7 = zext i8 %6 to i32, !dbg !3561
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3561
  br label %21, !dbg !3567

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3568
  %10 = icmp eq i32 %9, 0, !dbg !3570
  br i1 %10, label %11, label %14, !dbg !3571

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3572
  %13 = zext i8 %12 to i32, !dbg !3572
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3572
  br label %21, !dbg !3578

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3579
  %16 = icmp eq i32 %15, 0, !dbg !3581
  br i1 %16, label %17, label %20, !dbg !3582

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3583
  %19 = zext i8 %18 to i32, !dbg !3583
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3583
  br label %21, !dbg !3589

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3590
  br label %21, !dbg !3591

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3555
  ret i32 %22, !dbg !3592
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3595, metadata !DIExpression()), !dbg !3598
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3599
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3599
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3599
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3596, metadata !DIExpression()), !dbg !3598
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3600
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3600
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %7, metadata !3597, metadata !DIExpression()), !dbg !3598
  ret i32 %7, !dbg !3602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3608, metadata !DIExpression()), !dbg !3609
  %2 = add i32 %0, -1, !dbg !3610
  %3 = icmp ult i32 %2, 3, !dbg !3610
  %4 = trunc i32 %2 to i24, !dbg !3610
  %5 = shl i24 %4, 3, !dbg !3610
  %6 = lshr i24 4806469, %5, !dbg !3610
  %7 = trunc i24 %6 to i8, !dbg !3610
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3610
  ret i8 %8, !dbg !3611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3612 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3614, metadata !DIExpression()), !dbg !3624
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3625
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3625
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3615, metadata !DIExpression()), !dbg !3626
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3626
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3627
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3627
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3616, metadata !DIExpression()), !dbg !3628
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3628
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3629
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3629
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3617, metadata !DIExpression()), !dbg !3630
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3630
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3631
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3631
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3618, metadata !DIExpression()), !dbg !3632
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3632
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3633
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3633
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3619, metadata !DIExpression()), !dbg !3634
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3634
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3635
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3635
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3620, metadata !DIExpression()), !dbg !3636
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3636
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3637
  store i8* %10, i8** %16, align 4, !dbg !3637
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3638
  store i16 16, i16* %17, align 4, !dbg !3638
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3638
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3639
  %20 = trunc i32 %19 to i16, !dbg !3639
  store i16 %20, i16* %18, align 2, !dbg !3638
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3640
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3640
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3621, metadata !DIExpression()), !dbg !3641
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3642
  store i8* %11, i8** %22, align 4, !dbg !3642
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3642
  store i32 16, i32* %23, align 4, !dbg !3642
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3642
  store i8* %13, i8** %24, align 4, !dbg !3642
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3642
  store i32 16, i32* %25, align 4, !dbg !3642
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3642
  store i32 0, i32* %26, align 4, !dbg !3642
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3642
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3642
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3643
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3643
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3622, metadata !DIExpression()), !dbg !3644
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3645
  store i8* %13, i8** %29, align 4, !dbg !3645
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3645
  store i32 16, i32* %30, align 4, !dbg !3645
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3645
  store i8* %14, i8** %31, align 4, !dbg !3645
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3645
  store i32 16, i32* %32, align 4, !dbg !3645
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3645
  store i32 0, i32* %33, align 4, !dbg !3645
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3645
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3645
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3646
  %36 = icmp eq i32 %35, 0, !dbg !3646
  br i1 %36, label %37, label %74, !dbg !3648

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3649
  %39 = icmp eq i32 %38, 0, !dbg !3649
  br i1 %39, label %43, label %40, !dbg !3651

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3652
  %42 = zext i8 %41 to i32, !dbg !3652
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3652
  br label %73, !dbg !3658

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3659
  %45 = zext i8 %44 to i32, !dbg !3659
  %46 = load i32, i32* %26, align 4, !dbg !3659
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3659
  %47 = load i8*, i8** %24, align 4, !dbg !3664
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3666
  %49 = icmp eq i32 %48, 0, !dbg !3666
  br i1 %49, label %54, label %50, !dbg !3667

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3668
  %52 = zext i8 %51 to i32, !dbg !3668
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3668
  %53 = load i8*, i8** %24, align 4, !dbg !3674
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3675
  br label %73, !dbg !3676

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3677
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3682
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3683
  %56 = icmp eq i32 %55, 0, !dbg !3683
  br i1 %56, label %57, label %74, !dbg !3685

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3686
  %59 = icmp eq i32 %58, 0, !dbg !3686
  br i1 %59, label %63, label %60, !dbg !3688

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3689
  %62 = zext i8 %61 to i32, !dbg !3689
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3689
  br label %73, !dbg !3695

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3696
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3696
  %65 = load i8*, i8** %31, align 4, !dbg !3701
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3703
  %67 = icmp eq i32 %66, 0, !dbg !3703
  br i1 %67, label %72, label %68, !dbg !3704

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3705
  %70 = zext i8 %69 to i32, !dbg !3705
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3705
  %71 = load i8*, i8** %31, align 4, !dbg !3711
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3712
  br label %73, !dbg !3713

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3714
  br label %73, !dbg !3719

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3623), !dbg !3720
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3721
  br label %74, !dbg !3722

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3722
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3722
  ret void, !dbg !3722
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3723 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3725, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3726, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 1, metadata !3727, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 %2, metadata !3728, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 %3, metadata !3729, metadata !DIExpression()), !dbg !3732
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3733
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3733
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3733
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3730, metadata !DIExpression()), !dbg !3732
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3734
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3735
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3736
  store i32 %2, i32* %9, align 4, !dbg !3737
  call void @llvm.dbg.value(metadata i16 undef, metadata !3731, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3732
  call void @llvm.dbg.value(metadata i16 undef, metadata !3731, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3732
  call void @llvm.dbg.value(metadata i16 undef, metadata !3731, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3732
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3738
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3738
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3739
  ret i32 %12, !dbg !3740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3741 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3743, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3744, metadata !DIExpression()), !dbg !3745
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3746
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3747
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3748
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3748
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3749
  ret i32 %6, !dbg !3750
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3755, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i8* %1, metadata !3756, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 %2, metadata !3757, metadata !DIExpression()), !dbg !3760
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3758, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 1, metadata !3759, metadata !DIExpression()), !dbg !3760
  %4 = icmp eq i32 %2, 0, !dbg !3762
  br i1 %4, label %5, label %6, !dbg !3765

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3766
  call void @llvm.dbg.value(metadata i32 0, metadata !3758, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 1, metadata !3759, metadata !DIExpression()), !dbg !3760
  br label %33, !dbg !3767

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3759, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 %8, metadata !3758, metadata !DIExpression()), !dbg !3760
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3769
  %10 = load i8, i8* %9, align 1, !dbg !3769
  %11 = zext i8 %10 to i32, !dbg !3769
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3771
  %12 = icmp eq i32 %7, 10, !dbg !3772
  br i1 %12, label %13, label %14, !dbg !3774

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3775
  call void @llvm.dbg.value(metadata i32 0, metadata !3759, metadata !DIExpression()), !dbg !3760
  br label %14, !dbg !3777

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3778
  call void @llvm.dbg.value(metadata i32 %15, metadata !3759, metadata !DIExpression()), !dbg !3760
  %16 = add nuw i32 %8, 1, !dbg !3779
  call void @llvm.dbg.value(metadata i32 %16, metadata !3758, metadata !DIExpression()), !dbg !3760
  %17 = add nsw i32 %15, 1, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %17, metadata !3759, metadata !DIExpression()), !dbg !3760
  %18 = icmp eq i32 %16, %2, !dbg !3762
  br i1 %18, label %19, label %6, !dbg !3765, !llvm.loop !3781

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3766
  call void @llvm.dbg.value(metadata i32 0, metadata !3758, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 1, metadata !3759, metadata !DIExpression()), !dbg !3760
  br i1 %4, label %33, label %20, !dbg !3767

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3759, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 %22, metadata !3758, metadata !DIExpression()), !dbg !3760
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3783
  %24 = load i8, i8* %23, align 1, !dbg !3783
  %25 = zext i8 %24 to i32, !dbg !3783
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3786
  %26 = icmp eq i32 %21, 10, !dbg !3787
  br i1 %26, label %27, label %28, !dbg !3789

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3790
  call void @llvm.dbg.value(metadata i32 0, metadata !3759, metadata !DIExpression()), !dbg !3760
  br label %28, !dbg !3792

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3793
  call void @llvm.dbg.value(metadata i32 %29, metadata !3759, metadata !DIExpression()), !dbg !3760
  %30 = add nuw i32 %22, 1, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %30, metadata !3758, metadata !DIExpression()), !dbg !3760
  %31 = add nsw i32 %29, 1, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %31, metadata !3759, metadata !DIExpression()), !dbg !3760
  %32 = icmp eq i32 %30, %2, !dbg !3796
  br i1 %32, label %33, label %20, !dbg !3767, !llvm.loop !3797

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3799
  ret void, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3803, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3804, metadata !DIExpression()), !dbg !3806
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3807
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3807
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3807
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3805, metadata !DIExpression()), !dbg !3806
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3808
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3808
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3809
  ret void, !dbg !3810
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3811
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3812
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3812
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3813
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3813
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3814
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3814
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3815
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3815
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3816
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3816
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3817
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3817
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3818
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3818
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3819
  store i16 16, i16* %11, align 4, !dbg !3819
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3819
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3820
  %14 = trunc i32 %13 to i16, !dbg !3820
  store i16 %14, i16* %12, align 2, !dbg !3819
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3821
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3821
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3822
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3823
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3823
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3823
  store i32 64, i32* %17, align 4, !dbg !3823
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3823
  store i8* %7, i8** %18, align 4, !dbg !3823
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3823
  store i32 80, i32* %19, align 4, !dbg !3823
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3823
  store i32 0, i32* %20, align 4, !dbg !3823
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3823
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3823
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3824
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3824
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3825
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3826
  store i8* %7, i8** %23, align 4, !dbg !3826
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3826
  store i32 80, i32* %24, align 4, !dbg !3826
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3826
  store i8* %8, i8** %25, align 4, !dbg !3826
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3826
  store i32 64, i32* %26, align 4, !dbg !3826
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3826
  store i32 0, i32* %27, align 4, !dbg !3826
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3826
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3826
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3827
  %30 = icmp eq i32 %29, 0, !dbg !3827
  br i1 %30, label %31, label %68, !dbg !3829

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3830
  %33 = icmp eq i32 %32, 0, !dbg !3830
  br i1 %33, label %37, label %34, !dbg !3832

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3833
  %36 = zext i8 %35 to i32, !dbg !3833
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3833
  br label %67, !dbg !3839

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3840
  %39 = zext i8 %38 to i32, !dbg !3840
  %40 = load i32, i32* %20, align 4, !dbg !3840
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3840
  %41 = load i8*, i8** %18, align 4, !dbg !3845
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3847
  %43 = icmp eq i32 %42, 0, !dbg !3847
  br i1 %43, label %48, label %44, !dbg !3848

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3849
  %46 = zext i8 %45 to i32, !dbg !3849
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3849
  %47 = load i8*, i8** %18, align 4, !dbg !3855
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3856
  br label %67, !dbg !3857

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3858
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3863
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3864
  %50 = icmp eq i32 %49, 0, !dbg !3864
  br i1 %50, label %51, label %68, !dbg !3866

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3867
  %53 = icmp eq i32 %52, 0, !dbg !3867
  br i1 %53, label %57, label %54, !dbg !3869

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3870
  %56 = zext i8 %55 to i32, !dbg !3870
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3870
  br label %67, !dbg !3876

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3877
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3877
  %59 = load i8*, i8** %25, align 4, !dbg !3882
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3884
  %61 = icmp eq i32 %60, 0, !dbg !3884
  br i1 %61, label %66, label %62, !dbg !3885

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3886
  %64 = zext i8 %63 to i32, !dbg !3886
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3886
  %65 = load i8*, i8** %25, align 4, !dbg !3892
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3893
  br label %67, !dbg !3894

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3895
  br label %67, !dbg !3900

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3901
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3902
  br label %68, !dbg !3903

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3903
  ret void, !dbg !3903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3906, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i8* %2, metadata !3908, metadata !DIExpression()), !dbg !3909
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3910
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3911
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3912
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3912
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3912
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3913
  ret i32 %8, !dbg !3914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3915 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3917, metadata !DIExpression()), !dbg !3925
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3926
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3926
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3918, metadata !DIExpression()), !dbg !3927
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3927
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3928
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3928
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3919, metadata !DIExpression()), !dbg !3929
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3929
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3930
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3930
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3920, metadata !DIExpression()), !dbg !3931
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3932
  store i64 0, i64* %11, align 8, !dbg !3932
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3933
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3933
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3932
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3932
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3932
  store i8* null, i8** %14, align 8, !dbg !3932
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3932
  store i8* null, i8** %15, align 4, !dbg !3932
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3934
  store i32 32, i32* %16, align 8, !dbg !3934
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3932
  store i16 16, i16* %17, align 4, !dbg !3932
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3932
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3935
  %20 = trunc i32 %19 to i16, !dbg !3935
  store i16 %20, i16* %18, align 2, !dbg !3932
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3936
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3936
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3921, metadata !DIExpression()), !dbg !3937
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3938
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3938
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3938
  store i32 64, i32* %23, align 4, !dbg !3938
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3938
  store i8* %8, i8** %24, align 4, !dbg !3938
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3938
  store i32 64, i32* %25, align 4, !dbg !3938
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3938
  store i32 0, i32* %26, align 4, !dbg !3938
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3938
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3938
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3939
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3939
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3922, metadata !DIExpression()), !dbg !3940
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3941
  store i8* %8, i8** %29, align 4, !dbg !3941
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3941
  store i32 64, i32* %30, align 4, !dbg !3941
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3941
  store i8* %9, i8** %31, align 4, !dbg !3941
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3941
  store i32 64, i32* %32, align 4, !dbg !3941
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3941
  store i32 0, i32* %33, align 4, !dbg !3941
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3941
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3941
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3942
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3923, metadata !DIExpression()), !dbg !3943
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3943
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3944
  %37 = icmp eq i32 %36, 0, !dbg !3944
  br i1 %37, label %38, label %75, !dbg !3946

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3947
  %40 = icmp eq i32 %39, 0, !dbg !3947
  br i1 %40, label %44, label %41, !dbg !3949

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3950
  %43 = zext i8 %42 to i32, !dbg !3950
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3950
  br label %74, !dbg !3956

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3957
  %46 = zext i8 %45 to i32, !dbg !3957
  %47 = load i32, i32* %26, align 4, !dbg !3957
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3957
  %48 = load i8*, i8** %24, align 4, !dbg !3962
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3964
  %50 = icmp eq i32 %49, 0, !dbg !3964
  br i1 %50, label %55, label %51, !dbg !3965

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3966
  %53 = zext i8 %52 to i32, !dbg !3966
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3966
  %54 = load i8*, i8** %24, align 4, !dbg !3972
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3973
  br label %74, !dbg !3974

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3975
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3980
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3981
  %57 = icmp eq i32 %56, 0, !dbg !3981
  br i1 %57, label %58, label %75, !dbg !3983

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3984
  %60 = icmp eq i32 %59, 0, !dbg !3984
  br i1 %60, label %64, label %61, !dbg !3986

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3987
  %63 = zext i8 %62 to i32, !dbg !3987
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3987
  br label %74, !dbg !3993

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3994
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3994
  %66 = load i8*, i8** %31, align 4, !dbg !3999
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !4001
  %68 = icmp eq i32 %67, 0, !dbg !4001
  br i1 %68, label %73, label %69, !dbg !4002

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4003
  %71 = zext i8 %70 to i32, !dbg !4003
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !4003
  %72 = load i8*, i8** %31, align 4, !dbg !4009
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !4010
  br label %74, !dbg !4011

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !4012
  br label %74, !dbg !4017

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3924), !dbg !4018
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4019
  br label %75, !dbg !4020

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !4020
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !4020
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !4020
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4020
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !4020
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !4020
  ret void, !dbg !4020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !4021 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4023, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !4024, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i8* %2, metadata !4025, metadata !DIExpression()), !dbg !4026
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !4027
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !4028
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4029
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !4029
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !4029
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !4030
  ret i32 %8, !dbg !4031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !4032 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4034, metadata !DIExpression()), !dbg !4048
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !4049
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !4049
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !4035, metadata !DIExpression()), !dbg !4050
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !4051
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !4051
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !4039, metadata !DIExpression()), !dbg !4052
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4053
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4053
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4043, metadata !DIExpression()), !dbg !4054
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4055
  store i64 0, i64* %11, align 8, !dbg !4055
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4056
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4056
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4055
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4055
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4055
  store i8* null, i8** %14, align 8, !dbg !4055
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4055
  store i8* null, i8** %15, align 4, !dbg !4055
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4055
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4057
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4058
  store i16 8, i16* %18, align 8, !dbg !4058
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4058
  store i16 13, i16* %19, align 2, !dbg !4058
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4055
  store i16 16, i16* %20, align 4, !dbg !4055
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4055
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4059
  %23 = trunc i32 %22 to i16, !dbg !4059
  store i16 %23, i16* %21, align 2, !dbg !4055
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4060
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4060
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4044, metadata !DIExpression()), !dbg !4061
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4062
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4062
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4062
  store i32 23, i32* %26, align 4, !dbg !4062
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4062
  store i8* %8, i8** %27, align 4, !dbg !4062
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4062
  store i32 50, i32* %28, align 4, !dbg !4062
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4062
  store i32 0, i32* %29, align 4, !dbg !4062
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4062
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4062
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4063
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4063
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4045, metadata !DIExpression()), !dbg !4064
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4065
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4065
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4065
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4065
  store i32 8, i32* %34, align 4, !dbg !4065
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4065
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !4066
  store i8* %36, i8** %35, align 4, !dbg !4065
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4067
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4067
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4046, metadata !DIExpression()), !dbg !4068
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4069
  store i8* %8, i8** %38, align 4, !dbg !4069
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4069
  store i32 23, i32* %39, align 4, !dbg !4069
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4069
  store i8* %9, i8** %40, align 4, !dbg !4069
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4069
  store i32 25, i32* %41, align 4, !dbg !4069
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4069
  store i32 0, i32* %42, align 4, !dbg !4069
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4069
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4069
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !4070
  %45 = icmp eq i32 %44, 0, !dbg !4070
  br i1 %45, label %46, label %83, !dbg !4072

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4073
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4074
  %48 = icmp eq i32 %47, 0, !dbg !4074
  br i1 %48, label %52, label %49, !dbg !4076

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4077
  %51 = zext i8 %50 to i32, !dbg !4077
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !4077
  br label %82, !dbg !4083

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4084
  %54 = zext i8 %53 to i32, !dbg !4084
  %55 = load i32, i32* %29, align 4, !dbg !4084
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4084
  %56 = load i8*, i8** %27, align 4, !dbg !4089
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !4091
  %58 = icmp eq i32 %57, 0, !dbg !4091
  br i1 %58, label %63, label %59, !dbg !4092

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4093
  %61 = zext i8 %60 to i32, !dbg !4093
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !4093
  %62 = load i8*, i8** %27, align 4, !dbg !4099
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !4100
  br label %82, !dbg !4101

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !4102
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4107
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !4108
  %65 = icmp eq i32 %64, 0, !dbg !4108
  br i1 %65, label %66, label %83, !dbg !4110

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4111
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4112
  %68 = icmp eq i32 %67, 0, !dbg !4112
  br i1 %68, label %72, label %69, !dbg !4114

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4115
  %71 = zext i8 %70 to i32, !dbg !4115
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !4115
  br label %82, !dbg !4121

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4122
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4122
  %74 = load i8*, i8** %40, align 4, !dbg !4127
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !4129
  %76 = icmp eq i32 %75, 0, !dbg !4129
  br i1 %76, label %81, label %77, !dbg !4130

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4131
  %79 = zext i8 %78 to i32, !dbg !4131
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !4131
  %80 = load i8*, i8** %40, align 4, !dbg !4137
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !4138
  br label %82, !dbg !4139

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !4140
  br label %82, !dbg !4145

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4047), !dbg !4146
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4147
  br label %83, !dbg !4148

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4148
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !4148
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !4148
  ret void, !dbg !4148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4149 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4151, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4152, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !4153, metadata !DIExpression()), !dbg !4154
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4155
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4155
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4156
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4157
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4158
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4158
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4158
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !4159
  ret i32 %9, !dbg !4160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !4161 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4163, metadata !DIExpression()), !dbg !4175
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4176
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4176
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4164, metadata !DIExpression()), !dbg !4177
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4177
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4178
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4178
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4168, metadata !DIExpression()), !dbg !4179
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4179
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4180
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4180
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4170, metadata !DIExpression()), !dbg !4181
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4182
  store i64 0, i64* %11, align 8, !dbg !4182
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4183
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4183
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4182
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4182
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4182
  store i8* null, i8** %14, align 8, !dbg !4182
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4182
  store i8* null, i8** %15, align 4, !dbg !4182
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4182
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4184
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4185
  store i16 16, i16* %18, align 8, !dbg !4185
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4185
  store i16 12, i16* %19, align 2, !dbg !4185
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4182
  store i16 16, i16* %20, align 4, !dbg !4182
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4182
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4186
  %23 = trunc i32 %22 to i16, !dbg !4186
  store i16 %23, i16* %21, align 2, !dbg !4182
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4187
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4187
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4171, metadata !DIExpression()), !dbg !4188
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4189
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4189
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4189
  store i32 42, i32* %26, align 4, !dbg !4189
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4189
  store i8* %8, i8** %27, align 4, !dbg !4189
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4189
  store i32 60, i32* %28, align 4, !dbg !4189
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4189
  store i32 0, i32* %29, align 4, !dbg !4189
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4189
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4189
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4190
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4190
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4172, metadata !DIExpression()), !dbg !4191
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4192
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4192
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4192
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4192
  store i32 20, i32* %34, align 4, !dbg !4192
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4192
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4193
  store i8* %36, i8** %35, align 4, !dbg !4192
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4194
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4194
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4173, metadata !DIExpression()), !dbg !4195
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4196
  store i8* %8, i8** %38, align 4, !dbg !4196
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4196
  store i32 42, i32* %39, align 4, !dbg !4196
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4196
  store i8* %9, i8** %40, align 4, !dbg !4196
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4196
  store i32 44, i32* %41, align 4, !dbg !4196
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4196
  store i32 0, i32* %42, align 4, !dbg !4196
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4196
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4196
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4197
  %45 = icmp eq i32 %44, 0, !dbg !4197
  br i1 %45, label %46, label %83, !dbg !4199

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4200
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4201
  %48 = icmp eq i32 %47, 0, !dbg !4201
  br i1 %48, label %52, label %49, !dbg !4203

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4204
  %51 = zext i8 %50 to i32, !dbg !4204
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4204
  br label %82, !dbg !4210

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4211
  %54 = zext i8 %53 to i32, !dbg !4211
  %55 = load i32, i32* %29, align 4, !dbg !4211
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4211
  %56 = load i8*, i8** %27, align 4, !dbg !4216
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4218
  %58 = icmp eq i32 %57, 0, !dbg !4218
  br i1 %58, label %63, label %59, !dbg !4219

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4220
  %61 = zext i8 %60 to i32, !dbg !4220
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4220
  %62 = load i8*, i8** %27, align 4, !dbg !4226
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4227
  br label %82, !dbg !4228

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4229
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4234
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4235
  %65 = icmp eq i32 %64, 0, !dbg !4235
  br i1 %65, label %66, label %83, !dbg !4237

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4238
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4239
  %68 = icmp eq i32 %67, 0, !dbg !4239
  br i1 %68, label %72, label %69, !dbg !4241

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4242
  %71 = zext i8 %70 to i32, !dbg !4242
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4242
  br label %82, !dbg !4248

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4249
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4249
  %74 = load i8*, i8** %40, align 4, !dbg !4254
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4256
  %76 = icmp eq i32 %75, 0, !dbg !4256
  br i1 %76, label %81, label %77, !dbg !4257

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4258
  %79 = zext i8 %78 to i32, !dbg !4258
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4258
  %80 = load i8*, i8** %40, align 4, !dbg !4264
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4265
  br label %82, !dbg !4266

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4267
  br label %82, !dbg !4272

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4174), !dbg !4273
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4274
  br label %83, !dbg !4275

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4275
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4275
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4275
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4275
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4275
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4275
  ret void, !dbg !4275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4276 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4278, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4279, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4280, metadata !DIExpression()), !dbg !4281
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4282
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4282
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4283
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4284
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4285
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4285
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4285
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4286
  ret i32 %9, !dbg !4287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4288 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4300
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4290, metadata !DIExpression()), !dbg !4301
  %2 = icmp eq %struct.device* %1, null, !dbg !4302
  br i1 %2, label %3, label %6, !dbg !4304

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4305
  %5 = zext i8 %4 to i32, !dbg !4305
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4305
  br label %23, !dbg !4311

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4291, metadata !DIExpression()), !dbg !4312
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4313
  %8 = icmp eq i32 %7, 0, !dbg !4313
  br i1 %8, label %12, label %9, !dbg !4315

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4316
  %11 = zext i8 %10 to i32, !dbg !4316
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4316
  br label %23, !dbg !4322

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4323
  %14 = zext i8 %13 to i32, !dbg !4323
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4323
  call void @llvm.dbg.value(metadata i32 0, metadata !4299, metadata !DIExpression()), !dbg !4301
  br label %15, !dbg !4328

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4299, metadata !DIExpression()), !dbg !4301
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4330
  %18 = load i8*, i8** %17, align 4, !dbg !4332
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4332
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4338
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4338
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4339
  %21 = add nuw nsw i32 %16, 1, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %21, metadata !4299, metadata !DIExpression()), !dbg !4301
  %22 = icmp eq i32 %21, 5, !dbg !4328
  br i1 %22, label %23, label %15, !dbg !4328, !llvm.loop !4341

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4344 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4349, metadata !DIExpression()), !dbg !4350
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4351, !srcloc !4353
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4354
  ret %struct.device* %1, !dbg !4355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4356 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %0, metadata !4367, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %1, metadata !4368, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %2, metadata !4369, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %3, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %0, metadata !4372, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %0, metadata !4373, metadata !DIExpression()), !dbg !4433
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4434
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4434
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4376, metadata !DIExpression()), !dbg !4435
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4436
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4436
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4377, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 0, metadata !4378, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4379, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4380, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 -1, metadata !4381, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 0, metadata !4384, metadata !DIExpression()), !dbg !4433
  %12 = and i32 %2, 4, !dbg !4438
  %13 = icmp eq i32 %12, 0, !dbg !4439
  call void @llvm.dbg.value(metadata i1 %13, metadata !4385, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4433
  %14 = lshr i32 %2, 3, !dbg !4440
  %15 = and i32 %14, 7, !dbg !4440
  %16 = add nuw nsw i32 %15, 1, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %16, metadata !4386, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 0, metadata !4387, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %0, metadata !4388, metadata !DIExpression()), !dbg !4433
  %17 = ptrtoint i8* %0 to i32, !dbg !4442
  %18 = and i32 %17, 3, !dbg !4444
  %19 = icmp eq i32 %18, 0, !dbg !4444
  br i1 %19, label %20, label %316, !dbg !4445

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4446
  call void @llvm.dbg.value(metadata i8* %21, metadata !4373, metadata !DIExpression()), !dbg !4433
  %22 = icmp eq i8* %0, null, !dbg !4447
  %23 = and i32 %1, 7, !dbg !4449
  %24 = sub nuw nsw i32 8, %23, !dbg !4449
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4449
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4449
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %27, metadata !4368, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %26, metadata !4373, metadata !DIExpression()), !dbg !4433
  br i1 %22, label %33, label %28, !dbg !4450

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4452
  %30 = sub i32 4, %17, !dbg !4452
  %31 = add i32 %30, %29, !dbg !4453
  %32 = icmp ugt i32 %31, %27, !dbg !4454
  br i1 %32, label %316, label %33, !dbg !4455

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4456
  call void @llvm.dbg.value(metadata i8* %34, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %3, metadata !4383, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 4, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 4, metadata !4374, metadata !DIExpression()), !dbg !4433
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4457

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %42, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %43, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %44, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %45, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %72, metadata !4381, metadata !DIExpression()), !dbg !4433
  br i1 %46, label %73, label %47, !dbg !4458

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4459
  %49 = zext i1 %48 to i32, !dbg !4463
  %50 = add nsw i32 %72, %49, !dbg !4463
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4463
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %52, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %51, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %50, metadata !4381, metadata !DIExpression()), !dbg !4433
  br label %53, !dbg !4464

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %40, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %58, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %57, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %56, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %54, metadata !4381, metadata !DIExpression()), !dbg !4433
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4465
  call void @llvm.dbg.value(metadata i8* %60, metadata !4370, metadata !DIExpression()), !dbg !4433
  %61 = load i8, i8* %60, align 1, !dbg !4467
  %62 = icmp eq i8 %61, 0, !dbg !4468
  br i1 %62, label %223, label %63, !dbg !4469, !llvm.loop !4470

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4458

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4473

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4384, metadata !DIExpression()), !dbg !4433
  %75 = add nsw i32 %72, -1, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %75, metadata !4381, metadata !DIExpression()), !dbg !4433
  br label %53, !dbg !4475

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4476

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 4, metadata !4374, metadata !DIExpression()), !dbg !4433
  br label %53, !dbg !4477

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 4, metadata !4374, metadata !DIExpression()), !dbg !4433
  br label %53, !dbg !4478

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4479
  %81 = icmp eq i8 %80, 108, !dbg !4481
  br i1 %81, label %82, label %109, !dbg !4482

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4483
  %84 = load i8, i8* %83, align 1, !dbg !4483
  %85 = icmp eq i8 %84, 108, !dbg !4486
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4487
  %89 = add i32 %88, 7, !dbg !4487
  %90 = and i32 %89, -8, !dbg !4487
  %91 = inttoptr i32 %90 to i8*, !dbg !4487
  %92 = inttoptr i32 %90 to double*, !dbg !4487
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4487
  %94 = load double, double* %92, align 8, !dbg !4487
  call void @llvm.dbg.value(metadata i8* %93, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 8, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 8, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata double %94, metadata !4401, metadata !DIExpression()), !dbg !4489
  %95 = ptrtoint i8* %43 to i32, !dbg !4490
  %96 = add i32 %95, 7, !dbg !4490
  %97 = and i32 %96, -8, !dbg !4490
  %98 = inttoptr i32 %97 to i8*, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %98, metadata !4373, metadata !DIExpression()), !dbg !4433
  br i1 %22, label %104, label %99, !dbg !4492

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4493
  %101 = icmp ugt i32 %100, %194, !dbg !4497
  br i1 %101, label %316, label %102, !dbg !4498

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4499
  store double %94, double* %103, align 8, !dbg !4499
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4502
  call void @llvm.dbg.value(metadata i8* %105, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4384, metadata !DIExpression()), !dbg !4433
  br label %53, !dbg !4503

107:                                              ; preds = %73, %73
  br label %109, !dbg !4504

108:                                              ; preds = %73
  br label %109, !dbg !4504

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4433
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4433
  call void @llvm.dbg.value(metadata i32 %113, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %112, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4387, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  %114 = ptrtoint i8* %43 to i32, !dbg !4504
  %115 = add i32 %114, -1, !dbg !4504
  %116 = add i32 %115, %112, !dbg !4504
  %117 = sub i32 0, %112, !dbg !4504
  %118 = and i32 %116, %117, !dbg !4504
  %119 = inttoptr i32 %118 to i8*, !dbg !4505
  call void @llvm.dbg.value(metadata i8* %119, metadata !4373, metadata !DIExpression()), !dbg !4433
  br i1 %22, label %124, label %120, !dbg !4506

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4508
  %122 = add i32 %121, %118, !dbg !4509
  %123 = icmp ugt i32 %122, %194, !dbg !4510
  br i1 %123, label %316, label %124, !dbg !4511

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4512

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4505
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4513
  call void @llvm.dbg.value(metadata i8* %127, metadata !4371, metadata !DIExpression()), !dbg !4433
  %128 = bitcast i8* %41 to i8**, !dbg !4513
  %129 = load i8*, i8** %128, align 4, !dbg !4513
  call void @llvm.dbg.value(metadata i8* %129, metadata !4383, metadata !DIExpression()), !dbg !4433
  br label %130, !dbg !4514

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4515
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4516
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4433
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4517
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4433
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4518
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4433
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4433
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4433
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4433
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4519
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %142, metadata !4368, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %141, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %140, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %139, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %138, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %137, metadata !4378, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %136, metadata !4386, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %135, metadata !4379, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %133, metadata !4383, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %132, metadata !4381, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %131, metadata !4380, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.label(metadata !4432), !dbg !4521
  br i1 %22, label %146, label %144, !dbg !4522

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4523
  store i8* %133, i8** %145, align 4, !dbg !4526
  br label %146, !dbg !4527

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4528
  call void @llvm.dbg.value(metadata i32 %147, metadata !4386, metadata !DIExpression()), !dbg !4433
  %148 = icmp sgt i32 %136, 0, !dbg !4529
  br i1 %148, label %152, label %149, !dbg !4530

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4531
  %151 = zext i1 %150 to i32, !dbg !4531
  br label %152, !dbg !4530

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4530
  %154 = icmp eq i32 %153, 0, !dbg !4530
  call void @llvm.dbg.value(metadata i1 %154, metadata !4410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4532
  call void @llvm.dbg.value(metadata i1 %36, metadata !4413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4532
  %155 = or i1 %36, %154, !dbg !4533
  br i1 %155, label %156, label %190, !dbg !4533

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4534
  %158 = sub i32 %157, %17, !dbg !4534
  %159 = lshr i32 %158, 2, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %159, metadata !4414, metadata !DIExpression()), !dbg !4536
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4537
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4537
  br i1 %163, label %316, label %164, !dbg !4537

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4539

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4540
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4543
  store i8 %166, i8* %167, align 1, !dbg !4544
  %168 = trunc i32 %132 to i8, !dbg !4545
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4546
  store i8 %168, i8* %169, align 1, !dbg !4547
  br i1 %154, label %173, label %170, !dbg !4548

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4549
  store i8 %171, i8* %167, align 1, !dbg !4549
  %172 = add i32 %131, 1, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %172, metadata !4380, metadata !DIExpression()), !dbg !4433
  br label %185, !dbg !4553

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %174, metadata !4379, metadata !DIExpression()), !dbg !4433
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4556

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %177, metadata !4368, metadata !DIExpression()), !dbg !4433
  br label %185, !dbg !4560

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4561

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %180, metadata !4368, metadata !DIExpression()), !dbg !4433
  br label %185, !dbg !4565

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4566
  %183 = add i32 %142, 2, !dbg !4568
  %184 = add i32 %183, %182, !dbg !4569
  call void @llvm.dbg.value(metadata i32 %184, metadata !4368, metadata !DIExpression()), !dbg !4433
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4433
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4433
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4433
  call void @llvm.dbg.value(metadata i32 %188, metadata !4368, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %187, metadata !4379, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %186, metadata !4380, metadata !DIExpression()), !dbg !4433
  %189 = add nuw nsw i32 %137, 1, !dbg !4570
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 undef, metadata !4378, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 undef, metadata !4379, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 undef, metadata !4380, metadata !DIExpression()), !dbg !4433
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4515
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4517
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4518
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4519
  call void @llvm.dbg.value(metadata i32 %194, metadata !4368, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %193, metadata !4378, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %192, metadata !4379, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %191, metadata !4380, metadata !DIExpression()), !dbg !4433
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %195, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %143, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %141, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %139, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %138, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4387, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %132, metadata !4381, metadata !DIExpression()), !dbg !4433
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4465
  call void @llvm.dbg.value(metadata i8* %196, metadata !4370, metadata !DIExpression()), !dbg !4433
  %197 = load i8, i8* %196, align 1, !dbg !4467
  %198 = icmp eq i8 %197, 0, !dbg !4468
  br i1 %198, label %223, label %63, !dbg !4469

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4572

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4573
  call void @llvm.dbg.value(metadata i8* %201, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 undef, metadata !4417, metadata !DIExpression()), !dbg !4574
  br i1 %22, label %216, label %202, !dbg !4575

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4573
  %204 = load i32, i32* %203, align 4, !dbg !4573
  call void @llvm.dbg.value(metadata i32 %204, metadata !4417, metadata !DIExpression()), !dbg !4574
  %205 = inttoptr i32 %118 to i32*, !dbg !4576
  store i32 %204, i32* %205, align 4, !dbg !4579
  br label %216, !dbg !4580

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4581
  %208 = add i32 %207, 7, !dbg !4581
  %209 = and i32 %208, -8, !dbg !4581
  %210 = inttoptr i32 %209 to i8*, !dbg !4581
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4581
  call void @llvm.dbg.value(metadata i8* %211, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i64 undef, metadata !4423, metadata !DIExpression()), !dbg !4582
  br i1 %22, label %216, label %212, !dbg !4583

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4581
  %214 = load i64, i64* %213, align 8, !dbg !4581
  call void @llvm.dbg.value(metadata i64 %214, metadata !4423, metadata !DIExpression()), !dbg !4582
  %215 = inttoptr i32 %118 to i64*, !dbg !4584
  store i64 %214, i64* %215, align 8, !dbg !4589
  br label %216, !dbg !4590

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4591
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %218, metadata !4371, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %40, metadata !4370, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %219, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %113, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %112, metadata !4375, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4387, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 poison, metadata !4384, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %72, metadata !4381, metadata !DIExpression()), !dbg !4433
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4465
  call void @llvm.dbg.value(metadata i8* %220, metadata !4370, metadata !DIExpression()), !dbg !4433
  %221 = load i8, i8* %220, align 1, !dbg !4467
  %222 = icmp eq i8 %221, 0, !dbg !4468
  br i1 %222, label %223, label %38, !dbg !4469

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4592
  %225 = ptrtoint i8* %224 to i32, !dbg !4593
  %226 = sub i32 %225, %17, !dbg !4593
  %227 = lshr i32 %226, 2, !dbg !4595
  %228 = icmp ugt i32 %226, 1023, !dbg !4596
  br i1 %228, label %316, label %229, !dbg !4597

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4598

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4599
  %232 = add i32 %231, %226, !dbg !4602
  br label %316, !dbg !4603

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4604
  store i8 %234, i8* %0, align 1, !dbg !4605
  %235 = trunc i32 %192 to i8, !dbg !4606
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4608
  store i8 %236, i8* %238, align 1, !dbg !4610
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4611
  store i8 %237, i8* %239, align 1, !dbg !4612
  %240 = trunc i32 %191 to i8, !dbg !4613
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4614
  store i8 %240, i8* %241, align 1, !dbg !4615
  %242 = icmp eq i32 %191, 0, !dbg !4616
  %243 = xor i1 %242, true, !dbg !4617
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4617
  call void @llvm.dbg.value(metadata i8* %224, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4382, metadata !DIExpression()), !dbg !4433
  br i1 %245, label %246, label %265, !dbg !4617

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4618

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %250, metadata !4382, metadata !DIExpression()), !dbg !4433
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4619
  %252 = load i8, i8* %251, align 1, !dbg !4619
  %253 = icmp sgt i8 %252, -1, !dbg !4621
  br i1 %253, label %261, label %254, !dbg !4622

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4426, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4623
  %255 = ptrtoint i8* %249 to i32, !dbg !4624
  %256 = add i32 %247, %255, !dbg !4626
  %257 = icmp ugt i32 %256, %194, !dbg !4627
  br i1 %257, label %316, label %258, !dbg !4628

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4629
  call void @llvm.dbg.value(metadata i8 %259, metadata !4426, metadata !DIExpression()), !dbg !4623
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4630
  call void @llvm.dbg.value(metadata i8* %260, metadata !4373, metadata !DIExpression()), !dbg !4433
  store i8 %259, i8* %249, align 1, !dbg !4631
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4571
  call void @llvm.dbg.value(metadata i8* %262, metadata !4373, metadata !DIExpression()), !dbg !4433
  %263 = add nuw i32 %250, 1, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %263, metadata !4382, metadata !DIExpression()), !dbg !4433
  %264 = icmp eq i32 %263, %193, !dbg !4633
  br i1 %264, label %265, label %248, !dbg !4618, !llvm.loop !4634

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4571
  call void @llvm.dbg.value(metadata i8* %266, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4382, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %133, metadata !4383, metadata !DIExpression()), !dbg !4433
  %267 = icmp eq i32 %193, 0, !dbg !4636
  br i1 %267, label %312, label %268, !dbg !4639

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4639

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %272, metadata !4383, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %273, metadata !4382, metadata !DIExpression()), !dbg !4433
  br i1 %242, label %278, label %274, !dbg !4640

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4643
  %276 = load i8, i8* %275, align 1, !dbg !4643
  %277 = icmp sgt i8 %276, -1, !dbg !4644
  br i1 %277, label %278, label %307, !dbg !4645

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4646

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4374, metadata !DIExpression()), !dbg !4433
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4647
  %281 = load i8, i8* %280, align 1, !dbg !4647
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %282, metadata !4373, metadata !DIExpression()), !dbg !4433
  store i8 %281, i8* %271, align 1, !dbg !4651
  br label %293, !dbg !4652

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4653
  %285 = load i8, i8* %284, align 1, !dbg !4653
  %286 = zext i8 %285 to i32, !dbg !4653
  %287 = shl nuw nsw i32 %286, 2, !dbg !4655
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4656
  %289 = bitcast i8* %288 to i8**, !dbg !4657
  %290 = load i8*, i8** %289, align 4, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %290, metadata !4383, metadata !DIExpression()), !dbg !4433
  store i8* null, i8** %289, align 4, !dbg !4658
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4659
  %292 = add i32 %291, 1, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %292, metadata !4374, metadata !DIExpression()), !dbg !4433
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4433
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4661
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4433
  call void @llvm.dbg.value(metadata i8* %296, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %295, metadata !4374, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %294, metadata !4383, metadata !DIExpression()), !dbg !4433
  %297 = ptrtoint i8* %296 to i32, !dbg !4662
  %298 = add i32 %269, %295, !dbg !4664
  %299 = add i32 %298, %297, !dbg !4665
  %300 = icmp ugt i32 %299, %194, !dbg !4666
  br i1 %300, label %316, label %301, !dbg !4667

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4668
  %303 = load i8, i8* %302, align 1, !dbg !4668
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4669
  call void @llvm.dbg.value(metadata i8* %304, metadata !4373, metadata !DIExpression()), !dbg !4433
  store i8 %303, i8* %296, align 1, !dbg !4670
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4671
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4672
  call void @llvm.dbg.value(metadata i8* %306, metadata !4373, metadata !DIExpression()), !dbg !4433
  br label %307, !dbg !4673

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4674
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4433
  call void @llvm.dbg.value(metadata i8* %309, metadata !4373, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %308, metadata !4383, metadata !DIExpression()), !dbg !4433
  %310 = add nuw i32 %273, 1, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %310, metadata !4382, metadata !DIExpression()), !dbg !4433
  %311 = icmp eq i32 %310, %193, !dbg !4636
  br i1 %311, label %312, label %270, !dbg !4639, !llvm.loop !4676

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4571
  %314 = ptrtoint i8* %313 to i32, !dbg !4678
  %315 = sub i32 %314, %17, !dbg !4678
  br label %316, !dbg !4679

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4433
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4680
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4680
  ret i32 %317, !dbg !4680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4685, metadata !DIExpression()), !dbg !4686
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4687
  ret i1 %2, !dbg !4688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4689 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4694, metadata !DIExpression()), !dbg !4695
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4696
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4697
  %4 = and i1 %2, %3, !dbg !4697
  ret i1 %4, !dbg !4698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4699 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4703, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata i32 %1, metadata !4704, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata i32 %2, metadata !4705, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata i8* %3, metadata !4706, metadata !DIExpression()), !dbg !4709
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4710
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4710
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4707, metadata !DIExpression()), !dbg !4711
  call void @llvm.va_start(i8* nonnull %6), !dbg !4712
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4713
  %8 = load i32, i32* %7, align 4, !dbg !4713
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4713
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %10, metadata !4708, metadata !DIExpression()), !dbg !4709
  call void @llvm.va_end(i8* nonnull %6), !dbg !4714
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4715
  ret i32 %10, !dbg !4716
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4717 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4729, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4730, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %2, metadata !4731, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %3, metadata !4732, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %3, metadata !4733, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %3, metadata !4734, metadata !DIExpression()), !dbg !4748
  %5 = icmp eq i8* %3, null, !dbg !4749
  br i1 %5, label %45, label %6, !dbg !4751

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4743, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4748
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4752
  %8 = load i8, i8* %7, align 1, !dbg !4752
  %9 = zext i8 %8 to i32, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %9, metadata !4744, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8 undef, metadata !4745, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata i8 undef, metadata !4746, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata i32 0, metadata !4742, metadata !DIExpression()), !dbg !4748
  %10 = icmp eq i8 %8, 0, !dbg !4754
  br i1 %10, label %39, label %11, !dbg !4757

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4758
  call void @llvm.dbg.value(metadata i8 %12, metadata !4743, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %13 = zext i8 %12 to i32, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %13, metadata !4743, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %14 = shl nuw nsw i32 %13, 2, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %14, metadata !4743, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4761
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4762
  %17 = load i8, i8* %16, align 1, !dbg !4762
  call void @llvm.dbg.value(metadata i8 %17, metadata !4745, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %18 = zext i8 %17 to i32, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %18, metadata !4745, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4764
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4765
  %21 = load i8, i8* %20, align 1, !dbg !4765
  call void @llvm.dbg.value(metadata i8 %21, metadata !4746, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %22 = zext i8 %21 to i32, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %22, metadata !4746, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %23 = shl nuw nsw i32 %22, 1, !dbg !4767
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4748
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %24, metadata !4740, metadata !DIExpression()), !dbg !4748
  br label %25, !dbg !4757

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4740, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i32 %27, metadata !4742, metadata !DIExpression()), !dbg !4748
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %28, metadata !4740, metadata !DIExpression()), !dbg !4748
  %29 = load i8, i8* %26, align 1, !dbg !4771
  %30 = zext i8 %29 to i32, !dbg !4771
  call void @llvm.dbg.value(metadata i32 %30, metadata !4747, metadata !DIExpression()), !dbg !4748
  %31 = shl nuw nsw i32 %30, 2, !dbg !4772
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4773
  %33 = bitcast i8* %32 to i8**, !dbg !4774
  call void @llvm.dbg.value(metadata i8** %33, metadata !4741, metadata !DIExpression()), !dbg !4748
  store i8* %28, i8** %33, align 4, !dbg !4775
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4776
  %35 = add i32 %34, 1, !dbg !4777
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %36, metadata !4740, metadata !DIExpression()), !dbg !4748
  %37 = add nuw nsw i32 %27, 1, !dbg !4779
  call void @llvm.dbg.value(metadata i32 %37, metadata !4742, metadata !DIExpression()), !dbg !4748
  %38 = icmp eq i32 %37, %9, !dbg !4754
  br i1 %38, label %39, label %25, !dbg !4757, !llvm.loop !4780

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %40, metadata !4733, metadata !DIExpression()), !dbg !4748
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4783
  %42 = bitcast i8* %41 to i8**, !dbg !4783
  %43 = load i8*, i8** %42, align 1, !dbg !4783
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4784
  br label %45, !dbg !4785

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4748
  ret i32 %46, !dbg !4786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4787 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4791, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4792, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata i8* %2, metadata !4793, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata i8* %3, metadata !4794, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata i8* %4, metadata !4795, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata i8* %4, metadata !4796, metadata !DIExpression()), !dbg !4801
  %6 = ptrtoint i8* %4 to i32, !dbg !4802
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4802
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4802
  ret i32 %8, !dbg !4803
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4808, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i32 %1, metadata !4809, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i8 0, metadata !4811, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i32 0, metadata !4812, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i8 poison, metadata !4811, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i8* %0, metadata !4808, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4813
  %3 = load i8, i8* %0, align 1, !dbg !4814
  call void @llvm.dbg.value(metadata i8 %3, metadata !4810, metadata !DIExpression()), !dbg !4813
  %4 = icmp eq i8 %3, 0, !dbg !4815
  br i1 %4, label %29, label %5, !dbg !4816

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %8, metadata !4812, metadata !DIExpression()), !dbg !4813
  br i1 %9, label %11, label %22, !dbg !4818

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4820
  br i1 %12, label %13, label %17, !dbg !4824

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4825
  br i1 %14, label %29, label %15, !dbg !4828

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4829
  br i1 %16, label %29, label %22, !dbg !4831

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4832
  %19 = xor i1 %18, true, !dbg !4834
  %20 = zext i1 %18 to i32, !dbg !4834
  %21 = add nsw i32 %8, %20, !dbg !4834
  br label %22, !dbg !4834

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %24, metadata !4812, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i8 poison, metadata !4811, metadata !DIExpression()), !dbg !4813
  %25 = icmp eq i8 %6, 37, !dbg !4835
  %26 = xor i1 %25, %23, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %10, metadata !4808, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i8* %10, metadata !4808, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4813
  %27 = load i8, i8* %10, align 1, !dbg !4814
  call void @llvm.dbg.value(metadata i8 %27, metadata !4810, metadata !DIExpression()), !dbg !4813
  %28 = icmp eq i8 %27, 0, !dbg !4815
  br i1 %28, label %29, label %5, !dbg !4816, !llvm.loop !4838

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4813
  ret i1 %30, !dbg !4840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4841 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4845, metadata !DIExpression()), !dbg !4846
  %2 = add i8 %0, -64, !dbg !4847
  %3 = icmp ult i8 %2, 59, !dbg !4847
  ret i1 %3, !dbg !4848
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4849 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4857, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %1, metadata !4858, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4859, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %3, metadata !4860, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %4, metadata !4861, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i16* %5, metadata !4862, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %6, metadata !4863, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %0, metadata !4864, metadata !DIExpression()), !dbg !4926
  %11 = bitcast i8* %0 to i32*, !dbg !4927
  call void @llvm.dbg.value(metadata i32* %11, metadata !4865, metadata !DIExpression()), !dbg !4926
  %12 = and i32 %4, 8, !dbg !4928
  %13 = icmp eq i32 %12, 0, !dbg !4929
  call void @llvm.dbg.value(metadata i1 %13, metadata !4869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %0, metadata !4872, metadata !DIExpression()), !dbg !4926
  %14 = icmp eq i32 %1, 0, !dbg !4930
  br i1 %14, label %15, label %17, !dbg !4931

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4932
  br label %17, !dbg !4931

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4931
  call void @llvm.dbg.value(metadata i32 %18, metadata !4858, metadata !DIExpression()), !dbg !4926
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4933
  %20 = load i8, i8* %19, align 1, !dbg !4933
  %21 = zext i8 %20 to i32, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %21, metadata !4867, metadata !DIExpression()), !dbg !4926
  %22 = icmp ne i8 %20, 0, !dbg !4935
  %23 = and i32 %4, 1, !dbg !4936
  %24 = icmp ne i32 %23, 0, !dbg !4936
  %25 = and i1 %24, %22, !dbg !4936
  call void @llvm.dbg.value(metadata i1 %25, metadata !4871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4926
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4937
  %27 = load i8, i8* %26, align 1, !dbg !4937
  %28 = zext i8 %27 to i32, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %28, metadata !4868, metadata !DIExpression()), !dbg !4926
  %29 = icmp ne i8 %27, 0, !dbg !4939
  %30 = and i32 %4, 2, !dbg !4940
  %31 = icmp ne i32 %30, 0, !dbg !4940
  %32 = and i1 %31, %29, !dbg !4940
  call void @llvm.dbg.value(metadata i1 %32, metadata !4870, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4926
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4941
  br i1 %33, label %38, label %34, !dbg !4941

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4943
  br i1 %35, label %267, label %36, !dbg !4946

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4947
  br label %267, !dbg !4949

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4950
  %40 = zext i8 %39 to i32, !dbg !4951
  %41 = shl nuw nsw i32 %40, 2, !dbg !4952
  call void @llvm.dbg.value(metadata i32 %41, metadata !4866, metadata !DIExpression()), !dbg !4926
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4953
  %43 = bitcast i8* %42 to i8**, !dbg !4954
  %44 = load i8*, i8** %43, align 4, !dbg !4954
  call void @llvm.dbg.value(metadata i8* %44, metadata !4875, metadata !DIExpression()), !dbg !4926
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %45, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 0, metadata !4877, metadata !DIExpression()), !dbg !4926
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4956
  br i1 %46, label %47, label %132, !dbg !4957

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4874, metadata !DIExpression()), !dbg !4926
  br i1 %25, label %48, label %73, !dbg !4958

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %45, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 0, metadata !4877, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 0, metadata !4878, metadata !DIExpression()), !dbg !4959
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4960

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %52, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %53, metadata !4877, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %54, metadata !4878, metadata !DIExpression()), !dbg !4959
  %55 = load i8, i8* %52, align 1, !dbg !4961
  %56 = zext i8 %55 to i32, !dbg !4962
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4962
  %58 = bitcast i32* %57 to i8**, !dbg !4963
  %59 = load i8*, i8** %58, align 4, !dbg !4963
  call void @llvm.dbg.value(metadata i8* %59, metadata !4884, metadata !DIExpression()), !dbg !4964
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %60, metadata !4887, metadata !DIExpression()), !dbg !4964
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4966
  br i1 %62, label %63, label %67, !dbg !4966

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4968
  %65 = add nuw i32 %53, 1, !dbg !4970
  call void @llvm.dbg.value(metadata i32 %65, metadata !4877, metadata !DIExpression()), !dbg !4926
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4971
  store i16 %64, i16* %66, align 2, !dbg !4972
  br label %67, !dbg !4973

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4926
  call void @llvm.dbg.value(metadata i32 %68, metadata !4877, metadata !DIExpression()), !dbg !4926
  %69 = add nsw i32 %60, %51, !dbg !4974
  call void @llvm.dbg.value(metadata i32 %69, metadata !4874, metadata !DIExpression()), !dbg !4926
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4975
  call void @llvm.dbg.value(metadata i8* %70, metadata !4876, metadata !DIExpression()), !dbg !4926
  %71 = add nuw nsw i32 %54, 1, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %71, metadata !4878, metadata !DIExpression()), !dbg !4959
  %72 = icmp eq i32 %71, %21, !dbg !4977
  br i1 %72, label %79, label %50, !dbg !4960, !llvm.loop !4978

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4980
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4980
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4980
  br label %79, !dbg !4980

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4983
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4926
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4984
  call void @llvm.dbg.value(metadata i1 undef, metadata !4888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4985
  call void @llvm.dbg.value(metadata i32 0, metadata !4889, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %82, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %81, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %80, metadata !4877, metadata !DIExpression()), !dbg !4926
  %83 = icmp eq i8 %27, 0, !dbg !4987
  br i1 %83, label %267, label %84, !dbg !4988

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4989
  %86 = icmp eq i32 %85, 0, !dbg !4990
  call void @llvm.dbg.value(metadata i1 %86, metadata !4888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4985
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4988

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %93, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %94, metadata !4877, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %95, metadata !4889, metadata !DIExpression()), !dbg !4986
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %96, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 undef, metadata !4891, metadata !DIExpression()), !dbg !4992
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %97, metadata !4876, metadata !DIExpression()), !dbg !4926
  %98 = load i8, i8* %96, align 1, !dbg !4994
  call void @llvm.dbg.value(metadata i8 %98, metadata !4894, metadata !DIExpression()), !dbg !4992
  %99 = zext i8 %98 to i32, !dbg !4995
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4995
  %101 = bitcast i32* %100 to i8**, !dbg !4996
  %102 = load i8*, i8** %101, align 4, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %102, metadata !4895, metadata !DIExpression()), !dbg !4992
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4997
  call void @llvm.dbg.value(metadata i1 %103, metadata !4896, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4992
  br i1 %13, label %110, label %104, !dbg !4998

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !5000
  call void @llvm.dbg.value(metadata i8 %105, metadata !4891, metadata !DIExpression()), !dbg !4992
  %106 = zext i8 %105 to i32, !dbg !5001
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !5002
  br i1 %107, label %108, label %110, !dbg !5003

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !5004
  %109 = add nsw i32 %92, -2, !dbg !5010
  call void @llvm.dbg.value(metadata i32 %109, metadata !4874, metadata !DIExpression()), !dbg !4926
  br label %127, !dbg !5011

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !5012

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !5013

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %113, metadata !4874, metadata !DIExpression()), !dbg !4926
  br label %127, !dbg !5018

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !5019

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4922), !dbg !5020
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %116, metadata !4897, metadata !DIExpression()), !dbg !4992
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !5022
  br i1 %118, label %119, label %123, !dbg !5022

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !5024
  %121 = add nuw i32 %94, 1, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %121, metadata !4877, metadata !DIExpression()), !dbg !4926
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !5027
  store i16 %120, i16* %122, align 2, !dbg !5028
  br label %123, !dbg !5029

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4926
  call void @llvm.dbg.value(metadata i32 %124, metadata !4877, metadata !DIExpression()), !dbg !4926
  %125 = add i32 %92, -1, !dbg !5030
  %126 = add i32 %125, %116, !dbg !5031
  call void @llvm.dbg.value(metadata i32 %126, metadata !4874, metadata !DIExpression()), !dbg !4926
  br label %127, !dbg !5032

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4926
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4992
  call void @llvm.dbg.value(metadata i32 %129, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %128, metadata !4877, metadata !DIExpression()), !dbg !4926
  %130 = add nuw nsw i32 %95, 1, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %97, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %130, metadata !4889, metadata !DIExpression()), !dbg !4986
  %131 = icmp eq i32 %130, %28, !dbg !4987
  br i1 %131, label %267, label %91, !dbg !4988, !llvm.loop !5034

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4899, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4900, metadata !DIExpression()), !dbg !5037
  br i1 %25, label %133, label %135, !dbg !5038

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4901, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 0, metadata !4902, metadata !DIExpression()), !dbg !4926
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %134, metadata !4903, metadata !DIExpression()), !dbg !4926
  br label %140, !dbg !5042

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !5043
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !5043

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4903, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 undef, metadata !4902, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 0, metadata !4901, metadata !DIExpression()), !dbg !4926
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !5045
  br label %145, !dbg !5048

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %148, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 0, metadata !4905, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8 %146, metadata !4902, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 %147, metadata !4901, metadata !DIExpression()), !dbg !4926
  %149 = icmp eq i8 %27, 0, !dbg !5051
  br i1 %149, label %150, label %152, !dbg !5052

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !5053
  br label %157, !dbg !5052

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !5052

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !5053
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !5054
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !5055
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4926
  call void @llvm.dbg.value(metadata i8 undef, metadata !4898, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4926
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5056
  %163 = load i8, i8* %162, align 1, !dbg !5056
  %164 = zext i8 %159 to i32, !dbg !5057
  %165 = add i8 %163, %159, !dbg !5058
  call void @llvm.dbg.value(metadata i8 %165, metadata !4898, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4926
  %166 = icmp eq i32 %30, 0, !dbg !5059
  %167 = lshr i8 %160, 1, !dbg !5060
  %168 = select i1 %166, i8 %167, i8 0, !dbg !5060
  call void @llvm.dbg.value(metadata i8 %168, metadata !4898, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4926
  %169 = icmp eq i32 %23, 0, !dbg !5061
  %170 = icmp eq i32 %158, 0, !dbg !5053
  %171 = select i1 %170, i8 0, i8 %160, !dbg !5053
  %172 = select i1 %169, i8 %171, i8 0, !dbg !5053
  call void @llvm.dbg.value(metadata i8 %172, metadata !4898, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4926
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4913, metadata !DIExpression()), !dbg !5062
  %173 = load i32, i32* %11, align 1, !dbg !5063
  store i8 %165, i8* %162, align 1, !dbg !5064
  store i8 %172, i8* %19, align 1, !dbg !5064
  store i8 %168, i8* %26, align 1, !dbg !5064
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %174, metadata !4904, metadata !DIExpression()), !dbg !4926
  %175 = icmp slt i32 %174, 0, !dbg !5066
  br i1 %175, label %267, label %220, !dbg !5068

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %178, metadata !4905, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8 %179, metadata !4902, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 %180, metadata !4901, metadata !DIExpression()), !dbg !4926
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %181, metadata !4876, metadata !DIExpression()), !dbg !4926
  %182 = load i8, i8* %177, align 1, !dbg !5070
  call void @llvm.dbg.value(metadata i8 %182, metadata !4907, metadata !DIExpression()), !dbg !5071
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %183, metadata !4876, metadata !DIExpression()), !dbg !4926
  %184 = load i8, i8* %181, align 1, !dbg !5073
  call void @llvm.dbg.value(metadata i8 %184, metadata !4910, metadata !DIExpression()), !dbg !5071
  %185 = zext i8 %184 to i32, !dbg !5074
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !5074
  %187 = bitcast i32* %186 to i8**, !dbg !5075
  %188 = load i8*, i8** %187, align 4, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %188, metadata !4911, metadata !DIExpression()), !dbg !5071
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !5076
  call void @llvm.dbg.value(metadata i1 %189, metadata !4912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5071
  br i1 %13, label %193, label %190, !dbg !5077

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !5079
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !5080
  br i1 %192, label %215, label %193, !dbg !5081

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !5082

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !5083

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !5086
  call void @llvm.dbg.value(metadata i8 %196, metadata !4901, metadata !DIExpression()), !dbg !4926
  br label %208, !dbg !5089

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !5090

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !5091
  call void @llvm.dbg.value(metadata i8 %199, metadata !4902, metadata !DIExpression()), !dbg !4926
  br label %208, !dbg !5094

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !5095

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !5097
  call void @llvm.dbg.value(metadata i8 %202, metadata !4901, metadata !DIExpression()), !dbg !4926
  br label %208, !dbg !5100

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !5101
  call void @llvm.dbg.value(metadata i8 %204, metadata !4902, metadata !DIExpression()), !dbg !4926
  %205 = zext i8 %179 to i32, !dbg !5103
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !5103
  store i8 %182, i8* %206, align 1, !dbg !5104
  %207 = add i8 %179, 2, !dbg !5105
  call void @llvm.dbg.value(metadata i8 %207, metadata !4902, metadata !DIExpression()), !dbg !4926
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !5106
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !5106
  store i8 %184, i8* %214, align 1, !dbg !5106
  br label %215, !dbg !5107

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4926
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !5055
  call void @llvm.dbg.value(metadata i8 %217, metadata !4902, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8 %216, metadata !4901, metadata !DIExpression()), !dbg !4926
  %218 = add nuw nsw i32 %178, 1, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %183, metadata !4876, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %218, metadata !4905, metadata !DIExpression()), !dbg !5050
  %219 = icmp eq i32 %218, %28, !dbg !5051
  br i1 %219, label %157, label %176, !dbg !5052, !llvm.loop !5108

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !5060
  call void @llvm.dbg.value(metadata i32 %174, metadata !4874, metadata !DIExpression()), !dbg !4926
  store i32 %173, i32* %11, align 1, !dbg !5110
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5111
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !5112
  call void @llvm.dbg.value(metadata i32 %223, metadata !4904, metadata !DIExpression()), !dbg !4926
  %224 = icmp slt i32 %223, 0, !dbg !5113
  br i1 %224, label %267, label %225, !dbg !5115

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4926
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !5116
  %228 = add nuw nsw i32 %41, %21, !dbg !5116
  %229 = sub i32 %227, %228, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %229, metadata !4914, metadata !DIExpression()), !dbg !4926
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %230, metadata !4904, metadata !DIExpression()), !dbg !4926
  %231 = icmp slt i32 %230, 0, !dbg !5118
  br i1 %231, label %267, label %232, !dbg !5120

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !5121
  call void @llvm.dbg.value(metadata i32 %233, metadata !4874, metadata !DIExpression()), !dbg !4926
  %234 = add nuw nsw i32 %233, %230, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %234, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 0, metadata !4915, metadata !DIExpression()), !dbg !5123
  %235 = icmp eq i8 %159, 0, !dbg !5124
  br i1 %235, label %264, label %236, !dbg !5125

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !5125

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4915, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %240, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5126
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !5127
  %242 = load i8, i8* %241, align 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8 %242, metadata !4917, metadata !DIExpression()), !dbg !5128
  store i8 %242, i8* %10, align 1, !dbg !5129
  %243 = zext i8 %242 to i32, !dbg !5130
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !5130
  %245 = bitcast i32* %244 to i8**, !dbg !5131
  %246 = load i8*, i8** %245, align 4, !dbg !5131
  call void @llvm.dbg.value(metadata i8* %246, metadata !4920, metadata !DIExpression()), !dbg !5128
  br i1 %237, label %250, label %247, !dbg !5132

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !5133
  %249 = load i16, i16* %248, align 2, !dbg !5133
  br label %250, !dbg !5132

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !5132
  call void @llvm.dbg.value(metadata i32 undef, metadata !4921, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5128
  call void @llvm.dbg.value(metadata i8* %10, metadata !4917, metadata !DIExpression(DW_OP_deref)), !dbg !5128
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !5134
  call void @llvm.dbg.value(metadata i32 %252, metadata !4904, metadata !DIExpression()), !dbg !4926
  %253 = icmp slt i32 %252, 0, !dbg !5135
  br i1 %253, label %257, label %254, !dbg !5137

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4921, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4926
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %255, metadata !4904, metadata !DIExpression()), !dbg !4926
  %256 = icmp slt i32 %255, 0, !dbg !5139
  br i1 %256, label %257, label %259, !dbg !5141

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5142
  call void @llvm.dbg.value(metadata i32 undef, metadata !4874, metadata !DIExpression()), !dbg !4926
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5143
  call void @llvm.dbg.value(metadata i32 %260, metadata !4874, metadata !DIExpression()), !dbg !4926
  %261 = add nsw i32 %260, %255, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %261, metadata !4874, metadata !DIExpression()), !dbg !4926
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5142
  %262 = add nuw nsw i32 %239, 1, !dbg !5145
  call void @llvm.dbg.value(metadata i32 %262, metadata !4915, metadata !DIExpression()), !dbg !5123
  %263 = icmp eq i32 %262, %164, !dbg !5124
  br i1 %263, label %264, label %238, !dbg !5125, !llvm.loop !5146

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !5122
  call void @llvm.dbg.value(metadata i32 %265, metadata !4874, metadata !DIExpression()), !dbg !4926
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !5148
  br label %267, !dbg !5149

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4926
  ret i32 %268, !dbg !5150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5151 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5155, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8* %0, metadata !5156, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8* %0, metadata !5157, metadata !DIExpression()), !dbg !5163
  %2 = load i8, i8* %0, align 1, !dbg !5164
  %3 = zext i8 %2 to i32, !dbg !5164
  %4 = shl nuw nsw i32 %3, 2, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %4, metadata !5158, metadata !DIExpression()), !dbg !5163
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5166
  %6 = load i8, i8* %5, align 1, !dbg !5166
  %7 = zext i8 %6 to i32, !dbg !5166
  call void @llvm.dbg.value(metadata i32 %7, metadata !5159, metadata !DIExpression()), !dbg !5163
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5167
  %9 = load i8, i8* %8, align 1, !dbg !5167
  %10 = zext i8 %9 to i32, !dbg !5167
  call void @llvm.dbg.value(metadata i32 %10, metadata !5160, metadata !DIExpression()), !dbg !5163
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %11, metadata !5156, metadata !DIExpression()), !dbg !5163
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5169
  call void @llvm.dbg.value(metadata i8* %12, metadata !5156, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i32 0, metadata !5161, metadata !DIExpression()), !dbg !5170
  %13 = icmp eq i8 %6, 0, !dbg !5171
  br i1 %13, label %14, label %19, !dbg !5173

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5163
  %16 = ptrtoint i8* %15 to i32, !dbg !5174
  %17 = ptrtoint i8* %0 to i32, !dbg !5174
  %18 = sub i32 %16, %17, !dbg !5174
  ret i32 %18, !dbg !5175

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5161, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %21, metadata !5156, metadata !DIExpression()), !dbg !5163
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5176
  call void @llvm.dbg.value(metadata i8* %22, metadata !5156, metadata !DIExpression()), !dbg !5163
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5178
  %24 = add i32 %23, 1, !dbg !5179
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5180
  call void @llvm.dbg.value(metadata i8* %25, metadata !5156, metadata !DIExpression()), !dbg !5163
  %26 = add nuw nsw i32 %20, 1, !dbg !5181
  call void @llvm.dbg.value(metadata i32 %26, metadata !5161, metadata !DIExpression()), !dbg !5170
  %27 = icmp eq i32 %26, %7, !dbg !5171
  br i1 %27, label %14, label %19, !dbg !5173, !llvm.loop !5182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5184 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5188, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i8* %1, metadata !5189, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i8* %2, metadata !5190, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i16 %3, metadata !5191, metadata !DIExpression()), !dbg !5192
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5193
  br i1 %5, label %6, label %9, !dbg !5195

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5196
  %8 = add i32 %7, 1, !dbg !5198
  br label %20, !dbg !5199

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5200
  br i1 %10, label %13, label %11, !dbg !5201

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5201
  br label %16, !dbg !5201

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5202
  %15 = add i32 %14, 1, !dbg !5203
  br label %16, !dbg !5201

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5201
  %18 = and i32 %17, 65535, !dbg !5204
  call void @llvm.dbg.value(metadata i32 %17, metadata !5191, metadata !DIExpression()), !dbg !5192
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5205
  br label %20, !dbg !5206

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5192
  ret i32 %21, !dbg !5207
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5210, metadata !DIExpression()), !dbg !5211
  ret i32 0, !dbg !5212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5213 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5217, metadata !DIExpression()), !dbg !5218
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5219
  ret void, !dbg !5220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5221 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5224
  ret i8* %1, !dbg !5225
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5226 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5237, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i8* %0, metadata !5236, metadata !DIExpression()), !dbg !5248
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5249
  ret void, !dbg !5251
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5256, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8* %1, metadata !5257, metadata !DIExpression()), !dbg !5258
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5259
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5259
  ret i32 %4, !dbg !5260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5261 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5268, metadata !DIExpression()), !dbg !5269
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5265, metadata !DIExpression()), !dbg !5269
  call void @llvm.dbg.value(metadata i8* %1, metadata !5266, metadata !DIExpression()), !dbg !5269
  call void @llvm.dbg.value(metadata i8* %2, metadata !5267, metadata !DIExpression()), !dbg !5269
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5270
  ret void, !dbg !5271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5272 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5276, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i32 %1, metadata !5277, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i32 0, metadata !5278, metadata !DIExpression()), !dbg !5279
  %3 = icmp eq i32 %1, 0, !dbg !5280
  br i1 %3, label %13, label %4, !dbg !5283

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5278, metadata !DIExpression()), !dbg !5279
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5284
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5286
  %8 = load i8, i8* %7, align 1, !dbg !5286
  %9 = zext i8 %8 to i32, !dbg !5286
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5284
  %11 = add nuw i32 %5, 1, !dbg !5287
  call void @llvm.dbg.value(metadata i32 %11, metadata !5278, metadata !DIExpression()), !dbg !5279
  %12 = icmp eq i32 %11, %1, !dbg !5280
  br i1 %12, label %13, label %4, !dbg !5283, !llvm.loop !5288

13:                                               ; preds = %4, %2
  ret void, !dbg !5290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5291 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5295, metadata !DIExpression()), !dbg !5297
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5298
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5298
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5296, metadata !DIExpression()), !dbg !5299
  call void @llvm.va_start(i8* nonnull %3), !dbg !5300
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5301
  %5 = load i32, i32* %4, align 4, !dbg !5301
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5301
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5301
  call void @llvm.va_end(i8* nonnull %3), !dbg !5302
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5303
  ret void, !dbg !5303
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5304 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5308, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i32 %1, metadata !5309, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i8* %2, metadata !5310, metadata !DIExpression()), !dbg !5313
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5314
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5311, metadata !DIExpression()), !dbg !5315
  call void @llvm.va_start(i8* nonnull %5), !dbg !5316
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5317
  %7 = load i32, i32* %6, align 4, !dbg !5317
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5317
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %9, metadata !5312, metadata !DIExpression()), !dbg !5313
  call void @llvm.va_end(i8* nonnull %5), !dbg !5318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5319
  ret i32 %9, !dbg !5320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5321 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5328, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i8* %0, metadata !5325, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %1, metadata !5326, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i8* %2, metadata !5327, metadata !DIExpression()), !dbg !5335
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5336
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5336
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5329, metadata !DIExpression()), !dbg !5337
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5338
  store i8* %0, i8** %7, align 4, !dbg !5338
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5338
  store i32 %1, i32* %8, align 4, !dbg !5338
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5338
  store i32 0, i32* %9, align 4, !dbg !5338
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5339
  %10 = load i32, i32* %9, align 4, !dbg !5340
  %11 = load i32, i32* %8, align 4, !dbg !5342
  %12 = icmp slt i32 %10, %11, !dbg !5343
  br i1 %12, label %13, label %15, !dbg !5344

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5345
  store i8 0, i8* %14, align 1, !dbg !5347
  br label %15, !dbg !5348

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5349
  ret i32 %10, !dbg !5350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5356, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5357, metadata !DIExpression()), !dbg !5358
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5359
  %4 = load i8*, i8** %3, align 4, !dbg !5359
  %5 = icmp eq i8* %4, null, !dbg !5361
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5362
  br i1 %5, label %12, label %8, !dbg !5363

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5364
  %10 = load i32, i32* %9, align 4, !dbg !5364
  %11 = icmp slt i32 %7, %10, !dbg !5365
  br i1 %11, label %15, label %12, !dbg !5366

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5367
  %14 = add nsw i32 %7, 1, !dbg !5369
  store i32 %14, i32* %13, align 4, !dbg !5369
  br label %25, !dbg !5370

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5371
  %17 = icmp eq i32 %7, %16, !dbg !5373
  br i1 %17, label %18, label %21, !dbg !5374

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5375
  store i32 %19, i32* %6, align 4, !dbg !5375
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5377
  store i8 0, i8* %20, align 1, !dbg !5378
  br label %25, !dbg !5379

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5380
  %23 = add nsw i32 %7, 1, !dbg !5382
  store i32 %23, i32* %6, align 4, !dbg !5382
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5383
  store i8 %22, i8* %24, align 1, !dbg !5384
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5385
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5386 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5396, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %1, metadata !5397, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %2, metadata !5398, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %3, metadata !5399, metadata !DIExpression()), !dbg !5400
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5401
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5402
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5403
  unreachable, !dbg !5404
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5405 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5509
  ret %struct.k_thread* %1, !dbg !5510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5516, metadata !DIExpression()), !dbg !5517
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5518, !srcloc !5520
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5521
  ret void, !dbg !5522
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5523 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5524, !srcloc !5526
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5527
  ret %struct.k_thread* %1, !dbg !5528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5529 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5539, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8* %1, metadata !5540, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8* %2, metadata !5541, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %4, metadata !5543, metadata !DIExpression()), !dbg !5668
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5669
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5669
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5544, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i32 0, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i1 undef, metadata !5550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5668
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5671

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5671

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5672
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8* %30, metadata !5541, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %29, metadata !5548, metadata !DIExpression()), !dbg !5668
  %31 = load i8, i8* %30, align 1, !dbg !5673
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5671

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5673
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5674
  call void @llvm.dbg.value(metadata i8* %34, metadata !5541, metadata !DIExpression()), !dbg !5668
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5674
  call void @llvm.dbg.value(metadata i32 %35, metadata !5552, metadata !DIExpression()), !dbg !5675
  %36 = icmp slt i32 %35, 0, !dbg !5676
  %37 = add i32 %29, 1, !dbg !5674
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %36, label %365, label %28, !llvm.loop !5678

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5680
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5557, metadata !DIExpression()), !dbg !5681
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5681
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5600, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5603, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8* %30, metadata !5606, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i32 -1, metadata !5607, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i32 -1, metadata !5608, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8* null, metadata !5609, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8* %14, metadata !5610, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8 0, metadata !5611, metadata !DIExpression()), !dbg !5682
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5683
  call void @llvm.dbg.value(metadata i8* %39, metadata !5541, metadata !DIExpression()), !dbg !5668
  %40 = load i24, i24* %15, align 8, !dbg !5684
  %41 = and i24 %40, 256, !dbg !5684
  %42 = icmp eq i24 %41, 0, !dbg !5684
  br i1 %42, label %51, label %43, !dbg !5686

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5687
  call void @llvm.dbg.value(metadata i8* %44, metadata !5542, metadata !DIExpression()), !dbg !5668
  %45 = bitcast i8* %27 to i32*, !dbg !5687
  %46 = load i32, i32* %45, align 4, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %46, metadata !5607, metadata !DIExpression()), !dbg !5682
  %47 = icmp slt i32 %46, 0, !dbg !5689
  br i1 %47, label %48, label %56, !dbg !5691

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5692
  store i24 %49, i24* %15, align 8, !dbg !5692
  %50 = sub nsw i32 0, %46, !dbg !5694
  call void @llvm.dbg.value(metadata i32 %50, metadata !5607, metadata !DIExpression()), !dbg !5682
  br label %56, !dbg !5695

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5696
  %53 = icmp eq i24 %52, 0, !dbg !5696
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5698
  br label %56, !dbg !5698

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5699
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5682
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %58, metadata !5607, metadata !DIExpression()), !dbg !5682
  %60 = and i24 %57, 1024, !dbg !5699
  %61 = icmp eq i24 %60, 0, !dbg !5699
  br i1 %61, label %69, label %62, !dbg !5700

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5701
  call void @llvm.dbg.value(metadata i8* %63, metadata !5542, metadata !DIExpression()), !dbg !5668
  %64 = bitcast i8* %59 to i32*, !dbg !5701
  %65 = load i32, i32* %64, align 4, !dbg !5701
  call void @llvm.dbg.value(metadata i32 %65, metadata !5612, metadata !DIExpression()), !dbg !5702
  %66 = icmp slt i32 %65, 0, !dbg !5703
  br i1 %66, label %67, label %74, !dbg !5705

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5706
  store i24 %68, i24* %15, align 8, !dbg !5706
  br label %74, !dbg !5708

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5709
  %71 = icmp eq i24 %70, 0, !dbg !5709
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5711
  br label %74, !dbg !5711

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5712
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5682
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5682
  call void @llvm.dbg.value(metadata i8* %77, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %76, metadata !5608, metadata !DIExpression()), !dbg !5682
  store i32 0, i32* %16, align 4, !dbg !5713
  store i32 0, i32* %17, align 8, !dbg !5714
  %78 = lshr i24 %75, 16, !dbg !5712
  call void @llvm.dbg.value(metadata i24 %78, metadata !5615, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5682
  %79 = lshr i24 %75, 11, !dbg !5715
  %80 = and i24 %79, 15, !dbg !5715
  %81 = zext i24 %80 to i32, !dbg !5715
  call void @llvm.dbg.value(metadata i32 %81, metadata !5616, metadata !DIExpression()), !dbg !5682
  %82 = trunc i24 %78 to i3, !dbg !5716
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5716

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5717

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5720
  call void @llvm.dbg.value(metadata i8* %85, metadata !5542, metadata !DIExpression()), !dbg !5668
  %86 = bitcast i8* %77 to i32*, !dbg !5720
  %87 = load i32, i32* %86, align 4, !dbg !5720
  %88 = sext i32 %87 to i64, !dbg !5720
  store i64 %88, i64* %20, align 8, !dbg !5722
  br label %115, !dbg !5723

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5724
  call void @llvm.dbg.value(metadata i8* %90, metadata !5542, metadata !DIExpression()), !dbg !5668
  %91 = bitcast i8* %77 to i32*, !dbg !5724
  %92 = load i32, i32* %91, align 4, !dbg !5724
  %93 = sext i32 %92 to i64, !dbg !5724
  store i64 %93, i64* %20, align 8, !dbg !5727
  br label %115, !dbg !5728

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5729
  %96 = add i32 %95, 7, !dbg !5729
  %97 = and i32 %96, -8, !dbg !5729
  %98 = inttoptr i32 %97 to i8*, !dbg !5729
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5729
  call void @llvm.dbg.value(metadata i8* %99, metadata !5542, metadata !DIExpression()), !dbg !5668
  %100 = inttoptr i32 %97 to i64*, !dbg !5729
  %101 = load i64, i64* %100, align 8, !dbg !5729
  store i64 %101, i64* %20, align 8, !dbg !5730
  br label %115, !dbg !5731

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5732
  %104 = add i32 %103, 7, !dbg !5732
  %105 = and i32 %104, -8, !dbg !5732
  %106 = inttoptr i32 %105 to i8*, !dbg !5732
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5732
  call void @llvm.dbg.value(metadata i8* %107, metadata !5542, metadata !DIExpression()), !dbg !5668
  %108 = inttoptr i32 %105 to i64*, !dbg !5732
  %109 = load i64, i64* %108, align 8, !dbg !5732
  store i64 %109, i64* %20, align 8, !dbg !5733
  br label %115, !dbg !5734

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5735
  call void @llvm.dbg.value(metadata i8* %111, metadata !5542, metadata !DIExpression()), !dbg !5668
  %112 = bitcast i8* %77 to i32*, !dbg !5735
  %113 = load i32, i32* %112, align 4, !dbg !5735
  %114 = sext i32 %113 to i64, !dbg !5736
  store i64 %114, i64* %20, align 8, !dbg !5737
  br label %115, !dbg !5738

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5739
  call void @llvm.dbg.value(metadata i8* %117, metadata !5542, metadata !DIExpression()), !dbg !5668
  %118 = trunc i24 %79 to i4, !dbg !5740
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5740

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5741
  %121 = ashr exact i64 %120, 56, !dbg !5741
  store i64 %121, i64* %20, align 8, !dbg !5744
  br label %177, !dbg !5745

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5746
  %124 = ashr exact i64 %123, 48, !dbg !5746
  store i64 %124, i64* %20, align 8, !dbg !5749
  br label %177, !dbg !5750

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5751

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5754
  call void @llvm.dbg.value(metadata i8* %127, metadata !5542, metadata !DIExpression()), !dbg !5668
  %128 = bitcast i8* %77 to i32*, !dbg !5754
  %129 = load i32, i32* %128, align 4, !dbg !5754
  %130 = zext i32 %129 to i64, !dbg !5754
  store i64 %130, i64* %20, align 8, !dbg !5756
  br label %157, !dbg !5757

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5758
  call void @llvm.dbg.value(metadata i8* %132, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8* %132, metadata !5542, metadata !DIExpression()), !dbg !5668
  %133 = bitcast i8* %77 to i32*, !dbg !5758
  %134 = load i32, i32* %133, align 4, !dbg !5758
  %135 = zext i32 %134 to i64, !dbg !5758
  store i64 %135, i64* %20, align 8, !dbg !5758
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5760
  %138 = add i32 %137, 7, !dbg !5760
  %139 = and i32 %138, -8, !dbg !5760
  %140 = inttoptr i32 %139 to i8*, !dbg !5760
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5760
  call void @llvm.dbg.value(metadata i8* %141, metadata !5542, metadata !DIExpression()), !dbg !5668
  %142 = inttoptr i32 %139 to i64*, !dbg !5760
  %143 = load i64, i64* %142, align 8, !dbg !5760
  store i64 %143, i64* %20, align 8, !dbg !5761
  br label %157, !dbg !5762

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5763
  %146 = add i32 %145, 7, !dbg !5763
  %147 = and i32 %146, -8, !dbg !5763
  %148 = inttoptr i32 %147 to i8*, !dbg !5763
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5763
  call void @llvm.dbg.value(metadata i8* %149, metadata !5542, metadata !DIExpression()), !dbg !5668
  %150 = inttoptr i32 %147 to i64*, !dbg !5763
  %151 = load i64, i64* %150, align 8, !dbg !5763
  store i64 %151, i64* %20, align 8, !dbg !5764
  br label %157, !dbg !5765

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5766
  call void @llvm.dbg.value(metadata i8* %153, metadata !5542, metadata !DIExpression()), !dbg !5668
  %154 = bitcast i8* %77 to i32*, !dbg !5766
  %155 = load i32, i32* %154, align 4, !dbg !5766
  %156 = zext i32 %155 to i64, !dbg !5767
  store i64 %156, i64* %20, align 8, !dbg !5768
  br label %157, !dbg !5769

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5770
  call void @llvm.dbg.value(metadata i8* %159, metadata !5542, metadata !DIExpression()), !dbg !5668
  %160 = trunc i24 %79 to i4, !dbg !5771
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5771

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5772
  store i64 %162, i64* %20, align 8, !dbg !5775
  br label %177, !dbg !5776

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5777
  store i64 %164, i64* %20, align 8, !dbg !5780
  br label %177, !dbg !5781

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5782
  %167 = add i32 %166, 7, !dbg !5782
  %168 = and i32 %167, -8, !dbg !5782
  %169 = inttoptr i32 %168 to i8*, !dbg !5782
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5782
  call void @llvm.dbg.value(metadata i8* %170, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8* %170, metadata !5542, metadata !DIExpression()), !dbg !5668
  %171 = inttoptr i32 %168 to double*, !dbg !5782
  %172 = load double, double* %171, align 8, !dbg !5782
  store double %172, double* %19, align 8, !dbg !5782
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5786
  call void @llvm.dbg.value(metadata i8* %174, metadata !5542, metadata !DIExpression()), !dbg !5668
  %175 = bitcast i8* %77 to i8**, !dbg !5786
  %176 = load i8*, i8** %175, align 4, !dbg !5786
  store i8* %176, i8** %18, align 8, !dbg !5789
  br label %177, !dbg !5790

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5682
  call void @llvm.dbg.value(metadata i8* %178, metadata !5542, metadata !DIExpression()), !dbg !5668
  %179 = and i24 %75, 3, !dbg !5791
  %180 = icmp eq i24 %179, 0, !dbg !5791
  br i1 %180, label %185, label %181, !dbg !5791

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5792
  call void @llvm.dbg.value(metadata i32 %182, metadata !5617, metadata !DIExpression()), !dbg !5793
  %183 = icmp slt i32 %182, 0, !dbg !5794
  %184 = add i32 %182, %29, !dbg !5792
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5796
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5797

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %188, metadata !5621, metadata !DIExpression()), !dbg !5799
  %189 = icmp slt i32 %188, 0, !dbg !5800
  %190 = add i32 %29, 1, !dbg !5798
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5802
  call void @llvm.dbg.value(metadata i8* %192, metadata !5609, metadata !DIExpression()), !dbg !5682
  %193 = icmp sgt i32 %76, -1, !dbg !5803
  br i1 %193, label %194, label %196, !dbg !5805

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %195, metadata !5624, metadata !DIExpression()), !dbg !5808
  br label %241, !dbg !5809

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %197, metadata !5624, metadata !DIExpression()), !dbg !5808
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5609, metadata !DIExpression()), !dbg !5682
  %199 = load i64, i64* %20, align 8, !dbg !5812
  %200 = trunc i64 %199 to i8, !dbg !5813
  store i8 %200, i8* %10, align 1, !dbg !5814
  call void @llvm.dbg.value(metadata i8* %23, metadata !5610, metadata !DIExpression()), !dbg !5682
  br label %245, !dbg !5815

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5816
  %203 = icmp eq i24 %202, 0, !dbg !5816
  %204 = trunc i24 %75 to i8, !dbg !5818
  %205 = shl i8 %204, 1, !dbg !5818
  %206 = and i8 %205, 32, !dbg !5818
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5818
  call void @llvm.dbg.value(metadata i8 %207, metadata !5611, metadata !DIExpression()), !dbg !5682
  %208 = load i64, i64* %20, align 8, !dbg !5819
  call void @llvm.dbg.value(metadata i64 %208, metadata !5549, metadata !DIExpression()), !dbg !5668
  %209 = icmp slt i64 %208, 0, !dbg !5820
  br i1 %209, label %210, label %212, !dbg !5822

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5611, metadata !DIExpression()), !dbg !5682
  %211 = sub nsw i64 0, %208, !dbg !5823
  store i64 %211, i64* %20, align 8, !dbg !5825
  br label %212, !dbg !5826

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5682
  call void @llvm.dbg.value(metadata i8 %213, metadata !5611, metadata !DIExpression()), !dbg !5682
  %214 = load i64, i64* %20, align 8, !dbg !5827
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5828
  call void @llvm.dbg.value(metadata i8* %215, metadata !5609, metadata !DIExpression()), !dbg !5682
  br label %216, !dbg !5829

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5830
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5831
  call void @llvm.dbg.value(metadata i8* %218, metadata !5609, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8 %217, metadata !5611, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.label(metadata !5667), !dbg !5832
  %219 = icmp sgt i32 %76, -1, !dbg !5833
  br i1 %219, label %222, label %220, !dbg !5834

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5835
  br label %245, !dbg !5834

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5837
  %224 = sub i32 %22, %223, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %224, metadata !5626, metadata !DIExpression()), !dbg !5838
  %225 = load i24, i24* %15, align 8, !dbg !5839
  %226 = and i24 %225, -65, !dbg !5839
  store i24 %226, i24* %15, align 8, !dbg !5839
  %227 = icmp ugt i32 %76, %224, !dbg !5840
  br i1 %227, label %228, label %245, !dbg !5842

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5843
  store i32 %229, i32* %16, align 4, !dbg !5845
  br label %245, !dbg !5846

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5847
  %232 = icmp eq i8* %231, null, !dbg !5849
  br i1 %232, label %245, label %233, !dbg !5850

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5851
  %235 = zext i32 %234 to i64, !dbg !5851
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5853
  call void @llvm.dbg.value(metadata i8* %236, metadata !5609, metadata !DIExpression()), !dbg !5682
  %237 = load i24, i24* %15, align 8, !dbg !5854
  %238 = or i24 %237, 1048576, !dbg !5854
  store i24 %238, i24* %15, align 8, !dbg !5854
  store i8 120, i8* %21, align 1, !dbg !5855
  br label %216, !dbg !5856

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5857
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5860
  br label %363, !dbg !5861

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5862
  call void @llvm.dbg.value(metadata i32 %242, metadata !5624, metadata !DIExpression()), !dbg !5808
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5863
  call void @llvm.dbg.value(metadata i32 -1, metadata !5608, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i32 %29, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8* %192, metadata !5609, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8* %243, metadata !5610, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8 0, metadata !5611, metadata !DIExpression()), !dbg !5682
  %244 = icmp eq i8* %192, null, !dbg !5864
  br i1 %244, label %363, label %245, !dbg !5866, !llvm.loop !5678

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5835
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5682
  call void @llvm.dbg.value(metadata i32 0, metadata !5630, metadata !DIExpression()), !dbg !5682
  %250 = zext i8 %249 to i32, !dbg !5867
  %251 = icmp eq i8 %249, 0, !dbg !5869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  call void @llvm.dbg.value(metadata i32 undef, metadata !5629, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  call void @llvm.dbg.value(metadata i32 undef, metadata !5629, metadata !DIExpression()), !dbg !5682
  %252 = icmp sgt i32 %58, 0, !dbg !5870
  br i1 %252, label %253, label %302, !dbg !5871

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5835
  %255 = icmp eq i24 %254, 0, !dbg !5835
  %256 = ptrtoint i8* %248 to i32, !dbg !5872
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  %257 = ptrtoint i8* %247 to i32, !dbg !5872
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  %258 = xor i1 %251, true, !dbg !5873
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  %259 = sext i1 %258 to i32, !dbg !5873
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  %260 = lshr i24 %246, 19, !dbg !5874
  %261 = and i24 %260, 1, !dbg !5874
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5874
  %263 = zext i24 %262 to i32, !dbg !5874
  %264 = add i32 %257, %259, !dbg !5874
  %265 = add i32 %256, %263, !dbg !5874
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  %266 = and i24 %246, 4194304, !dbg !5875
  %267 = icmp eq i24 %266, 0, !dbg !5875
  %268 = load i32, i32* %16, align 4, !dbg !5877
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5682
  call void @llvm.dbg.value(metadata i32 undef, metadata !5629, metadata !DIExpression()), !dbg !5682
  %269 = load i32, i32* %17, align 8, !dbg !5878
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5878
  call void @llvm.dbg.value(metadata i32 undef, metadata !5629, metadata !DIExpression()), !dbg !5682
  %271 = add i32 %264, %58, !dbg !5878
  %272 = add i32 %265, %268, !dbg !5878
  %273 = add i32 %272, %270, !dbg !5879
  %274 = sub i32 %271, %273, !dbg !5879
  call void @llvm.dbg.value(metadata i32 %274, metadata !5607, metadata !DIExpression()), !dbg !5682
  %275 = and i24 %246, 4, !dbg !5880
  %276 = icmp eq i24 %275, 0, !dbg !5880
  br i1 %276, label %277, label %302, !dbg !5881

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5631, metadata !DIExpression()), !dbg !5882
  %278 = and i24 %246, 64, !dbg !5883
  %279 = icmp eq i24 %278, 0, !dbg !5883
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5884
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5884
  %282 = select i1 %279, i32 32, i32 48, !dbg !5884
  br i1 %280, label %287, label %283, !dbg !5884

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %284, metadata !5636, metadata !DIExpression()), !dbg !5886
  %285 = icmp slt i32 %284, 0, !dbg !5887
  %286 = add i32 %29, 1, !dbg !5885
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5682
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %290, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i8 undef, metadata !5631, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata i8 %288, metadata !5611, metadata !DIExpression()), !dbg !5682
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5889
  %292 = add i32 %291, -1, !dbg !5889
  br label %293, !dbg !5889

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5890
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %295, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %294, metadata !5607, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i32 %294, metadata !5607, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5682
  %296 = icmp sgt i32 %294, 0, !dbg !5891
  br i1 %296, label %297, label %302, !dbg !5889

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %298, metadata !5607, metadata !DIExpression()), !dbg !5682
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %299, metadata !5642, metadata !DIExpression()), !dbg !5894
  %300 = icmp slt i32 %299, 0, !dbg !5895
  %301 = add i32 %295, 1, !dbg !5893
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %300, label %361, label %293, !llvm.loop !5897

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5682
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5682
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %305, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %304, metadata !5607, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i8 %303, metadata !5611, metadata !DIExpression()), !dbg !5682
  %306 = icmp eq i8 %303, 0, !dbg !5899
  br i1 %306, label %312, label %307, !dbg !5900

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5901
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5902
  call void @llvm.dbg.value(metadata i32 %309, metadata !5645, metadata !DIExpression()), !dbg !5903
  %310 = icmp slt i32 %309, 0, !dbg !5904
  %311 = add i32 %305, 1, !dbg !5902
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %313, metadata !5548, metadata !DIExpression()), !dbg !5668
  %314 = lshr i24 %246, 20, !dbg !5906
  %315 = lshr i24 %246, 19, !dbg !5907
  %316 = or i24 %314, %315, !dbg !5908
  %317 = and i24 %316, 1, !dbg !5908
  %318 = icmp eq i24 %317, 0, !dbg !5908
  br i1 %318, label %323, label %319, !dbg !5909

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %320, metadata !5649, metadata !DIExpression()), !dbg !5911
  %321 = icmp slt i32 %320, 0, !dbg !5912
  %322 = add i32 %313, 1, !dbg !5910
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %324, metadata !5548, metadata !DIExpression()), !dbg !5668
  %325 = and i24 %246, 1048576, !dbg !5914
  %326 = icmp eq i24 %325, 0, !dbg !5914
  br i1 %326, label %333, label %327, !dbg !5915

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5916
  %329 = zext i8 %328 to i32, !dbg !5916
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %330, metadata !5655, metadata !DIExpression()), !dbg !5917
  %331 = icmp slt i32 %330, 0, !dbg !5918
  %332 = add i32 %324, 1, !dbg !5916
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %334, metadata !5548, metadata !DIExpression()), !dbg !5668
  %335 = load i32, i32* %16, align 4, !dbg !5920
  call void @llvm.dbg.value(metadata i32 %335, metadata !5630, metadata !DIExpression()), !dbg !5682
  br label %336, !dbg !5921

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5922
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %338, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %337, metadata !5630, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5682
  %339 = icmp sgt i32 %337, 0, !dbg !5923
  br i1 %339, label %340, label %345, !dbg !5921

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %341, metadata !5630, metadata !DIExpression()), !dbg !5682
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %342, metadata !5659, metadata !DIExpression()), !dbg !5926
  %343 = icmp slt i32 %342, 0, !dbg !5927
  %344 = add i32 %338, 1, !dbg !5925
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %343, label %361, label %336, !llvm.loop !5929

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5931
  call void @llvm.dbg.value(metadata i32 %346, metadata !5662, metadata !DIExpression()), !dbg !5932
  %347 = icmp slt i32 %346, 0, !dbg !5933
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5931
  call void @llvm.dbg.value(metadata i32 %349, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %304, metadata !5607, metadata !DIExpression()), !dbg !5682
  %350 = icmp sgt i32 %304, 0, !dbg !5935
  br i1 %350, label %351, label %363, !dbg !5936

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5936
  %353 = add i32 %352, %338, !dbg !5936
  br label %354, !dbg !5936

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %355, metadata !5607, metadata !DIExpression()), !dbg !5682
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %356, metadata !5664, metadata !DIExpression()), !dbg !5938
  %357 = icmp slt i32 %356, 0, !dbg !5939
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5941
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5668
  call void @llvm.dbg.value(metadata i32 %359, metadata !5607, metadata !DIExpression()), !dbg !5682
  %360 = icmp sgt i32 %355, 1, !dbg !5935
  br i1 %360, label %354, label %363, !dbg !5936, !llvm.loop !5942

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5679
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %364, metadata !5548, metadata !DIExpression()), !dbg !5668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5679
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5668
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5944
  ret i32 %366, !dbg !5944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5949, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.value(metadata i8* %1, metadata !5950, metadata !DIExpression()), !dbg !5951
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5952
  store i24 0, i24* %3, align 4, !dbg !5952
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5952
  store i8 0, i8* %4, align 1, !dbg !5952
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5952
  store i32 0, i32* %5, align 4, !dbg !5952
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5952
  store i32 0, i32* %6, align 4, !dbg !5952
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5953
  call void @llvm.dbg.value(metadata i8* %7, metadata !5950, metadata !DIExpression()), !dbg !5951
  %8 = load i8, i8* %7, align 1, !dbg !5954
  %9 = icmp eq i8 %8, 37, !dbg !5956
  br i1 %9, label %10, label %12, !dbg !5957

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5958
  call void @llvm.dbg.value(metadata i8* %11, metadata !5950, metadata !DIExpression()), !dbg !5951
  store i8 37, i8* %4, align 1, !dbg !5960
  br label %18, !dbg !5961

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5962
  call void @llvm.dbg.value(metadata i8* %13, metadata !5950, metadata !DIExpression()), !dbg !5951
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %14, metadata !5950, metadata !DIExpression()), !dbg !5951
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5964
  call void @llvm.dbg.value(metadata i8* %15, metadata !5950, metadata !DIExpression()), !dbg !5951
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5965
  call void @llvm.dbg.value(metadata i8* %16, metadata !5950, metadata !DIExpression()), !dbg !5951
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5966
  call void @llvm.dbg.value(metadata i8* %17, metadata !5950, metadata !DIExpression()), !dbg !5951
  br label %18, !dbg !5967

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5951
  ret i8* %19, !dbg !5968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5969 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5973, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %1, metadata !5974, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %2, metadata !5975, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %3, metadata !5976, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i32 0, metadata !5977, metadata !DIExpression()), !dbg !5980
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5981

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5982
  call void @llvm.dbg.value(metadata i32 %9, metadata !5977, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %8, metadata !5975, metadata !DIExpression()), !dbg !5980
  %10 = icmp ult i8* %8, %3, !dbg !5983
  br i1 %10, label %11, label %13, !dbg !5984

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5985
  br label %17, !dbg !5984

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5986

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5987
  %16 = icmp eq i8 %15, 0, !dbg !5986
  br i1 %16, label %24, label %17, !dbg !5981

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5985
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5988
  call void @llvm.dbg.value(metadata i8* %19, metadata !5975, metadata !DIExpression()), !dbg !5980
  %20 = zext i8 %18 to i32, !dbg !5989
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %21, metadata !5978, metadata !DIExpression()), !dbg !5991
  %22 = icmp slt i32 %21, 0, !dbg !5992
  %23 = add i32 %9, 1, !dbg !5994
  call void @llvm.dbg.value(metadata i32 undef, metadata !5977, metadata !DIExpression()), !dbg !5980
  br i1 %22, label %24, label %7, !llvm.loop !5995

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5980
  ret i32 %25, !dbg !5997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5998 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6002, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6003, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %2, metadata !6004, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %3, metadata !6005, metadata !DIExpression()), !dbg !6012
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6013
  %6 = load i8, i8* %5, align 1, !dbg !6013
  %7 = zext i8 %6 to i32, !dbg !6014
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6015
  %9 = icmp eq i32 %8, 0, !dbg !6015
  call void @llvm.dbg.value(metadata i1 %9, metadata !6006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6012
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %10, metadata !6007, metadata !DIExpression()), !dbg !6012
  %11 = ptrtoint i8* %3 to i32, !dbg !6017
  %12 = ptrtoint i8* %2 to i32, !dbg !6017
  %13 = sub i32 %11, %12, !dbg !6017
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6018
  call void @llvm.dbg.value(metadata i8* %14, metadata !6009, metadata !DIExpression()), !dbg !6012
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6019

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6012
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6002, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %18, metadata !6009, metadata !DIExpression()), !dbg !6012
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6020
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %25, metadata !6010, metadata !DIExpression()), !dbg !6022
  %26 = icmp ult i32 %25, 10, !dbg !6023
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6024
  %28 = add i32 %27, %25, !dbg !6022
  %29 = trunc i32 %28 to i8, !dbg !6024
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6025
  call void @llvm.dbg.value(metadata i8* %30, metadata !6009, metadata !DIExpression()), !dbg !6012
  store i8 %29, i8* %30, align 1, !dbg !6026
  call void @llvm.dbg.value(metadata i64 %22, metadata !6002, metadata !DIExpression()), !dbg !6012
  %31 = icmp uge i64 %19, %15, !dbg !6027
  %32 = icmp ugt i8* %30, %2, !dbg !6028
  %33 = and i1 %31, %32, !dbg !6028
  br i1 %33, label %17, label %34, !dbg !6029, !llvm.loop !6030

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6032
  %36 = load i24, i24* %35, align 4, !dbg !6032
  %37 = and i24 %36, 32, !dbg !6032
  %38 = icmp eq i24 %37, 0, !dbg !6032
  br i1 %38, label %44, label %39, !dbg !6034

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6035

40:                                               ; preds = %39
  br label %41, !dbg !6037

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6041
  store i24 %43, i24* %35, align 4, !dbg !6041
  br label %44, !dbg !6042

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !6043 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6049, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.value(metadata i8* %1, metadata !6050, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.value(metadata i32 %2, metadata !6051, metadata !DIExpression()), !dbg !6052
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6053
  %5 = load i24, i24* %4, align 4, !dbg !6053
  %6 = lshr i24 %5, 11, !dbg !6053
  %7 = and i24 %6, 15, !dbg !6053
  %8 = zext i24 %7 to i32, !dbg !6053
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6054

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6055
  store i32 %2, i32* %10, align 4, !dbg !6057
  br label %28, !dbg !6058

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6059
  store i8 %12, i8* %1, align 1, !dbg !6060
  br label %28, !dbg !6061

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6062
  %15 = bitcast i8* %1 to i16*, !dbg !6063
  store i16 %14, i16* %15, align 2, !dbg !6064
  br label %28, !dbg !6065

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6066
  store i32 %2, i32* %17, align 4, !dbg !6067
  br label %28, !dbg !6068

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6069
  %20 = bitcast i8* %1 to i64*, !dbg !6070
  store i64 %19, i64* %20, align 8, !dbg !6071
  br label %28, !dbg !6072

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6073
  %23 = bitcast i8* %1 to i64*, !dbg !6074
  store i64 %22, i64* %23, align 8, !dbg !6075
  br label %28, !dbg !6076

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6077
  store i32 %2, i32* %25, align 4, !dbg !6078
  br label %28, !dbg !6079

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6080
  store i32 %2, i32* %27, align 4, !dbg !6081
  br label %28, !dbg !6082

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6083
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !6084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6087, metadata !DIExpression()), !dbg !6088
  %2 = add i32 %0, -65, !dbg !6089
  %3 = icmp ult i32 %2, 26, !dbg !6090
  %4 = zext i1 %3 to i32, !dbg !6090
  ret i32 %4, !dbg !6091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !6092 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6096, metadata !DIExpression()), !dbg !6097
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6098

2:                                                ; preds = %1
  br label %4, !dbg !6099

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6101

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6102
  ret i32 %5, !dbg !6103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6104 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6106, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i8* %1, metadata !6107, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i8 1, metadata !6108, metadata !DIExpression()), !dbg !6109
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6110

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i8* %5, metadata !6107, metadata !DIExpression()), !dbg !6109
  %6 = load i8, i8* %5, align 1, !dbg !6111
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6113

7:                                                ; preds = %4
  br label %11, !dbg !6114

8:                                                ; preds = %4
  br label %11, !dbg !6116

9:                                                ; preds = %4
  br label %11, !dbg !6117

10:                                               ; preds = %4
  br label %11, !dbg !6118

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6119
  %14 = or i24 %13, %12, !dbg !6119
  store i24 %14, i24* %3, align 4, !dbg !6119
  call void @llvm.dbg.value(metadata i8 poison, metadata !6108, metadata !DIExpression()), !dbg !6109
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6107, metadata !DIExpression()), !dbg !6109
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i8* %15, metadata !6107, metadata !DIExpression()), !dbg !6109
  %17 = load i24, i24* %3, align 4, !dbg !6120
  %18 = and i24 %17, 68, !dbg !6122
  %19 = icmp eq i24 %18, 68, !dbg !6122
  br i1 %19, label %20, label %22, !dbg !6122

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6123
  store i24 %21, i24* %3, align 4, !dbg !6123
  br label %22, !dbg !6125

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6126
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6127 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6129, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i8* %1, metadata !6130, metadata !DIExpression()), !dbg !6133
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6134
  %5 = load i24, i24* %4, align 4, !dbg !6135
  %6 = or i24 %5, 128, !dbg !6135
  store i24 %6, i24* %4, align 4, !dbg !6135
  call void @llvm.dbg.value(metadata i8* %1, metadata !6130, metadata !DIExpression()), !dbg !6133
  %7 = load i8, i8* %1, align 1, !dbg !6136
  %8 = icmp eq i8 %7, 42, !dbg !6138
  br i1 %8, label %9, label %12, !dbg !6139

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6140
  store i24 %10, i24* %4, align 4, !dbg !6140
  call void @llvm.dbg.value(metadata i8* %1, metadata !6130, metadata !DIExpression()), !dbg !6133
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6142
  call void @llvm.dbg.value(metadata i8* %11, metadata !6130, metadata !DIExpression()), !dbg !6133
  store i8* %11, i8** %3, align 4, !dbg !6142
  br label %29, !dbg !6143

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6131, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i8** %3, metadata !6130, metadata !DIExpression(DW_OP_deref)), !dbg !6133
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6144
  call void @llvm.dbg.value(metadata i32 %13, metadata !6132, metadata !DIExpression()), !dbg !6133
  %14 = load i8*, i8** %3, align 4, !dbg !6145
  call void @llvm.dbg.value(metadata i8* %14, metadata !6130, metadata !DIExpression()), !dbg !6133
  %15 = icmp eq i8* %14, %1, !dbg !6147
  br i1 %15, label %29, label %16, !dbg !6148

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6149
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6151
  store i32 %13, i32* %18, align 4, !dbg !6152
  %19 = lshr i32 %13, 31, !dbg !6153
  %20 = lshr i24 %17, 1, !dbg !6154
  %21 = and i24 %20, 1, !dbg !6154
  %22 = zext i24 %21 to i32, !dbg !6154
  %23 = or i32 %19, %22, !dbg !6154
  %24 = trunc i32 %23 to i24, !dbg !6154
  %25 = shl nuw nsw i24 %24, 1, !dbg !6154
  %26 = and i24 %17, -131, !dbg !6154
  %27 = or i24 %26, 128, !dbg !6154
  %28 = or i24 %25, %27, !dbg !6154
  store i24 %28, i24* %4, align 4, !dbg !6154
  br label %29, !dbg !6155

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6133
  ret i8* %30, !dbg !6156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6157 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6159, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i8* %1, metadata !6160, metadata !DIExpression()), !dbg !6162
  %4 = load i8, i8* %1, align 1, !dbg !6163
  %5 = icmp eq i8 %4, 46, !dbg !6164
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6165
  %7 = load i24, i24* %6, align 4, !dbg !6166
  %8 = select i1 %5, i24 512, i24 0, !dbg !6166
  %9 = and i24 %7, -513, !dbg !6166
  %10 = or i24 %9, %8, !dbg !6166
  store i24 %10, i24* %6, align 4, !dbg !6166
  br i1 %5, label %11, label %32, !dbg !6167

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6160, metadata !DIExpression()), !dbg !6162
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6168
  call void @llvm.dbg.value(metadata i8* %12, metadata !6160, metadata !DIExpression()), !dbg !6162
  store i8* %12, i8** %3, align 4, !dbg !6168
  %13 = load i8, i8* %12, align 1, !dbg !6169
  %14 = icmp eq i8 %13, 42, !dbg !6171
  br i1 %14, label %15, label %18, !dbg !6172

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6173
  store i24 %16, i24* %6, align 4, !dbg !6173
  call void @llvm.dbg.value(metadata i8* %12, metadata !6160, metadata !DIExpression()), !dbg !6162
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6175
  call void @llvm.dbg.value(metadata i8* %17, metadata !6160, metadata !DIExpression()), !dbg !6162
  store i8* %17, i8** %3, align 4, !dbg !6175
  br label %32, !dbg !6176

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6160, metadata !DIExpression(DW_OP_deref)), !dbg !6162
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6177
  call void @llvm.dbg.value(metadata i32 %19, metadata !6161, metadata !DIExpression()), !dbg !6162
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6178
  store i32 %19, i32* %20, align 4, !dbg !6179
  %21 = lshr i32 %19, 31, !dbg !6180
  %22 = load i24, i24* %6, align 4, !dbg !6181
  %23 = lshr i24 %22, 1, !dbg !6181
  %24 = and i24 %23, 1, !dbg !6181
  %25 = zext i24 %24 to i32, !dbg !6181
  %26 = or i32 %21, %25, !dbg !6181
  %27 = trunc i32 %26 to i24, !dbg !6181
  %28 = shl nuw nsw i24 %27, 1, !dbg !6181
  %29 = and i24 %22, -3, !dbg !6181
  %30 = or i24 %28, %29, !dbg !6181
  store i24 %30, i24* %6, align 4, !dbg !6181
  %31 = load i8*, i8** %3, align 4, !dbg !6182
  call void @llvm.dbg.value(metadata i8* %31, metadata !6160, metadata !DIExpression()), !dbg !6162
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6162
  ret i8* %33, !dbg !6183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6184 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6186, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.value(metadata i8* %1, metadata !6187, metadata !DIExpression()), !dbg !6188
  %3 = load i8, i8* %1, align 1, !dbg !6189
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6190

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6191
  call void @llvm.dbg.value(metadata i8* %5, metadata !6187, metadata !DIExpression()), !dbg !6188
  %6 = load i8, i8* %5, align 1, !dbg !6194
  %7 = icmp eq i8 %6, 104, !dbg !6195
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6196
  %9 = load i24, i24* %8, align 4, !dbg !6196
  %10 = and i24 %9, -30721, !dbg !6196
  br i1 %7, label %11, label %14, !dbg !6197

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6198
  store i24 %12, i24* %8, align 4, !dbg !6198
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6200
  call void @llvm.dbg.value(metadata i8* %13, metadata !6187, metadata !DIExpression()), !dbg !6188
  br label %56, !dbg !6201

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6202
  store i24 %15, i24* %8, align 4, !dbg !6202
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6204
  call void @llvm.dbg.value(metadata i8* %17, metadata !6187, metadata !DIExpression()), !dbg !6188
  %18 = load i8, i8* %17, align 1, !dbg !6206
  %19 = icmp eq i8 %18, 108, !dbg !6207
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6208
  %21 = load i24, i24* %20, align 4, !dbg !6208
  %22 = and i24 %21, -30721, !dbg !6208
  br i1 %19, label %23, label %26, !dbg !6209

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6210
  store i24 %24, i24* %20, align 4, !dbg !6210
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6212
  call void @llvm.dbg.value(metadata i8* %25, metadata !6187, metadata !DIExpression()), !dbg !6188
  br label %56, !dbg !6213

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6214
  store i24 %27, i24* %20, align 4, !dbg !6214
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6216
  %30 = load i24, i24* %29, align 4, !dbg !6217
  %31 = and i24 %30, -30721, !dbg !6217
  %32 = or i24 %31, 10240, !dbg !6217
  store i24 %32, i24* %29, align 4, !dbg !6217
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %33, metadata !6187, metadata !DIExpression()), !dbg !6188
  br label %56, !dbg !6219

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6220
  %36 = load i24, i24* %35, align 4, !dbg !6221
  %37 = and i24 %36, -30721, !dbg !6221
  %38 = or i24 %37, 12288, !dbg !6221
  store i24 %38, i24* %35, align 4, !dbg !6221
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6222
  call void @llvm.dbg.value(metadata i8* %39, metadata !6187, metadata !DIExpression()), !dbg !6188
  br label %56, !dbg !6223

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6224
  %42 = load i24, i24* %41, align 4, !dbg !6225
  %43 = and i24 %42, -30721, !dbg !6225
  %44 = or i24 %43, 14336, !dbg !6225
  store i24 %44, i24* %41, align 4, !dbg !6225
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6226
  call void @llvm.dbg.value(metadata i8* %45, metadata !6187, metadata !DIExpression()), !dbg !6188
  br label %56, !dbg !6227

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6228
  %48 = load i24, i24* %47, align 4, !dbg !6229
  %49 = and i24 %48, -30723, !dbg !6229
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6230
  call void @llvm.dbg.value(metadata i8* %50, metadata !6187, metadata !DIExpression()), !dbg !6188
  %51 = or i24 %49, 16386, !dbg !6231
  store i24 %51, i24* %47, align 4, !dbg !6231
  br label %56, !dbg !6232

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6233
  %54 = load i24, i24* %53, align 4, !dbg !6234
  %55 = and i24 %54, -30721, !dbg !6234
  store i24 %55, i24* %53, align 4, !dbg !6234
  br label %56, !dbg !6235

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6187, metadata !DIExpression()), !dbg !6188
  ret i8* %57, !dbg !6236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6237 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6239, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.value(metadata i8* %1, metadata !6240, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.value(metadata i8 0, metadata !6241, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.value(metadata i8* %1, metadata !6240, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6244
  %3 = load i8, i8* %1, align 1, !dbg !6245
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6246
  store i8 %3, i8* %4, align 1, !dbg !6247
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6248

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6249

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6250
  %9 = load i24, i24* %8, align 4, !dbg !6250
  %10 = and i24 %9, -458753, !dbg !6250
  %11 = or i24 %10, %7, !dbg !6250
  call void @llvm.dbg.label(metadata !6242), !dbg !6251
  %12 = and i24 %9, 30720, !dbg !6252
  %13 = icmp eq i24 %12, 16384, !dbg !6252
  %14 = zext i1 %13 to i24, !dbg !6254
  %15 = or i24 %11, %14, !dbg !6254
  %16 = icmp eq i8 %3, 99, !dbg !6255
  br i1 %16, label %17, label %43, !dbg !6257

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6258
  %19 = icmp ne i24 %18, 0, !dbg !6258
  call void @llvm.dbg.value(metadata i1 %19, metadata !6241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6244
  br label %43, !dbg !6260

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6261
  %22 = load i24, i24* %21, align 4, !dbg !6262
  %23 = and i24 %22, -458753, !dbg !6262
  %24 = or i24 %23, 262144, !dbg !6262
  call void @llvm.dbg.value(metadata i8 1, metadata !6241, metadata !DIExpression()), !dbg !6244
  br label %43, !dbg !6263

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6266
  %27 = load i24, i24* %26, align 4, !dbg !6267
  %28 = and i24 %27, -458753, !dbg !6267
  %29 = or i24 %28, 196608, !dbg !6267
  %30 = and i24 %27, 30720, !dbg !6268
  %31 = icmp eq i24 %30, 16384, !dbg !6268
  br label %43, !dbg !6270

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6271
  %34 = load i24, i24* %33, align 4, !dbg !6272
  %35 = and i24 %34, -458753, !dbg !6272
  %36 = or i24 %35, 196608, !dbg !6272
  %37 = and i24 %34, 30720, !dbg !6273
  %38 = icmp ne i24 %37, 0, !dbg !6273
  br label %43, !dbg !6275

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6276
  %41 = load i24, i24* %40, align 4, !dbg !6277
  %42 = or i24 %41, 1, !dbg !6277
  br label %43, !dbg !6278

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6279
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6280
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6281
  call void @llvm.dbg.value(metadata i8* %48, metadata !6240, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.value(metadata i8 poison, metadata !6241, metadata !DIExpression()), !dbg !6244
  %49 = lshr i24 %44, 1, !dbg !6279
  %50 = and i24 %49, 1, !dbg !6279
  %51 = zext i24 %50 to i32, !dbg !6279
  %52 = or i32 %51, %47, !dbg !6279
  %53 = trunc i32 %52 to i24, !dbg !6279
  %54 = shl nuw nsw i24 %53, 1, !dbg !6279
  %55 = and i24 %44, -3, !dbg !6279
  %56 = or i24 %54, %55, !dbg !6279
  store i24 %56, i24* %46, align 4, !dbg !6279
  ret i8* %48, !dbg !6282
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6283 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6287, metadata !DIExpression()), !dbg !6290
  %2 = load i8*, i8** %0, align 4, !dbg !6291
  call void @llvm.dbg.value(metadata i8* %2, metadata !6288, metadata !DIExpression()), !dbg !6290
  call void @llvm.dbg.value(metadata i32 0, metadata !6289, metadata !DIExpression()), !dbg !6290
  %3 = load i8, i8* %2, align 1, !dbg !6292
  %4 = zext i8 %3 to i32, !dbg !6293
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6294
  %6 = icmp eq i32 %5, 0, !dbg !6295
  br i1 %6, label %19, label %7, !dbg !6295

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6289, metadata !DIExpression()), !dbg !6290
  call void @llvm.dbg.value(metadata i8* %10, metadata !6288, metadata !DIExpression()), !dbg !6290
  %11 = mul i32 %9, 10, !dbg !6296
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %12, metadata !6288, metadata !DIExpression()), !dbg !6290
  %13 = add i32 %11, -48, !dbg !6299
  %14 = add i32 %13, %8, !dbg !6300
  call void @llvm.dbg.value(metadata i32 %14, metadata !6289, metadata !DIExpression()), !dbg !6290
  %15 = load i8, i8* %12, align 1, !dbg !6292
  %16 = zext i8 %15 to i32, !dbg !6293
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6294
  %18 = icmp eq i32 %17, 0, !dbg !6295
  br i1 %18, label %19, label %7, !dbg !6295, !llvm.loop !6301

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6290
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6290
  store i8* %20, i8** %0, align 4, !dbg !6303
  ret i32 %21, !dbg !6304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6307, metadata !DIExpression()), !dbg !6308
  %2 = add i32 %0, -48, !dbg !6309
  %3 = icmp ult i32 %2, 10, !dbg !6310
  %4 = zext i1 %3 to i32, !dbg !6310
  ret i32 %4, !dbg !6311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6312 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,91\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,2048\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_AEROCORE2\0A\09.equ\09CONFIG_BOARD_96B_AEROCORE2,1\0A\09.type\09CONFIG_BOARD_96B_AEROCORE2,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F427XX\0A\09.equ\09CONFIG_SOC_STM32F427XX,1\0A\09.type\09CONFIG_SOC_STM32F427XX,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,24000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6966, !srcloc !6967
  ret void, !dbg !6968
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6971, metadata !DIExpression()), !dbg !6973
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6974
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6975
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6976, !srcloc !6985
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6976
  call void @llvm.dbg.value(metadata i32 %3, metadata !6982, metadata !DIExpression()) #25, !dbg !6986
  call void @llvm.dbg.value(metadata i32 undef, metadata !6983, metadata !DIExpression()) #25, !dbg !6986
  call void @llvm.dbg.value(metadata i32 %3, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.value(metadata i32 %3, metadata !6987, metadata !DIExpression()) #25, !dbg !6992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6994, !srcloc !6995
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6996
  ret i32 0, !dbg !6997
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6998 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7000
  %2 = or i32 %1, 512, !dbg !7000
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7000
  ret void, !dbg !7001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !7002 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7003
  %2 = or i32 %1, 1024, !dbg !7003
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7003
  ret void, !dbg !7004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !7005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7007, metadata !DIExpression()), !dbg !7008
  ret i32 0, !dbg !7009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7010 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7013, metadata !DIExpression()), !dbg !7021
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !7022
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7022
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !7014, metadata !DIExpression()), !dbg !7023
  call void @llvm.va_start(i8* nonnull %3), !dbg !7024
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !7025
  %5 = load i32, i32* %4, align 4, !dbg !7025
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7025
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7025
  call void @llvm.va_end(i8* nonnull %3), !dbg !7026
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7027
  ret void, !dbg !7027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7028 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7033, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i8* %0, metadata !7032, metadata !DIExpression()), !dbg !7034
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7035
  ret void, !dbg !7036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7041, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i8* %1, metadata !7042, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i32 %2, metadata !7043, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i8* %1, metadata !7044, metadata !DIExpression()), !dbg !7045
  %4 = icmp eq i32 %2, 0, !dbg !7046
  br i1 %4, label %14, label %5, !dbg !7047

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !7045
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7047

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7044, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i32 %10, metadata !7043, metadata !DIExpression()), !dbg !7045
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !7048
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7050
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %11, metadata !7043, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i8* %12, metadata !7044, metadata !DIExpression()), !dbg !7045
  br i1 %13, label %14, label %8, !dbg !7051, !llvm.loop !7052

14:                                               ; preds = %8, %3
  ret void, !dbg !7054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !7055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7057, metadata !DIExpression()), !dbg !7058
  %2 = add i32 %0, -1, !dbg !7059
  %3 = icmp ult i32 %2, 4, !dbg !7059
  %4 = shl i32 %2, 3, !dbg !7059
  %5 = lshr i32 1145657157, %4, !dbg !7059
  %6 = trunc i32 %5 to i8, !dbg !7059
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7059
  ret i8 %7, !dbg !7060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7065, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 %1, metadata !7066, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 0, metadata !7067, metadata !DIExpression()), !dbg !7077
  br label %4, !dbg !7078

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !7079
  call void @llvm.dbg.value(metadata i32 0, metadata !7069, metadata !DIExpression()), !dbg !7080
  br label %16, !dbg !7081

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7067, metadata !DIExpression()), !dbg !7077
  %6 = icmp ult i32 %5, %1, !dbg !7082
  br i1 %6, label %7, label %11, !dbg !7086

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7087
  %9 = load i8, i8* %8, align 1, !dbg !7087
  %10 = zext i8 %9 to i32, !dbg !7089
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !7090
  br label %12, !dbg !7091

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !7092
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7094
  call void @llvm.dbg.value(metadata i32 %13, metadata !7067, metadata !DIExpression()), !dbg !7077
  %14 = icmp eq i32 %13, 8, !dbg !7095
  br i1 %14, label %3, label %4, !dbg !7078, !llvm.loop !7096

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !7098
  ret void, !dbg !7099

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7069, metadata !DIExpression()), !dbg !7080
  %18 = icmp ult i32 %17, %1, !dbg !7100
  br i1 %18, label %19, label %26, !dbg !7101

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7102
  %21 = load i8, i8* %20, align 1, !dbg !7102
  call void @llvm.dbg.value(metadata i8 %21, metadata !7071, metadata !DIExpression()), !dbg !7103
  %22 = zext i8 %21 to i32, !dbg !7104
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7105
  %24 = icmp eq i32 %23, 0, !dbg !7106
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7105
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !7107
  br label %27, !dbg !7108

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !7109
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7111
  call void @llvm.dbg.value(metadata i32 %28, metadata !7069, metadata !DIExpression()), !dbg !7080
  %29 = icmp eq i32 %28, 8, !dbg !7112
  br i1 %29, label %15, label %16, !dbg !7081, !llvm.loop !7113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !7115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7117, metadata !DIExpression()), !dbg !7118
  %2 = add i32 %0, -32, !dbg !7119
  %3 = icmp ult i32 %2, 95, !dbg !7119
  %4 = zext i1 %3 to i32, !dbg !7119
  ret i32 %4, !dbg !7120
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7121 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7126, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i32 %1, metadata !7127, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i8* %2, metadata !7128, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i32 %3, metadata !7129, metadata !DIExpression()), !dbg !7130
  %5 = icmp ugt i32 %3, %1, !dbg !7131
  br i1 %5, label %8, label %6, !dbg !7133

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !7134
  br label %8, !dbg !7136

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !7137
  ret i32 %9, !dbg !7138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7143, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i8 %1, metadata !7144, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i32 %2, metadata !7145, metadata !DIExpression()), !dbg !7146
  %4 = zext i8 %1 to i32, !dbg !7147
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !7148
  ret void, !dbg !7149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !7150 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7154, metadata !DIExpression()), !dbg !7155
  %2 = shl i8 %0, 1, !dbg !7156
  %3 = icmp slt i8 %0, 0, !dbg !7157
  %4 = select i1 %3, i8 27, i8 0, !dbg !7157
  %5 = xor i8 %4, %2, !dbg !7158
  ret i8 %5, !dbg !7159
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7160 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7164, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8* %1, metadata !7165, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 %2, metadata !7166, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8* %0, metadata !7167, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8* %1, metadata !7168, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8 0, metadata !7169, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 0, metadata !7170, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 undef, metadata !7169, metadata !DIExpression()), !dbg !7172
  %4 = icmp eq i32 %2, 0, !dbg !7174
  br i1 %4, label %5, label %7, !dbg !7176

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7177

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7170, metadata !DIExpression()), !dbg !7173
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7178
  %11 = load i8, i8* %10, align 1, !dbg !7178
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7180
  %13 = load i8, i8* %12, align 1, !dbg !7180
  %14 = xor i8 %13, %11, !dbg !7181
  %15 = zext i8 %14 to i32, !dbg !7181
  %16 = or i32 %9, %15, !dbg !7182
  call void @llvm.dbg.value(metadata i32 %16, metadata !7169, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7172
  %17 = add nuw i32 %8, 1, !dbg !7183
  call void @llvm.dbg.value(metadata i32 %17, metadata !7170, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 undef, metadata !7169, metadata !DIExpression()), !dbg !7172
  %18 = icmp eq i32 %17, %2, !dbg !7174
  br i1 %18, label %5, label %7, !dbg !7176, !llvm.loop !7184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7186 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7190, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8* %1, metadata !7191, metadata !DIExpression()), !dbg !7192
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7193
  ret i32 %3, !dbg !7194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7195 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7200, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.value(metadata i8* %1, metadata !7201, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7202, metadata !DIExpression()), !dbg !7205
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7206
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7206
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7203, metadata !DIExpression()), !dbg !7207
  %6 = icmp eq i8* %0, null, !dbg !7208
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7210
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7210
  br i1 %10, label %23, label %11, !dbg !7210

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7211
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7212
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7213
  call void @llvm.dbg.value(metadata i32 9, metadata !7204, metadata !DIExpression()), !dbg !7205
  br label %14, !dbg !7214

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7204, metadata !DIExpression()), !dbg !7205
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7216
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7219
  %16 = shl i32 %15, 2, !dbg !7220
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7221
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7222
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7223
  %18 = add nsw i32 %15, -1, !dbg !7224
  call void @llvm.dbg.value(metadata i32 %18, metadata !7204, metadata !DIExpression()), !dbg !7205
  %19 = icmp eq i32 %18, 0, !dbg !7225
  br i1 %19, label %20, label %14, !dbg !7214, !llvm.loop !7226

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7228
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7229
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7230
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7231
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7232
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7233
  br label %23, !dbg !7234

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7205
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7235
  ret i32 %24, !dbg !7235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7236 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7241, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i32* %1, metadata !7242, metadata !DIExpression()), !dbg !7243
  %3 = load i32, i32* %1, align 4, !dbg !7244
  %4 = lshr i32 %3, 24, !dbg !7245
  %5 = load i8, i8* %0, align 1, !dbg !7246
  %6 = trunc i32 %4 to i8, !dbg !7246
  %7 = xor i8 %5, %6, !dbg !7246
  store i8 %7, i8* %0, align 1, !dbg !7246
  %8 = load i32, i32* %1, align 4, !dbg !7247
  %9 = lshr i32 %8, 16, !dbg !7248
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7249
  %11 = load i8, i8* %10, align 1, !dbg !7250
  %12 = trunc i32 %9 to i8, !dbg !7250
  %13 = xor i8 %11, %12, !dbg !7250
  store i8 %13, i8* %10, align 1, !dbg !7250
  %14 = load i32, i32* %1, align 4, !dbg !7251
  %15 = lshr i32 %14, 8, !dbg !7252
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7253
  %17 = load i8, i8* %16, align 1, !dbg !7254
  %18 = trunc i32 %15 to i8, !dbg !7254
  %19 = xor i8 %17, %18, !dbg !7254
  store i8 %19, i8* %16, align 1, !dbg !7254
  %20 = load i32, i32* %1, align 4, !dbg !7255
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7256
  %22 = load i8, i8* %21, align 1, !dbg !7257
  %23 = trunc i32 %20 to i8, !dbg !7257
  %24 = xor i8 %22, %23, !dbg !7257
  store i8 %24, i8* %21, align 1, !dbg !7257
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7258
  %26 = load i32, i32* %25, align 4, !dbg !7258
  %27 = lshr i32 %26, 24, !dbg !7259
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7260
  %29 = load i8, i8* %28, align 1, !dbg !7261
  %30 = trunc i32 %27 to i8, !dbg !7261
  %31 = xor i8 %29, %30, !dbg !7261
  store i8 %31, i8* %28, align 1, !dbg !7261
  %32 = load i32, i32* %25, align 4, !dbg !7262
  %33 = lshr i32 %32, 16, !dbg !7263
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7264
  %35 = load i8, i8* %34, align 1, !dbg !7265
  %36 = trunc i32 %33 to i8, !dbg !7265
  %37 = xor i8 %35, %36, !dbg !7265
  store i8 %37, i8* %34, align 1, !dbg !7265
  %38 = load i32, i32* %25, align 4, !dbg !7266
  %39 = lshr i32 %38, 8, !dbg !7267
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7268
  %41 = load i8, i8* %40, align 1, !dbg !7269
  %42 = trunc i32 %39 to i8, !dbg !7269
  %43 = xor i8 %41, %42, !dbg !7269
  store i8 %43, i8* %40, align 1, !dbg !7269
  %44 = load i32, i32* %25, align 4, !dbg !7270
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7271
  %46 = load i8, i8* %45, align 1, !dbg !7272
  %47 = trunc i32 %44 to i8, !dbg !7272
  %48 = xor i8 %46, %47, !dbg !7272
  store i8 %48, i8* %45, align 1, !dbg !7272
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7273
  %50 = load i32, i32* %49, align 4, !dbg !7273
  %51 = lshr i32 %50, 24, !dbg !7274
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7275
  %53 = load i8, i8* %52, align 1, !dbg !7276
  %54 = trunc i32 %51 to i8, !dbg !7276
  %55 = xor i8 %53, %54, !dbg !7276
  store i8 %55, i8* %52, align 1, !dbg !7276
  %56 = load i32, i32* %49, align 4, !dbg !7277
  %57 = lshr i32 %56, 16, !dbg !7278
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7279
  %59 = load i8, i8* %58, align 1, !dbg !7280
  %60 = trunc i32 %57 to i8, !dbg !7280
  %61 = xor i8 %59, %60, !dbg !7280
  store i8 %61, i8* %58, align 1, !dbg !7280
  %62 = load i32, i32* %49, align 4, !dbg !7281
  %63 = lshr i32 %62, 8, !dbg !7282
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7283
  %65 = load i8, i8* %64, align 1, !dbg !7284
  %66 = trunc i32 %63 to i8, !dbg !7284
  %67 = xor i8 %65, %66, !dbg !7284
  store i8 %67, i8* %64, align 1, !dbg !7284
  %68 = load i32, i32* %49, align 4, !dbg !7285
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7286
  %70 = load i8, i8* %69, align 1, !dbg !7287
  %71 = trunc i32 %68 to i8, !dbg !7287
  %72 = xor i8 %70, %71, !dbg !7287
  store i8 %72, i8* %69, align 1, !dbg !7287
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7288
  %74 = load i32, i32* %73, align 4, !dbg !7288
  %75 = lshr i32 %74, 24, !dbg !7289
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7290
  %77 = load i8, i8* %76, align 1, !dbg !7291
  %78 = trunc i32 %75 to i8, !dbg !7291
  %79 = xor i8 %77, %78, !dbg !7291
  store i8 %79, i8* %76, align 1, !dbg !7291
  %80 = load i32, i32* %73, align 4, !dbg !7292
  %81 = lshr i32 %80, 16, !dbg !7293
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7294
  %83 = load i8, i8* %82, align 1, !dbg !7295
  %84 = trunc i32 %81 to i8, !dbg !7295
  %85 = xor i8 %83, %84, !dbg !7295
  store i8 %85, i8* %82, align 1, !dbg !7295
  %86 = load i32, i32* %73, align 4, !dbg !7296
  %87 = lshr i32 %86, 8, !dbg !7297
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7298
  %89 = load i8, i8* %88, align 1, !dbg !7299
  %90 = trunc i32 %87 to i8, !dbg !7299
  %91 = xor i8 %89, %90, !dbg !7299
  store i8 %91, i8* %88, align 1, !dbg !7299
  %92 = load i32, i32* %73, align 4, !dbg !7300
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7301
  %94 = load i8, i8* %93, align 1, !dbg !7302
  %95 = trunc i32 %92 to i8, !dbg !7302
  %96 = xor i8 %94, %95, !dbg !7302
  store i8 %96, i8* %93, align 1, !dbg !7302
  ret void, !dbg !7303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7304 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7308, metadata !DIExpression()), !dbg !7310
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7311
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7311
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7309, metadata !DIExpression()), !dbg !7312
  %4 = load i8, i8* %0, align 1, !dbg !7313
  store i8 %4, i8* %3, align 1, !dbg !7314
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7315
  %6 = load i8, i8* %5, align 1, !dbg !7315
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7316
  store i8 %6, i8* %7, align 1, !dbg !7317
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7318
  %9 = load i8, i8* %8, align 1, !dbg !7318
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7319
  store i8 %9, i8* %10, align 1, !dbg !7320
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7321
  %12 = load i8, i8* %11, align 1, !dbg !7321
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7322
  store i8 %12, i8* %13, align 1, !dbg !7323
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7324
  %15 = load i8, i8* %14, align 1, !dbg !7324
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7325
  store i8 %15, i8* %16, align 1, !dbg !7326
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7327
  %18 = load i8, i8* %17, align 1, !dbg !7327
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7328
  store i8 %18, i8* %19, align 1, !dbg !7329
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7330
  %21 = load i8, i8* %20, align 1, !dbg !7330
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7331
  store i8 %21, i8* %22, align 1, !dbg !7332
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7333
  %24 = load i8, i8* %23, align 1, !dbg !7333
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7334
  store i8 %24, i8* %25, align 1, !dbg !7335
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7336
  %27 = load i8, i8* %26, align 1, !dbg !7336
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7337
  store i8 %27, i8* %28, align 1, !dbg !7338
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7339
  %30 = load i8, i8* %29, align 1, !dbg !7339
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7340
  store i8 %30, i8* %31, align 1, !dbg !7341
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7342
  %33 = load i8, i8* %32, align 1, !dbg !7342
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7343
  store i8 %33, i8* %34, align 1, !dbg !7344
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7345
  %36 = load i8, i8* %35, align 1, !dbg !7345
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7346
  store i8 %36, i8* %37, align 1, !dbg !7347
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7348
  %39 = load i8, i8* %38, align 1, !dbg !7348
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7349
  store i8 %39, i8* %40, align 1, !dbg !7350
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7351
  %42 = load i8, i8* %41, align 1, !dbg !7351
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7352
  store i8 %42, i8* %43, align 1, !dbg !7353
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7354
  %45 = load i8, i8* %44, align 1, !dbg !7354
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7355
  store i8 %45, i8* %46, align 1, !dbg !7356
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7357
  %48 = load i8, i8* %47, align 1, !dbg !7357
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7358
  store i8 %48, i8* %49, align 1, !dbg !7359
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7360
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7361
  ret void, !dbg !7361
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 0, metadata !7365, metadata !DIExpression()), !dbg !7366
  br label %2, !dbg !7367

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7365, metadata !DIExpression()), !dbg !7366
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7369
  %5 = load i8, i8* %4, align 1, !dbg !7369
  %6 = zext i8 %5 to i32, !dbg !7372
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7372
  %8 = load i8, i8* %7, align 1, !dbg !7372
  store i8 %8, i8* %4, align 1, !dbg !7373
  %9 = add nuw nsw i32 %3, 1, !dbg !7374
  call void @llvm.dbg.value(metadata i32 %9, metadata !7365, metadata !DIExpression()), !dbg !7366
  %10 = icmp eq i32 %9, 16, !dbg !7375
  br i1 %10, label %11, label %2, !dbg !7367, !llvm.loop !7376

11:                                               ; preds = %2
  ret void, !dbg !7378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7379 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7381, metadata !DIExpression()), !dbg !7383
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7384
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7384
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7382, metadata !DIExpression()), !dbg !7385
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7386
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7387
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7388
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7389
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7390
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7391
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7392
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7393
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7394
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7395
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7396
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7397
  ret void, !dbg !7397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7398 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7402, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %1, metadata !7403, metadata !DIExpression()), !dbg !7404
  %3 = load i8, i8* %1, align 1, !dbg !7405
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7405
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7405
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7405
  %7 = load i8, i8* %1, align 1, !dbg !7405
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7405
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7405
  %10 = load i8, i8* %1, align 1, !dbg !7405
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7405
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7406
  %13 = load i8, i8* %12, align 1, !dbg !7406
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7406
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7406
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7406
  %17 = load i8, i8* %12, align 1, !dbg !7406
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7406
  %19 = load i8, i8* %12, align 1, !dbg !7406
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7407
  %21 = load i8, i8* %20, align 1, !dbg !7407
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7407
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7407
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7407
  %25 = load i8, i8* %20, align 1, !dbg !7407
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7407
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7407
  %28 = load i8, i8* %20, align 1, !dbg !7407
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7408
  %30 = load i8, i8* %29, align 1, !dbg !7408
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7408
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7408
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7408
  %34 = load i8, i8* %29, align 1, !dbg !7408
  %35 = xor i8 %9, %6, !dbg !7408
  %36 = xor i8 %35, %11, !dbg !7407
  %37 = xor i8 %36, %16, !dbg !7407
  %38 = xor i8 %37, %18, !dbg !7406
  %39 = xor i8 %38, %19, !dbg !7406
  %40 = xor i8 %39, %24, !dbg !7405
  %41 = xor i8 %40, %27, !dbg !7405
  %42 = xor i8 %41, %28, !dbg !7409
  %43 = xor i8 %42, %33, !dbg !7410
  %44 = xor i8 %43, %34, !dbg !7411
  store i8 %44, i8* %0, align 1, !dbg !7412
  %45 = load i8, i8* %1, align 1, !dbg !7413
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7413
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7413
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7413
  %49 = load i8, i8* %1, align 1, !dbg !7413
  %50 = load i8, i8* %12, align 1, !dbg !7414
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7414
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7414
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7414
  %54 = load i8, i8* %12, align 1, !dbg !7414
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7414
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7414
  %57 = load i8, i8* %12, align 1, !dbg !7414
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7414
  %59 = load i8, i8* %20, align 1, !dbg !7415
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7415
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7415
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7415
  %63 = load i8, i8* %20, align 1, !dbg !7415
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7415
  %65 = load i8, i8* %20, align 1, !dbg !7415
  %66 = load i8, i8* %29, align 1, !dbg !7416
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7416
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7416
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7416
  %70 = load i8, i8* %29, align 1, !dbg !7416
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7416
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7416
  %73 = load i8, i8* %29, align 1, !dbg !7416
  %74 = xor i8 %49, %48, !dbg !7416
  %75 = xor i8 %74, %53, !dbg !7416
  %76 = xor i8 %75, %56, !dbg !7415
  %77 = xor i8 %76, %58, !dbg !7415
  %78 = xor i8 %77, %62, !dbg !7414
  %79 = xor i8 %78, %64, !dbg !7414
  %80 = xor i8 %79, %65, !dbg !7413
  %81 = xor i8 %80, %69, !dbg !7417
  %82 = xor i8 %81, %72, !dbg !7418
  %83 = xor i8 %82, %73, !dbg !7419
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7420
  store i8 %83, i8* %84, align 1, !dbg !7421
  %85 = load i8, i8* %1, align 1, !dbg !7422
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7422
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7422
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7422
  %89 = load i8, i8* %1, align 1, !dbg !7422
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7422
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7422
  %92 = load i8, i8* %1, align 1, !dbg !7422
  %93 = load i8, i8* %12, align 1, !dbg !7423
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7423
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7423
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7423
  %97 = load i8, i8* %12, align 1, !dbg !7423
  %98 = load i8, i8* %20, align 1, !dbg !7424
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7424
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7424
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7424
  %102 = load i8, i8* %20, align 1, !dbg !7424
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7424
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7424
  %105 = load i8, i8* %20, align 1, !dbg !7424
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7424
  %107 = load i8, i8* %29, align 1, !dbg !7425
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7425
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7425
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7425
  %111 = load i8, i8* %29, align 1, !dbg !7425
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7425
  %113 = load i8, i8* %29, align 1, !dbg !7425
  %114 = xor i8 %91, %88, !dbg !7425
  %115 = xor i8 %114, %92, !dbg !7425
  %116 = xor i8 %115, %96, !dbg !7424
  %117 = xor i8 %116, %97, !dbg !7424
  %118 = xor i8 %117, %101, !dbg !7423
  %119 = xor i8 %118, %104, !dbg !7422
  %120 = xor i8 %119, %106, !dbg !7422
  %121 = xor i8 %120, %110, !dbg !7426
  %122 = xor i8 %121, %112, !dbg !7427
  %123 = xor i8 %122, %113, !dbg !7428
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7429
  store i8 %123, i8* %124, align 1, !dbg !7430
  %125 = load i8, i8* %1, align 1, !dbg !7431
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7431
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7431
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7431
  %129 = load i8, i8* %1, align 1, !dbg !7431
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7431
  %131 = load i8, i8* %1, align 1, !dbg !7431
  %132 = load i8, i8* %12, align 1, !dbg !7432
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7432
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7432
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7432
  %136 = load i8, i8* %12, align 1, !dbg !7432
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7432
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7432
  %139 = load i8, i8* %12, align 1, !dbg !7432
  %140 = load i8, i8* %20, align 1, !dbg !7433
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7433
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7433
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7433
  %144 = load i8, i8* %20, align 1, !dbg !7433
  %145 = load i8, i8* %29, align 1, !dbg !7434
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7434
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7434
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7434
  %149 = load i8, i8* %29, align 1, !dbg !7434
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7434
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7434
  %152 = load i8, i8* %29, align 1, !dbg !7434
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7434
  %154 = xor i8 %130, %128, !dbg !7434
  %155 = xor i8 %154, %131, !dbg !7434
  %156 = xor i8 %155, %135, !dbg !7433
  %157 = xor i8 %156, %138, !dbg !7432
  %158 = xor i8 %157, %139, !dbg !7432
  %159 = xor i8 %158, %143, !dbg !7431
  %160 = xor i8 %159, %144, !dbg !7431
  %161 = xor i8 %160, %148, !dbg !7435
  %162 = xor i8 %161, %151, !dbg !7436
  %163 = xor i8 %162, %153, !dbg !7437
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7438
  store i8 %163, i8* %164, align 1, !dbg !7439
  ret void, !dbg !7440
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7441 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7445, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i8* %1, metadata !7446, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7447, metadata !DIExpression()), !dbg !7452
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7453
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7455
  br i1 %5, label %80, label %9, !dbg !7455

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7449, metadata !DIExpression()), !dbg !7451
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7456
  br label %36, !dbg !7460

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7449, metadata !DIExpression()), !dbg !7451
  %11 = shl nuw nsw i32 %10, 2, !dbg !7461
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7465
  %13 = load i8, i8* %12, align 1, !dbg !7465
  %14 = zext i8 %13 to i32, !dbg !7465
  %15 = shl nuw i32 %14, 24, !dbg !7466
  %16 = or i32 %11, 1, !dbg !7467
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7468
  %18 = load i8, i8* %17, align 1, !dbg !7468
  %19 = zext i8 %18 to i32, !dbg !7468
  %20 = shl nuw nsw i32 %19, 16, !dbg !7469
  %21 = or i32 %20, %15, !dbg !7470
  %22 = or i32 %11, 2, !dbg !7471
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7472
  %24 = load i8, i8* %23, align 1, !dbg !7472
  %25 = zext i8 %24 to i32, !dbg !7472
  %26 = shl nuw nsw i32 %25, 8, !dbg !7473
  %27 = or i32 %21, %26, !dbg !7474
  %28 = or i32 %11, 3, !dbg !7475
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7476
  %30 = load i8, i8* %29, align 1, !dbg !7476
  %31 = zext i8 %30 to i32, !dbg !7477
  %32 = or i32 %27, %31, !dbg !7478
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7479
  store i32 %32, i32* %33, align 4, !dbg !7480
  %34 = add nuw nsw i32 %10, 1, !dbg !7481
  call void @llvm.dbg.value(metadata i32 %34, metadata !7449, metadata !DIExpression()), !dbg !7451
  %35 = icmp eq i32 %34, 4, !dbg !7482
  br i1 %35, label %6, label %9, !dbg !7483, !llvm.loop !7484

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7456
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7449, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i32 %37, metadata !7450, metadata !DIExpression()), !dbg !7451
  %39 = and i32 %38, 3, !dbg !7486
  %40 = icmp eq i32 %39, 0, !dbg !7488
  br i1 %40, label %41, label %71, !dbg !7489

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7490
  %43 = lshr i32 %42, 24, !dbg !7490
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7490
  %45 = load i8, i8* %44, align 1, !dbg !7490
  %46 = zext i8 %45 to i32, !dbg !7490
  %47 = shl nuw i32 %46, 24, !dbg !7490
  %48 = lshr i32 %42, 16, !dbg !7490
  %49 = and i32 %48, 255, !dbg !7490
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7490
  %51 = load i8, i8* %50, align 1, !dbg !7490
  %52 = zext i8 %51 to i32, !dbg !7490
  %53 = shl nuw nsw i32 %52, 16, !dbg !7490
  %54 = or i32 %53, %47, !dbg !7490
  %55 = lshr i32 %42, 8, !dbg !7490
  %56 = and i32 %55, 255, !dbg !7490
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7490
  %58 = load i8, i8* %57, align 1, !dbg !7490
  %59 = zext i8 %58 to i32, !dbg !7490
  %60 = shl nuw nsw i32 %59, 8, !dbg !7490
  %61 = or i32 %54, %60, !dbg !7490
  %62 = and i32 %42, 255, !dbg !7490
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7490
  %64 = load i8, i8* %63, align 1, !dbg !7490
  %65 = zext i8 %64 to i32, !dbg !7490
  %66 = or i32 %61, %65, !dbg !7490
  %67 = lshr i32 %38, 2, !dbg !7492
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7493
  %69 = load i32, i32* %68, align 4, !dbg !7493
  %70 = xor i32 %66, %69, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %70, metadata !7450, metadata !DIExpression()), !dbg !7451
  br label %71, !dbg !7495

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7496
  call void @llvm.dbg.value(metadata i32 %72, metadata !7450, metadata !DIExpression()), !dbg !7451
  %73 = add nsw i32 %38, -4, !dbg !7497
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7498
  %75 = load i32, i32* %74, align 4, !dbg !7498
  %76 = xor i32 %75, %72, !dbg !7499
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7500
  store i32 %76, i32* %77, align 4, !dbg !7501
  %78 = add nuw nsw i32 %38, 1, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %78, metadata !7449, metadata !DIExpression()), !dbg !7451
  %79 = icmp eq i32 %78, 44, !dbg !7503
  br i1 %79, label %80, label %36, !dbg !7460, !llvm.loop !7504

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7451
  ret i32 %81, !dbg !7506
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7511, metadata !DIExpression()), !dbg !7512
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7513
  ret i32 %2, !dbg !7514
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7515 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7520, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i8* %1, metadata !7521, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7522, metadata !DIExpression()), !dbg !7525
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7526
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7526
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7523, metadata !DIExpression()), !dbg !7527
  %6 = icmp eq i8* %0, null, !dbg !7528
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7530
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7530
  br i1 %10, label %23, label %11, !dbg !7530

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7531
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7532
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7533
  call void @llvm.dbg.value(metadata i32 0, metadata !7524, metadata !DIExpression()), !dbg !7525
  br label %14, !dbg !7534

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7524, metadata !DIExpression()), !dbg !7525
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7536
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7539
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7540
  %16 = add nuw nsw i32 %15, 1, !dbg !7541
  %17 = shl nuw nsw i32 %16, 2, !dbg !7542
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7543
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7544
  call void @llvm.dbg.value(metadata i32 %16, metadata !7524, metadata !DIExpression()), !dbg !7525
  %19 = icmp eq i32 %16, 9, !dbg !7545
  br i1 %19, label %20, label %14, !dbg !7534, !llvm.loop !7546

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7548
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7549
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7550
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7551
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7552
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7553
  br label %23, !dbg !7554

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7525
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7555
  ret i32 %24, !dbg !7555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7558, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32* %1, metadata !7559, metadata !DIExpression()), !dbg !7560
  %3 = load i32, i32* %1, align 4, !dbg !7561
  %4 = lshr i32 %3, 24, !dbg !7562
  %5 = load i8, i8* %0, align 1, !dbg !7563
  %6 = trunc i32 %4 to i8, !dbg !7563
  %7 = xor i8 %5, %6, !dbg !7563
  store i8 %7, i8* %0, align 1, !dbg !7563
  %8 = load i32, i32* %1, align 4, !dbg !7564
  %9 = lshr i32 %8, 16, !dbg !7565
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7566
  %11 = load i8, i8* %10, align 1, !dbg !7567
  %12 = trunc i32 %9 to i8, !dbg !7567
  %13 = xor i8 %11, %12, !dbg !7567
  store i8 %13, i8* %10, align 1, !dbg !7567
  %14 = load i32, i32* %1, align 4, !dbg !7568
  %15 = lshr i32 %14, 8, !dbg !7569
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7570
  %17 = load i8, i8* %16, align 1, !dbg !7571
  %18 = trunc i32 %15 to i8, !dbg !7571
  %19 = xor i8 %17, %18, !dbg !7571
  store i8 %19, i8* %16, align 1, !dbg !7571
  %20 = load i32, i32* %1, align 4, !dbg !7572
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7573
  %22 = load i8, i8* %21, align 1, !dbg !7574
  %23 = trunc i32 %20 to i8, !dbg !7574
  %24 = xor i8 %22, %23, !dbg !7574
  store i8 %24, i8* %21, align 1, !dbg !7574
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7575
  %26 = load i32, i32* %25, align 4, !dbg !7575
  %27 = lshr i32 %26, 24, !dbg !7576
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7577
  %29 = load i8, i8* %28, align 1, !dbg !7578
  %30 = trunc i32 %27 to i8, !dbg !7578
  %31 = xor i8 %29, %30, !dbg !7578
  store i8 %31, i8* %28, align 1, !dbg !7578
  %32 = load i32, i32* %25, align 4, !dbg !7579
  %33 = lshr i32 %32, 16, !dbg !7580
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7581
  %35 = load i8, i8* %34, align 1, !dbg !7582
  %36 = trunc i32 %33 to i8, !dbg !7582
  %37 = xor i8 %35, %36, !dbg !7582
  store i8 %37, i8* %34, align 1, !dbg !7582
  %38 = load i32, i32* %25, align 4, !dbg !7583
  %39 = lshr i32 %38, 8, !dbg !7584
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7585
  %41 = load i8, i8* %40, align 1, !dbg !7586
  %42 = trunc i32 %39 to i8, !dbg !7586
  %43 = xor i8 %41, %42, !dbg !7586
  store i8 %43, i8* %40, align 1, !dbg !7586
  %44 = load i32, i32* %25, align 4, !dbg !7587
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7588
  %46 = load i8, i8* %45, align 1, !dbg !7589
  %47 = trunc i32 %44 to i8, !dbg !7589
  %48 = xor i8 %46, %47, !dbg !7589
  store i8 %48, i8* %45, align 1, !dbg !7589
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7590
  %50 = load i32, i32* %49, align 4, !dbg !7590
  %51 = lshr i32 %50, 24, !dbg !7591
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7592
  %53 = load i8, i8* %52, align 1, !dbg !7593
  %54 = trunc i32 %51 to i8, !dbg !7593
  %55 = xor i8 %53, %54, !dbg !7593
  store i8 %55, i8* %52, align 1, !dbg !7593
  %56 = load i32, i32* %49, align 4, !dbg !7594
  %57 = lshr i32 %56, 16, !dbg !7595
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7596
  %59 = load i8, i8* %58, align 1, !dbg !7597
  %60 = trunc i32 %57 to i8, !dbg !7597
  %61 = xor i8 %59, %60, !dbg !7597
  store i8 %61, i8* %58, align 1, !dbg !7597
  %62 = load i32, i32* %49, align 4, !dbg !7598
  %63 = lshr i32 %62, 8, !dbg !7599
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7600
  %65 = load i8, i8* %64, align 1, !dbg !7601
  %66 = trunc i32 %63 to i8, !dbg !7601
  %67 = xor i8 %65, %66, !dbg !7601
  store i8 %67, i8* %64, align 1, !dbg !7601
  %68 = load i32, i32* %49, align 4, !dbg !7602
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7603
  %70 = load i8, i8* %69, align 1, !dbg !7604
  %71 = trunc i32 %68 to i8, !dbg !7604
  %72 = xor i8 %70, %71, !dbg !7604
  store i8 %72, i8* %69, align 1, !dbg !7604
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7605
  %74 = load i32, i32* %73, align 4, !dbg !7605
  %75 = lshr i32 %74, 24, !dbg !7606
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7607
  %77 = load i8, i8* %76, align 1, !dbg !7608
  %78 = trunc i32 %75 to i8, !dbg !7608
  %79 = xor i8 %77, %78, !dbg !7608
  store i8 %79, i8* %76, align 1, !dbg !7608
  %80 = load i32, i32* %73, align 4, !dbg !7609
  %81 = lshr i32 %80, 16, !dbg !7610
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7611
  %83 = load i8, i8* %82, align 1, !dbg !7612
  %84 = trunc i32 %81 to i8, !dbg !7612
  %85 = xor i8 %83, %84, !dbg !7612
  store i8 %85, i8* %82, align 1, !dbg !7612
  %86 = load i32, i32* %73, align 4, !dbg !7613
  %87 = lshr i32 %86, 8, !dbg !7614
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7615
  %89 = load i8, i8* %88, align 1, !dbg !7616
  %90 = trunc i32 %87 to i8, !dbg !7616
  %91 = xor i8 %89, %90, !dbg !7616
  store i8 %91, i8* %88, align 1, !dbg !7616
  %92 = load i32, i32* %73, align 4, !dbg !7617
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7618
  %94 = load i8, i8* %93, align 1, !dbg !7619
  %95 = trunc i32 %92 to i8, !dbg !7619
  %96 = xor i8 %94, %95, !dbg !7619
  store i8 %96, i8* %93, align 1, !dbg !7619
  ret void, !dbg !7620
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7623, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i32 0, metadata !7624, metadata !DIExpression()), !dbg !7625
  br label %2, !dbg !7626

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7624, metadata !DIExpression()), !dbg !7625
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7628
  %5 = load i8, i8* %4, align 1, !dbg !7628
  %6 = zext i8 %5 to i32, !dbg !7631
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7631
  %8 = load i8, i8* %7, align 1, !dbg !7631
  store i8 %8, i8* %4, align 1, !dbg !7632
  %9 = add nuw nsw i32 %3, 1, !dbg !7633
  call void @llvm.dbg.value(metadata i32 %9, metadata !7624, metadata !DIExpression()), !dbg !7625
  %10 = icmp eq i32 %9, 16, !dbg !7634
  br i1 %10, label %11, label %2, !dbg !7626, !llvm.loop !7635

11:                                               ; preds = %2
  ret void, !dbg !7637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7638 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7640, metadata !DIExpression()), !dbg !7642
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7643
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7643
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7641, metadata !DIExpression()), !dbg !7644
  %4 = load i8, i8* %0, align 1, !dbg !7645
  store i8 %4, i8* %3, align 1, !dbg !7646
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7647
  %6 = load i8, i8* %5, align 1, !dbg !7647
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7648
  store i8 %6, i8* %7, align 1, !dbg !7649
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7650
  %9 = load i8, i8* %8, align 1, !dbg !7650
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7651
  store i8 %9, i8* %10, align 1, !dbg !7652
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7653
  %12 = load i8, i8* %11, align 1, !dbg !7653
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7654
  store i8 %12, i8* %13, align 1, !dbg !7655
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7656
  %15 = load i8, i8* %14, align 1, !dbg !7656
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7657
  store i8 %15, i8* %16, align 1, !dbg !7658
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7659
  %18 = load i8, i8* %17, align 1, !dbg !7659
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7660
  store i8 %18, i8* %19, align 1, !dbg !7661
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7662
  %21 = load i8, i8* %20, align 1, !dbg !7662
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7663
  store i8 %21, i8* %22, align 1, !dbg !7664
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7665
  %24 = load i8, i8* %23, align 1, !dbg !7665
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7666
  store i8 %24, i8* %25, align 1, !dbg !7667
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7668
  %27 = load i8, i8* %26, align 1, !dbg !7668
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7669
  store i8 %27, i8* %28, align 1, !dbg !7670
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7671
  %30 = load i8, i8* %29, align 1, !dbg !7671
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7672
  store i8 %30, i8* %31, align 1, !dbg !7673
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7674
  %33 = load i8, i8* %32, align 1, !dbg !7674
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7675
  store i8 %33, i8* %34, align 1, !dbg !7676
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7677
  %36 = load i8, i8* %35, align 1, !dbg !7677
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7678
  store i8 %36, i8* %37, align 1, !dbg !7679
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7680
  %39 = load i8, i8* %38, align 1, !dbg !7680
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7681
  store i8 %39, i8* %40, align 1, !dbg !7682
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7683
  %42 = load i8, i8* %41, align 1, !dbg !7683
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7684
  store i8 %42, i8* %43, align 1, !dbg !7685
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7686
  %45 = load i8, i8* %44, align 1, !dbg !7686
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7687
  store i8 %45, i8* %46, align 1, !dbg !7688
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7689
  %48 = load i8, i8* %47, align 1, !dbg !7689
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7690
  store i8 %48, i8* %49, align 1, !dbg !7691
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7692
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7693
  ret void, !dbg !7693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7694 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7696, metadata !DIExpression()), !dbg !7698
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7699
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7699
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7697, metadata !DIExpression()), !dbg !7700
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7701
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7702
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7703
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7704
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7705
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7706
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7707
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7708
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7709
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7710
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7711
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7712
  ret void, !dbg !7712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7715, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i8* %1, metadata !7716, metadata !DIExpression()), !dbg !7717
  %3 = load i8, i8* %1, align 1, !dbg !7718
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7719
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7720
  %6 = load i8, i8* %5, align 1, !dbg !7720
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7720
  %8 = load i8, i8* %5, align 1, !dbg !7720
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7721
  %10 = load i8, i8* %9, align 1, !dbg !7721
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7722
  %12 = load i8, i8* %11, align 1, !dbg !7722
  %13 = xor i8 %7, %4, !dbg !7720
  %14 = xor i8 %13, %8, !dbg !7723
  %15 = xor i8 %14, %10, !dbg !7724
  %16 = xor i8 %15, %12, !dbg !7725
  store i8 %16, i8* %0, align 1, !dbg !7726
  %17 = load i8, i8* %1, align 1, !dbg !7727
  %18 = load i8, i8* %5, align 1, !dbg !7728
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7729
  %20 = load i8, i8* %9, align 1, !dbg !7730
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7730
  %22 = load i8, i8* %9, align 1, !dbg !7730
  %23 = load i8, i8* %11, align 1, !dbg !7731
  %24 = xor i8 %19, %17, !dbg !7730
  %25 = xor i8 %24, %21, !dbg !7732
  %26 = xor i8 %25, %22, !dbg !7733
  %27 = xor i8 %26, %23, !dbg !7734
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7735
  store i8 %27, i8* %28, align 1, !dbg !7736
  %29 = load i8, i8* %1, align 1, !dbg !7737
  %30 = load i8, i8* %5, align 1, !dbg !7738
  %31 = load i8, i8* %9, align 1, !dbg !7739
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7740
  %33 = load i8, i8* %11, align 1, !dbg !7741
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7741
  %35 = load i8, i8* %11, align 1, !dbg !7741
  %36 = xor i8 %30, %29, !dbg !7741
  %37 = xor i8 %36, %32, !dbg !7742
  %38 = xor i8 %37, %34, !dbg !7743
  %39 = xor i8 %38, %35, !dbg !7744
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7745
  store i8 %39, i8* %40, align 1, !dbg !7746
  %41 = load i8, i8* %1, align 1, !dbg !7747
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7747
  %43 = load i8, i8* %1, align 1, !dbg !7747
  %44 = xor i8 %43, %42, !dbg !7747
  %45 = load i8, i8* %5, align 1, !dbg !7748
  %46 = xor i8 %44, %45, !dbg !7749
  %47 = load i8, i8* %9, align 1, !dbg !7750
  %48 = xor i8 %46, %47, !dbg !7751
  %49 = load i8, i8* %11, align 1, !dbg !7752
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7753
  %51 = xor i8 %48, %50, !dbg !7754
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7755
  store i8 %51, i8* %52, align 1, !dbg !7756
  ret void, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7758 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7764, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %1, metadata !7765, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %2, metadata !7766, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %3, metadata !7767, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %4, metadata !7768, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7769, metadata !DIExpression()), !dbg !7773
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7774
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7774
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7770, metadata !DIExpression()), !dbg !7775
  %9 = icmp eq i8* %0, null, !dbg !7776
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7778
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7778
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7778
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7778
  %18 = xor i1 %17, true, !dbg !7778
  %19 = or i32 %3, %1, !dbg !7778
  %20 = and i32 %19, 15, !dbg !7778
  %21 = icmp eq i32 %20, 0, !dbg !7778
  %22 = and i1 %21, %18, !dbg !7778
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7778
  br i1 %25, label %26, label %52, !dbg !7778

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7779
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7780
  call void @llvm.dbg.value(metadata i8* %0, metadata !7764, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7773
  call void @llvm.dbg.value(metadata i32 0, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 0, metadata !7771, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %2, metadata !7766, metadata !DIExpression()), !dbg !7773
  br i1 %14, label %52, label %29, !dbg !7781

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7783
  call void @llvm.dbg.value(metadata i8* %30, metadata !7764, metadata !DIExpression()), !dbg !7773
  br label %31, !dbg !7781

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %33, metadata !7771, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %34, metadata !7764, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %35, metadata !7766, metadata !DIExpression()), !dbg !7773
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7784
  call void @llvm.dbg.value(metadata i8* %36, metadata !7766, metadata !DIExpression()), !dbg !7773
  %37 = load i8, i8* %35, align 1, !dbg !7787
  %38 = add i32 %32, 1, !dbg !7788
  call void @llvm.dbg.value(metadata i32 %38, metadata !7772, metadata !DIExpression()), !dbg !7773
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7789
  %40 = load i8, i8* %39, align 1, !dbg !7790
  %41 = xor i8 %40, %37, !dbg !7790
  store i8 %41, i8* %39, align 1, !dbg !7790
  %42 = icmp eq i32 %38, 16, !dbg !7791
  br i1 %42, label %43, label %47, !dbg !7793

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7794
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7796
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7797
  call void @llvm.dbg.value(metadata i8* %46, metadata !7764, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 0, metadata !7772, metadata !DIExpression()), !dbg !7773
  br label %47, !dbg !7798

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7773
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7799
  call void @llvm.dbg.value(metadata i32 %49, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %48, metadata !7764, metadata !DIExpression()), !dbg !7773
  %50 = add nuw i32 %33, 1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %50, metadata !7771, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i8* %36, metadata !7766, metadata !DIExpression()), !dbg !7773
  %51 = icmp eq i32 %50, %3, !dbg !7801
  br i1 %51, label %52, label %31, !dbg !7781, !llvm.loop !7802

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7773
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7804
  ret i32 %53, !dbg !7804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7805 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7807, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %1, metadata !7808, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %2, metadata !7809, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %3, metadata !7810, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %4, metadata !7811, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7812, metadata !DIExpression()), !dbg !7817
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7818
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7818
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7813, metadata !DIExpression()), !dbg !7819
  %9 = icmp eq i8* %0, null, !dbg !7820
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7822
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7822
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7822
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7822
  %18 = xor i1 %17, true, !dbg !7822
  %19 = or i32 %3, %1, !dbg !7822
  %20 = and i32 %19, 15, !dbg !7822
  %21 = icmp eq i32 %20, 0, !dbg !7822
  %22 = and i1 %21, %18, !dbg !7822
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7822
  %25 = xor i1 %24, true, !dbg !7822
  %26 = or i1 %14, %25, !dbg !7822
  %27 = zext i1 %24 to i32, !dbg !7822
  br i1 %26, label %51, label %28, !dbg !7822

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %30, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %31, metadata !7814, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %32, metadata !7807, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %33, metadata !7809, metadata !DIExpression()), !dbg !7817
  %34 = and i32 %30, 15, !dbg !7823
  %35 = icmp eq i32 %34, 0, !dbg !7828
  br i1 %35, label %36, label %39, !dbg !7829

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7830
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7832
  call void @llvm.dbg.value(metadata i8* %38, metadata !7809, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 0, metadata !7816, metadata !DIExpression()), !dbg !7817
  br label %39, !dbg !7833

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7834
  call void @llvm.dbg.value(metadata i32 %41, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %40, metadata !7809, metadata !DIExpression()), !dbg !7817
  %42 = add i32 %41, 1, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %42, metadata !7816, metadata !DIExpression()), !dbg !7817
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7836
  %44 = load i8, i8* %43, align 1, !dbg !7836
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7837
  call void @llvm.dbg.value(metadata i8* %45, metadata !7814, metadata !DIExpression()), !dbg !7817
  %46 = load i8, i8* %31, align 1, !dbg !7838
  %47 = xor i8 %46, %44, !dbg !7839
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7840
  call void @llvm.dbg.value(metadata i8* %48, metadata !7807, metadata !DIExpression()), !dbg !7817
  store i8 %47, i8* %32, align 1, !dbg !7841
  %49 = add nuw i32 %30, 1, !dbg !7842
  call void @llvm.dbg.value(metadata i32 %49, metadata !7815, metadata !DIExpression()), !dbg !7817
  %50 = icmp eq i32 %49, %3, !dbg !7843
  br i1 %50, label %51, label %28, !dbg !7844, !llvm.loop !7845

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7817
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7847
  ret i32 %52, !dbg !7847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7848 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7854, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32 %1, metadata !7855, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i8* %2, metadata !7856, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32 %3, metadata !7857, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i8* %4, metadata !7858, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7859, metadata !DIExpression()), !dbg !7864
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7865
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7865
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7860, metadata !DIExpression()), !dbg !7866
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7867
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7867
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7861, metadata !DIExpression()), !dbg !7868
  %11 = icmp eq i8* %0, null, !dbg !7869
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7871
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7871
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7871
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7871
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7871
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7871
  br i1 %23, label %86, label %24, !dbg !7871

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7872
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7873
  %27 = load i8, i8* %26, align 1, !dbg !7873
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7874
  %29 = load i8, i8* %28, align 1, !dbg !7874
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7875
  %31 = load i8, i8* %30, align 1, !dbg !7875
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7876
  %33 = load i8, i8* %32, align 1, !dbg !7876
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  call void @llvm.dbg.value(metadata i32 0, metadata !7863, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i8* %0, metadata !7854, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i8* %2, metadata !7856, metadata !DIExpression()), !dbg !7864
  %34 = zext i8 %29 to i32, !dbg !7874
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %35 = shl nuw nsw i32 %34, 16, !dbg !7877
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %36 = zext i8 %27 to i32, !dbg !7873
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %37 = shl nuw i32 %36, 24, !dbg !7878
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %38 = or i32 %35, %37, !dbg !7879
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %39 = zext i8 %31 to i32, !dbg !7875
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %40 = shl nuw nsw i32 %39, 8, !dbg !7880
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %41 = or i32 %38, %40, !dbg !7881
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %42 = zext i8 %33 to i32, !dbg !7882
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7864
  %43 = or i32 %41, %42, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %43, metadata !7862, metadata !DIExpression()), !dbg !7864
  br label %44, !dbg !7884

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7863, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32 %50, metadata !7862, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i8* %51, metadata !7854, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i8* %52, metadata !7856, metadata !DIExpression()), !dbg !7864
  %53 = and i32 %49, 15, !dbg !7886
  %54 = icmp eq i32 %53, 0, !dbg !7890
  br i1 %54, label %55, label %67, !dbg !7891

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7892
  %57 = icmp eq i32 %56, 0, !dbg !7892
  br i1 %57, label %86, label %58, !dbg !7895

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %59, metadata !7862, metadata !DIExpression()), !dbg !7864
  %60 = lshr i32 %59, 24, !dbg !7898
  %61 = trunc i32 %60 to i8, !dbg !7899
  store i8 %61, i8* %26, align 1, !dbg !7900
  %62 = lshr i32 %59, 16, !dbg !7901
  %63 = trunc i32 %62 to i8, !dbg !7902
  store i8 %63, i8* %28, align 1, !dbg !7903
  %64 = lshr i32 %59, 8, !dbg !7904
  %65 = trunc i32 %64 to i8, !dbg !7905
  store i8 %65, i8* %30, align 1, !dbg !7906
  %66 = trunc i32 %59 to i8, !dbg !7907
  store i8 %66, i8* %32, align 1, !dbg !7908
  br label %67, !dbg !7909

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7864
  call void @llvm.dbg.value(metadata i32 %72, metadata !7862, metadata !DIExpression()), !dbg !7864
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7910
  %74 = load i8, i8* %73, align 1, !dbg !7910
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7911
  call void @llvm.dbg.value(metadata i8* %75, metadata !7856, metadata !DIExpression()), !dbg !7864
  %76 = load i8, i8* %52, align 1, !dbg !7912
  %77 = xor i8 %76, %74, !dbg !7913
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7914
  call void @llvm.dbg.value(metadata i8* %78, metadata !7854, metadata !DIExpression()), !dbg !7864
  store i8 %77, i8* %51, align 1, !dbg !7915
  %79 = add nuw i32 %49, 1, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %79, metadata !7863, metadata !DIExpression()), !dbg !7864
  %80 = icmp eq i32 %79, %3, !dbg !7917
  br i1 %80, label %81, label %44, !dbg !7884, !llvm.loop !7918

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7920
  store i8 %71, i8* %82, align 1, !dbg !7921
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7922
  store i8 %70, i8* %83, align 1, !dbg !7923
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7924
  store i8 %69, i8* %84, align 1, !dbg !7925
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7926
  store i8 %68, i8* %85, align 1, !dbg !7927
  br label %86, !dbg !7928

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7864
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7929
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7929
  ret i32 %87, !dbg !7929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7930 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7935, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7936, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %2, metadata !7937, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i32 %3, metadata !7938, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i32 %4, metadata !7939, metadata !DIExpression()), !dbg !7940
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7941
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7943
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7943
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7943
  br i1 %12, label %23, label %13, !dbg !7943

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7944
  %15 = icmp ult i32 %14, 13, !dbg !7944
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7944
  br i1 %18, label %19, label %23, !dbg !7944

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7947
  store i32 %4, i32* %20, align 4, !dbg !7948
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7949
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7950
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7951
  store i8* %2, i8** %22, align 4, !dbg !7952
  br label %23, !dbg !7953

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7940
  ret i32 %24, !dbg !7954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7955 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7959, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %1, metadata !7960, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %2, metadata !7961, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %3, metadata !7962, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %4, metadata !7963, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %5, metadata !7964, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7965, metadata !DIExpression()), !dbg !7969
  %10 = icmp eq i8* %0, null, !dbg !7970
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7972
  br i1 %12, label %85, label %13, !dbg !7972

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7973
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7974
  br i1 %16, label %85, label %17, !dbg !7974

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7975
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7976
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7976
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7976
  br i1 %24, label %85, label %25, !dbg !7976

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7977
  %27 = load i32, i32* %26, align 4, !dbg !7977
  %28 = add i32 %27, %5, !dbg !7978
  %29 = icmp ugt i32 %28, %1, !dbg !7979
  br i1 %29, label %85, label %30, !dbg !7980

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7981
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7981
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7966, metadata !DIExpression()), !dbg !7982
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7983
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7983
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7967, metadata !DIExpression()), !dbg !7984
  %33 = select i1 %18, i32 64, i32 0, !dbg !7985
  %34 = shl i32 %27, 2, !dbg !7986
  %35 = add i32 %34, 248, !dbg !7986
  %36 = and i32 %35, 248, !dbg !7986
  %37 = or i32 %36, %33, !dbg !7987
  %38 = trunc i32 %37 to i8, !dbg !7988
  %39 = or i8 %38, 1, !dbg !7988
  store i8 %39, i8* %31, align 1, !dbg !7989
  call void @llvm.dbg.value(metadata i32 1, metadata !7968, metadata !DIExpression()), !dbg !7969
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7968, metadata !DIExpression()), !dbg !7969
  br label %42, !dbg !7990

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7968, metadata !DIExpression()), !dbg !7969
  %44 = add nsw i32 %43, -1, !dbg !7992
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7995
  %46 = load i8, i8* %45, align 1, !dbg !7995
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7996
  store i8 %46, i8* %47, align 1, !dbg !7997
  %48 = add nuw nsw i32 %43, 1, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %48, metadata !7968, metadata !DIExpression()), !dbg !7969
  %49 = icmp eq i32 %48, 14, !dbg !7999
  br i1 %49, label %50, label %42, !dbg !7990, !llvm.loop !8000

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !8002
  %52 = trunc i32 %51 to i8, !dbg !8003
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8004
  store i8 %52, i8* %53, align 1, !dbg !8005
  %54 = trunc i32 %5 to i8, !dbg !8006
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8007
  store i8 %54, i8* %55, align 1, !dbg !8008
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8009
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8009
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !8010
  br i1 %18, label %59, label %61, !dbg !8011

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8012
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !8015
  br label %61, !dbg !8016

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !8017

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8018
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !8021
  br label %64, !dbg !8022

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !8023
  store i8 0, i8* %55, align 1, !dbg !8024
  store i8 0, i8* %53, align 1, !dbg !8025
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8026
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !8027
  store i8 0, i8* %55, align 1, !dbg !8028
  store i8 0, i8* %53, align 1, !dbg !8029
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !8030
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !8031
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7959, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7969
  call void @llvm.dbg.value(metadata i32 0, metadata !7968, metadata !DIExpression()), !dbg !7969
  %68 = load i32, i32* %26, align 4, !dbg !8032
  %69 = icmp eq i32 %68, 0, !dbg !8035
  br i1 %69, label %84, label %70, !dbg !8036

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !8037
  call void @llvm.dbg.value(metadata i8* %71, metadata !7959, metadata !DIExpression()), !dbg !7969
  br label %72, !dbg !8036

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %74, metadata !7959, metadata !DIExpression()), !dbg !7969
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !8038
  %76 = load i8, i8* %75, align 1, !dbg !8038
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !8040
  %78 = load i8, i8* %77, align 1, !dbg !8040
  %79 = xor i8 %78, %76, !dbg !8041
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !8042
  call void @llvm.dbg.value(metadata i8* %80, metadata !7959, metadata !DIExpression()), !dbg !7969
  store i8 %79, i8* %74, align 1, !dbg !8043
  %81 = add nuw i32 %73, 1, !dbg !8044
  call void @llvm.dbg.value(metadata i32 %81, metadata !7968, metadata !DIExpression()), !dbg !7969
  %82 = load i32, i32* %26, align 4, !dbg !8032
  %83 = icmp ult i32 %81, %82, !dbg !8035
  br i1 %83, label %72, label %84, !dbg !8036, !llvm.loop !8045

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8047
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7969
  ret i32 %86, !dbg !8047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !8048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8052, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %1, metadata !8053, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 %2, metadata !8054, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 %3, metadata !8055, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !8056, metadata !DIExpression()), !dbg !8058
  %6 = icmp eq i32 %3, 0, !dbg !8059
  br i1 %6, label %17, label %7, !dbg !8061

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !8062
  %9 = load i8, i8* %0, align 1, !dbg !8064
  %10 = trunc i32 %8 to i8, !dbg !8064
  %11 = xor i8 %9, %10, !dbg !8064
  store i8 %11, i8* %0, align 1, !dbg !8064
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8065
  %13 = load i8, i8* %12, align 1, !dbg !8066
  %14 = trunc i32 %2 to i8, !dbg !8066
  %15 = xor i8 %13, %14, !dbg !8066
  store i8 %15, i8* %12, align 1, !dbg !8066
  %16 = add i32 %2, 2, !dbg !8067
  call void @llvm.dbg.value(metadata i32 %16, metadata !8054, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 2, metadata !8057, metadata !DIExpression()), !dbg !8058
  br label %17, !dbg !8068

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !8069
  call void @llvm.dbg.value(metadata i32 %19, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 %18, metadata !8054, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %1, metadata !8053, metadata !DIExpression()), !dbg !8058
  %20 = icmp ult i32 %19, %18, !dbg !8070
  br i1 %20, label %21, label %39, !dbg !8071

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %23, metadata !8053, metadata !DIExpression()), !dbg !8058
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8072
  call void @llvm.dbg.value(metadata i8* %24, metadata !8053, metadata !DIExpression()), !dbg !8058
  %25 = load i8, i8* %23, align 1, !dbg !8074
  %26 = add i32 %22, 1, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %26, metadata !8057, metadata !DIExpression()), !dbg !8058
  %27 = and i32 %22, 15, !dbg !8076
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !8077
  %29 = load i8, i8* %28, align 1, !dbg !8078
  %30 = xor i8 %29, %25, !dbg !8078
  store i8 %30, i8* %28, align 1, !dbg !8078
  %31 = and i32 %26, 15, !dbg !8079
  %32 = icmp eq i32 %31, 0, !dbg !8081
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !8082
  br i1 %34, label %35, label %37, !dbg !8082

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !8083
  br label %37, !dbg !8085

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %24, metadata !8053, metadata !DIExpression()), !dbg !8058
  %38 = icmp eq i32 %26, %18, !dbg !8070
  br i1 %38, label %39, label %21, !dbg !8071, !llvm.loop !8086

39:                                               ; preds = %37, %17
  ret void, !dbg !8088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !8089 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8094, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %1, metadata !8095, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8* %2, metadata !8096, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %3, metadata !8097, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8* %4, metadata !8098, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !8099, metadata !DIExpression()), !dbg !8104
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !8105
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8105
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !8100, metadata !DIExpression()), !dbg !8106
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8107
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8107
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8101, metadata !DIExpression()), !dbg !8108
  %11 = icmp eq i8* %0, null, !dbg !8109
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !8111
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !8111
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !8111
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !8111
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !8111
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !8111
  br i1 %23, label %63, label %24, !dbg !8111

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !8112
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8113
  %27 = load i8, i8* %26, align 1, !dbg !8113
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8114
  %29 = load i8, i8* %28, align 1, !dbg !8114
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !8102, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8104
  call void @llvm.dbg.value(metadata i32 0, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8* %0, metadata !8094, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8* %2, metadata !8096, metadata !DIExpression()), !dbg !8104
  %30 = zext i8 %27 to i16, !dbg !8113
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !8102, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8104
  %31 = shl nuw i16 %30, 8, !dbg !8115
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !8102, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8104
  %32 = zext i8 %29 to i16, !dbg !8116
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !8102, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8104
  %33 = or i16 %31, %32, !dbg !8117
  call void @llvm.dbg.value(metadata i16 %33, metadata !8102, metadata !DIExpression()), !dbg !8104
  br label %34, !dbg !8118

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i16 %36, metadata !8102, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8* %37, metadata !8094, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i8* %38, metadata !8096, metadata !DIExpression()), !dbg !8104
  %39 = and i32 %35, 15, !dbg !8120
  %40 = icmp eq i32 %39, 0, !dbg !8124
  br i1 %40, label %41, label %48, !dbg !8125

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !8126
  call void @llvm.dbg.value(metadata i16 %42, metadata !8102, metadata !DIExpression()), !dbg !8104
  %43 = lshr i16 %42, 8, !dbg !8128
  %44 = trunc i16 %43 to i8, !dbg !8129
  store i8 %44, i8* %26, align 1, !dbg !8130
  %45 = trunc i16 %42 to i8, !dbg !8131
  store i8 %45, i8* %28, align 1, !dbg !8132
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !8133
  %47 = icmp eq i32 %46, 0, !dbg !8133
  br i1 %47, label %63, label %48, !dbg !8135

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !8104
  call void @llvm.dbg.value(metadata i16 %49, metadata !8102, metadata !DIExpression()), !dbg !8104
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !8136
  %51 = load i8, i8* %50, align 1, !dbg !8136
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !8137
  call void @llvm.dbg.value(metadata i8* %52, metadata !8096, metadata !DIExpression()), !dbg !8104
  %53 = load i8, i8* %38, align 1, !dbg !8138
  %54 = xor i8 %53, %51, !dbg !8139
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8140
  call void @llvm.dbg.value(metadata i8* %55, metadata !8094, metadata !DIExpression()), !dbg !8104
  store i8 %54, i8* %37, align 1, !dbg !8141
  %56 = add nuw i32 %35, 1, !dbg !8142
  call void @llvm.dbg.value(metadata i32 %56, metadata !8103, metadata !DIExpression()), !dbg !8104
  %57 = icmp eq i32 %56, %3, !dbg !8143
  br i1 %57, label %58, label %34, !dbg !8118, !llvm.loop !8144

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !8146
  %60 = load i8, i8* %28, align 1, !dbg !8147
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !8148
  store i8 %59, i8* %61, align 1, !dbg !8149
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !8150
  store i8 %60, i8* %62, align 1, !dbg !8151
  br label %63, !dbg !8152

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8153
  ret void, !dbg !8153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !8154 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8156, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %1, metadata !8157, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i8* %2, metadata !8158, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %3, metadata !8159, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i8* %4, metadata !8160, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %5, metadata !8161, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !8162, metadata !DIExpression()), !dbg !8166
  %10 = icmp eq i8* %0, null, !dbg !8167
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8169
  br i1 %12, label %106, label %13, !dbg !8169

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8170
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8171
  br i1 %16, label %106, label %17, !dbg !8171

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8172
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8173
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8173
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8173
  br i1 %24, label %106, label %25, !dbg !8173

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8174
  %27 = load i32, i32* %26, align 4, !dbg !8174
  %28 = sub i32 %5, %27, !dbg !8175
  %29 = icmp ugt i32 %28, %1, !dbg !8176
  br i1 %29, label %106, label %30, !dbg !8177

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8178
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8178
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8163, metadata !DIExpression()), !dbg !8179
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8180
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !8164, metadata !DIExpression()), !dbg !8181
  store i8 1, i8* %31, align 1, !dbg !8182
  call void @llvm.dbg.value(metadata i32 1, metadata !8165, metadata !DIExpression()), !dbg !8166
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8165, metadata !DIExpression()), !dbg !8166
  br label %35, !dbg !8183

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !8165, metadata !DIExpression()), !dbg !8166
  %37 = add nsw i32 %36, -1, !dbg !8185
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8188
  %39 = load i8, i8* %38, align 1, !dbg !8188
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8189
  store i8 %39, i8* %40, align 1, !dbg !8190
  %41 = add nuw nsw i32 %36, 1, !dbg !8191
  call void @llvm.dbg.value(metadata i32 %41, metadata !8165, metadata !DIExpression()), !dbg !8166
  %42 = icmp eq i32 %41, 14, !dbg !8192
  br i1 %42, label %43, label %35, !dbg !8183, !llvm.loop !8193

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8195
  store i8 0, i8* %44, align 1, !dbg !8196
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8197
  store i8 0, i8* %45, align 1, !dbg !8198
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8199
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8199
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8200
  store i8 0, i8* %44, align 1, !dbg !8201
  store i8 0, i8* %45, align 1, !dbg !8202
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8203
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8204
  call void @llvm.dbg.value(metadata i32 0, metadata !8165, metadata !DIExpression()), !dbg !8166
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8165, metadata !DIExpression()), !dbg !8166
  %51 = icmp eq i32 %50, 0, !dbg !8205
  br i1 %51, label %66, label %52, !dbg !8208

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8208

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !8165, metadata !DIExpression()), !dbg !8166
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8209
  %59 = load i8, i8* %58, align 1, !dbg !8211
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8212
  %61 = load i8, i8* %60, align 1, !dbg !8212
  %62 = xor i8 %61, %59, !dbg !8213
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8214
  store i8 %62, i8* %63, align 1, !dbg !8215
  %64 = add nuw i32 %57, 1, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %64, metadata !8165, metadata !DIExpression()), !dbg !8166
  %65 = icmp eq i32 %64, %50, !dbg !8205
  br i1 %65, label %66, label %56, !dbg !8208, !llvm.loop !8217

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8219
  %68 = shl i32 %50, 2, !dbg !8220
  %69 = add i32 %68, 248, !dbg !8220
  %70 = and i32 %69, 248, !dbg !8220
  %71 = or i32 %70, %67, !dbg !8221
  %72 = trunc i32 %71 to i8, !dbg !8222
  %73 = or i8 %72, 1, !dbg !8222
  store i8 %73, i8* %31, align 1, !dbg !8223
  call void @llvm.dbg.value(metadata i32 1, metadata !8165, metadata !DIExpression()), !dbg !8166
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8224

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !8165, metadata !DIExpression()), !dbg !8166
  %77 = add nsw i32 %76, -1, !dbg !8226
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8229
  %79 = load i8, i8* %78, align 1, !dbg !8229
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8230
  store i8 %79, i8* %80, align 1, !dbg !8231
  %81 = add nuw nsw i32 %76, 1, !dbg !8232
  call void @llvm.dbg.value(metadata i32 %81, metadata !8165, metadata !DIExpression()), !dbg !8166
  %82 = icmp eq i32 %81, 14, !dbg !8233
  br i1 %82, label %83, label %75, !dbg !8224, !llvm.loop !8234

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8236
  %85 = lshr i32 %84, 8, !dbg !8237
  %86 = trunc i32 %85 to i8, !dbg !8238
  store i8 %86, i8* %45, align 1, !dbg !8239
  %87 = trunc i32 %84 to i8, !dbg !8240
  store i8 %87, i8* %44, align 1, !dbg !8241
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8242
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8243
  br i1 %18, label %90, label %92, !dbg !8244

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8245
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8248
  br label %92, !dbg !8249

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8250

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8251
  %95 = sub i32 %5, %94, !dbg !8254
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8255
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8256
  br label %97, !dbg !8257

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8258
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8260
  %100 = icmp eq i32 %99, 0, !dbg !8261
  br i1 %100, label %104, label %101, !dbg !8262

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8263
  %103 = sub i32 %5, %102, !dbg !8265
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8266
  br label %104, !dbg !8267

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8268
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8269
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8269
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8166
  ret i32 %107, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8320, metadata !DIExpression()), !dbg !8321
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8322
  br i1 %3, label %5, label %4, !dbg !8324

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8325
  br label %5, !dbg !8327

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8328
  ret void, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8330 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8334, metadata !DIExpression()), !dbg !8335
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8336
  %3 = load i32, i32* %2, align 4, !dbg !8336
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8336
  %5 = load i32, i32* %4, align 4, !dbg !8336
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8336
  %7 = load i32, i32* %6, align 4, !dbg !8336
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8336
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8341
  %9 = load i32, i32* %8, align 4, !dbg !8341
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8341
  %11 = load i32, i32* %10, align 4, !dbg !8341
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8341
  %13 = load i32, i32* %12, align 4, !dbg !8341
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8341
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8346
  %15 = load i32, i32* %14, align 4, !dbg !8346
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8346
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8351
  %17 = load i32, i32* %16, align 4, !dbg !8351
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8351
  ret void, !dbg !8356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8357 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8374, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8375, metadata !DIExpression()), !dbg !8377
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8378
  %4 = load i32, i32* %3, align 4, !dbg !8378
  call void @llvm.dbg.value(metadata i32 %4, metadata !8376, metadata !DIExpression()), !dbg !8377
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8381 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8385, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.value(metadata i8* %0, metadata !8386, metadata !DIExpression()), !dbg !8388
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8389
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8389
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8387, metadata !DIExpression()), !dbg !8390
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8390
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8391
  %5 = bitcast i8* %4 to i32*, !dbg !8391
  %6 = load i32, i32* %5, align 4, !dbg !8391
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8392
  store i32 %6, i32* %7, align 4, !dbg !8393
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8394
  unreachable, !dbg !8395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8399, metadata !DIExpression()), !dbg !8400
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8401
  ret void, !dbg !8402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8407, metadata !DIExpression()), !dbg !8408
  %2 = icmp sgt i32 %0, -1, !dbg !8409
  br i1 %2, label %3, label %8, !dbg !8411

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8412, !srcloc !8414
  %4 = and i32 %0, 31, !dbg !8415
  %5 = shl nuw i32 1, %4, !dbg !8416
  %6 = lshr i32 %0, 5, !dbg !8417
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8418
  store volatile i32 %5, i32* %7, align 4, !dbg !8419
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8420, !srcloc !8421
  br label %8, !dbg !8422

8:                                                ; preds = %3, %1
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8432, metadata !DIExpression()), !dbg !8433
  %2 = icmp sgt i32 %0, -1, !dbg !8434
  br i1 %2, label %3, label %8, !dbg !8436

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8437
  %5 = shl nuw i32 1, %4, !dbg !8439
  %6 = lshr i32 %0, 5, !dbg !8440
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8441
  store volatile i32 %5, i32* %7, align 4, !dbg !8442
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8443, !srcloc !8447
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8448, !srcloc !8451
  br label %8, !dbg !8452

8:                                                ; preds = %3, %1
  ret void, !dbg !8453
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8458, metadata !DIExpression()), !dbg !8459
  %2 = lshr i32 %0, 5, !dbg !8460
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8461
  %4 = load volatile i32, i32* %3, align 4, !dbg !8461
  %5 = and i32 %0, 31, !dbg !8462
  %6 = shl nuw i32 1, %5, !dbg !8462
  %7 = and i32 %4, %6, !dbg !8463
  ret i32 %7, !dbg !8464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8469, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 %1, metadata !8470, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 %2, metadata !8471, metadata !DIExpression()), !dbg !8472
  %4 = add i32 %1, 1, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %4, metadata !8470, metadata !DIExpression()), !dbg !8472
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8482, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata i32 %1, metadata !8483, metadata !DIExpression()), !dbg !8484
  %3 = trunc i32 %1 to i8, !dbg !8485
  %4 = shl i8 %3, 4, !dbg !8485
  %5 = and i32 %0, 15, !dbg !8487
  %6 = add nsw i32 %5, -4, !dbg !8487
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8487
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8487
  %9 = icmp slt i32 %0, 0, !dbg !8487
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8487
  store volatile i8 %4, i8* %10, align 1, !dbg !8485
  ret void, !dbg !8488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8489 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8491, metadata !DIExpression()), !dbg !8492
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8493
  ret void, !dbg !8494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8495 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8497
  tail call void @z_arm_int_exit() #27, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: optsize
declare !dbg !8500 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8501 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8503 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8505
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !8506
  tail call void @z_bss_zero() #27, !dbg !8507
  tail call void @z_data_copy() #27, !dbg !8508
  tail call void @z_arm_interrupt_init() #27, !dbg !8509
  tail call void @z_cstart() #29, !dbg !8510
  unreachable, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8511 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8512
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8513, !srcloc !8516
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8517, !srcloc !8520
  ret void, !dbg !8521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8522 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8523
  %2 = and i32 %1, -15728641, !dbg !8523
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8523
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8524, !srcloc !8531
  call void @llvm.dbg.value(metadata i32 %3, metadata !8529, metadata !DIExpression()) #25, !dbg !8532
  %4 = and i32 %3, -5, !dbg !8533
  call void @llvm.dbg.value(metadata i32 %4, metadata !8534, metadata !DIExpression()) #25, !dbg !8539
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8541, !srcloc !8542
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8543, !srcloc !8520
  ret void, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8549, metadata !DIExpression()), !dbg !8550
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8551
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8552
  store i32 %0, i32* %3, align 4, !dbg !8553
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8554
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8555
  store i32 %4, i32* %5, align 4, !dbg !8556
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8557
  %7 = or i32 %6, 268435456, !dbg !8557
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8557
  call void @llvm.dbg.value(metadata i32 0, metadata !8558, metadata !DIExpression()) #25, !dbg !8561
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8563, !srcloc !8564
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8565
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8566
  %10 = load i32, i32* %9, align 4, !dbg !8566
  ret i32 %10, !dbg !8567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8678, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8679, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %2, metadata !8680, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8681, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %4, metadata !8682, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %5, metadata !8683, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %6, metadata !8684, metadata !DIExpression()), !dbg !8686
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8687
  call void @llvm.dbg.value(metadata i8* %8, metadata !8685, metadata !DIExpression()), !dbg !8686
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8688
  %10 = bitcast i8* %9 to i32*, !dbg !8688
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8689
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8690
  %12 = bitcast i8* %8 to i32*, !dbg !8691
  store i32 %11, i32* %12, align 4, !dbg !8692
  %13 = ptrtoint i8* %4 to i32, !dbg !8693
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8694
  %15 = bitcast i8* %14 to i32*, !dbg !8694
  store i32 %13, i32* %15, align 4, !dbg !8695
  %16 = ptrtoint i8* %5 to i32, !dbg !8696
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8697
  %18 = bitcast i8* %17 to i32*, !dbg !8697
  store i32 %16, i32* %18, align 4, !dbg !8698
  %19 = ptrtoint i8* %6 to i32, !dbg !8699
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8700
  %21 = bitcast i8* %20 to i32*, !dbg !8700
  store i32 %19, i32* %21, align 4, !dbg !8701
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8702
  %23 = bitcast i8* %22 to i32*, !dbg !8702
  store i32 16777216, i32* %23, align 4, !dbg !8703
  %24 = ptrtoint i8* %8 to i32, !dbg !8704
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8705
  store i32 %24, i32* %25, align 8, !dbg !8706
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8707
  store i32 0, i32* %26, align 4, !dbg !8708
  ret void, !dbg !8709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8715, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i32 %1, metadata !8716, metadata !DIExpression()), !dbg !8721
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8722
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8717, metadata !DIExpression()), !dbg !8721
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8723
  br i1 %4, label %19, label %5, !dbg !8725

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8720, metadata !DIExpression()), !dbg !8721
  %6 = icmp eq i32 %0, -22, !dbg !8726
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8726
  %8 = load i32, i32* %7, align 4, !dbg !8726
  br i1 %6, label %16, label %9, !dbg !8728

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8726
  %11 = icmp ule i32 %10, %0, !dbg !8726
  %12 = icmp ugt i32 %8, %0, !dbg !8726
  %13 = and i1 %12, %11, !dbg !8726
  %14 = icmp ugt i32 %8, %1, !dbg !8726
  %15 = and i1 %14, %13, !dbg !8726
  br i1 %15, label %18, label %19, !dbg !8726

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8726
  br i1 %17, label %18, label %19, !dbg !8728

18:                                               ; preds = %9, %16
  br label %19, !dbg !8729

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8721
  ret i32 %20, !dbg !8731
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8732 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8736, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %1, metadata !8737, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8738, metadata !DIExpression()), !dbg !8739
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8740
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8741
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8742, !srcloc !8743
  unreachable, !dbg !8744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8745 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8763, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %2, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8766, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 0, metadata !8767, metadata !DIExpression()), !dbg !8773
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8774
  %9 = and i32 %8, 511, !dbg !8775
  call void @llvm.dbg.value(metadata i32 %9, metadata !8768, metadata !DIExpression()), !dbg !8773
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8776
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8776
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8777
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8777
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8772, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 0, metadata !8779, metadata !DIExpression()) #25, !dbg !8782
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8784, !srcloc !8785
  call void @llvm.dbg.value(metadata i8* %6, metadata !8770, metadata !DIExpression(DW_OP_deref)), !dbg !8773
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8786
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8771, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %5, metadata !8769, metadata !DIExpression(DW_OP_deref)), !dbg !8773
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %12, metadata !8767, metadata !DIExpression()), !dbg !8773
  %13 = load i8, i8* %5, align 1, !dbg !8788, !range !8790
  call void @llvm.dbg.value(metadata i8 %13, metadata !8769, metadata !DIExpression()), !dbg !8773
  %14 = icmp eq i8 %13, 0, !dbg !8788
  br i1 %14, label %15, label %32, !dbg !8791

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8792
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8793
  %18 = load i8, i8* %6, align 1, !dbg !8794, !range !8790
  call void @llvm.dbg.value(metadata i8 %18, metadata !8770, metadata !DIExpression()), !dbg !8773
  %19 = icmp eq i8 %18, 0, !dbg !8794
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8796
  %21 = load i32, i32* %20, align 4, !dbg !8796
  br i1 %19, label %27, label %22, !dbg !8797

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8798
  %24 = icmp eq i32 %23, 0, !dbg !8801
  br i1 %24, label %25, label %31, !dbg !8802

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8803
  br label %29, !dbg !8805

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8806
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8796
  br label %31, !dbg !8808

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8808
  br label %32, !dbg !8809

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8809
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8809
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8809
  ret void, !dbg !8809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8815, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %1, metadata !8816, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %2, metadata !8817, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i8* %3, metadata !8818, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i8 0, metadata !8819, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8820, metadata !DIExpression()), !dbg !8821
  store i8 0, i8* %3, align 1, !dbg !8822
  %5 = icmp ugt i32 %2, -16777217, !dbg !8823
  br i1 %5, label %6, label %17, !dbg !8825

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8826
  %8 = icmp eq i32 %7, 8, !dbg !8826
  br i1 %8, label %9, label %10, !dbg !8826

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i32 0, i32 0), i32 noundef 69) #27, !dbg !8828
  br label %17, !dbg !8834

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8835
  %12 = icmp eq i32 %11, 0, !dbg !8835
  br i1 %12, label %13, label %14, !dbg !8836

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8820, metadata !DIExpression()), !dbg !8821
  store i8 1, i8* %3, align 1, !dbg !8839
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8821
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8820, metadata !DIExpression()), !dbg !8821
  br label %17, !dbg !8842

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8821
  ret %struct.__esf* %18, !dbg !8843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8844 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8848, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %1, metadata !8849, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i8* %2, metadata !8850, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 0, metadata !8851, metadata !DIExpression()), !dbg !8852
  store i8 0, i8* %2, align 1, !dbg !8853
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8854

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %5, metadata !8851, metadata !DIExpression()), !dbg !8852
  br label %12, !dbg !8857

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %7, metadata !8851, metadata !DIExpression()), !dbg !8852
  br label %12, !dbg !8859

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8860
  call void @llvm.dbg.value(metadata i32 0, metadata !8851, metadata !DIExpression()), !dbg !8852
  br label %12, !dbg !8861

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8862
  call void @llvm.dbg.value(metadata i32 0, metadata !8851, metadata !DIExpression()), !dbg !8852
  br label %12, !dbg !8863

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8864
  br label %12, !dbg !8865

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8866
  br label %12, !dbg !8867

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8852
  call void @llvm.dbg.value(metadata i32 %13, metadata !8851, metadata !DIExpression()), !dbg !8852
  ret i32 %13, !dbg !8868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8869 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8873, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i8* %1, metadata !8874, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 0, metadata !8875, metadata !DIExpression()), !dbg !8876
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8877
  store i8 0, i8* %1, align 1, !dbg !8882
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8883
  %4 = and i32 %3, 2, !dbg !8885
  %5 = icmp eq i32 %4, 0, !dbg !8886
  br i1 %5, label %7, label %6, !dbg !8887

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8888
  br label %36, !dbg !8894

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8895
  %9 = icmp sgt i32 %8, -1, !dbg !8897
  br i1 %9, label %11, label %10, !dbg !8898

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8899
  br label %36, !dbg !8905

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8906
  %13 = and i32 %12, 1073741824, !dbg !8908
  %14 = icmp eq i32 %13, 0, !dbg !8909
  br i1 %14, label %36, label %15, !dbg !8910

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.107, i32 0, i32 0), i32 noundef 69) #27, !dbg !8911
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8917
  br i1 %16, label %17, label %21, !dbg !8919

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8920
  %19 = load i32, i32* %18, align 4, !dbg !8920
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.108, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8920
  %20 = load i32, i32* %18, align 4, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %20, metadata !8875, metadata !DIExpression()), !dbg !8876
  br label %36, !dbg !8927

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8928
  %23 = and i32 %22, 255, !dbg !8930
  %24 = icmp eq i32 %23, 0, !dbg !8931
  br i1 %24, label %27, label %25, !dbg !8932

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8933
  call void @llvm.dbg.value(metadata i32 %26, metadata !8875, metadata !DIExpression()), !dbg !8876
  br label %36, !dbg !8935

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8936
  %29 = and i32 %28, 65280, !dbg !8938
  %30 = icmp eq i32 %29, 0, !dbg !8939
  br i1 %30, label %32, label %31, !dbg !8940

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8875, metadata !DIExpression()), !dbg !8876
  br label %36, !dbg !8943

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8944
  %34 = icmp ult i32 %33, 65536, !dbg !8946
  br i1 %34, label %36, label %35, !dbg !8947

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8948
  call void @llvm.dbg.value(metadata i32 0, metadata !8875, metadata !DIExpression()), !dbg !8876
  br label %36, !dbg !8950

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8876
  call void @llvm.dbg.value(metadata i32 %37, metadata !8875, metadata !DIExpression()), !dbg !8876
  ret i32 %37, !dbg !8951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8952 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8954, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i8* %2, metadata !8956, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 0, metadata !8957, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 -22, metadata !8958, metadata !DIExpression()), !dbg !8967
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8968
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8973
  %5 = and i32 %4, 16, !dbg !8975
  %6 = icmp eq i32 %5, 0, !dbg !8976
  br i1 %6, label %8, label %7, !dbg !8977

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8978
  br label %8, !dbg !8984

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8985
  %10 = and i32 %9, 8, !dbg !8987
  %11 = icmp eq i32 %10, 0, !dbg !8988
  br i1 %11, label %13, label %12, !dbg !8989

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8990
  br label %13, !dbg !8996

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8997
  %15 = and i32 %14, 2, !dbg !8998
  %16 = icmp eq i32 %15, 0, !dbg !8999
  br i1 %16, label %27, label %17, !dbg !9000

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !9001
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %18, metadata !8959, metadata !DIExpression()), !dbg !9007
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9008
  %20 = and i32 %19, 128, !dbg !9010
  %21 = icmp eq i32 %20, 0, !dbg !9011
  br i1 %21, label %27, label %22, !dbg !9012

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8958, metadata !DIExpression()), !dbg !8967
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.102, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !9013
  %23 = icmp eq i32 %1, 0, !dbg !9019
  br i1 %23, label %27, label %24, !dbg !9021

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9022
  %26 = and i32 %25, -129, !dbg !9022
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9022
  br label %27, !dbg !9024

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8967
  call void @llvm.dbg.value(metadata i32 %28, metadata !8958, metadata !DIExpression()), !dbg !8967
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9025
  %30 = and i32 %29, 1, !dbg !9027
  %31 = icmp eq i32 %30, 0, !dbg !9028
  br i1 %31, label %33, label %32, !dbg !9029

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !9030
  br label %33, !dbg !9036

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9037
  %35 = and i32 %34, 32, !dbg !9039
  %36 = icmp eq i32 %35, 0, !dbg !9040
  br i1 %36, label %38, label %37, !dbg !9041

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !9042
  br label %38, !dbg !9048

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9049
  %40 = and i32 %39, 16, !dbg !9050
  %41 = icmp eq i32 %40, 0, !dbg !9050
  br i1 %41, label %42, label %46, !dbg !9051

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9052
  %44 = and i32 %43, 2, !dbg !9053
  %45 = icmp eq i32 %44, 0, !dbg !9053
  br i1 %45, label %55, label %46, !dbg !9054

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9055
  %48 = and i32 %47, 2048, !dbg !9056
  %49 = icmp eq i32 %48, 0, !dbg !9056
  br i1 %49, label %55, label %50, !dbg !9057

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !9058
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %52, metadata !8962, metadata !DIExpression()), !dbg !9060
  %53 = icmp eq i32 %52, 0, !dbg !9061
  br i1 %53, label %55, label %54, !dbg !9063

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !9064, metadata !DIExpression()) #25, !dbg !9067
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !9070, !srcloc !9071
  call void @llvm.dbg.value(metadata i32 2, metadata !8957, metadata !DIExpression()), !dbg !8967
  br label %55, !dbg !9072

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !8967
  call void @llvm.dbg.value(metadata i32 %56, metadata !8957, metadata !DIExpression()), !dbg !8967
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9073
  %58 = and i32 %57, 32, !dbg !9075
  %59 = icmp eq i32 %58, 0, !dbg !9076
  br i1 %59, label %63, label %60, !dbg !9077

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9078
  %62 = and i32 %61, -8193, !dbg !9078
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9078
  br label %63, !dbg !9080

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9081
  %65 = or i32 %64, 255, !dbg !9081
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9081
  store i8 0, i8* %2, align 1, !dbg !9082
  ret i32 %56, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9088, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %0, metadata !9089, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i8* %1, metadata !9090, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 0, metadata !9091, metadata !DIExpression()), !dbg !9095
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !9096
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9101
  %4 = and i32 %3, 4096, !dbg !9103
  %5 = icmp eq i32 %4, 0, !dbg !9103
  br i1 %5, label %7, label %6, !dbg !9104

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !9105
  br label %7, !dbg !9111

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9112
  %9 = and i32 %8, 2048, !dbg !9114
  %10 = icmp eq i32 %9, 0, !dbg !9114
  br i1 %10, label %12, label %11, !dbg !9115

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !9116
  br label %12, !dbg !9122

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9123
  %14 = and i32 %13, 512, !dbg !9124
  %15 = icmp eq i32 %14, 0, !dbg !9124
  br i1 %15, label %26, label %16, !dbg !9125

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !9126
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !9131
  call void @llvm.dbg.value(metadata i32 %17, metadata !9092, metadata !DIExpression()), !dbg !9132
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9133
  %19 = and i32 %18, 32768, !dbg !9135
  %20 = icmp eq i32 %19, 0, !dbg !9136
  br i1 %20, label %26, label %21, !dbg !9137

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !9138
  %22 = icmp eq i32 %0, 0, !dbg !9144
  br i1 %22, label %26, label %23, !dbg !9146

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9147
  %25 = and i32 %24, -32769, !dbg !9147
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9147
  br label %26, !dbg !9149

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9150
  %28 = and i32 %27, 1024, !dbg !9152
  %29 = icmp eq i32 %28, 0, !dbg !9152
  br i1 %29, label %31, label %30, !dbg !9153

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !9154
  br label %31, !dbg !9160

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9161
  %33 = and i32 %32, 256, !dbg !9163
  %34 = icmp eq i32 %33, 0, !dbg !9164
  br i1 %34, label %35, label %39, !dbg !9165

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9166
  %37 = and i32 %36, 8192, !dbg !9168
  %38 = icmp eq i32 %37, 0, !dbg !9168
  br i1 %38, label %41, label %39, !dbg !9169

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.97, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !9170
  br label %41, !dbg !9171

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9171
  %43 = or i32 %42, 65280, !dbg !9171
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9171
  store i8 0, i8* %1, align 1, !dbg !9172
  ret void, !dbg !9173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9174 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9180, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i32 0, metadata !9181, metadata !DIExpression()), !dbg !9182
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !9183
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9188
  %2 = and i32 %1, 33554432, !dbg !9190
  %3 = icmp eq i32 %2, 0, !dbg !9191
  br i1 %3, label %5, label %4, !dbg !9192

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !9193
  br label %5, !dbg !9199

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9200
  %7 = and i32 %6, 16777216, !dbg !9202
  %8 = icmp eq i32 %7, 0, !dbg !9203
  br i1 %8, label %10, label %9, !dbg !9204

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !9205
  br label %10, !dbg !9211

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9212
  %12 = and i32 %11, 524288, !dbg !9214
  %13 = icmp eq i32 %12, 0, !dbg !9215
  br i1 %13, label %15, label %14, !dbg !9216

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9217
  br label %15, !dbg !9223

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9224
  %17 = and i32 %16, 262144, !dbg !9226
  %18 = icmp eq i32 %17, 0, !dbg !9227
  br i1 %18, label %20, label %19, !dbg !9228

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9229
  br label %20, !dbg !9235

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9236
  %22 = and i32 %21, 131072, !dbg !9238
  %23 = icmp eq i32 %22, 0, !dbg !9239
  br i1 %23, label %25, label %24, !dbg !9240

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9241
  br label %25, !dbg !9247

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9248
  %27 = and i32 %26, 65536, !dbg !9250
  %28 = icmp eq i32 %27, 0, !dbg !9251
  br i1 %28, label %30, label %29, !dbg !9252

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9253
  br label %30, !dbg !9259

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9260
  %32 = or i32 %31, -65536, !dbg !9260
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9260
  ret void, !dbg !9261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9262 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9266, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i8* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  store i8 0, i8* %0, align 1, !dbg !9269
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9270
  ret void, !dbg !9275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9276 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9280, metadata !DIExpression()), !dbg !9282
  call void @llvm.dbg.value(metadata i32 %0, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = icmp slt i32 %0, 16, !dbg !9283
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.81, i32 0, i32 0), !dbg !9283
  %4 = add nsw i32 %0, -16, !dbg !9283
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9283
  ret void, !dbg !9288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9293, metadata !DIExpression()), !dbg !9296
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9297
  %3 = load i32, i32* %2, align 4, !dbg !9297
  %4 = inttoptr i32 %3 to i16*, !dbg !9298
  call void @llvm.dbg.value(metadata i16* %4, metadata !9294, metadata !DIExpression()), !dbg !9296
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9299
  %6 = or i32 %5, 256, !dbg !9299
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9299
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9300, !srcloc !9303
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9304, !srcloc !9307
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9308
  %8 = load i16, i16* %7, align 2, !dbg !9309
  call void @llvm.dbg.value(metadata i16 %8, metadata !9295, metadata !DIExpression()), !dbg !9296
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9310
  %10 = and i32 %9, -257, !dbg !9310
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9310
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9311, !srcloc !9303
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9313, !srcloc !9307
  %11 = icmp eq i16 %8, -8446, !dbg !9315
  ret i1 %11, !dbg !9317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !9318 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9319
  %2 = or i32 %1, 16, !dbg !9319
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9319
  ret void, !dbg !9320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !9321 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9324, metadata !DIExpression()), !dbg !9325
  br label %1, !dbg !9326

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9324, metadata !DIExpression()), !dbg !9325
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef %2) #26, !dbg !9328
  %3 = add nuw nsw i32 %2, 1, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %3, metadata !9324, metadata !DIExpression()), !dbg !9325
  %4 = icmp eq i32 %3, 91, !dbg !9332
  br i1 %4, label %5, label %1, !dbg !9326, !llvm.loop !9333

5:                                                ; preds = %1
  ret void, !dbg !9335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0) unnamed_addr #15 !dbg !9336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9338, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.value(metadata i32 1, metadata !9339, metadata !DIExpression()), !dbg !9340
  %2 = and i32 %0, 15, !dbg !9341
  %3 = add nsw i32 %2, -4, !dbg !9341
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9341
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9341
  %6 = icmp slt i32 %0, 0, !dbg !9341
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9341
  store volatile i8 16, i8* %7, align 1, !dbg !9342
  ret void, !dbg !9344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9451, metadata !DIExpression()), !dbg !9452
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9453
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9455
  br i1 %3, label %4, label %12, !dbg !9456

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9457, !srcloc !9469
  call void @llvm.dbg.value(metadata i32 %5, metadata !9460, metadata !DIExpression()) #25, !dbg !9470
  %6 = icmp eq i32 %5, 0, !dbg !9471
  br i1 %6, label %12, label %7, !dbg !9472

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9473
  %9 = or i32 %8, 268435456, !dbg !9473
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9473
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9475
  %11 = and i32 %10, -32769, !dbg !9475
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9475
  br label %12, !dbg !9476

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9477
  ret void, !dbg !9478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9479 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9480
  ret void, !dbg !9481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !646, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8 0, metadata !647, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i32 64, metadata !649, metadata !DIExpression()), !dbg !9482
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9483
  %3 = load i32, i32* %2, align 4, !dbg !9483
  %4 = add i32 %3, -64, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %4, metadata !648, metadata !DIExpression()), !dbg !9482
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9486
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9487
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9488
  call void @llvm.dbg.value(metadata i8 1, metadata !647, metadata !DIExpression()), !dbg !9482
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9489
  ret void, !dbg !9490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9491 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9492
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9493, !srcloc !9496
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9497, !srcloc !9500
  ret void, !dbg !9501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9502 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9503, !srcloc !9506
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9507
  ret void, !dbg !9508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9509 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9524, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i8 %1, metadata !9525, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i32 %2, metadata !9526, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i32 %3, metadata !9527, metadata !DIExpression()), !dbg !9528
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9529
  ret void, !dbg !9531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9532 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9537, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i8 %1, metadata !9538, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9542
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9543
  call void @llvm.dbg.value(metadata i8 %3, metadata !9541, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9542
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %4, metadata !9541, metadata !DIExpression()), !dbg !9542
  %5 = trunc i32 %4 to i8, !dbg !9545
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9546
  ret void, !dbg !9547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9548 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9552, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.value(metadata i8 %1, metadata !9553, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.value(metadata i8 %2, metadata !9554, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.value(metadata i1 %3, metadata !9555, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9558
  %5 = zext i8 %2 to i32, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %5, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.value(metadata i32 0, metadata !9556, metadata !DIExpression()), !dbg !9558
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.value(metadata i32 0, metadata !9556, metadata !DIExpression()), !dbg !9558
  %7 = icmp eq i8 %1, 0, !dbg !9560
  br i1 %7, label %30, label %8, !dbg !9563

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.value(metadata i32 %10, metadata !9556, metadata !DIExpression()), !dbg !9558
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9564
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9567
  %13 = load i32, i32* %12, align 4, !dbg !9567
  %14 = icmp eq i32 %13, 0, !dbg !9568
  br i1 %14, label %26, label %15, !dbg !9569

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9570

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9572
  %18 = icmp eq i32 %17, 0, !dbg !9572
  br i1 %18, label %19, label %20, !dbg !9573

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9574
  br label %30, !dbg !9580

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9581
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %22, metadata !9557, metadata !DIExpression()), !dbg !9558
  %23 = icmp eq i32 %22, -22, !dbg !9583
  br i1 %23, label %30, label %24, !dbg !9585

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %25, metadata !9557, metadata !DIExpression()), !dbg !9558
  br label %26, !dbg !9587

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9558
  call void @llvm.dbg.value(metadata i32 %27, metadata !9557, metadata !DIExpression()), !dbg !9558
  %28 = add nuw nsw i32 %10, 1, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %28, metadata !9556, metadata !DIExpression()), !dbg !9558
  %29 = icmp eq i32 %28, %6, !dbg !9560
  br i1 %29, label %30, label %8, !dbg !9563, !llvm.loop !9589

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9558
  ret i32 %31, !dbg !9591
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9592 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9599
  %3 = load i32, i32* %2, align 4, !dbg !9599
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9600, !range !9601
  %5 = icmp ult i32 %4, 2, !dbg !9600
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9602
  br i1 %7, label %8, label %15, !dbg !9602

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9603
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9604
  %11 = load i32, i32* %10, align 4, !dbg !9604
  %12 = and i32 %11, %9, !dbg !9605
  %13 = icmp eq i32 %12, 0, !dbg !9606
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9597, metadata !DIExpression()), !dbg !9598
  ret i32 %16, !dbg !9607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9608 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9612, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9613, metadata !DIExpression()), !dbg !9615
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9616
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9616
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9614, metadata !DIExpression()), !dbg !9617
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9618
  %6 = load i32, i32* %5, align 4, !dbg !9618
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9619
  store i32 %6, i32* %7, align 4, !dbg !9620
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9621
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9622
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9623
  %11 = load i32, i32* %10, align 4, !dbg !9623
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9624
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9625
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9626
  ret i32 %12, !dbg !9627
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #19 !dbg !9628 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9635, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9636, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 undef, metadata !9637, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 %2, metadata !9638, metadata !DIExpression()), !dbg !9639
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9640
  %5 = load i32, i32* %4, align 4, !dbg !9640
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9641
  %7 = or i32 %6, %5, !dbg !9642
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9643
  store i32 %7, i32* %8, align 4, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9646 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9650, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9651, metadata !DIExpression()), !dbg !9652
  %3 = zext i8 %0 to i32, !dbg !9653
  %4 = icmp ugt i8 %0, 7, !dbg !9655
  br i1 %4, label %5, label %6, !dbg !9656

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.122, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9657
  br label %7, !dbg !9663

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9664
  br label %7, !dbg !9665

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9652
  ret i32 %8, !dbg !9666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !9667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9671, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9672, metadata !DIExpression()), !dbg !9673
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9674
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9675
  %4 = load i32, i32* %3, align 4, !dbg !9675
  %5 = and i32 %4, -32, !dbg !9676
  %6 = or i32 %5, %0, !dbg !9677
  %7 = or i32 %6, 16, !dbg !9677
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9678
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9679
  %9 = load i32, i32* %8, align 4, !dbg !9679
  %10 = or i32 %9, 1, !dbg !9680
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !9683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9686, metadata !DIExpression()), !dbg !9687
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9688
  ret void, !dbg !9689
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9694, metadata !DIExpression()), !dbg !9695
  %2 = icmp ult i32 %0, 33, !dbg !9696
  br i1 %2, label %11, label %3, !dbg !9698

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9699
  br i1 %4, label %11, label %5, !dbg !9701

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9702
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9703, !range !9601
  %8 = mul nsw i32 %7, -2, !dbg !9704
  %9 = add nsw i32 %8, 62, !dbg !9704
  %10 = and i32 %9, 62, !dbg !9705
  br label %11, !dbg !9706

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9695
  ret i32 %12, !dbg !9707
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9708 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9712, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.value(metadata i8 %1, metadata !9713, metadata !DIExpression()), !dbg !9714
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9715
  ret void, !dbg !9717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9722, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.value(metadata i8 %1, metadata !9723, metadata !DIExpression()), !dbg !9729
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9730
  call void @llvm.dbg.value(metadata i8 %3, metadata !9724, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9729
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %4, metadata !9724, metadata !DIExpression()), !dbg !9729
  %5 = icmp ne i32 %4, -22, !dbg !9732
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %4, metadata !9725, metadata !DIExpression()), !dbg !9734
  br i1 %7, label %8, label %12, !dbg !9733

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9725, metadata !DIExpression()), !dbg !9734
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9735
  %10 = add i32 %9, 1, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %10, metadata !9725, metadata !DIExpression()), !dbg !9734
  %11 = icmp eq i32 %10, 8, !dbg !9739
  br i1 %11, label %12, label %8, !dbg !9740, !llvm.loop !9741

12:                                               ; preds = %8, %2
  ret void, !dbg !9743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !9744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9747, metadata !DIExpression()), !dbg !9748
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9749
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9750
  ret void, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9752 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9757
  %2 = icmp ugt i32 %1, 8, !dbg !9759
  br i1 %2, label %14, label %3, !dbg !9760

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9761
  call void @llvm.dbg.value(metadata i32 0, metadata !9756, metadata !DIExpression()), !dbg !9762
  %4 = icmp eq i32 %1, 0, !dbg !9763
  br i1 %4, label %12, label %5, !dbg !9766

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9766

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9756, metadata !DIExpression()), !dbg !9762
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9767
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9769
  %10 = add nuw i32 %8, 1, !dbg !9770
  call void @llvm.dbg.value(metadata i32 %10, metadata !9756, metadata !DIExpression()), !dbg !9762
  %11 = icmp eq i32 %10, %1, !dbg !9763
  br i1 %11, label %12, label %7, !dbg !9766, !llvm.loop !9771

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9773
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9774
  tail call void @arm_core_mpu_enable() #26, !dbg !9775
  br label %14, !dbg !9776

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9762
  ret i32 %15, !dbg !9777
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9778 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9785, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata i8* %1, metadata !9786, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata i8* %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  %3 = load i8, i8* %1, align 1, !dbg !9789
  %4 = icmp eq i8 %3, 0, !dbg !9790
  br i1 %4, label %13, label %5, !dbg !9791

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9785, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata i8* %8, metadata !9786, metadata !DIExpression()), !dbg !9788
  store i8 %6, i8* %7, align 1, !dbg !9792
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9794
  call void @llvm.dbg.value(metadata i8* %9, metadata !9785, metadata !DIExpression()), !dbg !9788
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9795
  call void @llvm.dbg.value(metadata i8* %10, metadata !9786, metadata !DIExpression()), !dbg !9788
  %11 = load i8, i8* %10, align 1, !dbg !9789
  %12 = icmp eq i8 %11, 0, !dbg !9790
  br i1 %12, label %13, label %5, !dbg !9791, !llvm.loop !9796

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9798
  ret i8* %0, !dbg !9799
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9804, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i8* %1, metadata !9805, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %2, metadata !9806, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i8* %0, metadata !9807, metadata !DIExpression()), !dbg !9808
  %4 = icmp eq i32 %2, 0, !dbg !9809
  br i1 %4, label %22, label %5, !dbg !9810

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9804, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %7, metadata !9806, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i8* %8, metadata !9805, metadata !DIExpression()), !dbg !9808
  %9 = load i8, i8* %8, align 1, !dbg !9811
  %10 = icmp eq i8 %9, 0, !dbg !9812
  br i1 %10, label %16, label %11, !dbg !9813

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9814
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9816
  call void @llvm.dbg.value(metadata i8* %12, metadata !9805, metadata !DIExpression()), !dbg !9808
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9817
  call void @llvm.dbg.value(metadata i8* %13, metadata !9804, metadata !DIExpression()), !dbg !9808
  %14 = add i32 %7, -1, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %14, metadata !9806, metadata !DIExpression()), !dbg !9808
  %15 = icmp eq i32 %14, 0, !dbg !9809
  br i1 %15, label %22, label %5, !dbg !9810, !llvm.loop !9819

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9804, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %18, metadata !9806, metadata !DIExpression()), !dbg !9808
  store i8 0, i8* %17, align 1, !dbg !9821
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9823
  call void @llvm.dbg.value(metadata i8* %19, metadata !9804, metadata !DIExpression()), !dbg !9808
  %20 = add i32 %18, -1, !dbg !9824
  call void @llvm.dbg.value(metadata i32 %20, metadata !9806, metadata !DIExpression()), !dbg !9808
  %21 = icmp eq i32 %20, 0, !dbg !9825
  br i1 %21, label %22, label %16, !dbg !9826, !llvm.loop !9827

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9829
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9834, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 %1, metadata !9835, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 %1, metadata !9836, metadata !DIExpression()), !dbg !9837
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9838

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9834, metadata !DIExpression()), !dbg !9837
  %6 = load i8, i8* %5, align 1, !dbg !9839
  %7 = icmp eq i8 %6, %3, !dbg !9840
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9841
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9842
  call void @llvm.dbg.value(metadata i8* %10, metadata !9834, metadata !DIExpression()), !dbg !9837
  br i1 %9, label %11, label %4, !dbg !9841, !llvm.loop !9844

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9846
  ret i8* %12, !dbg !9847
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9850, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %1, metadata !9851, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i8* null, metadata !9852, metadata !DIExpression()), !dbg !9853
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9854

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9853
  call void @llvm.dbg.value(metadata i8* %6, metadata !9852, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i8* %5, metadata !9850, metadata !DIExpression()), !dbg !9853
  %7 = load i8, i8* %5, align 1, !dbg !9855
  %8 = icmp eq i8 %7, %3, !dbg !9858
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9859
  call void @llvm.dbg.value(metadata i8* %9, metadata !9852, metadata !DIExpression()), !dbg !9853
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9860
  call void @llvm.dbg.value(metadata i8* %10, metadata !9850, metadata !DIExpression()), !dbg !9853
  %11 = icmp eq i8 %7, 0, !dbg !9861
  br i1 %11, label %12, label %4, !dbg !9861, !llvm.loop !9862

12:                                               ; preds = %4
  ret i8* %9, !dbg !9864
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9869, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i32 0, metadata !9870, metadata !DIExpression()), !dbg !9871
  %2 = load i8, i8* %0, align 1, !dbg !9872
  %3 = icmp eq i8 %2, 0, !dbg !9873
  br i1 %3, label %11, label %4, !dbg !9874

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i8* %6, metadata !9869, metadata !DIExpression()), !dbg !9871
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9875
  call void @llvm.dbg.value(metadata i8* %7, metadata !9869, metadata !DIExpression()), !dbg !9871
  %8 = add i32 %5, 1, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %8, metadata !9870, metadata !DIExpression()), !dbg !9871
  %9 = load i8, i8* %7, align 1, !dbg !9872
  %10 = icmp eq i8 %9, 0, !dbg !9873
  br i1 %10, label %11, label %4, !dbg !9874, !llvm.loop !9878

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9871
  ret i32 %12, !dbg !9880
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9885, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %1, metadata !9886, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 0, metadata !9887, metadata !DIExpression()), !dbg !9888
  %3 = load i8, i8* %0, align 1, !dbg !9889
  %4 = icmp ne i8 %3, 0, !dbg !9890
  %5 = icmp ne i32 %1, 0, !dbg !9891
  %6 = and i1 %4, %5, !dbg !9891
  br i1 %6, label %7, label %16, !dbg !9892

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i8* %9, metadata !9885, metadata !DIExpression()), !dbg !9888
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9893
  call void @llvm.dbg.value(metadata i8* %10, metadata !9885, metadata !DIExpression()), !dbg !9888
  %11 = add nuw i32 %8, 1, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %11, metadata !9887, metadata !DIExpression()), !dbg !9888
  %12 = load i8, i8* %10, align 1, !dbg !9889
  %13 = icmp ne i8 %12, 0, !dbg !9890
  %14 = icmp ult i32 %11, %1, !dbg !9891
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9891
  br i1 %15, label %7, label %16, !dbg !9892, !llvm.loop !9896

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9888
  ret i32 %17, !dbg !9898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9903, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i8* %1, metadata !9904, metadata !DIExpression()), !dbg !9905
  %3 = load i8, i8* %0, align 1, !dbg !9906
  %4 = load i8, i8* %1, align 1, !dbg !9907
  %5 = icmp ne i8 %3, %4, !dbg !9908
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9909
  br i1 %7, label %18, label %8, !dbg !9909

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9904, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i8* %10, metadata !9903, metadata !DIExpression()), !dbg !9905
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9910
  call void @llvm.dbg.value(metadata i8* %11, metadata !9903, metadata !DIExpression()), !dbg !9905
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9912
  call void @llvm.dbg.value(metadata i8* %12, metadata !9904, metadata !DIExpression()), !dbg !9905
  %13 = load i8, i8* %11, align 1, !dbg !9906
  %14 = load i8, i8* %12, align 1, !dbg !9907
  %15 = icmp ne i8 %13, %14, !dbg !9908
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9909
  br i1 %17, label %18, label %8, !dbg !9909, !llvm.loop !9913

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9906
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9907
  %21 = zext i8 %19 to i32, !dbg !9916
  %22 = zext i8 %20 to i32, !dbg !9917
  %23 = sub nsw i32 %21, %22, !dbg !9918
  ret i32 %23, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9920 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9924, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i8* %1, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 %2, metadata !9926, metadata !DIExpression()), !dbg !9927
  %4 = icmp eq i32 %2, 0, !dbg !9928
  br i1 %4, label %23, label %5, !dbg !9928

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i8* %7, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i8* %8, metadata !9924, metadata !DIExpression()), !dbg !9927
  %9 = load i8, i8* %8, align 1, !dbg !9929
  %10 = load i8, i8* %7, align 1, !dbg !9930
  %11 = icmp ne i8 %9, %10, !dbg !9931
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9932
  br i1 %13, label %19, label %14, !dbg !9932

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9933
  call void @llvm.dbg.value(metadata i8* %15, metadata !9924, metadata !DIExpression()), !dbg !9927
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9935
  call void @llvm.dbg.value(metadata i8* %16, metadata !9925, metadata !DIExpression()), !dbg !9927
  %17 = add i32 %6, -1, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %17, metadata !9926, metadata !DIExpression()), !dbg !9927
  %18 = icmp eq i32 %17, 0, !dbg !9928
  br i1 %18, label %23, label %5, !dbg !9928, !llvm.loop !9937

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9940
  %21 = zext i8 %10 to i32, !dbg !9941
  %22 = sub nsw i32 %20, %21, !dbg !9942
  br label %23, !dbg !9943

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9943
  ret i32 %24, !dbg !9944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9949, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i8* %1, metadata !9950, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i8** %2, metadata !9951, metadata !DIExpression()), !dbg !9954
  %4 = icmp eq i8* %0, null, !dbg !9955
  br i1 %4, label %5, label %7, !dbg !9955

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9956
  br label %7, !dbg !9955

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9955
  call void @llvm.dbg.value(metadata i8* %8, metadata !9952, metadata !DIExpression()), !dbg !9954
  %9 = load i8, i8* %8, align 1, !dbg !9957
  %10 = icmp eq i8 %9, 0, !dbg !9957
  br i1 %10, label %33, label %11, !dbg !9958

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9952, metadata !DIExpression()), !dbg !9954
  %14 = zext i8 %12 to i32, !dbg !9957
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9959
  %16 = icmp eq i8* %15, null, !dbg !9958
  br i1 %16, label %21, label %17, !dbg !9960

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9961
  call void @llvm.dbg.value(metadata i8* %18, metadata !9952, metadata !DIExpression()), !dbg !9954
  %19 = load i8, i8* %18, align 1, !dbg !9957
  %20 = icmp eq i8 %19, 0, !dbg !9957
  br i1 %20, label %33, label %11, !dbg !9958, !llvm.loop !9963

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9953, metadata !DIExpression()), !dbg !9954
  %24 = zext i8 %22 to i32, !dbg !9965
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9966
  %26 = icmp eq i8* %25, null, !dbg !9967
  br i1 %26, label %27, label %31, !dbg !9968

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9969
  call void @llvm.dbg.value(metadata i8* %28, metadata !9953, metadata !DIExpression()), !dbg !9954
  %29 = load i8, i8* %28, align 1, !dbg !9965
  %30 = icmp eq i8 %29, 0, !dbg !9965
  br i1 %30, label %33, label %21, !dbg !9971, !llvm.loop !9972

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9974
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9977
  br label %33, !dbg !9978

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9954
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9954
  store i8* %34, i8** %2, align 4, !dbg !9954
  ret i8* %35, !dbg !9979
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9982, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.value(metadata i8* %1, metadata !9983, metadata !DIExpression()), !dbg !9984
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9985
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9986
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9987
  ret i8* %0, !dbg !9988
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9991, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8* %1, metadata !9992, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %2, metadata !9993, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8* %0, metadata !9994, metadata !DIExpression()), !dbg !9996
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %4, metadata !9995, metadata !DIExpression()), !dbg !9996
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9998
  call void @llvm.dbg.value(metadata i8* %5, metadata !9991, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8* %1, metadata !9992, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %2, metadata !9993, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %2, metadata !9993, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9996
  %6 = icmp eq i32 %2, 0, !dbg !9999
  br i1 %6, label %18, label %7, !dbg !10000

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !10001
  call void @llvm.dbg.value(metadata i8* %9, metadata !9991, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i8* %10, metadata !9992, metadata !DIExpression()), !dbg !9996
  %12 = load i8, i8* %10, align 1, !dbg !10002
  %13 = icmp eq i8 %12, 0, !dbg !10003
  br i1 %13, label %18, label %14, !dbg !10004

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !10005
  call void @llvm.dbg.value(metadata i8* %15, metadata !9992, metadata !DIExpression()), !dbg !9996
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !10007
  call void @llvm.dbg.value(metadata i8* %16, metadata !9991, metadata !DIExpression()), !dbg !9996
  store i8 %12, i8* %9, align 1, !dbg !10008
  call void @llvm.dbg.value(metadata i32 %11, metadata !9993, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %11, metadata !9993, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9996
  %17 = icmp eq i32 %11, 0, !dbg !9999
  br i1 %17, label %18, label %7, !dbg !10000, !llvm.loop !10009

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9996
  store i8 0, i8* %19, align 1, !dbg !10011
  ret i8* %0, !dbg !10012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10017, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i8* %1, metadata !10018, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i32 %2, metadata !10019, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i8* %0, metadata !10020, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i8* %1, metadata !10021, metadata !DIExpression()), !dbg !10022
  %4 = icmp eq i32 %2, 0, !dbg !10023
  br i1 %4, label %31, label %5, !dbg !10025

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i8* %0, metadata !10020, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i32 %2, metadata !10019, metadata !DIExpression()), !dbg !10022
  %6 = add i32 %2, -1, !dbg !10026
  call void @llvm.dbg.value(metadata i32 %6, metadata !10019, metadata !DIExpression()), !dbg !10022
  %7 = icmp eq i32 %6, 0, !dbg !10027
  br i1 %7, label %23, label %8, !dbg !10028

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !10029
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !10029
  br label %11, !dbg !10029

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i8* %14, metadata !10020, metadata !DIExpression()), !dbg !10022
  %15 = load i8, i8* %14, align 1, !dbg !10030
  %16 = load i8, i8* %13, align 1, !dbg !10031
  %17 = icmp eq i8 %15, %16, !dbg !10032
  br i1 %17, label %18, label %23, !dbg !10029

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !10033
  call void @llvm.dbg.value(metadata i8* %19, metadata !10020, metadata !DIExpression()), !dbg !10022
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10035
  call void @llvm.dbg.value(metadata i8* %20, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i32 %12, metadata !10019, metadata !DIExpression()), !dbg !10022
  %21 = add i32 %12, -1, !dbg !10026
  call void @llvm.dbg.value(metadata i32 %21, metadata !10019, metadata !DIExpression()), !dbg !10022
  %22 = icmp eq i32 %21, 0, !dbg !10027
  br i1 %22, label %23, label %11, !dbg !10028, !llvm.loop !10036

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !10022
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !10022
  %26 = load i8, i8* %24, align 1, !dbg !10038
  %27 = zext i8 %26 to i32, !dbg !10038
  %28 = load i8, i8* %25, align 1, !dbg !10039
  %29 = zext i8 %28 to i32, !dbg !10039
  %30 = sub nsw i32 %27, %29, !dbg !10040
  br label %31, !dbg !10041

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !10022
  ret i32 %32, !dbg !10042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10047, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %1, metadata !10048, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %2, metadata !10049, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %0, metadata !10050, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %1, metadata !10051, metadata !DIExpression()), !dbg !10052
  %4 = ptrtoint i8* %0 to i32, !dbg !10053
  %5 = ptrtoint i8* %1 to i32, !dbg !10053
  %6 = sub i32 %4, %5, !dbg !10053
  %7 = icmp ult i32 %6, %2, !dbg !10055
  br i1 %7, label %10, label %8, !dbg !10056

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10051, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %0, metadata !10050, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %2, metadata !10049, metadata !DIExpression()), !dbg !10052
  %9 = icmp eq i32 %2, 0, !dbg !10057
  br i1 %9, label %26, label %17, !dbg !10059

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10049, metadata !DIExpression()), !dbg !10052
  %12 = add i32 %11, -1, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %12, metadata !10049, metadata !DIExpression()), !dbg !10052
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !10063
  %14 = load i8, i8* %13, align 1, !dbg !10063
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !10064
  store i8 %14, i8* %15, align 1, !dbg !10065
  %16 = icmp eq i32 %12, 0, !dbg !10066
  br i1 %16, label %26, label %10, !dbg !10067, !llvm.loop !10068

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !10051, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %19, metadata !10050, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %20, metadata !10049, metadata !DIExpression()), !dbg !10052
  %21 = load i8, i8* %18, align 1, !dbg !10070
  store i8 %21, i8* %19, align 1, !dbg !10072
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !10073
  call void @llvm.dbg.value(metadata i8* %22, metadata !10050, metadata !DIExpression()), !dbg !10052
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !10074
  call void @llvm.dbg.value(metadata i8* %23, metadata !10051, metadata !DIExpression()), !dbg !10052
  %24 = add i32 %20, -1, !dbg !10075
  call void @llvm.dbg.value(metadata i32 %24, metadata !10049, metadata !DIExpression()), !dbg !10052
  %25 = icmp eq i32 %24, 0, !dbg !10057
  br i1 %25, label %26, label %17, !dbg !10059, !llvm.loop !10076

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10085, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %1, metadata !10086, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32 %2, metadata !10087, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %0, metadata !10088, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %1, metadata !10089, metadata !DIExpression()), !dbg !10090
  %4 = icmp eq i32 %2, 0, !dbg !10091
  br i1 %4, label %14, label %5, !dbg !10092

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !10089, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %7, metadata !10088, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32 %8, metadata !10087, metadata !DIExpression()), !dbg !10090
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !10093
  call void @llvm.dbg.value(metadata i8* %9, metadata !10089, metadata !DIExpression()), !dbg !10090
  %10 = load i8, i8* %6, align 1, !dbg !10095
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10096
  call void @llvm.dbg.value(metadata i8* %11, metadata !10088, metadata !DIExpression()), !dbg !10090
  store i8 %10, i8* %7, align 1, !dbg !10097
  %12 = add i32 %8, -1, !dbg !10098
  call void @llvm.dbg.value(metadata i32 %12, metadata !10087, metadata !DIExpression()), !dbg !10090
  %13 = icmp eq i32 %12, 0, !dbg !10091
  br i1 %13, label %14, label %5, !dbg !10092, !llvm.loop !10099

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !10101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !10102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10106, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %1, metadata !10107, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %2, metadata !10108, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i8* %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  %4 = trunc i32 %1 to i8, !dbg !10112
  call void @llvm.dbg.value(metadata i8 %4, metadata !10110, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %2, metadata !10108, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i8* %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  %5 = icmp eq i32 %2, 0, !dbg !10113
  br i1 %5, label %12, label %6, !dbg !10114

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10108, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i8* %8, metadata !10109, metadata !DIExpression()), !dbg !10111
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10115
  call void @llvm.dbg.value(metadata i8* %9, metadata !10109, metadata !DIExpression()), !dbg !10111
  store i8 %4, i8* %8, align 1, !dbg !10117
  %10 = add i32 %7, -1, !dbg !10118
  call void @llvm.dbg.value(metadata i32 %10, metadata !10108, metadata !DIExpression()), !dbg !10111
  %11 = icmp eq i32 %10, 0, !dbg !10113
  br i1 %11, label %12, label %6, !dbg !10114, !llvm.loop !10119

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10122 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10126, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 %1, metadata !10127, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 %2, metadata !10128, metadata !DIExpression()), !dbg !10132
  %4 = icmp eq i32 %2, 0, !dbg !10133
  br i1 %4, label %17, label %5, !dbg !10134

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !10135

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !10136
  call void @llvm.dbg.value(metadata i8* %9, metadata !10129, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32 %8, metadata !10128, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i8* %9, metadata !10129, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10136
  %10 = load i8, i8* %9, align 1, !dbg !10137
  %11 = icmp eq i8 %10, %6, !dbg !10140
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !10141
  call void @llvm.dbg.value(metadata i8* %12, metadata !10129, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32 %13, metadata !10128, metadata !DIExpression()), !dbg !10132
  br i1 %15, label %16, label %7, !dbg !10141, !llvm.loop !10142

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !10144

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !10132
  ret i8* %19, !dbg !10145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !10146 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !10148, metadata !DIExpression()), !dbg !10149
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !10150
  ret void, !dbg !10151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !10152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  ret i32 -1, !dbg !10156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10161, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32* %1, metadata !10162, metadata !DIExpression()), !dbg !10163
  %3 = ptrtoint i32* %1 to i32, !dbg !10164
  %4 = and i32 %3, -2, !dbg !10164
  %5 = icmp eq i32 %4, 2, !dbg !10164
  br i1 %5, label %6, label %9, !dbg !10164

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10165
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !10165
  br label %9, !dbg !10166

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !10166
  ret i32 %10, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10170, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i32* %1, metadata !10171, metadata !DIExpression()), !dbg !10172
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10173
  ret i32 %3, !dbg !10174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10178, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata i32* %1, metadata !10179, metadata !DIExpression()), !dbg !10180
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10181, !srcloc !10183
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10184
  ret i32 %3, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10191, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.value(metadata i32* %1, metadata !10192, metadata !DIExpression()), !dbg !10195
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !10196
  call void @llvm.dbg.value(metadata i32 %3, metadata !10193, metadata !DIExpression()), !dbg !10195
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !10197
  call void @llvm.dbg.value(metadata i32 %4, metadata !10194, metadata !DIExpression()), !dbg !10195
  %5 = icmp ne i32 %3, %4, !dbg !10198
  %6 = sext i1 %5 to i32, !dbg !10199
  ret i32 %6, !dbg !10200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10205, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.value(metadata i32 %1, metadata !10206, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.value(metadata i32 %2, metadata !10207, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.value(metadata i32* %3, metadata !10208, metadata !DIExpression()), !dbg !10209
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10210
  ret i32 %5, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10214, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 %1, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 %2, metadata !10216, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32* %3, metadata !10217, metadata !DIExpression()), !dbg !10218
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10219, !srcloc !10221
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10222
  ret i32 %5, !dbg !10223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10226, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %1, metadata !10227, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %2, metadata !10228, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32* %3, metadata !10229, metadata !DIExpression()), !dbg !10234
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10235
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10237
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10237
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10237
  br i1 %11, label %33, label %12, !dbg !10237

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10234
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10234
  call void @llvm.dbg.value(metadata i8* %14, metadata !10232, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %13, metadata !10230, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %1, metadata !10231, metadata !DIExpression()), !dbg !10234
  br label %15, !dbg !10238

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10240
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10234
  call void @llvm.dbg.value(metadata i8* %17, metadata !10232, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %16, metadata !10231, metadata !DIExpression()), !dbg !10234
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10241
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10244
  call void @llvm.dbg.value(metadata i8* %19, metadata !10232, metadata !DIExpression()), !dbg !10234
  %20 = load i8, i8* %17, align 1, !dbg !10245
  %21 = zext i8 %20 to i32, !dbg !10246
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10241
  %23 = icmp eq i32 %22, -1, !dbg !10247
  br i1 %23, label %30, label %24, !dbg !10248

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10249
  call void @llvm.dbg.value(metadata i32 %25, metadata !10231, metadata !DIExpression()), !dbg !10234
  %26 = icmp eq i32 %25, 0, !dbg !10250
  br i1 %26, label %27, label %15, !dbg !10251, !llvm.loop !10252

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %28, metadata !10230, metadata !DIExpression()), !dbg !10234
  %29 = icmp eq i32 %28, 0, !dbg !10255
  br i1 %29, label %30, label %12, !dbg !10256, !llvm.loop !10257

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10234
  call void @llvm.dbg.value(metadata i32 %31, metadata !10230, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.label(metadata !10233), !dbg !10260
  %32 = sub i32 %2, %31, !dbg !10261
  br label %33, !dbg !10262

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10234
  ret i32 %34, !dbg !10263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10268, metadata !DIExpression()), !dbg !10269
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10270
  %3 = icmp eq i32 %2, -1, !dbg !10272
  br i1 %3, label %8, label %4, !dbg !10273

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10274
  %6 = icmp eq i32 %5, -1, !dbg !10275
  %7 = sext i1 %6 to i32, !dbg !10274
  br label %8, !dbg !10276

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10269
  ret i32 %9, !dbg !10277
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10280, metadata !DIExpression()), !dbg !10281
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10282
  ret void, !dbg !10283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10288, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i32 %1, metadata !10289, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10290, metadata !DIExpression()), !dbg !10294
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10295
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10295
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10295
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10291, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i32 %0, metadata !10293, metadata !DIExpression()), !dbg !10294
  %7 = icmp slt i32 %0, %1, !dbg !10296
  br i1 %7, label %8, label %22, !dbg !10299

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10293, metadata !DIExpression()), !dbg !10294
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10300
  %11 = icmp eq i32 %10, 0, !dbg !10300
  br i1 %11, label %19, label %12, !dbg !10303

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10304
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10306
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10306
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10308
  br i1 %15, label %19, label %16, !dbg !10309

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10310
  %18 = load i8*, i8** %17, align 4, !dbg !10310
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10311
  br label %19, !dbg !10312

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %20, metadata !10293, metadata !DIExpression()), !dbg !10294
  %21 = icmp eq i32 %20, %1, !dbg !10296
  br i1 %21, label %22, label %8, !dbg !10299, !llvm.loop !10314

22:                                               ; preds = %19, %3
  ret void, !dbg !10316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10319, metadata !DIExpression()), !dbg !10320
  %2 = shl nuw i32 1, %0, !dbg !10321
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10324
  ret i32 %3, !dbg !10325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !10326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10330, metadata !DIExpression()), !dbg !10331
  %2 = shl nuw i32 1, %0, !dbg !10332
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10335
  ret void, !dbg !10336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10340, metadata !DIExpression()), !dbg !10341
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10342
  ret void, !dbg !10343
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10346, metadata !DIExpression()), !dbg !10347
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10348
  %3 = and i32 %2, %0, !dbg !10348
  %4 = icmp eq i32 %3, %0, !dbg !10349
  %5 = zext i1 %4 to i32, !dbg !10349
  ret i32 %5, !dbg !10350
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10353, metadata !DIExpression()), !dbg !10354
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10355
  ret void, !dbg !10356
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10359, metadata !DIExpression()), !dbg !10360
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10361
  ret void, !dbg !10362
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10363 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10365, metadata !DIExpression()), !dbg !10366
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10371, metadata !DIExpression()), !dbg !10372
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10377, metadata !DIExpression()), !dbg !10378
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !10379
  ret void, !dbg !10380
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10383, metadata !DIExpression()), !dbg !10384
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10389, metadata !DIExpression()), !dbg !10390
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !10391
  ret void, !dbg !10392
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10395, metadata !DIExpression()), !dbg !10396
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !10397
  ret void, !dbg !10398
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10399 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10401, metadata !DIExpression()), !dbg !10402
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10403
  ret void, !dbg !10404
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10407, metadata !DIExpression()), !dbg !10408
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10409
  ret void, !dbg !10410
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10413, metadata !DIExpression()), !dbg !10414
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10415
  ret i32 0, !dbg !10416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !911 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !915, metadata !DIExpression()), !dbg !10417
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10418
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10420
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10422
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10424
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10426
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10428
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10430
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !10432
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !10434
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !10436
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !10438
  ret void, !dbg !10440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10443, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32 0, metadata !10444, metadata !DIExpression()), !dbg !10445
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10446
  %3 = load i32, i32* %2, align 4, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %3, metadata !10444, metadata !DIExpression()), !dbg !10445
  %4 = shl nuw i32 1, %0, !dbg !10447
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10448
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10449
  ret void, !dbg !10450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10453, metadata !DIExpression()), !dbg !10454
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10455
  %3 = or i32 %2, %0, !dbg !10455
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10455
  ret void, !dbg !10456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !10457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10459, metadata !DIExpression()), !dbg !10460
  %2 = icmp slt i32 %0, 32, !dbg !10461
  br i1 %2, label %3, label %5, !dbg !10463

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10464
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10466
  br label %5, !dbg !10467

5:                                                ; preds = %1, %3
  ret void, !dbg !10468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10471, metadata !DIExpression()), !dbg !10472
  %2 = xor i32 %0, -1, !dbg !10473
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10473
  %4 = and i32 %3, %2, !dbg !10473
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10473
  ret void, !dbg !10474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10479, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.value(metadata i32 %1, metadata !10480, metadata !DIExpression()), !dbg !10481
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10482

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10483
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10485
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10486
  br label %11, !dbg !10487

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10488
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10489
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10490
  br label %11, !dbg !10491

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10492
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10493
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10494
  br label %11, !dbg !10495

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10496
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10497
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10498
  br label %11, !dbg !10499

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10503, metadata !DIExpression()), !dbg !10504
  %2 = xor i32 %0, -1, !dbg !10505
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10505
  %4 = and i32 %3, %2, !dbg !10505
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10505
  ret void, !dbg !10506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10509, metadata !DIExpression()), !dbg !10510
  %2 = xor i32 %0, -1, !dbg !10511
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10511
  %4 = and i32 %3, %2, !dbg !10511
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10515, metadata !DIExpression()), !dbg !10516
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10517
  %3 = or i32 %2, %0, !dbg !10517
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10521, metadata !DIExpression()), !dbg !10522
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10523
  %3 = or i32 %2, %0, !dbg !10523
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10523
  ret void, !dbg !10524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10529, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10530, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i8* %2, metadata !10531, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10532, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10534, metadata !DIExpression()), !dbg !10535
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10536
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10536
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10538
  br i1 %6, label %7, label %9, !dbg !10539

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10540
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10541
  store i8* %2, i8** %8, align 4, !dbg !10542
  br label %9, !dbg !10543

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10535
  ret i32 %10, !dbg !10544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10547, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10549, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10551
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10552
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10553
  store i8* null, i8** %3, align 4, !dbg !10554
  ret void, !dbg !10555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10558, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata i8* %1, metadata !10559, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata i8* %1, metadata !10560, metadata !DIExpression()), !dbg !10563
  %3 = bitcast i8* %1 to i32*, !dbg !10564
  %4 = load i32, i32* %3, align 4, !dbg !10564
  %5 = add i32 %4, -169, !dbg !10564
  %6 = icmp ult i32 %5, -121, !dbg !10564
  br i1 %6, label %15, label %7, !dbg !10566

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10567
  %9 = inttoptr i32 %8 to i32*, !dbg !10568
  call void @llvm.dbg.value(metadata i32* %9, metadata !10561, metadata !DIExpression()), !dbg !10563
  %10 = load volatile i32, i32* %9, align 4, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %10, metadata !10562, metadata !DIExpression()), !dbg !10563
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10570
  %12 = bitcast i8* %11 to i32*, !dbg !10570
  %13 = load i32, i32* %12, align 4, !dbg !10570
  %14 = or i32 %13, %10, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %14, metadata !10562, metadata !DIExpression()), !dbg !10563
  store volatile i32 %14, i32* %9, align 4, !dbg !10572
  br label %15, !dbg !10573

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10563
  ret i32 %16, !dbg !10574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10577, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i8* %1, metadata !10578, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i8* %1, metadata !10579, metadata !DIExpression()), !dbg !10582
  %3 = bitcast i8* %1 to i32*, !dbg !10583
  %4 = load i32, i32* %3, align 4, !dbg !10583
  %5 = add i32 %4, -169, !dbg !10583
  %6 = icmp ult i32 %5, -121, !dbg !10583
  br i1 %6, label %16, label %7, !dbg !10585

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10586
  %9 = inttoptr i32 %8 to i32*, !dbg !10587
  call void @llvm.dbg.value(metadata i32* %9, metadata !10580, metadata !DIExpression()), !dbg !10582
  %10 = load volatile i32, i32* %9, align 4, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %10, metadata !10581, metadata !DIExpression()), !dbg !10582
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10589
  %12 = bitcast i8* %11 to i32*, !dbg !10589
  %13 = load i32, i32* %12, align 4, !dbg !10589
  %14 = xor i32 %13, -1, !dbg !10590
  %15 = and i32 %10, %14, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %15, metadata !10581, metadata !DIExpression()), !dbg !10582
  store volatile i32 %15, i32* %9, align 4, !dbg !10592
  br label %16, !dbg !10593

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10582
  ret i32 %17, !dbg !10594
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10597, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i8* %1, metadata !10598, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32* %2, metadata !10599, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i8* %1, metadata !10600, metadata !DIExpression()), !dbg !10605
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %4, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 undef, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 undef, metadata !10603, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %4, metadata !10604, metadata !DIExpression()), !dbg !10605
  %5 = bitcast i8* %1 to i32*, !dbg !10607
  %6 = load i32, i32* %5, align 4, !dbg !10607
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10608

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %8, metadata !10602, metadata !DIExpression()), !dbg !10605
  br label %19, !dbg !10610

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %10, metadata !10603, metadata !DIExpression()), !dbg !10605
  br label %19, !dbg !10613

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10614
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !10615
  br label %19, !dbg !10616

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10617
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !10618
  br label %19, !dbg !10619

17:                                               ; preds = %3
  br label %19, !dbg !10620

18:                                               ; preds = %3
  br label %19, !dbg !10621

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 0, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10622
  br label %21, !dbg !10623

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10605
  ret i32 %22, !dbg !10623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10626, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i8* %1, metadata !10627, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i8* %2, metadata !10628, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i8* %1, metadata !10629, metadata !DIExpression()), !dbg !10634
  %4 = bitcast i8* %1 to i32*, !dbg !10635
  %5 = load i32, i32* %4, align 4, !dbg !10635
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %6, metadata !10633, metadata !DIExpression()), !dbg !10634
  %7 = icmp slt i32 %6, 0, !dbg !10637
  br i1 %7, label %22, label %8, !dbg !10639

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10629, metadata !DIExpression()), !dbg !10634
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10640
  %10 = bitcast i8* %9 to i32*, !dbg !10640
  %11 = load i32, i32* %10, align 4, !dbg !10640
  %12 = lshr i32 %11, 16, !dbg !10640
  %13 = and i32 %12, 7, !dbg !10640
  %14 = lshr i32 %11, 8, !dbg !10641
  %15 = and i32 %14, 31, !dbg !10641
  %16 = shl i32 %13, %15, !dbg !10642
  call void @llvm.dbg.value(metadata i32 %16, metadata !10632, metadata !DIExpression()), !dbg !10634
  %17 = and i32 %11, 255, !dbg !10643
  %18 = or i32 %17, 1073887232, !dbg !10644
  %19 = inttoptr i32 %18 to i32*, !dbg !10645
  call void @llvm.dbg.value(metadata i32* %19, metadata !10630, metadata !DIExpression()), !dbg !10634
  %20 = load volatile i32, i32* %19, align 4, !dbg !10646
  call void @llvm.dbg.value(metadata i32 %20, metadata !10631, metadata !DIExpression()), !dbg !10634
  %21 = or i32 %16, %20, !dbg !10647
  call void @llvm.dbg.value(metadata i32 %21, metadata !10631, metadata !DIExpression()), !dbg !10634
  store volatile i32 %21, i32* %19, align 4, !dbg !10648
  br label %22, !dbg !10649

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10634
  ret i32 %23, !dbg !10650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10655, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i32 0, metadata !10656, metadata !DIExpression()), !dbg !10657
  %2 = add i32 %0, -1, !dbg !10658
  %3 = icmp ult i32 %2, 6, !dbg !10658
  br i1 %3, label %4, label %7, !dbg !10658

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10658
  %6 = load i32, i32* %5, align 4, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %6, metadata !10656, metadata !DIExpression()), !dbg !10657
  br label %7, !dbg !10659

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10657
  ret i32 %8, !dbg !10660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10665, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i32 %1, metadata !10666, metadata !DIExpression()), !dbg !10667
  %3 = udiv i32 %0, %1, !dbg !10668
  ret i32 %3, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10674, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 24, metadata !10675, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 336, metadata !10676, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 %1, metadata !10677, metadata !DIExpression()), !dbg !10678
  %3 = mul i32 %0, 336, !dbg !10679
  %4 = mul nsw i32 %1, 24, !dbg !10680
  %5 = udiv i32 %3, %4, !dbg !10681
  ret i32 %5, !dbg !10682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10683 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10685, metadata !DIExpression()), !dbg !10688
  tail call void @config_enable_default_clocks() #27, !dbg !10689
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10690
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10690
  %4 = lshr i32 %3, 4, !dbg !10690
  %5 = and i32 %4, 15, !dbg !10690
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10690
  %7 = load i8, i8* %6, align 1, !dbg !10690
  %8 = zext i8 %7 to i32, !dbg !10690
  %9 = lshr i32 %2, %8, !dbg !10690
  call void @llvm.dbg.value(metadata i32 %9, metadata !10686, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10688
  %10 = icmp ult i32 %9, 168000000, !dbg !10691
  br i1 %10, label %11, label %13, !dbg !10693

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !10694
  br label %13, !dbg !10696

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10697
  tail call fastcc void @set_up_plls() #26, !dbg !10698
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10699
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10702
  br label %14, !dbg !10703

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10704
  %16 = icmp eq i32 %15, 8, !dbg !10705
  br i1 %16, label %17, label %14, !dbg !10703, !llvm.loop !10706

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10708
  br i1 %18, label %19, label %21, !dbg !10710

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !10711
  br label %21, !dbg !10713

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10714
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10715
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10716
  ret i32 0, !dbg !10717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10718 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10720
  %2 = and i32 %1, 240, !dbg !10720
  ret i32 %2, !dbg !10721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10722 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !10723
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !10728
  br label %1, !dbg !10729

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !10730
  %3 = icmp eq i32 %2, 1, !dbg !10731
  br i1 %3, label %4, label %1, !dbg !10729, !llvm.loop !10732

4:                                                ; preds = %1
  ret void, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10735 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10736
  %2 = icmp eq i32 %1, 8, !dbg !10738
  br i1 %2, label %3, label %4, !dbg !10739

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10740
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10742
  br label %4, !dbg !10743

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10744
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10745
  %6 = and i32 %5, -196609, !dbg !10745
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10745
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10746
  %8 = and i32 %7, -251658241, !dbg !10746
  %9 = or i32 %8, 117440512, !dbg !10746
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10746
  tail call void @config_pll_sysclock() #27, !dbg !10747
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10748
  br label %10, !dbg !10749

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10750
  %12 = icmp eq i32 %11, 1, !dbg !10751
  br i1 %12, label %13, label %10, !dbg !10749, !llvm.loop !10752

13:                                               ; preds = %10
  ret void, !dbg !10754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10755 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10757, metadata !DIExpression()), !dbg !10758
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10759
  %2 = and i32 %1, -241, !dbg !10759
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10759
  ret void, !dbg !10760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10763, metadata !DIExpression()), !dbg !10764
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10765
  %3 = and i32 %2, -4, !dbg !10765
  %4 = or i32 %3, %0, !dbg !10765
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10765
  ret void, !dbg !10766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10767 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10768
  %2 = and i32 %1, 12, !dbg !10768
  ret i32 %2, !dbg !10769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10770 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10772, metadata !DIExpression()), !dbg !10773
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10774
  %2 = and i32 %1, -7169, !dbg !10774
  %3 = or i32 %2, 5120, !dbg !10774
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10774
  ret void, !dbg !10775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10776 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10778, metadata !DIExpression()), !dbg !10779
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10780
  %2 = and i32 %1, -57345, !dbg !10780
  %3 = or i32 %2, 32768, !dbg !10780
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10780
  ret void, !dbg !10781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10782 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10783
  %2 = icmp eq i32 %1, 1, !dbg !10785
  br i1 %2, label %7, label %3, !dbg !10786

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10787
  br label %4, !dbg !10789

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10790
  %6 = icmp eq i32 %5, 1, !dbg !10791
  br i1 %6, label %7, label %4, !dbg !10789, !llvm.loop !10792

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10794
  br label %8, !dbg !10795

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10796
  %10 = icmp eq i32 %9, 0, !dbg !10797
  br i1 %10, label %11, label %8, !dbg !10795, !llvm.loop !10798

11:                                               ; preds = %8
  ret void, !dbg !10800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10801 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10802
  %2 = and i32 %1, -16777217, !dbg !10802
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10802
  ret void, !dbg !10803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10804 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10805
  %2 = or i32 %1, 16777216, !dbg !10805
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10805
  ret void, !dbg !10806
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10808
  %2 = lshr i32 %1, 25, !dbg !10809
  %3 = and i32 %2, 1, !dbg !10809
  ret i32 %3, !dbg !10810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10811 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10812
  %2 = lshr i32 %1, 1, !dbg !10813
  %3 = and i32 %2, 1, !dbg !10813
  ret i32 %3, !dbg !10814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10815 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10816
  %2 = or i32 %1, 1, !dbg !10816
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10816
  ret void, !dbg !10817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10818 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10819
  %2 = and i32 %1, -262145, !dbg !10819
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10819
  ret void, !dbg !10820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10821 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10822
  %2 = or i32 %1, 65536, !dbg !10822
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10822
  ret void, !dbg !10823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10825
  %2 = lshr i32 %1, 17, !dbg !10826
  %3 = and i32 %2, 1, !dbg !10826
  ret i32 %3, !dbg !10827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10828 {
  ret i32 24000000, !dbg !10830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10834 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10837 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10841, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 24, metadata !10842, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 336, metadata !10843, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10844, metadata !DIExpression()), !dbg !10845
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10846
  %2 = and i32 %1, -4227072, !dbg !10846
  %3 = or i32 %2, 4215832, !dbg !10846
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10846
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10847
  %5 = and i32 %4, -196609, !dbg !10847
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10847
  ret void, !dbg !10848
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10849 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10850
  ret void, !dbg !10851
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10852 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10855, metadata !DIExpression()), !dbg !10857
  %2 = bitcast i32* %1 to i8*, !dbg !10858
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10858
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10856, metadata !DIExpression()), !dbg !10859
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10860
  %4 = or i32 %3, 268435456, !dbg !10860
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10860
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10861
  %6 = and i32 %5, 268435456, !dbg !10861
  store volatile i32 %6, i32* %1, align 4, !dbg !10862
  %7 = load volatile i32, i32* %1, align 4, !dbg !10863
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10864
  ret void, !dbg !10864
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10867, metadata !DIExpression()), !dbg !10868
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10869
  br i1 %2, label %3, label %4, !dbg !10871

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10872
  br label %4, !dbg !10873

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10868
  ret i32 %5, !dbg !10874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10875 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !10879, metadata !DIExpression()), !dbg !10880
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10881, !srcloc !10883
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10884
  ret i1 %1, !dbg !10885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10886 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10887
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10888
  ret void, !dbg !10889
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10892, metadata !DIExpression()), !dbg !10893
  %2 = icmp eq i32 %0, 10, !dbg !10894
  br i1 %2, label %3, label %4, !dbg !10896

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10897
  br label %4, !dbg !10899

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10900
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10901
  ret i32 %0, !dbg !10902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !10906, metadata !DIExpression()), !dbg !10908
  call void @llvm.dbg.value(metadata i8 %0, metadata !10907, metadata !DIExpression()), !dbg !10908
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10909, !srcloc !10911
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10912
  ret void, !dbg !10913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10914 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !10916, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i8 %0, metadata !10917, metadata !DIExpression()), !dbg !10919
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10920
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10918, metadata !DIExpression()), !dbg !10919
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10921
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10921
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_57, i8 noundef zeroext %0) #27, !dbg !10922
  ret void, !dbg !10923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10924 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !10926, metadata !DIExpression()), !dbg !10927
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_57) #27, !dbg !10928
  ret i1 %1, !dbg !10929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10977, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10978, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10979, metadata !DIExpression()), !dbg !10980
  ret void, !dbg !10981
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #20 !dbg !10982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10984, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10985, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10985, metadata !DIExpression()), !dbg !10986
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10987
  call void @llvm.dbg.value(metadata i32 1, metadata !10985, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 1, metadata !10985, metadata !DIExpression()), !dbg !10986
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10987
  call void @llvm.dbg.value(metadata i32 2, metadata !10985, metadata !DIExpression()), !dbg !10986
  ret i32 0, !dbg !10991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10994, metadata !DIExpression()), !dbg !10995
  ret i32 50, !dbg !10996
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10999, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11000, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %2, metadata !11001, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %3, metadata !11002, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %4, metadata !11003, metadata !DIExpression()), !dbg !11007
  %6 = icmp eq i32 %2, 1, !dbg !11008
  br i1 %6, label %8, label %7, !dbg !11010

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !11011
  br label %70, !dbg !11017

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !11018
  %10 = load i16, i16* %9, align 2, !dbg !11018
  %11 = and i16 %10, 32, !dbg !11020
  %12 = icmp eq i16 %11, 0, !dbg !11020
  br i1 %12, label %13, label %14, !dbg !11021

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !11022
  br label %70, !dbg !11028

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !11029
  %16 = load i16, i16* %15, align 4, !dbg !11029
  %17 = icmp eq i16 %16, 16, !dbg !11031
  br i1 %17, label %19, label %18, !dbg !11032

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !11033
  br label %70, !dbg !11039

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !11040
  br i1 %20, label %21, label %37, !dbg !11042

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !11043

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11045
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11045
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !11047
  br label %53, !dbg !11048

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !11049
  %27 = load i32, i32* %26, align 4, !dbg !11049
  %28 = icmp eq i32 %27, 32, !dbg !11051
  br i1 %28, label %30, label %29, !dbg !11052

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !11053
  br label %70, !dbg !11059

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11060
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11060
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !11061
  br label %53, !dbg !11062

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11063
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !11063
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !11064
  br label %53, !dbg !11065

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !11066
  br label %70, !dbg !11071

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !11072

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11074
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11074
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !11076
  br label %53, !dbg !11077

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !11078
  %43 = load i32, i32* %42, align 4, !dbg !11078
  %44 = icmp eq i32 %43, 32, !dbg !11080
  br i1 %44, label %46, label %45, !dbg !11081

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !11082
  br label %70, !dbg !11088

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11089
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11089
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !11090
  br label %53, !dbg !11091

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11092
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !11092
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !11093
  br label %53, !dbg !11094

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !11095
  br label %70, !dbg !11100

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !11101
  store i32 %3, i32* %54, align 4, !dbg !11102
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %55, metadata !11006, metadata !DIExpression()), !dbg !11007
  %56 = icmp eq i32 %55, 2, !dbg !11104
  br i1 %56, label %57, label %58, !dbg !11106

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !11107
  br label %70, !dbg !11113

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !11114
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !11004, metadata !DIExpression()), !dbg !11007
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !11115
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !11117
  %62 = load i8*, i8** %61, align 4, !dbg !11117
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !11118
  %64 = icmp eq i32 %63, 0, !dbg !11119
  br i1 %64, label %65, label %67, !dbg !11120

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !11121
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !11127
  store i32 0, i32* %66, align 4, !dbg !11128
  br label %70, !dbg !11129

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11130
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !11131
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !11131
  br label %70, !dbg !11132

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !11007
  ret i32 %71, !dbg !11133
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !11134 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11136, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11137, metadata !DIExpression()), !dbg !11139
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11140
  %4 = load i8*, i8** %3, align 4, !dbg !11140
  call void @llvm.dbg.value(metadata i8* %4, metadata !11138, metadata !DIExpression()), !dbg !11139
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !11141
  %6 = bitcast i8* %4 to i32*, !dbg !11142
  store i32 0, i32* %6, align 4, !dbg !11143
  ret i32 0, !dbg !11144
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11145 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11148, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i8* %2, metadata !11149, metadata !DIExpression()), !dbg !11151
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11152
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !11152
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !11152
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !11150, metadata !DIExpression()), !dbg !11151
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11153
  %8 = load i8*, i8** %7, align 4, !dbg !11153
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11155
  %10 = load i32, i32* %9, align 4, !dbg !11155
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11156
  %12 = load i8*, i8** %11, align 4, !dbg !11156
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11157
  %14 = load i32, i32* %13, align 4, !dbg !11157
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11158
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !11159
  %17 = icmp eq i32 %16, 0, !dbg !11160
  br i1 %17, label %18, label %19, !dbg !11161

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !11162
  br label %22, !dbg !11168

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11169
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11170
  store i32 %20, i32* %21, align 4, !dbg !11171
  br label %22, !dbg !11172

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !11151
  ret i32 %23, !dbg !11173
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11174 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11176, metadata !DIExpression()), !dbg !11182
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11177, metadata !DIExpression()), !dbg !11182
  call void @llvm.dbg.value(metadata i8* %2, metadata !11178, metadata !DIExpression()), !dbg !11182
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11183
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11183
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11183
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11179, metadata !DIExpression()), !dbg !11182
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11184
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11184
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11180, metadata !DIExpression()), !dbg !11185
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11185
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11186
  %10 = load i16, i16* %9, align 4, !dbg !11186
  %11 = zext i16 %10 to i32, !dbg !11187
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11188
  %13 = load i32, i32* %12, align 4, !dbg !11188
  %14 = lshr i32 %13, 3, !dbg !11189
  %15 = sub nsw i32 %11, %14, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %15, metadata !11181, metadata !DIExpression()), !dbg !11182
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11191
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11192
  %18 = load i8*, i8** %17, align 4, !dbg !11192
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11194
  %20 = load i32, i32* %19, align 4, !dbg !11194
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11195
  %22 = load i8*, i8** %21, align 4, !dbg !11195
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11196
  %24 = load i32, i32* %23, align 4, !dbg !11196
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11197
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11198
  %27 = icmp eq i32 %26, 0, !dbg !11199
  br i1 %27, label %28, label %29, !dbg !11200

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11201
  br label %32, !dbg !11207

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11208
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11209
  store i32 %30, i32* %31, align 4, !dbg !11210
  br label %32, !dbg !11211

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11212
  ret i32 %33, !dbg !11212
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11213 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11215, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11216, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.value(metadata i8* %2, metadata !11217, metadata !DIExpression()), !dbg !11230
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11231
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11231
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11218, metadata !DIExpression()), !dbg !11232
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11233
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11233
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11233
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11226, metadata !DIExpression()), !dbg !11230
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11234
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11235
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11227, metadata !DIExpression()), !dbg !11230
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11236
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11236
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11229, metadata !DIExpression()), !dbg !11230
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11237
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11239
  %15 = load i16, i16* %14, align 2, !dbg !11239
  %16 = zext i16 %15 to i32, !dbg !11240
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11241
  %18 = load i16, i16* %17, align 2, !dbg !11241
  %19 = zext i16 %18 to i32, !dbg !11242
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11243
  %21 = icmp eq i32 %20, 0, !dbg !11244
  br i1 %21, label %22, label %23, !dbg !11245

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11246
  br label %56, !dbg !11252

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11253
  %25 = load i8*, i8** %24, align 4, !dbg !11253
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11255
  %27 = load i32, i32* %26, align 4, !dbg !11255
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11256
  %29 = load i8*, i8** %28, align 4, !dbg !11256
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11257
  %31 = load i32, i32* %30, align 4, !dbg !11257
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11258
  %33 = load i8*, i8** %32, align 4, !dbg !11258
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11259
  %35 = load i32, i32* %34, align 4, !dbg !11259
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11260
  %37 = icmp eq i32 %36, 0, !dbg !11261
  br i1 %37, label %38, label %39, !dbg !11262

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11263
  br label %56, !dbg !11269

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11270
  %41 = load i8*, i8** %40, align 4, !dbg !11270
  %42 = icmp eq i8* %41, null, !dbg !11272
  br i1 %42, label %50, label %43, !dbg !11273

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11274
  %45 = load i32, i32* %34, align 4, !dbg !11276
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11277
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11278
  %48 = load i32, i32* %47, align 4, !dbg !11278
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11279
  br label %50, !dbg !11280

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11281
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11282
  %53 = load i32, i32* %52, align 4, !dbg !11282
  %54 = add i32 %53, %51, !dbg !11283
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11284
  store i32 %54, i32* %55, align 4, !dbg !11285
  br label %56, !dbg !11286

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11230
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11287
  ret i32 %57, !dbg !11287
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11288 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11290, metadata !DIExpression()), !dbg !11294
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11291, metadata !DIExpression()), !dbg !11294
  call void @llvm.dbg.value(metadata i8* %2, metadata !11292, metadata !DIExpression()), !dbg !11294
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11293, metadata !DIExpression()), !dbg !11294
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11295
  %5 = load i8*, i8** %4, align 4, !dbg !11295
  %6 = icmp eq i8* %5, %2, !dbg !11297
  br i1 %6, label %8, label %7, !dbg !11298

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11299
  br label %27, !dbg !11305

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11306
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11306
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11306
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11293, metadata !DIExpression()), !dbg !11294
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11307
  %13 = load i8*, i8** %12, align 4, !dbg !11307
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11309
  %15 = load i32, i32* %14, align 4, !dbg !11309
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11310
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11311
  %18 = load i32, i32* %17, align 4, !dbg !11311
  %19 = add nsw i32 %18, -16, !dbg !11312
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11313
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11314
  %22 = icmp eq i32 %21, 0, !dbg !11315
  br i1 %22, label %23, label %24, !dbg !11316

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11317
  br label %27, !dbg !11323

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11324
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11325
  store i32 %25, i32* %26, align 4, !dbg !11326
  br label %27, !dbg !11327

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11294
  ret i32 %28, !dbg !11328
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11329 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11331, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11332, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.value(metadata i8* %2, metadata !11333, metadata !DIExpression()), !dbg !11338
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11339
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11339
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11334, metadata !DIExpression()), !dbg !11340
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11341
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11341
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11341
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11335, metadata !DIExpression()), !dbg !11338
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11342
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11343
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11336, metadata !DIExpression()), !dbg !11338
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11344
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11344
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11337, metadata !DIExpression()), !dbg !11338
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11345
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11347
  %15 = load i16, i16* %14, align 2, !dbg !11347
  %16 = zext i16 %15 to i32, !dbg !11348
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11349
  %18 = load i16, i16* %17, align 2, !dbg !11349
  %19 = zext i16 %18 to i32, !dbg !11350
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11351
  %21 = icmp eq i32 %20, 0, !dbg !11352
  br i1 %21, label %22, label %23, !dbg !11353

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11354
  br label %54, !dbg !11360

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11361
  %25 = load i8*, i8** %24, align 4, !dbg !11361
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11363
  %27 = load i8*, i8** %26, align 4, !dbg !11363
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11364
  %29 = load i32, i32* %28, align 4, !dbg !11364
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11365
  %31 = icmp eq i8* %25, %30, !dbg !11366
  br i1 %31, label %33, label %32, !dbg !11367

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11368
  br label %54, !dbg !11374

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11375
  %35 = load i8*, i8** %34, align 4, !dbg !11375
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11377
  %37 = load i32, i32* %36, align 4, !dbg !11377
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11378
  %39 = load i8*, i8** %38, align 4, !dbg !11378
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11379
  %41 = load i32, i32* %40, align 4, !dbg !11379
  %42 = load i16, i16* %17, align 2, !dbg !11380
  %43 = zext i16 %42 to i32, !dbg !11381
  %44 = add nsw i32 %29, %43, !dbg !11382
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11383
  %46 = icmp eq i32 %45, 0, !dbg !11384
  br i1 %46, label %47, label %48, !dbg !11385

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11386
  br label %54, !dbg !11392

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11393
  %50 = load i16, i16* %17, align 2, !dbg !11394
  %51 = zext i16 %50 to i32, !dbg !11395
  %52 = add nsw i32 %49, %51, !dbg !11396
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11397
  store i32 %52, i32* %53, align 4, !dbg !11398
  br label %54, !dbg !11399

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11338
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11400
  ret i32 %55, !dbg !11400
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11401 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11403, metadata !DIExpression()), !dbg !11404
  br label %1, !dbg !11405

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11403, metadata !DIExpression()), !dbg !11404
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11407
  %5 = load i32, i32* %4, align 4, !dbg !11407
  %6 = icmp eq i32 %5, 0, !dbg !11411
  br i1 %6, label %7, label %8, !dbg !11412

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11413
  br label %9, !dbg !11415

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11403, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11404
  br i1 %2, label %1, label %9, !dbg !11405, !llvm.loop !11416

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11418
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11419 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11421, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i8 %1, metadata !11422, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i32 %2, metadata !11423, metadata !DIExpression()), !dbg !11426
  %5 = bitcast i32* %4 to i8*, !dbg !11427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11427
  call void @llvm.dbg.value(metadata i32* %4, metadata !11425, metadata !DIExpression(DW_OP_deref)), !dbg !11426
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11428
  call void @llvm.dbg.value(metadata i32 %6, metadata !11424, metadata !DIExpression()), !dbg !11426
  %7 = icmp eq i32 %6, 0, !dbg !11429
  br i1 %7, label %8, label %31, !dbg !11431

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11424, metadata !DIExpression()), !dbg !11426
  %9 = and i32 %2, 131072, !dbg !11432
  %10 = icmp eq i32 %9, 0, !dbg !11434
  br i1 %10, label %28, label %11, !dbg !11435

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11436
  %13 = icmp eq i32 %12, 0, !dbg !11439
  br i1 %13, label %18, label %14, !dbg !11440

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11441
  %16 = shl nuw i32 1, %15, !dbg !11441
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11443
  br label %25, !dbg !11444

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11445
  %20 = icmp eq i32 %19, 0, !dbg !11447
  %21 = zext i8 %1 to i32, !dbg !11426
  br i1 %20, label %25, label %22, !dbg !11448

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11449
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11451
  br label %25, !dbg !11452

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11453
  %27 = load i32, i32* %4, align 4, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %30, metadata !11425, metadata !DIExpression()), !dbg !11426
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11455
  br label %31, !dbg !11456

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11453
  %30 = load i32, i32* %4, align 4, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %30, metadata !11425, metadata !DIExpression()), !dbg !11426
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11455
  call void @llvm.dbg.value(metadata i32 0, metadata !11424, metadata !DIExpression()), !dbg !11426
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11457
  ret i32 %6, !dbg !11457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11462, metadata !DIExpression()), !dbg !11467
  call void @llvm.dbg.value(metadata i32* %1, metadata !11463, metadata !DIExpression()), !dbg !11467
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11468
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11468
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11468
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11464, metadata !DIExpression()), !dbg !11467
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11469
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11469
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11469
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11466, metadata !DIExpression()), !dbg !11467
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11470
  store i32 %9, i32* %1, align 4, !dbg !11471
  ret i32 0, !dbg !11472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !11473 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11475, metadata !DIExpression()), !dbg !11481
  call void @llvm.dbg.value(metadata i32 %1, metadata !11476, metadata !DIExpression()), !dbg !11481
  call void @llvm.dbg.value(metadata i32 %2, metadata !11477, metadata !DIExpression()), !dbg !11481
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11482
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11482
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11482
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11478, metadata !DIExpression()), !dbg !11481
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11483
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11483
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11483
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11479, metadata !DIExpression()), !dbg !11481
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %10, metadata !11480, metadata !DIExpression()), !dbg !11481
  %11 = xor i32 %1, -1, !dbg !11485
  %12 = and i32 %10, %11, !dbg !11486
  %13 = and i32 %2, %1, !dbg !11487
  %14 = or i32 %12, %13, !dbg !11488
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11489
  ret i32 0, !dbg !11490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11493, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i32 %1, metadata !11494, metadata !DIExpression()), !dbg !11497
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11498
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11498
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11498
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11495, metadata !DIExpression()), !dbg !11497
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11499
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11499
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11496, metadata !DIExpression()), !dbg !11497
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11500
  store volatile i32 %1, i32* %9, align 4, !dbg !11500
  ret i32 0, !dbg !11501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11504, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %1, metadata !11505, metadata !DIExpression()), !dbg !11508
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11509
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11509
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11509
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11506, metadata !DIExpression()), !dbg !11508
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11510
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11510
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11510
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11507, metadata !DIExpression()), !dbg !11508
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11511
  ret i32 0, !dbg !11512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11515, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 %1, metadata !11516, metadata !DIExpression()), !dbg !11519
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11520
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11520
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11520
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11517, metadata !DIExpression()), !dbg !11519
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11521
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11521
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11521
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11518, metadata !DIExpression()), !dbg !11519
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11522
  %10 = load volatile i32, i32* %9, align 4, !dbg !11522
  %11 = xor i32 %10, %1, !dbg !11522
  store volatile i32 %11, i32* %9, align 4, !dbg !11522
  ret i32 0, !dbg !11523
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11524 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11526, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i8 %1, metadata !11527, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 %2, metadata !11528, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 %3, metadata !11529, metadata !DIExpression()), !dbg !11536
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11537
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11537
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11537
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11530, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i8* undef, metadata !11531, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 0, metadata !11533, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 0, metadata !11534, metadata !DIExpression()), !dbg !11536
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11538

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11539
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11543
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11544
  %12 = load i32, i32* %11, align 4, !dbg !11544
  %13 = icmp eq i32 %10, %12, !dbg !11545
  br i1 %13, label %14, label %29, !dbg !11546

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11547
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11549
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11550
  br label %29, !dbg !11551

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11552
  %17 = load i8*, i8** %16, align 4, !dbg !11552
  call void @llvm.dbg.value(metadata i8* %17, metadata !11531, metadata !DIExpression()), !dbg !11536
  %18 = zext i8 %1 to i32, !dbg !11553
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11555
  %20 = icmp eq i32 %19, 0, !dbg !11556
  br i1 %20, label %21, label %29, !dbg !11557

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11558
  %23 = load i32, i32* %22, align 4, !dbg !11558
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11559
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11560

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11533, metadata !DIExpression()), !dbg !11536
  br label %27, !dbg !11561

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11533, metadata !DIExpression()), !dbg !11536
  br label %27, !dbg !11563

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11533, metadata !DIExpression()), !dbg !11536
  br label %27, !dbg !11564

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11536
  call void @llvm.dbg.value(metadata i32 %28, metadata !11533, metadata !DIExpression()), !dbg !11536
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11565
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11566
  br label %29, !dbg !11566

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11536
  call void @llvm.dbg.value(metadata i32 %30, metadata !11534, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.label(metadata !11535), !dbg !11567
  ret i32 %30, !dbg !11568
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11571, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11572, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata i1 %2, metadata !11573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11575
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11576
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11576
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11574, metadata !DIExpression()), !dbg !11575
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11577
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11578
  ret i32 %8, !dbg !11579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11580 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11586, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11587, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i1 %2, metadata !11588, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11589
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11590
  br i1 %4, label %10, label %5, !dbg !11592

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11593
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11596
  %8 = or i1 %7, %2, !dbg !11597
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11597
  br i1 %2, label %11, label %13, !dbg !11597

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11598

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11599
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11602
  br label %13, !dbg !11603

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11589
  ret i32 %14, !dbg !11604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11605 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11609, metadata !DIExpression()), !dbg !11610
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11611
  %3 = icmp eq %struct._snode* %2, null, !dbg !11611
  ret i1 %3, !dbg !11611
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11612 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11616, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11617, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11618, metadata !DIExpression()), !dbg !11620
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11621
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11618, metadata !DIExpression()), !dbg !11620
  %4 = icmp eq %struct._snode* %3, null, !dbg !11623
  br i1 %4, label %15, label %5, !dbg !11621

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11618, metadata !DIExpression()), !dbg !11620
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11625
  br i1 %6, label %9, label %11, !dbg !11628

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11618, metadata !DIExpression()), !dbg !11620
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11625
  br i1 %8, label %9, label %11, !dbg !11628, !llvm.loop !11629

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11630
  br label %15, !dbg !11630

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11618, metadata !DIExpression()), !dbg !11620
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11623
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11619, metadata !DIExpression()), !dbg !11620
  %14 = icmp eq %struct._snode* %13, null, !dbg !11623
  br i1 %14, label %15, label %7, !dbg !11621, !llvm.loop !11629

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11633 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11638, metadata !DIExpression()), !dbg !11639
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11640
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11640
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11640
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11641
  %5 = icmp eq %struct._snode* %4, null, !dbg !11641
  br i1 %5, label %6, label %8, !dbg !11640

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11643
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11643
  br label %8, !dbg !11643

8:                                                ; preds = %6, %2
  ret void, !dbg !11640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11645 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11649, metadata !DIExpression()), !dbg !11650
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11651
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11651
  ret %struct._snode* %3, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11657, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11658, metadata !DIExpression()), !dbg !11659
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11660
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11661
  ret void, !dbg !11662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11663 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11665, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11666, metadata !DIExpression()), !dbg !11667
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11668
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11671 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11673, metadata !DIExpression()), !dbg !11674
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11675
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11675
  ret %struct._snode* %3, !dbg !11676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11677 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11680, metadata !DIExpression()), !dbg !11681
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11682
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11683
  ret void, !dbg !11684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11685 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11689, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11690, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11691, metadata !DIExpression()), !dbg !11692
  %4 = icmp eq %struct._snode* %1, null, !dbg !11693
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11695
  br i1 %4, label %6, label %11, !dbg !11696

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11697
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11699
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11699
  br i1 %8, label %9, label %15, !dbg !11697

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11701
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11701
  br label %15, !dbg !11701

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11703
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11705
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11705
  br i1 %13, label %14, label %15, !dbg !11703

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11707
  br label %15, !dbg !11707

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11696
  ret void, !dbg !11696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11709 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11713, metadata !DIExpression()), !dbg !11714
  %2 = icmp eq %struct._snode* %0, null, !dbg !11715
  br i1 %2, label %5, label %3, !dbg !11715

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11715
  br label %5, !dbg !11715

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11715
  ret %struct._snode* %6, !dbg !11715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11716 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11718, metadata !DIExpression()), !dbg !11719
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11720
  ret %struct._snode* %2, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11721 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11723, metadata !DIExpression()), !dbg !11724
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11725
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11725
  ret %struct._snode* %3, !dbg !11726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11729, metadata !DIExpression()), !dbg !11732
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11733, !range !11734
  call void @llvm.dbg.value(metadata i32 %2, metadata !11730, metadata !DIExpression()), !dbg !11732
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11735
  call void @llvm.dbg.value(metadata i32 %3, metadata !11731, metadata !DIExpression()), !dbg !11732
  ret i32 %3, !dbg !11736
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11739, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i8* %1, metadata !11740, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i8* %1, metadata !11741, metadata !DIExpression()), !dbg !11742
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11743
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11743
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11744
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11744
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11744
  %8 = shl nuw i32 1, %0, !dbg !11745
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11746
  ret void, !dbg !11747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11748 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11752, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.value(metadata i32 %1, metadata !11753, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11754, metadata !DIExpression()), !dbg !11758
  %4 = bitcast i64* %3 to i8*, !dbg !11759
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11759
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11756, metadata !DIExpression()), !dbg !11758
  store i64 70368744177732, i64* %3, align 8, !dbg !11760
  call void @llvm.dbg.value(metadata i64* %3, metadata !11756, metadata !DIExpression(DW_OP_deref)), !dbg !11758
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %5, metadata !11757, metadata !DIExpression()), !dbg !11758
  %6 = icmp eq i32 %5, 0, !dbg !11762
  br i1 %6, label %7, label %8, !dbg !11764

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11765
  br label %8, !dbg !11766

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11767
  ret void, !dbg !11767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11768 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11770, metadata !DIExpression()), !dbg !11773
  call void @llvm.dbg.value(metadata i8* %0, metadata !11771, metadata !DIExpression()), !dbg !11773
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11774
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11772, metadata !DIExpression()), !dbg !11773
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11775
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11775
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !11776
  ret i32 %5, !dbg !11777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11781, metadata !DIExpression()), !dbg !11783
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %3, metadata !11782, metadata !DIExpression()), !dbg !11783
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11785
  ret void, !dbg !11786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11791, metadata !DIExpression()), !dbg !11792
  %2 = sdiv i32 %0, 4, !dbg !11793
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11794
  %6 = add nsw i32 %5, 16, !dbg !11795
  %7 = shl i32 15, %6, !dbg !11796
  %8 = or i32 %7, %2, !dbg !11797
  ret i32 %8, !dbg !11798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11803, metadata !DIExpression()), !dbg !11805
  call void @llvm.dbg.value(metadata i32 %1, metadata !11804, metadata !DIExpression()), !dbg !11805
  %3 = and i32 %1, 255, !dbg !11806
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11806
  %5 = load volatile i32, i32* %4, align 4, !dbg !11806
  %6 = lshr i32 %1, 16, !dbg !11806
  %7 = xor i32 %6, -1, !dbg !11806
  %8 = and i32 %5, %7, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %6, metadata !11807, metadata !DIExpression()) #25, !dbg !11811
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11813, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %9, metadata !11810, metadata !DIExpression()) #25, !dbg !11811
  call void @llvm.dbg.value(metadata i32 %9, metadata !11815, metadata !DIExpression()) #25, !dbg !11820
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11822, !range !9601
  %11 = shl i32 %0, %10, !dbg !11806
  %12 = or i32 %11, %8, !dbg !11806
  store volatile i32 %12, i32* %4, align 4, !dbg !11806
  ret void, !dbg !11823
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11824 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11828, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11829, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata i32 %2, metadata !11830, metadata !DIExpression()), !dbg !11833
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11834
  %5 = icmp eq %struct._snode* %4, null, !dbg !11834
  br i1 %5, label %21, label %6, !dbg !11834

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11836
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11832, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11831, metadata !DIExpression()), !dbg !11833
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11837
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11837
  %11 = load i32, i32* %10, align 4, !dbg !11837
  %12 = and i32 %11, %2, !dbg !11841
  %13 = icmp eq i32 %12, 0, !dbg !11841
  br i1 %13, label %19, label %14, !dbg !11842

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11831, metadata !DIExpression()), !dbg !11833
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11843
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11843
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11843
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11845
  br label %19, !dbg !11846

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11831, metadata !DIExpression()), !dbg !11833
  %20 = icmp eq %struct._snode* %8, null, !dbg !11847
  br i1 %20, label %21, label %6, !dbg !11847

21:                                               ; preds = %19, %3
  ret void, !dbg !11848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %2 = and i32 %0, 255, !dbg !11853
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11853
  %4 = load volatile i32, i32* %3, align 4, !dbg !11853
  %5 = lshr i32 %0, 16, !dbg !11853
  %6 = and i32 %4, %5, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %5, metadata !11807, metadata !DIExpression()) #25, !dbg !11854
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11856, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %7, metadata !11810, metadata !DIExpression()) #25, !dbg !11854
  call void @llvm.dbg.value(metadata i32 %7, metadata !11815, metadata !DIExpression()) #25, !dbg !11857
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11859, !range !9601
  %9 = lshr i32 %6, %8, !dbg !11860
  ret i32 %9, !dbg !11861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11862 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11867, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i32 %1, metadata !11868, metadata !DIExpression()), !dbg !11869
  %3 = shl i32 %1, 16, !dbg !11870
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11870
  store volatile i32 %3, i32* %4, align 4, !dbg !11870
  ret void, !dbg !11871
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11872 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11876, metadata !DIExpression()), !dbg !11877
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11878
  %3 = load volatile i32, i32* %2, align 4, !dbg !11878
  ret i32 %3, !dbg !11879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11880 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11882, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %1, metadata !11883, metadata !DIExpression()), !dbg !11884
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11885
  store volatile i32 %1, i32* %3, align 4, !dbg !11885
  ret void, !dbg !11886
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11887 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11889, metadata !DIExpression()), !dbg !11890
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11891
  %3 = load volatile i32, i32* %2, align 4, !dbg !11891
  ret i32 %3, !dbg !11892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11897, metadata !DIExpression()), !dbg !11899
  call void @llvm.dbg.value(metadata i32* %1, metadata !11898, metadata !DIExpression()), !dbg !11899
  %3 = and i32 %0, 131072, !dbg !11900
  %4 = icmp eq i32 %3, 0, !dbg !11902
  br i1 %4, label %22, label %5, !dbg !11903

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11904
  %6 = and i32 %0, 2, !dbg !11906
  %7 = icmp eq i32 %6, 0, !dbg !11908
  br i1 %7, label %11, label %8, !dbg !11909

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11910
  %10 = icmp eq i32 %9, 0, !dbg !11910
  br i1 %10, label %33, label %11, !dbg !11913

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11914
  store i32 %12, i32* %1, align 4, !dbg !11914
  %13 = and i32 %0, 16, !dbg !11915
  %14 = icmp eq i32 %13, 0, !dbg !11917
  br i1 %14, label %17, label %15, !dbg !11918

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11919
  br label %31, !dbg !11921

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11922
  %19 = icmp eq i32 %18, 0, !dbg !11924
  br i1 %19, label %33, label %20, !dbg !11925

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11926
  br label %31, !dbg !11928

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11929
  %24 = icmp eq i32 %23, 0, !dbg !11931
  br i1 %24, label %31, label %25, !dbg !11932

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11933
  %27 = icmp eq i32 %26, 0, !dbg !11936
  br i1 %27, label %28, label %31, !dbg !11937

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11938
  br label %33, !dbg !11939

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11899
  ret i32 %34, !dbg !11939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11944, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i32 %1, metadata !11945, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i32 %2, metadata !11946, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i32 %3, metadata !11947, metadata !DIExpression()), !dbg !11955
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11956
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11956
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11956
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11948, metadata !DIExpression()), !dbg !11955
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11957
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11957
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11957
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11949, metadata !DIExpression()), !dbg !11955
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %11, metadata !11950, metadata !DIExpression()), !dbg !11955
  %12 = and i32 %2, 48, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %12, metadata !11951, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i32 %2, metadata !11952, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11955
  call void @llvm.dbg.value(metadata i32 %2, metadata !11953, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11955
  call void @llvm.dbg.value(metadata i32 %2, metadata !11954, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11955
  %13 = lshr i32 %2, 6, !dbg !11960
  %14 = and i32 %13, 1, !dbg !11960
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11961
  %15 = lshr i32 %2, 7, !dbg !11962
  %16 = and i32 %15, 3, !dbg !11962
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11963
  %17 = lshr i32 %2, 9, !dbg !11964
  %18 = and i32 %17, 3, !dbg !11964
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11965
  %19 = icmp eq i32 %12, 32, !dbg !11966
  br i1 %19, label %20, label %24, !dbg !11968

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11969
  br i1 %21, label %22, label %23, !dbg !11972

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11973
  br label %24, !dbg !11975

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11976
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11978
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11979
  ret void, !dbg !11980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11983, metadata !DIExpression()), !dbg !11985
  %2 = shl nuw i32 1, %0, !dbg !11986
  call void @llvm.dbg.value(metadata i32 %2, metadata !11984, metadata !DIExpression()), !dbg !11985
  ret i32 %2, !dbg !11987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11988 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11992, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i32 %1, metadata !11993, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i32 %2, metadata !11994, metadata !DIExpression()), !dbg !11995
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11996
  %5 = load volatile i32, i32* %4, align 4, !dbg !11996
  %6 = xor i32 %1, -1, !dbg !11996
  %7 = and i32 %5, %6, !dbg !11996
  %8 = mul i32 %2, %1, !dbg !11996
  %9 = or i32 %7, %8, !dbg !11996
  store volatile i32 %9, i32* %4, align 4, !dbg !11996
  ret void, !dbg !11997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11998 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12000, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %1, metadata !12001, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %2, metadata !12002, metadata !DIExpression()), !dbg !12003
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !12004
  %5 = load volatile i32, i32* %4, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12005
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12007, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12005
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12008
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12010, !range !9601
  %8 = shl nuw nsw i32 %7, 1, !dbg !12004
  %9 = shl i32 3, %8, !dbg !12004
  %10 = xor i32 %9, -1, !dbg !12004
  %11 = and i32 %5, %10, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12013
  %12 = shl i32 %2, %8, !dbg !12004
  %13 = or i32 %11, %12, !dbg !12004
  store volatile i32 %13, i32* %4, align 4, !dbg !12004
  ret void, !dbg !12015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12016 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12018, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata i32 %1, metadata !12019, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata i32 %2, metadata !12020, metadata !DIExpression()), !dbg !12021
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !12022
  %5 = load volatile i32, i32* %4, align 4, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12023
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12025, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12023
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12026
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12028, !range !9601
  %8 = shl nuw nsw i32 %7, 1, !dbg !12022
  %9 = shl i32 3, %8, !dbg !12022
  %10 = xor i32 %9, -1, !dbg !12022
  %11 = and i32 %5, %10, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12029
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12029
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12031
  %12 = shl i32 %2, %8, !dbg !12022
  %13 = or i32 %11, %12, !dbg !12022
  store volatile i32 %13, i32* %4, align 4, !dbg !12022
  ret void, !dbg !12033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12034 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12036, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i32 %1, metadata !12037, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i32 %2, metadata !12038, metadata !DIExpression()), !dbg !12039
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !12040
  %5 = load volatile i32, i32* %4, align 4, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12041
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12043, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12044
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12046, !range !9601
  %8 = shl nuw nsw i32 %7, 2, !dbg !12040
  %9 = shl i32 15, %8, !dbg !12040
  %10 = xor i32 %9, -1, !dbg !12040
  %11 = and i32 %5, %10, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12049
  %12 = shl i32 %2, %8, !dbg !12040
  %13 = or i32 %11, %12, !dbg !12040
  store volatile i32 %13, i32* %4, align 4, !dbg !12040
  ret void, !dbg !12051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12052 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12054, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i32 %1, metadata !12055, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i32 %2, metadata !12056, metadata !DIExpression()), !dbg !12057
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !12058
  %5 = load volatile i32, i32* %4, align 4, !dbg !12058
  %6 = lshr i32 %1, 8, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %6, metadata !11807, metadata !DIExpression()) #25, !dbg !12059
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !12061, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %7, metadata !11810, metadata !DIExpression()) #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %7, metadata !11815, metadata !DIExpression()) #25, !dbg !12062
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !12064, !range !9601
  %9 = shl nuw nsw i32 %8, 2, !dbg !12058
  %10 = shl i32 15, %9, !dbg !12058
  %11 = xor i32 %10, -1, !dbg !12058
  %12 = and i32 %5, %11, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %6, metadata !11807, metadata !DIExpression()) #25, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %7, metadata !11810, metadata !DIExpression()) #25, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %7, metadata !11815, metadata !DIExpression()) #25, !dbg !12067
  %13 = shl i32 %2, %9, !dbg !12058
  %14 = or i32 %12, %13, !dbg !12058
  store volatile i32 %14, i32* %4, align 4, !dbg !12058
  ret void, !dbg !12069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12070 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12072, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i32 %1, metadata !12073, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i32 %2, metadata !12074, metadata !DIExpression()), !dbg !12075
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !12076
  %5 = load volatile i32, i32* %4, align 4, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12077
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12079, !srcloc !11814
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12080
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12082, !range !9601
  %8 = shl nuw nsw i32 %7, 1, !dbg !12076
  %9 = shl i32 3, %8, !dbg !12076
  %10 = xor i32 %9, -1, !dbg !12076
  %11 = and i32 %5, %10, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %1, metadata !11807, metadata !DIExpression()) #25, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %6, metadata !11810, metadata !DIExpression()) #25, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %6, metadata !11815, metadata !DIExpression()) #25, !dbg !12085
  %12 = shl i32 %2, %8, !dbg !12076
  %13 = or i32 %11, %12, !dbg !12076
  store volatile i32 %13, i32* %4, align 4, !dbg !12076
  ret void, !dbg !12087
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !12088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12090, metadata !DIExpression()), !dbg !12093
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12094
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !12094
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !12094
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !12091, metadata !DIExpression()), !dbg !12093
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !12095
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !12096
  %6 = tail call fastcc zeroext i1 @device_is_ready.181() #26, !dbg !12097
  br i1 %6, label %7, label %11, !dbg !12099

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !12100
  call void @llvm.dbg.value(metadata i32 %8, metadata !12092, metadata !DIExpression()), !dbg !12093
  %9 = icmp slt i32 %8, 0, !dbg !12101
  %10 = select i1 %9, i32 %8, i32 0, !dbg !12103
  br label %11, !dbg !12103

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !12093
  ret i32 %12, !dbg !12104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.181() unnamed_addr #1 !dbg !12105 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12109, metadata !DIExpression()), !dbg !12110
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12111, !srcloc !12113
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.182() #26, !dbg !12114
  ret i1 %1, !dbg !12115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12120, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i8 1, metadata !12121, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !12122, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32 0, metadata !12123, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12124, metadata !DIExpression()), !dbg !12125
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12126
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12126
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12126
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !12122, metadata !DIExpression()), !dbg !12125
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12127
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12130
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %7, metadata !12123, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32 %7, metadata !12123, metadata !DIExpression()), !dbg !12125
  ret i32 %7, !dbg !12132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.182() unnamed_addr #1 !dbg !12133 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12135, metadata !DIExpression()), !dbg !12136
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !12137
  ret i1 %1, !dbg !12138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12139 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12143, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i32 %1, metadata !12144, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i32 %2, metadata !12145, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i32 %3, metadata !12146, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i32 0, metadata !12147, metadata !DIExpression()), !dbg !12151
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !12152
  %5 = icmp eq i32 %3, 17, !dbg !12153
  br i1 %5, label %6, label %14, !dbg !12154

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %7, metadata !12148, metadata !DIExpression()), !dbg !12156
  %8 = icmp eq i32 %7, 0, !dbg !12157
  %9 = shl nuw i32 1, %1, !dbg !12159
  br i1 %8, label %12, label %10, !dbg !12160

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12161
  br label %14, !dbg !12163

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12164
  br label %14, !dbg !12167

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12168
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !12169 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12171, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i8* %1, metadata !12172, metadata !DIExpression()), !dbg !12175
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12176
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12176
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12173, metadata !DIExpression()), !dbg !12175
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12177
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12177
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12179
  %9 = icmp eq i32 %8, 0, !dbg !12179
  br i1 %9, label %12, label %10, !dbg !12180

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12181
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12183
  br label %12, !dbg !12184

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12185
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12187
  %15 = icmp eq i32 %14, 0, !dbg !12187
  br i1 %15, label %19, label %16, !dbg !12188

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12189
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12190
  store i8 %18, i8* %1, align 1, !dbg !12191
  br label %19, !dbg !12192

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12175
  ret i32 %20, !dbg !12193
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12194 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12196, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i8 %1, metadata !12197, metadata !DIExpression()), !dbg !12200
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12201
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12201
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12201
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12198, metadata !DIExpression()), !dbg !12200
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12202

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12203
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12206
  %10 = icmp eq i32 %9, 0, !dbg !12206
  br i1 %10, label %18, label %11, !dbg !12207

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12208, !srcloc !12215
  call void @llvm.dbg.value(metadata i32 undef, metadata !12211, metadata !DIExpression()) #25, !dbg !12216
  call void @llvm.dbg.value(metadata i32 undef, metadata !12212, metadata !DIExpression()) #25, !dbg !12216
  call void @llvm.dbg.value(metadata i32 undef, metadata !12199, metadata !DIExpression()), !dbg !12200
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12217
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12219
  %15 = icmp eq i32 %14, 0, !dbg !12219
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12208
  br i1 %15, label %17, label %19, !dbg !12220

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12211, metadata !DIExpression()) #25, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %16, metadata !12199, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12221, metadata !DIExpression()) #25, !dbg !12224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12226, !srcloc !12227
  br label %18, !dbg !12228

18:                                               ; preds = %17, %7
  br label %7, !dbg !12203, !llvm.loop !12229

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12208
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12231
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %20, metadata !12221, metadata !DIExpression()) #25, !dbg !12233
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12235, !srcloc !12227
  ret void, !dbg !12236
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !12237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12239, metadata !DIExpression()), !dbg !12242
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12243
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12243
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12243
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12240, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.value(metadata i32 0, metadata !12241, metadata !DIExpression()), !dbg !12242
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12244
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12244
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12246
  %8 = icmp ne i32 %7, 0, !dbg !12246
  %9 = zext i1 %8 to i32, !dbg !12247
  call void @llvm.dbg.value(metadata i32 %9, metadata !12241, metadata !DIExpression()), !dbg !12242
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12248
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12250
  %12 = icmp eq i32 %11, 0, !dbg !12250
  %13 = or i32 %9, 2, !dbg !12251
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %14, metadata !12241, metadata !DIExpression()), !dbg !12242
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12252
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12254
  %17 = icmp eq i32 %16, 0, !dbg !12254
  %18 = or i32 %14, 4, !dbg !12255
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12255
  call void @llvm.dbg.value(metadata i32 %19, metadata !12241, metadata !DIExpression()), !dbg !12242
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12256
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12258
  %22 = icmp eq i32 %21, 0, !dbg !12258
  %23 = or i32 %19, 8, !dbg !12259
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12259
  call void @llvm.dbg.value(metadata i32 %24, metadata !12241, metadata !DIExpression()), !dbg !12242
  %25 = and i32 %24, 8, !dbg !12260
  %26 = icmp eq i32 %25, 0, !dbg !12260
  br i1 %26, label %29, label %27, !dbg !12262

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12263
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12265
  br label %29, !dbg !12266

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12267
  %31 = icmp eq i32 %30, 0, !dbg !12267
  br i1 %31, label %34, label %32, !dbg !12269

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12270
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12272
  br label %34, !dbg !12273

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12274
  %36 = icmp eq i32 %35, 0, !dbg !12274
  br i1 %36, label %39, label %37, !dbg !12276

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12277
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12279
  br label %39, !dbg !12280

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12281
  %41 = icmp eq i32 %40, 0, !dbg !12281
  br i1 %41, label %44, label %42, !dbg !12283

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12284
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12286
  br label %44, !dbg !12287

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12288
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12289
  ret i32 %24, !dbg !12290
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12291 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12293, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12294, metadata !DIExpression()), !dbg !12302
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12303
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12303
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12303
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12295, metadata !DIExpression()), !dbg !12302
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12304
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12304
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12304
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12296, metadata !DIExpression()), !dbg !12302
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12305
  %10 = load i8, i8* %9, align 4, !dbg !12305
  %11 = zext i8 %10 to i32, !dbg !12306
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %12, metadata !12298, metadata !DIExpression()), !dbg !12302
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12308
  %14 = load i8, i8* %13, align 1, !dbg !12308
  %15 = zext i8 %14 to i32, !dbg !12309
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %16, metadata !12299, metadata !DIExpression()), !dbg !12302
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12311
  %18 = load i8, i8* %17, align 2, !dbg !12311
  %19 = zext i8 %18 to i32, !dbg !12312
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %20, metadata !12300, metadata !DIExpression()), !dbg !12302
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12314
  %22 = load i8, i8* %21, align 1, !dbg !12314
  %23 = zext i8 %22 to i32, !dbg !12315
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %24, metadata !12301, metadata !DIExpression()), !dbg !12302
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12317

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12319
  br i1 %26, label %69, label %27, !dbg !12321

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12322

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12323
  br i1 %29, label %65, label %30, !dbg !12323

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12325
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12302
  br i1 %31, label %38, label %34, !dbg !12327

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12328
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !12328

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12331
  br i1 %37, label %38, label %69, !dbg !12332

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12333
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12334
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12335
  %41 = icmp eq i32 %12, %40, !dbg !12337
  br i1 %41, label %43, label %42, !dbg !12338

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12339
  br label %43, !dbg !12341

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12342
  %45 = icmp eq i32 %16, %44, !dbg !12344
  br i1 %45, label %47, label %46, !dbg !12345

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12346
  br label %47, !dbg !12348

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12349
  %49 = icmp eq i32 %20, %48, !dbg !12351
  br i1 %49, label %51, label %50, !dbg !12352

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12353
  br label %51, !dbg !12355

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12356
  %53 = icmp eq i32 %24, %52, !dbg !12358
  br i1 %53, label %55, label %54, !dbg !12359

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12360
  br label %55, !dbg !12362

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12363
  %57 = load i32, i32* %56, align 4, !dbg !12363
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12365
  %59 = load i32, i32* %58, align 4, !dbg !12365
  %60 = icmp eq i32 %57, %59, !dbg !12366
  br i1 %60, label %63, label %61, !dbg !12367

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12368
  %62 = load i32, i32* %56, align 4, !dbg !12370
  store i32 %62, i32* %58, align 4, !dbg !12371
  br label %63, !dbg !12372

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12373
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12374
  br label %69, !dbg !12375

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12323
  %67 = and i8 %66, 1, !dbg !12323
  %68 = icmp eq i8 %67, 0, !dbg !12323
  br i1 %68, label %30, label %69, !dbg !12323

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12302
  ret i32 %70, !dbg !12376
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12379, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12380, metadata !DIExpression()), !dbg !12382
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12383
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12383
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12383
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12381, metadata !DIExpression()), !dbg !12382
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12384
  %7 = load i32, i32* %6, align 4, !dbg !12384
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12385
  store i32 %7, i32* %8, align 4, !dbg !12386
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12387, !range !12388
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12389
  %11 = trunc i32 %10 to i8, !dbg !12389
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12390
  store i8 %11, i8* %12, align 4, !dbg !12391
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12392, !range !12393
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12394
  %15 = trunc i32 %14 to i8, !dbg !12394
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12395
  store i8 %15, i8* %16, align 1, !dbg !12396
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12397
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12398, !range !12388
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12399
  %20 = trunc i32 %19 to i8, !dbg !12399
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12400
  store i8 %20, i8* %21, align 2, !dbg !12401
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12402, !range !12403
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12404
  %24 = trunc i32 %23 to i8, !dbg !12404
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12405
  store i8 %24, i8* %25, align 1, !dbg !12406
  ret i32 0, !dbg !12407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12412, metadata !DIExpression()), !dbg !12414
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12415
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12415
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12415
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12413, metadata !DIExpression()), !dbg !12414
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12416
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12416
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12417
  ret i32 %7, !dbg !12418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12423, metadata !DIExpression()), !dbg !12424
  %2 = icmp eq i32 %0, 1024, !dbg !12425
  %3 = select i1 %2, i32 2, i32 0, !dbg !12425
  %4 = icmp eq i32 %0, 1536, !dbg !12425
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12425
  ret i32 %5, !dbg !12426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12429, metadata !DIExpression()), !dbg !12431
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12432
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12432
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12432
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12430, metadata !DIExpression()), !dbg !12431
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12433
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12433
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12434
  ret i32 %7, !dbg !12435
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12440, metadata !DIExpression()), !dbg !12441
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12442
  %3 = icmp ult i32 %2, 4, !dbg !12442
  br i1 %3, label %4, label %7, !dbg !12442

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12442
  %6 = load i32, i32* %5, align 4, !dbg !12442
  br label %7, !dbg !12442

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12443
  ret i32 %8, !dbg !12445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12448, metadata !DIExpression()), !dbg !12450
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12451
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12451
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12451
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12449, metadata !DIExpression()), !dbg !12450
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12452
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12452
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12453
  ret i32 %7, !dbg !12454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12459, metadata !DIExpression()), !dbg !12461
  call void @llvm.dbg.value(metadata i32 %1, metadata !12460, metadata !DIExpression()), !dbg !12461
  %3 = icmp eq i32 %0, 4096, !dbg !12462
  %4 = icmp eq i32 %1, 0, !dbg !12462
  %5 = select i1 %4, i32 4, i32 3, !dbg !12462
  %6 = select i1 %4, i32 3, i32 2, !dbg !12462
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12462
  ret i32 %7, !dbg !12463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12466, metadata !DIExpression()), !dbg !12468
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12469
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12469
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12469
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12467, metadata !DIExpression()), !dbg !12468
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12470
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12470
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12471
  ret i32 %7, !dbg !12472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12477, metadata !DIExpression()), !dbg !12478
  %2 = icmp eq i32 %0, 768, !dbg !12479
  %3 = zext i1 %2 to i32, !dbg !12478
  ret i32 %3, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12482 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12487, metadata !DIExpression()), !dbg !12488
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12489
  %3 = load volatile i32, i32* %2, align 4, !dbg !12489
  %4 = and i32 %3, 768, !dbg !12489
  ret i32 %4, !dbg !12490
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12491 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12493, metadata !DIExpression()), !dbg !12494
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12495
  %3 = load volatile i32, i32* %2, align 4, !dbg !12495
  %4 = and i32 %3, 4096, !dbg !12495
  ret i32 %4, !dbg !12496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12497 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12499, metadata !DIExpression()), !dbg !12500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12501
  %3 = load volatile i32, i32* %2, align 4, !dbg !12501
  %4 = and i32 %3, 12288, !dbg !12501
  ret i32 %4, !dbg !12502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12503 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12505, metadata !DIExpression()), !dbg !12506
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12507
  %3 = load volatile i32, i32* %2, align 4, !dbg !12507
  %4 = and i32 %3, 1536, !dbg !12507
  ret i32 %4, !dbg !12508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12513, metadata !DIExpression()), !dbg !12514
  %2 = icmp eq i32 %0, 2, !dbg !12515
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12515
  %4 = icmp eq i32 %0, 1, !dbg !12515
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12515
  ret i32 %5, !dbg !12516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12521, metadata !DIExpression()), !dbg !12522
  %2 = icmp ult i32 %0, 3, !dbg !12523
  br i1 %2, label %3, label %6, !dbg !12523

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12523
  %5 = load i32, i32* %4, align 4, !dbg !12523
  br label %6, !dbg !12523

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12524
  ret i32 %7, !dbg !12526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12531, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %1, metadata !12532, metadata !DIExpression()), !dbg !12533
  %3 = icmp eq i32 %0, 4, !dbg !12534
  %4 = icmp eq i32 %1, 0, !dbg !12534
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12534
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12534
  ret i32 %6, !dbg !12535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12540, metadata !DIExpression()), !dbg !12541
  %2 = icmp eq i32 %0, 1, !dbg !12542
  %3 = select i1 %2, i32 768, i32 0, !dbg !12541
  ret i32 %3, !dbg !12544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12545 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12549, metadata !DIExpression()), !dbg !12550
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12551
  %3 = load volatile i32, i32* %2, align 4, !dbg !12551
  %4 = and i32 %3, -8193, !dbg !12551
  store volatile i32 %4, i32* %2, align 4, !dbg !12551
  ret void, !dbg !12552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12557, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata i32 %1, metadata !12558, metadata !DIExpression()), !dbg !12560
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12561
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12561
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12561
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12559, metadata !DIExpression()), !dbg !12560
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12562
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12562
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12563
  ret void, !dbg !12564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12565 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12567, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata i32 %1, metadata !12568, metadata !DIExpression()), !dbg !12570
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12571
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12571
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12571
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12569, metadata !DIExpression()), !dbg !12570
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12572
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12572
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12577, metadata !DIExpression()), !dbg !12580
  call void @llvm.dbg.value(metadata i32 %1, metadata !12578, metadata !DIExpression()), !dbg !12580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12581
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12581
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12581
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12579, metadata !DIExpression()), !dbg !12580
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12582
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12582
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12583
  ret void, !dbg !12584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12587, metadata !DIExpression()), !dbg !12590
  call void @llvm.dbg.value(metadata i32 %1, metadata !12588, metadata !DIExpression()), !dbg !12590
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12591
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12591
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12591
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12589, metadata !DIExpression()), !dbg !12590
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12592
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12592
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12593
  ret void, !dbg !12594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12595 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12597, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 %1, metadata !12598, metadata !DIExpression()), !dbg !12602
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12603
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12603
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12603
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12599, metadata !DIExpression()), !dbg !12602
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12604
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12604
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12604
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12600, metadata !DIExpression()), !dbg !12602
  %10 = bitcast i32* %3 to i8*, !dbg !12605
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12605
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12606
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12606
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12610
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12610
  %15 = load i8*, i8** %14, align 4, !dbg !12610
  call void @llvm.dbg.value(metadata i32* %3, metadata !12601, metadata !DIExpression(DW_OP_deref)), !dbg !12602
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12611
  %17 = icmp slt i32 %16, 0, !dbg !12612
  br i1 %17, label %18, label %21, !dbg !12613

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 1) #26, !dbg !12614
  %20 = zext i8 %19 to i32, !dbg !12614
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.186, i32 0, i32 0), i32 noundef %20) #27, !dbg !12614
  br label %26, !dbg !12620

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12621
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12621
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12622
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12623
  %25 = load i32, i32* %3, align 4, !dbg !12624
  call void @llvm.dbg.value(metadata i32 %25, metadata !12601, metadata !DIExpression()), !dbg !12602
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12625
  br label %26, !dbg !12626

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12626
  ret void, !dbg !12626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12627 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12629, metadata !DIExpression()), !dbg !12630
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12631
  %3 = load volatile i32, i32* %2, align 4, !dbg !12631
  %4 = or i32 %3, 8192, !dbg !12631
  store volatile i32 %4, i32* %2, align 4, !dbg !12631
  ret void, !dbg !12632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12635, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata i8* %1, metadata !12636, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata i32* %2, metadata !12637, metadata !DIExpression()), !dbg !12639
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12640
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12640
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12640
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12638, metadata !DIExpression()), !dbg !12639
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12641
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12641
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12643
  br i1 %9, label %12, label %10, !dbg !12644

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12645
  br label %12, !dbg !12646

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12639
  ret i32 %13, !dbg !12647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef %0) unnamed_addr #3 !dbg !12648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12650, metadata !DIExpression()), !dbg !12651
  %2 = icmp eq i32 %0, 2, !dbg !12652
  %3 = select i1 %2, i8 87, i8 63, !dbg !12652
  %4 = icmp eq i32 %0, 1, !dbg !12652
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12652
  ret i8 %5, !dbg !12653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12654 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12658, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.value(metadata i32 0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12661
  %3 = load volatile i32, i32* %2, align 4, !dbg !12661
  %4 = and i32 %3, -32769, !dbg !12661
  store volatile i32 %4, i32* %2, align 4, !dbg !12661
  ret void, !dbg !12662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12663 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12667, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 %1, metadata !12668, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 0, metadata !12669, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 %2, metadata !12670, metadata !DIExpression()), !dbg !12671
  %4 = zext i32 %1 to i64, !dbg !12672
  %5 = mul nuw nsw i64 %4, 25, !dbg !12672
  %6 = zext i32 %2 to i64, !dbg !12672
  %7 = shl nuw nsw i64 %6, 2, !dbg !12672
  %8 = udiv i64 %5, %7, !dbg !12672
  %9 = trunc i64 %8 to i32, !dbg !12672
  %10 = udiv i32 %9, 100, !dbg !12672
  %11 = shl nuw nsw i32 %10, 4, !dbg !12672
  %12 = mul i32 %10, -100, !dbg !12672
  %13 = add i32 %12, %9, !dbg !12672
  %14 = shl i32 %13, 4, !dbg !12672
  %15 = add i32 %14, 50, !dbg !12672
  %16 = udiv i32 %15, 100, !dbg !12672
  %17 = and i32 %16, 240, !dbg !12672
  %18 = add nuw nsw i32 %17, %11, !dbg !12672
  %19 = and i32 %16, 15, !dbg !12672
  %20 = and i32 %18, 65520, !dbg !12675
  %21 = or i32 %20, %19, !dbg !12675
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12676
  store volatile i32 %21, i32* %22, align 4, !dbg !12677
  ret void, !dbg !12678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12679 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12681, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.value(metadata i32 %1, metadata !12682, metadata !DIExpression()), !dbg !12683
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12684
  %4 = load volatile i32, i32* %3, align 4, !dbg !12684
  %5 = and i32 %4, -769, !dbg !12684
  %6 = or i32 %5, %1, !dbg !12684
  store volatile i32 %6, i32* %3, align 4, !dbg !12684
  ret void, !dbg !12685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12686 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12688, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 %1, metadata !12689, metadata !DIExpression()), !dbg !12690
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12691
  %4 = load volatile i32, i32* %3, align 4, !dbg !12691
  %5 = and i32 %4, -4097, !dbg !12691
  %6 = or i32 %5, %1, !dbg !12691
  store volatile i32 %6, i32* %3, align 4, !dbg !12691
  ret void, !dbg !12692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12693 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12695, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.value(metadata i32 %1, metadata !12696, metadata !DIExpression()), !dbg !12697
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12698
  %4 = load volatile i32, i32* %3, align 4, !dbg !12698
  %5 = and i32 %4, -12289, !dbg !12698
  %6 = or i32 %5, %1, !dbg !12698
  store volatile i32 %6, i32* %3, align 4, !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12700 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12702, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata i32 %1, metadata !12703, metadata !DIExpression()), !dbg !12704
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12705
  %4 = load volatile i32, i32* %3, align 4, !dbg !12705
  %5 = and i32 %4, -1537, !dbg !12705
  %6 = or i32 %5, %1, !dbg !12705
  store volatile i32 %6, i32* %3, align 4, !dbg !12705
  ret void, !dbg !12706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12707 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12709, metadata !DIExpression()), !dbg !12710
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12711
  %3 = load volatile i32, i32* %2, align 4, !dbg !12711
  %4 = lshr i32 %3, 3, !dbg !12712
  %5 = and i32 %4, 1, !dbg !12712
  ret i32 %5, !dbg !12713
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12714 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12716, metadata !DIExpression()), !dbg !12717
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12718
  %3 = load volatile i32, i32* %2, align 4, !dbg !12718
  %4 = and i32 %3, 1, !dbg !12718
  ret i32 %4, !dbg !12719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12720 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12722, metadata !DIExpression()), !dbg !12723
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12724
  %3 = load volatile i32, i32* %2, align 4, !dbg !12724
  %4 = lshr i32 %3, 1, !dbg !12725
  %5 = and i32 %4, 1, !dbg !12725
  ret i32 %5, !dbg !12726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12727 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12729, metadata !DIExpression()), !dbg !12730
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12731
  %3 = load volatile i32, i32* %2, align 4, !dbg !12731
  %4 = lshr i32 %3, 8, !dbg !12732
  %5 = and i32 %4, 1, !dbg !12732
  ret i32 %5, !dbg !12733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12734 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12736, metadata !DIExpression()), !dbg !12737
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12738
  store volatile i32 -257, i32* %2, align 4, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12740 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12742, metadata !DIExpression()), !dbg !12744
  %3 = bitcast i32* %2 to i8*, !dbg !12745
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12745
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12743, metadata !DIExpression()), !dbg !12746
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12747
  %5 = load volatile i32, i32* %4, align 4, !dbg !12747
  store volatile i32 %5, i32* %2, align 4, !dbg !12748
  %6 = load volatile i32, i32* %2, align 4, !dbg !12749
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12750
  %8 = load volatile i32, i32* %7, align 4, !dbg !12750
  store volatile i32 %8, i32* %2, align 4, !dbg !12751
  %9 = load volatile i32, i32* %2, align 4, !dbg !12752
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12753
  ret void, !dbg !12753
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12754 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12756, metadata !DIExpression()), !dbg !12758
  %3 = bitcast i32* %2 to i8*, !dbg !12759
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12759
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12757, metadata !DIExpression()), !dbg !12760
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12761
  %5 = load volatile i32, i32* %4, align 4, !dbg !12761
  store volatile i32 %5, i32* %2, align 4, !dbg !12762
  %6 = load volatile i32, i32* %2, align 4, !dbg !12763
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12764
  %8 = load volatile i32, i32* %7, align 4, !dbg !12764
  store volatile i32 %8, i32* %2, align 4, !dbg !12765
  %9 = load volatile i32, i32* %2, align 4, !dbg !12766
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12767
  ret void, !dbg !12767
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12768 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12770, metadata !DIExpression()), !dbg !12772
  %3 = bitcast i32* %2 to i8*, !dbg !12773
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12773
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12771, metadata !DIExpression()), !dbg !12774
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12775
  %5 = load volatile i32, i32* %4, align 4, !dbg !12775
  store volatile i32 %5, i32* %2, align 4, !dbg !12776
  %6 = load volatile i32, i32* %2, align 4, !dbg !12777
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12778
  %8 = load volatile i32, i32* %7, align 4, !dbg !12778
  store volatile i32 %8, i32* %2, align 4, !dbg !12779
  %9 = load volatile i32, i32* %2, align 4, !dbg !12780
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12781
  ret void, !dbg !12781
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12782 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12784, metadata !DIExpression()), !dbg !12786
  %3 = bitcast i32* %2 to i8*, !dbg !12787
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12787
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12785, metadata !DIExpression()), !dbg !12788
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12789
  %5 = load volatile i32, i32* %4, align 4, !dbg !12789
  store volatile i32 %5, i32* %2, align 4, !dbg !12790
  %6 = load volatile i32, i32* %2, align 4, !dbg !12791
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12792
  %8 = load volatile i32, i32* %7, align 4, !dbg !12792
  store volatile i32 %8, i32* %2, align 4, !dbg !12793
  %9 = load volatile i32, i32* %2, align 4, !dbg !12794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12795
  ret void, !dbg !12795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12796 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12800
  %3 = load volatile i32, i32* %2, align 4, !dbg !12800
  %4 = lshr i32 %3, 7, !dbg !12801
  %5 = and i32 %4, 1, !dbg !12801
  ret i32 %5, !dbg !12802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12807, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i8 %1, metadata !12808, metadata !DIExpression()), !dbg !12809
  %3 = zext i8 %1 to i32, !dbg !12810
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12811
  store volatile i32 %3, i32* %4, align 4, !dbg !12812
  ret void, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12814 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12816, metadata !DIExpression()), !dbg !12817
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12818
  %3 = load volatile i32, i32* %2, align 4, !dbg !12818
  %4 = lshr i32 %3, 5, !dbg !12819
  %5 = and i32 %4, 1, !dbg !12819
  ret i32 %5, !dbg !12820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12821 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12825, metadata !DIExpression()), !dbg !12826
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12827
  %3 = load volatile i32, i32* %2, align 4, !dbg !12827
  %4 = trunc i32 %3 to i8, !dbg !12828
  ret i8 %4, !dbg !12829
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12830 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12832, metadata !DIExpression()), !dbg !12838
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12839
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12839
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12839
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12833, metadata !DIExpression()), !dbg !12838
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12840
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12840
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12840
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12834, metadata !DIExpression()), !dbg !12838
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12841
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12842
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12842
  %10 = tail call fastcc zeroext i1 @device_is_ready.194(%struct.device* noundef %9) #26, !dbg !12844
  br i1 %10, label %14, label %11, !dbg !12845

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 1) #26, !dbg !12846
  %13 = zext i8 %12 to i32, !dbg !12846
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.195, i32 0, i32 0), i32 noundef %13) #27, !dbg !12846
  br label %62, !dbg !12852

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12853
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12854
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12854
  %18 = load i8*, i8** %17, align 4, !dbg !12854
  %19 = tail call fastcc i32 @clock_control_on.196(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12855
  call void @llvm.dbg.value(metadata i32 %19, metadata !12837, metadata !DIExpression()), !dbg !12838
  %20 = icmp eq i32 %19, 0, !dbg !12856
  br i1 %20, label %24, label %21, !dbg !12858

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 1) #26, !dbg !12859
  %23 = zext i8 %22 to i32, !dbg !12859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.197, i32 0, i32 0), i32 noundef %23) #27, !dbg !12859
  br label %62, !dbg !12865

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12866
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12866
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12867
  call void @llvm.dbg.value(metadata i32 %27, metadata !12837, metadata !DIExpression()), !dbg !12838
  %28 = icmp slt i32 %27, 0, !dbg !12868
  br i1 %28, label %62, label %29, !dbg !12870

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12871
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12871
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12872
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12873
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12874
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12875
  %34 = load i32, i32* %33, align 4, !dbg !12875
  %35 = icmp ult i32 %34, 3, !dbg !12877
  br i1 %35, label %39, label %36, !dbg !12877

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 2) #26, !dbg !12878
  %38 = zext i8 %37 to i32, !dbg !12878
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.198, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12878
  call void @llvm.dbg.value(metadata i32 0, metadata !12835, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 0, metadata !12836, metadata !DIExpression()), !dbg !12838
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12877
  %41 = load i32, i32* %40, align 4, !dbg !12877
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !12877
  %43 = load i32, i32* %42, align 4, !dbg !12877
  br label %44, !dbg !12877

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12887
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12887
  call void @llvm.dbg.value(metadata i32 %46, metadata !12836, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %45, metadata !12835, metadata !DIExpression()), !dbg !12838
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12888
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12889
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12890
  %49 = load i8, i8* %48, align 4, !dbg !12890, !range !8790
  %50 = icmp eq i8 %49, 0, !dbg !12890
  br i1 %50, label %52, label %51, !dbg !12892

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12893
  br label %52, !dbg !12895

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12896
  %54 = load i32, i32* %53, align 4, !dbg !12896
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12897
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12898
  %56 = load i8, i8* %55, align 4, !dbg !12898, !range !8790
  %57 = icmp eq i8 %56, 0, !dbg !12898
  br i1 %57, label %60, label %58, !dbg !12900

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12901
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12903
  br label %60, !dbg !12904

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12905
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12906
  br label %62, !dbg !12907

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12838
  ret i32 %63, !dbg !12908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12909 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12913, metadata !DIExpression()), !dbg !12917
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12918
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12918
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12918
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12914, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12915, metadata !DIExpression()), !dbg !12917
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12919
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12920
  ret void, !dbg !12921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.194(%struct.device* noundef %0) unnamed_addr #1 !dbg !12922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12926, metadata !DIExpression()), !dbg !12927
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12928, !srcloc !12930
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) #26, !dbg !12931
  ret i1 %2, !dbg !12932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.196(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12933 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12935, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.value(metadata i8* %1, metadata !12936, metadata !DIExpression()), !dbg !12938
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12939
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12939
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12939
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12937, metadata !DIExpression()), !dbg !12938
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12940
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12940
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12941
  ret i32 %8, !dbg !12942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12943 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12947, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i8 0, metadata !12948, metadata !DIExpression()), !dbg !12951
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12952
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12952
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12950, metadata !DIExpression(DW_OP_deref)), !dbg !12951
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12953
  call void @llvm.dbg.value(metadata i32 %4, metadata !12949, metadata !DIExpression()), !dbg !12951
  %5 = icmp slt i32 %4, 0, !dbg !12954
  br i1 %5, label %9, label %6, !dbg !12956

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12957
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12950, metadata !DIExpression()), !dbg !12951
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12958
  br label %9, !dbg !12959

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12960
  ret i32 %10, !dbg !12960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12963, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 12, metadata !12964, metadata !DIExpression()), !dbg !12967
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12968

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12969, metadata !DIExpression()) #25, !dbg !12975
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12978, !srcloc !12979
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #25, !dbg !12975
  %5 = or i32 %4, 12, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %5, metadata !12965, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.value(metadata i32 %5, metadata !12982, metadata !DIExpression()) #25, !dbg !12989
  call void @llvm.dbg.value(metadata i32* %2, metadata !12987, metadata !DIExpression()) #25, !dbg !12989
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12991, !srcloc !12992
  call void @llvm.dbg.value(metadata i32 %6, metadata !12988, metadata !DIExpression()) #25, !dbg !12989
  %7 = icmp eq i32 %6, 0, !dbg !12968
  br i1 %7, label %8, label %3, !dbg !12980, !llvm.loop !12993

8:                                                ; preds = %3
  ret void, !dbg !12994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12995 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12997, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i32 %1, metadata !12998, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i32 %2, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i32 0, metadata !13000, metadata !DIExpression()), !dbg !13001
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !13002
  %5 = load volatile i32, i32* %4, align 4, !dbg !13002
  %6 = and i32 %5, -5633, !dbg !13002
  %7 = or i32 %2, %1, !dbg !13002
  %8 = or i32 %7, %6, !dbg !13002
  store volatile i32 %8, i32* %4, align 4, !dbg !13002
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !13003
  %10 = load volatile i32, i32* %9, align 4, !dbg !13003
  %11 = and i32 %10, -12289, !dbg !13003
  store volatile i32 %11, i32* %9, align 4, !dbg !13003
  ret void, !dbg !13004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !13005 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13007, metadata !DIExpression()), !dbg !13008
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !13009
  %3 = load volatile i32, i32* %2, align 4, !dbg !13009
  %4 = or i32 %3, 8, !dbg !13009
  store volatile i32 %4, i32* %2, align 4, !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13011 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !13015, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !13016, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.value(metadata i32 0, metadata !13017, metadata !DIExpression()), !dbg !13018
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !13019
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !13019
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !13020
  %5 = load i8, i8* %4, align 4, !dbg !13020
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !13021
  ret i32 %6, !dbg !13022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !13023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13025, metadata !DIExpression()), !dbg !13026
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13027
  ret i1 %2, !dbg !13028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !13029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13031, metadata !DIExpression()), !dbg !13032
  tail call fastcc void @__NVIC_SetPriority.201() #26, !dbg !13033
  store i32 16799, i32* @last_load, align 4, !dbg !13034
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13035
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13036
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13037
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13038
  %3 = or i32 %2, 7, !dbg !13038
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13038
  ret i32 0, !dbg !13039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.201() unnamed_addr #15 !dbg !13040 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13042, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 1, metadata !13043, metadata !DIExpression()), !dbg !13044
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !13045
  ret void, !dbg !13048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !13049 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13051, metadata !DIExpression()), !dbg !13053
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !13054
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13055
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13056
  %5 = add i32 %4, %3, !dbg !13056
  store i32 %5, i32* @cycle_count, align 4, !dbg !13056
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13057
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13058
  %7 = sub i32 %5, %6, !dbg !13061
  %8 = udiv i32 %7, 16800, !dbg !13062
  call void @llvm.dbg.value(metadata i32 %8, metadata !13052, metadata !DIExpression()), !dbg !13053
  %9 = mul nuw i32 %8, 16800, !dbg !13063
  %10 = add i32 %9, %6, !dbg !13064
  store i32 %10, i32* @announced_cycles, align 4, !dbg !13064
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !13065
  tail call void @z_arm_int_exit() #27, !dbg !13066
  ret void, !dbg !13067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !13068 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %1, metadata !13070, metadata !DIExpression()), !dbg !13074
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %2, metadata !13071, metadata !DIExpression()), !dbg !13074
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %3, metadata !13072, metadata !DIExpression()), !dbg !13074
  %4 = and i32 %2, 65536, !dbg !13077
  %5 = icmp ne i32 %4, 0, !dbg !13077
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !13079
  %8 = load i32, i32* @last_load, align 4, !dbg !13074
  br i1 %7, label %9, label %13, !dbg !13079

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13080
  %11 = add i32 %10, %8, !dbg !13080
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !13080
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13082
  br label %13, !dbg !13083

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !13084
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13085
  %16 = add i32 %14, %15, !dbg !13086
  ret i32 %16, !dbg !13087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13092, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i1 %1, metadata !13093, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13105
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !13106
  br i1 %4, label %5, label %8, !dbg !13106

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13108
  %7 = and i32 %6, -2, !dbg !13108
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13108
  store i32 -16777216, i32* @last_load, align 4, !dbg !13110
  br label %54, !dbg !13111

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !13112
  call void @llvm.dbg.value(metadata i32 %9, metadata !13097, metadata !DIExpression()), !dbg !13105
  br i1 %3, label %18, label %10, !dbg !13113

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !13113
  call void @llvm.dbg.value(metadata i32 undef, metadata !13092, metadata !DIExpression()), !dbg !13105
  %12 = icmp slt i32 %11, 1, !dbg !13114
  br i1 %12, label %18, label %13, !dbg !13114

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !13114
  %15 = select i1 %14, i32 %11, i32 997, !dbg !13114
  %16 = mul nuw nsw i32 %15, 16800, !dbg !13114
  %17 = add nuw nsw i32 %16, 16799, !dbg !13114
  br label %18, !dbg !13114

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !13092, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13115, metadata !DIExpression()) #25, !dbg !13122
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13124, !srcloc !13130
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %21, metadata !13127, metadata !DIExpression()) #25, !dbg !13131
  call void @llvm.dbg.value(metadata i32 undef, metadata !13128, metadata !DIExpression()) #25, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %21, metadata !13121, metadata !DIExpression()) #25, !dbg !13122
  call void @llvm.dbg.value(metadata i32 %21, metadata !13098, metadata !DIExpression()), !dbg !13105
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !13132
  call void @llvm.dbg.value(metadata i32 %22, metadata !13103, metadata !DIExpression()), !dbg !13105
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %23, metadata !13095, metadata !DIExpression()), !dbg !13105
  %24 = load i32, i32* @cycle_count, align 4, !dbg !13134
  %25 = add i32 %24, %22, !dbg !13134
  store i32 %25, i32* @cycle_count, align 4, !dbg !13134
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13135
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !13136
  %27 = sub i32 %25, %26, !dbg !13137
  call void @llvm.dbg.value(metadata i32 %27, metadata !13104, metadata !DIExpression()), !dbg !13105
  %28 = icmp slt i32 %27, 0, !dbg !13138
  br i1 %28, label %38, label %29, !dbg !13140

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !13094, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13094, metadata !DIExpression()), !dbg !13105
  %30 = add nuw i32 %19, %27, !dbg !13141
  %31 = urem i32 %30, 16800, !dbg !13143
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !13094, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13105
  %32 = sub nuw nsw i32 %19, %31, !dbg !13144
  call void @llvm.dbg.value(metadata i32 %32, metadata !13094, metadata !DIExpression()), !dbg !13105
  %33 = icmp ugt i32 %32, 1050, !dbg !13145
  br i1 %33, label %34, label %36, !dbg !13145

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !13094, metadata !DIExpression()), !dbg !13105
  %35 = icmp ugt i32 %32, 16749600, !dbg !13146
  br i1 %35, label %38, label %36, !dbg !13148

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !13149
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13150
  call void @llvm.dbg.value(metadata i32 %40, metadata !13096, metadata !DIExpression()), !dbg !13105
  %41 = add nsw i32 %39, -1, !dbg !13151
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13152
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13153
  %42 = icmp ult i32 %23, %40, !dbg !13154
  br i1 %42, label %43, label %48, !dbg !13156

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !13157
  %45 = add i32 %23, %9, !dbg !13159
  %46 = sub i32 %45, %40, !dbg !13160
  %47 = add i32 %46, %44, !dbg !13157
  br label %52, !dbg !13161

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !13162
  %50 = load i32, i32* @cycle_count, align 4, !dbg !13164
  %51 = add i32 %49, %50, !dbg !13164
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !13165
  store i32 %53, i32* @cycle_count, align 4, !dbg !13165
  call void @llvm.dbg.value(metadata i32 %21, metadata !13166, metadata !DIExpression()) #25, !dbg !13172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13171, metadata !DIExpression()) #25, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %21, metadata !13174, metadata !DIExpression()) #25, !dbg !13177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !13179, !srcloc !13180
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !13181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13182 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13115, metadata !DIExpression()) #25, !dbg !13186
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13188, !srcloc !13130
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %2, metadata !13127, metadata !DIExpression()) #25, !dbg !13190
  call void @llvm.dbg.value(metadata i32 undef, metadata !13128, metadata !DIExpression()) #25, !dbg !13190
  call void @llvm.dbg.value(metadata i32 %2, metadata !13121, metadata !DIExpression()) #25, !dbg !13186
  call void @llvm.dbg.value(metadata i32 %2, metadata !13184, metadata !DIExpression()), !dbg !13191
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13192
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13193
  %5 = add i32 %4, %3, !dbg !13194
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13195
  %7 = sub i32 %5, %6, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %7, metadata !13185, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.value(metadata i32 %2, metadata !13166, metadata !DIExpression()) #25, !dbg !13197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13171, metadata !DIExpression()) #25, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %2, metadata !13174, metadata !DIExpression()) #25, !dbg !13199
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13201, !srcloc !13180
  %8 = udiv i32 %7, 16800, !dbg !13202
  ret i32 %8, !dbg !13203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13204 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13115, metadata !DIExpression()) #25, !dbg !13208
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13210, !srcloc !13130
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13210
  call void @llvm.dbg.value(metadata i32 %2, metadata !13127, metadata !DIExpression()) #25, !dbg !13212
  call void @llvm.dbg.value(metadata i32 undef, metadata !13128, metadata !DIExpression()) #25, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %2, metadata !13121, metadata !DIExpression()) #25, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %2, metadata !13206, metadata !DIExpression()), !dbg !13213
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13214
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13215
  %5 = add i32 %4, %3, !dbg !13216
  call void @llvm.dbg.value(metadata i32 %5, metadata !13207, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.value(metadata i32 %2, metadata !13166, metadata !DIExpression()) #25, !dbg !13217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13171, metadata !DIExpression()) #25, !dbg !13217
  call void @llvm.dbg.value(metadata i32 %2, metadata !13174, metadata !DIExpression()) #25, !dbg !13219
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13221, !srcloc !13180
  ret i32 %5, !dbg !13222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !13223 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13224
  %2 = icmp eq i32 %1, -16777216, !dbg !13226
  br i1 %2, label %3, label %6, !dbg !13227

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13228
  %5 = or i32 %4, 1, !dbg !13228
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13228
  br label %6, !dbg !13230

6:                                                ; preds = %3, %0
  ret void, !dbg !13231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !13232 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13233
  %2 = and i32 %1, -2, !dbg !13233
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13233
  ret void, !dbg !13234
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13261, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata i8 %1, metadata !13262, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13263, metadata !DIExpression()), !dbg !13264
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13265
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13265
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13264
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13266
  %8 = load i8, i8* %6, align 4, !dbg !13267
  %9 = zext i8 %8 to i32, !dbg !13268
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13268
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13269
  br i1 %11, label %18, label %24, !dbg !13270

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13264
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13266
  %14 = load i8, i8* %6, align 4, !dbg !13267
  %15 = zext i8 %14 to i32, !dbg !13268
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13268
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13269
  br i1 %17, label %18, label %24, !dbg !13270, !llvm.loop !13271

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13273
  %21 = load i8, i8* %20, align 1, !dbg !13273
  %22 = icmp eq i8 %21, %1, !dbg !13276
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13277
  br i1 %22, label %24, label %12, !dbg !13278

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13264
  ret i32 %25, !dbg !13279
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13280 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13291, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i8 %1, metadata !13292, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 %2, metadata !13293, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13296, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13297, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i8 0, metadata !13298, metadata !DIExpression()), !dbg !13308
  %4 = icmp eq i8 %1, 0, !dbg !13309
  br i1 %4, label %35, label %5, !dbg !13310

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13309
  br label %9, !dbg !13310

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13298, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 %29, metadata !13296, metadata !DIExpression()), !dbg !13307
  %8 = icmp eq i32 %34, %6, !dbg !13309
  br i1 %8, label %35, label %9, !dbg !13310, !llvm.loop !13311

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13298, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 %11, metadata !13296, metadata !DIExpression()), !dbg !13307
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13313
  %13 = load i32, i32* %12, align 4, !dbg !13313
  call void @llvm.dbg.value(metadata i32 %13, metadata !13295, metadata !DIExpression()), !dbg !13307
  %14 = and i32 %13, 31, !dbg !13314
  %15 = icmp ult i32 %14, 16, !dbg !13315
  br i1 %15, label %16, label %20, !dbg !13316

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13317
  %18 = load i32, i32* %17, align 4, !dbg !13317
  %19 = or i32 %18, 32, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %19, metadata !13296, metadata !DIExpression()), !dbg !13307
  br label %28, !dbg !13320

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13321

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13322
  %23 = load i32, i32* %22, align 4, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %23, metadata !13300, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13323
  %24 = lshr i32 %23, 7, !dbg !13324
  %25 = and i32 %24, 16, !dbg !13324
  %26 = or i32 %25, %23, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %26, metadata !13296, metadata !DIExpression()), !dbg !13307
  br label %28, !dbg !13325

27:                                               ; preds = %20
  br label %28, !dbg !13326

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13307
  call void @llvm.dbg.value(metadata i32 %29, metadata !13296, metadata !DIExpression()), !dbg !13307
  %30 = lshr i32 %13, 5, !dbg !13326
  %31 = and i32 %30, 255, !dbg !13326
  call void @llvm.dbg.value(metadata i32 %31, metadata !13294, metadata !DIExpression()), !dbg !13307
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13327
  call void @llvm.dbg.value(metadata i32 %32, metadata !13297, metadata !DIExpression()), !dbg !13307
  %33 = icmp slt i32 %32, 0, !dbg !13328
  %34 = add nuw nsw i32 %10, 1, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %34, metadata !13298, metadata !DIExpression()), !dbg !13308
  br i1 %33, label %35, label %7, !dbg !13331

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13337, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %1, metadata !13338, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %2, metadata !13339, metadata !DIExpression()), !dbg !13341
  %4 = icmp ugt i32 %0, 175, !dbg !13342
  br i1 %4, label %13, label %5, !dbg !13344

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13345
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13346
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13346
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13340, metadata !DIExpression()), !dbg !13341
  %9 = tail call fastcc zeroext i1 @device_is_ready.206(%struct.device* noundef %8) #26, !dbg !13347
  br i1 %9, label %10, label %13, !dbg !13349

10:                                               ; preds = %5
  %11 = and i32 %0, 15, !dbg !13350
  %12 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !13351
  br label %13, !dbg !13352

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -19, %5 ], !dbg !13341
  ret i32 %14, !dbg !13353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.206(%struct.device* noundef %0) unnamed_addr #1 !dbg !13354 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13358, metadata !DIExpression()), !dbg !13359
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13360, !srcloc !13362
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.207(%struct.device* noundef %0) #26, !dbg !13363
  ret i1 %2, !dbg !13364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.207(%struct.device* noundef %0) unnamed_addr #1 !dbg !13365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13367, metadata !DIExpression()), !dbg !13368
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13369
  ret i1 %2, !dbg !13370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13371 {
  ret void, !dbg !13372
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13373 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13375, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 0, metadata !13376, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 2, metadata !13377, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 0, metadata !13378, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 2, metadata !13379, metadata !DIExpression()), !dbg !13380
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13381
  %2 = and i32 %1, 12, !dbg !13382
  call void @llvm.dbg.value(metadata i32 %2, metadata !13375, metadata !DIExpression()), !dbg !13380
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13383

3:                                                ; preds = %0
  br label %21, !dbg !13384

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13386
  call void @llvm.dbg.value(metadata i32 %5, metadata !13378, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13380
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13387
  %7 = and i32 %6, 63, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %7, metadata !13379, metadata !DIExpression()), !dbg !13380
  %8 = and i32 %5, 4194304, !dbg !13389
  %9 = icmp eq i32 %8, 0, !dbg !13389
  %10 = select i1 %9, i32 16000000, i32 24000000
  %11 = udiv i32 %10, %7, !dbg !13391
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13391
  %13 = lshr i32 %12, 6, !dbg !13391
  %14 = and i32 %13, 511, !dbg !13391
  %15 = mul i32 %14, %11, !dbg !13391
  call void @llvm.dbg.value(metadata i32 %15, metadata !13376, metadata !DIExpression()), !dbg !13380
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13392
  %17 = lshr i32 %16, 15, !dbg !13393
  %18 = and i32 %17, 6, !dbg !13393
  %19 = add nuw nsw i32 %18, 2, !dbg !13393
  call void @llvm.dbg.value(metadata i32 %19, metadata !13377, metadata !DIExpression()), !dbg !13380
  %20 = udiv i32 %15, %19, !dbg !13394
  br label %21, !dbg !13395

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 24000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !13396
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13397
  %24 = lshr i32 %23, 4, !dbg !13398
  %25 = and i32 %24, 15, !dbg !13398
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !13399
  %27 = load i8, i8* %26, align 1, !dbg !13399
  %28 = zext i8 %27 to i32, !dbg !13399
  call void @llvm.dbg.value(metadata i32 %28, metadata !13375, metadata !DIExpression()), !dbg !13380
  %29 = lshr i32 %22, %28, !dbg !13400
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !13400
  ret void, !dbg !13401
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13402 {
  ret i32 0, !dbg !13407
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13408 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13434, metadata !DIExpression()), !dbg !13445
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13446
  br i1 %3, label %311, label %4, !dbg !13448

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13449
  %6 = load i32, i32* %5, align 4, !dbg !13449
  %7 = and i32 %6, 1, !dbg !13451
  %8 = icmp eq i32 %7, 0, !dbg !13452
  br i1 %8, label %66, label %9, !dbg !13453

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13454
  %11 = and i32 %10, 12, !dbg !13454
  %12 = icmp eq i32 %11, 4, !dbg !13457
  br i1 %12, label %21, label %13, !dbg !13458

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13459
  %15 = and i32 %14, 12, !dbg !13459
  %16 = icmp eq i32 %15, 8, !dbg !13460
  br i1 %16, label %17, label %29, !dbg !13461

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13462
  %19 = and i32 %18, 4194304, !dbg !13463
  %20 = icmp eq i32 %19, 0, !dbg !13464
  br i1 %20, label %29, label %21, !dbg !13465

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13466
  %23 = and i32 %22, 131072, !dbg !13466
  %24 = icmp eq i32 %23, 0, !dbg !13466
  br i1 %24, label %66, label %25, !dbg !13469

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13470
  %27 = load i32, i32* %26, align 4, !dbg !13470
  %28 = icmp eq i32 %27, 0, !dbg !13471
  br i1 %28, label %311, label %66, !dbg !13472

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13473
  %31 = load i32, i32* %30, align 4, !dbg !13473
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !13477

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13478
  %34 = or i32 %33, 65536, !dbg !13478
  br label %45, !dbg !13478

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13480
  %37 = or i32 %36, 262144, !dbg !13480
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13480
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13480
  %39 = or i32 %38, 65536, !dbg !13480
  br label %45, !dbg !13480

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13483
  %42 = and i32 %41, -65537, !dbg !13483
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13483
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13483
  %44 = and i32 %43, -262145, !dbg !13483
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13485
  %47 = load i32, i32* %30, align 4, !dbg !13486
  %48 = icmp eq i32 %47, 0, !dbg !13488
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %49, metadata !13435, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 %49, metadata !13435, metadata !DIExpression()), !dbg !13445
  br i1 %48, label %58, label %50, !dbg !13490

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13491
  %52 = and i32 %51, 131072, !dbg !13493
  %53 = icmp eq i32 %52, 0, !dbg !13493
  br i1 %53, label %54, label %66, !dbg !13494

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !13495
  %56 = sub i32 %55, %49, !dbg !13498
  %57 = icmp ugt i32 %56, 100, !dbg !13499
  br i1 %57, label %311, label %50, !dbg !13500, !llvm.loop !13501

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13503
  %60 = and i32 %59, 131072, !dbg !13503
  %61 = icmp eq i32 %60, 0, !dbg !13503
  br i1 %61, label %66, label %62, !dbg !13505

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13506
  %64 = sub i32 %63, %49, !dbg !13509
  %65 = icmp ugt i32 %64, 100, !dbg !13510
  br i1 %65, label %311, label %58, !dbg !13511, !llvm.loop !13512

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !13514
  %68 = and i32 %67, 2, !dbg !13516
  %69 = icmp eq i32 %68, 0, !dbg !13517
  br i1 %69, label %121, label %70, !dbg !13518

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13519
  %72 = and i32 %71, 12, !dbg !13519
  %73 = icmp eq i32 %72, 0, !dbg !13522
  br i1 %73, label %82, label %74, !dbg !13523

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13524
  %76 = and i32 %75, 12, !dbg !13524
  %77 = icmp eq i32 %76, 8, !dbg !13525
  br i1 %77, label %78, label %90, !dbg !13526

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13527
  %80 = and i32 %79, 4194304, !dbg !13528
  %81 = icmp eq i32 %80, 0, !dbg !13529
  br i1 %81, label %82, label %90, !dbg !13530

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13531
  %84 = and i32 %83, 2, !dbg !13531
  %85 = icmp eq i32 %84, 0, !dbg !13531
  br i1 %85, label %114, label %86, !dbg !13534

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13535
  %88 = load i32, i32* %87, align 4, !dbg !13535
  %89 = icmp eq i32 %88, 1, !dbg !13536
  br i1 %89, label %114, label %311, !dbg !13537

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13538
  %92 = load i32, i32* %91, align 4, !dbg !13538
  %93 = icmp eq i32 %92, 0, !dbg !13541
  br i1 %93, label %104, label %94, !dbg !13542

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13543
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !13545
  call void @llvm.dbg.value(metadata i32 %95, metadata !13435, metadata !DIExpression()), !dbg !13445
  br label %96, !dbg !13546

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13547
  %98 = and i32 %97, 2, !dbg !13548
  %99 = icmp eq i32 %98, 0, !dbg !13548
  br i1 %99, label %100, label %114, !dbg !13546

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !13549
  %102 = sub i32 %101, %95, !dbg !13552
  %103 = icmp ugt i32 %102, 2, !dbg !13553
  br i1 %103, label %311, label %96, !dbg !13554, !llvm.loop !13555

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13557
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %105, metadata !13435, metadata !DIExpression()), !dbg !13445
  br label %106, !dbg !13560

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13561
  %108 = and i32 %107, 2, !dbg !13561
  %109 = icmp eq i32 %108, 0, !dbg !13561
  br i1 %109, label %121, label %110, !dbg !13560

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13562
  %112 = sub i32 %111, %105, !dbg !13565
  %113 = icmp ugt i32 %112, 2, !dbg !13566
  br i1 %113, label %311, label %106, !dbg !13567, !llvm.loop !13568

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13570
  %116 = and i32 %115, -249, !dbg !13570
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13570
  %118 = load i32, i32* %117, align 4, !dbg !13570
  %119 = shl i32 %118, 3, !dbg !13570
  %120 = or i32 %119, %116, !dbg !13570
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13570
  br label %121, !dbg !13571

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !13571
  %123 = and i32 %122, 8, !dbg !13573
  %124 = icmp eq i32 %123, 0, !dbg !13574
  br i1 %124, label %149, label %125, !dbg !13575

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13576
  %127 = load i32, i32* %126, align 4, !dbg !13576
  %128 = icmp eq i32 %127, 0, !dbg !13579
  br i1 %128, label %139, label %129, !dbg !13580

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13581
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !13583
  call void @llvm.dbg.value(metadata i32 %130, metadata !13435, metadata !DIExpression()), !dbg !13445
  br label %131, !dbg !13584

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13585
  %133 = and i32 %132, 2, !dbg !13586
  %134 = icmp eq i32 %133, 0, !dbg !13586
  br i1 %134, label %135, label %149, !dbg !13584

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !13587
  %137 = sub i32 %136, %130, !dbg !13590
  %138 = icmp ugt i32 %137, 2, !dbg !13591
  br i1 %138, label %311, label %131, !dbg !13592, !llvm.loop !13593

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13595
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %140, metadata !13435, metadata !DIExpression()), !dbg !13445
  br label %141, !dbg !13598

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13599
  %143 = and i32 %142, 2, !dbg !13599
  %144 = icmp eq i32 %143, 0, !dbg !13599
  br i1 %144, label %149, label %145, !dbg !13598

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13600
  %147 = sub i32 %146, %140, !dbg !13603
  %148 = icmp ugt i32 %147, 2, !dbg !13604
  br i1 %148, label %311, label %141, !dbg !13605, !llvm.loop !13606

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !13608
  %151 = and i32 %150, 4, !dbg !13609
  %152 = icmp eq i32 %151, 0, !dbg !13610
  br i1 %152, label %221, label %153, !dbg !13611

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !13437, metadata !DIExpression()), !dbg !13612
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13613
  %155 = and i32 %154, 268435456, !dbg !13613
  %156 = icmp eq i32 %155, 0, !dbg !13613
  br i1 %156, label %157, label %164, !dbg !13614

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !13615
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !13615
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13441, metadata !DIExpression()), !dbg !13615
  store volatile i32 0, i32* %2, align 4, !dbg !13615
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13615
  %160 = or i32 %159, 268435456, !dbg !13615
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13615
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13615
  %162 = and i32 %161, 268435456, !dbg !13615
  store volatile i32 %162, i32* %2, align 4, !dbg !13615
  %163 = load volatile i32, i32* %2, align 4, !dbg !13615
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !13616
  call void @llvm.dbg.value(metadata i32 1, metadata !13437, metadata !DIExpression()), !dbg !13612
  br label %164, !dbg !13617

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13437, metadata !DIExpression()), !dbg !13612
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13618
  %166 = and i32 %165, 256, !dbg !13618
  %167 = icmp eq i32 %166, 0, !dbg !13618
  br i1 %167, label %168, label %180, !dbg !13620

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13621
  %170 = or i32 %169, 256, !dbg !13621
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13621
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %171, metadata !13435, metadata !DIExpression()), !dbg !13445
  br label %172, !dbg !13624

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13625
  %174 = and i32 %173, 256, !dbg !13625
  %175 = icmp eq i32 %174, 0, !dbg !13625
  br i1 %175, label %176, label %180, !dbg !13624

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !13626
  %178 = sub i32 %177, %171, !dbg !13629
  %179 = icmp ugt i32 %178, 2, !dbg !13630
  br i1 %179, label %311, label %172, !dbg !13631, !llvm.loop !13632

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13634
  %182 = load i32, i32* %181, align 4, !dbg !13634
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !13637

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13638
  %185 = or i32 %184, 1, !dbg !13638
  br label %196, !dbg !13638

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13640
  %188 = or i32 %187, 4, !dbg !13640
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13640
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13640
  %190 = or i32 %189, 1, !dbg !13640
  br label %196, !dbg !13640

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13643
  %193 = and i32 %192, -2, !dbg !13643
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13643
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13643
  %195 = and i32 %194, -5, !dbg !13643
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13645
  %198 = load i32, i32* %181, align 4, !dbg !13646
  %199 = icmp eq i32 %198, 0, !dbg !13648
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !13649
  call void @llvm.dbg.value(metadata i32 %200, metadata !13435, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 %200, metadata !13435, metadata !DIExpression()), !dbg !13445
  br i1 %199, label %209, label %201, !dbg !13650

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13651
  %203 = and i32 %202, 2, !dbg !13653
  %204 = icmp eq i32 %203, 0, !dbg !13653
  br i1 %204, label %205, label %217, !dbg !13654

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !13655
  %207 = sub i32 %206, %200, !dbg !13658
  %208 = icmp ugt i32 %207, 5000, !dbg !13659
  br i1 %208, label %311, label %201, !dbg !13660, !llvm.loop !13661

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13663
  %211 = and i32 %210, 2, !dbg !13663
  %212 = icmp eq i32 %211, 0, !dbg !13663
  br i1 %212, label %217, label %213, !dbg !13665

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !13666
  %215 = sub i32 %214, %200, !dbg !13669
  %216 = icmp ugt i32 %215, 5000, !dbg !13670
  br i1 %216, label %311, label %209, !dbg !13671, !llvm.loop !13672

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !13674

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13675
  %220 = and i32 %219, -268435457, !dbg !13675
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13675
  br label %221, !dbg !13678

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13679
  %223 = load i32, i32* %222, align 4, !dbg !13679
  %224 = icmp eq i32 %223, 0, !dbg !13681
  br i1 %224, label %310, label %225, !dbg !13682

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13683
  %227 = and i32 %226, 12, !dbg !13683
  %228 = icmp eq i32 %227, 8, !dbg !13686
  br i1 %228, label %277, label %229, !dbg !13687

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !13688
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13691
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !13691
  call void @llvm.dbg.value(metadata i32 %231, metadata !13435, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 %231, metadata !13435, metadata !DIExpression()), !dbg !13445
  br i1 %230, label %232, label %269, !dbg !13692

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13693
  %234 = and i32 %233, 33554432, !dbg !13693
  %235 = icmp eq i32 %234, 0, !dbg !13693
  br i1 %235, label %240, label %236, !dbg !13695

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !13696
  %238 = sub i32 %237, %231, !dbg !13699
  %239 = icmp ugt i32 %238, 2, !dbg !13700
  br i1 %239, label %311, label %232, !dbg !13701, !llvm.loop !13702

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13704
  %242 = load i32, i32* %241, align 4, !dbg !13704
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13704
  %244 = load i32, i32* %243, align 4, !dbg !13704
  %245 = or i32 %244, %242, !dbg !13704
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13704
  %247 = load i32, i32* %246, align 4, !dbg !13704
  %248 = shl i32 %247, 6, !dbg !13704
  %249 = or i32 %245, %248, !dbg !13704
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13704
  %251 = load i32, i32* %250, align 4, !dbg !13704
  %252 = shl i32 %251, 15, !dbg !13704
  %253 = add i32 %252, -65536, !dbg !13704
  %254 = and i32 %253, -65536, !dbg !13704
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13704
  %256 = load i32, i32* %255, align 4, !dbg !13704
  %257 = shl i32 %256, 24, !dbg !13704
  %258 = or i32 %249, %257, !dbg !13704
  %259 = or i32 %258, %254, !dbg !13704
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13704
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13705
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !13706
  call void @llvm.dbg.value(metadata i32 %260, metadata !13435, metadata !DIExpression()), !dbg !13445
  br label %261, !dbg !13707

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13708
  %263 = and i32 %262, 33554432, !dbg !13709
  %264 = icmp eq i32 %263, 0, !dbg !13709
  br i1 %264, label %265, label %310, !dbg !13707

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !13710
  %267 = sub i32 %266, %260, !dbg !13713
  %268 = icmp ugt i32 %267, 2, !dbg !13714
  br i1 %268, label %311, label %261, !dbg !13715, !llvm.loop !13716

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13718
  %271 = and i32 %270, 33554432, !dbg !13718
  %272 = icmp eq i32 %271, 0, !dbg !13718
  br i1 %272, label %310, label %273, !dbg !13720

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !13721
  %275 = sub i32 %274, %231, !dbg !13724
  %276 = icmp ugt i32 %275, 2, !dbg !13725
  br i1 %276, label %311, label %269, !dbg !13726, !llvm.loop !13727

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !13729
  br i1 %278, label %311, label %279, !dbg !13732

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13733
  call void @llvm.dbg.value(metadata i32 %280, metadata !13436, metadata !DIExpression()), !dbg !13445
  %281 = and i32 %280, 4194304, !dbg !13735
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13737
  %283 = load i32, i32* %282, align 4, !dbg !13737
  %284 = icmp eq i32 %281, %283, !dbg !13738
  br i1 %284, label %285, label %311, !dbg !13739

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !13740
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13741
  %288 = load i32, i32* %287, align 4, !dbg !13741
  %289 = icmp eq i32 %286, %288, !dbg !13742
  br i1 %289, label %290, label %311, !dbg !13743

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !13744
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13745
  %293 = load i32, i32* %292, align 4, !dbg !13745
  %294 = shl i32 %293, 6, !dbg !13746
  %295 = icmp eq i32 %291, %294, !dbg !13747
  br i1 %295, label %296, label %311, !dbg !13748

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !13749
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13750
  %299 = load i32, i32* %298, align 4, !dbg !13750
  %300 = shl i32 %299, 15, !dbg !13751
  %301 = add i32 %300, -65536, !dbg !13751
  %302 = and i32 %301, -65536, !dbg !13751
  %303 = icmp eq i32 %297, %302, !dbg !13752
  br i1 %303, label %304, label %311, !dbg !13753

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !13754
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13755
  %307 = load i32, i32* %306, align 4, !dbg !13755
  %308 = shl i32 %307, 24, !dbg !13756
  %309 = icmp eq i32 %305, %308, !dbg !13757
  br i1 %309, label %310, label %311, !dbg !13758

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !13759

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !13445
  ret i32 %312, !dbg !13760
}

; Function Attrs: optsize
declare !dbg !13761 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13763 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13776, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.value(metadata i32 %1, metadata !13777, metadata !DIExpression()), !dbg !13779
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13780
  br i1 %3, label %115, label %4, !dbg !13782

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13783
  %6 = and i32 %5, 15, !dbg !13783
  %7 = icmp ult i32 %6, %1, !dbg !13785
  br i1 %7, label %8, label %13, !dbg !13786

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !13787
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13787
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13789
  %11 = and i32 %10, 15, !dbg !13789
  %12 = icmp eq i32 %11, %1, !dbg !13791
  br i1 %12, label %13, label %115, !dbg !13792

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13793
  %15 = load i32, i32* %14, align 4, !dbg !13793
  %16 = and i32 %15, 2, !dbg !13795
  %17 = icmp eq i32 %16, 0, !dbg !13796
  br i1 %17, label %39, label %18, !dbg !13797

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !13798
  %20 = icmp eq i32 %19, 0, !dbg !13801
  br i1 %20, label %25, label %21, !dbg !13802

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13803
  %23 = or i32 %22, 7168, !dbg !13803
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13803
  %24 = load i32, i32* %14, align 4, !dbg !13805
  br label %25, !dbg !13807

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !13805
  %27 = and i32 %26, 8, !dbg !13808
  %28 = icmp eq i32 %27, 0, !dbg !13809
  br i1 %28, label %32, label %29, !dbg !13810

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13811
  %31 = or i32 %30, 57344, !dbg !13811
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13811
  br label %32, !dbg !13813

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13814
  %34 = and i32 %33, -241, !dbg !13814
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13814
  %36 = load i32, i32* %35, align 4, !dbg !13814
  %37 = or i32 %34, %36, !dbg !13814
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13814
  %38 = load i32, i32* %14, align 4, !dbg !13815
  br label %39, !dbg !13817

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !13815
  %41 = and i32 %40, 1, !dbg !13818
  %42 = icmp eq i32 %41, 0, !dbg !13819
  br i1 %42, label %73, label %43, !dbg !13820

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13821
  %45 = load i32, i32* %44, align 4, !dbg !13821
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !13824

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13825
  %48 = and i32 %47, 131072, !dbg !13828
  %49 = icmp eq i32 %48, 0, !dbg !13828
  br i1 %49, label %115, label %58, !dbg !13829

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13830
  %52 = and i32 %51, 33554432, !dbg !13834
  %53 = icmp eq i32 %52, 0, !dbg !13834
  br i1 %53, label %115, label %58, !dbg !13835

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13836
  %56 = and i32 %55, 2, !dbg !13839
  %57 = icmp eq i32 %56, 0, !dbg !13839
  br i1 %57, label %115, label %58, !dbg !13840

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13841
  %60 = and i32 %59, -4, !dbg !13841
  %61 = or i32 %60, %45, !dbg !13841
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13841
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !13842
  call void @llvm.dbg.value(metadata i32 %62, metadata !13778, metadata !DIExpression()), !dbg !13779
  br label %63, !dbg !13843

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13844
  %65 = and i32 %64, 12, !dbg !13844
  %66 = load i32, i32* %44, align 4, !dbg !13845
  %67 = shl i32 %66, 2, !dbg !13846
  %68 = icmp eq i32 %65, %67, !dbg !13847
  br i1 %68, label %73, label %69, !dbg !13843

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !13848
  %71 = sub i32 %70, %62, !dbg !13851
  %72 = icmp ugt i32 %71, 5000, !dbg !13852
  br i1 %72, label %115, label %63, !dbg !13853, !llvm.loop !13854

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13856
  %75 = and i32 %74, 15, !dbg !13856
  %76 = icmp ugt i32 %75, %1, !dbg !13858
  br i1 %76, label %77, label %82, !dbg !13859

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !13860
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13860
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13862
  %80 = and i32 %79, 15, !dbg !13862
  %81 = icmp eq i32 %80, %1, !dbg !13864
  br i1 %81, label %82, label %115, !dbg !13865

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !13866
  %84 = and i32 %83, 4, !dbg !13868
  %85 = icmp eq i32 %84, 0, !dbg !13869
  br i1 %85, label %93, label %86, !dbg !13870

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13871
  %88 = and i32 %87, -7169, !dbg !13871
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13871
  %90 = load i32, i32* %89, align 4, !dbg !13871
  %91 = or i32 %88, %90, !dbg !13871
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13871
  %92 = load i32, i32* %14, align 4, !dbg !13873
  br label %93, !dbg !13875

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !13873
  %95 = and i32 %94, 8, !dbg !13876
  %96 = icmp eq i32 %95, 0, !dbg !13877
  br i1 %96, label %104, label %97, !dbg !13878

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13879
  %99 = and i32 %98, -57345, !dbg !13879
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13879
  %101 = load i32, i32* %100, align 4, !dbg !13879
  %102 = shl i32 %101, 3, !dbg !13879
  %103 = or i32 %102, %99, !dbg !13879
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13879
  br label %104, !dbg !13881

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !13882
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13883
  %107 = lshr i32 %106, 4, !dbg !13884
  %108 = and i32 %107, 15, !dbg !13884
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !13885
  %110 = load i8, i8* %109, align 1, !dbg !13885
  %111 = zext i8 %110 to i32, !dbg !13885
  %112 = lshr i32 %105, %111, !dbg !13886
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !13887
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !13888
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !13889
  br label %115, !dbg !13890

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !13779
  ret i32 %116, !dbg !13891
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !13892 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13894, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 0, metadata !13895, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 0, metadata !13896, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 0, metadata !13897, metadata !DIExpression()), !dbg !13898
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13899
  %2 = and i32 %1, 12, !dbg !13900
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13901

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 24000000, metadata !13897, metadata !DIExpression()), !dbg !13898
  br label %24, !dbg !13902

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13905
  %6 = and i32 %5, 63, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %6, metadata !13894, metadata !DIExpression()), !dbg !13898
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13908
  %8 = and i32 %7, 4194304, !dbg !13908
  %9 = icmp eq i32 %8, 0, !dbg !13910
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13911
  %11 = lshr i32 %10, 6, !dbg !13911
  %12 = and i32 %11, 511, !dbg !13911
  %13 = zext i32 %12 to i64, !dbg !13911
  %14 = select i1 %9, i64 16000000, i64 24000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !13911
  %16 = zext i32 %6 to i64, !dbg !13911
  %17 = udiv i64 %15, %16, !dbg !13911
  %18 = trunc i64 %17 to i32, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %18, metadata !13895, metadata !DIExpression()), !dbg !13898
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13912
  %20 = lshr i32 %19, 15, !dbg !13913
  %21 = and i32 %20, 6, !dbg !13913
  %22 = add nuw nsw i32 %21, 2, !dbg !13913
  call void @llvm.dbg.value(metadata i32 %22, metadata !13896, metadata !DIExpression()), !dbg !13898
  %23 = udiv i32 %18, %22, !dbg !13914
  call void @llvm.dbg.value(metadata i32 %23, metadata !13897, metadata !DIExpression()), !dbg !13898
  br label %24, !dbg !13915

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 24000000, %3 ], [ 16000000, %0 ], !dbg !13916
  call void @llvm.dbg.value(metadata i32 %25, metadata !13897, metadata !DIExpression()), !dbg !13898
  ret i32 %25, !dbg !13917
}

; Function Attrs: optsize
declare !dbg !13918 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13921 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13925, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata i32 %1, metadata !13926, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata i32 %2, metadata !13927, metadata !DIExpression()), !dbg !13945
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13946
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13946
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13928, metadata !DIExpression()), !dbg !13947
  %8 = icmp eq i32 %0, 0, !dbg !13948
  br i1 %8, label %9, label %23, !dbg !13949

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !13950
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !13950
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13938, metadata !DIExpression()), !dbg !13950
  store volatile i32 0, i32* %5, align 4, !dbg !13950
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13950
  %12 = or i32 %11, 1, !dbg !13950
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13950
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13950
  %14 = and i32 %13, 1, !dbg !13950
  store volatile i32 %14, i32* %5, align 4, !dbg !13950
  %15 = load volatile i32, i32* %5, align 4, !dbg !13950
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !13951
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13952
  store i32 256, i32* %16, align 4, !dbg !13953
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13954
  store i32 2, i32* %17, align 4, !dbg !13955
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13956
  store i32 3, i32* %18, align 4, !dbg !13957
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13958
  store i32 0, i32* %19, align 4, !dbg !13959
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13960
  store i32 0, i32* %20, align 4, !dbg !13961
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13962
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13963
  %22 = and i32 %21, -123731969, !dbg !13963
  br label %38, !dbg !13964

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13965
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13965
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13942, metadata !DIExpression()), !dbg !13965
  store volatile i32 0, i32* %6, align 4, !dbg !13965
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13965
  %26 = or i32 %25, 4, !dbg !13965
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13965
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13965
  %28 = and i32 %27, 4, !dbg !13965
  store volatile i32 %28, i32* %6, align 4, !dbg !13965
  %29 = load volatile i32, i32* %6, align 4, !dbg !13965
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13966
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13967
  store i32 512, i32* %30, align 4, !dbg !13968
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13969
  store i32 2, i32* %31, align 4, !dbg !13970
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13971
  store i32 3, i32* %32, align 4, !dbg !13972
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13973
  store i32 0, i32* %33, align 4, !dbg !13974
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13975
  store i32 0, i32* %34, align 4, !dbg !13976
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13977
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13978
  %36 = and i32 %35, 134217727, !dbg !13978
  %37 = shl i32 %2, 3, !dbg !13978
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13979
  %42 = or i32 %41, %40, !dbg !13979
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13979
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13980
  ret void, !dbg !13980
}

; Function Attrs: optsize
declare !dbg !13981 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !13985 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13986
  ret void, !dbg !13987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !13988 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13989
  ret void, !dbg !13990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13991 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13992
  ret i32 %1, !dbg !13993
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !13994 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13995
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13996
  %3 = lshr i32 %2, 10, !dbg !13997
  %4 = and i32 %3, 7, !dbg !13997
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13998
  %6 = load i8, i8* %5, align 1, !dbg !13998
  %7 = zext i8 %6 to i32, !dbg !13998
  %8 = lshr i32 %1, %7, !dbg !13999
  ret i32 %8, !dbg !14000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !14001 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !14002
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14003
  %3 = lshr i32 %2, 13, !dbg !14004
  %4 = and i32 %3, 7, !dbg !14004
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !14005
  %6 = load i8, i8* %5, align 1, !dbg !14005
  %7 = zext i8 %6 to i32, !dbg !14005
  %8 = lshr i32 %1, %7, !dbg !14006
  ret i32 %8, !dbg !14007
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14012, metadata !DIExpression()), !dbg !14013
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14014
  store i32 15, i32* %2, align 4, !dbg !14015
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14016
  %4 = and i32 %3, 262144, !dbg !14018
  %5 = icmp eq i32 %4, 0, !dbg !14019
  br i1 %5, label %8, label %6, !dbg !14020

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14021
  store i32 327680, i32* %7, align 4, !dbg !14023
  br label %15, !dbg !14024

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14025
  %10 = and i32 %9, 65536, !dbg !14027
  %11 = icmp eq i32 %10, 0, !dbg !14028
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14029
  br i1 %11, label %14, label %13, !dbg !14030

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !14031
  br label %15, !dbg !14033

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !14034
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14036
  %17 = and i32 %16, 1, !dbg !14038
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14039
  store i32 %17, i32* %18, align 4, !dbg !14041
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14042
  %20 = lshr i32 %19, 3, !dbg !14043
  %21 = and i32 %20, 31, !dbg !14043
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14044
  store i32 %21, i32* %22, align 4, !dbg !14045
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14046
  %24 = and i32 %23, 4, !dbg !14048
  %25 = icmp eq i32 %24, 0, !dbg !14049
  br i1 %25, label %28, label %26, !dbg !14050

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14051
  store i32 5, i32* %27, align 4, !dbg !14053
  br label %35, !dbg !14054

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14055
  %30 = and i32 %29, 1, !dbg !14057
  %31 = icmp eq i32 %30, 0, !dbg !14058
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14059
  br i1 %31, label %34, label %33, !dbg !14060

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !14061
  br label %35, !dbg !14063

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !14064
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14066
  %37 = and i32 %36, 1, !dbg !14068
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14069
  store i32 %37, i32* %38, align 4, !dbg !14071
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14072
  %40 = and i32 %39, 16777216, !dbg !14074
  %41 = icmp eq i32 %40, 0, !dbg !14075
  %42 = select i1 %41, i32 1, i32 2, !dbg !14076
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14077
  store i32 %42, i32* %43, align 4, !dbg !14079
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14080
  %45 = and i32 %44, 4194304, !dbg !14081
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14082
  store i32 %45, i32* %46, align 4, !dbg !14083
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14084
  %48 = and i32 %47, 63, !dbg !14085
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14086
  store i32 %48, i32* %49, align 4, !dbg !14087
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14088
  %51 = lshr i32 %50, 6, !dbg !14089
  %52 = and i32 %51, 511, !dbg !14089
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14090
  store i32 %52, i32* %53, align 4, !dbg !14091
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14092
  %55 = shl i32 %54, 1, !dbg !14093
  %56 = and i32 %55, 393216, !dbg !14093
  %57 = add nuw nsw i32 %56, 131072, !dbg !14093
  %58 = lshr exact i32 %57, 16, !dbg !14094
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14095
  store i32 %58, i32* %59, align 4, !dbg !14096
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14097
  %61 = lshr i32 %60, 24, !dbg !14098
  %62 = and i32 %61, 15, !dbg !14098
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14099
  store i32 %62, i32* %63, align 4, !dbg !14100
  ret void, !dbg !14101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !14102 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !14106, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32* %1, metadata !14107, metadata !DIExpression()), !dbg !14108
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !14109
  store i32 15, i32* %3, align 4, !dbg !14110
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14111
  %5 = and i32 %4, 3, !dbg !14112
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !14113
  store i32 %5, i32* %6, align 4, !dbg !14114
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14115
  %8 = and i32 %7, 240, !dbg !14116
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !14117
  store i32 %8, i32* %9, align 4, !dbg !14118
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14119
  %11 = and i32 %10, 7168, !dbg !14120
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !14121
  store i32 %11, i32* %12, align 4, !dbg !14122
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14123
  %14 = lshr i32 %13, 3, !dbg !14124
  %15 = and i32 %14, 7168, !dbg !14124
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !14125
  store i32 %15, i32* %16, align 4, !dbg !14126
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14127
  %18 = and i32 %17, 15, !dbg !14128
  store i32 %18, i32* %1, align 4, !dbg !14129
  ret void, !dbg !14130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !14131 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14132
  %2 = and i32 %1, 128, !dbg !14132
  %3 = icmp eq i32 %2, 0, !dbg !14132
  br i1 %3, label %5, label %4, !dbg !14134

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !14135
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !14137
  br label %5, !dbg !14138

5:                                                ; preds = %4, %0
  ret void, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !14140 {
  ret void, !dbg !14141
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !14142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !14147
  ret void, !dbg !14148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !14149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14152, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 1000, metadata !14153, metadata !DIExpression()), !dbg !14154
  %2 = udiv i32 %0, 1000, !dbg !14155
  %3 = add nsw i32 %2, -1, !dbg !14156
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14157
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14158
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14159
  ret void, !dbg !14160
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !14161 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14163, metadata !DIExpression()), !dbg !14165
  %3 = bitcast i32* %2 to i8*, !dbg !14166
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14166
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14164, metadata !DIExpression()), !dbg !14167
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14168
  store volatile i32 %4, i32* %2, align 4, !dbg !14167
  %5 = load volatile i32, i32* %2, align 4, !dbg !14169
  %6 = icmp eq i32 %0, -1, !dbg !14170
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14163, metadata !DIExpression()), !dbg !14165
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %8, metadata !14163, metadata !DIExpression()), !dbg !14165
  br label %9, !dbg !14172

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14163, metadata !DIExpression()), !dbg !14165
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14163, metadata !DIExpression()), !dbg !14165
  %12 = shl i32 %11, 15, !dbg !14165
  %13 = ashr i32 %12, 31, !dbg !14165
  %14 = add i32 %13, %10, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %14, metadata !14163, metadata !DIExpression()), !dbg !14165
  %15 = icmp eq i32 %14, 0, !dbg !14172
  br i1 %15, label %16, label %9, !dbg !14172

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14176
  ret void, !dbg !14176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14179, metadata !DIExpression()), !dbg !14180
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14181
  ret void, !dbg !14182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !14183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14188, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 0, metadata !14191, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 0, metadata !14192, metadata !DIExpression()), !dbg !14193
  %2 = icmp eq i32 %0, 0, !dbg !14194
  br i1 %2, label %72, label %3, !dbg !14196

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14197
  %5 = icmp eq i32 %4, 49152, !dbg !14200
  br i1 %5, label %6, label %21, !dbg !14201

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !14202
  %8 = select i1 %7, i32 0, i32 5, !dbg !14205
  call void @llvm.dbg.value(metadata i32 %8, metadata !14191, metadata !DIExpression()), !dbg !14193
  %9 = add i32 %0, -120000001, !dbg !14206
  %10 = icmp ult i32 %9, 30000000, !dbg !14206
  %11 = select i1 %10, i32 4, i32 %8, !dbg !14206
  call void @llvm.dbg.value(metadata i32 %11, metadata !14191, metadata !DIExpression()), !dbg !14193
  %12 = icmp ult i32 %9, -30000000, !dbg !14208
  %13 = select i1 %12, i32 %11, i32 3, !dbg !14208
  call void @llvm.dbg.value(metadata i32 %13, metadata !14191, metadata !DIExpression()), !dbg !14193
  %14 = icmp ugt i32 %0, 60000000, !dbg !14210
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !14212
  br i1 %16, label %21, label %17, !dbg !14212

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !14213
  %19 = and i1 %18, %15, !dbg !14216
  %20 = select i1 %19, i32 1, i32 %13, !dbg !14216
  br label %21, !dbg !14216

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !14193
  call void @llvm.dbg.value(metadata i32 %22, metadata !14191, metadata !DIExpression()), !dbg !14193
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14217
  %24 = icmp eq i32 %23, 32768, !dbg !14219
  br i1 %24, label %25, label %45, !dbg !14220

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !14221
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !14224
  %29 = select i1 %28, i32 5, i32 %22, !dbg !14224
  call void @llvm.dbg.value(metadata i32 %29, metadata !14191, metadata !DIExpression()), !dbg !14193
  %30 = icmp ugt i32 %0, 12000000, !dbg !14225
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !14227
  %33 = select i1 %32, i32 4, i32 %29, !dbg !14227
  call void @llvm.dbg.value(metadata i32 %33, metadata !14191, metadata !DIExpression()), !dbg !14193
  %34 = icmp ugt i32 %0, 90000000, !dbg !14228
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !14230
  %37 = select i1 %36, i32 3, i32 %33, !dbg !14230
  call void @llvm.dbg.value(metadata i32 %37, metadata !14191, metadata !DIExpression()), !dbg !14193
  %38 = icmp ugt i32 %0, 60000000, !dbg !14231
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !14233
  br i1 %40, label %45, label %41, !dbg !14233

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !14234
  %43 = select i1 %42, i1 %39, i1 false, !dbg !14237
  %44 = select i1 %43, i32 1, i32 %37, !dbg !14237
  br label %45, !dbg !14237

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !14238
  call void @llvm.dbg.value(metadata i32 %46, metadata !14191, metadata !DIExpression()), !dbg !14193
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14239
  %48 = icmp eq i32 %47, 16384, !dbg !14241
  br i1 %48, label %49, label %61, !dbg !14242

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !14243
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !14246
  %53 = select i1 %52, i32 3, i32 %46, !dbg !14246
  call void @llvm.dbg.value(metadata i32 %53, metadata !14191, metadata !DIExpression()), !dbg !14193
  %54 = icmp ugt i32 %0, 60000000, !dbg !14247
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !14249
  br i1 %56, label %61, label %57, !dbg !14249

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !14250
  %59 = select i1 %58, i1 %55, i1 false, !dbg !14253
  %60 = select i1 %59, i32 1, i32 %53, !dbg !14253
  br label %61, !dbg !14253

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !14238
  call void @llvm.dbg.value(metadata i32 %62, metadata !14191, metadata !DIExpression()), !dbg !14193
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !14254
  call void @llvm.dbg.value(metadata i32 2, metadata !14189, metadata !DIExpression()), !dbg !14193
  br label %63, !dbg !14255

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !14238
  call void @llvm.dbg.value(metadata i32 %64, metadata !14189, metadata !DIExpression()), !dbg !14193
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14256
  call void @llvm.dbg.value(metadata i32 %65, metadata !14190, metadata !DIExpression()), !dbg !14193
  %66 = add nsw i32 %64, -1, !dbg !14258
  call void @llvm.dbg.value(metadata i32 %66, metadata !14189, metadata !DIExpression()), !dbg !14193
  %67 = icmp ne i32 %65, %62, !dbg !14259
  %68 = icmp ne i32 %66, 0, !dbg !14260
  %69 = select i1 %67, i1 %68, i1 false, !dbg !14260
  br i1 %69, label %63, label %70, !dbg !14261, !llvm.loop !14262

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !14264
  call void @llvm.dbg.value(metadata i32 %73, metadata !14192, metadata !DIExpression()), !dbg !14193
  ret i32 %73, !dbg !14265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14266 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14268
  %2 = and i32 %1, 49152, !dbg !14268
  ret i32 %2, !dbg !14269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !14270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14272, metadata !DIExpression()), !dbg !14273
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14274
  %3 = and i32 %2, -16, !dbg !14274
  %4 = or i32 %3, %0, !dbg !14274
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14274
  ret void, !dbg !14275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14276 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14277
  %2 = and i32 %1, 15, !dbg !14277
  ret i32 %2, !dbg !14278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !14279 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14297, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14298, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 0, metadata !14299, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 0, metadata !14300, metadata !DIExpression()), !dbg !14301
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14302
  %4 = icmp eq i32 %3, 0, !dbg !14304
  br i1 %4, label %5, label %21, !dbg !14305

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %6, metadata !14300, metadata !DIExpression()), !dbg !14301
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.216() #26, !dbg !14308
  %8 = icmp eq i32 %7, 1, !dbg !14310
  br i1 %8, label %13, label %9, !dbg !14311

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.217() #26, !dbg !14312
  br label %10, !dbg !14314

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.216() #26, !dbg !14315
  %12 = icmp eq i32 %11, 1, !dbg !14316
  br i1 %12, label %13, label %10, !dbg !14314, !llvm.loop !14317

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14319
  %15 = load i32, i32* %14, align 4, !dbg !14319
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14320
  %17 = load i32, i32* %16, align 4, !dbg !14320
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14321
  %19 = load i32, i32* %18, align 4, !dbg !14321
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !14322
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14323
  call void @llvm.dbg.value(metadata i32 %20, metadata !14299, metadata !DIExpression()), !dbg !14301
  br label %21, !dbg !14324

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14325
  call void @llvm.dbg.value(metadata i32 %22, metadata !14299, metadata !DIExpression()), !dbg !14301
  ret i32 %22, !dbg !14326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14327 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14331, metadata !DIExpression()), !dbg !14332
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.220() #26, !dbg !14333
  %2 = icmp ne i32 %1, 0, !dbg !14335
  call void @llvm.dbg.value(metadata i1 %2, metadata !14331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14332
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !14336
  %4 = icmp ne i32 %3, 0, !dbg !14338
  call void @llvm.dbg.value(metadata i1 undef, metadata !14331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14332
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !14339
  %6 = icmp ne i32 %5, 0, !dbg !14341
  %7 = select i1 %6, i1 true, i1 %4, !dbg !14342
  %8 = select i1 %7, i1 true, i1 %2, !dbg !14342
  %9 = zext i1 %8 to i32, !dbg !14342
  call void @llvm.dbg.value(metadata i32 %9, metadata !14331, metadata !DIExpression()), !dbg !14332
  ret i32 %9, !dbg !14343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14348, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14349, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata i32 0, metadata !14350, metadata !DIExpression()), !dbg !14351
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14352
  %4 = load i32, i32* %3, align 4, !dbg !14352
  %5 = and i32 %4, 63, !dbg !14353
  %6 = udiv i32 %0, %5, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %6, metadata !14350, metadata !DIExpression()), !dbg !14351
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14355
  %8 = load i32, i32* %7, align 4, !dbg !14355
  %9 = and i32 %8, 511, !dbg !14356
  %10 = mul i32 %9, %6, !dbg !14357
  call void @llvm.dbg.value(metadata i32 %10, metadata !14350, metadata !DIExpression()), !dbg !14351
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14358
  %12 = load i32, i32* %11, align 4, !dbg !14358
  %13 = lshr i32 %12, 15, !dbg !14359
  %14 = and i32 %13, 131070, !dbg !14359
  %15 = add nuw nsw i32 %14, 2, !dbg !14359
  %16 = udiv i32 %10, %15, !dbg !14360
  call void @llvm.dbg.value(metadata i32 %16, metadata !14350, metadata !DIExpression()), !dbg !14351
  ret i32 %16, !dbg !14361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.216() unnamed_addr #17 !dbg !14362 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14363
  %2 = lshr i32 %1, 1, !dbg !14364
  %3 = and i32 %2, 1, !dbg !14364
  ret i32 %3, !dbg !14365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.217() unnamed_addr #15 !dbg !14366 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14367
  %2 = or i32 %1, 1, !dbg !14367
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !14369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14371, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i32 %1, metadata !14372, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i32 %2, metadata !14373, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()), !dbg !14375
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14376
  %6 = and i32 %5, -4227072, !dbg !14376
  %7 = or i32 %1, %0, !dbg !14376
  %8 = shl i32 %2, 6, !dbg !14376
  %9 = or i32 %7, %8, !dbg !14376
  %10 = or i32 %9, %6, !dbg !14376
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14376
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14377
  %12 = and i32 %11, -196609, !dbg !14377
  %13 = or i32 %12, %3, !dbg !14377
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14377
  ret void, !dbg !14378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !14379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14383, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14384, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.value(metadata i32 0, metadata !14385, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.value(metadata i32 0, metadata !14386, metadata !DIExpression()), !dbg !14387
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14388
  %4 = load i32, i32* %3, align 4, !dbg !14388
  %5 = lshr i32 %4, 4, !dbg !14388
  %6 = and i32 %5, 15, !dbg !14388
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14388
  %8 = load i8, i8* %7, align 1, !dbg !14388
  %9 = zext i8 %8 to i32, !dbg !14388
  %10 = lshr i32 %0, %9, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %10, metadata !14386, metadata !DIExpression()), !dbg !14387
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14389
  %12 = icmp ult i32 %11, %10, !dbg !14391
  br i1 %12, label %13, label %16, !dbg !14392

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14393
  call void @llvm.dbg.value(metadata i32 %14, metadata !14385, metadata !DIExpression()), !dbg !14387
  %15 = icmp eq i32 %14, 0, !dbg !14395
  br i1 %15, label %16, label %30, !dbg !14397

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.219() #26, !dbg !14398
  br label %17, !dbg !14400

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.220() #26, !dbg !14401
  %19 = icmp eq i32 %18, 1, !dbg !14402
  br i1 %19, label %20, label %17, !dbg !14400, !llvm.loop !14403

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14405
  tail call fastcc void @LL_RCC_SetAHBPrescaler.221(i32 noundef %21) #26, !dbg !14406
  tail call fastcc void @LL_RCC_SetSysClkSource.222() #26, !dbg !14407
  br label %22, !dbg !14408

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.223() #26, !dbg !14409
  %24 = icmp eq i32 %23, 8, !dbg !14410
  br i1 %24, label %25, label %22, !dbg !14408, !llvm.loop !14411

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14413
  %27 = load i32, i32* %26, align 4, !dbg !14413
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.224(i32 noundef %27) #26, !dbg !14414
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14415
  %29 = load i32, i32* %28, align 4, !dbg !14415
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.225(i32 noundef %29) #26, !dbg !14416
  br label %30, !dbg !14417

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14418
  %33 = icmp ugt i32 %32, %10, !dbg !14420
  br i1 %33, label %34, label %36, !dbg !14421

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14422
  call void @llvm.dbg.value(metadata i32 %35, metadata !14385, metadata !DIExpression()), !dbg !14387
  br label %36, !dbg !14424

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14387
  call void @llvm.dbg.value(metadata i32 %37, metadata !14385, metadata !DIExpression()), !dbg !14387
  %38 = icmp eq i32 %37, 0, !dbg !14425
  br i1 %38, label %39, label %40, !dbg !14427

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14428
  br label %40, !dbg !14430

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.219() unnamed_addr #15 !dbg !14432 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14433
  %2 = or i32 %1, 16777216, !dbg !14433
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14433
  ret void, !dbg !14434
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.220() unnamed_addr #17 !dbg !14435 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14436
  %2 = lshr i32 %1, 25, !dbg !14437
  %3 = and i32 %2, 1, !dbg !14437
  ret i32 %3, !dbg !14438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.221(i32 noundef %0) unnamed_addr #15 !dbg !14439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14441, metadata !DIExpression()), !dbg !14442
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14443
  %3 = and i32 %2, -241, !dbg !14443
  %4 = or i32 %3, %0, !dbg !14443
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14443
  ret void, !dbg !14444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.222() unnamed_addr #15 !dbg !14445 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14447, metadata !DIExpression()), !dbg !14448
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14449
  %2 = and i32 %1, -4, !dbg !14449
  %3 = or i32 %2, 2, !dbg !14449
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14449
  ret void, !dbg !14450
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.223() unnamed_addr #17 !dbg !14451 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14452
  %2 = and i32 %1, 12, !dbg !14452
  ret i32 %2, !dbg !14453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.224(i32 noundef %0) unnamed_addr #15 !dbg !14454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14456, metadata !DIExpression()), !dbg !14457
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14458
  %3 = and i32 %2, -7169, !dbg !14458
  %4 = or i32 %3, %0, !dbg !14458
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14458
  ret void, !dbg !14459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.225(i32 noundef %0) unnamed_addr #15 !dbg !14460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14462, metadata !DIExpression()), !dbg !14463
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14464
  %3 = and i32 %2, -57345, !dbg !14464
  %4 = or i32 %3, %0, !dbg !14464
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14464
  ret void, !dbg !14465
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #17 !dbg !14466 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14467
  %2 = lshr i32 %1, 29, !dbg !14468
  %3 = and i32 %2, 1, !dbg !14468
  ret i32 %3, !dbg !14469
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14470 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14471
  %2 = lshr i32 %1, 27, !dbg !14472
  %3 = and i32 %2, 1, !dbg !14472
  ret i32 %3, !dbg !14473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14478, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata i32 %1, metadata !14479, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14480, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14481, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata i32 0, metadata !14482, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata i32 0, metadata !14483, metadata !DIExpression()), !dbg !14484
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14485
  %6 = icmp eq i32 %5, 0, !dbg !14487
  br i1 %6, label %7, label %27, !dbg !14488

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !14489
  call void @llvm.dbg.value(metadata i32 %8, metadata !14483, metadata !DIExpression()), !dbg !14484
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.226() #26, !dbg !14491
  %10 = icmp eq i32 %9, 1, !dbg !14493
  br i1 %10, label %19, label %11, !dbg !14494

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14495
  br i1 %12, label %13, label %14, !dbg !14498

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !14499
  br label %15, !dbg !14501

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.227() #26, !dbg !14502
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.228() #26, !dbg !14504
  br label %16, !dbg !14505

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.226() #26, !dbg !14506
  %18 = icmp eq i32 %17, 1, !dbg !14507
  br i1 %18, label %19, label %16, !dbg !14505, !llvm.loop !14508

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14510
  %21 = load i32, i32* %20, align 4, !dbg !14510
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14511
  %23 = load i32, i32* %22, align 4, !dbg !14511
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14512
  %25 = load i32, i32* %24, align 4, !dbg !14512
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !14513
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %26, metadata !14482, metadata !DIExpression()), !dbg !14484
  br label %27, !dbg !14515

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14516
  call void @llvm.dbg.value(metadata i32 %28, metadata !14482, metadata !DIExpression()), !dbg !14484
  ret i32 %28, !dbg !14517
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.226() unnamed_addr #17 !dbg !14518 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14519
  %2 = lshr i32 %1, 17, !dbg !14520
  %3 = and i32 %2, 1, !dbg !14520
  ret i32 %3, !dbg !14521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !14522 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14523
  %2 = or i32 %1, 262144, !dbg !14523
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.227() unnamed_addr #15 !dbg !14525 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14526
  %2 = and i32 %1, -262145, !dbg !14526
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14526
  ret void, !dbg !14527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.228() unnamed_addr #15 !dbg !14528 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14529
  %2 = or i32 %1, 65536, !dbg !14529
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14529
  ret void, !dbg !14530
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14531 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14534, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14534, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14534, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14550
  ret void, !dbg !14551
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14552 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14556, metadata !DIExpression()), !dbg !14558
  %2 = icmp eq i8* %0, null, !dbg !14559
  br i1 %2, label %29, label %3, !dbg !14561

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14562
  %5 = icmp eq i8 %4, 0, !dbg !14563
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14564
  br i1 %6, label %29, label %8, !dbg !14564

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14557, metadata !DIExpression()), !dbg !14558
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14565

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14557, metadata !DIExpression()), !dbg !14558
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14567
  br i1 %10, label %11, label %15, !dbg !14572

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14573
  %13 = load i8*, i8** %12, align 4, !dbg !14573
  %14 = icmp eq i8* %13, %0, !dbg !14574
  br i1 %14, label %29, label %15, !dbg !14575

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14576
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14557, metadata !DIExpression()), !dbg !14558
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14577
  br i1 %17, label %7, label %8, !dbg !14578, !llvm.loop !14579

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14557, metadata !DIExpression()), !dbg !14558
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14581
  br i1 %20, label %21, label %26, !dbg !14585

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14586
  %23 = load i8*, i8** %22, align 4, !dbg !14586
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14587
  %25 = icmp eq i32 %24, 0, !dbg !14588
  br i1 %25, label %29, label %26, !dbg !14589

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14590
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14557, metadata !DIExpression()), !dbg !14558
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14591
  br i1 %28, label %29, label %18, !dbg !14565, !llvm.loop !14592

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14558
  ret %struct.device* %30, !dbg !14594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14599, metadata !DIExpression()), !dbg !14600
  %2 = icmp eq %struct.device* %0, null, !dbg !14601
  br i1 %2, label %14, label %3, !dbg !14603

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14604
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14604
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14605
  %7 = load i8, i8* %6, align 1, !dbg !14605
  %8 = and i8 %7, 1, !dbg !14605
  %9 = icmp eq i8 %8, 0, !dbg !14605
  br i1 %9, label %14, label %10, !dbg !14606

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14607
  %12 = load i8, i8* %11, align 1, !dbg !14607
  %13 = icmp eq i8 %12, 0, !dbg !14608
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14600
  ret i1 %15, !dbg !14609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14610 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14615, metadata !DIExpression()), !dbg !14616
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14617
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14619 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14627, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14628, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i8* %2, metadata !14629, metadata !DIExpression()), !dbg !14632
  %5 = bitcast i32* %4 to i8*, !dbg !14633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14633
  call void @llvm.dbg.value(metadata i32 0, metadata !14630, metadata !DIExpression()), !dbg !14632
  store i32 0, i32* %4, align 4, !dbg !14634
  call void @llvm.dbg.value(metadata i32* %4, metadata !14630, metadata !DIExpression(DW_OP_deref)), !dbg !14632
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14635
  call void @llvm.dbg.value(metadata i16* %6, metadata !14631, metadata !DIExpression()), !dbg !14632
  %7 = load i32, i32* %4, align 4, !dbg !14636
  call void @llvm.dbg.value(metadata i32 %7, metadata !14630, metadata !DIExpression()), !dbg !14632
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14637
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14638
  ret i32 %8, !dbg !14639
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14644, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i32* %1, metadata !14645, metadata !DIExpression()), !dbg !14650
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14651
  %4 = load i16*, i16** %3, align 4, !dbg !14651
  call void @llvm.dbg.value(metadata i16* %4, metadata !14646, metadata !DIExpression()), !dbg !14650
  %5 = icmp eq i16* %4, null, !dbg !14652
  br i1 %5, label %14, label %6, !dbg !14653

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14654
  call void @llvm.dbg.value(metadata i32 %7, metadata !14647, metadata !DIExpression()), !dbg !14654
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14655
  %9 = load i16, i16* %8, align 2, !dbg !14655
  %10 = add i16 %9, -32767, !dbg !14656
  %11 = icmp ult i16 %10, 2, !dbg !14656
  %12 = add i32 %7, 1, !dbg !14657
  call void @llvm.dbg.value(metadata i32 %12, metadata !14647, metadata !DIExpression()), !dbg !14654
  br i1 %11, label %13, label %6, !dbg !14656, !llvm.loop !14659

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14662
  br label %14, !dbg !14663

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14665 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14669, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata i32 %1, metadata !14670, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14671, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata i8* %3, metadata !14672, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata i32 0, metadata !14673, metadata !DIExpression()), !dbg !14681
  %5 = icmp eq i32 %1, 0, !dbg !14682
  br i1 %5, label %16, label %8, !dbg !14683

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14673, metadata !DIExpression()), !dbg !14681
  %7 = icmp eq i32 %15, %1, !dbg !14682
  br i1 %7, label %16, label %8, !dbg !14683, !llvm.loop !14684

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14673, metadata !DIExpression()), !dbg !14681
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14686
  %11 = load i16, i16* %10, align 2, !dbg !14686
  call void @llvm.dbg.value(metadata i16 %11, metadata !14675, metadata !DIExpression()), !dbg !14687
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14688
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14678, metadata !DIExpression()), !dbg !14687
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %13, metadata !14679, metadata !DIExpression()), !dbg !14687
  %14 = icmp slt i32 %13, 0, !dbg !14690
  %15 = add nuw i32 %9, 1, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %15, metadata !14673, metadata !DIExpression()), !dbg !14681
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !14694 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14698, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14699, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14700, metadata !DIExpression()), !dbg !14701
  %2 = sext i16 %0 to i32, !dbg !14702
  %3 = icmp slt i16 %0, 1, !dbg !14704
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14705
  %6 = add nsw i32 %2, -1, !dbg !14705
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14705
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14699, metadata !DIExpression()), !dbg !14701
  ret %struct.device* %8, !dbg !14706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14707 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14709, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14710, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i8* %2, metadata !14711, metadata !DIExpression()), !dbg !14714
  %5 = bitcast i32* %4 to i8*, !dbg !14715
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14715
  call void @llvm.dbg.value(metadata i32 0, metadata !14712, metadata !DIExpression()), !dbg !14714
  store i32 0, i32* %4, align 4, !dbg !14716
  call void @llvm.dbg.value(metadata i32* %4, metadata !14712, metadata !DIExpression(DW_OP_deref)), !dbg !14714
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14717
  call void @llvm.dbg.value(metadata i16* %6, metadata !14713, metadata !DIExpression()), !dbg !14714
  %7 = load i32, i32* %4, align 4, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %7, metadata !14712, metadata !DIExpression()), !dbg !14714
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14719
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14720
  ret i32 %8, !dbg !14721
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14722 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14724, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.value(metadata i32* %1, metadata !14725, metadata !DIExpression()), !dbg !14729
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14730
  %4 = load i16*, i16** %3, align 4, !dbg !14730
  call void @llvm.dbg.value(metadata i16* %4, metadata !14726, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.value(metadata i32 0, metadata !14727, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.value(metadata i32 0, metadata !14728, metadata !DIExpression()), !dbg !14729
  %5 = icmp eq i16* %4, null, !dbg !14731
  br i1 %5, label %22, label %6, !dbg !14733

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14727, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.value(metadata i16* %8, metadata !14726, metadata !DIExpression()), !dbg !14729
  %9 = load i16, i16* %8, align 2, !dbg !14734
  %10 = icmp eq i16 %9, -32768, !dbg !14738
  call void @llvm.dbg.value(metadata i32 undef, metadata !14727, metadata !DIExpression()), !dbg !14729
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14739
  call void @llvm.dbg.value(metadata i16* %11, metadata !14726, metadata !DIExpression()), !dbg !14729
  %12 = zext i1 %10 to i32, !dbg !14740
  %13 = add i32 %7, %12, !dbg !14740
  call void @llvm.dbg.value(metadata i32 %13, metadata !14727, metadata !DIExpression()), !dbg !14729
  %14 = icmp eq i32 %13, 2, !dbg !14741
  br i1 %14, label %15, label %6, !dbg !14742

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14729
  call void @llvm.dbg.value(metadata i32 %16, metadata !14728, metadata !DIExpression()), !dbg !14729
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14743
  %18 = load i16, i16* %17, align 2, !dbg !14743
  %19 = icmp eq i16 %18, 32767, !dbg !14744
  %20 = add i32 %16, 1, !dbg !14745
  call void @llvm.dbg.value(metadata i32 %20, metadata !14728, metadata !DIExpression()), !dbg !14729
  br i1 %19, label %21, label %15, !dbg !14747, !llvm.loop !14748

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14750
  br label %22, !dbg !14751

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14752
  call void @llvm.dbg.value(metadata i16* %23, metadata !14726, metadata !DIExpression()), !dbg !14729
  ret i16* %23, !dbg !14753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14754 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14757
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14758
  ret i32* %2, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !14760 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14909, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14910, metadata !DIExpression()), !dbg !14911
  ret void, !dbg !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14917, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 %1, metadata !14918, metadata !DIExpression()), !dbg !14919
  ret void, !dbg !14920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14921 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14925, metadata !DIExpression()), !dbg !14927
  call void @llvm.dbg.value(metadata i32 %1, metadata !14926, metadata !DIExpression()), !dbg !14927
  ret void, !dbg !14928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14933, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8* %1, metadata !14934, metadata !DIExpression()), !dbg !14935
  ret i32 -134, !dbg !14936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14941, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata i8* %1, metadata !14942, metadata !DIExpression()), !dbg !14943
  ret i32 -134, !dbg !14944
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14948, metadata !DIExpression()), !dbg !14949
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14950, !srcloc !14956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14953, metadata !DIExpression()) #25, !dbg !14957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14954, metadata !DIExpression()) #25, !dbg !14957
  br label %3, !dbg !14958

3:                                                ; preds = %3, %1
  br label %3, !dbg !14959, !llvm.loop !14962
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14969, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14970, metadata !DIExpression()), !dbg !14971
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.235, i32 0, i32 0), i32 noundef 69) #27, !dbg !14972
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14977
  unreachable, !dbg !14977
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14980, metadata !DIExpression()), !dbg !14981
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14982
  unreachable, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14985, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14986, metadata !DIExpression()), !dbg !14989
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14990, !srcloc !14956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14953, metadata !DIExpression()) #25, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14954, metadata !DIExpression()) #25, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14987, metadata !DIExpression()), !dbg !14989
  %4 = tail call fastcc %struct.k_thread* @k_current_get.238() #28, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14988, metadata !DIExpression()), !dbg !14989
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14994
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.239, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14994
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14999
  br i1 %6, label %15, label %7, !dbg !15001

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15002, metadata !DIExpression()), !dbg !15007
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !15009
  %9 = load i32, i32* %8, align 4, !dbg !15009
  %10 = and i32 %9, 511, !dbg !15010
  %11 = icmp eq i32 %10, 0, !dbg !15011
  br i1 %11, label %13, label %12, !dbg !15012

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.240, i32 0, i32 0), i32 noundef 69) #27, !dbg !15013
  br label %13, !dbg !15019

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !15020
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.241, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !15020
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !15025
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15002, metadata !DIExpression()), !dbg !15026
  br label %17, !dbg !15031

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !15020
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.241, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !15020
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !15025
  br label %17, !dbg !15032

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14990
  call void @llvm.dbg.value(metadata i32 %18, metadata !14953, metadata !DIExpression()) #25, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %18, metadata !14987, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.value(metadata i32 undef, metadata !15033, metadata !DIExpression()) #25, !dbg !15036
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15038, !srcloc !15039
  tail call fastcc void @k_thread_abort.242(%struct.k_thread* noundef %4) #26, !dbg !15040
  ret void, !dbg !15043
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.238() unnamed_addr #13 !dbg !15044 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.250() #28, !dbg !15048
  ret %struct.k_thread* %1, !dbg !15049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !15050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15054, metadata !DIExpression()), !dbg !15055
  %2 = icmp ult i32 %0, 5, !dbg !15056
  br i1 %2, label %3, label %6, !dbg !15056

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !15056
  %5 = load i8*, i8** %4, align 4, !dbg !15056
  br label %6, !dbg !15056

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.244, i32 0, i32 0), %1 ], !dbg !15057
  ret i8* %7, !dbg !15059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15064, metadata !DIExpression()), !dbg !15066
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !15067
  br i1 %2, label %9, label %3, !dbg !15068

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !15069
  call void @llvm.dbg.value(metadata i8* %4, metadata !15065, metadata !DIExpression()), !dbg !15066
  %5 = icmp eq i8* %4, null, !dbg !15070
  br i1 %5, label %9, label %6, !dbg !15072

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !15073
  %8 = icmp eq i8 %7, 0, !dbg !15074
  br i1 %8, label %9, label %10, !dbg !15075

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.243, i32 0, i32 0), metadata !15065, metadata !DIExpression()), !dbg !15066
  br label %10, !dbg !15076

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.243, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !15066
  call void @llvm.dbg.value(metadata i8* %11, metadata !15065, metadata !DIExpression()), !dbg !15066
  ret i8* %11, !dbg !15078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.242(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15084
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15085, !srcloc !15087
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !15088
  ret void, !dbg !15089
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.250() unnamed_addr #13 !dbg !15090 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15091, !srcloc !15093
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !15094
  ret %struct.k_thread* %1, !dbg !15095
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15100, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata i32 %1, metadata !15101, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata i32 %2, metadata !15102, metadata !DIExpression()), !dbg !15103
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !15104
  ret void, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15110, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i8* %1, metadata !15111, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 %2, metadata !15112, metadata !DIExpression()), !dbg !15113
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !15114
  ret void, !dbg !15115
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !15116 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !15117
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !15118
  ret void, !dbg !15119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !15120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15122, metadata !DIExpression()), !dbg !15123
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !15124
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15125
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !15126
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !15127
  %4 = trunc i32 %0 to i8, !dbg !15128
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !15129
  store i8 %4, i8* %5, align 4, !dbg !15130
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !15131
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !15132
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !15133
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !15134
  store i8* %8, i8** %9, align 4, !dbg !15135
  ret void, !dbg !15136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !15137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15139, metadata !DIExpression()), !dbg !15145
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15140, metadata !DIExpression()), !dbg !15145
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15147
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15141, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata i8* null, metadata !15144, metadata !DIExpression()), !dbg !15145
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15148
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15149
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !15150
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !15151
  ret void, !dbg !15152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15157, metadata !DIExpression()), !dbg !15158
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15159
  ret i8* %2, !dbg !15160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15161 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15166, metadata !DIExpression()), !dbg !15167
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15168
  %3 = load i8, i8* %2, align 1, !dbg !15169
  %4 = and i8 %3, -5, !dbg !15169
  store i8 %4, i8* %2, align 1, !dbg !15169
  ret void, !dbg !15170
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !15171 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !15174
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !15175
  %3 = ptrtoint i8* %2 to i32, !dbg !15184
  %4 = add i32 %3, 2048, !dbg !15185
  call void @llvm.dbg.value(metadata i32 %4, metadata !15179, metadata !DIExpression()) #25, !dbg !15186
  call void @llvm.dbg.value(metadata i32 %4, metadata !15187, metadata !DIExpression()) #25, !dbg !15190
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15192, !srcloc !15193
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15194
  %6 = or i32 %5, 512, !dbg !15194
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15194
  tail call fastcc void @__NVIC_SetPriority.259(i32 noundef -2, i32 noundef 255) #27, !dbg !15195
  tail call fastcc void @__NVIC_SetPriority.259(i32 noundef -5, i32 noundef 0) #27, !dbg !15198
  tail call fastcc void @__NVIC_SetPriority.259(i32 noundef -12, i32 noundef 0) #27, !dbg !15199
  tail call fastcc void @__NVIC_SetPriority.259(i32 noundef -11, i32 noundef 0) #27, !dbg !15200
  tail call fastcc void @__NVIC_SetPriority.259(i32 noundef -10, i32 noundef 0) #27, !dbg !15201
  tail call fastcc void @__NVIC_SetPriority.259(i32 noundef -4, i32 noundef 0) #27, !dbg !15202
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15203
  %8 = or i32 %7, 458752, !dbg !15203
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15203
  tail call void @z_arm_fault_init() #27, !dbg !15204
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15205
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15206
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15209
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15210
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15211
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15212
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15212
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15173, metadata !DIExpression()), !dbg !15213
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15214
  call void @z_device_state_init() #27, !dbg !15215
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15216
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15217
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15218
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15219
  unreachable, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2520, metadata !DIExpression()), !dbg !15220
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15221
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15221
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2521, metadata !DIExpression()), !dbg !15220
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2521, metadata !DIExpression()), !dbg !15220
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15222
  br i1 %7, label %8, label %35, !dbg !15223

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2521, metadata !DIExpression()), !dbg !15220
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15224
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15224
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2531, metadata !DIExpression()), !dbg !15225
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15226
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15226
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15227
  call void @llvm.dbg.value(metadata i32 %14, metadata !2535, metadata !DIExpression()), !dbg !15225
  %15 = icmp eq %struct.device* %11, null, !dbg !15228
  br i1 %15, label %32, label %16, !dbg !15230

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15231
  br i1 %17, label %26, label %18, !dbg !15234

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15235
  call void @llvm.dbg.value(metadata i32 %19, metadata !2535, metadata !DIExpression()), !dbg !15225
  %20 = icmp ult i32 %19, 255, !dbg !15237
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15237
  call void @llvm.dbg.value(metadata i32 %21, metadata !2535, metadata !DIExpression()), !dbg !15225
  %22 = trunc i32 %21 to i8, !dbg !15238
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15239
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15239
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15240
  store i8 %22, i8* %25, align 1, !dbg !15241
  br label %26, !dbg !15242

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15243
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15243
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15244
  %30 = load i8, i8* %29, align 1, !dbg !15245
  %31 = or i8 %30, 1, !dbg !15245
  store i8 %31, i8* %29, align 1, !dbg !15245
  br label %32, !dbg !15246

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15247
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2521, metadata !DIExpression()), !dbg !15220
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15222
  br i1 %34, label %8, label %35, !dbg !15223, !llvm.loop !15248

35:                                               ; preds = %32, %1
  ret void, !dbg !15250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.259(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !15251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15253, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i32 %1, metadata !15254, metadata !DIExpression()), !dbg !15255
  %3 = trunc i32 %1 to i8, !dbg !15256
  %4 = shl i8 %3, 4, !dbg !15256
  %5 = and i32 %0, 15, !dbg !15259
  %6 = add nsw i32 %5, -4, !dbg !15260
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15261
  store volatile i8 %4, i8* %7, align 1, !dbg !15262
  ret void, !dbg !15263
}

; Function Attrs: optsize
declare !dbg !15264 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15265 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15268, metadata !DIExpression()), !dbg !15269
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15270
  store i8 1, i8* %2, align 1, !dbg !15271
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15272
  store i8 1, i8* %3, align 4, !dbg !15273
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15274
  store i32 0, i32* %4, align 4, !dbg !15275
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15276
  store i32 0, i32* %5, align 4, !dbg !15277
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15278
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15279
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15280
  ret void, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15282 {
  tail call void @z_sched_init() #27, !dbg !15287
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15288
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.260, i32 0, i32 0)) #27, !dbg !15289
  call void @llvm.dbg.value(metadata i8* %1, metadata !15286, metadata !DIExpression()), !dbg !15290
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15291
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15292
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15293
  ret i8* %1, !dbg !15294
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15299, metadata !DIExpression()), !dbg !15300
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15301
  unreachable, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15303 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15305, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i8* %1, metadata !15306, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i8* %2, metadata !15307, metadata !DIExpression()), !dbg !15308
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15309
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15310
  tail call void @boot_banner() #27, !dbg !15311
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15312
  tail call void @z_init_static_threads() #27, !dbg !15313
  tail call void @main() #27, !dbg !15314
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15315
  %5 = and i8 %4, -2, !dbg !15315
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15315
  ret void, !dbg !15316
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15317 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15327, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.value(metadata i8* %1, metadata !15328, metadata !DIExpression()), !dbg !15329
  ret void, !dbg !15330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15331 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15333, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.value(metadata i8* %1, metadata !15334, metadata !DIExpression()), !dbg !15335
  ret void, !dbg !15336
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15337 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15338, !srcloc !15345
  call void @llvm.dbg.value(metadata i32 %1, metadata !15341, metadata !DIExpression()) #25, !dbg !15346
  %2 = icmp ne i32 %1, 0, !dbg !15347
  ret i1 %2, !dbg !15348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15349 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15350
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15351
  %3 = load i8, i8* %2, align 4, !dbg !15352
  %4 = or i8 %3, 1, !dbg !15352
  store i8 %4, i8* %2, align 4, !dbg !15352
  ret void, !dbg !15353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15354 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15355
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15356
  %3 = load i8, i8* %2, align 4, !dbg !15357
  %4 = and i8 %3, -2, !dbg !15357
  store i8 %4, i8* %2, align 4, !dbg !15357
  ret void, !dbg !15358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15359 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15360
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15361
  %3 = load i8, i8* %2, align 4, !dbg !15361
  %4 = and i8 %3, 1, !dbg !15362
  %5 = icmp ne i8 %4, 0, !dbg !15363
  ret i1 %5, !dbg !15364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15369, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i8* %1, metadata !15370, metadata !DIExpression()), !dbg !15371
  ret i32 -88, !dbg !15372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15377, metadata !DIExpression()), !dbg !15378
  ret i8* null, !dbg !15379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15380 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15384, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i8* %1, metadata !15385, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 %2, metadata !15386, metadata !DIExpression()), !dbg !15387
  ret i32 -88, !dbg !15388
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2660, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i8* %1, metadata !2661, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 %2, metadata !2662, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 0, metadata !2663, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i8 undef, metadata !2665, metadata !DIExpression()), !dbg !15389
  %4 = icmp eq i8* %1, null, !dbg !15390
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15392
  br i1 %6, label %46, label %7, !dbg !15392

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15393
  %9 = load i8, i8* %8, align 1, !dbg !15393
  call void @llvm.dbg.value(metadata i8 %9, metadata !2665, metadata !DIExpression()), !dbg !15389
  %10 = add i32 %2, -1, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %10, metadata !2662, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i8 0, metadata !2666, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i8 %9, metadata !2665, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 0, metadata !2663, metadata !DIExpression()), !dbg !15389
  %11 = icmp eq i8 %9, 0, !dbg !15396
  br i1 %11, label %12, label %15, !dbg !15398

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15399
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15400
  store i8 0, i8* %14, align 1, !dbg !15401
  br label %46, !dbg !15402

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2666, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i8 %17, metadata !2665, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 %18, metadata !2663, metadata !DIExpression()), !dbg !15389
  %19 = zext i8 %17 to i32, !dbg !15403
  %20 = zext i8 %16 to i32, !dbg !15404
  %21 = shl nuw i32 1, %20, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %21, metadata !2664, metadata !DIExpression()), !dbg !15389
  %22 = and i32 %21, %19, !dbg !15406
  %23 = icmp eq i32 %22, 0, !dbg !15408
  br i1 %23, label %42, label %24, !dbg !15409

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15410
  %26 = sub i32 %10, %18, !dbg !15411
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15412
  %28 = load i8*, i8** %27, align 4, !dbg !15412
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15413
  %30 = load i32, i32* %29, align 4, !dbg !15413
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15414
  %32 = add i32 %31, %18, !dbg !15415
  call void @llvm.dbg.value(metadata i32 %32, metadata !2663, metadata !DIExpression()), !dbg !15389
  %33 = trunc i32 %21 to i8, !dbg !15416
  %34 = xor i8 %33, -1, !dbg !15416
  %35 = and i8 %17, %34, !dbg !15416
  call void @llvm.dbg.value(metadata i8 %35, metadata !2665, metadata !DIExpression()), !dbg !15389
  %36 = icmp eq i8 %35, 0, !dbg !15417
  br i1 %36, label %12, label %37, !dbg !15419

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15420
  %39 = sub i32 %10, %32, !dbg !15422
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.263, i32 0, i32 0), i32 noundef 1) #26, !dbg !15423
  %41 = add i32 %40, %32, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %41, metadata !2663, metadata !DIExpression()), !dbg !15389
  br label %42, !dbg !15425

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15389
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15389
  call void @llvm.dbg.value(metadata i8 %44, metadata !2665, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 %43, metadata !2663, metadata !DIExpression()), !dbg !15389
  %45 = add i8 %16, 1, !dbg !15426
  call void @llvm.dbg.value(metadata i8 %45, metadata !2666, metadata !DIExpression()), !dbg !15395
  br label %15, !dbg !15398

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.264, i32 0, i32 0), %3 ], !dbg !15389
  ret i8* %47, !dbg !15427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15432, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i32 %1, metadata !15433, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i8* %2, metadata !15434, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i32 %3, metadata !15435, metadata !DIExpression()), !dbg !15437
  %5 = icmp ult i32 %1, %3, !dbg !15438
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %6, metadata !15436, metadata !DIExpression()), !dbg !15437
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15439
  ret i32 %6, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15445, metadata !DIExpression()), !dbg !15446
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15447
  ret void, !dbg !15448
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15458, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15459, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i32 %2, metadata !15460, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15461, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i8* %4, metadata !15462, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i8* %5, metadata !15463, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i8* %6, metadata !15464, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i32 %7, metadata !15465, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i32 %8, metadata !15466, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i8* undef, metadata !15467, metadata !DIExpression()), !dbg !15469
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15470
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15471
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15472
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15473
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15474
  call void @llvm.dbg.value(metadata i8* %13, metadata !15468, metadata !DIExpression()), !dbg !15469
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15475
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15476
  store i8* null, i8** %14, align 4, !dbg !15477
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15478
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15478
  br i1 %16, label %20, label %17, !dbg !15480

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15481
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15481
  br label %20, !dbg !15482

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15469
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15483
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15485
  ret i8* %13, !dbg !15486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15487 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15492, metadata !DIExpression()), !dbg !15493
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15494
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !15495
  ret void, !dbg !15496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15502, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 %1, metadata !15503, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 %2, metadata !15504, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 %3, metadata !15505, metadata !DIExpression()), !dbg !15506
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15507
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15508
  %6 = trunc i32 %3 to i8, !dbg !15509
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15510
  store i8 %6, i8* %7, align 4, !dbg !15511
  %8 = trunc i32 %2 to i8, !dbg !15512
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15513
  store i8 %8, i8* %9, align 1, !dbg !15514
  %10 = trunc i32 %1 to i8, !dbg !15515
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15516
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15516
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15516
  store i8 %10, i8* %13, align 2, !dbg !15517
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15518
  store i8 0, i8* %14, align 1, !dbg !15519
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !15520
  ret void, !dbg !15521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15526, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15527, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i32 %2, metadata !15528, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i32 0, metadata !15533, metadata !DIExpression()), !dbg !15534
  %4 = add i32 %2, 7, !dbg !15535
  %5 = and i32 %4, -8, !dbg !15535
  %6 = add i32 %5, 64, !dbg !15535
  call void @llvm.dbg.value(metadata i32 %6, metadata !15529, metadata !DIExpression()), !dbg !15534
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.274(%struct.z_thread_stack_element* noundef %1) #26, !dbg !15537
  call void @llvm.dbg.value(metadata i8* %7, metadata !15532, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i32 %5, metadata !15530, metadata !DIExpression()), !dbg !15534
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15538
  call void @llvm.dbg.value(metadata i8* %8, metadata !15531, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i32 0, metadata !15533, metadata !DIExpression()), !dbg !15534
  %9 = ptrtoint i8* %7 to i32, !dbg !15539
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15540
  store i32 %9, i32* %10, align 4, !dbg !15541
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15542
  store i32 %5, i32* %11, align 4, !dbg !15543
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15544
  store i32 0, i32* %12, align 4, !dbg !15545
  call void @llvm.dbg.value(metadata i8* %8, metadata !15531, metadata !DIExpression()), !dbg !15534
  ret i8* %8, !dbg !15546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.274(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15547 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15551, metadata !DIExpression()), !dbg !15552
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15553
  ret i8* %2, !dbg !15554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15555 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15560, metadata !DIExpression()), !dbg !15561
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15562
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15563
  ret void, !dbg !15564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15565 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15567, metadata !DIExpression()), !dbg !15568
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15569
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15570
  ret void, !dbg !15571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15572 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15576, metadata !DIExpression()), !dbg !15577
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15578
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15579
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15580
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15581
  ret void, !dbg !15582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15583 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15588, metadata !DIExpression()), !dbg !15589
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15590
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15591
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15592
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15593
  ret void, !dbg !15594
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15595 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15612, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15603, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15604, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 %2, metadata !15605, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15606, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i8* %4, metadata !15607, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i8* %5, metadata !15608, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i8* %6, metadata !15609, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 %7, metadata !15610, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 %8, metadata !15611, metadata !DIExpression()), !dbg !15613
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15614
  %13 = icmp eq i64 %11, -1, !dbg !15615
  br i1 %13, label %15, label %14, !dbg !15617

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15618
  br label %15, !dbg !15620

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15622 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15627, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15626, metadata !DIExpression()), !dbg !15628
  %4 = icmp eq i64 %3, 0, !dbg !15629
  br i1 %4, label %5, label %6, !dbg !15631

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15632
  br label %7, !dbg !15634

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15635
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()), !dbg !15643
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15644, !srcloc !15646
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15647
  ret void, !dbg !15648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15649 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15652, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15651, metadata !DIExpression()), !dbg !15653
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15654
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15655
  ret void, !dbg !15656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15657 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15659, metadata !DIExpression()), !dbg !15679
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15680

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15681
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15677, metadata !DIExpression()), !dbg !15682
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15683

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15659, metadata !DIExpression()), !dbg !15679
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15684
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15684
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15687
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15687
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15688
  %9 = load i32, i32* %8, align 4, !dbg !15688
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15689
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15689
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15690
  %13 = load i8*, i8** %12, align 4, !dbg !15690
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15691
  %15 = load i8*, i8** %14, align 4, !dbg !15691
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15692
  %17 = load i8*, i8** %16, align 4, !dbg !15692
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15693
  %19 = load i32, i32* %18, align 4, !dbg !15693
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15694
  %21 = load i32, i32* %20, align 4, !dbg !15694
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15695
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15696
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15697
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15698
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15698
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15699
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15659, metadata !DIExpression()), !dbg !15679
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15700
  br i1 %27, label %2, label %1, !dbg !15680, !llvm.loop !15702

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15681
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15677, metadata !DIExpression()), !dbg !15682
  br label %29, !dbg !15683

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15704
  ret void, !dbg !15705

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15677, metadata !DIExpression()), !dbg !15682
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15706
  %33 = load i32, i32* %32, align 4, !dbg !15706
  %34 = icmp eq i32 %33, -1, !dbg !15710
  br i1 %34, label %43, label %35, !dbg !15711

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15712
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15712
  %38 = icmp sgt i32 %33, 0, !dbg !15714
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15714
  %40 = zext i32 %39 to i64, !dbg !15714
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !15714
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15715
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15715
  br label %43, !dbg !15716

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15717
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15677, metadata !DIExpression()), !dbg !15682
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15718
  br i1 %45, label %30, label %29, !dbg !15683, !llvm.loop !15720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15722 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15727, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i64 %0, metadata !15729, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 1000, metadata !15734, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 10000, metadata !15735, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i8 1, metadata !15736, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i8 0, metadata !15737, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i8 1, metadata !15738, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i8 0, metadata !15739, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i8 1, metadata !15740, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i8 0, metadata !15741, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i64 0, metadata !15742, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i64 0, metadata !15742, metadata !DIExpression()), !dbg !15746
  %2 = mul i64 %0, 10, !dbg !15748
  ret i64 %2, !dbg !15754
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !15755 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15757, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i8* %1, metadata !15758, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i8* %2, metadata !15759, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i8* %3, metadata !15760, metadata !DIExpression()), !dbg !15761
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15762
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15763
  %7 = load i8, i8* %6, align 4, !dbg !15764
  %8 = or i8 %7, 4, !dbg !15764
  store i8 %8, i8* %6, align 4, !dbg !15764
  tail call void @z_thread_essential_clear() #26, !dbg !15765
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15766
  unreachable, !dbg !15766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15767 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15771, metadata !DIExpression()), !dbg !15772
  ret i32 -134, !dbg !15773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15778, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata i32 %1, metadata !15779, metadata !DIExpression()), !dbg !15780
  ret i32 -134, !dbg !15781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15789, metadata !DIExpression()), !dbg !15791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15790, metadata !DIExpression()), !dbg !15791
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15792
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15794
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15791
  ret i32 %6, !dbg !15795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !15796 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15800, metadata !DIExpression()), !dbg !15801
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15802
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15801
  ret i32 %3, !dbg !15804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15805 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15807
  ret void, !dbg !15808
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !15809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15811, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i8* %1, metadata !15812, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i8* %2, metadata !15813, metadata !DIExpression()), !dbg !15814
  br label %4, !dbg !15815

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15816, !srcloc !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !15819, metadata !DIExpression()) #25, !dbg !15824
  call void @llvm.dbg.value(metadata i32 undef, metadata !15820, metadata !DIExpression()) #25, !dbg !15824
  tail call fastcc void @k_cpu_idle() #26, !dbg !15825
  br label %4, !dbg !15815, !llvm.loop !15826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15828 {
  tail call void @arch_cpu_idle() #27, !dbg !15829
  ret void, !dbg !15830
}

; Function Attrs: optsize
declare !dbg !15831 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15836, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15837, metadata !DIExpression()), !dbg !15840
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15841
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15841
  %5 = load i8, i8* %4, align 2, !dbg !15841
  call void @llvm.dbg.value(metadata i8 %5, metadata !15838, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15840
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15842
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15842
  %8 = load i8, i8* %7, align 2, !dbg !15842
  call void @llvm.dbg.value(metadata i8 %8, metadata !15839, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15840
  %9 = icmp eq i8 %8, %5, !dbg !15843
  %10 = sext i8 %5 to i32, !dbg !15845
  %11 = sext i8 %8 to i32, !dbg !15845
  %12 = sub nsw i32 %11, %10, !dbg !15845
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15845
  ret i32 %13, !dbg !15846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15851, metadata !DIExpression()), !dbg !15852
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15853
  %3 = icmp eq i32 %2, 0, !dbg !15855
  br i1 %3, label %8, label %4, !dbg !15856

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15857
  %6 = add i32 %5, %2, !dbg !15859
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15860
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15861
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15862
  br label %8, !dbg !15863

8:                                                ; preds = %4, %1
  ret void, !dbg !15864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15869, metadata !DIExpression()), !dbg !15871
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15872
  call void @llvm.dbg.value(metadata i32 %1, metadata !15870, metadata !DIExpression()), !dbg !15871
  ret i32 %1, !dbg !15873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15878, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata i32 %1, metadata !15879, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata i32 0, metadata !15880, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !15896
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15898, !srcloc !15904
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15898
  call void @llvm.dbg.value(metadata i32 %4, metadata !15901, metadata !DIExpression()) #25, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %4, metadata !15895, metadata !DIExpression()) #25, !dbg !15896
  call void @llvm.dbg.value(metadata i32 %4, metadata !15886, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.value(metadata i32 undef, metadata !15880, metadata !DIExpression()), !dbg !15888
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15906
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15909
  %6 = icmp sgt i32 %0, 0, !dbg !15910
  %7 = icmp sgt i32 %5, 2, !dbg !15912
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15912
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15912
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15913
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15914
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15915
  call void @llvm.dbg.value(metadata i32 %4, metadata !15916, metadata !DIExpression()) #25, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %4, metadata !15924, metadata !DIExpression()) #25, !dbg !15927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15929, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !15880, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.value(metadata i32 undef, metadata !15880, metadata !DIExpression()), !dbg !15888
  ret void, !dbg !15931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !15932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15934, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.value(metadata i32 %0, metadata !15936, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i32 1000, metadata !15939, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 10000, metadata !15940, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i8 1, metadata !15941, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i1 true, metadata !15942, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i1 true, metadata !15943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i8 0, metadata !15944, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i1 true, metadata !15945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i1 false, metadata !15946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !15951
  %2 = mul i32 %0, 10, !dbg !15953
  ret i32 %2, !dbg !15959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15962, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !15965
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15967, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %3, metadata !15963, metadata !DIExpression()), !dbg !15964
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15970
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15972
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15973
  br i1 %6, label %7, label %8, !dbg !15974

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15975
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !15977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !15977
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !15979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15981, !srcloc !15930
  br label %24, !dbg !15982

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15983
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15984
  %10 = icmp eq i32 %9, 0, !dbg !15984
  br i1 %10, label %21, label %11, !dbg !15986

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15987
  br i1 %12, label %13, label %21, !dbg !15988

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15989
  %15 = icmp sgt i32 %14, %0, !dbg !15992
  br i1 %15, label %19, label %16, !dbg !15993

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15994
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15994
  call void @llvm.dbg.value(metadata i32 %18, metadata !15963, metadata !DIExpression()), !dbg !15964
  br label %22, !dbg !15996

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15997
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15997
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15999
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15964
  call void @llvm.dbg.value(metadata i32 %23, metadata !15963, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata i32 %23, metadata !15916, metadata !DIExpression()) #25, !dbg !16001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %23, metadata !15924, metadata !DIExpression()) #25, !dbg !16003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !16005, !srcloc !15930
  br label %24, !dbg !16006

24:                                               ; preds = %22, %7
  ret void, !dbg !16006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !16007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16011, metadata !DIExpression()), !dbg !16013
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !16014
  %3 = icmp eq i32 %2, 0, !dbg !16014
  br i1 %3, label %16, label %4, !dbg !16015

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16016
  br i1 %5, label %16, label %6, !dbg !16017

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16018
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16018
  %9 = load i8, i8* %8, align 2, !dbg !16018
  %10 = sext i8 %9 to i32, !dbg !16019
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16020
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !16021
  br i1 %12, label %16, label %13, !dbg !16022

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !16023
  %15 = xor i1 %14, true, !dbg !16024
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16013
  call void @llvm.dbg.value(metadata i1 %17, metadata !16012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16013
  ret i1 %17, !dbg !16025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16026 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16030, metadata !DIExpression()), !dbg !16032
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16031, metadata !DIExpression()), !dbg !16032
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !16034
  br i1 %3, label %5, label %4, !dbg !16036

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !16037
  br label %5, !dbg !16039

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16030, metadata !DIExpression()), !dbg !16032
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16040
  ret i32 %6, !dbg !16041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16044, metadata !DIExpression()), !dbg !16046
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16047
  %3 = load i8, i8* %2, align 1, !dbg !16047
  call void @llvm.dbg.value(metadata i8 %3, metadata !16045, metadata !DIExpression()), !dbg !16046
  %4 = and i8 %3, 31, !dbg !16048
  %5 = icmp ne i8 %4, 0, !dbg !16049
  ret i1 %5, !dbg !16050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16053, metadata !DIExpression()), !dbg !16054
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16055
  br i1 %2, label %3, label %7, !dbg !16057

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16058, metadata !DIExpression()) #25, !dbg !16061
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16064
  %5 = load i8, i8* %4, align 1, !dbg !16065
  %6 = and i8 %5, 127, !dbg !16065
  store i8 %6, i8* %4, align 1, !dbg !16065
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()) #25, !dbg !16069
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16073
  br label %7, !dbg !16074

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16075, metadata !DIExpression()) #25, !dbg !16078
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16080
  %9 = load i8, i8* %8, align 1, !dbg !16081
  %10 = or i8 %9, -128, !dbg !16081
  store i8 %10, i8* %8, align 1, !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16082, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16089, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16095, metadata !DIExpression()) #25, !dbg !16097
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16099
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !16096, metadata !DIExpression()) #25, !dbg !16097
  %12 = icmp eq %struct._dnode* %11, null, !dbg !16101
  br i1 %12, label %23, label %13, !dbg !16099

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16096, metadata !DIExpression()) #25, !dbg !16097
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !16103
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !16096, metadata !DIExpression()) #25, !dbg !16097
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !16104
  %17 = icmp sgt i32 %16, 0, !dbg !16107
  br i1 %17, label %18, label %20, !dbg !16108

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16109
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !16111
  br label %25, !dbg !16112

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !16101
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16096, metadata !DIExpression()) #25, !dbg !16097
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16101
  br i1 %22, label %23, label %13, !dbg !16099, !llvm.loop !16113

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16115
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !16116
  br label %25, !dbg !16117

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16118
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !16119
  %28 = zext i1 %27 to i32, !dbg !16119
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !16120
  ret void, !dbg !16121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16124, metadata !DIExpression()), !dbg !16125
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !16126
  ret i1 %2, !dbg !16127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !16128 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16130, metadata !DIExpression()), !dbg !16132
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16131, metadata !DIExpression()), !dbg !16132
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16133
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !16134
  ret void, !dbg !16135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16136 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16140, metadata !DIExpression()), !dbg !16141
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !16142
  br i1 %2, label %6, label %3, !dbg !16142

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16143
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16143
  br label %6, !dbg !16142

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16142
  ret %struct._dnode* %7, !dbg !16144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16149, metadata !DIExpression()), !dbg !16153
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16150, metadata !DIExpression()), !dbg !16153
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16154
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16154
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16151, metadata !DIExpression()), !dbg !16153
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16155
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16156
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16157
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16158
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16159
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16160
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16161
  ret void, !dbg !16162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16163 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16167, metadata !DIExpression()), !dbg !16169
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16168, metadata !DIExpression()), !dbg !16169
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16170
  br i1 %3, label %6, label %4, !dbg !16171

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16172
  br label %6, !dbg !16171

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16171
  ret %struct._dnode* %7, !dbg !16173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16174 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16178, metadata !DIExpression()), !dbg !16181
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16179, metadata !DIExpression()), !dbg !16181
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16182
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16182
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16180, metadata !DIExpression()), !dbg !16181
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16183
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16184
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16185
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16186
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16187
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16188
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16189
  ret void, !dbg !16190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16193, metadata !DIExpression()), !dbg !16195
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16203, metadata !DIExpression()) #25, !dbg !16205
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16206
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16207
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16207
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16194, metadata !DIExpression()), !dbg !16195
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16208, metadata !DIExpression()) #25, !dbg !16214
  call void @llvm.dbg.value(metadata i32 %0, metadata !16213, metadata !DIExpression()) #25, !dbg !16214
  %6 = icmp eq i32 %0, 0, !dbg !16217
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16219
  br i1 %6, label %8, label %15, !dbg !16220

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16221
  br i1 %9, label %15, label %10, !dbg !16223

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16224
  br i1 %11, label %15, label %12, !dbg !16226

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16227
  %14 = icmp eq i32 %13, 0, !dbg !16227
  br i1 %14, label %18, label %15, !dbg !16229

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16230
  br i1 %16, label %18, label %17, !dbg !16233

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16234
  br label %18, !dbg !16236

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16219
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16219
  ret void, !dbg !16237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16242, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16243, metadata !DIExpression()), !dbg !16245
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16246
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16244, metadata !DIExpression()), !dbg !16245
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16243, metadata !DIExpression()), !dbg !16245
  ret %struct.k_thread* %3, !dbg !16247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16250, metadata !DIExpression()), !dbg !16251
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16252
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16253
  %4 = xor i1 %3, true, !dbg !16254
  ret i1 %4, !dbg !16255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16256 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()), !dbg !16259
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16260
  %3 = load i16, i16* %2, align 2, !dbg !16260
  %4 = icmp ult i16 %3, 128, !dbg !16261
  %5 = zext i1 %4 to i32, !dbg !16261
  ret i32 %5, !dbg !16262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16263 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16269, metadata !DIExpression()), !dbg !16270
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16271
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16272
  %4 = xor i1 %3, true, !dbg !16273
  ret i1 %4, !dbg !16274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16275 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16281, metadata !DIExpression()), !dbg !16282
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16283
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16283
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16284
  ret i1 %4, !dbg !16285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16286 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16288, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16289, metadata !DIExpression()), !dbg !16290
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16291
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16291
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16292
  br i1 %5, label %9, label %6, !dbg !16293

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16294
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16294
  br label %9, !dbg !16293

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16293
  ret %struct._dnode* %10, !dbg !16295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16300, metadata !DIExpression()), !dbg !16301
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16302
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16302
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16303
  ret i1 %4, !dbg !16304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16305 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16309, metadata !DIExpression()), !dbg !16312
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16313
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16313
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16310, metadata !DIExpression()), !dbg !16312
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16314
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16314
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16311, metadata !DIExpression()), !dbg !16312
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16315
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16316
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16317
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16318
  tail call fastcc void @sys_dnode_init.279(%struct._dnode* noundef %0) #26, !dbg !16319
  ret void, !dbg !16320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.279(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16321 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16323, metadata !DIExpression()), !dbg !16324
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16325
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16326
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16327
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16328
  ret void, !dbg !16329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16334, metadata !DIExpression()), !dbg !16336
  call void @llvm.dbg.value(metadata i32 128, metadata !16335, metadata !DIExpression()), !dbg !16336
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16337
  %3 = load i8, i8* %2, align 1, !dbg !16337
  %4 = icmp slt i8 %3, 0, !dbg !16338
  ret i1 %4, !dbg !16339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16344, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 %1, metadata !16345, metadata !DIExpression()), !dbg !16346
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16347
  ret i1 %3, !dbg !16348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16351, metadata !DIExpression()), !dbg !16352
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16353
  ret i1 %2, !dbg !16354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16357, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.value(metadata i32 %1, metadata !16358, metadata !DIExpression()), !dbg !16359
  %3 = icmp slt i32 %0, %1, !dbg !16360
  ret i1 %3, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 0, metadata !16365, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16370
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16372, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %3, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i32 undef, metadata !16365, metadata !DIExpression()), !dbg !16369
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16375
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !16380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16380
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !16382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16384, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16365, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i32 undef, metadata !16365, metadata !DIExpression()), !dbg !16369
  ret void, !dbg !16385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16386 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16388, metadata !DIExpression()), !dbg !16389
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16390
  br i1 %2, label %24, label %3, !dbg !16392

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16393
  br i1 %4, label %5, label %24, !dbg !16394

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16075, metadata !DIExpression()) #25, !dbg !16395
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16398
  %7 = load i8, i8* %6, align 1, !dbg !16399
  %8 = or i8 %7, -128, !dbg !16399
  store i8 %8, i8* %6, align 1, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16082, metadata !DIExpression()) #25, !dbg !16400
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16089, metadata !DIExpression()) #25, !dbg !16402
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16095, metadata !DIExpression()) #25, !dbg !16402
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16404
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !16096, metadata !DIExpression()) #25, !dbg !16402
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16405
  br i1 %10, label %21, label %11, !dbg !16404

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16096, metadata !DIExpression()) #25, !dbg !16402
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16406
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16096, metadata !DIExpression()) #25, !dbg !16402
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16407
  %15 = icmp sgt i32 %14, 0, !dbg !16408
  br i1 %15, label %16, label %18, !dbg !16409

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16410
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16411
  br label %23, !dbg !16412

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16405
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !16096, metadata !DIExpression()) #25, !dbg !16402
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16405
  br i1 %20, label %21, label %11, !dbg !16404, !llvm.loop !16413

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16415
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16416
  br label %23, !dbg !16417

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16418
  br label %24, !dbg !16419

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16423, metadata !DIExpression()), !dbg !16424
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16425
  br i1 %2, label %6, label %3, !dbg !16426

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16427
  %5 = xor i1 %4, true, !dbg !16426
  br label %6, !dbg !16426

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16431, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata i32 0, metadata !16432, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16437
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16439, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16439
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !16441
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16441
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %3, metadata !16434, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.value(metadata i32 undef, metadata !16432, metadata !DIExpression()), !dbg !16436
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !16445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16445
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !16447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16449, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16432, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.value(metadata i32 undef, metadata !16432, metadata !DIExpression()), !dbg !16436
  ret void, !dbg !16450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16453, metadata !DIExpression()), !dbg !16455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16456
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16458, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16458
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !16460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16460
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !16456
  call void @llvm.dbg.value(metadata i32 %3, metadata !16454, metadata !DIExpression()), !dbg !16455
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16461
  br i1 %4, label %5, label %6, !dbg !16463

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !16464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16464
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !16467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16469, !srcloc !15930
  br label %8, !dbg !16470

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.284(%struct.k_thread* noundef %0) #26, !dbg !16471
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16472
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16473
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16473
  br label %8, !dbg !16474

8:                                                ; preds = %6, %5
  ret void, !dbg !16474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16477, metadata !DIExpression()), !dbg !16478
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16479
  %3 = load i8, i8* %2, align 1, !dbg !16479
  %4 = and i8 %3, 4, !dbg !16480
  %5 = icmp eq i8 %4, 0, !dbg !16481
  ret i1 %5, !dbg !16482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.284(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16485, metadata !DIExpression()), !dbg !16486
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16487
  %3 = load i8, i8* %2, align 1, !dbg !16488
  %4 = and i8 %3, -5, !dbg !16488
  store i8 %4, i8* %2, align 1, !dbg !16488
  ret void, !dbg !16489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16490 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16493, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16492, metadata !DIExpression()), !dbg !16494
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16495
  br i1 %4, label %5, label %9, !dbg !16497

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16498
  br i1 %6, label %7, label %9, !dbg !16499

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16500, metadata !DIExpression()) #25, !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16505, metadata !DIExpression()) #25, !dbg !16506
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16509
  br label %10, !dbg !16510

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !16514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16516, !srcloc !15930
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16522, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata i32 %0, metadata !16524, metadata !DIExpression()), !dbg !16529
  %2 = icmp eq i32 %0, 0, !dbg !16531
  br i1 %2, label %3, label %6, !dbg !16532

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16533, !srcloc !16540
  call void @llvm.dbg.value(metadata i32 %4, metadata !16536, metadata !DIExpression()) #25, !dbg !16541
  %5 = icmp eq i32 %4, 0, !dbg !16542
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16523
  ret i1 %7, !dbg !16543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16544 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16547
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16546, metadata !DIExpression()), !dbg !16548
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16549
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16550
  ret i1 %3, !dbg !16551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16554, metadata !DIExpression()), !dbg !16556
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %2, metadata !16555, metadata !DIExpression()), !dbg !16556
  ret i32 %2, !dbg !16558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16561, metadata !DIExpression()), !dbg !16565
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16566
  call void @llvm.dbg.value(metadata i32 0, metadata !16562, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16568
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16570, !srcloc !15904
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %4, metadata !15901, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %4, metadata !15895, metadata !DIExpression()) #25, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %4, metadata !16564, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !16562, metadata !DIExpression()), !dbg !16567
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16573
  br i1 %5, label %6, label %10, !dbg !16577

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16058, metadata !DIExpression()) #25, !dbg !16578
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16581
  %8 = load i8, i8* %7, align 1, !dbg !16582
  %9 = and i8 %8, 127, !dbg !16582
  store i8 %9, i8* %7, align 1, !dbg !16582
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()) #25, !dbg !16583
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16585
  br label %10, !dbg !16586

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16587
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16588
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16589
  %13 = zext i1 %12 to i32, !dbg !16589
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16590
  call void @llvm.dbg.value(metadata i32 %4, metadata !15916, metadata !DIExpression()) #25, !dbg !16591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16591
  call void @llvm.dbg.value(metadata i32 %4, metadata !15924, metadata !DIExpression()) #25, !dbg !16593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16595, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16562, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !16562, metadata !DIExpression()), !dbg !16567
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16596
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16598
  br i1 %15, label %16, label %17, !dbg !16599

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16600
  br label %17, !dbg !16602

17:                                               ; preds = %16, %10
  ret void, !dbg !16603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16606, metadata !DIExpression()), !dbg !16607
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16608
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16609
  ret i32 %3, !dbg !16610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16613, metadata !DIExpression()), !dbg !16614
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16615
  %3 = load i8, i8* %2, align 1, !dbg !16616
  %4 = or i8 %3, 16, !dbg !16616
  store i8 %4, i8* %2, align 1, !dbg !16616
  ret void, !dbg !16617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16618 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16619, !srcloc !15904
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16619
  call void @llvm.dbg.value(metadata i32 %2, metadata !15901, metadata !DIExpression()) #25, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16621
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16622
  ret void, !dbg !16623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16626, metadata !DIExpression()), !dbg !16627
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16628
  br i1 %2, label %3, label %5, !dbg !16630

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16631
  br label %6, !dbg !16633

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15924, metadata !DIExpression()) #25, !dbg !16634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16637, !srcloc !15930
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16641, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16644
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16646, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !16644
  call void @llvm.dbg.value(metadata i32 %3, metadata !16642, metadata !DIExpression()), !dbg !16643
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16649
  br i1 %4, label %6, label %5, !dbg !16651

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !16652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !16655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16657, !srcloc !15930
  br label %8, !dbg !16658

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16659
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16660
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16661
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16661
  br label %8, !dbg !16662

8:                                                ; preds = %6, %5
  ret void, !dbg !16662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16665, metadata !DIExpression()), !dbg !16666
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16667
  %3 = load i8, i8* %2, align 1, !dbg !16667
  %4 = and i8 %3, 16, !dbg !16668
  %5 = icmp ne i8 %4, 0, !dbg !16669
  ret i1 %5, !dbg !16670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16673, metadata !DIExpression()), !dbg !16674
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16675
  %3 = load i8, i8* %2, align 1, !dbg !16676
  %4 = and i8 %3, -17, !dbg !16676
  store i8 %4, i8* %2, align 1, !dbg !16676
  ret void, !dbg !16677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16678 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16688, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16686, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16687, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 0, metadata !16689, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16694
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16696, !srcloc !15904
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %5, metadata !15901, metadata !DIExpression()) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %5, metadata !15895, metadata !DIExpression()) #25, !dbg !16694
  call void @llvm.dbg.value(metadata i32 %5, metadata !16691, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i32 undef, metadata !16689, metadata !DIExpression()), !dbg !16693
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %5, metadata !15916, metadata !DIExpression()) #25, !dbg !16702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16702
  call void @llvm.dbg.value(metadata i32 %5, metadata !15924, metadata !DIExpression()) #25, !dbg !16704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16706, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16689, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i32 undef, metadata !16689, metadata !DIExpression()), !dbg !16693
  ret void, !dbg !16707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16708 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16712, metadata !DIExpression()), !dbg !16713
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16710, metadata !DIExpression()), !dbg !16713
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16711, metadata !DIExpression()), !dbg !16713
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16714
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16715
  ret void, !dbg !16716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16721, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16722, metadata !DIExpression()), !dbg !16723
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16724
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16725
  %3 = icmp eq %union.anon* %1, null, !dbg !16726
  br i1 %3, label %21, label %4, !dbg !16728

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16729
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16731
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16732
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16089, metadata !DIExpression()) #25, !dbg !16733
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16095, metadata !DIExpression()) #25, !dbg !16733
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !16735
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16096, metadata !DIExpression()) #25, !dbg !16733
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16736
  br i1 %8, label %19, label %9, !dbg !16735

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16096, metadata !DIExpression()) #25, !dbg !16733
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16737
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16096, metadata !DIExpression()) #25, !dbg !16733
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16738
  %13 = icmp sgt i32 %12, 0, !dbg !16739
  br i1 %13, label %14, label %16, !dbg !16740

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16741
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16742
  br label %21, !dbg !16743

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16736
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16096, metadata !DIExpression()) #25, !dbg !16733
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16736
  br i1 %18, label %19, label %9, !dbg !16735, !llvm.loop !16744

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16746
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16747
  br label %21, !dbg !16748

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16750 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16755, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16754, metadata !DIExpression()), !dbg !16756
  %4 = icmp eq i64 %3, -1, !dbg !16757
  br i1 %4, label %6, label %5, !dbg !16759

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.285(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16760
  br label %6, !dbg !16762

6:                                                ; preds = %5, %2
  ret void, !dbg !16763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.285(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16764 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16767, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16766, metadata !DIExpression()), !dbg !16768
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16769
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16770
  ret void, !dbg !16771
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16772 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16774, metadata !DIExpression()), !dbg !16782
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16783
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16783
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16775, metadata !DIExpression()), !dbg !16782
  call void @llvm.dbg.value(metadata i32 0, metadata !16776, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16785
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16787, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()), !dbg !16784
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16790
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16791
  %7 = load i8, i8* %6, align 1, !dbg !16791
  %8 = and i8 %7, 40, !dbg !16792
  %9 = icmp eq i8 %8, 0, !dbg !16792
  call void @llvm.dbg.value(metadata i1 %9, metadata !16779, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16793
  br i1 %9, label %10, label %17, !dbg !16794

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16795
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16795
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16795
  %14 = icmp eq %union.anon* %13, null, !dbg !16799
  br i1 %14, label %16, label %15, !dbg !16800

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16801
  br label %16, !dbg !16803

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.284(%struct.k_thread* noundef nonnull %3) #26, !dbg !16804
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16805
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16806
  br label %17, !dbg !16807

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16787
  call void @llvm.dbg.value(metadata i32 %18, metadata !15901, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %18, metadata !15895, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %18, metadata !16778, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()) #25, !dbg !16808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()) #25, !dbg !16810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16812, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16776, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()), !dbg !16784
  ret void, !dbg !16813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16816, metadata !DIExpression()), !dbg !16817
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16818
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16819
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16820
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16821
  ret void, !dbg !16822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16825, metadata !DIExpression()), !dbg !16826
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16827
  %3 = load i8, i8* %2, align 1, !dbg !16828
  %4 = and i8 %3, -3, !dbg !16828
  store i8 %4, i8* %2, align 1, !dbg !16828
  ret void, !dbg !16829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16832, metadata !DIExpression()), !dbg !16833
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16834
  br i1 %2, label %3, label %7, !dbg !16836

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16058, metadata !DIExpression()) #25, !dbg !16837
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16840
  %5 = load i8, i8* %4, align 1, !dbg !16841
  %6 = and i8 %5, 127, !dbg !16841
  store i8 %6, i8* %4, align 1, !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()) #25, !dbg !16842
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16844
  br label %7, !dbg !16845

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16846
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16847
  %10 = zext i1 %9 to i32, !dbg !16847
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16848
  ret void, !dbg !16849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16852, metadata !DIExpression()), !dbg !16853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16854
  %3 = load i8, i8* %2, align 1, !dbg !16855
  %4 = or i8 %3, 2, !dbg !16855
  store i8 %4, i8* %2, align 1, !dbg !16855
  ret void, !dbg !16856
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16859, metadata !DIExpression()), !dbg !16863
  call void @llvm.dbg.value(metadata i32 0, metadata !16860, metadata !DIExpression()), !dbg !16864
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16865
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16867, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16867
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16869
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !16865
  call void @llvm.dbg.value(metadata i32 %3, metadata !16862, metadata !DIExpression()), !dbg !16864
  call void @llvm.dbg.value(metadata i32 undef, metadata !16860, metadata !DIExpression()), !dbg !16864
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16870
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !16875
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16877, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16860, metadata !DIExpression()), !dbg !16864
  call void @llvm.dbg.value(metadata i32 undef, metadata !16860, metadata !DIExpression()), !dbg !16864
  ret void, !dbg !16878
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16879 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16885, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata i32 %0, metadata !16883, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16884, metadata !DIExpression()), !dbg !16890
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16891
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16892
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16893
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16894
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %6, metadata !16886, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata i32 0, metadata !16887, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16897
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16899, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16897
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()), !dbg !16896
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16902
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16906
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16907
  br i1 %10, label %11, label %12, !dbg !16908

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16909
  br label %12, !dbg !16911

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16899
  call void @llvm.dbg.value(metadata i32 %13, metadata !15901, metadata !DIExpression()) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 %13, metadata !15895, metadata !DIExpression()) #25, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %13, metadata !16889, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()) #25, !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16912
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()) #25, !dbg !16914
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16916, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16887, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()), !dbg !16896
  ret i32 %6, !dbg !16917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16918 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16923, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata i64 undef, metadata !16925, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16922, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16924, metadata !DIExpression()), !dbg !16926
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16927
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16928
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16929
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16931, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16929
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16934
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16935
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16500, metadata !DIExpression()) #25, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16505, metadata !DIExpression()) #25, !dbg !16936
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16938
  ret i32 %9, !dbg !16939
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16940 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16944, metadata !DIExpression()), !dbg !16949
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16945, metadata !DIExpression()), !dbg !16949
  call void @llvm.dbg.value(metadata i32 0, metadata !16946, metadata !DIExpression()), !dbg !16950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16951
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16953, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !16955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata i32 undef, metadata !16948, metadata !DIExpression()), !dbg !16950
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16945, metadata !DIExpression()), !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16946, metadata !DIExpression()), !dbg !16950
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16956
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16945, metadata !DIExpression()), !dbg !16949
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16959
  br i1 %5, label %7, label %6, !dbg !16961

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16962
  br label %7, !dbg !16964

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16953
  call void @llvm.dbg.value(metadata i32 %8, metadata !15901, metadata !DIExpression()) #25, !dbg !16955
  call void @llvm.dbg.value(metadata i32 %8, metadata !15895, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %8, metadata !16948, metadata !DIExpression()), !dbg !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()) #25, !dbg !16965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()) #25, !dbg !16967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16969, !srcloc !15930
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16945, metadata !DIExpression()), !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16946, metadata !DIExpression()), !dbg !16950
  ret %struct.k_thread* %4, !dbg !16970
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16971 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16973, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16974, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 0, metadata !16975, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !16980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16982, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !16984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !16984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16977, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16974, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16975, metadata !DIExpression()), !dbg !16979
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16985
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16974, metadata !DIExpression()), !dbg !16978
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16988
  br i1 %5, label %8, label %6, !dbg !16990

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16991
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16993
  br label %8, !dbg !16994

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %9, metadata !15901, metadata !DIExpression()) #25, !dbg !16984
  call void @llvm.dbg.value(metadata i32 %9, metadata !15895, metadata !DIExpression()) #25, !dbg !16980
  call void @llvm.dbg.value(metadata i32 %9, metadata !16977, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()) #25, !dbg !16995
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()) #25, !dbg !16997
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16999, !srcloc !15930
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16974, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16975, metadata !DIExpression()), !dbg !16979
  ret %struct.k_thread* %4, !dbg !17000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17003, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16859, metadata !DIExpression()) #25, !dbg !17005
  call void @llvm.dbg.value(metadata i32 0, metadata !16860, metadata !DIExpression()) #25, !dbg !17007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17008
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17010, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17010
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17012
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !17008
  call void @llvm.dbg.value(metadata i32 %3, metadata !16862, metadata !DIExpression()) #25, !dbg !17007
  call void @llvm.dbg.value(metadata i32 undef, metadata !16860, metadata !DIExpression()) #25, !dbg !17007
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17013
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !17014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17014
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !17016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17018, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !16860, metadata !DIExpression()) #25, !dbg !17007
  call void @llvm.dbg.value(metadata i32 undef, metadata !16860, metadata !DIExpression()) #25, !dbg !17007
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17019
  ret void, !dbg !17020
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17023, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata i32 %1, metadata !17024, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata i8 0, metadata !17025, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata i32 0, metadata !17026, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17031
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17033, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !17035
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17035
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !17031
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i8 poison, metadata !17025, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata i32 undef, metadata !17026, metadata !DIExpression()), !dbg !17030
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !17036
  call void @llvm.dbg.value(metadata i1 %6, metadata !17025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17029
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !17039

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16058, metadata !DIExpression()) #25, !dbg !17040
  %11 = load i8, i8* %4, align 1, !dbg !17046
  %12 = and i8 %11, 127, !dbg !17046
  store i8 %12, i8* %4, align 1, !dbg !17046
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()) #25, !dbg !17047
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17049
  store i8 %9, i8* %8, align 2, !dbg !17050
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16075, metadata !DIExpression()) #25, !dbg !17051
  %13 = load i8, i8* %4, align 1, !dbg !17053
  %14 = or i8 %13, -128, !dbg !17053
  store i8 %14, i8* %4, align 1, !dbg !17053
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16082, metadata !DIExpression()) #25, !dbg !17054
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16089, metadata !DIExpression()) #25, !dbg !17056
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16095, metadata !DIExpression()) #25, !dbg !17056
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17058
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16096, metadata !DIExpression()) #25, !dbg !17056
  %16 = icmp eq %struct._dnode* %15, null, !dbg !17059
  br i1 %16, label %26, label %17, !dbg !17058

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !16096, metadata !DIExpression()) #25, !dbg !17056
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !17060
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !16096, metadata !DIExpression()) #25, !dbg !17056
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !17061
  %21 = icmp sgt i32 %20, 0, !dbg !17062
  br i1 %21, label %22, label %23, !dbg !17063

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !17064
  br label %27, !dbg !17065

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !17059
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16096, metadata !DIExpression()) #25, !dbg !17056
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17059
  br i1 %25, label %26, label %17, !dbg !17058, !llvm.loop !17066

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !17068
  br label %27, !dbg !17069

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17070
  br label %29, !dbg !17071

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !17072
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !17033
  call void @llvm.dbg.value(metadata i32 %30, metadata !15901, metadata !DIExpression()) #25, !dbg !17035
  call void @llvm.dbg.value(metadata i32 %30, metadata !15895, metadata !DIExpression()) #25, !dbg !17031
  call void @llvm.dbg.value(metadata i32 %30, metadata !17028, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()) #25, !dbg !17074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()) #25, !dbg !17076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !17078, !srcloc !15930
  call void @llvm.dbg.value(metadata i8 poison, metadata !17025, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata i32 undef, metadata !17026, metadata !DIExpression()), !dbg !17030
  ret i1 %6, !dbg !17079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17084, metadata !DIExpression()), !dbg !17087
  call void @llvm.dbg.value(metadata i32 %1, metadata !17085, metadata !DIExpression()), !dbg !17087
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17088
  call void @llvm.dbg.value(metadata i1 %3, metadata !17086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17087
  br i1 %3, label %4, label %12, !dbg !17089

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17091
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17092
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17092
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17092
  %9 = load i8, i8* %8, align 1, !dbg !17092
  %10 = icmp eq i8 %9, 0, !dbg !17093
  br i1 %10, label %11, label %12, !dbg !17094

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17095
  br label %12, !dbg !17097

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17099 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17101, metadata !DIExpression()), !dbg !17104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17105
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17107, !srcloc !15904
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17107
  call void @llvm.dbg.value(metadata i32 %2, metadata !15901, metadata !DIExpression()) #25, !dbg !17109
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17109
  call void @llvm.dbg.value(metadata i32 %2, metadata !15895, metadata !DIExpression()) #25, !dbg !17105
  call void @llvm.dbg.value(metadata i32 %2, metadata !17103, metadata !DIExpression()), !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !17101, metadata !DIExpression()), !dbg !17104
  tail call fastcc void @z_sched_lock() #26, !dbg !17110
  call void @llvm.dbg.value(metadata i32 %2, metadata !15916, metadata !DIExpression()) #25, !dbg !17113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17113
  call void @llvm.dbg.value(metadata i32 %2, metadata !15924, metadata !DIExpression()) #25, !dbg !17115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17117, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !17101, metadata !DIExpression()), !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !17101, metadata !DIExpression()), !dbg !17104
  ret void, !dbg !17118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17119 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17120
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17121
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !17121
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !17121
  %5 = load i8, i8* %4, align 1, !dbg !17122
  %6 = add i8 %5, -1, !dbg !17122
  store i8 %6, i8* %4, align 1, !dbg !17122
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17123, !srcloc !17125
  ret void, !dbg !17126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17127 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17129, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17133
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17135, !srcloc !15904
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17135
  call void @llvm.dbg.value(metadata i32 %2, metadata !15901, metadata !DIExpression()) #25, !dbg !17137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %2, metadata !15895, metadata !DIExpression()) #25, !dbg !17133
  call void @llvm.dbg.value(metadata i32 %2, metadata !17131, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17132
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17138
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !17141
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !17141
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !17141
  %7 = load i8, i8* %6, align 1, !dbg !17142
  %8 = add i8 %7, 1, !dbg !17142
  store i8 %8, i8* %6, align 1, !dbg !17142
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %2, metadata !15916, metadata !DIExpression()) #25, !dbg !17144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17144
  call void @llvm.dbg.value(metadata i32 %2, metadata !15924, metadata !DIExpression()) #25, !dbg !17146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17148, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !17129, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17132
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17149
  ret void, !dbg !17150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !17151 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17152
  ret %struct.k_thread* %1, !dbg !17153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !17154 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17158, metadata !DIExpression()), !dbg !17163
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17159, metadata !DIExpression()), !dbg !17163
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17160, metadata !DIExpression()), !dbg !17163
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17165
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17161, metadata !DIExpression()), !dbg !17163
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17166
  call void @llvm.dbg.value(metadata i32 %5, metadata !17162, metadata !DIExpression()), !dbg !17163
  %6 = icmp sgt i32 %5, 0, !dbg !17167
  br i1 %6, label %17, label %7, !dbg !17169

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17170
  br i1 %8, label %17, label %9, !dbg !17172

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17173
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17173
  %12 = load i32, i32* %11, align 8, !dbg !17173
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17175
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17175
  %15 = load i32, i32* %14, align 8, !dbg !17175
  %16 = icmp ult i32 %12, %15, !dbg !17176
  br label %17, !dbg !17177

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17178
  ret i1 %18, !dbg !17179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17180 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17197, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17198, metadata !DIExpression()), !dbg !17212
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17213
  %5 = load i32, i32* %4, align 4, !dbg !17214
  %6 = add nsw i32 %5, 1, !dbg !17214
  store i32 %6, i32* %4, align 4, !dbg !17214
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17215
  store i32 %5, i32* %7, align 8, !dbg !17216
  %8 = load i32, i32* %4, align 4, !dbg !17217
  %9 = icmp eq i32 %8, 0, !dbg !17218
  br i1 %9, label %10, label %32, !dbg !17219

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17220
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17220
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17200, metadata !DIExpression()), !dbg !17220
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17220
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17220
  %14 = load i32, i32* %13, align 4, !dbg !17220
  %15 = shl i32 %14, 2, !dbg !17220
  %16 = alloca i8, i32 %15, align 8, !dbg !17220
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17220
  store i8* %16, i8** %17, align 4, !dbg !17220
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17220
  %19 = alloca i8, i32 %14, align 8, !dbg !17220
  store i8* %19, i8** %18, align 4, !dbg !17220
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17220
  store i32 -1, i32* %20, align 4, !dbg !17220
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17221
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17209, metadata !DIExpression()), !dbg !17222
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17199, metadata !DIExpression()), !dbg !17212
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17223
  br i1 %22, label %23, label %24, !dbg !17220

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17223
  br label %32, !dbg !17224

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17199, metadata !DIExpression()), !dbg !17212
  %26 = load i32, i32* %4, align 4, !dbg !17225
  %27 = add nsw i32 %26, 1, !dbg !17225
  store i32 %27, i32* %4, align 4, !dbg !17225
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17227
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17227
  store i32 %26, i32* %29, align 8, !dbg !17228
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17221
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17209, metadata !DIExpression()), !dbg !17222
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17199, metadata !DIExpression()), !dbg !17212
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17223
  br i1 %31, label %23, label %24, !dbg !17220, !llvm.loop !17229

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17231
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17232
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17233
  ret void, !dbg !17234
}

; Function Attrs: optsize
declare !dbg !17235 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17240 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17243 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17246, metadata !DIExpression()), !dbg !17247
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17248
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17249
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17250
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17251
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17251
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17253
  br i1 %7, label %8, label %10, !dbg !17254

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17255
  store i32 0, i32* %9, align 4, !dbg !17257
  br label %10, !dbg !17258

10:                                               ; preds = %8, %2
  ret void, !dbg !17259
}

; Function Attrs: optsize
declare !dbg !17260 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17261 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17265, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17266, metadata !DIExpression()), !dbg !17268
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17269
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17270
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17267, metadata !DIExpression()), !dbg !17268
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17266, metadata !DIExpression()), !dbg !17268
  ret %struct.k_thread* %4, !dbg !17271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17272 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17276, metadata !DIExpression()), !dbg !17277
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17278
  ret %struct.rbnode* %2, !dbg !17279
}

; Function Attrs: optsize
declare !dbg !17280 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17283 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17295, metadata !DIExpression()), !dbg !17299
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17300
  %3 = load i32, i32* %2, align 4, !dbg !17300
  %4 = icmp eq i32 %3, 0, !dbg !17302
  br i1 %4, label %10, label %5, !dbg !17303

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17296, metadata !DIExpression()), !dbg !17299
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17304, !range !9601
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17305
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17297, metadata !DIExpression()), !dbg !17299
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17306
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17298, metadata !DIExpression()), !dbg !17299
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17296, metadata !DIExpression()), !dbg !17299
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17299
  ret %struct.k_thread* %11, !dbg !17307
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17308 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17312, metadata !DIExpression()), !dbg !17315
  call void @llvm.dbg.value(metadata i32 0, metadata !17313, metadata !DIExpression()), !dbg !17315
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17316
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17314, metadata !DIExpression()), !dbg !17315
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17317
  br i1 %3, label %8, label %4, !dbg !17318

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17319
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17321
  call void @llvm.dbg.value(metadata i32 1, metadata !17313, metadata !DIExpression()), !dbg !17315
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17316
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17314, metadata !DIExpression()), !dbg !17315
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17317
  br i1 %7, label %8, label %4, !dbg !17318, !llvm.loop !17322

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17315
  ret i32 %9, !dbg !17324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17325 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17327, metadata !DIExpression()), !dbg !17328
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17329
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17330
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17331
  ret %struct.k_thread* %4, !dbg !17332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17333 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17342, metadata !DIExpression()), !dbg !17343
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17344
  tail call fastcc void @sys_dlist_init.292(%struct._dnode* noundef nonnull %2) #26, !dbg !17345
  ret void, !dbg !17346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.292(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17347 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17351, metadata !DIExpression()), !dbg !17352
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17353
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17354
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17355
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17356
  ret void, !dbg !17357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17358 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17359
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17360
  ret void, !dbg !17361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17367, metadata !DIExpression()), !dbg !17368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17369
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17369
  %4 = load i8, i8* %3, align 2, !dbg !17369
  %5 = sext i8 %4 to i32, !dbg !17370
  ret i32 %5, !dbg !17371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17376, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 %1, metadata !17377, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17378, metadata !DIExpression()), !dbg !17379
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17380
  ret void, !dbg !17381
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17382 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17383
  br i1 %1, label %8, label %2, !dbg !17384

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17385
  br i1 %3, label %8, label %4, !dbg !17386

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17387
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17388
  %7 = xor i1 %6, true, !dbg !17386
  br label %8, !dbg !17386

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17390 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17391, !range !8790
  %2 = icmp eq i8 %1, 0, !dbg !17391
  ret i1 %2, !dbg !17392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17393 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17396
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17398, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !17396
  call void @llvm.dbg.value(metadata i32 undef, metadata !17395, metadata !DIExpression()), !dbg !17401
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17402
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16058, metadata !DIExpression()) #25, !dbg !17405
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17407
  %4 = load i8, i8* %3, align 1, !dbg !17408
  %5 = and i8 %4, 127, !dbg !17408
  store i8 %5, i8* %3, align 1, !dbg !17408
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16066, metadata !DIExpression()) #25, !dbg !17409
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17411
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17412
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16075, metadata !DIExpression()) #25, !dbg !17413
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17415
  %8 = load i8, i8* %7, align 1, !dbg !17416
  %9 = or i8 %8, -128, !dbg !17416
  store i8 %9, i8* %7, align 1, !dbg !17416
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16082, metadata !DIExpression()) #25, !dbg !17417
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16089, metadata !DIExpression()) #25, !dbg !17419
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16095, metadata !DIExpression()) #25, !dbg !17419
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17421
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16096, metadata !DIExpression()) #25, !dbg !17419
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17422
  br i1 %11, label %22, label %12, !dbg !17421

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16096, metadata !DIExpression()) #25, !dbg !17419
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16096, metadata !DIExpression()) #25, !dbg !17419
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17424
  %16 = icmp sgt i32 %15, 0, !dbg !17425
  br i1 %16, label %17, label %19, !dbg !17426

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17427
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17428
  br label %24, !dbg !17429

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17422
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16096, metadata !DIExpression()) #25, !dbg !17419
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17422
  br i1 %21, label %22, label %12, !dbg !17421, !llvm.loop !17430

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17432
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17433
  br label %24, !dbg !17434

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17398
  call void @llvm.dbg.value(metadata i32 %25, metadata !15901, metadata !DIExpression()) #25, !dbg !17400
  call void @llvm.dbg.value(metadata i32 %25, metadata !15895, metadata !DIExpression()) #25, !dbg !17396
  call void @llvm.dbg.value(metadata i32 %25, metadata !17395, metadata !DIExpression()), !dbg !17401
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #25, !dbg !17436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16505, metadata !DIExpression()) #25, !dbg !17436
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17438
  ret void, !dbg !17439
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17440 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17444, metadata !DIExpression()), !dbg !17447
  %3 = icmp eq i64 %2, -1, !dbg !17448
  br i1 %3, label %4, label %6, !dbg !17450

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17451
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17453
  br label %11, !dbg !17454

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17445, metadata !DIExpression()), !dbg !17447
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17455
  %8 = sext i32 %7 to i64, !dbg !17455
  call void @llvm.dbg.value(metadata i64 %8, metadata !17445, metadata !DIExpression()), !dbg !17447
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17456
  %10 = trunc i64 %9 to i32, !dbg !17456
  call void @llvm.dbg.value(metadata i32 %10, metadata !17446, metadata !DIExpression()), !dbg !17447
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17447
  ret i32 %12, !dbg !17457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17462, metadata !DIExpression()), !dbg !17463
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17464, !srcloc !17466
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17467
  ret void, !dbg !17468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17469 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17473, metadata !DIExpression()), !dbg !17477
  %2 = icmp eq i64 %0, 0, !dbg !17478
  br i1 %2, label %3, label %4, !dbg !17480

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17481
  br label %29, !dbg !17483

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17475, metadata !DIExpression()), !dbg !17477
  %5 = icmp sgt i64 %0, -3, !dbg !17484
  br i1 %5, label %6, label %10, !dbg !17486

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17487
  %8 = trunc i64 %0 to i32, !dbg !17489
  %9 = add i32 %7, %8, !dbg !17489
  call void @llvm.dbg.value(metadata i32 %9, metadata !17474, metadata !DIExpression()), !dbg !17477
  br label %13, !dbg !17490

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17491
  %12 = sub i32 -2, %11, !dbg !17491
  call void @llvm.dbg.value(metadata i32 %12, metadata !17474, metadata !DIExpression()), !dbg !17477
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17493
  call void @llvm.dbg.value(metadata i32 %14, metadata !17474, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17494
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17496, !srcloc !15904
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17496
  call void @llvm.dbg.value(metadata i32 %16, metadata !15901, metadata !DIExpression()) #25, !dbg !17498
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17498
  call void @llvm.dbg.value(metadata i32 %16, metadata !15895, metadata !DIExpression()) #25, !dbg !17494
  call void @llvm.dbg.value(metadata i32 %16, metadata !17476, metadata !DIExpression()), !dbg !17477
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17499
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17500
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17501
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17502
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17503
  tail call fastcc void @z_add_thread_timeout.285(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17503
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17504
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %16, metadata !16500, metadata !DIExpression()) #25, !dbg !17506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16505, metadata !DIExpression()) #25, !dbg !17506
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17508
  %22 = zext i32 %14 to i64, !dbg !17509
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17510
  %24 = zext i32 %23 to i64, !dbg !17510
  %25 = sub nsw i64 %22, %24, !dbg !17511
  call void @llvm.dbg.value(metadata i64 %25, metadata !17473, metadata !DIExpression()), !dbg !17477
  %26 = icmp sgt i64 %25, 0, !dbg !17512
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17512
  %28 = trunc i64 %27 to i32, !dbg !17512
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17477
  ret i32 %30, !dbg !17513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17514 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17516, metadata !DIExpression()), !dbg !17517
  call void @llvm.dbg.value(metadata i64 %0, metadata !15936, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i32 10000, metadata !15939, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i32 1000, metadata !15940, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i8 1, metadata !15941, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i1 false, metadata !15942, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17518
  call void @llvm.dbg.value(metadata i1 false, metadata !15943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17518
  call void @llvm.dbg.value(metadata i8 0, metadata !15944, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i1 false, metadata !15945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17518
  call void @llvm.dbg.value(metadata i1 true, metadata !15946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17518
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata i64 %0, metadata !15936, metadata !DIExpression()), !dbg !17518
  %2 = udiv i64 %0, 10, !dbg !17520
  ret i64 %2, !dbg !17524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17525 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17526, !srcloc !17528
  tail call void @z_impl_k_yield() #26, !dbg !17529
  ret void, !dbg !17530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17535, metadata !DIExpression()), !dbg !17537
  %2 = sext i32 %0 to i64, !dbg !17538
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17539
  call void @llvm.dbg.value(metadata i64 %3, metadata !17536, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17537
  %4 = shl i64 %3, 32, !dbg !17540
  %5 = ashr exact i64 %4, 32, !dbg !17540
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17541
  call void @llvm.dbg.value(metadata i32 %6, metadata !17536, metadata !DIExpression()), !dbg !17537
  %7 = sext i32 %6 to i64, !dbg !17542
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17543
  %9 = trunc i64 %8 to i32, !dbg !17543
  ret i32 %9, !dbg !17544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !17545 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17547, metadata !DIExpression()), !dbg !17548
  call void @llvm.dbg.value(metadata i64 %0, metadata !15936, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15939, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i32 10000, metadata !15940, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i8 1, metadata !15941, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i1 false, metadata !15942, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17549
  call void @llvm.dbg.value(metadata i1 true, metadata !15943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17549
  call void @llvm.dbg.value(metadata i8 0, metadata !15944, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i1 false, metadata !15945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17549
  call void @llvm.dbg.value(metadata i1 true, metadata !15946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17549
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !17549
  %2 = add i64 %0, 99, !dbg !17551
  call void @llvm.dbg.value(metadata i64 %2, metadata !15936, metadata !DIExpression()), !dbg !17549
  %3 = udiv i64 %2, 100, !dbg !17552
  ret i64 %3, !dbg !17553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17554 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17556, metadata !DIExpression()), !dbg !17557
  call void @llvm.dbg.value(metadata i64 %0, metadata !15936, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.value(metadata i32 10000, metadata !15939, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15940, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.value(metadata i8 1, metadata !15941, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.value(metadata i1 false, metadata !15942, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17558
  call void @llvm.dbg.value(metadata i1 false, metadata !15943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17558
  call void @llvm.dbg.value(metadata i8 0, metadata !15944, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.value(metadata i1 true, metadata !15945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17558
  call void @llvm.dbg.value(metadata i1 false, metadata !15946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17558
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.value(metadata i64 0, metadata !15947, metadata !DIExpression()), !dbg !17558
  %2 = mul i64 %0, 100, !dbg !17560
  ret i64 %2, !dbg !17562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17565, metadata !DIExpression()), !dbg !17566
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17567
  br i1 %2, label %14, label %3, !dbg !17569

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17570
  %5 = icmp slt i32 %4, 0, !dbg !17572
  br i1 %5, label %6, label %10, !dbg !17573

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17574
  %8 = load i8, i8* %7, align 1, !dbg !17574
  %9 = icmp eq i8 %8, 16, !dbg !17577
  br i1 %9, label %10, label %14, !dbg !17578

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17579
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17580
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17581, !srcloc !16540
  call void @llvm.dbg.value(metadata i32 %11, metadata !16536, metadata !DIExpression()) #25, !dbg !17585
  %12 = icmp eq i32 %11, 0, !dbg !17586
  br i1 %12, label %13, label %14, !dbg !17587

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17588
  br label %14, !dbg !17590

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17594, metadata !DIExpression()), !dbg !17595
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17596
  %3 = load i8, i8* %2, align 1, !dbg !17596
  %4 = and i8 %3, 2, !dbg !17597
  %5 = icmp ne i8 %4, 0, !dbg !17598
  ret i1 %5, !dbg !17599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17600 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17605
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17604, metadata !DIExpression()), !dbg !17606
  ret %struct.k_thread* %1, !dbg !17607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17608 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17609, !srcloc !16540
  call void @llvm.dbg.value(metadata i32 %1, metadata !16536, metadata !DIExpression()) #25, !dbg !17612
  %2 = icmp eq i32 %1, 0, !dbg !17613
  br i1 %2, label %3, label %8, !dbg !17614

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17615
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17616
  %6 = icmp ne i32 %5, 0, !dbg !17614
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17620, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17623
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17625, !srcloc !15904
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %3, metadata !15901, metadata !DIExpression()) #25, !dbg !17627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17627
  call void @llvm.dbg.value(metadata i32 %3, metadata !15895, metadata !DIExpression()) #25, !dbg !17623
  call void @llvm.dbg.value(metadata i32 %3, metadata !17621, metadata !DIExpression()), !dbg !17622
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17628
  %5 = load i8, i8* %4, align 4, !dbg !17628
  %6 = and i8 %5, 1, !dbg !17630
  %7 = icmp eq i8 %6, 0, !dbg !17631
  br i1 %7, label %9, label %8, !dbg !17632

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !17636
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17638, !srcloc !15930
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17639, !srcloc !17641
  br label %24, !dbg !17642

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17643
  %11 = load i8, i8* %10, align 1, !dbg !17643
  %12 = and i8 %11, 8, !dbg !17645
  %13 = icmp eq i8 %12, 0, !dbg !17646
  br i1 %13, label %15, label %14, !dbg !17647

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !17648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17648
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !17651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17653, !srcloc !15930
  br label %24, !dbg !17654

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17655
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17656
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17658
  br i1 %17, label %18, label %23, !dbg !17659

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17660, !srcloc !16540
  call void @llvm.dbg.value(metadata i32 %19, metadata !16536, metadata !DIExpression()) #25, !dbg !17663
  %20 = icmp eq i32 %19, 0, !dbg !17664
  br i1 %20, label %21, label %23, !dbg !17665

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16500, metadata !DIExpression()) #25, !dbg !17666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16505, metadata !DIExpression()) #25, !dbg !17666
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17669
  br label %23, !dbg !17670

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()) #25, !dbg !17671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17671
  call void @llvm.dbg.value(metadata i32 %3, metadata !15924, metadata !DIExpression()) #25, !dbg !17673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17675, !srcloc !15930
  br label %24, !dbg !17676

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17679, metadata !DIExpression()), !dbg !17680
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17681
  %3 = load i8, i8* %2, align 1, !dbg !17681
  %4 = and i8 %3, 8, !dbg !17683
  %5 = icmp eq i8 %4, 0, !dbg !17684
  br i1 %5, label %6, label %20, !dbg !17685

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17686
  %8 = or i8 %7, 8, !dbg !17686
  store i8 %8, i8* %2, align 1, !dbg !17686
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17688
  br i1 %9, label %10, label %12, !dbg !17690

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16058, metadata !DIExpression()) #25, !dbg !17691
  %11 = and i8 %8, 95, !dbg !17694
  store i8 %11, i8* %2, align 1, !dbg !17694
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()) #25, !dbg !17695
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17697
  br label %12, !dbg !17698

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17699
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17699
  %15 = icmp eq %union.anon* %14, null, !dbg !17701
  br i1 %15, label %17, label %16, !dbg !17702

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17703
  br label %17, !dbg !17705

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17706
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17707
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17708
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17709
  br label %20, !dbg !17710

20:                                               ; preds = %17, %1
  ret void, !dbg !17711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17712 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17716, metadata !DIExpression()), !dbg !17718
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17719
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17717, metadata !DIExpression()), !dbg !17718
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17720
  br i1 %3, label %10, label %4, !dbg !17721

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17722
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17724
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17725, metadata !DIExpression()), !dbg !17731
  call void @llvm.dbg.value(metadata i32 0, metadata !17730, metadata !DIExpression()), !dbg !17731
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17733
  store i32 0, i32* %7, align 4, !dbg !17734
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17735
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17719
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17717, metadata !DIExpression()), !dbg !17718
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17720
  br i1 %9, label %10, label %4, !dbg !17721, !llvm.loop !17736

10:                                               ; preds = %4, %1
  ret void, !dbg !17738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17739 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17744, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17743, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17748
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17750, !srcloc !15904
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17750
  call void @llvm.dbg.value(metadata i32 %4, metadata !15901, metadata !DIExpression()) #25, !dbg !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17752
  call void @llvm.dbg.value(metadata i32 %4, metadata !15895, metadata !DIExpression()) #25, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %4, metadata !17745, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i32 0, metadata !17746, metadata !DIExpression()), !dbg !17747
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17753
  %6 = load i8, i8* %5, align 1, !dbg !17753
  %7 = and i8 %6, 8, !dbg !17755
  %8 = icmp eq i8 %7, 0, !dbg !17756
  br i1 %8, label %9, label %24, !dbg !17757

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17744, metadata !DIExpression()), !dbg !17747
  %11 = icmp eq i64 %10, 0, !dbg !17758
  br i1 %11, label %24, label %12, !dbg !17760

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17761
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17763
  br i1 %14, label %24, label %15, !dbg !17764

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17765
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17765
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17766
  %19 = icmp eq %union.anon* %17, %18, !dbg !17767
  br i1 %19, label %24, label %20, !dbg !17768

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17769
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17771
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17772
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17773
  call void @llvm.dbg.value(metadata i32 %4, metadata !16500, metadata !DIExpression()) #25, !dbg !17774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16505, metadata !DIExpression()) #25, !dbg !17774
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17776
  call void @llvm.dbg.value(metadata i32 %23, metadata !17746, metadata !DIExpression()), !dbg !17747
  br label %26, !dbg !17777

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17778
  call void @llvm.dbg.value(metadata i32 %25, metadata !17746, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i32 %4, metadata !15916, metadata !DIExpression()) #25, !dbg !17779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17779
  call void @llvm.dbg.value(metadata i32 %4, metadata !15924, metadata !DIExpression()) #25, !dbg !17781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17783, !srcloc !15930
  br label %26, !dbg !17784

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17747
  ret i32 %27, !dbg !17785
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17786 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17790, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 %1, metadata !17791, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i8* %2, metadata !17792, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i8 0, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 0, metadata !17795, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15889, metadata !DIExpression()) #25, !dbg !17800
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17802, !srcloc !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()) #25, !dbg !17804
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()) #25, !dbg !17804
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !17800
  call void @llvm.dbg.value(metadata i32 undef, metadata !17797, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.value(metadata i8 poison, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 undef, metadata !17795, metadata !DIExpression()), !dbg !17799
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17805
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17793, metadata !DIExpression()), !dbg !17798
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17808
  br i1 %7, label %12, label %8, !dbg !17810

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17811, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 %1, metadata !17817, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i8* %2, metadata !17818, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17725, metadata !DIExpression()), !dbg !17822
  call void @llvm.dbg.value(metadata i32 %1, metadata !17730, metadata !DIExpression()), !dbg !17822
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17824
  store i32 %1, i32* %9, align 4, !dbg !17825
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17826
  store i8* %2, i8** %10, align 4, !dbg !17827
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17828
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17829
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17830
  call void @llvm.dbg.value(metadata i8 1, metadata !17794, metadata !DIExpression()), !dbg !17798
  br label %12, !dbg !17831

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17802
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17802
  call void @llvm.dbg.value(metadata i32 %14, metadata !15901, metadata !DIExpression()) #25, !dbg !17804
  call void @llvm.dbg.value(metadata i32 %14, metadata !15895, metadata !DIExpression()) #25, !dbg !17800
  call void @llvm.dbg.value(metadata i32 %14, metadata !17797, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.value(metadata i8 poison, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()) #25, !dbg !17832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15921, metadata !DIExpression()) #25, !dbg !17832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()) #25, !dbg !17834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17836, !srcloc !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !17795, metadata !DIExpression()), !dbg !17799
  ret i1 %13, !dbg !17837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17838 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17844, metadata !DIExpression()), !dbg !17849
  call void @llvm.dbg.value(metadata i64 undef, metadata !17846, metadata !DIExpression()), !dbg !17849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17843, metadata !DIExpression()), !dbg !17849
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17845, metadata !DIExpression()), !dbg !17849
  call void @llvm.dbg.value(metadata i8** %4, metadata !17847, metadata !DIExpression()), !dbg !17849
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17850
  call void @llvm.dbg.value(metadata i32 %6, metadata !17848, metadata !DIExpression()), !dbg !17849
  %7 = icmp eq i8** %4, null, !dbg !17851
  br i1 %7, label %12, label %8, !dbg !17853

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17854
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17856
  %11 = load i8*, i8** %10, align 4, !dbg !17856
  store i8* %11, i8** %4, align 4, !dbg !17857
  br label %12, !dbg !17858

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17860 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17862
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17863
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #27, !dbg !17864
  ret void, !dbg !17865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17866 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17876, metadata !DIExpression()), !dbg !17893
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17874, metadata !DIExpression()), !dbg !17893
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17875, metadata !DIExpression()), !dbg !17893
  %5 = icmp eq i64 %4, -1, !dbg !17894
  br i1 %5, label %55, label %6, !dbg !17896

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17897
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17898
  call void @llvm.dbg.value(metadata i32 0, metadata !17877, metadata !DIExpression()), !dbg !17899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !17907
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17909, !srcloc !17915
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17909
  call void @llvm.dbg.value(metadata i32 %9, metadata !17912, metadata !DIExpression()) #25, !dbg !17916
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !17916
  call void @llvm.dbg.value(metadata i32 %9, metadata !17906, metadata !DIExpression()) #25, !dbg !17907
  call void @llvm.dbg.value(metadata i32 %9, metadata !17883, metadata !DIExpression()), !dbg !17899
  call void @llvm.dbg.value(metadata i32 undef, metadata !17877, metadata !DIExpression()), !dbg !17899
  %10 = icmp slt i64 %4, -1, !dbg !17917
  br i1 %10, label %11, label %17, !dbg !17918

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17919
  %13 = add i64 %4, %12, !dbg !17920
  %14 = sub i64 -2, %13, !dbg !17920
  call void @llvm.dbg.value(metadata i64 %14, metadata !17887, metadata !DIExpression()), !dbg !17921
  %15 = icmp sgt i64 %14, 1, !dbg !17922
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17922
  br label %22, !dbg !17923

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17924
  %19 = tail call fastcc i32 @elapsed.303() #26, !dbg !17926
  %20 = sext i32 %19 to i64, !dbg !17926
  %21 = add nsw i64 %18, %20, !dbg !17927
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17928
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17929
  store i64 %23, i64* %24, align 8, !dbg !17930
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17931
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17884, metadata !DIExpression()), !dbg !17933
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17934
  br i1 %26, label %42, label %27, !dbg !17934

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17935
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17884, metadata !DIExpression()), !dbg !17933
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17939
  %31 = load i64, i64* %30, align 8, !dbg !17939
  %32 = icmp slt i64 %28, %31, !dbg !17940
  br i1 %32, label %33, label %38, !dbg !17941

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17939
  %35 = sub nsw i64 %31, %28, !dbg !17942
  store i64 %35, i64* %34, align 8, !dbg !17942
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17944
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17945
  tail call fastcc void @sys_dlist_insert.304(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17946
  br label %44, !dbg !17947

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17948
  store i64 %39, i64* %24, align 8, !dbg !17948
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17949
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17884, metadata !DIExpression()), !dbg !17933
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17934
  br i1 %41, label %42, label %27, !dbg !17934, !llvm.loop !17950

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17952
  tail call fastcc void @sys_dlist_append.305(%struct._dnode* noundef %43) #26, !dbg !17955
  br label %44, !dbg !17956

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17957
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17958
  br i1 %46, label %47, label %54, !dbg !17959

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17960
  call void @llvm.dbg.value(metadata i32 %48, metadata !17890, metadata !DIExpression()), !dbg !17961
  %49 = icmp ne i32 %48, 0, !dbg !17962
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17964
  br i1 %52, label %54, label %53, !dbg !17964

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17965
  br label %54, !dbg !17967

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17968, metadata !DIExpression()) #25, !dbg !17974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !17974
  call void @llvm.dbg.value(metadata i32 %9, metadata !17976, metadata !DIExpression()) #25, !dbg !17979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17981, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !17877, metadata !DIExpression()), !dbg !17899
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.303() unnamed_addr #1 !dbg !17984 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17987
  %2 = icmp eq i32 %1, 0, !dbg !17988
  br i1 %2, label %3, label %5, !dbg !17987

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17989
  br label %5, !dbg !17987

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17987
  ret i32 %6, !dbg !17990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17991 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.308() #26, !dbg !17997
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17995, metadata !DIExpression()), !dbg !17998
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17999
  ret %struct._timeout* %2, !dbg !18000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.304(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !18001 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18005, metadata !DIExpression()), !dbg !18009
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18006, metadata !DIExpression()), !dbg !18009
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18010
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18010
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18007, metadata !DIExpression()), !dbg !18009
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18011
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18012
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18013
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18014
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18015
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18016
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18017
  ret void, !dbg !18018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !18019 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18023, metadata !DIExpression()), !dbg !18025
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18026
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.306(%struct._dnode* noundef %2) #26, !dbg !18027
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18024, metadata !DIExpression()), !dbg !18025
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18028
  ret %struct._timeout* %4, !dbg !18029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.305(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !18030 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18035, metadata !DIExpression()), !dbg !18038
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18036, metadata !DIExpression()), !dbg !18038
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18039
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18037, metadata !DIExpression()), !dbg !18038
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18040
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18041
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18042
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18043
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18044
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18045
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18046
  ret void, !dbg !18047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18048 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !18053
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18050, metadata !DIExpression()), !dbg !18054
  %2 = tail call fastcc i32 @elapsed.303() #26, !dbg !18055
  call void @llvm.dbg.value(metadata i32 %2, metadata !18051, metadata !DIExpression()), !dbg !18054
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18056
  br i1 %3, label %14, label %4, !dbg !18058

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18059
  %6 = load i64, i64* %5, align 8, !dbg !18059
  %7 = sext i32 %2 to i64, !dbg !18060
  %8 = sub nsw i64 %6, %7, !dbg !18061
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18062
  br i1 %9, label %14, label %10, !dbg !18063

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18064
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18064
  %13 = trunc i64 %12 to i32, !dbg !18064
  call void @llvm.dbg.value(metadata i32 %13, metadata !18052, metadata !DIExpression()), !dbg !18054
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18066
  call void @llvm.dbg.value(metadata i32 %15, metadata !18052, metadata !DIExpression()), !dbg !18054
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18067
  %17 = icmp ne i32 %16, 0, !dbg !18069
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18070
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18070
  call void @llvm.dbg.value(metadata i32 %20, metadata !18052, metadata !DIExpression()), !dbg !18054
  ret i32 %20, !dbg !18071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.306(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18072 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18076, metadata !DIExpression()), !dbg !18078
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18077, metadata !DIExpression()), !dbg !18078
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18079
  br i1 %2, label %5, label %3, !dbg !18080

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.307(%struct._dnode* noundef nonnull %0) #26, !dbg !18081
  br label %5, !dbg !18080

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18080
  ret %struct._dnode* %6, !dbg !18082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.307(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18083 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18085, metadata !DIExpression()), !dbg !18087
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18086, metadata !DIExpression()), !dbg !18087
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18088
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18089
  br i1 %3, label %7, label %4, !dbg !18090

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18091
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18091
  br label %7, !dbg !18090

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18090
  ret %struct._dnode* %8, !dbg !18092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.308() unnamed_addr #10 !dbg !18093 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18097, metadata !DIExpression()), !dbg !18098
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.309() #26, !dbg !18099
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18099
  ret %struct._dnode* %3, !dbg !18100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.309() unnamed_addr #10 !dbg !18101 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18105, metadata !DIExpression()), !dbg !18106
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18107
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18108
  ret i1 %2, !dbg !18109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18110 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18114, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.value(metadata i32 -22, metadata !18115, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.value(metadata i32 0, metadata !18116, metadata !DIExpression()), !dbg !18120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18121
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18123, !srcloc !17915
  call void @llvm.dbg.value(metadata i32 undef, metadata !17912, metadata !DIExpression()) #25, !dbg !18125
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18125
  call void @llvm.dbg.value(metadata i32 undef, metadata !17906, metadata !DIExpression()) #25, !dbg !18121
  call void @llvm.dbg.value(metadata i32 undef, metadata !18118, metadata !DIExpression()), !dbg !18120
  call void @llvm.dbg.value(metadata i32 -22, metadata !18115, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.value(metadata i32 undef, metadata !18116, metadata !DIExpression()), !dbg !18120
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18115, metadata !DIExpression()), !dbg !18119
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* noundef %3) #26, !dbg !18126
  br i1 %4, label %5, label %6, !dbg !18130

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !18131
  call void @llvm.dbg.value(metadata i32 0, metadata !18115, metadata !DIExpression()), !dbg !18119
  br label %6, !dbg !18133

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !18119
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !18123
  call void @llvm.dbg.value(metadata i32 %8, metadata !17912, metadata !DIExpression()) #25, !dbg !18125
  call void @llvm.dbg.value(metadata i32 %8, metadata !17906, metadata !DIExpression()) #25, !dbg !18121
  call void @llvm.dbg.value(metadata i32 %8, metadata !18118, metadata !DIExpression()), !dbg !18120
  call void @llvm.dbg.value(metadata i32 %7, metadata !18115, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.value(metadata i32 undef, metadata !17968, metadata !DIExpression()) #25, !dbg !18134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18134
  call void @llvm.dbg.value(metadata i32 undef, metadata !17976, metadata !DIExpression()) #25, !dbg !18136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !18138, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !18116, metadata !DIExpression()), !dbg !18120
  ret i32 %7, !dbg !18139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18140 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18146, metadata !DIExpression()), !dbg !18147
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18148
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18148
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18149
  ret i1 %4, !dbg !18150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !18151 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18153, metadata !DIExpression()), !dbg !18154
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !18155
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18157
  br i1 %3, label %10, label %4, !dbg !18158

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18159
  %6 = load i64, i64* %5, align 8, !dbg !18159
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18161
  %8 = load i64, i64* %7, align 8, !dbg !18162
  %9 = add nsw i64 %8, %6, !dbg !18162
  store i64 %9, i64* %7, align 8, !dbg !18162
  br label %10, !dbg !18163

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18164
  tail call fastcc void @sys_dlist_remove.313(%struct._dnode* noundef %11) #26, !dbg !18165
  ret void, !dbg !18166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.313(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18167 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18171, metadata !DIExpression()), !dbg !18174
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18175
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18175
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18172, metadata !DIExpression()), !dbg !18174
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18176
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18176
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18173, metadata !DIExpression()), !dbg !18174
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18177
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18178
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18179
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18180
  tail call fastcc void @sys_dnode_init.314(%struct._dnode* noundef %0) #26, !dbg !18181
  ret void, !dbg !18182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.314(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18183 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18185, metadata !DIExpression()), !dbg !18186
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18187
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18188
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18189
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18190
  ret void, !dbg !18191
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18192 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18198, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata i64 0, metadata !18199, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata i32 0, metadata !18200, metadata !DIExpression()), !dbg !18204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18205
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18207, !srcloc !17915
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18207
  call void @llvm.dbg.value(metadata i32 %3, metadata !17912, metadata !DIExpression()) #25, !dbg !18209
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18209
  call void @llvm.dbg.value(metadata i32 %3, metadata !17906, metadata !DIExpression()) #25, !dbg !18205
  call void @llvm.dbg.value(metadata i32 %3, metadata !18202, metadata !DIExpression()), !dbg !18204
  call void @llvm.dbg.value(metadata i64 0, metadata !18199, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata i32 undef, metadata !18200, metadata !DIExpression()), !dbg !18204
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18210
  call void @llvm.dbg.value(metadata i64 %4, metadata !18199, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata i32 %3, metadata !17968, metadata !DIExpression()) #25, !dbg !18213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18213
  call void @llvm.dbg.value(metadata i32 %3, metadata !17976, metadata !DIExpression()) #25, !dbg !18215
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18217, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !18200, metadata !DIExpression()), !dbg !18204
  ret i64 %4, !dbg !18218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18219 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18221, metadata !DIExpression()), !dbg !18225
  call void @llvm.dbg.value(metadata i64 0, metadata !18222, metadata !DIExpression()), !dbg !18225
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.315(%struct._timeout* noundef %0) #26, !dbg !18226
  br i1 %2, label %21, label %3, !dbg !18228

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18229
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18223, metadata !DIExpression()), !dbg !18230
  call void @llvm.dbg.value(metadata i64 0, metadata !18222, metadata !DIExpression()), !dbg !18225
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18231
  br i1 %5, label %16, label %6, !dbg !18233

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18223, metadata !DIExpression()), !dbg !18230
  call void @llvm.dbg.value(metadata i64 %8, metadata !18222, metadata !DIExpression()), !dbg !18225
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18234
  %10 = load i64, i64* %9, align 8, !dbg !18234
  %11 = add nsw i64 %10, %8, !dbg !18236
  call void @llvm.dbg.value(metadata i64 %11, metadata !18222, metadata !DIExpression()), !dbg !18225
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18237
  br i1 %12, label %16, label %13, !dbg !18239

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18240
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18223, metadata !DIExpression()), !dbg !18230
  call void @llvm.dbg.value(metadata i64 %11, metadata !18222, metadata !DIExpression()), !dbg !18225
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18231
  br i1 %15, label %16, label %6, !dbg !18233, !llvm.loop !18241

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18225
  call void @llvm.dbg.value(metadata i64 %17, metadata !18222, metadata !DIExpression()), !dbg !18225
  %18 = tail call fastcc i32 @elapsed.303() #26, !dbg !18243
  %19 = sext i32 %18 to i64, !dbg !18243
  %20 = sub nsw i64 %17, %19, !dbg !18244
  br label %21, !dbg !18245

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18225
  ret i64 %22, !dbg !18246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.315(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18247 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18251, metadata !DIExpression()), !dbg !18252
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18253
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* noundef %2) #26, !dbg !18254
  %4 = xor i1 %3, true, !dbg !18255
  ret i1 %4, !dbg !18256
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18257 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18259, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i64 0, metadata !18260, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i32 0, metadata !18261, metadata !DIExpression()), !dbg !18265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18266
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18268, !srcloc !17915
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18268
  call void @llvm.dbg.value(metadata i32 %3, metadata !17912, metadata !DIExpression()) #25, !dbg !18270
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18270
  call void @llvm.dbg.value(metadata i32 %3, metadata !17906, metadata !DIExpression()) #25, !dbg !18266
  call void @llvm.dbg.value(metadata i32 %3, metadata !18263, metadata !DIExpression()), !dbg !18265
  call void @llvm.dbg.value(metadata i64 0, metadata !18260, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i32 undef, metadata !18261, metadata !DIExpression()), !dbg !18265
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18271
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18274
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18264
  call void @llvm.dbg.value(metadata i32 %3, metadata !17968, metadata !DIExpression()) #25, !dbg !18275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18275
  call void @llvm.dbg.value(metadata i32 %3, metadata !17976, metadata !DIExpression()) #25, !dbg !18277
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18279, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !18261, metadata !DIExpression()), !dbg !18265
  %6 = add i64 %5, %4, !dbg !18280
  ret i64 %6, !dbg !18281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18282 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18284, metadata !DIExpression()), !dbg !18288
  call void @llvm.dbg.value(metadata i32 0, metadata !18285, metadata !DIExpression()), !dbg !18289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18290
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18292, !srcloc !17915
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18292
  call void @llvm.dbg.value(metadata i32 %2, metadata !17912, metadata !DIExpression()) #25, !dbg !18294
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18294
  call void @llvm.dbg.value(metadata i32 %2, metadata !17906, metadata !DIExpression()) #25, !dbg !18290
  call void @llvm.dbg.value(metadata i32 %2, metadata !18287, metadata !DIExpression()), !dbg !18289
  call void @llvm.dbg.value(metadata i32 -1, metadata !18284, metadata !DIExpression()), !dbg !18288
  call void @llvm.dbg.value(metadata i32 undef, metadata !18285, metadata !DIExpression()), !dbg !18289
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18295
  call void @llvm.dbg.value(metadata i32 %3, metadata !18284, metadata !DIExpression()), !dbg !18288
  call void @llvm.dbg.value(metadata i32 %2, metadata !17968, metadata !DIExpression()) #25, !dbg !18298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18298
  call void @llvm.dbg.value(metadata i32 %2, metadata !17976, metadata !DIExpression()) #25, !dbg !18300
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18302, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !18285, metadata !DIExpression()), !dbg !18289
  ret i32 %3, !dbg !18303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18306, metadata !DIExpression()), !dbg !18316
  call void @llvm.dbg.value(metadata i1 %1, metadata !18307, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18316
  call void @llvm.dbg.value(metadata i32 0, metadata !18308, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18318
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18320, !srcloc !17915
  call void @llvm.dbg.value(metadata i32 undef, metadata !17912, metadata !DIExpression()) #25, !dbg !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !17906, metadata !DIExpression()) #25, !dbg !18318
  call void @llvm.dbg.value(metadata i32 undef, metadata !18310, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !18308, metadata !DIExpression()), !dbg !18317
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18323
  call void @llvm.dbg.value(metadata i32 %4, metadata !18311, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i1 undef, metadata !18314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18324
  %5 = icmp slt i32 %4, 2, !dbg !18325
  call void @llvm.dbg.value(metadata i1 %5, metadata !18315, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18324
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18326
  call void @llvm.dbg.value(metadata i1 %6, metadata !18314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18324
  br i1 %7, label %11, label %8, !dbg !18326

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18328
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18328
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18330
  br label %11, !dbg !18331

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18320
  call void @llvm.dbg.value(metadata i32 %12, metadata !17912, metadata !DIExpression()) #25, !dbg !18322
  call void @llvm.dbg.value(metadata i32 %12, metadata !17906, metadata !DIExpression()) #25, !dbg !18318
  call void @llvm.dbg.value(metadata i32 %12, metadata !18310, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !17968, metadata !DIExpression()) #25, !dbg !18332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18332
  call void @llvm.dbg.value(metadata i32 undef, metadata !17976, metadata !DIExpression()) #25, !dbg !18334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18336, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 1, metadata !18308, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !18308, metadata !DIExpression()), !dbg !18317
  ret void, !dbg !18337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18342, metadata !DIExpression()), !dbg !18347
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18349
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18351, !srcloc !17915
  call void @llvm.dbg.value(metadata i32 undef, metadata !17912, metadata !DIExpression()) #25, !dbg !18353
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18353
  call void @llvm.dbg.value(metadata i32 undef, metadata !17906, metadata !DIExpression()) #25, !dbg !18349
  call void @llvm.dbg.value(metadata i32 undef, metadata !18343, metadata !DIExpression()), !dbg !18347
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18347
  call void @llvm.dbg.value(metadata i32 undef, metadata !18343, metadata !DIExpression()), !dbg !18347
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18354
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18355
  br i1 %4, label %28, label %5, !dbg !18356

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18357
  %10 = load i64, i64* %9, align 8, !dbg !18357
  %11 = sext i32 %8 to i64, !dbg !18358
  %12 = icmp sgt i64 %10, %11, !dbg !18359
  br i1 %12, label %26, label %13, !dbg !18360

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18347
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18344, metadata !DIExpression()), !dbg !18361
  %15 = trunc i64 %10 to i32, !dbg !18362
  call void @llvm.dbg.value(metadata i32 %15, metadata !18346, metadata !DIExpression()), !dbg !18361
  %16 = sext i32 %15 to i64, !dbg !18363
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18364
  %18 = add i64 %17, %16, !dbg !18364
  store i64 %18, i64* @curr_tick, align 8, !dbg !18364
  store i64 0, i64* %9, align 8, !dbg !18365
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18366
  call void @llvm.dbg.value(metadata i32 %14, metadata !17968, metadata !DIExpression()) #25, !dbg !18367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18367
  call void @llvm.dbg.value(metadata i32 %14, metadata !17976, metadata !DIExpression()) #25, !dbg !18369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18371, !srcloc !17982
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18372
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18372
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18374
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18376, !srcloc !17915
  call void @llvm.dbg.value(metadata i32 undef, metadata !17912, metadata !DIExpression()) #25, !dbg !18378
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18378
  call void @llvm.dbg.value(metadata i32 undef, metadata !17906, metadata !DIExpression()) #25, !dbg !18374
  call void @llvm.dbg.value(metadata i32 undef, metadata !18343, metadata !DIExpression()), !dbg !18347
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18379
  %23 = sub nsw i32 %22, %15, !dbg !18379
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18347
  call void @llvm.dbg.value(metadata i32 undef, metadata !18343, metadata !DIExpression()), !dbg !18347
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18354
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18355
  br i1 %25, label %28, label %5, !dbg !18356, !llvm.loop !18380

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18382
  store i64 %27, i64* %9, align 8, !dbg !18382
  br label %32, !dbg !18385

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18347
  %31 = sext i32 %30 to i64, !dbg !18386
  br label %32, !dbg !18386

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18386
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18347
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18387
  %37 = add i64 %36, %33, !dbg !18387
  store i64 %37, i64* @curr_tick, align 8, !dbg !18387
  store i32 0, i32* @announce_remaining, align 4, !dbg !18388
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18389
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18390
  call void @llvm.dbg.value(metadata i32 %35, metadata !17968, metadata !DIExpression()) #25, !dbg !18391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18391
  call void @llvm.dbg.value(metadata i32 %35, metadata !17976, metadata !DIExpression()) #25, !dbg !18393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18395, !srcloc !17982
  ret void, !dbg !18396
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18397 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18401, metadata !DIExpression()), !dbg !18405
  call void @llvm.dbg.value(metadata i32 0, metadata !18402, metadata !DIExpression()), !dbg !18406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17900, metadata !DIExpression()) #25, !dbg !18407
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18409, !srcloc !17915
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18409
  call void @llvm.dbg.value(metadata i32 %2, metadata !17912, metadata !DIExpression()) #25, !dbg !18411
  call void @llvm.dbg.value(metadata i32 undef, metadata !17913, metadata !DIExpression()) #25, !dbg !18411
  call void @llvm.dbg.value(metadata i32 %2, metadata !17906, metadata !DIExpression()) #25, !dbg !18407
  call void @llvm.dbg.value(metadata i32 %2, metadata !18404, metadata !DIExpression()), !dbg !18406
  call void @llvm.dbg.value(metadata i64 0, metadata !18401, metadata !DIExpression()), !dbg !18405
  call void @llvm.dbg.value(metadata i32 undef, metadata !18402, metadata !DIExpression()), !dbg !18406
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18412
  %4 = tail call fastcc i32 @elapsed.303() #26, !dbg !18415
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18405
  call void @llvm.dbg.value(metadata i32 %2, metadata !17968, metadata !DIExpression()) #25, !dbg !18416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17973, metadata !DIExpression()) #25, !dbg !18416
  call void @llvm.dbg.value(metadata i32 %2, metadata !17976, metadata !DIExpression()) #25, !dbg !18418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18420, !srcloc !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !18402, metadata !DIExpression()), !dbg !18406
  %5 = sext i32 %4 to i64, !dbg !18415
  %6 = add i64 %3, %5, !dbg !18421
  ret i64 %6, !dbg !18422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18423 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18424
  %2 = trunc i64 %1 to i32, !dbg !18425
  ret i32 %2, !dbg !18426
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18427 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18428
  ret i64 %1, !dbg !18429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18432, metadata !DIExpression()), !dbg !18439
  %2 = icmp eq i32 %0, 0, !dbg !18440
  br i1 %2, label %10, label %3, !dbg !18442

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18443
  call void @llvm.dbg.value(metadata i32 %4, metadata !18433, metadata !DIExpression()), !dbg !18439
  %5 = mul i32 %0, 168, !dbg !18444
  call void @llvm.dbg.value(metadata i32 %5, metadata !18434, metadata !DIExpression()), !dbg !18439
  br label %6, !dbg !18445

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18446
  call void @llvm.dbg.value(metadata i32 %7, metadata !18435, metadata !DIExpression()), !dbg !18447
  %8 = sub i32 %7, %4, !dbg !18448
  %9 = icmp ult i32 %8, %5, !dbg !18450
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18452 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18453
  ret i32 %1, !dbg !18454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18455 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18457
  ret i32 %1, !dbg !18458
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18459 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18463, metadata !DIExpression()), !dbg !18465
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18466

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18467
  br label %14, !dbg !18471

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18464, metadata !DIExpression()), !dbg !18465
  %6 = icmp slt i64 %2, -1, !dbg !18472
  br i1 %6, label %7, label %9, !dbg !18475

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18476
  br label %14, !dbg !18477

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18479
  %11 = icmp ugt i64 %2, 1, !dbg !18480
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18480
  %13 = add nsw i64 %10, %12, !dbg !18481
  br label %14, !dbg !18482

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18483
  ret i64 %15, !dbg !18484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18485 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.324, i32 0, i32 0)) #27, !dbg !18487
  ret void, !dbg !18488
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!948, !2, !2823, !27, !379, !403, !2825, !2827, !2861, !414, !458, !2863, !2866, !487, !507, !2868, !2876, !2884, !2900, !2911, !2957, !2959, !2987, !3015, !3058, !3130, !3175, !519, !675, !3203, !711, !721, !746, !996, !3208, !1131, !1197, !1379, !1718, !2022, !3247, !2135, !2225, !3249, !3335, !3400, !2274, !3403, !2281, !2651, !3421, !2671, !3423, !2786, !3426}
!llvm.ident = !{!3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428}
!llvm.module.flags = !{!3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 103, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5824, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 91)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2912, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !414, file: !431, line: 56, type: !432, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !430, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 501, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f427xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 492, size: 224, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !420, file: !419, line: 494, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !420, file: !419, line: 495, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !420, file: !419, line: 496, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 497, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 498, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !420, file: !419, line: 499, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !420, file: !419, line: 500, baseType: !423, size: 32, offset: 192)
!430 = !{!412}
!431 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !435)
!434 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !{!436, !455}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !433, file: !434, line: 60, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DISubroutineType(types: !439)
!439 = !{!125, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !443)
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !137, line: 380, baseType: !140, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !442, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !442, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !137, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !137, line: 359, baseType: !150, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !442, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !434, line: 65, baseType: !440, size: 32, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !458, file: !461, line: 71, type: !462, isLocal: true, isDefinition: true, align: 32)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !460, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!460 = !{!456}
!461 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !464)
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !463, file: !434, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!125, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !137, line: 380, baseType: !140, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !137, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !137, line: 359, baseType: !150, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !463, file: !434, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !487, file: !501, line: 37, type: !502, isLocal: true, isDefinition: true)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !489, globals: !500, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!489 = !{!184, !490, !491, !150}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !493)
!492 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !494, file: !492, line: 65, baseType: !497, size: 1408)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 44)
!500 = !{!485}
!501 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 256)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "sbox", scope: !507, file: !516, line: 37, type: !502, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !509, globals: !515, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!509 = !{!510, !490, !184, !150}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !512, file: !492, line: 65, baseType: !497, size: 1408)
!515 = !{!505}
!516 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !519, file: !526, line: 17, type: !668, isLocal: false, isDefinition: true)
!519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !521, globals: !522, splitDebugInlining: false, nameTableKind: None)
!520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!521 = !{!272, !125, !208, !124}
!522 = !{!517, !523, !664}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !525, file: !526, line: 198, type: !650, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !526, file: !526, line: 175, type: !527, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !645)
!526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !532)
!531 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!533, !599, !612, !613, !614, !615, !621, !640}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !531, line: 247, baseType: !534, size: 384)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !535)
!535 = !{!536, !564, !572, !573, !574, !585, !586, !587}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 60, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 60, size: 64, elements: !538)
!538 = !{!539, !555}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !537, file: !531, line: 61, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !542)
!541 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 38, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 38, size: 32, elements: !546)
!546 = !{!547, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !545, file: !541, line: 39, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !541, line: 40, baseType: !548, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 42, baseType: !551, size: 32, offset: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 42, size: 32, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !551, file: !541, line: 43, baseType: !548, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !541, line: 44, baseType: !548, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !537, file: !531, line: 62, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !556, file: !557, line: 50, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !562)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !534, file: !531, line: 68, baseType: !565, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !568, file: !567, line: 232, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !542)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !534, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !534, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 90, baseType: !575, size: 16, offset: 112)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 90, size: 16, elements: !576)
!576 = !{!577, !584}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !531, line: 91, baseType: !578, size: 16)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !531, line: 91, size: 16, elements: !579)
!579 = !{!580, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !578, file: !531, line: 96, baseType: !581, size: 8)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !582)
!582 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !578, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !575, file: !531, line: 100, baseType: !227, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !534, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !534, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !534, file: !531, line: 131, baseType: !588, size: 192, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !589)
!589 = !{!590, !591, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !588, file: !567, line: 245, baseType: !540, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !588, file: !567, line: 246, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !588, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !530, file: !531, line: 250, baseType: !600, size: 288, offset: 384)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !602)
!601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !600, file: !601, line: 26, baseType: !208, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !600, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !600, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !600, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !600, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !600, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !600, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !600, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !600, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !530, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !530, file: !531, line: 256, baseType: !566, size: 64, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !530, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !530, file: !531, line: 300, baseType: !616, size: 96, offset: 800)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !617)
!617 = !{!618, !619, !620}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !616, file: !531, line: 153, baseType: !22, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !616, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !530, file: !531, line: 325, baseType: !622, size: 32, offset: 896)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !{!626, !635, !636}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !623, file: !624, line: 5074, baseType: !627, size: 96)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !629)
!628 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!629 = !{!630, !633, !634}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !627, file: !628, line: 57, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !628, line: 57, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !623, file: !624, line: 5075, baseType: !566, size: 64, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !623, file: !624, line: 5076, baseType: !637, offset: 160)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!638 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!639 = !{}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !530, file: !531, line: 343, baseType: !641, size: 64, offset: 928)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !641, file: !601, line: 63, baseType: !208, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !641, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!645 = !{!646, !647, !648, !649}
!646 = !DILocalVariable(name: "thread", arg: 1, scope: !525, file: !526, line: 175, type: !529)
!647 = !DILocalVariable(name: "region_num", scope: !525, file: !526, line: 200, type: !150)
!648 = !DILocalVariable(name: "guard_start", scope: !525, file: !526, line: 265, type: !22)
!649 = !DILocalVariable(name: "guard_size", scope: !525, file: !526, line: 266, type: !272)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 96, elements: !662)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !653)
!652 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !651, file: !652, line: 53, baseType: !22, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !651, file: !652, line: 55, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !659)
!658 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !659, file: !658, line: 150, baseType: !208, size: 32)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "static_regions", scope: !519, file: !526, line: 62, type: !666, isLocal: true, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 96, elements: !662)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !670)
!670 = !{!671, !672}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !373, line: 17, baseType: !140, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !669, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !675, file: !708, line: 39, type: !150, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !677, globals: !707, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!677 = !{!678, !124, !125, !695, !150}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !680, line: 1226, baseType: !681)
!680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 1213, size: 352, elements: !682)
!682 = !{!683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !681, file: !680, line: 1215, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !681, file: !680, line: 1216, baseType: !423, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !681, file: !680, line: 1217, baseType: !423, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !681, file: !680, line: 1218, baseType: !423, size: 32, offset: 96)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !681, file: !680, line: 1219, baseType: !423, size: 32, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !681, file: !680, line: 1220, baseType: !423, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !681, file: !680, line: 1221, baseType: !423, size: 32, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !681, file: !680, line: 1222, baseType: !423, size: 32, offset: 224)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !681, file: !680, line: 1223, baseType: !423, size: 32, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !681, file: !680, line: 1224, baseType: !423, size: 32, offset: 288)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !681, file: !680, line: 1225, baseType: !423, size: 32, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !697, file: !698, line: 29, baseType: !208, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !697, file: !698, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !658, line: 143, baseType: !208, size: 32)
!707 = !{!673}
!708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !711, file: !718, line: 21, type: !409, isLocal: true, isDefinition: true)
!711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !713, globals: !717, splitDebugInlining: false, nameTableKind: None)
!712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!713 = !{!714, !125, !124}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !716, line: 22, baseType: !125)
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!709}
!718 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !721, file: !726, line: 13, type: !743, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !723, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!723 = !{!724, !719}
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "mpu_config", scope: !721, file: !726, line: 37, type: !727, isLocal: false, isDefinition: true)
!726 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !698, line: 41, size: 64, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !728, file: !698, line: 43, baseType: !208, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !728, file: !698, line: 45, baseType: !732, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !734, file: !698, line: 29, baseType: !208, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !734, file: !698, line: 37, baseType: !739, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !740, file: !658, line: 143, baseType: !208, size: 32)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !562)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !746, file: !861, line: 72, type: !943, isLocal: true, isDefinition: true)
!746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !748, retainedTypes: !847, globals: !858, splitDebugInlining: false, nameTableKind: None)
!747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!748 = !{!46, !749}
!749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 65, baseType: !125, size: 32, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846}
!751 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!752 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!753 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!754 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!755 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!756 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!757 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!758 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!759 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!760 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!761 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!762 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!763 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!764 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!765 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!766 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!767 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!768 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!769 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!770 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!771 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!772 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!773 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!774 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!775 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!776 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!777 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!778 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!779 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!780 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!781 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!782 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!783 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!784 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!785 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!786 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!787 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!788 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!789 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!790 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!791 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!792 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!793 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!794 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!795 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!796 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!797 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!798 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!799 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!800 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!801 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!802 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!803 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!804 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!805 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!806 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!807 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!808 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!809 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!810 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!811 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!812 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!813 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!814 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!815 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!816 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!817 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!818 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!819 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!820 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!821 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!822 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!823 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!824 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!825 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!826 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!827 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!828 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!829 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!830 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!831 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!832 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!833 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!834 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!835 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!836 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!837 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!838 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!839 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!840 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!841 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!842 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!843 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!844 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!845 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!846 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!847 = !{!272, !125, !124, !848}
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 486, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 478, size: 192, elements: !851)
!851 = !{!852, !853, !854, !855, !856, !857}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !850, file: !419, line: 480, baseType: !423, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !850, file: !419, line: 481, baseType: !423, size: 32, offset: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !850, file: !419, line: 482, baseType: !423, size: 32, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !850, file: !419, line: 483, baseType: !423, size: 32, offset: 96)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !850, file: !419, line: 484, baseType: !423, size: 32, offset: 128)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !850, file: !419, line: 485, baseType: !423, size: 32, offset: 160)
!858 = !{!859, !865, !881, !892, !907, !744, !909, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941}
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !746, file: !861, line: 424, type: !862, isLocal: false, isDefinition: true, align: 16)
!861 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 4)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !746, file: !861, line: 424, type: !867, isLocal: false, isDefinition: true, align: 32)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !869)
!869 = !{!870, !871, !872, !873, !879, !880}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !868, file: !137, line: 380, baseType: !140, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !868, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !868, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !868, file: !137, line: 386, baseType: !874, size: 32, offset: 96)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !875, file: !137, line: 359, baseType: !150, size: 8)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !875, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !868, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !868, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !746, file: !861, line: 424, type: !883, isLocal: true, isDefinition: true, align: 32)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !885)
!885 = !{!886, !891}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !884, file: !434, line: 60, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!125, !890}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !884, file: !434, line: 65, baseType: !890, size: 32, offset: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "exti_data", scope: !746, file: !861, line: 423, type: !894, isLocal: true, isDefinition: true)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !861, line: 107, size: 1472, elements: !895)
!895 = !{!896}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !894, file: !861, line: 109, baseType: !897, size: 1472)
!897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 1472, elements: !332)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !861, line: 101, size: 64, elements: !899)
!899 = !{!900, !906}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !898, file: !861, line: 102, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !902, line: 63, baseType: !903)
!902 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!904 = !DISubroutineType(types: !905)
!905 = !{null, !125, !124}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !898, file: !861, line: 103, baseType: !124, size: 32, offset: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !746, file: !861, line: 424, type: !875, isLocal: true, isDefinition: true, align: 8)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !911, file: !861, line: 493, type: !916, isLocal: true, isDefinition: true, align: 32)
!911 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !861, file: !861, line: 460, type: !912, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !914)
!912 = !DISubroutineType(types: !913)
!913 = !{null, !890}
!914 = !{!915}
!915 = !DILocalVariable(name: "dev", arg: 1, scope: !911, file: !861, line: 460, type: !890)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !917)
!917 = !{!918, !920, !921, !922}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !916, file: !10, line: 55, baseType: !919, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !916, file: !10, line: 57, baseType: !919, size: 32, offset: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !916, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !916, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !911, file: !861, line: 497, type: !916, isLocal: true, isDefinition: true, align: 32)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !911, file: !861, line: 507, type: !916, isLocal: true, isDefinition: true, align: 32)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !911, file: !861, line: 512, type: !916, isLocal: true, isDefinition: true, align: 32)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !911, file: !861, line: 516, type: !916, isLocal: true, isDefinition: true, align: 32)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !911, file: !861, line: 523, type: !916, isLocal: true, isDefinition: true, align: 32)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !911, file: !861, line: 527, type: !916, isLocal: true, isDefinition: true, align: 32)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !911, file: !861, line: 581, type: !916, isLocal: true, isDefinition: true, align: 32)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !911, file: !861, line: 586, type: !916, isLocal: true, isDefinition: true, align: 32)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !911, file: !861, line: 591, type: !916, isLocal: true, isDefinition: true, align: 32)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !911, file: !861, line: 595, type: !916, isLocal: true, isDefinition: true, align: 32)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 736, elements: !332)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 165, baseType: !749)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !948, file: !953, line: 29, type: !991, isLocal: false, isDefinition: true, align: 16)
!948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !949, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !950, splitDebugInlining: false, nameTableKind: None)
!949 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!950 = !{!951, !946, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977, !979, !981, !983, !985, !987, !989}
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !948, file: !953, line: 24, type: !954, isLocal: false, isDefinition: true, align: 16)
!953 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 304, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 19)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !948, file: !953, line: 36, type: !862, isLocal: false, isDefinition: true, align: 16)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !948, file: !953, line: 43, type: !862, isLocal: false, isDefinition: true, align: 16)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !948, file: !953, line: 50, type: !862, isLocal: false, isDefinition: true, align: 16)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !948, file: !953, line: 57, type: !862, isLocal: false, isDefinition: true, align: 16)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !948, file: !953, line: 64, type: !862, isLocal: false, isDefinition: true, align: 16)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !948, file: !953, line: 71, type: !862, isLocal: false, isDefinition: true, align: 16)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !948, file: !953, line: 78, type: !862, isLocal: false, isDefinition: true, align: 16)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !948, file: !953, line: 85, type: !862, isLocal: false, isDefinition: true, align: 16)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !948, file: !953, line: 92, type: !862, isLocal: false, isDefinition: true, align: 16)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !948, file: !953, line: 99, type: !862, isLocal: false, isDefinition: true, align: 16)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !948, file: !953, line: 106, type: !862, isLocal: false, isDefinition: true, align: 16)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !948, file: !953, line: 113, type: !862, isLocal: false, isDefinition: true, align: 16)
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !948, file: !953, line: 120, type: !862, isLocal: false, isDefinition: true, align: 16)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !948, file: !953, line: 127, type: !862, isLocal: false, isDefinition: true, align: 16)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !948, file: !953, line: 134, type: !862, isLocal: false, isDefinition: true, align: 16)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !948, file: !953, line: 141, type: !862, isLocal: false, isDefinition: true, align: 16)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !948, file: !953, line: 146, type: !991, isLocal: false, isDefinition: true, align: 16)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !992)
!992 = !{!993}
!993 = !DISubrange(count: 3)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !996, file: !1059, line: 398, type: !1090, isLocal: true, isDefinition: true)
!996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !997, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !998, retainedTypes: !1011, globals: !1056, splitDebugInlining: false, nameTableKind: None)
!997 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!998 = !{!999, !46, !1004}
!999 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1000, line: 197, baseType: !32, size: 32, elements: !1001)
!1000 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1001 = !{!1002, !1003}
!1002 = !DIEnumerator(name: "SUCCESS", value: 0)
!1003 = !DIEnumerator(name: "ERROR", value: 1)
!1004 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1005, line: 44, baseType: !32, size: 32, elements: !1006)
!1005 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1006 = !{!1007, !1008, !1009, !1010}
!1007 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1008 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1009 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1010 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1011 = !{!124, !125, !208, !1012, !1049, !1055}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 677, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 643, size: 1152, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1014, file: !419, line: 645, baseType: !423, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1014, file: !419, line: 646, baseType: !423, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1014, file: !419, line: 647, baseType: !423, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1014, file: !419, line: 648, baseType: !423, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1014, file: !419, line: 649, baseType: !423, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1014, file: !419, line: 650, baseType: !423, size: 32, offset: 160)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1014, file: !419, line: 651, baseType: !423, size: 32, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1014, file: !419, line: 652, baseType: !208, size: 32, offset: 224)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1014, file: !419, line: 653, baseType: !423, size: 32, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1014, file: !419, line: 654, baseType: !423, size: 32, offset: 288)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1014, file: !419, line: 655, baseType: !1027, size: 64, offset: 320)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !562)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1014, file: !419, line: 656, baseType: !423, size: 32, offset: 384)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1014, file: !419, line: 657, baseType: !423, size: 32, offset: 416)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1014, file: !419, line: 658, baseType: !423, size: 32, offset: 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1014, file: !419, line: 659, baseType: !208, size: 32, offset: 480)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1014, file: !419, line: 660, baseType: !423, size: 32, offset: 512)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1014, file: !419, line: 661, baseType: !423, size: 32, offset: 544)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1014, file: !419, line: 662, baseType: !1027, size: 64, offset: 576)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1014, file: !419, line: 663, baseType: !423, size: 32, offset: 640)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1014, file: !419, line: 664, baseType: !423, size: 32, offset: 672)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1014, file: !419, line: 665, baseType: !423, size: 32, offset: 704)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1014, file: !419, line: 666, baseType: !208, size: 32, offset: 736)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1014, file: !419, line: 667, baseType: !423, size: 32, offset: 768)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1014, file: !419, line: 668, baseType: !423, size: 32, offset: 800)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1014, file: !419, line: 669, baseType: !1027, size: 64, offset: 832)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1014, file: !419, line: 670, baseType: !423, size: 32, offset: 896)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1014, file: !419, line: 671, baseType: !423, size: 32, offset: 928)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1014, file: !419, line: 672, baseType: !1027, size: 64, offset: 960)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1014, file: !419, line: 673, baseType: !423, size: 32, offset: 1024)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1014, file: !419, line: 674, baseType: !423, size: 32, offset: 1056)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1014, file: !419, line: 675, baseType: !423, size: 32, offset: 1088)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1014, file: !419, line: 676, baseType: !423, size: 32, offset: 1120)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1051, line: 343, size: 64, elements: !1052)
!1051 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1052 = !{!1053, !1054}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1050, file: !1051, line: 344, baseType: !208, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1050, file: !1051, line: 345, baseType: !208, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1056 = !{!1057, !1061, !1077, !1088, !994}
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !996, file: !1059, line: 752, type: !1060, isLocal: false, isDefinition: true, align: 16)
!1059 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 1024, elements: !305)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !996, file: !1059, line: 752, type: !1063, isLocal: false, isDefinition: true, align: 32)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1065)
!1065 = !{!1066, !1067, !1068, !1069, !1075, !1076}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1064, file: !137, line: 380, baseType: !140, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1064, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1064, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1064, file: !137, line: 386, baseType: !1070, size: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1072)
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1071, file: !137, line: 359, baseType: !150, size: 8)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1071, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1064, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1064, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !996, file: !1059, line: 752, type: !1079, isLocal: true, isDefinition: true, align: 32)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1081)
!1081 = !{!1082, !1087}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1080, file: !434, line: 60, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!125, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1080, file: !434, line: 65, baseType: !1086, size: 32, offset: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !996, file: !1059, line: 752, type: !1071, isLocal: true, isDefinition: true, align: 8)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1005, line: 100, size: 224, elements: !1091)
!1091 = !{!1092, !1098, !1099, !1108, !1113, !1118, !1124}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1090, file: !1005, line: 101, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1005, line: 76, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!125, !1086, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1005, line: 56, baseType: !124)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1090, file: !1005, line: 102, baseType: !1093, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1090, file: !1005, line: 103, baseType: !1100, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1005, line: 83, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!125, !1086, !1097, !1104, !124}
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1005, line: 72, baseType: !1105)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !1086, !1097, !124}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1090, file: !1005, line: 104, baseType: !1109, size: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1005, line: 79, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!125, !1086, !1097, !1055}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1090, file: !1005, line: 105, baseType: !1114, size: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1005, line: 88, baseType: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!1004, !1086, !1097}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1090, file: !1005, line: 106, baseType: !1119, size: 32, offset: 160)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1005, line: 92, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!125, !1086, !1097, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1005, line: 64, baseType: !124)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1090, file: !1005, line: 107, baseType: !1125, size: 32, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1005, line: 96, baseType: !1126)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!125, !1086, !1097, !124}
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1131, file: !1188, line: 603, type: !1190, isLocal: true, isDefinition: true, align: 32)
!1131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1133, globals: !1185, splitDebugInlining: false, nameTableKind: None)
!1132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!1133 = !{!124, !125, !1134}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1137, line: 336, size: 160, elements: !1138)
!1137 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1138 = !{!1139, !1159, !1163, !1167, !1180}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1136, file: !1137, line: 365, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!125, !1143, !1158}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1156, !1157}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1145, file: !137, line: 380, baseType: !140, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1145, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1145, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1145, file: !137, line: 386, baseType: !1151, size: 32, offset: 96)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1152, file: !137, line: 359, baseType: !150, size: 8)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1152, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1145, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1145, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1136, file: !1137, line: 366, baseType: !1160, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{null, !1143, !151}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1136, file: !1137, line: 374, baseType: !1164, size: 32, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!125, !1143}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1136, file: !1137, line: 377, baseType: !1168, size: 32, offset: 96)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!125, !1143, !1171}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1137, line: 122, size: 64, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178, !1179}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1173, file: !1137, line: 123, baseType: !208, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1173, file: !1137, line: 124, baseType: !150, size: 8, offset: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1173, file: !1137, line: 125, baseType: !150, size: 8, offset: 40)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1173, file: !1137, line: 126, baseType: !150, size: 8, offset: 48)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1173, file: !1137, line: 127, baseType: !150, size: 8, offset: 56)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1136, file: !1137, line: 379, baseType: !1181, size: 32, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!125, !1143, !1184}
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1185 = !{!1129, !1186}
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1131, file: !1188, line: 38, type: !1189, isLocal: true, isDefinition: true)
!1188 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1143)
!1190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1192)
!1192 = !{!1193, !1194}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1191, file: !434, line: 60, baseType: !1164, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1191, file: !434, line: 65, baseType: !1143, size: 32, offset: 32)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1197, file: !1203, line: 22, type: !1372, isLocal: false, isDefinition: true)
!1197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1199, globals: !1200, splitDebugInlining: false, nameTableKind: None)
!1198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!1199 = !{!30, !39, !42, !116}
!1200 = !{!1195, !1201, !1204, !1220, !1231, !1233, !1361}
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1197, file: !1203, line: 324, type: !991, isLocal: false, isDefinition: true, align: 16)
!1203 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1197, file: !1203, line: 324, type: !1206, isLocal: true, isDefinition: true, align: 32)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1218, !1219}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1207, file: !137, line: 380, baseType: !140, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1207, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1207, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1207, file: !137, line: 386, baseType: !1213, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1214, file: !137, line: 359, baseType: !150, size: 8)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1214, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1207, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1207, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1197, file: !1203, line: 324, type: !1222, isLocal: true, isDefinition: true, align: 32)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1224)
!1224 = !{!1225, !1230}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1223, file: !434, line: 60, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!125, !1229}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1223, file: !434, line: 65, baseType: !1229, size: 32, offset: 32)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1197, file: !1203, line: 324, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1197, file: !1203, line: 317, type: !1235, isLocal: true, isDefinition: true)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1236)
!1236 = !{!1237, !1238, !1314, !1318, !1326, !1349, !1353}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1235, file: !128, line: 66, baseType: !1226, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1235, file: !128, line: 69, baseType: !1239, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!125, !1229, !1242, !39, !30, !42}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1244)
!1244 = !{!1245, !1287, !1292, !1293, !1294, !1295, !1312, !1313}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1243, file: !31, line: 116, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1247)
!1247 = !{!1248, !1249}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1246, file: !31, line: 76, baseType: !30, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, scope: !1246, file: !31, line: 78, baseType: !1250, size: 32, offset: 32)
!1250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1246, file: !31, line: 78, size: 32, elements: !1251)
!1251 = !{!1252, !1266, !1271, !1273, !1285}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1250, file: !31, line: 79, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1254)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!125, !1242, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1264, !1265}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1258, file: !31, line: 183, baseType: !184, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1258, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1258, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1258, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1258, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1258, file: !31, line: 208, baseType: !1242, size: 32, offset: 160)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1250, file: !31, line: 80, baseType: !1267, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!125, !1242, !1257, !184}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1250, file: !31, line: 81, baseType: !1272, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1268)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1250, file: !31, line: 82, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!125, !1242, !1278, !184}
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1279, file: !31, line: 219, baseType: !1257, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1279, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1279, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1279, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1250, file: !31, line: 83, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1275)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1243, file: !31, line: 126, baseType: !1288, size: 32, offset: 64)
!1288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !31, line: 119, size: 32, elements: !1289)
!1289 = !{!1290, !1291}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1288, file: !31, line: 121, baseType: !184, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1288, file: !31, line: 125, baseType: !124, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1243, file: !31, line: 131, baseType: !1229, size: 32, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1243, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1243, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1243, file: !31, line: 156, baseType: !1296, size: 32, offset: 192)
!1296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !31, line: 152, size: 32, elements: !1297)
!1297 = !{!1298, !1303, !1307}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1296, file: !31, line: 153, baseType: !1299, size: 32)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1299, file: !31, line: 88, baseType: !227, size: 16)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1299, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1296, file: !31, line: 154, baseType: !1304, size: 32)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1304, file: !31, line: 96, baseType: !208, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1296, file: !31, line: 155, baseType: !1308, size: 32)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1309)
!1309 = !{!1310, !1311}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1308, file: !31, line: 100, baseType: !227, size: 16)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1308, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1243, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1243, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1235, file: !128, line: 74, baseType: !1315, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!125, !1229, !1242}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1235, file: !128, line: 77, baseType: !1319, size: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!125, !1229, !1322}
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{null, !1257, !125}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1235, file: !128, line: 81, baseType: !1327, size: 32, offset: 128)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!125, !1229, !1330, !116}
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1347, !1348}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1331, file: !117, line: 51, baseType: !1229, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1331, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1331, file: !117, line: 65, baseType: !1336, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!125, !1330, !1340, !153}
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1341, file: !117, line: 91, baseType: !184, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1341, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1341, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1341, file: !117, line: 107, baseType: !1330, size: 32, offset: 96)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1331, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1331, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1235, file: !128, line: 84, baseType: !1350, size: 32, offset: 160)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!125, !1229, !1330}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1235, file: !128, line: 86, baseType: !1354, size: 32, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!125, !1229, !1357}
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1358)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !1340, !125}
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1197, file: !1203, line: 26, type: !1363, isLocal: true, isDefinition: true)
!1363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1364, size: 2880, elements: !562)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1365, line: 22, size: 1440, elements: !1366)
!1365 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1366 = !{!1367, !1368}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1364, file: !1365, line: 23, baseType: !125, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1364, file: !1365, line: 24, baseType: !1369, size: 1408, offset: 32)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !1370)
!1370 = !{!1371}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1369, file: !492, line: 65, baseType: !497, size: 1408)
!1372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1374)
!1374 = !{!1375, !1376}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1373, file: !373, line: 17, baseType: !140, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1373, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1379, file: !1548, line: 762, type: !1687, isLocal: true, isDefinition: true)
!1379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1381, retainedTypes: !1399, globals: !1545, splitDebugInlining: false, nameTableKind: None)
!1380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!1381 = !{!46, !1382, !1388, !1393, !1004}
!1382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1383, line: 506, baseType: !32, size: 32, elements: !1384)
!1383 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1384 = !{!1385, !1386, !1387}
!1385 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1386 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1387 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1383, line: 512, baseType: !32, size: 32, elements: !1389)
!1389 = !{!1390, !1391, !1392}
!1390 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1391 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1392 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1393 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !902, line: 43, baseType: !32, size: 32, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398}
!1395 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1396 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1397 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1398 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1399 = !{!124, !125, !1400, !1470, !1475, !1435, !1388, !1382, !1480, !1481, !208, !1495, !1450, !393, !1505, !1506}
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1383, line: 523, size: 288, elements: !1403)
!1403 = !{!1404, !1425, !1431, !1436, !1440, !1441, !1442, !1446, !1466}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1402, file: !1383, line: 524, baseType: !1405, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!125, !1408, !1423, !1424}
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415, !1421, !1422}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1410, file: !137, line: 380, baseType: !140, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1410, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1410, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1410, file: !137, line: 386, baseType: !1416, size: 32, offset: 96)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1417, file: !137, line: 359, baseType: !150, size: 8)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1417, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1410, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1410, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1383, line: 237, baseType: !150)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1383, line: 257, baseType: !208)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1402, file: !1383, line: 530, baseType: !1426, size: 32, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!125, !1408, !1429}
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1383, line: 229, baseType: !208)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1402, file: !1383, line: 532, baseType: !1432, size: 32, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!125, !1408, !1435, !1430}
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1383, line: 216, baseType: !208)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1402, file: !1383, line: 535, baseType: !1437, size: 32, offset: 96)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!125, !1408, !1435}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1402, file: !1383, line: 537, baseType: !1437, size: 32, offset: 128)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1402, file: !1383, line: 539, baseType: !1437, size: 32, offset: 160)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1402, file: !1383, line: 541, baseType: !1443, size: 32, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!125, !1408, !1423, !1382, !1388}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1402, file: !1383, line: 544, baseType: !1447, size: 32, offset: 224)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!125, !1408, !1450, !153}
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1383, line: 478, size: 96, elements: !1452)
!1452 = !{!1453, !1460, !1465}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1451, file: !1383, line: 482, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1455, line: 33, baseType: !1456)
!1455 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1455, line: 29, size: 32, elements: !1457)
!1457 = !{!1458}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1456, file: !1455, line: 30, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1451, file: !1383, line: 485, baseType: !1461, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1383, line: 464, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null, !1408, !1450, !1435}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1451, file: !1383, line: 493, baseType: !1435, size: 32, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1402, file: !1383, line: 547, baseType: !1467, size: 32, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!208, !1408}
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1383, line: 428, size: 32, elements: !1473)
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1472, file: !1383, line: 434, baseType: !1435, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1383, line: 441, size: 32, elements: !1478)
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1477, file: !1383, line: 447, baseType: !1435, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 583, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 572, size: 320, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1483, file: !419, line: 574, baseType: !423, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1483, file: !419, line: 575, baseType: !423, size: 32, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1483, file: !419, line: 576, baseType: !423, size: 32, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1483, file: !419, line: 577, baseType: !423, size: 32, offset: 96)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1483, file: !419, line: 578, baseType: !423, size: 32, offset: 128)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1483, file: !419, line: 579, baseType: !423, size: 32, offset: 160)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1483, file: !419, line: 580, baseType: !423, size: 32, offset: 192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1483, file: !419, line: 581, baseType: !423, size: 32, offset: 224)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1483, file: !419, line: 582, baseType: !1494, size: 64, offset: 256)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !562)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 596, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 589, size: 288, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1503, !1504}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1497, file: !419, line: 591, baseType: !423, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1497, file: !419, line: 592, baseType: !423, size: 32, offset: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1497, file: !419, line: 593, baseType: !1502, size: 128, offset: 64)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !863)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1497, file: !419, line: 594, baseType: !1027, size: 64, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1497, file: !419, line: 595, baseType: !423, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1005, line: 100, size: 224, elements: !1509)
!1509 = !{!1510, !1515, !1516, !1525, !1530, !1535, !1540}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1508, file: !1005, line: 101, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1005, line: 76, baseType: !1512)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!125, !1408, !1097}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1508, file: !1005, line: 102, baseType: !1511, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1508, file: !1005, line: 103, baseType: !1517, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1005, line: 83, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!125, !1408, !1097, !1521, !124}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1005, line: 72, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{null, !1408, !1097, !124}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1508, file: !1005, line: 104, baseType: !1526, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1005, line: 79, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!125, !1408, !1097, !1055}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1508, file: !1005, line: 105, baseType: !1531, size: 32, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1005, line: 88, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!1004, !1408, !1097}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1508, file: !1005, line: 106, baseType: !1536, size: 32, offset: 160)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1005, line: 92, baseType: !1537)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!125, !1408, !1097, !1123}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1508, file: !1005, line: 107, baseType: !1541, size: 32, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1005, line: 96, baseType: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!125, !1408, !1097, !124}
!1545 = !{!1546, !1552, !1554, !1564, !1566, !1568, !1570, !1572, !1574, !1576, !1578, !1580, !1582, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1655, !1657, !1659, !1661, !1663, !1665, !1667, !1669, !1671, !1673, !1675, !1677, !1679, !1681, !1377, !1683, !1685, !1698, !1700, !1702, !1704, !1706, !1708, !1710, !1712, !1714}
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !1379, file: !1548, line: 762, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1548 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1550)
!1550 = !{!1551}
!1551 = !DISubrange(count: 5)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "__device_dts_ord_97", scope: !1379, file: !1548, line: 762, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_97", scope: !1379, file: !1548, line: 762, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1558)
!1558 = !{!1559, !1563}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1557, file: !434, line: 60, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!125, !1408}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1557, file: !434, line: 65, baseType: !1408, size: 32, offset: 32)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !1379, file: !1548, line: 766, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__device_dts_ord_98", scope: !1379, file: !1548, line: 766, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_98", scope: !1379, file: !1548, line: 766, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !1379, file: !1548, line: 770, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "__device_dts_ord_99", scope: !1379, file: !1548, line: 770, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_99", scope: !1379, file: !1548, line: 770, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !1379, file: !1548, line: 774, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "__device_dts_ord_100", scope: !1379, file: !1548, line: 774, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_100", scope: !1379, file: !1548, line: 774, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1379, file: !1548, line: 778, type: !1584, isLocal: false, isDefinition: true, align: 16)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 112, elements: !1585)
!1585 = !{!1586}
!1586 = !DISubrange(count: 7)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1379, file: !1548, line: 778, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1379, file: !1548, line: 778, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !1379, file: !1548, line: 782, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "__device_dts_ord_101", scope: !1379, file: !1548, line: 782, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_101", scope: !1379, file: !1548, line: 782, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !1379, file: !1548, line: 786, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__device_dts_ord_102", scope: !1379, file: !1548, line: 786, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_102", scope: !1379, file: !1548, line: 786, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !1379, file: !1548, line: 790, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__device_dts_ord_103", scope: !1379, file: !1548, line: 790, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_103", scope: !1379, file: !1548, line: 790, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !1379, file: !1548, line: 794, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__device_dts_ord_104", scope: !1379, file: !1548, line: 794, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_104", scope: !1379, file: !1548, line: 794, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !1379, file: !1548, line: 798, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__device_dts_ord_105", scope: !1379, file: !1548, line: 798, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_105", scope: !1379, file: !1548, line: 798, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !1379, file: !1548, line: 802, type: !1549, isLocal: false, isDefinition: true, align: 16)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__device_dts_ord_106", scope: !1379, file: !1548, line: 802, type: !1409, isLocal: false, isDefinition: true, align: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_106", scope: !1379, file: !1548, line: 802, type: !1556, isLocal: true, isDefinition: true, align: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1379, file: !1548, line: 762, type: !1629, isLocal: true, isDefinition: true)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1630, line: 237, size: 128, elements: !1631)
!1630 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1631 = !{!1632, !1633, !1634}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1629, file: !1630, line: 239, baseType: !1477, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1629, file: !1630, line: 241, baseType: !1408, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1629, file: !1630, line: 243, baseType: !1635, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1455, line: 40, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1455, line: 35, size: 64, elements: !1637)
!1637 = !{!1638, !1640}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1636, file: !1455, line: 36, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1636, file: !1455, line: 37, baseType: !1639, size: 32, offset: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_97", scope: !1379, file: !1548, line: 762, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1379, file: !1548, line: 766, type: !1629, isLocal: true, isDefinition: true)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_98", scope: !1379, file: !1548, line: 766, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1379, file: !1548, line: 770, type: !1629, isLocal: true, isDefinition: true)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_99", scope: !1379, file: !1548, line: 770, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1379, file: !1548, line: 774, type: !1629, isLocal: true, isDefinition: true)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_100", scope: !1379, file: !1548, line: 774, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1379, file: !1548, line: 778, type: !1629, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1379, file: !1548, line: 778, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1379, file: !1548, line: 782, type: !1629, isLocal: true, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_101", scope: !1379, file: !1548, line: 782, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1379, file: !1548, line: 786, type: !1629, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_102", scope: !1379, file: !1548, line: 786, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1379, file: !1548, line: 790, type: !1629, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_103", scope: !1379, file: !1548, line: 790, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1379, file: !1548, line: 794, type: !1629, isLocal: true, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_104", scope: !1379, file: !1548, line: 794, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "gpio_stm32_data_j", scope: !1379, file: !1548, line: 798, type: !1629, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_105", scope: !1379, file: !1548, line: 798, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "gpio_stm32_data_k", scope: !1379, file: !1548, line: 802, type: !1629, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_106", scope: !1379, file: !1548, line: 802, type: !1417, isLocal: true, isDefinition: true, align: 8)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1379, file: !1548, line: 656, type: !1401, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1379, file: !1548, line: 766, type: !1687, isLocal: true, isDefinition: true)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1630, line: 224, size: 160, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1688, file: !1630, line: 226, baseType: !1472, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1688, file: !1630, line: 228, baseType: !1055, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1688, file: !1630, line: 230, baseType: !125, size: 32, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1688, file: !1630, line: 231, baseType: !1694, size: 64, offset: 96)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1051, line: 343, size: 64, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1694, file: !1051, line: 344, baseType: !208, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1694, file: !1051, line: 345, baseType: !208, size: 32, offset: 32)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1379, file: !1548, line: 770, type: !1687, isLocal: true, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1379, file: !1548, line: 774, type: !1687, isLocal: true, isDefinition: true)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1379, file: !1548, line: 778, type: !1687, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1379, file: !1548, line: 782, type: !1687, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1379, file: !1548, line: 786, type: !1687, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1379, file: !1548, line: 790, type: !1687, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1379, file: !1548, line: 794, type: !1687, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_j", scope: !1379, file: !1548, line: 798, type: !1687, isLocal: true, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_k", scope: !1379, file: !1548, line: 802, type: !1687, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1718, file: !1859, line: 44, type: !2015, isLocal: false, isDefinition: true)
!1718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1720, retainedTypes: !1753, globals: !1856, splitDebugInlining: false, nameTableKind: None)
!1719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!1720 = !{!46, !1721, !1728, !1735, !1742, !1748, !1004}
!1721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1137, line: 47, baseType: !32, size: 32, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1726, !1727}
!1723 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1724 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1725 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1726 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1727 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1728 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1137, line: 75, baseType: !32, size: 32, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734}
!1730 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1731 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1732 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1733 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1734 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1735 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1137, line: 92, baseType: !32, size: 32, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741}
!1737 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1738 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1739 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1740 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1741 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1742 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1137, line: 84, baseType: !32, size: 32, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747}
!1744 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1745 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1746 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1747 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1748 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1137, line: 107, baseType: !32, size: 32, elements: !1749)
!1749 = !{!1750, !1751, !1752}
!1750 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1751 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1752 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1753 = !{!124, !125, !1754, !151, !150, !1803, !208, !1097, !1814, !227, !1853, !1855}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1137, line: 336, size: 160, elements: !1757)
!1757 = !{!1758, !1777, !1781, !1785, !1798}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1756, file: !1137, line: 365, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!125, !1762, !1158}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1775, !1776}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1764, file: !137, line: 380, baseType: !140, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1764, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1764, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1764, file: !137, line: 386, baseType: !1770, size: 32, offset: 96)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1772)
!1772 = !{!1773, !1774}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1771, file: !137, line: 359, baseType: !150, size: 8)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1771, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1764, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1764, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1756, file: !1137, line: 366, baseType: !1778, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{null, !1762, !151}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1756, file: !1137, line: 374, baseType: !1782, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!125, !1762}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1756, file: !1137, line: 377, baseType: !1786, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!125, !1762, !1789}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1137, line: 122, size: 64, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1791, file: !1137, line: 123, baseType: !208, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1791, file: !1137, line: 124, baseType: !150, size: 8, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1791, file: !1137, line: 125, baseType: !150, size: 8, offset: 40)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1791, file: !1137, line: 126, baseType: !150, size: 8, offset: 48)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1791, file: !1137, line: 127, baseType: !150, size: 8, offset: 56)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1756, file: !1137, line: 379, baseType: !1799, size: 32, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!125, !1762, !1802}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 836, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 827, size: 224, elements: !1806)
!1806 = !{!1807, !1808, !1809, !1810, !1811, !1812, !1813}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1805, file: !419, line: 829, baseType: !423, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1805, file: !419, line: 830, baseType: !423, size: 32, offset: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1805, file: !419, line: 831, baseType: !423, size: 32, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1805, file: !419, line: 832, baseType: !423, size: 32, offset: 96)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1805, file: !419, line: 833, baseType: !423, size: 32, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1805, file: !419, line: 834, baseType: !423, size: 32, offset: 160)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1805, file: !419, line: 835, baseType: !423, size: 32, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1005, line: 100, size: 224, elements: !1817)
!1817 = !{!1818, !1823, !1824, !1833, !1838, !1843, !1848}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1816, file: !1005, line: 101, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1005, line: 76, baseType: !1820)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!125, !1762, !1097}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1816, file: !1005, line: 102, baseType: !1819, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1816, file: !1005, line: 103, baseType: !1825, size: 32, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1005, line: 83, baseType: !1826)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!125, !1762, !1097, !1829, !124}
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1005, line: 72, baseType: !1830)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1762, !1097, !124}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1816, file: !1005, line: 104, baseType: !1834, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1005, line: 79, baseType: !1835)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!125, !1762, !1097, !1055}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1816, file: !1005, line: 105, baseType: !1839, size: 32, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1005, line: 88, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!1004, !1762, !1097}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1816, file: !1005, line: 106, baseType: !1844, size: 32, offset: 160)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1005, line: 92, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!125, !1762, !1097, !1123}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1816, file: !1005, line: 107, baseType: !1849, size: 32, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1005, line: 96, baseType: !1850)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!125, !1762, !1097, !124}
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1854)
!1854 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!1856 = !{!1716, !1857, !1861, !1863, !1870, !1872, !1874, !1876, !1878, !1880, !1882, !1884, !1886, !1888, !1890, !1892, !1894, !1896, !1898, !1900, !1902, !1904, !1948, !1951, !1953, !1956, !1959, !1961, !1967, !1969, !1971, !1973, !1975, !1977, !1979, !1981, !1983, !1985, !1987, !1989, !1991, !1993, !1995, !1997, !1999, !2001, !2003, !2005, !2007, !2009, !2011, !2013}
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1860, isLocal: false, isDefinition: true, align: 16)
!1859 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "__device_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1763, isLocal: false, isDefinition: true, align: 32)
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1865, isLocal: true, isDefinition: true, align: 32)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1866, file: !434, line: 60, baseType: !1782, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1866, file: !434, line: 65, baseType: !1762, size: 32, offset: 32)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1860, isLocal: false, isDefinition: true, align: 16)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "__device_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1763, isLocal: false, isDefinition: true, align: 32)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1865, isLocal: true, isDefinition: true, align: 32)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1860, isLocal: false, isDefinition: true, align: 16)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1763, isLocal: false, isDefinition: true, align: 32)
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1865, isLocal: true, isDefinition: true, align: 32)
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1860, isLocal: false, isDefinition: true, align: 16)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1763, isLocal: false, isDefinition: true, align: 32)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1865, isLocal: true, isDefinition: true, align: 32)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1860, isLocal: false, isDefinition: true, align: 16)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "__device_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1763, isLocal: false, isDefinition: true, align: 32)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1865, isLocal: true, isDefinition: true, align: 32)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1771, isLocal: true, isDefinition: true, align: 8)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1771, isLocal: true, isDefinition: true, align: 8)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1771, isLocal: true, isDefinition: true, align: 8)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1771, isLocal: true, isDefinition: true, align: 8)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1771, isLocal: true, isDefinition: true, align: 8)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1718, file: !1859, line: 1914, type: !1906, isLocal: true, isDefinition: true)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1908, line: 22, size: 224, elements: !1909)
!1908 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1909 = !{!1910, !1911, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1907, file: !1908, line: 24, baseType: !1803, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1907, file: !1908, line: 26, baseType: !1912, size: 32, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1051, line: 343, size: 64, elements: !1915)
!1915 = !{!1916, !1917}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1914, file: !1051, line: 344, baseType: !208, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1914, file: !1051, line: 345, baseType: !208, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1907, file: !1908, line: 28, baseType: !272, size: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1907, file: !1908, line: 30, baseType: !153, size: 8, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1907, file: !1908, line: 32, baseType: !125, size: 32, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1907, file: !1908, line: 34, baseType: !153, size: 8, offset: 160)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1907, file: !1908, line: 36, baseType: !153, size: 8, offset: 168)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1907, file: !1908, line: 38, baseType: !153, size: 8, offset: 176)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1907, file: !1908, line: 40, baseType: !153, size: 8, offset: 184)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1907, file: !1908, line: 41, baseType: !1926, size: 32, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1929, line: 60, size: 64, elements: !1930)
!1929 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1930 = !{!1931, !1947}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1928, file: !1929, line: 69, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1929, line: 50, size: 64, elements: !1935)
!1935 = !{!1936, !1945, !1946}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1934, file: !1929, line: 52, baseType: !1937, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1940, line: 37, baseType: !1941)
!1940 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1940, line: 32, size: 64, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1941, file: !1940, line: 34, baseType: !208, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1941, file: !1940, line: 36, baseType: !208, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1934, file: !1929, line: 54, baseType: !150, size: 8, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1934, file: !1929, line: 56, baseType: !150, size: 8, offset: 40)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1928, file: !1929, line: 71, baseType: !150, size: 8, offset: 32)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1718, file: !1859, line: 1914, type: !1950, isLocal: true, isDefinition: true)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 64, elements: !662)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1927, isLocal: true, isDefinition: true)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1955, isLocal: true, isDefinition: true)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1933, size: 64, elements: !662)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_63", scope: !1718, file: !1859, line: 1914, type: !1958, isLocal: true, isDefinition: true)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 128, elements: !562)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1718, file: !1859, line: 1539, type: !1755, isLocal: true, isDefinition: true)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1718, file: !1859, line: 1914, type: !1963, isLocal: true, isDefinition: true)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1908, line: 74, size: 64, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1963, file: !1908, line: 76, baseType: !208, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1963, file: !1908, line: 78, baseType: !1762, size: 32, offset: 32)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1718, file: !1859, line: 1914, type: !1906, isLocal: true, isDefinition: true)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1718, file: !1859, line: 1914, type: !1950, isLocal: true, isDefinition: true)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1927, isLocal: true, isDefinition: true)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1955, isLocal: true, isDefinition: true)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_49", scope: !1718, file: !1859, line: 1914, type: !1958, isLocal: true, isDefinition: true)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1718, file: !1859, line: 1914, type: !1963, isLocal: true, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1718, file: !1859, line: 1914, type: !1906, isLocal: true, isDefinition: true)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1718, file: !1859, line: 1914, type: !1950, isLocal: true, isDefinition: true)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1927, isLocal: true, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1955, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1718, file: !1859, line: 1914, type: !1958, isLocal: true, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1718, file: !1859, line: 1914, type: !1963, isLocal: true, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1718, file: !1859, line: 1914, type: !1906, isLocal: true, isDefinition: true)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1718, file: !1859, line: 1914, type: !1950, isLocal: true, isDefinition: true)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1927, isLocal: true, isDefinition: true)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1955, isLocal: true, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_57", scope: !1718, file: !1859, line: 1914, type: !1958, isLocal: true, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1718, file: !1859, line: 1914, type: !1963, isLocal: true, isDefinition: true)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_4", scope: !1718, file: !1859, line: 1914, type: !1906, isLocal: true, isDefinition: true)
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(name: "pclken_4", scope: !1718, file: !1859, line: 1914, type: !1950, isLocal: true, isDefinition: true)
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1927, isLocal: true, isDefinition: true)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1955, isLocal: true, isDefinition: true)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_60", scope: !1718, file: !1859, line: 1914, type: !1958, isLocal: true, isDefinition: true)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "uart_stm32_data_4", scope: !1718, file: !1859, line: 1914, type: !1963, isLocal: true, isDefinition: true)
!2015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2017)
!2017 = !{!2018, !2019}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2016, file: !373, line: 17, baseType: !140, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2016, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2022, file: !2100, line: 65, type: !423, isLocal: true, isDefinition: true)
!2022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2024, retainedTypes: !2025, globals: !2097, splitDebugInlining: false, nameTableKind: None)
!2023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2024 = !{!749}
!2025 = !{!2026, !2028, !919, !150, !208, !2036, !2067}
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !2027, line: 46, baseType: !598)
!2027 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2030, file: !680, line: 766, baseType: !423, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2030, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2030, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2030, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2039)
!2039 = !{!2040, !2042, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2057, !2062, !2066}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2038, file: !680, line: 413, baseType: !2041, size: 256)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2038, file: !680, line: 414, baseType: !2043, size: 768, offset: 256)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !2044)
!2044 = !{!2045}
!2045 = !DISubrange(count: 24)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2038, file: !680, line: 415, baseType: !2041, size: 256, offset: 1024)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2038, file: !680, line: 416, baseType: !2043, size: 768, offset: 1280)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2038, file: !680, line: 417, baseType: !2041, size: 256, offset: 2048)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2038, file: !680, line: 418, baseType: !2043, size: 768, offset: 2304)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2038, file: !680, line: 419, baseType: !2041, size: 256, offset: 3072)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2038, file: !680, line: 420, baseType: !2043, size: 768, offset: 3328)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2038, file: !680, line: 421, baseType: !2041, size: 256, offset: 4096)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2038, file: !680, line: 422, baseType: !2054, size: 1792, offset: 4352)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !2055)
!2055 = !{!2056}
!2056 = !DISubrange(count: 56)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2038, file: !680, line: 423, baseType: !2058, size: 1920, offset: 6144)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 1920, elements: !2060)
!2059 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!2060 = !{!2061}
!2061 = !DISubrange(count: 240)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2038, file: !680, line: 424, baseType: !2063, size: 20608, offset: 8064)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !2064)
!2064 = !{!2065}
!2065 = !DISubrange(count: 644)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2038, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2076, !2077, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2088, !2089, !2090, !2092, !2094, !2096}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2069, file: !680, line: 447, baseType: !684, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2069, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2069, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2069, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2069, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2069, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2069, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 96, elements: !364)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2069, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2069, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2069, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2069, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2069, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2069, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2069, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2069, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !562)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2069, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2069, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2069, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!2091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 128, elements: !863)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2069, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!2093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 160, elements: !1550)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2069, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1550)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2069, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2097 = !{!2098, !2124, !2127, !2129, !2131, !2020}
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2022, file: !2100, line: 285, type: !2101, isLocal: true, isDefinition: true, align: 32)
!2100 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2103)
!2103 = !{!2104, !2123}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2102, file: !434, line: 60, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!125, !2108}
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2121, !2122}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2110, file: !137, line: 380, baseType: !140, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2110, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2110, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2110, file: !137, line: 386, baseType: !2116, size: 32, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2117, file: !137, line: 359, baseType: !150, size: 8)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2117, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2110, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2110, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2102, file: !434, line: 65, baseType: !2108, size: 32, offset: 32)
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(name: "lock", scope: !2022, file: !2100, line: 34, type: !2126, isLocal: true, isDefinition: true)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "last_load", scope: !2022, file: !2100, line: 36, type: !208, isLocal: true, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2022, file: !2100, line: 48, type: !208, isLocal: true, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2022, file: !2100, line: 54, type: !208, isLocal: true, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2135, file: !2217, line: 22, type: !2219, isLocal: true, isDefinition: true)
!2135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2137, retainedTypes: !2138, globals: !2214, splitDebugInlining: false, nameTableKind: None)
!2136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2137 = !{!1382, !1388}
!2138 = !{!2139, !2203, !2208, !1435, !1388, !1382, !2213, !124}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1383, line: 523, size: 288, elements: !2142)
!2142 = !{!2143, !2162, !2166, !2170, !2174, !2175, !2176, !2180, !2199}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2141, file: !1383, line: 524, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!125, !2147, !1423, !1424}
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2149)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2160, !2161}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2149, file: !137, line: 380, baseType: !140, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2149, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2149, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2149, file: !137, line: 386, baseType: !2155, size: 32, offset: 96)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2156, file: !137, line: 359, baseType: !150, size: 8)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2156, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2149, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2149, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2141, file: !1383, line: 530, baseType: !2163, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!125, !2147, !1429}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2141, file: !1383, line: 532, baseType: !2167, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!125, !2147, !1435, !1430}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2141, file: !1383, line: 535, baseType: !2171, size: 32, offset: 96)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!125, !2147, !1435}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2141, file: !1383, line: 537, baseType: !2171, size: 32, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2141, file: !1383, line: 539, baseType: !2171, size: 32, offset: 160)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2141, file: !1383, line: 541, baseType: !2177, size: 32, offset: 192)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!125, !2147, !1423, !1382, !1388}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2141, file: !1383, line: 544, baseType: !2181, size: 32, offset: 224)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!125, !2147, !2184, !153}
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1383, line: 478, size: 96, elements: !2186)
!2186 = !{!2187, !2193, !2198}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2185, file: !1383, line: 482, baseType: !2188, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1455, line: 33, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1455, line: 29, size: 32, elements: !2190)
!2190 = !{!2191}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2189, file: !1455, line: 30, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2185, file: !1383, line: 485, baseType: !2194, size: 32, offset: 32)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1383, line: 464, baseType: !2195)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{null, !2147, !2184, !1435}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2185, file: !1383, line: 493, baseType: !1435, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2141, file: !1383, line: 547, baseType: !2200, size: 32, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!208, !2147}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1383, line: 428, size: 32, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2205, file: !1383, line: 434, baseType: !1435, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2210)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1383, line: 441, size: 32, elements: !2211)
!2211 = !{!2212}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2210, file: !1383, line: 447, baseType: !1435, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2214 = !{!2215, !2133}
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2216 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2135, file: !2217, line: 37, type: !2218, isLocal: true, isDefinition: true)
!2217 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2220, size: 352, elements: !2221)
!2220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2147)
!2221 = !{!2222}
!2222 = !DISubrange(count: 11)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2225, file: !2267, line: 139, type: !2271, isLocal: false, isDefinition: true)
!2225 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2226, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2227, globals: !2264, splitDebugInlining: false, nameTableKind: None)
!2226 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2227 = !{!2228}
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 677, baseType: !2230)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 643, size: 1152, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2230, file: !419, line: 645, baseType: !423, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2230, file: !419, line: 646, baseType: !423, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2230, file: !419, line: 647, baseType: !423, size: 32, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2230, file: !419, line: 648, baseType: !423, size: 32, offset: 96)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2230, file: !419, line: 649, baseType: !423, size: 32, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2230, file: !419, line: 650, baseType: !423, size: 32, offset: 160)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2230, file: !419, line: 651, baseType: !423, size: 32, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2230, file: !419, line: 652, baseType: !208, size: 32, offset: 224)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2230, file: !419, line: 653, baseType: !423, size: 32, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2230, file: !419, line: 654, baseType: !423, size: 32, offset: 288)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2230, file: !419, line: 655, baseType: !1027, size: 64, offset: 320)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2230, file: !419, line: 656, baseType: !423, size: 32, offset: 384)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2230, file: !419, line: 657, baseType: !423, size: 32, offset: 416)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2230, file: !419, line: 658, baseType: !423, size: 32, offset: 448)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2230, file: !419, line: 659, baseType: !208, size: 32, offset: 480)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2230, file: !419, line: 660, baseType: !423, size: 32, offset: 512)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2230, file: !419, line: 661, baseType: !423, size: 32, offset: 544)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2230, file: !419, line: 662, baseType: !1027, size: 64, offset: 576)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2230, file: !419, line: 663, baseType: !423, size: 32, offset: 640)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2230, file: !419, line: 664, baseType: !423, size: 32, offset: 672)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2230, file: !419, line: 665, baseType: !423, size: 32, offset: 704)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2230, file: !419, line: 666, baseType: !208, size: 32, offset: 736)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2230, file: !419, line: 667, baseType: !423, size: 32, offset: 768)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2230, file: !419, line: 668, baseType: !423, size: 32, offset: 800)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2230, file: !419, line: 669, baseType: !1027, size: 64, offset: 832)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2230, file: !419, line: 670, baseType: !423, size: 32, offset: 896)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2230, file: !419, line: 671, baseType: !423, size: 32, offset: 928)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2230, file: !419, line: 672, baseType: !1027, size: 64, offset: 960)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2230, file: !419, line: 673, baseType: !423, size: 32, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2230, file: !419, line: 674, baseType: !423, size: 32, offset: 1056)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2230, file: !419, line: 675, baseType: !423, size: 32, offset: 1088)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2230, file: !419, line: 676, baseType: !423, size: 32, offset: 1120)
!2264 = !{!2265, !2268, !2223}
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2225, file: !2267, line: 137, type: !208, isLocal: false, isDefinition: true)
!2267 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2225, file: !2267, line: 138, type: !2270, isLocal: false, isDefinition: true)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2274, file: !2277, line: 23, type: !2278, isLocal: false, isDefinition: true)
!2274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2276, splitDebugInlining: false, nameTableKind: None)
!2275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2276 = !{!2272}
!2277 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2281, file: !2285, line: 37, type: !2539, isLocal: false, isDefinition: true)
!2281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2283, retainedTypes: !2292, globals: !2365, splitDebugInlining: false, nameTableKind: None)
!2282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2283 = !{!2284, !46, !749}
!2284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2285, line: 63, baseType: !32, size: 32, elements: !2286)
!2285 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2286 = !{!2287, !2288, !2289, !2290, !2291}
!2287 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2288 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2289 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2290 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2291 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2292 = !{!22, !272, !124, !125, !2293, !393, !208, !2323, !919, !150, !2348}
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2295)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2296, line: 51, size: 64, elements: !2297)
!2296 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2297 = !{!2298, !2318}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2295, file: !2296, line: 52, baseType: !2299, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2296, line: 38, baseType: !2300)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!125, !2303, !184, !227}
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2305)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2306)
!2306 = !{!2307, !2308, !2309, !2310, !2316, !2317}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2305, file: !137, line: 380, baseType: !140, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2305, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2305, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2305, file: !137, line: 386, baseType: !2311, size: 32, offset: 96)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2313)
!2313 = !{!2314, !2315}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2312, file: !137, line: 359, baseType: !150, size: 8)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2312, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2305, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2305, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2295, file: !2296, line: 53, baseType: !2319, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2296, line: 47, baseType: !2320)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!125, !2303, !184, !227, !208}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2325, file: !680, line: 447, baseType: !684, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2325, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2325, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2325, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2325, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2325, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2325, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2325, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2325, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2325, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2325, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2325, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2325, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2325, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2325, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2325, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2325, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2325, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2325, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2325, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2325, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2350)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2351)
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2350, file: !680, line: 413, baseType: !2041, size: 256)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2350, file: !680, line: 414, baseType: !2043, size: 768, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2350, file: !680, line: 415, baseType: !2041, size: 256, offset: 1024)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2350, file: !680, line: 416, baseType: !2043, size: 768, offset: 1280)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2350, file: !680, line: 417, baseType: !2041, size: 256, offset: 2048)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2350, file: !680, line: 418, baseType: !2043, size: 768, offset: 2304)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2350, file: !680, line: 419, baseType: !2041, size: 256, offset: 3072)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2350, file: !680, line: 420, baseType: !2043, size: 768, offset: 3328)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2350, file: !680, line: 421, baseType: !2041, size: 256, offset: 4096)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2350, file: !680, line: 422, baseType: !2054, size: 1792, offset: 4352)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2350, file: !680, line: 423, baseType: !2058, size: 1920, offset: 6144)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2350, file: !680, line: 424, baseType: !2063, size: 20608, offset: 8064)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2350, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2365 = !{!2279, !2366, !2488, !2497, !2499, !2502, !2507, !2509, !2514}
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "_kernel", scope: !2281, file: !2285, line: 40, type: !2368, isLocal: false, isDefinition: true)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !567, line: 158, size: 288, elements: !2369)
!2369 = !{!2370, !2483}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2368, file: !567, line: 159, baseType: !2371, size: 192)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 192, elements: !662)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !567, line: 100, size: 192, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2477, !2478, !2479, !2480}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2372, file: !567, line: 102, baseType: !208, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2372, file: !567, line: 105, baseType: !393, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2372, file: !567, line: 108, baseType: !2377, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2379)
!2379 = !{!2380, !2438, !2450, !2451, !2452, !2453, !2459, !2472}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2378, file: !531, line: 247, baseType: !2381, size: 384)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2382)
!2382 = !{!2383, !2407, !2414, !2415, !2416, !2425, !2426, !2427}
!2383 = !DIDerivedType(tag: DW_TAG_member, scope: !2381, file: !531, line: 60, baseType: !2384, size: 64)
!2384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2381, file: !531, line: 60, size: 64, elements: !2385)
!2385 = !{!2386, !2401}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2384, file: !531, line: 61, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2388)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2389)
!2389 = !{!2390, !2396}
!2390 = !DIDerivedType(tag: DW_TAG_member, scope: !2388, file: !541, line: 38, baseType: !2391, size: 32)
!2391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2388, file: !541, line: 38, size: 32, elements: !2392)
!2392 = !{!2393, !2395}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2391, file: !541, line: 39, baseType: !2394, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2391, file: !541, line: 40, baseType: !2394, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, scope: !2388, file: !541, line: 42, baseType: !2397, size: 32, offset: 32)
!2397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2388, file: !541, line: 42, size: 32, elements: !2398)
!2398 = !{!2399, !2400}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2397, file: !541, line: 43, baseType: !2394, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2397, file: !541, line: 44, baseType: !2394, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2384, file: !531, line: 62, baseType: !2402, size: 64)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2403)
!2403 = !{!2404}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2402, file: !557, line: 50, baseType: !2405, size: 64)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2406, size: 64, elements: !562)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2381, file: !531, line: 68, baseType: !2408, size: 32, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2411)
!2411 = !{!2412}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2410, file: !567, line: 232, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2388)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2381, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2381, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2416 = !DIDerivedType(tag: DW_TAG_member, scope: !2381, file: !531, line: 90, baseType: !2417, size: 16, offset: 112)
!2417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2381, file: !531, line: 90, size: 16, elements: !2418)
!2418 = !{!2419, !2424}
!2419 = !DIDerivedType(tag: DW_TAG_member, scope: !2417, file: !531, line: 91, baseType: !2420, size: 16)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2417, file: !531, line: 91, size: 16, elements: !2421)
!2421 = !{!2422, !2423}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2420, file: !531, line: 96, baseType: !581, size: 8)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2420, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2417, file: !531, line: 100, baseType: !227, size: 16)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2381, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2381, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2381, file: !531, line: 131, baseType: !2428, size: 192, offset: 192)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2429)
!2429 = !{!2430, !2431, !2437}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2428, file: !567, line: 245, baseType: !2387, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2428, file: !567, line: 246, baseType: !2432, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2433)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{null, !2436}
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2428, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2378, file: !531, line: 250, baseType: !2439, size: 288, offset: 384)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2440)
!2440 = !{!2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2439, file: !601, line: 26, baseType: !208, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2439, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2439, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2439, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2439, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2439, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2439, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2439, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2439, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2378, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2378, file: !531, line: 256, baseType: !2409, size: 64, offset: 704)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2378, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2378, file: !531, line: 300, baseType: !2454, size: 96, offset: 800)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2455)
!2455 = !{!2456, !2457, !2458}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2454, file: !531, line: 153, baseType: !22, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2454, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2454, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2378, file: !531, line: 325, baseType: !2460, size: 32, offset: 896)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2462)
!2462 = !{!2463, !2469, !2470}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2461, file: !624, line: 5074, baseType: !2464, size: 96)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2465)
!2465 = !{!2466, !2467, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2464, file: !628, line: 57, baseType: !631, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2464, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2464, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2461, file: !624, line: 5075, baseType: !2409, size: 64, offset: 96)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2461, file: !624, line: 5076, baseType: !2471, offset: 160)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2378, file: !531, line: 343, baseType: !2473, size: 64, offset: 928)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2474)
!2474 = !{!2475, !2476}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2473, file: !601, line: 63, baseType: !208, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2473, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2372, file: !567, line: 111, baseType: !2377, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2372, file: !567, line: 124, baseType: !125, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2372, file: !567, line: 127, baseType: !150, size: 8, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2372, file: !567, line: 153, baseType: !2481, offset: 168)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2482, line: 33, elements: !639)
!2482 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2368, file: !567, line: 170, baseType: !2484, size: 96, offset: 192)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2484, file: !567, line: 86, baseType: !2377, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2484, file: !567, line: 90, baseType: !2413, size: 64, offset: 32)
!2488 = !DIGlobalVariableExpression(var: !2489, expr: !DIExpression())
!2489 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2281, file: !2285, line: 43, type: !2490, isLocal: false, isDefinition: true, align: 512)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2491, size: 8704, elements: !2495)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2492, line: 47, size: 8, elements: !2493)
!2492 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2493 = !{!2494}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2491, file: !2492, line: 48, baseType: !142, size: 8)
!2495 = !{!2496}
!2496 = !DISubrange(count: 1088)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2281, file: !2285, line: 44, type: !2378, isLocal: false, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2281, file: !2285, line: 48, type: !2501, isLocal: false, isDefinition: true)
!2501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 1024, elements: !662)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2281, file: !2285, line: 86, type: !2504, isLocal: false, isDefinition: true, align: 512)
!2504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2491, size: 16896, elements: !2505)
!2505 = !{!663, !2506}
!2506 = !DISubrange(count: 2112)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2281, file: !2285, line: 217, type: !153, isLocal: false, isDefinition: true)
!2509 = !DIGlobalVariableExpression(var: !2510, expr: !DIExpression())
!2510 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2281, file: !2285, line: 50, type: !2511, isLocal: true, isDefinition: true, align: 512)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2491, size: 3072, elements: !2512)
!2512 = !{!663, !2513}
!2513 = !DISubrange(count: 384)
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(name: "levels", scope: !2516, file: !2285, line: 232, type: !2536, isLocal: true, isDefinition: true)
!2516 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2285, file: !2285, line: 230, type: !2517, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !2519)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !2284}
!2519 = !{!2520, !2521, !2531, !2535}
!2520 = !DILocalVariable(name: "level", arg: 1, scope: !2516, file: !2285, line: 230, type: !2284)
!2521 = !DILocalVariable(name: "entry", scope: !2516, file: !2285, line: 244, type: !2522)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2525)
!2525 = !{!2526, !2530}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2524, file: !434, line: 60, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!125, !2303}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2524, file: !434, line: 65, baseType: !2303, size: 32, offset: 32)
!2531 = !DILocalVariable(name: "dev", scope: !2532, file: !2285, line: 247, type: !2303)
!2532 = distinct !DILexicalBlock(scope: !2533, file: !2285, line: 246, column: 64)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !2285, line: 246, column: 2)
!2534 = distinct !DILexicalBlock(scope: !2516, file: !2285, line: 246, column: 2)
!2535 = !DILocalVariable(name: "rc", scope: !2532, file: !2285, line: 248, type: !125)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2522, size: 192, elements: !2537)
!2537 = !{!2538}
!2538 = !DISubrange(count: 6)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2540, file: !373, line: 17, baseType: !140, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2540, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "states_str", scope: !2546, file: !2547, line: 276, type: !2668, isLocal: true, isDefinition: true)
!2546 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2547, file: !2547, line: 271, type: !2548, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !2659)
!2547 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!140, !2550, !393, !272}
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2551)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2553)
!2553 = !{!2554, !2612, !2624, !2625, !2626, !2627, !2633, !2646}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2552, file: !531, line: 247, baseType: !2555, size: 384)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2556)
!2556 = !{!2557, !2581, !2588, !2589, !2590, !2599, !2600, !2601}
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !531, line: 60, baseType: !2558, size: 64)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !531, line: 60, size: 64, elements: !2559)
!2559 = !{!2560, !2575}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2558, file: !531, line: 61, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2563)
!2563 = !{!2564, !2570}
!2564 = !DIDerivedType(tag: DW_TAG_member, scope: !2562, file: !541, line: 38, baseType: !2565, size: 32)
!2565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2562, file: !541, line: 38, size: 32, elements: !2566)
!2566 = !{!2567, !2569}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2565, file: !541, line: 39, baseType: !2568, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2565, file: !541, line: 40, baseType: !2568, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2562, file: !541, line: 42, baseType: !2571, size: 32, offset: 32)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2562, file: !541, line: 42, size: 32, elements: !2572)
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2571, file: !541, line: 43, baseType: !2568, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2571, file: !541, line: 44, baseType: !2568, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2558, file: !531, line: 62, baseType: !2576, size: 64)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2577)
!2577 = !{!2578}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2576, file: !557, line: 50, baseType: !2579, size: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2580, size: 64, elements: !562)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2555, file: !531, line: 68, baseType: !2582, size: 32, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2585)
!2585 = !{!2586}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2584, file: !567, line: 232, baseType: !2587, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2562)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2555, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2555, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2590 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !531, line: 90, baseType: !2591, size: 16, offset: 112)
!2591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !531, line: 90, size: 16, elements: !2592)
!2592 = !{!2593, !2598}
!2593 = !DIDerivedType(tag: DW_TAG_member, scope: !2591, file: !531, line: 91, baseType: !2594, size: 16)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2591, file: !531, line: 91, size: 16, elements: !2595)
!2595 = !{!2596, !2597}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2594, file: !531, line: 96, baseType: !581, size: 8)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2594, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2591, file: !531, line: 100, baseType: !227, size: 16)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2555, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2555, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2555, file: !531, line: 131, baseType: !2602, size: 192, offset: 192)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2603)
!2603 = !{!2604, !2605, !2611}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2602, file: !567, line: 245, baseType: !2561, size: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2602, file: !567, line: 246, baseType: !2606, size: 32, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2607)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{null, !2610}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2602, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2552, file: !531, line: 250, baseType: !2613, size: 288, offset: 384)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2613, file: !601, line: 26, baseType: !208, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2613, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2613, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2613, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2613, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2613, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2613, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2613, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2613, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2552, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2552, file: !531, line: 256, baseType: !2583, size: 64, offset: 704)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2552, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2552, file: !531, line: 300, baseType: !2628, size: 96, offset: 800)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2629)
!2629 = !{!2630, !2631, !2632}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2628, file: !531, line: 153, baseType: !22, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2628, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2628, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2552, file: !531, line: 325, baseType: !2634, size: 32, offset: 896)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2636)
!2636 = !{!2637, !2643, !2644}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2635, file: !624, line: 5074, baseType: !2638, size: 96)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2639)
!2639 = !{!2640, !2641, !2642}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2638, file: !628, line: 57, baseType: !631, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2638, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2638, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2635, file: !624, line: 5075, baseType: !2583, size: 64, offset: 96)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2635, file: !624, line: 5076, baseType: !2645, offset: 160)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2552, file: !531, line: 343, baseType: !2647, size: 64, offset: 928)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2648)
!2648 = !{!2649, !2650}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2647, file: !601, line: 63, baseType: !208, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2647, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2653, globals: !2655, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2653 = !{!124, !140, !2026, !150, !125, !2654, !24, !272, !393, !22, !208, !1853}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2655 = !{!2544, !2656}
!2656 = !DIGlobalVariableExpression(var: !2657, expr: !DIExpression())
!2657 = distinct !DIGlobalVariable(name: "states_sz", scope: !2546, file: !2547, line: 279, type: !2658, isLocal: true, isDefinition: true)
!2658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2218, size: 256, elements: !337)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666}
!2660 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2546, file: !2547, line: 271, type: !2550)
!2661 = !DILocalVariable(name: "buf", arg: 2, scope: !2546, file: !2547, line: 271, type: !393)
!2662 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2546, file: !2547, line: 271, type: !272)
!2663 = !DILocalVariable(name: "off", scope: !2546, file: !2547, line: 273, type: !272)
!2664 = !DILocalVariable(name: "bit", scope: !2546, file: !2547, line: 274, type: !150)
!2665 = !DILocalVariable(name: "thread_state", scope: !2546, file: !2547, line: 275, type: !150)
!2666 = !DILocalVariable(name: "index", scope: !2667, file: !2547, line: 293, type: !150)
!2667 = distinct !DILexicalBlock(scope: !2546, file: !2547, line: 293, column: 2)
!2668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2669 = !DIGlobalVariableExpression(var: !2670, expr: !DIExpression())
!2670 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2671, file: !2779, line: 56, type: !2768, isLocal: false, isDefinition: true)
!2671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2673, globals: !2776, splitDebugInlining: false, nameTableKind: None)
!2672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2673 = !{!2674, !393, !124, !2774, !184, !2026, !919, !125, !208, !1853, !2775}
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2676)
!2676 = !{!2677, !2735, !2747, !2748, !2749, !2750, !2756, !2769}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2675, file: !531, line: 247, baseType: !2678, size: 384)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2679)
!2679 = !{!2680, !2704, !2711, !2712, !2713, !2722, !2723, !2724}
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !531, line: 60, baseType: !2681, size: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !531, line: 60, size: 64, elements: !2682)
!2682 = !{!2683, !2698}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2681, file: !531, line: 61, baseType: !2684, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2686)
!2686 = !{!2687, !2693}
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !541, line: 38, baseType: !2688, size: 32)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !541, line: 38, size: 32, elements: !2689)
!2689 = !{!2690, !2692}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2688, file: !541, line: 39, baseType: !2691, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2688, file: !541, line: 40, baseType: !2691, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2685, file: !541, line: 42, baseType: !2694, size: 32, offset: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !541, line: 42, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2694, file: !541, line: 43, baseType: !2691, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2694, file: !541, line: 44, baseType: !2691, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2681, file: !531, line: 62, baseType: !2699, size: 64)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2700)
!2700 = !{!2701}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2699, file: !557, line: 50, baseType: !2702, size: 64)
!2702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2703, size: 64, elements: !562)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2678, file: !531, line: 68, baseType: !2705, size: 32, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2708)
!2708 = !{!2709}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2707, file: !567, line: 232, baseType: !2710, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2685)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2678, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2678, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !531, line: 90, baseType: !2714, size: 16, offset: 112)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !531, line: 90, size: 16, elements: !2715)
!2715 = !{!2716, !2721}
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !531, line: 91, baseType: !2717, size: 16)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2714, file: !531, line: 91, size: 16, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2717, file: !531, line: 96, baseType: !581, size: 8)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2717, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2714, file: !531, line: 100, baseType: !227, size: 16)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2678, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2678, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2678, file: !531, line: 131, baseType: !2725, size: 192, offset: 192)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2726)
!2726 = !{!2727, !2728, !2734}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2725, file: !567, line: 245, baseType: !2684, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2725, file: !567, line: 246, baseType: !2729, size: 32, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2730)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{null, !2733}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2725, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2675, file: !531, line: 250, baseType: !2736, size: 288, offset: 384)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2737)
!2737 = !{!2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2736, file: !601, line: 26, baseType: !208, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2736, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2736, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2736, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2736, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2736, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2736, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2736, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2736, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2675, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2675, file: !531, line: 256, baseType: !2706, size: 64, offset: 704)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2675, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2675, file: !531, line: 300, baseType: !2751, size: 96, offset: 800)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2752)
!2752 = !{!2753, !2754, !2755}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2751, file: !531, line: 153, baseType: !22, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2751, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2751, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2675, file: !531, line: 325, baseType: !2757, size: 32, offset: 896)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2759)
!2759 = !{!2760, !2766, !2767}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2758, file: !624, line: 5074, baseType: !2761, size: 96)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2762)
!2762 = !{!2763, !2764, !2765}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2761, file: !628, line: 57, baseType: !631, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2761, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2761, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2758, file: !624, line: 5075, baseType: !2706, size: 64, offset: 96)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2758, file: !624, line: 5076, baseType: !2768, offset: 160)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2675, file: !531, line: 343, baseType: !2770, size: 64, offset: 928)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2770, file: !601, line: 63, baseType: !208, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2770, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!2776 = !{!2669, !2777, !2780, !2782}
!2777 = !DIGlobalVariableExpression(var: !2778, expr: !DIExpression())
!2778 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2671, file: !2779, line: 404, type: !125, isLocal: true, isDefinition: true)
!2779 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2780 = !DIGlobalVariableExpression(var: !2781, expr: !DIExpression())
!2781 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2671, file: !2779, line: 405, type: !125, isLocal: true, isDefinition: true)
!2782 = !DIGlobalVariableExpression(var: !2783, expr: !DIExpression())
!2783 = distinct !DIGlobalVariable(name: "pending_current", scope: !2671, file: !2779, line: 425, type: !2674, isLocal: true, isDefinition: true)
!2784 = !DIGlobalVariableExpression(var: !2785, expr: !DIExpression())
!2785 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2786, file: !2816, line: 15, type: !1853, isLocal: true, isDefinition: true)
!2786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2788, globals: !2813, splitDebugInlining: false, nameTableKind: None)
!2787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2788 = !{!2026, !124, !919, !208, !1853, !125, !2789, !393, !598}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2791)
!2791 = !{!2792, !2807, !2812}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2790, file: !567, line: 245, baseType: !2793, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2795)
!2795 = !{!2796, !2802}
!2796 = !DIDerivedType(tag: DW_TAG_member, scope: !2794, file: !541, line: 38, baseType: !2797, size: 32)
!2797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2794, file: !541, line: 38, size: 32, elements: !2798)
!2798 = !{!2799, !2801}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2797, file: !541, line: 39, baseType: !2800, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2797, file: !541, line: 40, baseType: !2800, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, scope: !2794, file: !541, line: 42, baseType: !2803, size: 32, offset: 32)
!2803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2794, file: !541, line: 42, size: 32, elements: !2804)
!2804 = !{!2805, !2806}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2803, file: !541, line: 43, baseType: !2800, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2803, file: !541, line: 44, baseType: !2800, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2790, file: !567, line: 246, baseType: !2808, size: 32, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2809)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{null, !2789}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2790, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2813 = !{!2784, !2814, !2818, !2820}
!2814 = !DIGlobalVariableExpression(var: !2815, expr: !DIExpression())
!2815 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2786, file: !2816, line: 19, type: !2817, isLocal: true, isDefinition: true)
!2816 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2818 = !DIGlobalVariableExpression(var: !2819, expr: !DIExpression())
!2819 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2786, file: !2816, line: 25, type: !125, isLocal: true, isDefinition: true)
!2820 = !DIGlobalVariableExpression(var: !2821, expr: !DIExpression())
!2821 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2786, file: !2816, line: 17, type: !2822, isLocal: true, isDefinition: true)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2794)
!2823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2829, retainedTypes: !2849, splitDebugInlining: false, nameTableKind: None)
!2828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2829 = !{!2830, !2838}
!2830 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2831, line: 69, baseType: !32, size: 32, elements: !2832)
!2831 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2832 = !{!2833, !2834, !2835, !2836, !2837}
!2833 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2834 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2835 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2836 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2837 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2838 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2831, line: 56, baseType: !32, size: 32, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848}
!2840 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2841 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2842 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2843 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2844 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2845 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2846 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2847 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2848 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2849 = !{!125, !2830, !2838, !2850, !582, !160, !2852, !2853, !151, !228, !140, !272, !124, !22, !32, !387, !2855, !2856, !389, !388, !391, !390, !2851, !2857, !2858, !2859, !2860}
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2831, line: 31, baseType: !2851)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2852 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2831, line: 32, baseType: !2854)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1854)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 32)
!2861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2862 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2865, splitDebugInlining: false, nameTableKind: None)
!2864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2865 = !{!140, !151, !125, !32}
!2866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2870, splitDebugInlining: false, nameTableKind: None)
!2869 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2870 = !{!184, !490, !2871}
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2872)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2874)
!2874 = !{!2875}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2873, file: !492, line: 65, baseType: !497, size: 1408)
!2876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2878, splitDebugInlining: false, nameTableKind: None)
!2877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2878 = !{!184, !2879, !150}
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2880)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2882)
!2882 = !{!2883}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2881, file: !492, line: 65, baseType: !497, size: 1408)
!2884 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2885, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2886, splitDebugInlining: false, nameTableKind: None)
!2885 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2886 = !{!2887, !2893, !184, !150, !227}
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2888, line: 95, baseType: !2889)
!2888 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 32)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2888, line: 91, size: 96, elements: !2891)
!2891 = !{!2892, !2898, !2899}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2890, file: !2888, line: 92, baseType: !2893, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2894)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 32)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2896)
!2896 = !{!2897}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2895, file: !492, line: 65, baseType: !497, size: 1408)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2890, file: !2888, line: 93, baseType: !184, size: 32, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2890, file: !2888, line: 94, baseType: !32, size: 32, offset: 64)
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2902, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2902 = !{!2903, !46}
!2903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2904, line: 27, baseType: !32, size: 32, elements: !2905)
!2904 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2905 = !{!2906, !2907, !2908, !2909, !2910}
!2906 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2907 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2908 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2909 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2910 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2911 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2912, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2913, retainedTypes: !2914, splitDebugInlining: false, nameTableKind: None)
!2912 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2913 = !{!749, !2903, !46}
!2914 = !{!945, !2915, !124, !125, !919, !208, !150, !2932}
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2917)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2918)
!2918 = !{!2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2917, file: !680, line: 413, baseType: !2041, size: 256)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2917, file: !680, line: 414, baseType: !2043, size: 768, offset: 256)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2917, file: !680, line: 415, baseType: !2041, size: 256, offset: 1024)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2917, file: !680, line: 416, baseType: !2043, size: 768, offset: 1280)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2917, file: !680, line: 417, baseType: !2041, size: 256, offset: 2048)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2917, file: !680, line: 418, baseType: !2043, size: 768, offset: 2304)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2917, file: !680, line: 419, baseType: !2041, size: 256, offset: 3072)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2917, file: !680, line: 420, baseType: !2043, size: 768, offset: 3328)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2917, file: !680, line: 421, baseType: !2041, size: 256, offset: 4096)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2917, file: !680, line: 422, baseType: !2054, size: 1792, offset: 4352)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2917, file: !680, line: 423, baseType: !2058, size: 1920, offset: 6144)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2917, file: !680, line: 424, baseType: !2063, size: 20608, offset: 8064)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2917, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2934)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2935)
!2935 = !{!2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2934, file: !680, line: 447, baseType: !684, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2934, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2934, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2934, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2934, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2934, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2934, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2934, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2934, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2934, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2934, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2934, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2934, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2934, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2934, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2934, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2934, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2934, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2934, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2934, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2934, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2957 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2958, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2958 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2960, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2961, splitDebugInlining: false, nameTableKind: None)
!2960 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2961 = !{!124, !125, !22, !2962}
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2964, file: !680, line: 447, baseType: !684, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2964, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2964, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2964, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2964, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2964, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2964, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2964, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2964, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2964, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2964, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2964, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2964, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2964, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2964, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2964, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2964, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2964, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2964, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2964, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2964, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2989, splitDebugInlining: false, nameTableKind: None)
!2988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!2989 = !{!2990, !124, !125}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2992, file: !680, line: 447, baseType: !684, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2992, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2992, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2992, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2992, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2992, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2992, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2992, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2992, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2992, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2992, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2992, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2992, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2992, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2992, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2992, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2992, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2992, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2992, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2992, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2992, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3017 = !{!3018, !208, !124, !125}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3020, line: 98, size: 256, elements: !3021)
!3020 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3021 = !{!3022, !3027, !3032, !3037, !3042, !3047, !3052, !3057}
!3022 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 99, baseType: !3023, size: 32)
!3023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 99, size: 32, elements: !3024)
!3024 = !{!3025, !3026}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3023, file: !3020, line: 99, baseType: !208, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3023, file: !3020, line: 99, baseType: !208, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 100, baseType: !3028, size: 32, offset: 32)
!3028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 100, size: 32, elements: !3029)
!3029 = !{!3030, !3031}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3028, file: !3020, line: 100, baseType: !208, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3028, file: !3020, line: 100, baseType: !208, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 101, baseType: !3033, size: 32, offset: 64)
!3033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 101, size: 32, elements: !3034)
!3034 = !{!3035, !3036}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3033, file: !3020, line: 101, baseType: !208, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3033, file: !3020, line: 101, baseType: !208, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 102, baseType: !3038, size: 32, offset: 96)
!3038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 102, size: 32, elements: !3039)
!3039 = !{!3040, !3041}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3038, file: !3020, line: 102, baseType: !208, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3038, file: !3020, line: 102, baseType: !208, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 103, baseType: !3043, size: 32, offset: 128)
!3043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 103, size: 32, elements: !3044)
!3044 = !{!3045, !3046}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3043, file: !3020, line: 103, baseType: !208, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3043, file: !3020, line: 103, baseType: !208, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 104, baseType: !3048, size: 32, offset: 160)
!3048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 104, size: 32, elements: !3049)
!3049 = !{!3050, !3051}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3048, file: !3020, line: 104, baseType: !208, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3048, file: !3020, line: 104, baseType: !208, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, scope: !3019, file: !3020, line: 105, baseType: !3053, size: 32, offset: 192)
!3053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3019, file: !3020, line: 105, size: 32, elements: !3054)
!3054 = !{!3055, !3056}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3053, file: !3020, line: 105, baseType: !208, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3053, file: !3020, line: 105, baseType: !208, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3019, file: !3020, line: 106, baseType: !208, size: 32, offset: 224)
!3058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2902, retainedTypes: !3060, splitDebugInlining: false, nameTableKind: None)
!3059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3060 = !{!3061, !124, !125, !3086, !3129, !208}
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3064)
!3064 = !{!3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3063, file: !680, line: 447, baseType: !684, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3063, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3063, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3063, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3063, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3063, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3063, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3063, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3063, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3063, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3063, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3063, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3063, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3063, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3063, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3063, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3063, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3063, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3063, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3063, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3063, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3020, line: 141, baseType: !3088)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3020, line: 97, size: 256, elements: !3089)
!3089 = !{!3090}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3088, file: !3020, line: 107, baseType: !3091, size: 256)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3020, line: 98, size: 256, elements: !3092)
!3092 = !{!3093, !3098, !3103, !3108, !3113, !3118, !3123, !3128}
!3093 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 99, baseType: !3094, size: 32)
!3094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 99, size: 32, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3094, file: !3020, line: 99, baseType: !208, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3094, file: !3020, line: 99, baseType: !208, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 100, baseType: !3099, size: 32, offset: 32)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 100, size: 32, elements: !3100)
!3100 = !{!3101, !3102}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3099, file: !3020, line: 100, baseType: !208, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3099, file: !3020, line: 100, baseType: !208, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 101, baseType: !3104, size: 32, offset: 64)
!3104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 101, size: 32, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3104, file: !3020, line: 101, baseType: !208, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3104, file: !3020, line: 101, baseType: !208, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 102, baseType: !3109, size: 32, offset: 96)
!3109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 102, size: 32, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3109, file: !3020, line: 102, baseType: !208, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3109, file: !3020, line: 102, baseType: !208, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 103, baseType: !3114, size: 32, offset: 128)
!3114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 103, size: 32, elements: !3115)
!3115 = !{!3116, !3117}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3114, file: !3020, line: 103, baseType: !208, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3114, file: !3020, line: 103, baseType: !208, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 104, baseType: !3119, size: 32, offset: 160)
!3119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 104, size: 32, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3119, file: !3020, line: 104, baseType: !208, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3119, file: !3020, line: 104, baseType: !208, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !3020, line: 105, baseType: !3124, size: 32, offset: 192)
!3124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !3020, line: 105, size: 32, elements: !3125)
!3125 = !{!3126, !3127}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3124, file: !3020, line: 105, baseType: !208, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3124, file: !3020, line: 105, baseType: !208, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3091, file: !3020, line: 106, baseType: !208, size: 32, offset: 224)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!3130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2024, retainedTypes: !3132, splitDebugInlining: false, nameTableKind: None)
!3131 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3132 = !{!945, !919, !150, !208, !3133, !3150}
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !3135)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3135, file: !680, line: 413, baseType: !2041, size: 256)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3135, file: !680, line: 414, baseType: !2043, size: 768, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3135, file: !680, line: 415, baseType: !2041, size: 256, offset: 1024)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3135, file: !680, line: 416, baseType: !2043, size: 768, offset: 1280)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3135, file: !680, line: 417, baseType: !2041, size: 256, offset: 2048)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3135, file: !680, line: 418, baseType: !2043, size: 768, offset: 2304)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3135, file: !680, line: 419, baseType: !2041, size: 256, offset: 3072)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3135, file: !680, line: 420, baseType: !2043, size: 768, offset: 3328)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3135, file: !680, line: 421, baseType: !2041, size: 256, offset: 4096)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3135, file: !680, line: 422, baseType: !2054, size: 1792, offset: 4352)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3135, file: !680, line: 423, baseType: !2058, size: 1920, offset: 6144)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3135, file: !680, line: 424, baseType: !2063, size: 20608, offset: 8064)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3135, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3153)
!3153 = !{!3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3152, file: !680, line: 447, baseType: !684, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3152, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3152, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3152, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3152, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3152, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3152, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3152, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3152, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3152, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3152, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3152, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3152, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3152, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3152, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3152, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3152, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3152, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3152, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3152, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3152, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3176, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3177, splitDebugInlining: false, nameTableKind: None)
!3176 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3177 = !{!3178, !124, !125}
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3180)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3181)
!3181 = !{!3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3180, file: !680, line: 447, baseType: !684, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3180, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3180, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3180, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3180, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3180, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3180, file: !680, line: 453, baseType: !2078, size: 96, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3180, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3180, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3180, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3180, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3180, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3180, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3180, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3180, file: !680, line: 461, baseType: !2087, size: 64, offset: 512)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3180, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3180, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3180, file: !680, line: 464, baseType: !2091, size: 128, offset: 640)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3180, file: !680, line: 465, baseType: !2093, size: 160, offset: 768)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3180, file: !680, line: 466, baseType: !2095, size: 160, offset: 928)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3180, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3205, splitDebugInlining: false, nameTableKind: None)
!3204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3205 = !{!142, !393, !272, !1158, !3206, !151, !124}
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3210, splitDebugInlining: false, nameTableKind: None)
!3209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3210 = !{!3211}
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 677, baseType: !3213)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 643, size: 1152, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3213, file: !419, line: 645, baseType: !423, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3213, file: !419, line: 646, baseType: !423, size: 32, offset: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3213, file: !419, line: 647, baseType: !423, size: 32, offset: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3213, file: !419, line: 648, baseType: !423, size: 32, offset: 96)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3213, file: !419, line: 649, baseType: !423, size: 32, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3213, file: !419, line: 650, baseType: !423, size: 32, offset: 160)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3213, file: !419, line: 651, baseType: !423, size: 32, offset: 192)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3213, file: !419, line: 652, baseType: !208, size: 32, offset: 224)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3213, file: !419, line: 653, baseType: !423, size: 32, offset: 256)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3213, file: !419, line: 654, baseType: !423, size: 32, offset: 288)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3213, file: !419, line: 655, baseType: !1027, size: 64, offset: 320)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3213, file: !419, line: 656, baseType: !423, size: 32, offset: 384)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3213, file: !419, line: 657, baseType: !423, size: 32, offset: 416)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3213, file: !419, line: 658, baseType: !423, size: 32, offset: 448)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3213, file: !419, line: 659, baseType: !208, size: 32, offset: 480)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3213, file: !419, line: 660, baseType: !423, size: 32, offset: 512)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3213, file: !419, line: 661, baseType: !423, size: 32, offset: 544)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3213, file: !419, line: 662, baseType: !1027, size: 64, offset: 576)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3213, file: !419, line: 663, baseType: !423, size: 32, offset: 640)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3213, file: !419, line: 664, baseType: !423, size: 32, offset: 672)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3213, file: !419, line: 665, baseType: !423, size: 32, offset: 704)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3213, file: !419, line: 666, baseType: !208, size: 32, offset: 736)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3213, file: !419, line: 667, baseType: !423, size: 32, offset: 768)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3213, file: !419, line: 668, baseType: !423, size: 32, offset: 800)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3213, file: !419, line: 669, baseType: !1027, size: 64, offset: 832)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3213, file: !419, line: 670, baseType: !423, size: 32, offset: 896)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3213, file: !419, line: 671, baseType: !423, size: 32, offset: 928)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3213, file: !419, line: 672, baseType: !1027, size: 64, offset: 960)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3213, file: !419, line: 673, baseType: !423, size: 32, offset: 1024)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3213, file: !419, line: 674, baseType: !423, size: 32, offset: 1056)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3213, file: !419, line: 675, baseType: !423, size: 32, offset: 1088)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3213, file: !419, line: 676, baseType: !423, size: 32, offset: 1120)
!3247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3248, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3248 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3250, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3251, retainedTypes: !3267, splitDebugInlining: false, nameTableKind: None)
!3250 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3251 = !{!3252, !3259, !3263}
!3252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3253, line: 38, baseType: !32, size: 32, elements: !3254)
!3253 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3254 = !{!3255, !3256, !3257, !3258}
!3255 = !DIEnumerator(name: "HAL_OK", value: 0)
!3256 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3257 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3258 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1000, line: 184, baseType: !32, size: 32, elements: !3260)
!3260 = !{!3261, !3262}
!3261 = !DIEnumerator(name: "RESET", value: 0)
!3262 = !DIEnumerator(name: "SET", value: 1)
!3263 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1000, line: 190, baseType: !32, size: 32, elements: !3264)
!3264 = !{!3265, !3266}
!3265 = !DIEnumerator(name: "DISABLE", value: 0)
!3266 = !DIEnumerator(name: "ENABLE", value: 1)
!3267 = !{!124, !3268, !150, !208, !1855, !3304, !3310, !3321, !227, !3322, !1853}
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 677, baseType: !3270)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 643, size: 1152, elements: !3271)
!3271 = !{!3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3270, file: !419, line: 645, baseType: !423, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3270, file: !419, line: 646, baseType: !423, size: 32, offset: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3270, file: !419, line: 647, baseType: !423, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3270, file: !419, line: 648, baseType: !423, size: 32, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3270, file: !419, line: 649, baseType: !423, size: 32, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3270, file: !419, line: 650, baseType: !423, size: 32, offset: 160)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3270, file: !419, line: 651, baseType: !423, size: 32, offset: 192)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3270, file: !419, line: 652, baseType: !208, size: 32, offset: 224)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3270, file: !419, line: 653, baseType: !423, size: 32, offset: 256)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3270, file: !419, line: 654, baseType: !423, size: 32, offset: 288)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3270, file: !419, line: 655, baseType: !1027, size: 64, offset: 320)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3270, file: !419, line: 656, baseType: !423, size: 32, offset: 384)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3270, file: !419, line: 657, baseType: !423, size: 32, offset: 416)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3270, file: !419, line: 658, baseType: !423, size: 32, offset: 448)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3270, file: !419, line: 659, baseType: !208, size: 32, offset: 480)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3270, file: !419, line: 660, baseType: !423, size: 32, offset: 512)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3270, file: !419, line: 661, baseType: !423, size: 32, offset: 544)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3270, file: !419, line: 662, baseType: !1027, size: 64, offset: 576)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3270, file: !419, line: 663, baseType: !423, size: 32, offset: 640)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3270, file: !419, line: 664, baseType: !423, size: 32, offset: 672)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3270, file: !419, line: 665, baseType: !423, size: 32, offset: 704)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3270, file: !419, line: 666, baseType: !208, size: 32, offset: 736)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3270, file: !419, line: 667, baseType: !423, size: 32, offset: 768)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3270, file: !419, line: 668, baseType: !423, size: 32, offset: 800)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3270, file: !419, line: 669, baseType: !1027, size: 64, offset: 832)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3270, file: !419, line: 670, baseType: !423, size: 32, offset: 896)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3270, file: !419, line: 671, baseType: !423, size: 32, offset: 928)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3270, file: !419, line: 672, baseType: !1027, size: 64, offset: 960)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3270, file: !419, line: 673, baseType: !423, size: 32, offset: 1024)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3270, file: !419, line: 674, baseType: !423, size: 32, offset: 1056)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3270, file: !419, line: 675, baseType: !423, size: 32, offset: 1088)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3270, file: !419, line: 676, baseType: !423, size: 32, offset: 1120)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 637, baseType: !3306)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 633, size: 64, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3306, file: !419, line: 635, baseType: !423, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3306, file: !419, line: 636, baseType: !423, size: 32, offset: 32)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 501, baseType: !3312)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 492, size: 224, elements: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3318, !3319, !3320}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3312, file: !419, line: 494, baseType: !423, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3312, file: !419, line: 495, baseType: !423, size: 32, offset: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3312, file: !419, line: 496, baseType: !423, size: 32, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3312, file: !419, line: 497, baseType: !423, size: 32, offset: 96)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3312, file: !419, line: 498, baseType: !423, size: 32, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3312, file: !419, line: 499, baseType: !423, size: 32, offset: 160)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3312, file: !419, line: 500, baseType: !423, size: 32, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 583, baseType: !3324)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 572, size: 320, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3324, file: !419, line: 574, baseType: !423, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3324, file: !419, line: 575, baseType: !423, size: 32, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3324, file: !419, line: 576, baseType: !423, size: 32, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3324, file: !419, line: 577, baseType: !423, size: 32, offset: 96)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3324, file: !419, line: 578, baseType: !423, size: 32, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3324, file: !419, line: 579, baseType: !423, size: 32, offset: 160)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3324, file: !419, line: 580, baseType: !423, size: 32, offset: 192)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3324, file: !419, line: 581, baseType: !423, size: 32, offset: 224)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3324, file: !419, line: 582, baseType: !1494, size: 64, offset: 256)
!3335 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3336, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3337, retainedTypes: !3338, splitDebugInlining: false, nameTableKind: None)
!3336 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3337 = !{!999}
!3338 = !{!3339, !208, !3347, !3353, !3364}
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3346}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3341, file: !680, line: 766, baseType: !423, size: 32)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3341, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3341, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3341, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 32)
!3348 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 637, baseType: !3349)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 633, size: 64, elements: !3350)
!3350 = !{!3351, !3352}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3349, file: !419, line: 635, baseType: !423, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3349, file: !419, line: 636, baseType: !423, size: 32, offset: 32)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 501, baseType: !3355)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 492, size: 224, elements: !3356)
!3356 = !{!3357, !3358, !3359, !3360, !3361, !3362, !3363}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3355, file: !419, line: 494, baseType: !423, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3355, file: !419, line: 495, baseType: !423, size: 32, offset: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3355, file: !419, line: 496, baseType: !423, size: 32, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3355, file: !419, line: 497, baseType: !423, size: 32, offset: 96)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3355, file: !419, line: 498, baseType: !423, size: 32, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3355, file: !419, line: 499, baseType: !423, size: 32, offset: 160)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3355, file: !419, line: 500, baseType: !423, size: 32, offset: 192)
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3365, size: 32)
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 677, baseType: !3366)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 643, size: 1152, elements: !3367)
!3367 = !{!3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3366, file: !419, line: 645, baseType: !423, size: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3366, file: !419, line: 646, baseType: !423, size: 32, offset: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3366, file: !419, line: 647, baseType: !423, size: 32, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3366, file: !419, line: 648, baseType: !423, size: 32, offset: 96)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3366, file: !419, line: 649, baseType: !423, size: 32, offset: 128)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3366, file: !419, line: 650, baseType: !423, size: 32, offset: 160)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3366, file: !419, line: 651, baseType: !423, size: 32, offset: 192)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3366, file: !419, line: 652, baseType: !208, size: 32, offset: 224)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3366, file: !419, line: 653, baseType: !423, size: 32, offset: 256)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3366, file: !419, line: 654, baseType: !423, size: 32, offset: 288)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3366, file: !419, line: 655, baseType: !1027, size: 64, offset: 320)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3366, file: !419, line: 656, baseType: !423, size: 32, offset: 384)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3366, file: !419, line: 657, baseType: !423, size: 32, offset: 416)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3366, file: !419, line: 658, baseType: !423, size: 32, offset: 448)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3366, file: !419, line: 659, baseType: !208, size: 32, offset: 480)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3366, file: !419, line: 660, baseType: !423, size: 32, offset: 512)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3366, file: !419, line: 661, baseType: !423, size: 32, offset: 544)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3366, file: !419, line: 662, baseType: !1027, size: 64, offset: 576)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3366, file: !419, line: 663, baseType: !423, size: 32, offset: 640)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3366, file: !419, line: 664, baseType: !423, size: 32, offset: 672)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3366, file: !419, line: 665, baseType: !423, size: 32, offset: 704)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3366, file: !419, line: 666, baseType: !208, size: 32, offset: 736)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3366, file: !419, line: 667, baseType: !423, size: 32, offset: 768)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3366, file: !419, line: 668, baseType: !423, size: 32, offset: 800)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3366, file: !419, line: 669, baseType: !1027, size: 64, offset: 832)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3366, file: !419, line: 670, baseType: !423, size: 32, offset: 896)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3366, file: !419, line: 671, baseType: !423, size: 32, offset: 928)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3366, file: !419, line: 672, baseType: !1027, size: 64, offset: 960)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3366, file: !419, line: 673, baseType: !423, size: 32, offset: 1024)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3366, file: !419, line: 674, baseType: !423, size: 32, offset: 1056)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3366, file: !419, line: 675, baseType: !423, size: 32, offset: 1088)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3366, file: !419, line: 676, baseType: !423, size: 32, offset: 1120)
!3400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3402, splitDebugInlining: false, nameTableKind: None)
!3401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3402 = !{!124, !272}
!3403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3405 = !{!3406, !3413, !46}
!3406 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3407, line: 14, baseType: !32, size: 32, elements: !3408)
!3407 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3408 = !{!3409, !3410, !3411, !3412}
!3409 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3410 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3411 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3412 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3407, line: 42, baseType: !32, size: 32, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3419, !3420}
!3415 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3416 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3417 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3418 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3419 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3420 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3422 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3425, splitDebugInlining: false, nameTableKind: None)
!3424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3425 = !{!22, !124, !125}
!3426 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3427, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3427 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!3428 = !{!"Ubuntu clang version 14.0.6"}
!3429 = !{i32 7, !"Dwarf Version", i32 4}
!3430 = !{i32 2, !"Debug Info Version", i32 3}
!3431 = !{i32 1, !"wchar_size", i32 4}
!3432 = !{i32 1, !"min_enum_size", i32 4}
!3433 = !{i32 1, !"branch-target-enforcement", i32 0}
!3434 = !{i32 1, !"sign-return-address", i32 0}
!3435 = !{i32 1, !"sign-return-address-all", i32 0}
!3436 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3437 = !{i32 7, !"frame-pointer", i32 2}
!3438 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3439, file: !3439, line: 26, type: !3440, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !639)
!3439 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3440 = !DISubroutineType(types: !3441)
!3441 = !{null}
!3442 = !DILocation(line: 28, column: 1, scope: !3438)
!3443 = !{i64 2155744926, i64 2155744946, i64 2155745009}
!3444 = !DILocation(line: 29, column: 1, scope: !3438)
!3445 = !{i64 2155745341, i64 2155745361, i64 2155745424}
!3446 = !DILocation(line: 30, column: 1, scope: !3438)
!3447 = !{i64 2155745760, i64 2155745780, i64 2155745843}
!3448 = !DILocation(line: 31, column: 1, scope: !3438)
!3449 = !{i64 2155750240, i64 2155750260, i64 2155750323}
!3450 = !DILocation(line: 33, column: 1, scope: !3438)
!3451 = !{i64 2155750532, i64 2155750552, i64 2155750615}
!3452 = !DILocation(line: 35, column: 1, scope: !3438)
!3453 = !{i64 2155750857, i64 2155750877, i64 2155750940}
!3454 = !DILocation(line: 50, column: 1, scope: !3438)
!3455 = !{i64 2155751284, i64 2155751304, i64 2155751367}
!3456 = !DILocation(line: 54, column: 1, scope: !3438)
!3457 = !{i64 2155751723, i64 2155751743, i64 2155751806}
!3458 = !DILocation(line: 61, column: 1, scope: !3438)
!3459 = !{i64 2155752040, i64 2155752060, i64 2155752123}
!3460 = !DILocation(line: 63, column: 1, scope: !3438)
!3461 = !{i64 2155752420, i64 2155752440, i64 2155752503}
!3462 = !DILocation(line: 64, column: 1, scope: !3438)
!3463 = !{i64 2155752942, i64 2155752962, i64 2155753025}
!3464 = !DILocation(line: 65, column: 1, scope: !3438)
!3465 = !{i64 2155753440, i64 2155753460, i64 2155753523}
!3466 = !DILocation(line: 66, column: 1, scope: !3438)
!3467 = !{i64 2155753922, i64 2155753942, i64 2155754005}
!3468 = !DILocation(line: 67, column: 1, scope: !3438)
!3469 = !{i64 2155754429, i64 2155754449, i64 2155754512}
!3470 = !DILocation(line: 68, column: 1, scope: !3438)
!3471 = !{i64 2155754917, i64 2155754937, i64 2155755000}
!3472 = !DILocation(line: 70, column: 1, scope: !3438)
!3473 = !{i64 2155755385, i64 2155755405, i64 2155755468}
!3474 = !DILocation(line: 71, column: 1, scope: !3438)
!3475 = !{i64 2155755827, i64 2155755847, i64 2155755910}
!3476 = !DILocation(line: 72, column: 1, scope: !3438)
!3477 = !{i64 2155756285, i64 2155756305, i64 2155756368}
!3478 = !DILocation(line: 79, column: 1, scope: !3438)
!3479 = !{i64 2155756739, i64 2155756759, i64 2155756822}
!3480 = !DILocation(line: 80, column: 1, scope: !3438)
!3481 = !{i64 2155757250, i64 2155757270, i64 2155757333}
!3482 = !DILocation(line: 82, column: 1, scope: !3438)
!3483 = !{i64 2155757741, i64 2155757761, i64 2155757824}
!3484 = !DILocation(line: 97, column: 1, scope: !3438)
!3485 = !{i64 2155758078, i64 2155758098, i64 2155758161}
!3486 = !DILocation(line: 99, column: 1, scope: !3438)
!3487 = !{i64 2155758296, i64 2155758316, i64 2155758379}
!3488 = !DILocation(line: 102, column: 1, scope: !3438)
!3489 = !{i64 2155758553, i64 2155758573, i64 2155758636}
!3490 = !DILocation(line: 105, column: 1, scope: !3438)
!3491 = !{i64 2155758793, i64 2155758813, i64 2155758876}
!3492 = !DILocation(line: 115, column: 1, scope: !3438)
!3493 = !{i64 2155759132, i64 2155759152, i64 2155759215}
!3494 = !DILocation(line: 118, column: 1, scope: !3438)
!3495 = !{i64 2155763537, i64 2155763557, i64 2155763620}
!3496 = !DILocation(line: 32, column: 1, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3438, file: !3498, discriminator: 0)
!3498 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3499 = !{i64 2155763893, i64 2155763913, i64 2155763976}
!3500 = !DILocation(line: 33, column: 1, scope: !3497)
!3501 = !{i64 2155764405, i64 2155764425, i64 2155764488}
!3502 = !DILocation(line: 53, column: 1, scope: !3497)
!3503 = !{i64 2155764913, i64 2155764933, i64 2155764996}
!3504 = !DILocation(line: 54, column: 1, scope: !3497)
!3505 = !{i64 2155765331, i64 2155765351, i64 2155765414}
!3506 = !DILocation(line: 55, column: 1, scope: !3497)
!3507 = !{i64 2155765749, i64 2155765769, i64 2155765832}
!3508 = !DILocation(line: 56, column: 1, scope: !3497)
!3509 = !{i64 2155766167, i64 2155766187, i64 2155766250}
!3510 = !DILocation(line: 57, column: 1, scope: !3497)
!3511 = !{i64 2155766585, i64 2155766605, i64 2155766668}
!3512 = !DILocation(line: 58, column: 1, scope: !3497)
!3513 = !{i64 2155767003, i64 2155767023, i64 2155767086}
!3514 = !DILocation(line: 59, column: 1, scope: !3497)
!3515 = !{i64 2155767421, i64 2155767441, i64 2155767504}
!3516 = !DILocation(line: 60, column: 1, scope: !3497)
!3517 = !{i64 2155767845, i64 2155767865, i64 2155767928}
!3518 = !DILocation(line: 61, column: 1, scope: !3497)
!3519 = !{i64 2155768162, i64 2155768182, i64 2155768245}
!3520 = !DILocation(line: 70, column: 1, scope: !3497)
!3521 = !{i64 2155768391, i64 2155768411, i64 2155768474}
!3522 = !DILocation(line: 72, column: 1, scope: !3497)
!3523 = !{i64 2155768723, i64 2155768743, i64 2155768806}
!3524 = !DILocation(line: 73, column: 1, scope: !3497)
!3525 = !{i64 2155769173, i64 2155769193, i64 2155769256}
!3526 = !DILocation(line: 74, column: 1, scope: !3497)
!3527 = !{i64 2155769623, i64 2155769643, i64 2155769706}
!3528 = !DILocation(line: 75, column: 1, scope: !3497)
!3529 = !{i64 2155770073, i64 2155770093, i64 2155770156}
!3530 = !DILocation(line: 76, column: 1, scope: !3497)
!3531 = !{i64 2155770523, i64 2155770543, i64 2155770606}
!3532 = !DILocation(line: 77, column: 1, scope: !3497)
!3533 = !{i64 2155770973, i64 2155770993, i64 2155771056}
!3534 = !DILocation(line: 78, column: 1, scope: !3497)
!3535 = !{i64 2155771423, i64 2155771443, i64 2155771506}
!3536 = !DILocation(line: 79, column: 1, scope: !3497)
!3537 = !{i64 2155771873, i64 2155771893, i64 2155771956}
!3538 = !DILocation(line: 80, column: 1, scope: !3497)
!3539 = !{i64 2155772326, i64 2155772346, i64 2155772409}
!3540 = !DILocation(line: 84, column: 1, scope: !3497)
!3541 = !{i64 2155772658, i64 2155772678, i64 2155772741}
!3542 = !DILocation(line: 91, column: 1, scope: !3497)
!3543 = !{i64 2155777116, i64 2155777136, i64 2155777199}
!3544 = !DILocation(line: 93, column: 1, scope: !3497)
!3545 = !{i64 2155777483, i64 2155777503, i64 2155777566}
!3546 = !DILocation(line: 106, column: 1, scope: !3497)
!3547 = !{i64 2155777753, i64 2155777773, i64 2155777836}
!3548 = !DILocation(line: 11, column: 1, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3438, file: !3550, discriminator: 0)
!3550 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3551 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3552)
!3552 = !{!3553, !3554}
!3553 = !DILocalVariable(name: "dev", arg: 1, scope: !3551, file: !294, line: 80, type: !134)
!3554 = !DILocalVariable(name: "flags", scope: !3551, file: !294, line: 82, type: !208)
!3555 = !DILocation(line: 0, scope: !3551)
!3556 = !DILocation(line: 84, column: 10, scope: !3551)
!3557 = !DILocation(line: 85, column: 13, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 85, column: 6)
!3559 = !DILocation(line: 85, column: 28, scope: !3558)
!3560 = !DILocation(line: 85, column: 6, scope: !3551)
!3561 = !DILocation(line: 86, column: 3, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !294, line: 86, column: 3)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !294, line: 86, column: 3)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !294, line: 86, column: 3)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !294, line: 86, column: 3)
!3566 = distinct !DILexicalBlock(scope: !3558, file: !294, line: 85, column: 35)
!3567 = !DILocation(line: 88, column: 3, scope: !3566)
!3568 = !DILocation(line: 91, column: 13, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 91, column: 6)
!3570 = !DILocation(line: 91, column: 29, scope: !3569)
!3571 = !DILocation(line: 91, column: 6, scope: !3551)
!3572 = !DILocation(line: 92, column: 3, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !294, line: 92, column: 3)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !294, line: 92, column: 3)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !294, line: 92, column: 3)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !294, line: 92, column: 3)
!3577 = distinct !DILexicalBlock(scope: !3569, file: !294, line: 91, column: 36)
!3578 = !DILocation(line: 94, column: 3, scope: !3577)
!3579 = !DILocation(line: 97, column: 13, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 97, column: 6)
!3581 = !DILocation(line: 97, column: 37, scope: !3580)
!3582 = !DILocation(line: 97, column: 6, scope: !3551)
!3583 = !DILocation(line: 98, column: 3, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !294, line: 98, column: 3)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !294, line: 98, column: 3)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !294, line: 98, column: 3)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !294, line: 98, column: 3)
!3588 = distinct !DILexicalBlock(scope: !3580, file: !294, line: 97, column: 44)
!3589 = !DILocation(line: 100, column: 3, scope: !3588)
!3590 = !DILocation(line: 103, column: 12, scope: !3551)
!3591 = !DILocation(line: 105, column: 2, scope: !3551)
!3592 = !DILocation(line: 107, column: 1, scope: !3551)
!3593 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3594)
!3594 = !{!3595, !3596, !3597}
!3595 = !DILocalVariable(name: "dev", arg: 1, scope: !3593, file: !128, line: 108, type: !134)
!3596 = !DILocalVariable(name: "api", scope: !3593, file: !128, line: 110, type: !126)
!3597 = !DILocalVariable(name: "tmp", scope: !3593, file: !128, line: 111, type: !125)
!3598 = !DILocation(line: 0, scope: !3593)
!3599 = !DILocation(line: 113, column: 42, scope: !3593)
!3600 = !DILocation(line: 115, column: 13, scope: !3593)
!3601 = !DILocation(line: 115, column: 8, scope: !3593)
!3602 = !DILocation(line: 125, column: 2, scope: !3593)
!3603 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3604, file: !3604, line: 175, type: !3605, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3607)
!3604 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!142, !125}
!3607 = !{!3608}
!3608 = !DILocalVariable(name: "level", arg: 1, scope: !3603, file: !3604, line: 175, type: !125)
!3609 = !DILocation(line: 0, scope: !3603)
!3610 = !DILocation(line: 177, column: 2, scope: !3603)
!3611 = !DILocation(line: 189, column: 1, scope: !3603)
!3612 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623}
!3614 = !DILocalVariable(name: "dev", arg: 1, scope: !3612, file: !294, line: 109, type: !134)
!3615 = !DILocalVariable(name: "ecb_key", scope: !3612, file: !294, line: 112, type: !311)
!3616 = !DILocalVariable(name: "ecb_plaintext", scope: !3612, file: !294, line: 116, type: !311)
!3617 = !DILocalVariable(name: "ecb_ciphertext", scope: !3612, file: !294, line: 120, type: !2270)
!3618 = !DILocalVariable(name: "encrypted", scope: !3612, file: !294, line: 125, type: !311)
!3619 = !DILocalVariable(name: "decrypted", scope: !3612, file: !294, line: 126, type: !311)
!3620 = !DILocalVariable(name: "ini", scope: !3612, file: !294, line: 127, type: !166)
!3621 = !DILocalVariable(name: "encrypt", scope: !3612, file: !294, line: 132, type: !181)
!3622 = !DILocalVariable(name: "decrypt", scope: !3612, file: !294, line: 138, type: !181)
!3623 = !DILabel(scope: !3612, name: "out", file: !294, line: 191)
!3624 = !DILocation(line: 0, scope: !3612)
!3625 = !DILocation(line: 112, column: 2, scope: !3612)
!3626 = !DILocation(line: 112, column: 10, scope: !3612)
!3627 = !DILocation(line: 116, column: 2, scope: !3612)
!3628 = !DILocation(line: 116, column: 10, scope: !3612)
!3629 = !DILocation(line: 120, column: 2, scope: !3612)
!3630 = !DILocation(line: 120, column: 16, scope: !3612)
!3631 = !DILocation(line: 125, column: 2, scope: !3612)
!3632 = !DILocation(line: 125, column: 10, scope: !3612)
!3633 = !DILocation(line: 126, column: 2, scope: !3612)
!3634 = !DILocation(line: 126, column: 10, scope: !3612)
!3635 = !DILocation(line: 127, column: 2, scope: !3612)
!3636 = !DILocation(line: 127, column: 20, scope: !3612)
!3637 = !DILocation(line: 129, column: 7, scope: !3612)
!3638 = !DILocation(line: 127, column: 26, scope: !3612)
!3639 = !DILocation(line: 130, column: 12, scope: !3612)
!3640 = !DILocation(line: 132, column: 2, scope: !3612)
!3641 = !DILocation(line: 132, column: 20, scope: !3612)
!3642 = !DILocation(line: 132, column: 30, scope: !3612)
!3643 = !DILocation(line: 138, column: 2, scope: !3612)
!3644 = !DILocation(line: 138, column: 20, scope: !3612)
!3645 = !DILocation(line: 138, column: 30, scope: !3612)
!3646 = !DILocation(line: 145, column: 6, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 145, column: 6)
!3648 = !DILocation(line: 145, column: 6, scope: !3612)
!3649 = !DILocation(line: 151, column: 6, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 151, column: 6)
!3651 = !DILocation(line: 151, column: 6, scope: !3612)
!3652 = !DILocation(line: 152, column: 3, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !294, line: 152, column: 3)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !294, line: 152, column: 3)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !294, line: 152, column: 3)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !294, line: 152, column: 3)
!3657 = distinct !DILexicalBlock(scope: !3650, file: !294, line: 151, column: 39)
!3658 = !DILocation(line: 153, column: 3, scope: !3657)
!3659 = !DILocation(line: 156, column: 2, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !294, line: 156, column: 2)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !294, line: 156, column: 2)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !294, line: 156, column: 2)
!3663 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 156, column: 2)
!3664 = !DILocation(line: 158, column: 21, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 158, column: 6)
!3666 = !DILocation(line: 158, column: 6, scope: !3665)
!3667 = !DILocation(line: 158, column: 6, scope: !3612)
!3668 = !DILocation(line: 159, column: 3, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !294, line: 159, column: 3)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !294, line: 159, column: 3)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !294, line: 159, column: 3)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !294, line: 159, column: 3)
!3673 = distinct !DILexicalBlock(scope: !3665, file: !294, line: 158, column: 71)
!3674 = !DILocation(line: 161, column: 51, scope: !3673)
!3675 = !DILocation(line: 161, column: 3, scope: !3673)
!3676 = !DILocation(line: 163, column: 3, scope: !3673)
!3677 = !DILocation(line: 166, column: 2, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !294, line: 166, column: 2)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !294, line: 166, column: 2)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !294, line: 166, column: 2)
!3681 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 166, column: 2)
!3682 = !DILocation(line: 167, column: 2, scope: !3612)
!3683 = !DILocation(line: 169, column: 6, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 169, column: 6)
!3685 = !DILocation(line: 169, column: 6, scope: !3612)
!3686 = !DILocation(line: 175, column: 6, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 175, column: 6)
!3688 = !DILocation(line: 175, column: 6, scope: !3612)
!3689 = !DILocation(line: 176, column: 3, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !294, line: 176, column: 3)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !294, line: 176, column: 3)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !294, line: 176, column: 3)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !294, line: 176, column: 3)
!3694 = distinct !DILexicalBlock(scope: !3687, file: !294, line: 175, column: 39)
!3695 = !DILocation(line: 177, column: 3, scope: !3694)
!3696 = !DILocation(line: 180, column: 2, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !294, line: 180, column: 2)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !294, line: 180, column: 2)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !294, line: 180, column: 2)
!3700 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 180, column: 2)
!3701 = !DILocation(line: 182, column: 21, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 182, column: 6)
!3703 = !DILocation(line: 182, column: 6, scope: !3702)
!3704 = !DILocation(line: 182, column: 6, scope: !3612)
!3705 = !DILocation(line: 183, column: 3, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !294, line: 183, column: 3)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !294, line: 183, column: 3)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !294, line: 183, column: 3)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !294, line: 183, column: 3)
!3710 = distinct !DILexicalBlock(scope: !3702, file: !294, line: 182, column: 69)
!3711 = !DILocation(line: 185, column: 50, scope: !3710)
!3712 = !DILocation(line: 185, column: 3, scope: !3710)
!3713 = !DILocation(line: 187, column: 3, scope: !3710)
!3714 = !DILocation(line: 190, column: 2, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !294, line: 190, column: 2)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !294, line: 190, column: 2)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 190, column: 2)
!3718 = distinct !DILexicalBlock(scope: !3612, file: !294, line: 190, column: 2)
!3719 = !DILocation(line: 190, column: 2, scope: !3718)
!3720 = !DILocation(line: 191, column: 1, scope: !3612)
!3721 = !DILocation(line: 192, column: 2, scope: !3612)
!3722 = !DILocation(line: 193, column: 1, scope: !3612)
!3723 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3724)
!3724 = !{!3725, !3726, !3727, !3728, !3729, !3730, !3731}
!3725 = !DILocalVariable(name: "dev", arg: 1, scope: !3723, file: !128, line: 159, type: !134)
!3726 = !DILocalVariable(name: "ctx", arg: 2, scope: !3723, file: !128, line: 160, type: !165)
!3727 = !DILocalVariable(name: "algo", arg: 3, scope: !3723, file: !128, line: 161, type: !39)
!3728 = !DILocalVariable(name: "mode", arg: 4, scope: !3723, file: !128, line: 162, type: !30)
!3729 = !DILocalVariable(name: "optype", arg: 5, scope: !3723, file: !128, line: 163, type: !42)
!3730 = !DILocalVariable(name: "api", scope: !3723, file: !128, line: 165, type: !126)
!3731 = !DILocalVariable(name: "flags", scope: !3723, file: !128, line: 166, type: !208)
!3732 = !DILocation(line: 0, scope: !3723)
!3733 = !DILocation(line: 168, column: 42, scope: !3723)
!3734 = !DILocation(line: 169, column: 7, scope: !3723)
!3735 = !DILocation(line: 169, column: 14, scope: !3723)
!3736 = !DILocation(line: 170, column: 11, scope: !3723)
!3737 = !DILocation(line: 170, column: 23, scope: !3723)
!3738 = !DILocation(line: 187, column: 14, scope: !3723)
!3739 = !DILocation(line: 187, column: 9, scope: !3723)
!3740 = !DILocation(line: 187, column: 2, scope: !3723)
!3741 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3742)
!3742 = !{!3743, !3744}
!3743 = !DILocalVariable(name: "ctx", arg: 1, scope: !3741, file: !128, line: 249, type: !165)
!3744 = !DILocalVariable(name: "pkt", arg: 2, scope: !3741, file: !128, line: 250, type: !180)
!3745 = !DILocation(line: 0, scope: !3741)
!3746 = !DILocation(line: 255, column: 7, scope: !3741)
!3747 = !DILocation(line: 255, column: 11, scope: !3741)
!3748 = !DILocation(line: 256, column: 18, scope: !3741)
!3749 = !DILocation(line: 256, column: 9, scope: !3741)
!3750 = !DILocation(line: 256, column: 2, scope: !3741)
!3751 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3752, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3754)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{null, !490, !184, !272}
!3754 = !{!3755, !3756, !3757, !3758, !3759}
!3755 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3751, file: !294, line: 50, type: !490)
!3756 = !DILocalVariable(name: "result", arg: 2, scope: !3751, file: !294, line: 51, type: !184)
!3757 = !DILocalVariable(name: "length", arg: 3, scope: !3751, file: !294, line: 51, type: !272)
!3758 = !DILocalVariable(name: "i", scope: !3751, file: !294, line: 53, type: !125)
!3759 = !DILocalVariable(name: "j", scope: !3751, file: !294, line: 53, type: !125)
!3760 = !DILocation(line: 0, scope: !3751)
!3761 = !DILocation(line: 55, column: 2, scope: !3751)
!3762 = !DILocation(line: 57, column: 23, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !294, line: 57, column: 2)
!3764 = distinct !DILexicalBlock(scope: !3751, file: !294, line: 57, column: 2)
!3765 = !DILocation(line: 57, column: 2, scope: !3764)
!3766 = !DILocation(line: 66, column: 2, scope: !3751)
!3767 = !DILocation(line: 68, column: 2, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3751, file: !294, line: 68, column: 2)
!3769 = !DILocation(line: 58, column: 21, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3763, file: !294, line: 57, column: 43)
!3771 = !DILocation(line: 58, column: 3, scope: !3770)
!3772 = !DILocation(line: 60, column: 9, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3770, file: !294, line: 60, column: 7)
!3774 = !DILocation(line: 60, column: 7, scope: !3770)
!3775 = !DILocation(line: 61, column: 4, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3773, file: !294, line: 60, column: 16)
!3777 = !DILocation(line: 63, column: 3, scope: !3776)
!3778 = !DILocation(line: 0, scope: !3764)
!3779 = !DILocation(line: 57, column: 34, scope: !3763)
!3780 = !DILocation(line: 57, column: 39, scope: !3763)
!3781 = distinct !{!3781, !3765, !3782}
!3782 = !DILocation(line: 64, column: 2, scope: !3764)
!3783 = !DILocation(line: 69, column: 21, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !294, line: 68, column: 43)
!3785 = distinct !DILexicalBlock(scope: !3768, file: !294, line: 68, column: 2)
!3786 = !DILocation(line: 69, column: 3, scope: !3784)
!3787 = !DILocation(line: 71, column: 9, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3784, file: !294, line: 71, column: 7)
!3789 = !DILocation(line: 71, column: 7, scope: !3784)
!3790 = !DILocation(line: 72, column: 4, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3788, file: !294, line: 71, column: 16)
!3792 = !DILocation(line: 74, column: 3, scope: !3791)
!3793 = !DILocation(line: 0, scope: !3768)
!3794 = !DILocation(line: 68, column: 34, scope: !3785)
!3795 = !DILocation(line: 68, column: 39, scope: !3785)
!3796 = !DILocation(line: 68, column: 23, scope: !3785)
!3797 = distinct !{!3797, !3767, !3798}
!3798 = !DILocation(line: 75, column: 2, scope: !3768)
!3799 = !DILocation(line: 77, column: 2, scope: !3751)
!3800 = !DILocation(line: 78, column: 1, scope: !3751)
!3801 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3802)
!3802 = !{!3803, !3804, !3805}
!3803 = !DILocalVariable(name: "dev", arg: 1, scope: !3801, file: !128, line: 201, type: !134)
!3804 = !DILocalVariable(name: "ctx", arg: 2, scope: !3801, file: !128, line: 202, type: !165)
!3805 = !DILocalVariable(name: "api", scope: !3801, file: !128, line: 204, type: !126)
!3806 = !DILocation(line: 0, scope: !3801)
!3807 = !DILocation(line: 206, column: 42, scope: !3801)
!3808 = !DILocation(line: 208, column: 14, scope: !3801)
!3809 = !DILocation(line: 208, column: 9, scope: !3801)
!3810 = !DILocation(line: 208, column: 2, scope: !3801)
!3811 = !DILocation(line: 0, scope: !293)
!3812 = !DILocation(line: 207, column: 2, scope: !293)
!3813 = !DILocation(line: 207, column: 10, scope: !293)
!3814 = !DILocation(line: 208, column: 2, scope: !293)
!3815 = !DILocation(line: 208, column: 10, scope: !293)
!3816 = !DILocation(line: 209, column: 2, scope: !293)
!3817 = !DILocation(line: 209, column: 20, scope: !293)
!3818 = !DILocation(line: 211, column: 7, scope: !293)
!3819 = !DILocation(line: 209, column: 26, scope: !293)
!3820 = !DILocation(line: 212, column: 12, scope: !293)
!3821 = !DILocation(line: 214, column: 2, scope: !293)
!3822 = !DILocation(line: 214, column: 20, scope: !293)
!3823 = !DILocation(line: 214, column: 30, scope: !293)
!3824 = !DILocation(line: 220, column: 2, scope: !293)
!3825 = !DILocation(line: 220, column: 20, scope: !293)
!3826 = !DILocation(line: 220, column: 30, scope: !293)
!3827 = !DILocation(line: 232, column: 6, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3829 = !DILocation(line: 232, column: 6, scope: !293)
!3830 = !DILocation(line: 238, column: 6, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3832 = !DILocation(line: 238, column: 6, scope: !293)
!3833 = !DILocation(line: 239, column: 3, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !294, line: 239, column: 3)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !294, line: 239, column: 3)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !294, line: 239, column: 3)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 239, column: 3)
!3838 = distinct !DILexicalBlock(scope: !3831, file: !294, line: 238, column: 41)
!3839 = !DILocation(line: 240, column: 3, scope: !3838)
!3840 = !DILocation(line: 243, column: 2, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !294, line: 243, column: 2)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !294, line: 243, column: 2)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !294, line: 243, column: 2)
!3844 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3845 = !DILocation(line: 245, column: 21, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3847 = !DILocation(line: 245, column: 6, scope: !3846)
!3848 = !DILocation(line: 245, column: 6, scope: !293)
!3849 = !DILocation(line: 246, column: 3, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !294, line: 246, column: 3)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !294, line: 246, column: 3)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !294, line: 246, column: 3)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !294, line: 246, column: 3)
!3854 = distinct !DILexicalBlock(scope: !3846, file: !294, line: 245, column: 71)
!3855 = !DILocation(line: 248, column: 51, scope: !3854)
!3856 = !DILocation(line: 248, column: 3, scope: !3854)
!3857 = !DILocation(line: 250, column: 3, scope: !3854)
!3858 = !DILocation(line: 253, column: 2, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !294, line: 253, column: 2)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !294, line: 253, column: 2)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !294, line: 253, column: 2)
!3862 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3863 = !DILocation(line: 254, column: 2, scope: !293)
!3864 = !DILocation(line: 256, column: 6, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3866 = !DILocation(line: 256, column: 6, scope: !293)
!3867 = !DILocation(line: 263, column: 6, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3869 = !DILocation(line: 263, column: 6, scope: !293)
!3870 = !DILocation(line: 264, column: 3, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !294, line: 264, column: 3)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !294, line: 264, column: 3)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !294, line: 264, column: 3)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !294, line: 264, column: 3)
!3875 = distinct !DILexicalBlock(scope: !3868, file: !294, line: 263, column: 48)
!3876 = !DILocation(line: 265, column: 3, scope: !3875)
!3877 = !DILocation(line: 268, column: 2, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !294, line: 268, column: 2)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !294, line: 268, column: 2)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !294, line: 268, column: 2)
!3881 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3882 = !DILocation(line: 270, column: 21, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3884 = !DILocation(line: 270, column: 6, scope: !3883)
!3885 = !DILocation(line: 270, column: 6, scope: !293)
!3886 = !DILocation(line: 271, column: 3, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !294, line: 271, column: 3)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 271, column: 3)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !294, line: 271, column: 3)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !294, line: 271, column: 3)
!3891 = distinct !DILexicalBlock(scope: !3883, file: !294, line: 270, column: 61)
!3892 = !DILocation(line: 273, column: 46, scope: !3891)
!3893 = !DILocation(line: 273, column: 3, scope: !3891)
!3894 = !DILocation(line: 275, column: 3, scope: !3891)
!3895 = !DILocation(line: 278, column: 2, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !294, line: 278, column: 2)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !294, line: 278, column: 2)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !294, line: 278, column: 2)
!3899 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3900 = !DILocation(line: 278, column: 2, scope: !3899)
!3901 = !DILocation(line: 279, column: 1, scope: !293)
!3902 = !DILocation(line: 280, column: 2, scope: !293)
!3903 = !DILocation(line: 281, column: 1, scope: !293)
!3904 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3905)
!3905 = !{!3906, !3907, !3908}
!3906 = !DILocalVariable(name: "ctx", arg: 1, scope: !3904, file: !128, line: 270, type: !165)
!3907 = !DILocalVariable(name: "pkt", arg: 2, scope: !3904, file: !128, line: 271, type: !180)
!3908 = !DILocalVariable(name: "iv", arg: 3, scope: !3904, file: !128, line: 271, type: !184)
!3909 = !DILocation(line: 0, scope: !3904)
!3910 = !DILocation(line: 276, column: 7, scope: !3904)
!3911 = !DILocation(line: 276, column: 11, scope: !3904)
!3912 = !DILocation(line: 277, column: 18, scope: !3904)
!3913 = !DILocation(line: 277, column: 9, scope: !3904)
!3914 = !DILocation(line: 277, column: 2, scope: !3904)
!3915 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3916)
!3916 = !{!3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924}
!3917 = !DILocalVariable(name: "dev", arg: 1, scope: !3915, file: !294, line: 294, type: !134)
!3918 = !DILocalVariable(name: "encrypted", scope: !3915, file: !294, line: 296, type: !304)
!3919 = !DILocalVariable(name: "decrypted", scope: !3915, file: !294, line: 297, type: !304)
!3920 = !DILocalVariable(name: "ini", scope: !3915, file: !294, line: 298, type: !166)
!3921 = !DILocalVariable(name: "encrypt", scope: !3915, file: !294, line: 305, type: !181)
!3922 = !DILocalVariable(name: "decrypt", scope: !3915, file: !294, line: 311, type: !181)
!3923 = !DILocalVariable(name: "iv", scope: !3915, file: !294, line: 317, type: !363)
!3924 = !DILabel(scope: !3915, name: "out", file: !294, line: 368)
!3925 = !DILocation(line: 0, scope: !3915)
!3926 = !DILocation(line: 296, column: 2, scope: !3915)
!3927 = !DILocation(line: 296, column: 10, scope: !3915)
!3928 = !DILocation(line: 297, column: 2, scope: !3915)
!3929 = !DILocation(line: 297, column: 10, scope: !3915)
!3930 = !DILocation(line: 298, column: 2, scope: !3915)
!3931 = !DILocation(line: 298, column: 20, scope: !3915)
!3932 = !DILocation(line: 298, column: 26, scope: !3915)
!3933 = !DILocation(line: 300, column: 7, scope: !3915)
!3934 = !DILocation(line: 303, column: 24, scope: !3915)
!3935 = !DILocation(line: 301, column: 12, scope: !3915)
!3936 = !DILocation(line: 305, column: 2, scope: !3915)
!3937 = !DILocation(line: 305, column: 20, scope: !3915)
!3938 = !DILocation(line: 305, column: 30, scope: !3915)
!3939 = !DILocation(line: 311, column: 2, scope: !3915)
!3940 = !DILocation(line: 311, column: 20, scope: !3915)
!3941 = !DILocation(line: 311, column: 30, scope: !3915)
!3942 = !DILocation(line: 317, column: 2, scope: !3915)
!3943 = !DILocation(line: 317, column: 10, scope: !3915)
!3944 = !DILocation(line: 322, column: 6, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 322, column: 6)
!3946 = !DILocation(line: 322, column: 6, scope: !3915)
!3947 = !DILocation(line: 328, column: 6, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 328, column: 6)
!3949 = !DILocation(line: 328, column: 6, scope: !3915)
!3950 = !DILocation(line: 329, column: 3, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !294, line: 329, column: 3)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !294, line: 329, column: 3)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !294, line: 329, column: 3)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 329, column: 3)
!3955 = distinct !DILexicalBlock(scope: !3948, file: !294, line: 328, column: 41)
!3956 = !DILocation(line: 330, column: 3, scope: !3955)
!3957 = !DILocation(line: 333, column: 2, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !294, line: 333, column: 2)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !294, line: 333, column: 2)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !294, line: 333, column: 2)
!3961 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 333, column: 2)
!3962 = !DILocation(line: 335, column: 21, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 335, column: 6)
!3964 = !DILocation(line: 335, column: 6, scope: !3963)
!3965 = !DILocation(line: 335, column: 6, scope: !3915)
!3966 = !DILocation(line: 336, column: 3, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !294, line: 336, column: 3)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !294, line: 336, column: 3)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !294, line: 336, column: 3)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !294, line: 336, column: 3)
!3971 = distinct !DILexicalBlock(scope: !3963, file: !294, line: 335, column: 71)
!3972 = !DILocation(line: 338, column: 51, scope: !3971)
!3973 = !DILocation(line: 338, column: 3, scope: !3971)
!3974 = !DILocation(line: 340, column: 3, scope: !3971)
!3975 = !DILocation(line: 343, column: 2, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !294, line: 343, column: 2)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !294, line: 343, column: 2)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !294, line: 343, column: 2)
!3979 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 343, column: 2)
!3980 = !DILocation(line: 344, column: 2, scope: !3915)
!3981 = !DILocation(line: 346, column: 6, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 346, column: 6)
!3983 = !DILocation(line: 346, column: 6, scope: !3915)
!3984 = !DILocation(line: 352, column: 6, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 352, column: 6)
!3986 = !DILocation(line: 352, column: 6, scope: !3915)
!3987 = !DILocation(line: 353, column: 3, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !294, line: 353, column: 3)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !294, line: 353, column: 3)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !294, line: 353, column: 3)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !294, line: 353, column: 3)
!3992 = distinct !DILexicalBlock(scope: !3985, file: !294, line: 352, column: 41)
!3993 = !DILocation(line: 354, column: 3, scope: !3992)
!3994 = !DILocation(line: 357, column: 2, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !294, line: 357, column: 2)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !294, line: 357, column: 2)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !294, line: 357, column: 2)
!3998 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 357, column: 2)
!3999 = !DILocation(line: 359, column: 21, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 359, column: 6)
!4001 = !DILocation(line: 359, column: 6, scope: !4000)
!4002 = !DILocation(line: 359, column: 6, scope: !3915)
!4003 = !DILocation(line: 360, column: 3, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !294, line: 360, column: 3)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !294, line: 360, column: 3)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !294, line: 360, column: 3)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !294, line: 360, column: 3)
!4008 = distinct !DILexicalBlock(scope: !4000, file: !294, line: 359, column: 61)
!4009 = !DILocation(line: 363, column: 14, scope: !4008)
!4010 = !DILocation(line: 362, column: 3, scope: !4008)
!4011 = !DILocation(line: 364, column: 3, scope: !4008)
!4012 = !DILocation(line: 367, column: 2, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !294, line: 367, column: 2)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !294, line: 367, column: 2)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !294, line: 367, column: 2)
!4016 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 367, column: 2)
!4017 = !DILocation(line: 367, column: 2, scope: !4016)
!4018 = !DILocation(line: 368, column: 1, scope: !3915)
!4019 = !DILocation(line: 369, column: 2, scope: !3915)
!4020 = !DILocation(line: 370, column: 1, scope: !3915)
!4021 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DILocalVariable(name: "ctx", arg: 1, scope: !4021, file: !128, line: 297, type: !165)
!4024 = !DILocalVariable(name: "pkt", arg: 2, scope: !4021, file: !128, line: 298, type: !180)
!4025 = !DILocalVariable(name: "iv", arg: 3, scope: !4021, file: !128, line: 298, type: !184)
!4026 = !DILocation(line: 0, scope: !4021)
!4027 = !DILocation(line: 303, column: 7, scope: !4021)
!4028 = !DILocation(line: 303, column: 11, scope: !4021)
!4029 = !DILocation(line: 304, column: 18, scope: !4021)
!4030 = !DILocation(line: 304, column: 9, scope: !4021)
!4031 = !DILocation(line: 304, column: 2, scope: !4021)
!4032 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4033)
!4033 = !{!4034, !4035, !4039, !4043, !4044, !4045, !4046, !4047}
!4034 = !DILocalVariable(name: "dev", arg: 1, scope: !4032, file: !294, line: 394, type: !134)
!4035 = !DILocalVariable(name: "encrypted", scope: !4032, file: !294, line: 396, type: !4036)
!4036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !4037)
!4037 = !{!4038}
!4038 = !DISubrange(count: 50)
!4039 = !DILocalVariable(name: "decrypted", scope: !4032, file: !294, line: 397, type: !4040)
!4040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !4041)
!4041 = !{!4042}
!4042 = !DISubrange(count: 25)
!4043 = !DILocalVariable(name: "ini", scope: !4032, file: !294, line: 398, type: !166)
!4044 = !DILocalVariable(name: "encrypt", scope: !4032, file: !294, line: 407, type: !181)
!4045 = !DILocalVariable(name: "ccm_op", scope: !4032, file: !294, line: 413, type: !203)
!4046 = !DILocalVariable(name: "decrypt", scope: !4032, file: !294, line: 425, type: !181)
!4047 = !DILabel(scope: !4032, name: "out", file: !294, line: 480)
!4048 = !DILocation(line: 0, scope: !4032)
!4049 = !DILocation(line: 396, column: 2, scope: !4032)
!4050 = !DILocation(line: 396, column: 10, scope: !4032)
!4051 = !DILocation(line: 397, column: 2, scope: !4032)
!4052 = !DILocation(line: 397, column: 10, scope: !4032)
!4053 = !DILocation(line: 398, column: 2, scope: !4032)
!4054 = !DILocation(line: 398, column: 20, scope: !4032)
!4055 = !DILocation(line: 398, column: 26, scope: !4032)
!4056 = !DILocation(line: 400, column: 7, scope: !4032)
!4057 = !DILocation(line: 401, column: 15, scope: !4032)
!4058 = !DILocation(line: 401, column: 27, scope: !4032)
!4059 = !DILocation(line: 405, column: 12, scope: !4032)
!4060 = !DILocation(line: 407, column: 2, scope: !4032)
!4061 = !DILocation(line: 407, column: 20, scope: !4032)
!4062 = !DILocation(line: 407, column: 30, scope: !4032)
!4063 = !DILocation(line: 413, column: 2, scope: !4032)
!4064 = !DILocation(line: 413, column: 25, scope: !4032)
!4065 = !DILocation(line: 413, column: 34, scope: !4032)
!4066 = !DILocation(line: 423, column: 20, scope: !4032)
!4067 = !DILocation(line: 425, column: 2, scope: !4032)
!4068 = !DILocation(line: 425, column: 20, scope: !4032)
!4069 = !DILocation(line: 425, column: 30, scope: !4032)
!4070 = !DILocation(line: 432, column: 6, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 432, column: 6)
!4072 = !DILocation(line: 432, column: 6, scope: !4032)
!4073 = !DILocation(line: 438, column: 13, scope: !4032)
!4074 = !DILocation(line: 439, column: 6, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 439, column: 6)
!4076 = !DILocation(line: 439, column: 6, scope: !4032)
!4077 = !DILocation(line: 440, column: 3, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !294, line: 440, column: 3)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !294, line: 440, column: 3)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !294, line: 440, column: 3)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 440, column: 3)
!4082 = distinct !DILexicalBlock(scope: !4075, file: !294, line: 439, column: 47)
!4083 = !DILocation(line: 441, column: 3, scope: !4082)
!4084 = !DILocation(line: 444, column: 2, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !294, line: 444, column: 2)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !294, line: 444, column: 2)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !294, line: 444, column: 2)
!4088 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 444, column: 2)
!4089 = !DILocation(line: 446, column: 21, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 446, column: 6)
!4091 = !DILocation(line: 446, column: 6, scope: !4090)
!4092 = !DILocation(line: 446, column: 6, scope: !4032)
!4093 = !DILocation(line: 447, column: 3, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !294, line: 447, column: 3)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !294, line: 447, column: 3)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !294, line: 447, column: 3)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !294, line: 447, column: 3)
!4098 = distinct !DILexicalBlock(scope: !4090, file: !294, line: 446, column: 67)
!4099 = !DILocation(line: 450, column: 14, scope: !4098)
!4100 = !DILocation(line: 449, column: 3, scope: !4098)
!4101 = !DILocation(line: 451, column: 3, scope: !4098)
!4102 = !DILocation(line: 454, column: 2, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !294, line: 454, column: 2)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !294, line: 454, column: 2)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !294, line: 454, column: 2)
!4106 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 454, column: 2)
!4107 = !DILocation(line: 455, column: 2, scope: !4032)
!4108 = !DILocation(line: 457, column: 6, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 457, column: 6)
!4110 = !DILocation(line: 457, column: 6, scope: !4032)
!4111 = !DILocation(line: 463, column: 13, scope: !4032)
!4112 = !DILocation(line: 464, column: 6, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 464, column: 6)
!4114 = !DILocation(line: 464, column: 6, scope: !4032)
!4115 = !DILocation(line: 465, column: 3, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !294, line: 465, column: 3)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !294, line: 465, column: 3)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !294, line: 465, column: 3)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !294, line: 465, column: 3)
!4120 = distinct !DILexicalBlock(scope: !4113, file: !294, line: 464, column: 47)
!4121 = !DILocation(line: 466, column: 3, scope: !4120)
!4122 = !DILocation(line: 469, column: 2, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !294, line: 469, column: 2)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !294, line: 469, column: 2)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 469, column: 2)
!4126 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 469, column: 2)
!4127 = !DILocation(line: 471, column: 21, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 471, column: 6)
!4129 = !DILocation(line: 471, column: 6, scope: !4128)
!4130 = !DILocation(line: 471, column: 6, scope: !4032)
!4131 = !DILocation(line: 472, column: 3, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !294, line: 472, column: 3)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !294, line: 472, column: 3)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !294, line: 472, column: 3)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !294, line: 472, column: 3)
!4136 = distinct !DILexicalBlock(scope: !4128, file: !294, line: 471, column: 59)
!4137 = !DILocation(line: 475, column: 14, scope: !4136)
!4138 = !DILocation(line: 474, column: 3, scope: !4136)
!4139 = !DILocation(line: 476, column: 3, scope: !4136)
!4140 = !DILocation(line: 479, column: 2, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !294, line: 479, column: 2)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !294, line: 479, column: 2)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !294, line: 479, column: 2)
!4144 = distinct !DILexicalBlock(scope: !4032, file: !294, line: 479, column: 2)
!4145 = !DILocation(line: 479, column: 2, scope: !4144)
!4146 = !DILocation(line: 480, column: 1, scope: !4032)
!4147 = !DILocation(line: 481, column: 2, scope: !4032)
!4148 = !DILocation(line: 482, column: 1, scope: !4032)
!4149 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4150)
!4150 = !{!4151, !4152, !4153}
!4151 = !DILocalVariable(name: "ctx", arg: 1, scope: !4149, file: !128, line: 319, type: !165)
!4152 = !DILocalVariable(name: "pkt", arg: 2, scope: !4149, file: !128, line: 320, type: !202)
!4153 = !DILocalVariable(name: "nonce", arg: 3, scope: !4149, file: !128, line: 320, type: !184)
!4154 = !DILocation(line: 0, scope: !4149)
!4155 = !DILocation(line: 325, column: 7, scope: !4149)
!4156 = !DILocation(line: 325, column: 12, scope: !4149)
!4157 = !DILocation(line: 325, column: 16, scope: !4149)
!4158 = !DILocation(line: 326, column: 18, scope: !4149)
!4159 = !DILocation(line: 326, column: 9, scope: !4149)
!4160 = !DILocation(line: 326, column: 2, scope: !4149)
!4161 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4162)
!4162 = !{!4163, !4164, !4168, !4170, !4171, !4172, !4173, !4174}
!4163 = !DILocalVariable(name: "dev", arg: 1, scope: !4161, file: !294, line: 511, type: !134)
!4164 = !DILocalVariable(name: "encrypted", scope: !4161, file: !294, line: 513, type: !4165)
!4165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4166)
!4166 = !{!4167}
!4167 = !DISubrange(count: 60)
!4168 = !DILocalVariable(name: "decrypted", scope: !4161, file: !294, line: 514, type: !4169)
!4169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !498)
!4170 = !DILocalVariable(name: "ini", scope: !4161, file: !294, line: 515, type: !166)
!4171 = !DILocalVariable(name: "encrypt", scope: !4161, file: !294, line: 524, type: !181)
!4172 = !DILocalVariable(name: "gcm_op", scope: !4161, file: !294, line: 530, type: !203)
!4173 = !DILocalVariable(name: "decrypt", scope: !4161, file: !294, line: 542, type: !181)
!4174 = !DILabel(scope: !4161, name: "out", file: !294, line: 597)
!4175 = !DILocation(line: 0, scope: !4161)
!4176 = !DILocation(line: 513, column: 2, scope: !4161)
!4177 = !DILocation(line: 513, column: 10, scope: !4161)
!4178 = !DILocation(line: 514, column: 2, scope: !4161)
!4179 = !DILocation(line: 514, column: 10, scope: !4161)
!4180 = !DILocation(line: 515, column: 2, scope: !4161)
!4181 = !DILocation(line: 515, column: 20, scope: !4161)
!4182 = !DILocation(line: 515, column: 26, scope: !4161)
!4183 = !DILocation(line: 517, column: 7, scope: !4161)
!4184 = !DILocation(line: 518, column: 15, scope: !4161)
!4185 = !DILocation(line: 518, column: 27, scope: !4161)
!4186 = !DILocation(line: 522, column: 12, scope: !4161)
!4187 = !DILocation(line: 524, column: 2, scope: !4161)
!4188 = !DILocation(line: 524, column: 20, scope: !4161)
!4189 = !DILocation(line: 524, column: 30, scope: !4161)
!4190 = !DILocation(line: 530, column: 2, scope: !4161)
!4191 = !DILocation(line: 530, column: 25, scope: !4161)
!4192 = !DILocation(line: 530, column: 34, scope: !4161)
!4193 = !DILocation(line: 540, column: 20, scope: !4161)
!4194 = !DILocation(line: 542, column: 2, scope: !4161)
!4195 = !DILocation(line: 542, column: 20, scope: !4161)
!4196 = !DILocation(line: 542, column: 30, scope: !4161)
!4197 = !DILocation(line: 549, column: 6, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 549, column: 6)
!4199 = !DILocation(line: 549, column: 6, scope: !4161)
!4200 = !DILocation(line: 555, column: 13, scope: !4161)
!4201 = !DILocation(line: 556, column: 6, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 556, column: 6)
!4203 = !DILocation(line: 556, column: 6, scope: !4161)
!4204 = !DILocation(line: 557, column: 3, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !294, line: 557, column: 3)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !294, line: 557, column: 3)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !294, line: 557, column: 3)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !294, line: 557, column: 3)
!4209 = distinct !DILexicalBlock(scope: !4202, file: !294, line: 556, column: 47)
!4210 = !DILocation(line: 558, column: 3, scope: !4209)
!4211 = !DILocation(line: 561, column: 2, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !294, line: 561, column: 2)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !294, line: 561, column: 2)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !294, line: 561, column: 2)
!4215 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 561, column: 2)
!4216 = !DILocation(line: 563, column: 21, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 563, column: 6)
!4218 = !DILocation(line: 563, column: 6, scope: !4217)
!4219 = !DILocation(line: 563, column: 6, scope: !4161)
!4220 = !DILocation(line: 564, column: 3, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !294, line: 564, column: 3)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !294, line: 564, column: 3)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !294, line: 564, column: 3)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !294, line: 564, column: 3)
!4225 = distinct !DILexicalBlock(scope: !4217, file: !294, line: 563, column: 67)
!4226 = !DILocation(line: 567, column: 14, scope: !4225)
!4227 = !DILocation(line: 566, column: 3, scope: !4225)
!4228 = !DILocation(line: 568, column: 3, scope: !4225)
!4229 = !DILocation(line: 571, column: 2, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !294, line: 571, column: 2)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !294, line: 571, column: 2)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !294, line: 571, column: 2)
!4233 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 571, column: 2)
!4234 = !DILocation(line: 572, column: 2, scope: !4161)
!4235 = !DILocation(line: 574, column: 6, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 574, column: 6)
!4237 = !DILocation(line: 574, column: 6, scope: !4161)
!4238 = !DILocation(line: 580, column: 13, scope: !4161)
!4239 = !DILocation(line: 581, column: 6, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 581, column: 6)
!4241 = !DILocation(line: 581, column: 6, scope: !4161)
!4242 = !DILocation(line: 582, column: 3, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !294, line: 582, column: 3)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !294, line: 582, column: 3)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !294, line: 582, column: 3)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !294, line: 582, column: 3)
!4247 = distinct !DILexicalBlock(scope: !4240, file: !294, line: 581, column: 47)
!4248 = !DILocation(line: 583, column: 3, scope: !4247)
!4249 = !DILocation(line: 586, column: 2, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !294, line: 586, column: 2)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !294, line: 586, column: 2)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !294, line: 586, column: 2)
!4253 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 586, column: 2)
!4254 = !DILocation(line: 588, column: 21, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 588, column: 6)
!4256 = !DILocation(line: 588, column: 6, scope: !4255)
!4257 = !DILocation(line: 588, column: 6, scope: !4161)
!4258 = !DILocation(line: 589, column: 3, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !294, line: 589, column: 3)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !294, line: 589, column: 3)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !294, line: 589, column: 3)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !294, line: 589, column: 3)
!4263 = distinct !DILexicalBlock(scope: !4255, file: !294, line: 588, column: 59)
!4264 = !DILocation(line: 592, column: 14, scope: !4263)
!4265 = !DILocation(line: 591, column: 3, scope: !4263)
!4266 = !DILocation(line: 593, column: 3, scope: !4263)
!4267 = !DILocation(line: 596, column: 2, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !294, line: 596, column: 2)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !294, line: 596, column: 2)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !294, line: 596, column: 2)
!4271 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 596, column: 2)
!4272 = !DILocation(line: 596, column: 2, scope: !4271)
!4273 = !DILocation(line: 597, column: 1, scope: !4161)
!4274 = !DILocation(line: 598, column: 2, scope: !4161)
!4275 = !DILocation(line: 599, column: 1, scope: !4161)
!4276 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4277)
!4277 = !{!4278, !4279, !4280}
!4278 = !DILocalVariable(name: "ctx", arg: 1, scope: !4276, file: !128, line: 341, type: !165)
!4279 = !DILocalVariable(name: "pkt", arg: 2, scope: !4276, file: !128, line: 342, type: !202)
!4280 = !DILocalVariable(name: "nonce", arg: 3, scope: !4276, file: !128, line: 342, type: !184)
!4281 = !DILocation(line: 0, scope: !4276)
!4282 = !DILocation(line: 347, column: 7, scope: !4276)
!4283 = !DILocation(line: 347, column: 12, scope: !4276)
!4284 = !DILocation(line: 347, column: 16, scope: !4276)
!4285 = !DILocation(line: 348, column: 18, scope: !4276)
!4286 = !DILocation(line: 348, column: 9, scope: !4276)
!4287 = !DILocation(line: 348, column: 2, scope: !4276)
!4288 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3440, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4289)
!4289 = !{!4290, !4291, !4299}
!4290 = !DILocalVariable(name: "dev", scope: !4288, file: !294, line: 609, type: !134)
!4291 = !DILocalVariable(name: "modes", scope: !4288, file: !294, line: 623, type: !4292)
!4292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4293, size: 384, elements: !2537)
!4293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4294)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4295)
!4295 = !{!4296, !4297}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4294, file: !294, line: 602, baseType: !140, size: 32)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4294, file: !294, line: 603, baseType: !4298, size: 32, offset: 32)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4299 = !DILocalVariable(name: "i", scope: !4288, file: !294, line: 631, type: !125)
!4300 = !DILocation(line: 609, column: 29, scope: !4288)
!4301 = !DILocation(line: 0, scope: !4288)
!4302 = !DILocation(line: 611, column: 7, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4288, file: !294, line: 611, column: 6)
!4304 = !DILocation(line: 611, column: 6, scope: !4288)
!4305 = !DILocation(line: 612, column: 3, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !294, line: 612, column: 3)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !294, line: 612, column: 3)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !294, line: 612, column: 3)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !294, line: 612, column: 3)
!4310 = distinct !DILexicalBlock(scope: !4303, file: !294, line: 611, column: 12)
!4311 = !DILocation(line: 613, column: 3, scope: !4310)
!4312 = !DILocation(line: 623, column: 25, scope: !4288)
!4313 = !DILocation(line: 633, column: 6, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4288, file: !294, line: 633, column: 6)
!4315 = !DILocation(line: 633, column: 6, scope: !4288)
!4316 = !DILocation(line: 634, column: 3, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !294, line: 634, column: 3)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !294, line: 634, column: 3)
!4319 = distinct !DILexicalBlock(scope: !4320, file: !294, line: 634, column: 3)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !294, line: 634, column: 3)
!4321 = distinct !DILexicalBlock(scope: !4314, file: !294, line: 633, column: 38)
!4322 = !DILocation(line: 635, column: 3, scope: !4321)
!4323 = !DILocation(line: 638, column: 2, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !294, line: 638, column: 2)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !294, line: 638, column: 2)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !294, line: 638, column: 2)
!4327 = distinct !DILexicalBlock(scope: !4288, file: !294, line: 638, column: 2)
!4328 = !DILocation(line: 640, column: 2, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4288, file: !294, line: 640, column: 2)
!4330 = !DILocation(line: 640, column: 23, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4329, file: !294, line: 640, column: 2)
!4332 = !DILocation(line: 641, column: 3, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !294, line: 641, column: 3)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !294, line: 641, column: 3)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !294, line: 641, column: 3)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !294, line: 641, column: 3)
!4337 = distinct !DILexicalBlock(scope: !4331, file: !294, line: 640, column: 34)
!4338 = !DILocation(line: 642, column: 12, scope: !4337)
!4339 = !DILocation(line: 642, column: 3, scope: !4337)
!4340 = !DILocation(line: 640, column: 30, scope: !4331)
!4341 = distinct !{!4341, !4328, !4342}
!4342 = !DILocation(line: 643, column: 2, scope: !4329)
!4343 = !DILocation(line: 644, column: 1, scope: !4288)
!4344 = distinct !DISubprogram(name: "device_get_binding", scope: !4345, file: !4345, line: 24, type: !4346, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4348)
!4345 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!134, !140}
!4348 = !{!4349}
!4349 = !DILocalVariable(name: "name", arg: 1, scope: !4344, file: !4345, line: 24, type: !140)
!4350 = !DILocation(line: 0, scope: !4344)
!4351 = !DILocation(line: 32, column: 2, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4344, file: !4345, line: 32, column: 2)
!4353 = !{i64 2149799836}
!4354 = !DILocation(line: 33, column: 9, scope: !4344)
!4355 = !DILocation(line: 33, column: 2, scope: !4344)
!4356 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4357, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4366)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!125, !124, !272, !208, !140, !4359}
!4359 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4360, line: 99, baseType: !4361)
!4360 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4360, line: 40, baseType: !4362)
!4362 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4363)
!4363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4364)
!4364 = !{!4365}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4363, file: !395, line: 18, baseType: !124, size: 32)
!4366 = !{!4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4401, !4410, !4413, !4414, !4417, !4420, !4423, !4426, !4432}
!4367 = !DILocalVariable(name: "packaged", arg: 1, scope: !4356, file: !395, line: 233, type: !124)
!4368 = !DILocalVariable(name: "len", arg: 2, scope: !4356, file: !395, line: 233, type: !272)
!4369 = !DILocalVariable(name: "flags", arg: 3, scope: !4356, file: !395, line: 233, type: !208)
!4370 = !DILocalVariable(name: "fmt", arg: 4, scope: !4356, file: !395, line: 234, type: !140)
!4371 = !DILocalVariable(name: "ap", arg: 5, scope: !4356, file: !395, line: 234, type: !4359)
!4372 = !DILocalVariable(name: "buf0", scope: !4356, file: !395, line: 247, type: !184)
!4373 = !DILocalVariable(name: "buf", scope: !4356, file: !395, line: 248, type: !184)
!4374 = !DILocalVariable(name: "size", scope: !4356, file: !395, line: 249, type: !32)
!4375 = !DILocalVariable(name: "align", scope: !4356, file: !395, line: 250, type: !32)
!4376 = !DILocalVariable(name: "str_ptr_pos", scope: !4356, file: !395, line: 251, type: !311)
!4377 = !DILocalVariable(name: "str_ptr_arg", scope: !4356, file: !395, line: 252, type: !311)
!4378 = !DILocalVariable(name: "s_idx", scope: !4356, file: !395, line: 253, type: !32)
!4379 = !DILocalVariable(name: "s_rw_cnt", scope: !4356, file: !395, line: 254, type: !32)
!4380 = !DILocalVariable(name: "s_ro_cnt", scope: !4356, file: !395, line: 255, type: !32)
!4381 = !DILocalVariable(name: "arg_idx", scope: !4356, file: !395, line: 256, type: !125)
!4382 = !DILocalVariable(name: "i", scope: !4356, file: !395, line: 257, type: !32)
!4383 = !DILocalVariable(name: "s", scope: !4356, file: !395, line: 258, type: !140)
!4384 = !DILocalVariable(name: "parsing", scope: !4356, file: !395, line: 259, type: !153)
!4385 = !DILocalVariable(name: "rws_pos_en", scope: !4356, file: !395, line: 263, type: !153)
!4386 = !DILocalVariable(name: "fros_cnt", scope: !4356, file: !395, line: 268, type: !125)
!4387 = !DILocalVariable(name: "is_str_arg", scope: !4356, file: !395, line: 269, type: !153)
!4388 = !DILocalVariable(name: "pkg_hdr", scope: !4356, file: !395, line: 270, type: !4389)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 32)
!4390 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4391, line: 78, size: 32, elements: !4392)
!4391 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4392 = !{!4393, !4400}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4390, file: !4391, line: 80, baseType: !4394, size: 32)
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4391, line: 45, size: 32, elements: !4395)
!4395 = !{!4396, !4397, !4398, !4399}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4394, file: !4391, line: 47, baseType: !150, size: 8)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4394, file: !4391, line: 50, baseType: !150, size: 8, offset: 8)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4394, file: !4391, line: 53, baseType: !150, size: 8, offset: 16)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4394, file: !4391, line: 56, baseType: !150, size: 8, offset: 24)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4390, file: !4391, line: 82, baseType: !124, size: 32)
!4401 = !DILocalVariable(name: "v", scope: !4402, file: !395, line: 567, type: !4406)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !395, line: 562, column: 14)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !395, line: 481, column: 18)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !395, line: 466, column: 3)
!4405 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 343, column: 15)
!4406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4356, file: !395, line: 567, size: 64, elements: !4407)
!4407 = !{!4408, !4409}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4406, file: !395, line: 567, baseType: !385, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4406, file: !395, line: 567, baseType: !383, size: 64)
!4410 = !DILocalVariable(name: "is_ro", scope: !4411, file: !395, line: 620, type: !153)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !395, line: 613, column: 19)
!4412 = distinct !DILexicalBlock(scope: !4405, file: !395, line: 613, column: 7)
!4413 = !DILocalVariable(name: "do_ro", scope: !4411, file: !395, line: 621, type: !153)
!4414 = !DILocalVariable(name: "s_ptr_idx", scope: !4415, file: !395, line: 626, type: !208)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !395, line: 625, column: 11)
!4416 = distinct !DILexicalBlock(scope: !4411, file: !395, line: 623, column: 8)
!4417 = !DILocalVariable(name: "v", scope: !4418, file: !395, line: 684, type: !125)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !395, line: 683, column: 35)
!4419 = distinct !DILexicalBlock(scope: !4412, file: !395, line: 683, column: 14)
!4420 = !DILocalVariable(name: "v", scope: !4421, file: !395, line: 691, type: !389)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !395, line: 690, column: 36)
!4422 = distinct !DILexicalBlock(scope: !4419, file: !395, line: 690, column: 14)
!4423 = !DILocalVariable(name: "v", scope: !4424, file: !395, line: 698, type: !391)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !395, line: 697, column: 41)
!4425 = distinct !DILexicalBlock(scope: !4422, file: !395, line: 697, column: 14)
!4426 = !DILocalVariable(name: "pos", scope: !4427, file: !395, line: 762, type: !150)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !395, line: 757, column: 31)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !395, line: 757, column: 3)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !395, line: 757, column: 3)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !395, line: 756, column: 16)
!4431 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 756, column: 6)
!4432 = !DILabel(scope: !4411, name: "process_string", file: !395, line: 615)
!4433 = !DILocation(line: 0, scope: !4356)
!4434 = !DILocation(line: 251, column: 2, scope: !4356)
!4435 = !DILocation(line: 251, column: 10, scope: !4356)
!4436 = !DILocation(line: 252, column: 2, scope: !4356)
!4437 = !DILocation(line: 252, column: 10, scope: !4356)
!4438 = !DILocation(line: 263, column: 29, scope: !4356)
!4439 = !DILocation(line: 263, column: 21, scope: !4356)
!4440 = !DILocation(line: 268, column: 21, scope: !4356)
!4441 = !DILocation(line: 268, column: 19, scope: !4356)
!4442 = !DILocation(line: 273, column: 6, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 273, column: 6)
!4444 = !DILocation(line: 273, column: 26, scope: !4443)
!4445 = !DILocation(line: 273, column: 6, scope: !4356)
!4446 = !DILocation(line: 297, column: 6, scope: !4356)
!4447 = !DILocation(line: 305, column: 11, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 305, column: 6)
!4449 = !DILocation(line: 305, column: 6, scope: !4356)
!4450 = !DILocation(line: 327, column: 19, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 327, column: 6)
!4452 = !DILocation(line: 327, column: 22, scope: !4451)
!4453 = !DILocation(line: 327, column: 33, scope: !4451)
!4454 = !DILocation(line: 327, column: 50, scope: !4451)
!4455 = !DILocation(line: 327, column: 6, scope: !4356)
!4456 = !DILocation(line: 338, column: 9, scope: !4356)
!4457 = !DILocation(line: 341, column: 2, scope: !4356)
!4458 = !DILocation(line: 472, column: 8, scope: !4404)
!4459 = !DILocation(line: 473, column: 14, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !395, line: 473, column: 9)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !395, line: 472, column: 18)
!4462 = distinct !DILexicalBlock(scope: !4404, file: !395, line: 472, column: 8)
!4463 = !DILocation(line: 473, column: 9, scope: !4461)
!4464 = !DILocation(line: 479, column: 5, scope: !4461)
!4465 = !DILocation(line: 468, column: 9, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4404, file: !395, line: 468, column: 8)
!4467 = !DILocation(line: 468, column: 8, scope: !4466)
!4468 = !DILocation(line: 468, column: 15, scope: !4466)
!4469 = !DILocation(line: 468, column: 8, scope: !4404)
!4470 = distinct !{!4470, !4471, !4472}
!4471 = !DILocation(line: 343, column: 2, scope: !4356)
!4472 = !DILocation(line: 712, column: 2, scope: !4356)
!4473 = !DILocation(line: 481, column: 4, scope: !4404)
!4474 = !DILocation(line: 484, column: 12, scope: !4403)
!4475 = !DILocation(line: 485, column: 5, scope: !4403)
!4476 = !DILocation(line: 505, column: 5, scope: !4403)
!4477 = !DILocation(line: 518, column: 5, scope: !4403)
!4478 = !DILocation(line: 523, column: 5, scope: !4403)
!4479 = !DILocation(line: 532, column: 9, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4403, file: !395, line: 532, column: 9)
!4481 = !DILocation(line: 532, column: 17, scope: !4480)
!4482 = !DILocation(line: 532, column: 9, scope: !4403)
!4483 = !DILocation(line: 533, column: 10, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !395, line: 533, column: 10)
!4485 = distinct !DILexicalBlock(scope: !4480, file: !395, line: 532, column: 25)
!4486 = !DILocation(line: 533, column: 18, scope: !4484)
!4487 = !DILocation(line: 0, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4402, file: !395, line: 569, column: 9)
!4489 = !DILocation(line: 0, scope: !4402)
!4490 = !DILocation(line: 579, column: 20, scope: !4402)
!4491 = !DILocation(line: 579, column: 11, scope: !4402)
!4492 = !DILocation(line: 580, column: 9, scope: !4402)
!4493 = !DILocation(line: 582, column: 21, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !395, line: 582, column: 10)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !395, line: 580, column: 23)
!4496 = distinct !DILexicalBlock(scope: !4402, file: !395, line: 580, column: 9)
!4497 = !DILocation(line: 582, column: 28, scope: !4494)
!4498 = !DILocation(line: 582, column: 10, scope: !4495)
!4499 = !DILocation(line: 0, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !395, line: 587, column: 17)
!4501 = distinct !DILexicalBlock(scope: !4495, file: !395, line: 585, column: 10)
!4502 = !DILocation(line: 593, column: 9, scope: !4402)
!4503 = !DILocation(line: 600, column: 5, scope: !4403)
!4504 = !DILocation(line: 605, column: 18, scope: !4405)
!4505 = !DILocation(line: 605, column: 9, scope: !4405)
!4506 = !DILocation(line: 608, column: 20, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4405, file: !395, line: 608, column: 7)
!4508 = !DILocation(line: 608, column: 23, scope: !4507)
!4509 = !DILocation(line: 608, column: 34, scope: !4507)
!4510 = !DILocation(line: 608, column: 41, scope: !4507)
!4511 = !DILocation(line: 608, column: 7, scope: !4405)
!4512 = !DILocation(line: 613, column: 7, scope: !4405)
!4513 = !DILocation(line: 614, column: 8, scope: !4411)
!4514 = !DILocation(line: 614, column: 4, scope: !4411)
!4515 = !DILocation(line: 255, column: 15, scope: !4356)
!4516 = !DILocation(line: 256, column: 6, scope: !4356)
!4517 = !DILocation(line: 254, column: 15, scope: !4356)
!4518 = !DILocation(line: 253, column: 15, scope: !4356)
!4519 = !DILocation(line: 320, column: 7, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4448, file: !395, line: 305, column: 20)
!4521 = !DILocation(line: 615, column: 1, scope: !4411)
!4522 = !DILocation(line: 616, column: 8, scope: !4411)
!4523 = !DILocation(line: 617, column: 5, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !395, line: 616, column: 22)
!4525 = distinct !DILexicalBlock(scope: !4411, file: !395, line: 616, column: 8)
!4526 = !DILocation(line: 617, column: 25, scope: !4524)
!4527 = !DILocation(line: 618, column: 4, scope: !4524)
!4528 = !DILocation(line: 620, column: 26, scope: !4411)
!4529 = !DILocation(line: 620, column: 29, scope: !4411)
!4530 = !DILocation(line: 620, column: 17, scope: !4411)
!4531 = !DILocation(line: 620, column: 43, scope: !4411)
!4532 = !DILocation(line: 0, scope: !4411)
!4533 = !DILocation(line: 623, column: 14, scope: !4416)
!4534 = !DILocation(line: 626, column: 26, scope: !4415)
!4535 = !DILocation(line: 626, column: 37, scope: !4415)
!4536 = !DILocation(line: 0, scope: !4415)
!4537 = !DILocation(line: 634, column: 15, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4415, file: !395, line: 634, column: 9)
!4539 = !DILocation(line: 644, column: 9, scope: !4415)
!4540 = !DILocation(line: 649, column: 27, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !395, line: 644, column: 23)
!4542 = distinct !DILexicalBlock(scope: !4415, file: !395, line: 644, column: 9)
!4543 = !DILocation(line: 649, column: 6, scope: !4541)
!4544 = !DILocation(line: 649, column: 25, scope: !4541)
!4545 = !DILocation(line: 650, column: 27, scope: !4541)
!4546 = !DILocation(line: 650, column: 6, scope: !4541)
!4547 = !DILocation(line: 650, column: 25, scope: !4541)
!4548 = !DILocation(line: 651, column: 10, scope: !4541)
!4549 = !DILocation(line: 653, column: 26, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !395, line: 651, column: 17)
!4551 = distinct !DILexicalBlock(scope: !4541, file: !395, line: 651, column: 10)
!4552 = !DILocation(line: 654, column: 15, scope: !4550)
!4553 = !DILocation(line: 655, column: 6, scope: !4550)
!4554 = !DILocation(line: 656, column: 15, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !395, line: 655, column: 13)
!4556 = !DILocation(line: 658, column: 16, scope: !4542)
!4557 = !DILocation(line: 663, column: 10, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !395, line: 658, column: 23)
!4559 = distinct !DILexicalBlock(scope: !4542, file: !395, line: 658, column: 16)
!4560 = !DILocation(line: 664, column: 5, scope: !4558)
!4561 = !DILocation(line: 664, column: 16, scope: !4559)
!4562 = !DILocation(line: 669, column: 10, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !395, line: 664, column: 28)
!4564 = distinct !DILexicalBlock(scope: !4559, file: !395, line: 664, column: 16)
!4565 = !DILocation(line: 670, column: 5, scope: !4563)
!4566 = !DILocation(line: 675, column: 13, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !395, line: 670, column: 12)
!4568 = !DILocation(line: 675, column: 27, scope: !4567)
!4569 = !DILocation(line: 675, column: 10, scope: !4567)
!4570 = !DILocation(line: 678, column: 10, scope: !4415)
!4571 = !DILocation(line: 680, column: 8, scope: !4411)
!4572 = !DILocation(line: 683, column: 14, scope: !4412)
!4573 = !DILocation(line: 684, column: 12, scope: !4418)
!4574 = !DILocation(line: 0, scope: !4418)
!4575 = !DILocation(line: 686, column: 8, scope: !4418)
!4576 = !DILocation(line: 687, column: 5, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !395, line: 686, column: 22)
!4578 = distinct !DILexicalBlock(scope: !4418, file: !395, line: 686, column: 8)
!4579 = !DILocation(line: 687, column: 17, scope: !4577)
!4580 = !DILocation(line: 688, column: 4, scope: !4577)
!4581 = !DILocation(line: 698, column: 18, scope: !4424)
!4582 = !DILocation(line: 0, scope: !4424)
!4583 = !DILocation(line: 700, column: 8, scope: !4424)
!4584 = !DILocation(line: 704, column: 6, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !395, line: 703, column: 12)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !395, line: 701, column: 9)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !395, line: 700, column: 22)
!4588 = distinct !DILexicalBlock(scope: !4424, file: !395, line: 700, column: 8)
!4589 = !DILocation(line: 704, column: 24, scope: !4585)
!4590 = !DILocation(line: 706, column: 4, scope: !4587)
!4591 = !DILocation(line: 0, scope: !4419)
!4592 = !DILocation(line: 0, scope: !4405)
!4593 = !DILocation(line: 720, column: 6, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 720, column: 6)
!4595 = !DILocation(line: 720, column: 17, scope: !4594)
!4596 = !DILocation(line: 720, column: 31, scope: !4594)
!4597 = !DILocation(line: 720, column: 6, scope: !4356)
!4598 = !DILocation(line: 729, column: 6, scope: !4356)
!4599 = !DILocation(line: 730, column: 21, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !395, line: 729, column: 20)
!4601 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 729, column: 6)
!4602 = !DILocation(line: 730, column: 27, scope: !4600)
!4603 = !DILocation(line: 730, column: 3, scope: !4600)
!4604 = !DILocation(line: 737, column: 22, scope: !4356)
!4605 = !DILocation(line: 737, column: 20, scope: !4356)
!4606 = !DILocation(line: 0, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 739, column: 6)
!4608 = !DILocation(line: 745, column: 17, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4607, file: !395, line: 743, column: 9)
!4610 = !DILocation(line: 745, column: 25, scope: !4609)
!4611 = !DILocation(line: 746, column: 17, scope: !4609)
!4612 = !DILocation(line: 746, column: 28, scope: !4609)
!4613 = !DILocation(line: 749, column: 29, scope: !4356)
!4614 = !DILocation(line: 749, column: 16, scope: !4356)
!4615 = !DILocation(line: 749, column: 27, scope: !4356)
!4616 = !DILocation(line: 756, column: 6, scope: !4431)
!4617 = !DILocation(line: 756, column: 6, scope: !4356)
!4618 = !DILocation(line: 757, column: 3, scope: !4429)
!4619 = !DILocation(line: 758, column: 10, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4427, file: !395, line: 758, column: 8)
!4621 = !DILocation(line: 758, column: 25, scope: !4620)
!4622 = !DILocation(line: 758, column: 8, scope: !4427)
!4623 = !DILocation(line: 0, scope: !4427)
!4624 = !DILocation(line: 765, column: 8, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4427, file: !395, line: 765, column: 8)
!4626 = !DILocation(line: 765, column: 19, scope: !4625)
!4627 = !DILocation(line: 765, column: 23, scope: !4625)
!4628 = !DILocation(line: 765, column: 8, scope: !4427)
!4629 = !DILocation(line: 762, column: 33, scope: !4427)
!4630 = !DILocation(line: 769, column: 8, scope: !4427)
!4631 = !DILocation(line: 769, column: 11, scope: !4427)
!4632 = !DILocation(line: 757, column: 27, scope: !4428)
!4633 = !DILocation(line: 757, column: 17, scope: !4428)
!4634 = distinct !{!4634, !4618, !4635}
!4635 = !DILocation(line: 770, column: 3, scope: !4429)
!4636 = !DILocation(line: 774, column: 16, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !395, line: 774, column: 2)
!4638 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 774, column: 2)
!4639 = !DILocation(line: 774, column: 2, scope: !4638)
!4640 = !DILocation(line: 776, column: 16, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !395, line: 776, column: 7)
!4642 = distinct !DILexicalBlock(scope: !4637, file: !395, line: 774, column: 30)
!4643 = !DILocation(line: 776, column: 19, scope: !4641)
!4644 = !DILocation(line: 776, column: 34, scope: !4641)
!4645 = !DILocation(line: 776, column: 7, scope: !4642)
!4646 = !DILocation(line: 780, column: 7, scope: !4642)
!4647 = !DILocation(line: 782, column: 13, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !395, line: 780, column: 19)
!4649 = distinct !DILexicalBlock(scope: !4642, file: !395, line: 780, column: 7)
!4650 = !DILocation(line: 782, column: 8, scope: !4648)
!4651 = !DILocation(line: 782, column: 11, scope: !4648)
!4652 = !DILocation(line: 783, column: 3, scope: !4648)
!4653 = !DILocation(line: 785, column: 26, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !395, line: 783, column: 10)
!4655 = !DILocation(line: 785, column: 41, scope: !4654)
!4656 = !DILocation(line: 785, column: 24, scope: !4654)
!4657 = !DILocation(line: 785, column: 8, scope: !4654)
!4658 = !DILocation(line: 787, column: 52, scope: !4654)
!4659 = !DILocation(line: 789, column: 11, scope: !4654)
!4660 = !DILocation(line: 789, column: 21, scope: !4654)
!4661 = !DILocation(line: 0, scope: !4649)
!4662 = !DILocation(line: 793, column: 7, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4642, file: !395, line: 793, column: 7)
!4664 = !DILocation(line: 793, column: 18, scope: !4663)
!4665 = !DILocation(line: 793, column: 22, scope: !4663)
!4666 = !DILocation(line: 793, column: 29, scope: !4663)
!4667 = !DILocation(line: 793, column: 7, scope: !4642)
!4668 = !DILocation(line: 797, column: 12, scope: !4642)
!4669 = !DILocation(line: 797, column: 7, scope: !4642)
!4670 = !DILocation(line: 797, column: 10, scope: !4642)
!4671 = !DILocation(line: 799, column: 3, scope: !4642)
!4672 = !DILocation(line: 800, column: 7, scope: !4642)
!4673 = !DILocation(line: 801, column: 2, scope: !4642)
!4674 = !DILocation(line: 338, column: 4, scope: !4356)
!4675 = !DILocation(line: 774, column: 26, scope: !4637)
!4676 = distinct !{!4676, !4639, !4677}
!4677 = !DILocation(line: 801, column: 2, scope: !4638)
!4678 = !DILocation(line: 808, column: 9, scope: !4356)
!4679 = !DILocation(line: 808, column: 2, scope: !4356)
!4680 = !DILocation(line: 813, column: 1, scope: !4356)
!4681 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4682, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4684)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!153, !140}
!4684 = !{!4685}
!4685 = !DILocalVariable(name: "addr", arg: 1, scope: !4681, file: !395, line: 33, type: !140)
!4686 = !DILocation(line: 0, scope: !4681)
!4687 = !DILocation(line: 41, column: 9, scope: !4681)
!4688 = !DILocation(line: 41, column: 2, scope: !4681)
!4689 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4690, file: !4690, line: 24, type: !4691, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4693)
!4690 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!153, !13}
!4693 = !{!4694}
!4694 = !DILocalVariable(name: "addr", arg: 1, scope: !4689, file: !4690, line: 24, type: !13)
!4695 = !DILocation(line: 0, scope: !4689)
!4696 = !DILocation(line: 49, column: 30, scope: !4689)
!4697 = !DILocation(line: 49, column: 57, scope: !4689)
!4698 = !DILocation(line: 49, column: 2, scope: !4689)
!4699 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4700, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4702)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!125, !124, !272, !208, !140, null}
!4702 = !{!4703, !4704, !4705, !4706, !4707, !4708}
!4703 = !DILocalVariable(name: "packaged", arg: 1, scope: !4699, file: !395, line: 815, type: !124)
!4704 = !DILocalVariable(name: "len", arg: 2, scope: !4699, file: !395, line: 815, type: !272)
!4705 = !DILocalVariable(name: "flags", arg: 3, scope: !4699, file: !395, line: 815, type: !208)
!4706 = !DILocalVariable(name: "format", arg: 4, scope: !4699, file: !395, line: 816, type: !140)
!4707 = !DILocalVariable(name: "ap", scope: !4699, file: !395, line: 818, type: !4359)
!4708 = !DILocalVariable(name: "ret", scope: !4699, file: !395, line: 819, type: !125)
!4709 = !DILocation(line: 0, scope: !4699)
!4710 = !DILocation(line: 818, column: 2, scope: !4699)
!4711 = !DILocation(line: 818, column: 10, scope: !4699)
!4712 = !DILocation(line: 821, column: 2, scope: !4699)
!4713 = !DILocation(line: 822, column: 8, scope: !4699)
!4714 = !DILocation(line: 823, column: 2, scope: !4699)
!4715 = !DILocation(line: 825, column: 1, scope: !4699)
!4716 = !DILocation(line: 824, column: 2, scope: !4699)
!4717 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4718, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4728)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!125, !4720, !4724, !124, !124}
!4720 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4391, line: 297, baseType: !4721)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 32)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!125, null}
!4724 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4391, line: 328, baseType: !4725)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 32)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!125, !4720, !124, !140, !4359}
!4728 = !{!4729, !4730, !4731, !4732, !4733, !4734, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747}
!4729 = !DILocalVariable(name: "out", arg: 1, scope: !4717, file: !395, line: 827, type: !4720)
!4730 = !DILocalVariable(name: "formatter", arg: 2, scope: !4717, file: !395, line: 828, type: !4724)
!4731 = !DILocalVariable(name: "ctx", arg: 3, scope: !4717, file: !395, line: 829, type: !124)
!4732 = !DILocalVariable(name: "packaged", arg: 4, scope: !4717, file: !395, line: 829, type: !124)
!4733 = !DILocalVariable(name: "buf", scope: !4717, file: !395, line: 831, type: !184)
!4734 = !DILocalVariable(name: "hdr", scope: !4717, file: !395, line: 832, type: !4735)
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4736, size: 32)
!4736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4391, line: 96, size: 64, elements: !4737)
!4737 = !{!4738, !4739}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4736, file: !4391, line: 98, baseType: !4390, size: 32)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4736, file: !4391, line: 101, baseType: !393, size: 32, offset: 32)
!4740 = !DILocalVariable(name: "s", scope: !4717, file: !395, line: 833, type: !393)
!4741 = !DILocalVariable(name: "ps", scope: !4717, file: !395, line: 833, type: !392)
!4742 = !DILocalVariable(name: "i", scope: !4717, file: !395, line: 834, type: !32)
!4743 = !DILocalVariable(name: "args_size", scope: !4717, file: !395, line: 834, type: !32)
!4744 = !DILocalVariable(name: "s_nbr", scope: !4717, file: !395, line: 834, type: !32)
!4745 = !DILocalVariable(name: "ros_nbr", scope: !4717, file: !395, line: 834, type: !32)
!4746 = !DILocalVariable(name: "rws_nbr", scope: !4717, file: !395, line: 834, type: !32)
!4747 = !DILocalVariable(name: "s_idx", scope: !4717, file: !395, line: 834, type: !32)
!4748 = !DILocation(line: 0, scope: !4717)
!4749 = !DILocation(line: 836, column: 10, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4717, file: !395, line: 836, column: 6)
!4751 = !DILocation(line: 836, column: 6, scope: !4717)
!4752 = !DILocation(line: 842, column: 28, scope: !4717)
!4753 = !DILocation(line: 842, column: 14, scope: !4717)
!4754 = !DILocation(line: 852, column: 16, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !395, line: 852, column: 2)
!4756 = distinct !DILexicalBlock(scope: !4717, file: !395, line: 852, column: 2)
!4757 = !DILocation(line: 852, column: 2, scope: !4756)
!4758 = !DILocation(line: 841, column: 28, scope: !4717)
!4759 = !DILocation(line: 841, column: 14, scope: !4717)
!4760 = !DILocation(line: 841, column: 32, scope: !4717)
!4761 = !DILocation(line: 847, column: 19, scope: !4717)
!4762 = !DILocation(line: 843, column: 28, scope: !4717)
!4763 = !DILocation(line: 843, column: 14, scope: !4717)
!4764 = !DILocation(line: 847, column: 31, scope: !4717)
!4765 = !DILocation(line: 844, column: 28, scope: !4717)
!4766 = !DILocation(line: 844, column: 14, scope: !4717)
!4767 = !DILocation(line: 847, column: 45, scope: !4717)
!4768 = !DILocation(line: 847, column: 41, scope: !4717)
!4769 = !DILocation(line: 854, column: 24, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4755, file: !395, line: 852, column: 30)
!4771 = !DILocation(line: 854, column: 11, scope: !4770)
!4772 = !DILocation(line: 855, column: 30, scope: !4770)
!4773 = !DILocation(line: 855, column: 22, scope: !4770)
!4774 = !DILocation(line: 855, column: 8, scope: !4770)
!4775 = !DILocation(line: 857, column: 7, scope: !4770)
!4776 = !DILocation(line: 859, column: 8, scope: !4770)
!4777 = !DILocation(line: 859, column: 18, scope: !4770)
!4778 = !DILocation(line: 859, column: 5, scope: !4770)
!4779 = !DILocation(line: 852, column: 26, scope: !4755)
!4780 = distinct !{!4780, !4757, !4781}
!4781 = !DILocation(line: 860, column: 2, scope: !4756)
!4782 = !DILocation(line: 863, column: 6, scope: !4717)
!4783 = !DILocation(line: 866, column: 56, scope: !4717)
!4784 = !DILocation(line: 866, column: 9, scope: !4717)
!4785 = !DILocation(line: 866, column: 2, scope: !4717)
!4786 = !DILocation(line: 867, column: 1, scope: !4717)
!4787 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4788, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4790)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!125, !4720, !4724, !124, !140, !124}
!4790 = !{!4791, !4792, !4793, !4794, !4795, !4796}
!4791 = !DILocalVariable(name: "out", arg: 1, scope: !4787, file: !395, line: 179, type: !4720)
!4792 = !DILocalVariable(name: "formatter", arg: 2, scope: !4787, file: !395, line: 180, type: !4724)
!4793 = !DILocalVariable(name: "ctx", arg: 3, scope: !4787, file: !395, line: 181, type: !124)
!4794 = !DILocalVariable(name: "fmt", arg: 4, scope: !4787, file: !395, line: 182, type: !140)
!4795 = !DILocalVariable(name: "buf", arg: 5, scope: !4787, file: !395, line: 182, type: !124)
!4796 = !DILocalVariable(name: "u", scope: !4787, file: !395, line: 187, type: !4797)
!4797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4787, file: !395, line: 184, size: 32, elements: !4798)
!4798 = !{!4799, !4800}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4797, file: !395, line: 185, baseType: !4359, size: 32)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4797, file: !395, line: 186, baseType: !124, size: 32)
!4801 = !DILocation(line: 0, scope: !4787)
!4802 = !DILocation(line: 191, column: 9, scope: !4787)
!4803 = !DILocation(line: 191, column: 2, scope: !4787)
!4804 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4805, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4807)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!153, !140, !125}
!4807 = !{!4808, !4809, !4810, !4811, !4812}
!4808 = !DILocalVariable(name: "fmt", arg: 1, scope: !4804, file: !395, line: 881, type: !140)
!4809 = !DILocalVariable(name: "n", arg: 2, scope: !4804, file: !395, line: 881, type: !125)
!4810 = !DILocalVariable(name: "c", scope: !4804, file: !395, line: 883, type: !142)
!4811 = !DILocalVariable(name: "mod", scope: !4804, file: !395, line: 884, type: !153)
!4812 = !DILocalVariable(name: "cnt", scope: !4804, file: !395, line: 885, type: !125)
!4813 = !DILocation(line: 0, scope: !4804)
!4814 = !DILocation(line: 887, column: 14, scope: !4804)
!4815 = !DILocation(line: 887, column: 22, scope: !4804)
!4816 = !DILocation(line: 887, column: 2, scope: !4804)
!4817 = !DILocation(line: 887, column: 18, scope: !4804)
!4818 = !DILocation(line: 888, column: 7, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4804, file: !395, line: 887, column: 31)
!4820 = !DILocation(line: 889, column: 12, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !395, line: 889, column: 8)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !395, line: 888, column: 12)
!4823 = distinct !DILexicalBlock(scope: !4819, file: !395, line: 888, column: 7)
!4824 = !DILocation(line: 889, column: 8, scope: !4822)
!4825 = !DILocation(line: 890, column: 11, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !395, line: 890, column: 9)
!4827 = distinct !DILexicalBlock(scope: !4821, file: !395, line: 889, column: 18)
!4828 = !DILocation(line: 890, column: 9, scope: !4827)
!4829 = !DILocation(line: 892, column: 16, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4826, file: !395, line: 892, column: 16)
!4831 = !DILocation(line: 892, column: 16, scope: !4826)
!4832 = !DILocation(line: 895, column: 15, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4821, file: !395, line: 895, column: 15)
!4834 = !DILocation(line: 895, column: 15, scope: !4821)
!4835 = !DILocation(line: 900, column: 9, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4819, file: !395, line: 900, column: 7)
!4837 = !DILocation(line: 900, column: 7, scope: !4819)
!4838 = distinct !{!4838, !4816, !4839}
!4839 = !DILocation(line: 903, column: 2, scope: !4804)
!4840 = !DILocation(line: 906, column: 1, scope: !4804)
!4841 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4842, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4844)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!153, !142}
!4844 = !{!4845}
!4845 = !DILocalVariable(name: "c", arg: 1, scope: !4841, file: !395, line: 873, type: !142)
!4846 = !DILocation(line: 0, scope: !4841)
!4847 = !DILocation(line: 875, column: 19, scope: !4841)
!4848 = !DILocation(line: 875, column: 2, scope: !4841)
!4849 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4850, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4856)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!125, !124, !272, !4852, !124, !208, !3129, !272}
!4852 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4391, line: 308, baseType: !4853)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 32)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{!125, !13, !272, !124}
!4856 = !{!4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4874, !4875, !4876, !4877, !4878, !4884, !4887, !4888, !4889, !4891, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4907, !4910, !4911, !4912, !4913, !4914, !4915, !4917, !4920, !4921, !4922}
!4857 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4849, file: !395, line: 908, type: !124)
!4858 = !DILocalVariable(name: "in_len", arg: 2, scope: !4849, file: !395, line: 909, type: !272)
!4859 = !DILocalVariable(name: "cb", arg: 3, scope: !4849, file: !395, line: 910, type: !4852)
!4860 = !DILocalVariable(name: "ctx", arg: 4, scope: !4849, file: !395, line: 911, type: !124)
!4861 = !DILocalVariable(name: "flags", arg: 5, scope: !4849, file: !395, line: 912, type: !208)
!4862 = !DILocalVariable(name: "strl", arg: 6, scope: !4849, file: !395, line: 913, type: !3129)
!4863 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4849, file: !395, line: 914, type: !272)
!4864 = !DILocalVariable(name: "buf", scope: !4849, file: !395, line: 918, type: !184)
!4865 = !DILocalVariable(name: "buf32", scope: !4849, file: !395, line: 919, type: !1055)
!4866 = !DILocalVariable(name: "args_size", scope: !4849, file: !395, line: 920, type: !32)
!4867 = !DILocalVariable(name: "ros_nbr", scope: !4849, file: !395, line: 920, type: !32)
!4868 = !DILocalVariable(name: "rws_nbr", scope: !4849, file: !395, line: 920, type: !32)
!4869 = !DILocalVariable(name: "fmt_present", scope: !4849, file: !395, line: 921, type: !153)
!4870 = !DILocalVariable(name: "rw_cpy", scope: !4849, file: !395, line: 922, type: !153)
!4871 = !DILocalVariable(name: "ro_cpy", scope: !4849, file: !395, line: 923, type: !153)
!4872 = !DILocalVariable(name: "in_desc", scope: !4849, file: !395, line: 924, type: !4873)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 32)
!4874 = !DILocalVariable(name: "out_len", scope: !4849, file: !395, line: 960, type: !125)
!4875 = !DILocalVariable(name: "fmt", scope: !4849, file: !395, line: 965, type: !140)
!4876 = !DILocalVariable(name: "str_pos", scope: !4849, file: !395, line: 966, type: !184)
!4877 = !DILocalVariable(name: "strl_cnt", scope: !4849, file: !395, line: 967, type: !272)
!4878 = !DILocalVariable(name: "i", scope: !4879, file: !395, line: 973, type: !125)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !395, line: 973, column: 4)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !395, line: 972, column: 15)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !395, line: 972, column: 7)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !395, line: 970, column: 18)
!4883 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 970, column: 6)
!4884 = !DILocalVariable(name: "str", scope: !4885, file: !395, line: 974, type: !140)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !395, line: 973, column: 38)
!4886 = distinct !DILexicalBlock(scope: !4879, file: !395, line: 973, column: 4)
!4887 = !DILocalVariable(name: "len", scope: !4885, file: !395, line: 975, type: !125)
!4888 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4882, file: !395, line: 990, type: !153)
!4889 = !DILocalVariable(name: "i", scope: !4890, file: !395, line: 995, type: !125)
!4890 = distinct !DILexicalBlock(scope: !4882, file: !395, line: 995, column: 3)
!4891 = !DILocalVariable(name: "arg_idx", scope: !4892, file: !395, line: 996, type: !150)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !395, line: 995, column: 37)
!4893 = distinct !DILexicalBlock(scope: !4890, file: !395, line: 995, column: 3)
!4894 = !DILocalVariable(name: "arg_pos", scope: !4892, file: !395, line: 997, type: !150)
!4895 = !DILocalVariable(name: "str", scope: !4892, file: !395, line: 998, type: !140)
!4896 = !DILocalVariable(name: "is_ro", scope: !4892, file: !395, line: 999, type: !153)
!4897 = !DILocalVariable(name: "len", scope: !4892, file: !395, line: 1000, type: !125)
!4898 = !DILocalVariable(name: "out_desc", scope: !4849, file: !395, line: 1038, type: !4394)
!4899 = !DILocalVariable(name: "cpy_str_pos", scope: !4849, file: !395, line: 1040, type: !311)
!4900 = !DILocalVariable(name: "keep_str_pos", scope: !4849, file: !395, line: 1042, type: !311)
!4901 = !DILocalVariable(name: "scpy_cnt", scope: !4849, file: !395, line: 1043, type: !150)
!4902 = !DILocalVariable(name: "keep_cnt", scope: !4849, file: !395, line: 1044, type: !150)
!4903 = !DILocalVariable(name: "dst", scope: !4849, file: !395, line: 1045, type: !184)
!4904 = !DILocalVariable(name: "rv", scope: !4849, file: !395, line: 1046, type: !125)
!4905 = !DILocalVariable(name: "i", scope: !4906, file: !395, line: 1074, type: !125)
!4906 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1074, column: 2)
!4907 = !DILocalVariable(name: "arg_idx", scope: !4908, file: !395, line: 1075, type: !150)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !395, line: 1074, column: 36)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !395, line: 1074, column: 2)
!4910 = !DILocalVariable(name: "arg_pos", scope: !4908, file: !395, line: 1076, type: !150)
!4911 = !DILocalVariable(name: "str", scope: !4908, file: !395, line: 1077, type: !140)
!4912 = !DILocalVariable(name: "is_ro", scope: !4908, file: !395, line: 1078, type: !153)
!4913 = !DILocalVariable(name: "in_desc_backup", scope: !4849, file: !395, line: 1114, type: !4394)
!4914 = !DILocalVariable(name: "strs_len", scope: !4849, file: !395, line: 1134, type: !272)
!4915 = !DILocalVariable(name: "i", scope: !4916, file: !395, line: 1143, type: !125)
!4916 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1143, column: 2)
!4917 = !DILocalVariable(name: "loc", scope: !4918, file: !395, line: 1144, type: !150)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !395, line: 1143, column: 37)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !395, line: 1143, column: 2)
!4920 = !DILocalVariable(name: "str", scope: !4918, file: !395, line: 1145, type: !140)
!4921 = !DILocalVariable(name: "str_len", scope: !4918, file: !395, line: 1146, type: !227)
!4922 = !DILabel(scope: !4923, name: "calculate_string_length", file: !395, line: 1021)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !395, line: 1020, column: 56)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !395, line: 1020, column: 15)
!4925 = distinct !DILexicalBlock(scope: !4892, file: !395, line: 1014, column: 8)
!4926 = !DILocation(line: 0, scope: !4849)
!4927 = !DILocation(line: 919, column: 20, scope: !4849)
!4928 = !DILocation(line: 921, column: 27, scope: !4849)
!4929 = !DILocation(line: 921, column: 21, scope: !4849)
!4930 = !DILocation(line: 926, column: 18, scope: !4849)
!4931 = !DILocation(line: 926, column: 11, scope: !4849)
!4932 = !DILocation(line: 926, column: 34, scope: !4849)
!4933 = !DILocation(line: 931, column: 21, scope: !4849)
!4934 = !DILocation(line: 931, column: 12, scope: !4849)
!4935 = !DILocation(line: 932, column: 11, scope: !4849)
!4936 = !DILocation(line: 932, column: 19, scope: !4849)
!4937 = !DILocation(line: 938, column: 21, scope: !4849)
!4938 = !DILocation(line: 938, column: 12, scope: !4849)
!4939 = !DILocation(line: 939, column: 19, scope: !4849)
!4940 = !DILocation(line: 939, column: 23, scope: !4849)
!4941 = !DILocation(line: 946, column: 14, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 946, column: 6)
!4943 = !DILocation(line: 947, column: 7, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !395, line: 947, column: 7)
!4945 = distinct !DILexicalBlock(scope: !4942, file: !395, line: 946, column: 26)
!4946 = !DILocation(line: 947, column: 7, scope: !4945)
!4947 = !DILocation(line: 948, column: 4, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !395, line: 947, column: 11)
!4949 = !DILocation(line: 949, column: 3, scope: !4948)
!4950 = !DILocation(line: 958, column: 23, scope: !4849)
!4951 = !DILocation(line: 958, column: 14, scope: !4849)
!4952 = !DILocation(line: 958, column: 27, scope: !4849)
!4953 = !DILocation(line: 965, column: 41, scope: !4849)
!4954 = !DILocation(line: 965, column: 20, scope: !4849)
!4955 = !DILocation(line: 966, column: 22, scope: !4849)
!4956 = !DILocation(line: 970, column: 9, scope: !4883)
!4957 = !DILocation(line: 970, column: 6, scope: !4849)
!4958 = !DILocation(line: 972, column: 7, scope: !4882)
!4959 = !DILocation(line: 0, scope: !4879)
!4960 = !DILocation(line: 973, column: 4, scope: !4879)
!4961 = !DILocation(line: 974, column: 46, scope: !4885)
!4962 = !DILocation(line: 974, column: 40, scope: !4885)
!4963 = !DILocation(line: 974, column: 23, scope: !4885)
!4964 = !DILocation(line: 0, scope: !4885)
!4965 = !DILocation(line: 975, column: 15, scope: !4885)
!4966 = !DILocation(line: 978, column: 14, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4885, file: !395, line: 978, column: 9)
!4968 = !DILocation(line: 979, column: 25, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4967, file: !395, line: 978, column: 38)
!4970 = !DILocation(line: 979, column: 19, scope: !4969)
!4971 = !DILocation(line: 979, column: 6, scope: !4969)
!4972 = !DILocation(line: 979, column: 23, scope: !4969)
!4973 = !DILocation(line: 980, column: 5, scope: !4969)
!4974 = !DILocation(line: 981, column: 13, scope: !4885)
!4975 = !DILocation(line: 982, column: 12, scope: !4885)
!4976 = !DILocation(line: 973, column: 34, scope: !4886)
!4977 = !DILocation(line: 973, column: 22, scope: !4886)
!4978 = distinct !{!4978, !4960, !4979}
!4979 = !DILocation(line: 983, column: 4, scope: !4879)
!4980 = !DILocation(line: 985, column: 16, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4982, file: !395, line: 985, column: 8)
!4982 = distinct !DILexicalBlock(scope: !4881, file: !395, line: 984, column: 10)
!4983 = !DILocation(line: 967, column: 9, scope: !4849)
!4984 = !DILocation(line: 971, column: 11, scope: !4882)
!4985 = !DILocation(line: 0, scope: !4882)
!4986 = !DILocation(line: 0, scope: !4890)
!4987 = !DILocation(line: 995, column: 21, scope: !4893)
!4988 = !DILocation(line: 995, column: 3, scope: !4890)
!4989 = !DILocation(line: 990, column: 34, scope: !4882)
!4990 = !DILocation(line: 990, column: 26, scope: !4882)
!4991 = !DILocation(line: 996, column: 30, scope: !4892)
!4992 = !DILocation(line: 0, scope: !4892)
!4993 = !DILocation(line: 997, column: 30, scope: !4892)
!4994 = !DILocation(line: 997, column: 22, scope: !4892)
!4995 = !DILocation(line: 998, column: 39, scope: !4892)
!4996 = !DILocation(line: 998, column: 22, scope: !4892)
!4997 = !DILocation(line: 999, column: 17, scope: !4892)
!4998 = !DILocation(line: 1002, column: 20, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4892, file: !395, line: 1002, column: 8)
!5000 = !DILocation(line: 996, column: 22, scope: !4892)
!5001 = !DILocation(line: 1002, column: 35, scope: !4999)
!5002 = !DILocation(line: 1002, column: 23, scope: !4999)
!5003 = !DILocation(line: 1002, column: 8, scope: !4892)
!5004 = !DILocation(line: 1003, column: 5, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !395, line: 1003, column: 5)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !395, line: 1003, column: 5)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !395, line: 1003, column: 5)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !395, line: 1003, column: 5)
!5009 = distinct !DILexicalBlock(scope: !4999, file: !395, line: 1002, column: 45)
!5010 = !DILocation(line: 1010, column: 13, scope: !5009)
!5011 = !DILocation(line: 1011, column: 5, scope: !5009)
!5012 = !DILocation(line: 1014, column: 8, scope: !4892)
!5013 = !DILocation(line: 1015, column: 9, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4925, file: !395, line: 1014, column: 15)
!5015 = !DILocation(line: 1018, column: 14, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !395, line: 1017, column: 12)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !395, line: 1015, column: 9)
!5018 = !DILocation(line: 1020, column: 4, scope: !5014)
!5019 = !DILocation(line: 1020, column: 15, scope: !4925)
!5020 = !DILocation(line: 1021, column: 1, scope: !4923)
!5021 = !DILocation(line: 1022, column: 11, scope: !4923)
!5022 = !DILocation(line: 1025, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4923, file: !395, line: 1025, column: 9)
!5024 = !DILocation(line: 1026, column: 25, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5023, file: !395, line: 1025, column: 38)
!5026 = !DILocation(line: 1026, column: 19, scope: !5025)
!5027 = !DILocation(line: 1026, column: 6, scope: !5025)
!5028 = !DILocation(line: 1026, column: 23, scope: !5025)
!5029 = !DILocation(line: 1027, column: 5, scope: !5025)
!5030 = !DILocation(line: 1031, column: 21, scope: !4923)
!5031 = !DILocation(line: 1031, column: 13, scope: !4923)
!5032 = !DILocation(line: 1032, column: 4, scope: !4923)
!5033 = !DILocation(line: 995, column: 33, scope: !4893)
!5034 = distinct !{!5034, !4988, !5035}
!5035 = !DILocation(line: 1033, column: 3, scope: !4890)
!5036 = !DILocation(line: 1040, column: 10, scope: !4849)
!5037 = !DILocation(line: 1042, column: 10, scope: !4849)
!5038 = !DILocation(line: 1052, column: 6, scope: !4849)
!5039 = !DILocation(line: 1055, column: 9, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !395, line: 1052, column: 14)
!5041 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1052, column: 6)
!5042 = !DILocation(line: 1056, column: 2, scope: !5040)
!5043 = !DILocation(line: 1056, column: 21, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5041, file: !395, line: 1056, column: 13)
!5045 = !DILocation(line: 1066, column: 3, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !395, line: 1065, column: 11)
!5047 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1065, column: 6)
!5048 = !DILocation(line: 1067, column: 2, scope: !5046)
!5049 = !DILocation(line: 1068, column: 10, scope: !4849)
!5050 = !DILocation(line: 0, scope: !4906)
!5051 = !DILocation(line: 1074, column: 20, scope: !4909)
!5052 = !DILocation(line: 1074, column: 2, scope: !4906)
!5053 = !DILocation(line: 1110, column: 24, scope: !4849)
!5054 = !DILocation(line: 1053, column: 12, scope: !5040)
!5055 = !DILocation(line: 1054, column: 12, scope: !5040)
!5056 = !DILocation(line: 1108, column: 30, scope: !4849)
!5057 = !DILocation(line: 1108, column: 40, scope: !4849)
!5058 = !DILocation(line: 1108, column: 38, scope: !4849)
!5059 = !DILocation(line: 1109, column: 31, scope: !4849)
!5060 = !DILocation(line: 1109, column: 24, scope: !4849)
!5061 = !DILocation(line: 1110, column: 31, scope: !4849)
!5062 = !DILocation(line: 1114, column: 31, scope: !4849)
!5063 = !DILocation(line: 1114, column: 48, scope: !4849)
!5064 = !DILocation(line: 1115, column: 13, scope: !4849)
!5065 = !DILocation(line: 1118, column: 7, scope: !4849)
!5066 = !DILocation(line: 1119, column: 9, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1119, column: 6)
!5068 = !DILocation(line: 1119, column: 6, scope: !4849)
!5069 = !DILocation(line: 1075, column: 29, scope: !4908)
!5070 = !DILocation(line: 1075, column: 21, scope: !4908)
!5071 = !DILocation(line: 0, scope: !4908)
!5072 = !DILocation(line: 1076, column: 29, scope: !4908)
!5073 = !DILocation(line: 1076, column: 21, scope: !4908)
!5074 = !DILocation(line: 1077, column: 38, scope: !4908)
!5075 = !DILocation(line: 1077, column: 21, scope: !4908)
!5076 = !DILocation(line: 1078, column: 16, scope: !4908)
!5077 = !DILocation(line: 1080, column: 19, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4908, file: !395, line: 1080, column: 7)
!5079 = !DILocation(line: 1080, column: 34, scope: !5078)
!5080 = !DILocation(line: 1080, column: 22, scope: !5078)
!5081 = !DILocation(line: 1080, column: 7, scope: !4908)
!5082 = !DILocation(line: 1084, column: 7, scope: !4908)
!5083 = !DILocation(line: 1085, column: 8, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !395, line: 1084, column: 14)
!5085 = distinct !DILexicalBlock(scope: !4908, file: !395, line: 1084, column: 7)
!5086 = !DILocation(line: 1087, column: 25, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !395, line: 1085, column: 49)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !395, line: 1085, column: 8)
!5089 = !DILocation(line: 1088, column: 4, scope: !5087)
!5090 = !DILocation(line: 1088, column: 15, scope: !5088)
!5091 = !DILocation(line: 1090, column: 26, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !395, line: 1088, column: 61)
!5093 = distinct !DILexicalBlock(scope: !5088, file: !395, line: 1088, column: 15)
!5094 = !DILocation(line: 1091, column: 4, scope: !5092)
!5095 = !DILocation(line: 1095, column: 8, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5085, file: !395, line: 1094, column: 10)
!5097 = !DILocation(line: 1097, column: 25, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !395, line: 1095, column: 49)
!5099 = distinct !DILexicalBlock(scope: !5096, file: !395, line: 1095, column: 8)
!5100 = !DILocation(line: 1098, column: 4, scope: !5098)
!5101 = !DILocation(line: 1100, column: 26, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5099, file: !395, line: 1098, column: 11)
!5103 = !DILocation(line: 1100, column: 5, scope: !5102)
!5104 = !DILocation(line: 1100, column: 30, scope: !5102)
!5105 = !DILocation(line: 1101, column: 26, scope: !5102)
!5106 = !DILocation(line: 0, scope: !5085)
!5107 = !DILocation(line: 1074, column: 32, scope: !4909)
!5108 = distinct !{!5108, !5052, !5109}
!5109 = !DILocation(line: 1104, column: 2, scope: !4906)
!5110 = !DILocation(line: 1124, column: 13, scope: !4849)
!5111 = !DILocation(line: 1127, column: 10, scope: !4849)
!5112 = !DILocation(line: 1127, column: 7, scope: !4849)
!5113 = !DILocation(line: 1128, column: 9, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1128, column: 6)
!5115 = !DILocation(line: 1128, column: 6, scope: !4849)
!5116 = !DILocation(line: 1134, column: 27, scope: !4849)
!5117 = !DILocation(line: 1136, column: 7, scope: !4849)
!5118 = !DILocation(line: 1137, column: 9, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !4849, file: !395, line: 1137, column: 6)
!5120 = !DILocation(line: 1137, column: 6, scope: !4849)
!5121 = !DILocation(line: 1131, column: 10, scope: !4849)
!5122 = !DILocation(line: 1140, column: 10, scope: !4849)
!5123 = !DILocation(line: 0, scope: !4916)
!5124 = !DILocation(line: 1143, column: 20, scope: !4919)
!5125 = !DILocation(line: 1143, column: 2, scope: !4916)
!5126 = !DILocation(line: 1144, column: 3, scope: !4918)
!5127 = !DILocation(line: 1144, column: 17, scope: !4918)
!5128 = !DILocation(line: 0, scope: !4918)
!5129 = !DILocation(line: 1144, column: 11, scope: !4918)
!5130 = !DILocation(line: 1145, column: 38, scope: !4918)
!5131 = !DILocation(line: 1145, column: 21, scope: !4918)
!5132 = !DILocation(line: 1146, column: 22, scope: !4918)
!5133 = !DILocation(line: 1146, column: 29, scope: !4918)
!5134 = !DILocation(line: 1148, column: 8, scope: !4918)
!5135 = !DILocation(line: 1149, column: 10, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !4918, file: !395, line: 1149, column: 7)
!5137 = !DILocation(line: 1149, column: 7, scope: !4918)
!5138 = !DILocation(line: 1154, column: 8, scope: !4918)
!5139 = !DILocation(line: 1155, column: 10, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !4918, file: !395, line: 1155, column: 7)
!5141 = !DILocation(line: 1155, column: 7, scope: !4918)
!5142 = !DILocation(line: 1159, column: 2, scope: !4919)
!5143 = !DILocation(line: 1152, column: 11, scope: !4918)
!5144 = !DILocation(line: 1158, column: 11, scope: !4918)
!5145 = !DILocation(line: 1143, column: 33, scope: !4919)
!5146 = distinct !{!5146, !5125, !5147}
!5147 = !DILocation(line: 1159, column: 2, scope: !4916)
!5148 = !DILocation(line: 1162, column: 8, scope: !4849)
!5149 = !DILocation(line: 1164, column: 2, scope: !4849)
!5150 = !DILocation(line: 1165, column: 1, scope: !4849)
!5151 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !5152, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!272, !124}
!5154 = !{!5155, !5156, !5157, !5158, !5159, !5160, !5161}
!5155 = !DILocalVariable(name: "packaged", arg: 1, scope: !5151, file: !395, line: 196, type: !124)
!5156 = !DILocalVariable(name: "buf", scope: !5151, file: !395, line: 200, type: !184)
!5157 = !DILocalVariable(name: "start", scope: !5151, file: !395, line: 201, type: !184)
!5158 = !DILocalVariable(name: "args_size", scope: !5151, file: !395, line: 202, type: !32)
!5159 = !DILocalVariable(name: "s_nbr", scope: !5151, file: !395, line: 202, type: !32)
!5160 = !DILocalVariable(name: "ros_nbr", scope: !5151, file: !395, line: 202, type: !32)
!5161 = !DILocalVariable(name: "i", scope: !5162, file: !395, line: 215, type: !125)
!5162 = distinct !DILexicalBlock(scope: !5151, file: !395, line: 215, column: 2)
!5163 = !DILocation(line: 0, scope: !5151)
!5164 = !DILocation(line: 204, column: 14, scope: !5151)
!5165 = !DILocation(line: 204, column: 21, scope: !5151)
!5166 = !DILocation(line: 205, column: 14, scope: !5151)
!5167 = !DILocation(line: 206, column: 14, scope: !5151)
!5168 = !DILocation(line: 209, column: 6, scope: !5151)
!5169 = !DILocation(line: 212, column: 6, scope: !5151)
!5170 = !DILocation(line: 0, scope: !5162)
!5171 = !DILocation(line: 215, column: 20, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5162, file: !395, line: 215, column: 2)
!5173 = !DILocation(line: 215, column: 2, scope: !5162)
!5174 = !DILocation(line: 220, column: 33, scope: !5151)
!5175 = !DILocation(line: 220, column: 2, scope: !5151)
!5176 = !DILocation(line: 216, column: 6, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5172, file: !395, line: 215, column: 34)
!5178 = !DILocation(line: 217, column: 10, scope: !5177)
!5179 = !DILocation(line: 217, column: 36, scope: !5177)
!5180 = !DILocation(line: 217, column: 7, scope: !5177)
!5181 = !DILocation(line: 215, column: 30, scope: !5172)
!5182 = distinct !{!5182, !5173, !5183}
!5183 = !DILocation(line: 218, column: 2, scope: !5162)
!5184 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5185, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5187)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!125, !4852, !124, !140, !227}
!5187 = !{!5188, !5189, !5190, !5191}
!5188 = !DILocalVariable(name: "cb", arg: 1, scope: !5184, file: !395, line: 223, type: !4852)
!5189 = !DILocalVariable(name: "ctx", arg: 2, scope: !5184, file: !395, line: 223, type: !124)
!5190 = !DILocalVariable(name: "str", arg: 3, scope: !5184, file: !395, line: 223, type: !140)
!5191 = !DILocalVariable(name: "strl", arg: 4, scope: !5184, file: !395, line: 223, type: !227)
!5192 = !DILocation(line: 0, scope: !5184)
!5193 = !DILocation(line: 225, column: 9, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5184, file: !395, line: 225, column: 6)
!5195 = !DILocation(line: 225, column: 6, scope: !5184)
!5196 = !DILocation(line: 226, column: 14, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5194, file: !395, line: 225, column: 18)
!5198 = !DILocation(line: 226, column: 12, scope: !5197)
!5199 = !DILocation(line: 226, column: 3, scope: !5197)
!5200 = !DILocation(line: 229, column: 14, scope: !5184)
!5201 = !DILocation(line: 229, column: 9, scope: !5184)
!5202 = !DILocation(line: 229, column: 27, scope: !5184)
!5203 = !DILocation(line: 229, column: 39, scope: !5184)
!5204 = !DILocation(line: 230, column: 17, scope: !5184)
!5205 = !DILocation(line: 230, column: 9, scope: !5184)
!5206 = !DILocation(line: 230, column: 2, scope: !5184)
!5207 = !DILocation(line: 231, column: 1, scope: !5184)
!5208 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5209)
!5209 = !{!5210}
!5210 = !DILocalVariable(name: "c", arg: 1, scope: !5208, file: !408, line: 45, type: !125)
!5211 = !DILocation(line: 0, scope: !5208)
!5212 = !DILocation(line: 50, column: 2, scope: !5208)
!5213 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5214, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5216)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{null, !409}
!5216 = !{!5217}
!5217 = !DILocalVariable(name: "fn", arg: 1, scope: !5213, file: !408, line: 63, type: !409)
!5218 = !DILocation(line: 0, scope: !5213)
!5219 = !DILocation(line: 65, column: 12, scope: !5213)
!5220 = !DILocation(line: 66, column: 1, scope: !5213)
!5221 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5222, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !639)
!5222 = !DISubroutineType(types: !5223)
!5223 = !{!124}
!5224 = !DILocation(line: 78, column: 9, scope: !5221)
!5225 = !DILocation(line: 78, column: 2, scope: !5221)
!5226 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5227, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5235)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{null, !140, !5229}
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4360, line: 99, baseType: !5230)
!5230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4360, line: 40, baseType: !5231)
!5231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5232)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5233)
!5233 = !{!5234}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5232, file: !408, line: 79, baseType: !124, size: 32)
!5235 = !{!5236, !5237, !5238}
!5236 = !DILocalVariable(name: "fmt", arg: 1, scope: !5226, file: !408, line: 113, type: !140)
!5237 = !DILocalVariable(name: "ap", arg: 2, scope: !5226, file: !408, line: 113, type: !5229)
!5238 = !DILocalVariable(name: "ctx", scope: !5239, file: !408, line: 121, type: !5241)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !408, line: 120, column: 27)
!5240 = distinct !DILexicalBlock(scope: !5226, file: !408, line: 120, column: 6)
!5241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5242)
!5242 = !{!5243, !5244}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5241, file: !408, line: 85, baseType: !32, size: 32)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5241, file: !408, line: 86, baseType: !5245, offset: 32)
!5245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5246)
!5246 = !{!5247}
!5247 = !DISubrange(count: 0)
!5248 = !DILocation(line: 0, scope: !5226)
!5249 = !DILocation(line: 148, column: 3, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5240, file: !408, line: 138, column: 9)
!5251 = !DILocation(line: 155, column: 1, scope: !5226)
!5252 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5253, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5255)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{!125, !125, !124}
!5255 = !{!5256, !5257}
!5256 = !DILocalVariable(name: "c", arg: 1, scope: !5252, file: !408, line: 107, type: !125)
!5257 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5252, file: !408, line: 107, type: !124)
!5258 = !DILocation(line: 0, scope: !5252)
!5259 = !DILocation(line: 110, column: 9, scope: !5252)
!5260 = !DILocation(line: 110, column: 2, scope: !5252)
!5261 = distinct !DISubprogram(name: "cbvprintf", scope: !4391, file: !4391, line: 739, type: !5262, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5264)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!125, !4720, !124, !140, !5229}
!5264 = !{!5265, !5266, !5267, !5268}
!5265 = !DILocalVariable(name: "out", arg: 1, scope: !5261, file: !4391, line: 739, type: !4720)
!5266 = !DILocalVariable(name: "ctx", arg: 2, scope: !5261, file: !4391, line: 739, type: !124)
!5267 = !DILocalVariable(name: "format", arg: 3, scope: !5261, file: !4391, line: 739, type: !140)
!5268 = !DILocalVariable(name: "ap", arg: 4, scope: !5261, file: !4391, line: 739, type: !5229)
!5269 = !DILocation(line: 0, scope: !5261)
!5270 = !DILocation(line: 741, column: 9, scope: !5261)
!5271 = !DILocation(line: 741, column: 2, scope: !5261)
!5272 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5273, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5275)
!5273 = !DISubroutineType(types: !5274)
!5274 = !{null, !393, !272}
!5275 = !{!5276, !5277, !5278}
!5276 = !DILocalVariable(name: "c", arg: 1, scope: !5272, file: !408, line: 157, type: !393)
!5277 = !DILocalVariable(name: "n", arg: 2, scope: !5272, file: !408, line: 157, type: !272)
!5278 = !DILocalVariable(name: "i", scope: !5272, file: !408, line: 159, type: !272)
!5279 = !DILocation(line: 0, scope: !5272)
!5280 = !DILocation(line: 164, column: 16, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !408, line: 164, column: 2)
!5282 = distinct !DILexicalBlock(scope: !5272, file: !408, line: 164, column: 2)
!5283 = !DILocation(line: 164, column: 2, scope: !5282)
!5284 = !DILocation(line: 165, column: 3, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5281, file: !408, line: 164, column: 26)
!5286 = !DILocation(line: 165, column: 13, scope: !5285)
!5287 = !DILocation(line: 164, column: 22, scope: !5281)
!5288 = distinct !{!5288, !5283, !5289}
!5289 = !DILocation(line: 166, column: 2, scope: !5282)
!5290 = !DILocation(line: 171, column: 1, scope: !5272)
!5291 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5292, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5294)
!5292 = !DISubroutineType(types: !5293)
!5293 = !{null, !140, null}
!5294 = !{!5295, !5296}
!5295 = !DILocalVariable(name: "fmt", arg: 1, scope: !5291, file: !408, line: 203, type: !140)
!5296 = !DILocalVariable(name: "ap", scope: !5291, file: !408, line: 205, type: !5229)
!5297 = !DILocation(line: 0, scope: !5291)
!5298 = !DILocation(line: 205, column: 2, scope: !5291)
!5299 = !DILocation(line: 205, column: 10, scope: !5291)
!5300 = !DILocation(line: 207, column: 2, scope: !5291)
!5301 = !DILocation(line: 209, column: 2, scope: !5291)
!5302 = !DILocation(line: 211, column: 2, scope: !5291)
!5303 = !DILocation(line: 212, column: 1, scope: !5291)
!5304 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5305, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5307)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!125, !393, !272, !140, null}
!5307 = !{!5308, !5309, !5310, !5311, !5312}
!5308 = !DILocalVariable(name: "str", arg: 1, scope: !5304, file: !408, line: 239, type: !393)
!5309 = !DILocalVariable(name: "size", arg: 2, scope: !5304, file: !408, line: 239, type: !272)
!5310 = !DILocalVariable(name: "fmt", arg: 3, scope: !5304, file: !408, line: 239, type: !140)
!5311 = !DILocalVariable(name: "ap", scope: !5304, file: !408, line: 241, type: !5229)
!5312 = !DILocalVariable(name: "ret", scope: !5304, file: !408, line: 242, type: !125)
!5313 = !DILocation(line: 0, scope: !5304)
!5314 = !DILocation(line: 241, column: 2, scope: !5304)
!5315 = !DILocation(line: 241, column: 10, scope: !5304)
!5316 = !DILocation(line: 244, column: 2, scope: !5304)
!5317 = !DILocation(line: 245, column: 8, scope: !5304)
!5318 = !DILocation(line: 246, column: 2, scope: !5304)
!5319 = !DILocation(line: 249, column: 1, scope: !5304)
!5320 = !DILocation(line: 248, column: 2, scope: !5304)
!5321 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5322, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5324)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!125, !393, !272, !140, !5229}
!5324 = !{!5325, !5326, !5327, !5328, !5329}
!5325 = !DILocalVariable(name: "str", arg: 1, scope: !5321, file: !408, line: 251, type: !393)
!5326 = !DILocalVariable(name: "size", arg: 2, scope: !5321, file: !408, line: 251, type: !272)
!5327 = !DILocalVariable(name: "fmt", arg: 3, scope: !5321, file: !408, line: 251, type: !140)
!5328 = !DILocalVariable(name: "ap", arg: 4, scope: !5321, file: !408, line: 251, type: !5229)
!5329 = !DILocalVariable(name: "ctx", scope: !5321, file: !408, line: 253, type: !5330)
!5330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5331)
!5331 = !{!5332, !5333, !5334}
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5330, file: !408, line: 218, baseType: !393, size: 32)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5330, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5330, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5335 = !DILocation(line: 0, scope: !5321)
!5336 = !DILocation(line: 253, column: 2, scope: !5321)
!5337 = !DILocation(line: 253, column: 21, scope: !5321)
!5338 = !DILocation(line: 253, column: 27, scope: !5321)
!5339 = !DILocation(line: 255, column: 2, scope: !5321)
!5340 = !DILocation(line: 257, column: 10, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5321, file: !408, line: 257, column: 6)
!5342 = !DILocation(line: 257, column: 22, scope: !5341)
!5343 = !DILocation(line: 257, column: 16, scope: !5341)
!5344 = !DILocation(line: 257, column: 6, scope: !5321)
!5345 = !DILocation(line: 258, column: 3, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5341, file: !408, line: 257, column: 27)
!5347 = !DILocation(line: 258, column: 18, scope: !5346)
!5348 = !DILocation(line: 259, column: 2, scope: !5346)
!5349 = !DILocation(line: 262, column: 1, scope: !5321)
!5350 = !DILocation(line: 261, column: 2, scope: !5321)
!5351 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5352, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5355)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!125, !125, !5354}
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5330, size: 32)
!5355 = !{!5356, !5357}
!5356 = !DILocalVariable(name: "c", arg: 1, scope: !5351, file: !408, line: 223, type: !125)
!5357 = !DILocalVariable(name: "ctx", arg: 2, scope: !5351, file: !408, line: 223, type: !5354)
!5358 = !DILocation(line: 0, scope: !5351)
!5359 = !DILocation(line: 225, column: 11, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5351, file: !408, line: 225, column: 6)
!5361 = !DILocation(line: 225, column: 15, scope: !5360)
!5362 = !DILocation(line: 0, scope: !5360)
!5363 = !DILocation(line: 225, column: 23, scope: !5360)
!5364 = !DILocation(line: 225, column: 45, scope: !5360)
!5365 = !DILocation(line: 225, column: 37, scope: !5360)
!5366 = !DILocation(line: 225, column: 6, scope: !5351)
!5367 = !DILocation(line: 226, column: 8, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5360, file: !408, line: 225, column: 50)
!5369 = !DILocation(line: 226, column: 13, scope: !5368)
!5370 = !DILocation(line: 227, column: 3, scope: !5368)
!5371 = !DILocation(line: 230, column: 29, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5351, file: !408, line: 230, column: 6)
!5373 = !DILocation(line: 230, column: 17, scope: !5372)
!5374 = !DILocation(line: 230, column: 6, scope: !5351)
!5375 = !DILocation(line: 231, column: 22, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5372, file: !408, line: 230, column: 34)
!5377 = !DILocation(line: 231, column: 3, scope: !5376)
!5378 = !DILocation(line: 231, column: 26, scope: !5376)
!5379 = !DILocation(line: 232, column: 2, scope: !5376)
!5380 = !DILocation(line: 233, column: 28, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5372, file: !408, line: 232, column: 9)
!5382 = !DILocation(line: 233, column: 22, scope: !5381)
!5383 = !DILocation(line: 233, column: 3, scope: !5381)
!5384 = !DILocation(line: 233, column: 26, scope: !5381)
!5385 = !DILocation(line: 237, column: 1, scope: !5351)
!5386 = distinct !DISubprogram(name: "z_thread_entry", scope: !5387, file: !5387, line: 30, type: !5388, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !5395)
!5387 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5388 = !DISubroutineType(types: !5389)
!5389 = !{null, !5390, !124, !124, !124}
!5390 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5391, line: 46, baseType: !5392)
!5391 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 32)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !124, !124, !124}
!5395 = !{!5396, !5397, !5398, !5399}
!5396 = !DILocalVariable(name: "entry", arg: 1, scope: !5386, file: !5387, line: 30, type: !5390)
!5397 = !DILocalVariable(name: "p1", arg: 2, scope: !5386, file: !5387, line: 31, type: !124)
!5398 = !DILocalVariable(name: "p2", arg: 3, scope: !5386, file: !5387, line: 31, type: !124)
!5399 = !DILocalVariable(name: "p3", arg: 4, scope: !5386, file: !5387, line: 31, type: !124)
!5400 = !DILocation(line: 0, scope: !5386)
!5401 = !DILocation(line: 36, column: 2, scope: !5386)
!5402 = !DILocation(line: 38, column: 17, scope: !5386)
!5403 = !DILocation(line: 38, column: 2, scope: !5386)
!5404 = !DILocation(line: 45, column: 2, scope: !5386)
!5405 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !5406, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!5408}
!5408 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !5409)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 32)
!5410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !5411)
!5411 = !{!5412, !5470, !5482, !5483, !5484, !5485, !5491, !5504}
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5410, file: !531, line: 247, baseType: !5413, size: 384)
!5413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !5414)
!5414 = !{!5415, !5439, !5446, !5447, !5448, !5457, !5458, !5459}
!5415 = !DIDerivedType(tag: DW_TAG_member, scope: !5413, file: !531, line: 60, baseType: !5416, size: 64)
!5416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5413, file: !531, line: 60, size: 64, elements: !5417)
!5417 = !{!5418, !5433}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5416, file: !531, line: 61, baseType: !5419, size: 64)
!5419 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !5420)
!5420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !5421)
!5421 = !{!5422, !5428}
!5422 = !DIDerivedType(tag: DW_TAG_member, scope: !5420, file: !541, line: 38, baseType: !5423, size: 32)
!5423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5420, file: !541, line: 38, size: 32, elements: !5424)
!5424 = !{!5425, !5427}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5423, file: !541, line: 39, baseType: !5426, size: 32)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 32)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5423, file: !541, line: 40, baseType: !5426, size: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, scope: !5420, file: !541, line: 42, baseType: !5429, size: 32, offset: 32)
!5429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5420, file: !541, line: 42, size: 32, elements: !5430)
!5430 = !{!5431, !5432}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5429, file: !541, line: 43, baseType: !5426, size: 32)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5429, file: !541, line: 44, baseType: !5426, size: 32)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5416, file: !531, line: 62, baseType: !5434, size: 64)
!5434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !5435)
!5435 = !{!5436}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5434, file: !557, line: 50, baseType: !5437, size: 64)
!5437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5438, size: 64, elements: !562)
!5438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5413, file: !531, line: 68, baseType: !5440, size: 32, offset: 64)
!5440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5441, size: 32)
!5441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !5442)
!5442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !5443)
!5443 = !{!5444}
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5442, file: !567, line: 232, baseType: !5445, size: 64)
!5445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !5420)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5413, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5413, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!5448 = !DIDerivedType(tag: DW_TAG_member, scope: !5413, file: !531, line: 90, baseType: !5449, size: 16, offset: 112)
!5449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5413, file: !531, line: 90, size: 16, elements: !5450)
!5450 = !{!5451, !5456}
!5451 = !DIDerivedType(tag: DW_TAG_member, scope: !5449, file: !531, line: 91, baseType: !5452, size: 16)
!5452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5449, file: !531, line: 91, size: 16, elements: !5453)
!5453 = !{!5454, !5455}
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5452, file: !531, line: 96, baseType: !581, size: 8)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5452, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5449, file: !531, line: 100, baseType: !227, size: 16)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5413, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5413, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5413, file: !531, line: 131, baseType: !5460, size: 192, offset: 192)
!5460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !5461)
!5461 = !{!5462, !5463, !5469}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5460, file: !567, line: 245, baseType: !5419, size: 64)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5460, file: !567, line: 246, baseType: !5464, size: 32, offset: 64)
!5464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !5465)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 32)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{null, !5468}
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 32)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5460, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5410, file: !531, line: 250, baseType: !5471, size: 288, offset: 384)
!5471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !5472)
!5472 = !{!5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481}
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5471, file: !601, line: 26, baseType: !208, size: 32)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5471, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5471, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5471, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5471, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5471, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5471, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5471, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5471, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5410, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5410, file: !531, line: 256, baseType: !5441, size: 64, offset: 704)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5410, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5410, file: !531, line: 300, baseType: !5486, size: 96, offset: 800)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !5487)
!5487 = !{!5488, !5489, !5490}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5486, file: !531, line: 153, baseType: !22, size: 32)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5486, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5486, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5410, file: !531, line: 325, baseType: !5492, size: 32, offset: 896)
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 32)
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !5494)
!5494 = !{!5495, !5501, !5502}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5493, file: !624, line: 5074, baseType: !5496, size: 96)
!5496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !5497)
!5497 = !{!5498, !5499, !5500}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5496, file: !628, line: 57, baseType: !631, size: 32)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5496, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5496, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5493, file: !624, line: 5075, baseType: !5441, size: 64, offset: 96)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5493, file: !624, line: 5076, baseType: !5503, offset: 160)
!5503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5410, file: !531, line: 343, baseType: !5505, size: 64, offset: 928)
!5505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !5506)
!5506 = !{!5507, !5508}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5505, file: !601, line: 63, baseType: !208, size: 32)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5505, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!5509 = !DILocation(line: 535, column: 9, scope: !5405)
!5510 = !DILocation(line: 535, column: 2, scope: !5405)
!5511 = distinct !DISubprogram(name: "k_thread_abort", scope: !5512, file: !5512, line: 188, type: !5513, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !5515)
!5512 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!5513 = !DISubroutineType(types: !5514)
!5514 = !{null, !5408}
!5515 = !{!5516}
!5516 = !DILocalVariable(name: "thread", arg: 1, scope: !5511, file: !5512, line: 188, type: !5408)
!5517 = !DILocation(line: 0, scope: !5511)
!5518 = !DILocation(line: 197, column: 2, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5511, file: !5512, line: 197, column: 2)
!5520 = !{i64 2155436581}
!5521 = !DILocation(line: 198, column: 2, scope: !5511)
!5522 = !DILocation(line: 199, column: 1, scope: !5511)
!5523 = distinct !DISubprogram(name: "z_current_get", scope: !5512, file: !5512, line: 173, type: !5406, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!5524 = !DILocation(line: 180, column: 2, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5523, file: !5512, line: 180, column: 2)
!5526 = !{i64 2155436513}
!5527 = !DILocation(line: 181, column: 9, scope: !5523)
!5528 = !DILocation(line: 181, column: 2, scope: !5523)
!5529 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2831, file: !2831, line: 1338, type: !5530, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !5538)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!125, !4720, !124, !140, !5532, !208}
!5532 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4360, line: 99, baseType: !5533)
!5533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4360, line: 40, baseType: !5534)
!5534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2831, baseType: !5535)
!5535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5536)
!5536 = !{!5537}
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5535, file: !2831, baseType: !124, size: 32)
!5538 = !{!5539, !5540, !5541, !5542, !5543, !5544, !5548, !5549, !5550, !5552, !5557, !5600, !5603, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5615, !5616, !5617, !5621, !5624, !5626, !5629, !5630, !5631, !5636, !5642, !5645, !5649, !5655, !5659, !5662, !5664, !5667}
!5539 = !DILocalVariable(name: "out", arg: 1, scope: !5529, file: !2831, line: 1338, type: !4720)
!5540 = !DILocalVariable(name: "ctx", arg: 2, scope: !5529, file: !2831, line: 1338, type: !124)
!5541 = !DILocalVariable(name: "fp", arg: 3, scope: !5529, file: !2831, line: 1338, type: !140)
!5542 = !DILocalVariable(name: "ap", arg: 4, scope: !5529, file: !2831, line: 1339, type: !5532)
!5543 = !DILocalVariable(name: "flags", arg: 5, scope: !5529, file: !2831, line: 1339, type: !208)
!5544 = !DILocalVariable(name: "buf", scope: !5529, file: !2831, line: 1341, type: !5545)
!5545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5546)
!5546 = !{!5547}
!5547 = !DISubrange(count: 22)
!5548 = !DILocalVariable(name: "count", scope: !5529, file: !2831, line: 1342, type: !272)
!5549 = !DILocalVariable(name: "sint", scope: !5529, file: !2831, line: 1343, type: !2850)
!5550 = !DILocalVariable(name: "tagged_ap", scope: !5529, file: !2831, line: 1345, type: !5551)
!5551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5552 = !DILocalVariable(name: "rc", scope: !5553, file: !2831, line: 1377, type: !125)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !2831, line: 1377, column: 4)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !2831, line: 1376, column: 19)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1376, column: 7)
!5556 = distinct !DILexicalBlock(scope: !5529, file: !2831, line: 1375, column: 19)
!5557 = !DILocalVariable(name: "state", scope: !5556, file: !2831, line: 1395, type: !5558)
!5558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5529, file: !2831, line: 1392, size: 192, elements: !5559)
!5559 = !{!5560, !5568}
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5558, file: !2831, line: 1393, baseType: !5561, size: 64)
!5561 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2831, line: 166, size: 64, elements: !5562)
!5562 = !{!5563, !5564, !5565, !5566, !5567}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5561, file: !2831, line: 168, baseType: !2850, size: 64)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5561, file: !2831, line: 171, baseType: !2853, size: 64)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5561, file: !2831, line: 174, baseType: !385, size: 64)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5561, file: !2831, line: 177, baseType: !383, size: 64)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5561, file: !2831, line: 180, baseType: !124, size: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5558, file: !2831, line: 1394, baseType: !5569, size: 96, offset: 64)
!5569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2831, line: 189, size: 96, elements: !5570)
!5570 = !{!5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5595}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5569, file: !2831, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5569, file: !2831, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5569, file: !2831, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5569, file: !2831, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5569, file: !2831, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5569, file: !2831, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5569, file: !2831, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5569, file: !2831, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5569, file: !2831, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5569, file: !2831, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5569, file: !2831, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5569, file: !2831, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5569, file: !2831, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5569, file: !2831, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5569, file: !2831, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5569, file: !2831, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5569, file: !2831, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5569, file: !2831, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5569, file: !2831, line: 260, baseType: !151, size: 8, offset: 24)
!5590 = !DIDerivedType(tag: DW_TAG_member, scope: !5569, file: !2831, line: 262, baseType: !5591, size: 32, offset: 32)
!5591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5569, file: !2831, line: 262, size: 32, elements: !5592)
!5592 = !{!5593, !5594}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5591, file: !2831, line: 267, baseType: !125, size: 32)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5591, file: !2831, line: 289, baseType: !125, size: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, scope: !5569, file: !2831, line: 292, baseType: !5596, size: 32, offset: 64)
!5596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5569, file: !2831, line: 292, size: 32, elements: !5597)
!5597 = !{!5598, !5599}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5596, file: !2831, line: 297, baseType: !125, size: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5596, file: !2831, line: 306, baseType: !125, size: 32)
!5600 = !DILocalVariable(name: "conv", scope: !5556, file: !2831, line: 1400, type: !5601)
!5601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5602)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5569, size: 32)
!5603 = !DILocalVariable(name: "value", scope: !5556, file: !2831, line: 1401, type: !5604)
!5604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5605)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 32)
!5606 = !DILocalVariable(name: "sp", scope: !5556, file: !2831, line: 1402, type: !140)
!5607 = !DILocalVariable(name: "width", scope: !5556, file: !2831, line: 1403, type: !125)
!5608 = !DILocalVariable(name: "precision", scope: !5556, file: !2831, line: 1404, type: !125)
!5609 = !DILocalVariable(name: "bps", scope: !5556, file: !2831, line: 1405, type: !140)
!5610 = !DILocalVariable(name: "bpe", scope: !5556, file: !2831, line: 1406, type: !140)
!5611 = !DILocalVariable(name: "sign", scope: !5556, file: !2831, line: 1407, type: !142)
!5612 = !DILocalVariable(name: "arg", scope: !5613, file: !2831, line: 1432, type: !125)
!5613 = distinct !DILexicalBlock(scope: !5614, file: !2831, line: 1431, column: 24)
!5614 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1431, column: 7)
!5615 = !DILocalVariable(name: "specifier_cat", scope: !5556, file: !2831, line: 1468, type: !2830)
!5616 = !DILocalVariable(name: "length_mod", scope: !5556, file: !2831, line: 1470, type: !2838)
!5617 = !DILocalVariable(name: "rc", scope: !5618, file: !2831, line: 1575, type: !125)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !2831, line: 1575, column: 4)
!5619 = distinct !DILexicalBlock(scope: !5620, file: !2831, line: 1574, column: 43)
!5620 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1574, column: 7)
!5621 = !DILocalVariable(name: "rc", scope: !5622, file: !2831, line: 1584, type: !125)
!5622 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1584, column: 4)
!5623 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1582, column: 28)
!5624 = !DILocalVariable(name: "len", scope: !5625, file: !2831, line: 1589, type: !272)
!5625 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1586, column: 13)
!5626 = !DILocalVariable(name: "len", scope: !5627, file: !2831, line: 1641, type: !272)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !2831, line: 1640, column: 24)
!5628 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1640, column: 8)
!5629 = !DILocalVariable(name: "nj_len", scope: !5556, file: !2831, line: 1722, type: !272)
!5630 = !DILocalVariable(name: "pad_len", scope: !5556, file: !2831, line: 1723, type: !125)
!5631 = !DILocalVariable(name: "pad", scope: !5632, file: !2831, line: 1751, type: !142)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !2831, line: 1750, column: 26)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !2831, line: 1750, column: 8)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !2831, line: 1747, column: 18)
!5635 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1747, column: 7)
!5636 = !DILocalVariable(name: "rc", scope: !5637, file: !2831, line: 1758, type: !125)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !2831, line: 1758, column: 7)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !2831, line: 1757, column: 21)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !2831, line: 1757, column: 10)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !2831, line: 1756, column: 26)
!5641 = distinct !DILexicalBlock(scope: !5632, file: !2831, line: 1756, column: 9)
!5642 = !DILocalVariable(name: "rc", scope: !5643, file: !2831, line: 1765, type: !125)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !2831, line: 1765, column: 6)
!5644 = distinct !DILexicalBlock(scope: !5632, file: !2831, line: 1764, column: 25)
!5645 = !DILocalVariable(name: "rc", scope: !5646, file: !2831, line: 1774, type: !125)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !2831, line: 1774, column: 4)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !2831, line: 1773, column: 18)
!5648 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1773, column: 7)
!5649 = !DILocalVariable(name: "rc", scope: !5650, file: !2831, line: 1819, type: !125)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !2831, line: 1819, column: 5)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !2831, line: 1818, column: 44)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !2831, line: 1818, column: 8)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !2831, line: 1817, column: 10)
!5654 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1777, column: 7)
!5655 = !DILocalVariable(name: "rc", scope: !5656, file: !2831, line: 1823, type: !125)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !2831, line: 1823, column: 5)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !2831, line: 1822, column: 26)
!5658 = distinct !DILexicalBlock(scope: !5653, file: !2831, line: 1822, column: 8)
!5659 = !DILocalVariable(name: "rc", scope: !5660, file: !2831, line: 1828, type: !125)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !2831, line: 1828, column: 5)
!5661 = distinct !DILexicalBlock(scope: !5653, file: !2831, line: 1827, column: 26)
!5662 = !DILocalVariable(name: "rc", scope: !5663, file: !2831, line: 1831, type: !125)
!5663 = distinct !DILexicalBlock(scope: !5653, file: !2831, line: 1831, column: 4)
!5664 = !DILocalVariable(name: "rc", scope: !5665, file: !2831, line: 1836, type: !125)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !2831, line: 1836, column: 4)
!5666 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1835, column: 21)
!5667 = !DILabel(scope: !5623, name: "prec_int_pad0", file: !2831, line: 1634)
!5668 = !DILocation(line: 0, scope: !5529)
!5669 = !DILocation(line: 1341, column: 2, scope: !5529)
!5670 = !DILocation(line: 1341, column: 7, scope: !5529)
!5671 = !DILocation(line: 1375, column: 2, scope: !5529)
!5672 = !DILocation(line: 1342, column: 9, scope: !5529)
!5673 = !DILocation(line: 1375, column: 9, scope: !5529)
!5674 = !DILocation(line: 1377, column: 4, scope: !5553)
!5675 = !DILocation(line: 0, scope: !5553)
!5676 = !DILocation(line: 1377, column: 4, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5553, file: !2831, line: 1377, column: 4)
!5678 = distinct !{!5678, !5671, !5679}
!5679 = !DILocation(line: 1839, column: 2, scope: !5529)
!5680 = !DILocation(line: 1392, column: 3, scope: !5556)
!5681 = !DILocation(line: 1395, column: 5, scope: !5556)
!5682 = !DILocation(line: 0, scope: !5556)
!5683 = !DILocation(line: 1409, column: 8, scope: !5556)
!5684 = !DILocation(line: 1414, column: 13, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1414, column: 7)
!5686 = !DILocation(line: 1414, column: 7, scope: !5556)
!5687 = !DILocation(line: 1415, column: 12, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5685, file: !2831, line: 1414, column: 25)
!5689 = !DILocation(line: 1417, column: 14, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5688, file: !2831, line: 1417, column: 8)
!5691 = !DILocation(line: 1417, column: 8, scope: !5688)
!5692 = !DILocation(line: 1418, column: 21, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5690, file: !2831, line: 1417, column: 19)
!5694 = !DILocation(line: 1419, column: 13, scope: !5693)
!5695 = !DILocation(line: 1420, column: 4, scope: !5693)
!5696 = !DILocation(line: 1421, column: 20, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5685, file: !2831, line: 1421, column: 14)
!5698 = !DILocation(line: 1421, column: 14, scope: !5685)
!5699 = !DILocation(line: 1431, column: 13, scope: !5614)
!5700 = !DILocation(line: 1431, column: 7, scope: !5556)
!5701 = !DILocation(line: 1432, column: 14, scope: !5613)
!5702 = !DILocation(line: 0, scope: !5613)
!5703 = !DILocation(line: 1434, column: 12, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5613, file: !2831, line: 1434, column: 8)
!5705 = !DILocation(line: 1434, column: 8, scope: !5613)
!5706 = !DILocation(line: 1435, column: 24, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5704, file: !2831, line: 1434, column: 17)
!5708 = !DILocation(line: 1436, column: 4, scope: !5707)
!5709 = !DILocation(line: 1439, column: 20, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5614, file: !2831, line: 1439, column: 14)
!5711 = !DILocation(line: 1439, column: 14, scope: !5614)
!5712 = !DILocation(line: 1469, column: 37, scope: !5556)
!5713 = !DILocation(line: 1448, column: 20, scope: !5556)
!5714 = !DILocation(line: 1449, column: 22, scope: !5556)
!5715 = !DILocation(line: 1471, column: 34, scope: !5556)
!5716 = !DILocation(line: 1478, column: 7, scope: !5556)
!5717 = !DILocation(line: 1479, column: 4, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !2831, line: 1478, column: 40)
!5719 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1478, column: 7)
!5720 = !DILocation(line: 1484, column: 19, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5718, file: !2831, line: 1479, column: 24)
!5722 = !DILocation(line: 1484, column: 17, scope: !5721)
!5723 = !DILocation(line: 1485, column: 5, scope: !5721)
!5724 = !DILocation(line: 1492, column: 20, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !2831, line: 1491, column: 12)
!5726 = distinct !DILexicalBlock(scope: !5721, file: !2831, line: 1487, column: 9)
!5727 = !DILocation(line: 1492, column: 18, scope: !5725)
!5728 = !DILocation(line: 1494, column: 5, scope: !5721)
!5729 = !DILocation(line: 1497, column: 23, scope: !5721)
!5730 = !DILocation(line: 1496, column: 17, scope: !5721)
!5731 = !DILocation(line: 1498, column: 5, scope: !5721)
!5732 = !DILocation(line: 1501, column: 23, scope: !5721)
!5733 = !DILocation(line: 1500, column: 17, scope: !5721)
!5734 = !DILocation(line: 1502, column: 5, scope: !5721)
!5735 = !DILocation(line: 1513, column: 23, scope: !5721)
!5736 = !DILocation(line: 1513, column: 6, scope: !5721)
!5737 = !DILocation(line: 1512, column: 17, scope: !5721)
!5738 = !DILocation(line: 1514, column: 5, scope: !5721)
!5739 = !DILocation(line: 0, scope: !5721)
!5740 = !DILocation(line: 1516, column: 8, scope: !5718)
!5741 = !DILocation(line: 1517, column: 19, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !2831, line: 1516, column: 33)
!5743 = distinct !DILexicalBlock(scope: !5718, file: !2831, line: 1516, column: 8)
!5744 = !DILocation(line: 1517, column: 17, scope: !5742)
!5745 = !DILocation(line: 1518, column: 4, scope: !5742)
!5746 = !DILocation(line: 1519, column: 19, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !2831, line: 1518, column: 39)
!5748 = distinct !DILexicalBlock(scope: !5743, file: !2831, line: 1518, column: 15)
!5749 = !DILocation(line: 1519, column: 17, scope: !5747)
!5750 = !DILocation(line: 1520, column: 4, scope: !5747)
!5751 = !DILocation(line: 1522, column: 4, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !2831, line: 1521, column: 47)
!5753 = distinct !DILexicalBlock(scope: !5719, file: !2831, line: 1521, column: 14)
!5754 = !DILocation(line: 1527, column: 19, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5752, file: !2831, line: 1522, column: 24)
!5756 = !DILocation(line: 1527, column: 17, scope: !5755)
!5757 = !DILocation(line: 1528, column: 5, scope: !5755)
!5758 = !DILocation(line: 0, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5755, file: !2831, line: 1530, column: 9)
!5760 = !DILocation(line: 1540, column: 23, scope: !5755)
!5761 = !DILocation(line: 1539, column: 17, scope: !5755)
!5762 = !DILocation(line: 1542, column: 5, scope: !5755)
!5763 = !DILocation(line: 1545, column: 23, scope: !5755)
!5764 = !DILocation(line: 1544, column: 17, scope: !5755)
!5765 = !DILocation(line: 1547, column: 5, scope: !5755)
!5766 = !DILocation(line: 1551, column: 23, scope: !5755)
!5767 = !DILocation(line: 1551, column: 6, scope: !5755)
!5768 = !DILocation(line: 1550, column: 17, scope: !5755)
!5769 = !DILocation(line: 1552, column: 5, scope: !5755)
!5770 = !DILocation(line: 0, scope: !5755)
!5771 = !DILocation(line: 1554, column: 8, scope: !5752)
!5772 = !DILocation(line: 1555, column: 19, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !2831, line: 1554, column: 33)
!5774 = distinct !DILexicalBlock(scope: !5752, file: !2831, line: 1554, column: 8)
!5775 = !DILocation(line: 1555, column: 17, scope: !5773)
!5776 = !DILocation(line: 1556, column: 4, scope: !5773)
!5777 = !DILocation(line: 1557, column: 19, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !2831, line: 1556, column: 39)
!5779 = distinct !DILexicalBlock(scope: !5774, file: !2831, line: 1556, column: 15)
!5780 = !DILocation(line: 1557, column: 17, scope: !5778)
!5781 = !DILocation(line: 1558, column: 4, scope: !5778)
!5782 = !DILocation(line: 0, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !2831, line: 1560, column: 8)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !2831, line: 1559, column: 45)
!5785 = distinct !DILexicalBlock(scope: !5753, file: !2831, line: 1559, column: 14)
!5786 = !DILocation(line: 1566, column: 17, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !2831, line: 1565, column: 46)
!5788 = distinct !DILexicalBlock(scope: !5785, file: !2831, line: 1565, column: 14)
!5789 = !DILocation(line: 1566, column: 15, scope: !5787)
!5790 = !DILocation(line: 1567, column: 3, scope: !5787)
!5791 = !DILocation(line: 1574, column: 21, scope: !5620)
!5792 = !DILocation(line: 1575, column: 4, scope: !5618)
!5793 = !DILocation(line: 0, scope: !5618)
!5794 = !DILocation(line: 1575, column: 4, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5618, file: !2831, line: 1575, column: 4)
!5796 = !DILocation(line: 1582, column: 17, scope: !5556)
!5797 = !DILocation(line: 1582, column: 3, scope: !5556)
!5798 = !DILocation(line: 1584, column: 4, scope: !5622)
!5799 = !DILocation(line: 0, scope: !5622)
!5800 = !DILocation(line: 1584, column: 4, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5622, file: !2831, line: 1584, column: 4)
!5802 = !DILocation(line: 1587, column: 31, scope: !5625)
!5803 = !DILocation(line: 1591, column: 18, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5625, file: !2831, line: 1591, column: 8)
!5805 = !DILocation(line: 1591, column: 8, scope: !5625)
!5806 = !DILocation(line: 1592, column: 11, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5804, file: !2831, line: 1591, column: 24)
!5808 = !DILocation(line: 0, scope: !5625)
!5809 = !DILocation(line: 1593, column: 4, scope: !5807)
!5810 = !DILocation(line: 1594, column: 11, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5804, file: !2831, line: 1593, column: 11)
!5812 = !DILocation(line: 1604, column: 51, scope: !5623)
!5813 = !DILocation(line: 1604, column: 13, scope: !5623)
!5814 = !DILocation(line: 1604, column: 11, scope: !5623)
!5815 = !DILocation(line: 1606, column: 4, scope: !5623)
!5816 = !DILocation(line: 1609, column: 14, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1609, column: 8)
!5818 = !DILocation(line: 1609, column: 8, scope: !5623)
!5819 = !DILocation(line: 1619, column: 18, scope: !5623)
!5820 = !DILocation(line: 1620, column: 13, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1620, column: 8)
!5822 = !DILocation(line: 1620, column: 8, scope: !5623)
!5823 = !DILocation(line: 1622, column: 36, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5821, file: !2831, line: 1620, column: 18)
!5825 = !DILocation(line: 1622, column: 17, scope: !5824)
!5826 = !DILocation(line: 1623, column: 4, scope: !5824)
!5827 = !DILocation(line: 1632, column: 29, scope: !5623)
!5828 = !DILocation(line: 1632, column: 10, scope: !5623)
!5829 = !DILocation(line: 1632, column: 4, scope: !5623)
!5830 = !DILocation(line: 1407, column: 8, scope: !5556)
!5831 = !DILocation(line: 0, scope: !5623)
!5832 = !DILocation(line: 1634, column: 3, scope: !5623)
!5833 = !DILocation(line: 1640, column: 18, scope: !5628)
!5834 = !DILocation(line: 1640, column: 8, scope: !5623)
!5835 = !DILocation(line: 1729, column: 13, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1729, column: 7)
!5837 = !DILocation(line: 1641, column: 22, scope: !5627)
!5838 = !DILocation(line: 0, scope: !5627)
!5839 = !DILocation(line: 1646, column: 21, scope: !5627)
!5840 = !DILocation(line: 1649, column: 13, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5627, file: !2831, line: 1649, column: 9)
!5842 = !DILocation(line: 1649, column: 9, scope: !5627)
!5843 = !DILocation(line: 1650, column: 35, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !2831, line: 1649, column: 34)
!5845 = !DILocation(line: 1650, column: 23, scope: !5844)
!5846 = !DILocation(line: 1651, column: 5, scope: !5844)
!5847 = !DILocation(line: 1660, column: 15, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1660, column: 8)
!5849 = !DILocation(line: 1660, column: 19, scope: !5848)
!5850 = !DILocation(line: 1660, column: 8, scope: !5623)
!5851 = !DILocation(line: 1661, column: 23, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !2831, line: 1660, column: 28)
!5853 = !DILocation(line: 1661, column: 11, scope: !5852)
!5854 = !DILocation(line: 1665, column: 22, scope: !5852)
!5855 = !DILocation(line: 1666, column: 21, scope: !5852)
!5856 = !DILocation(line: 1668, column: 5, scope: !5852)
!5857 = !DILocation(line: 1677, column: 30, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !2831, line: 1676, column: 49)
!5859 = distinct !DILexicalBlock(scope: !5623, file: !2831, line: 1676, column: 8)
!5860 = !DILocation(line: 1677, column: 5, scope: !5858)
!5861 = !DILocation(line: 1680, column: 4, scope: !5623)
!5862 = !DILocation(line: 0, scope: !5804)
!5863 = !DILocation(line: 1597, column: 14, scope: !5625)
!5864 = !DILocation(line: 1699, column: 11, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1699, column: 7)
!5866 = !DILocation(line: 1699, column: 7, scope: !5556)
!5867 = !DILocation(line: 1725, column: 7, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1725, column: 7)
!5869 = !DILocation(line: 1725, column: 12, scope: !5868)
!5870 = !DILocation(line: 1747, column: 13, scope: !5635)
!5871 = !DILocation(line: 1747, column: 7, scope: !5556)
!5872 = !DILocation(line: 1722, column: 24, scope: !5556)
!5873 = !DILocation(line: 1725, column: 7, scope: !5556)
!5874 = !DILocation(line: 1729, column: 7, scope: !5556)
!5875 = !DILocation(line: 1736, column: 13, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5556, file: !2831, line: 1736, column: 7)
!5877 = !DILocation(line: 1735, column: 19, scope: !5556)
!5878 = !DILocation(line: 1736, column: 7, scope: !5556)
!5879 = !DILocation(line: 1748, column: 10, scope: !5634)
!5880 = !DILocation(line: 1750, column: 15, scope: !5633)
!5881 = !DILocation(line: 1750, column: 8, scope: !5634)
!5882 = !DILocation(line: 0, scope: !5632)
!5883 = !DILocation(line: 1756, column: 15, scope: !5641)
!5884 = !DILocation(line: 1756, column: 9, scope: !5632)
!5885 = !DILocation(line: 1758, column: 7, scope: !5637)
!5886 = !DILocation(line: 0, scope: !5637)
!5887 = !DILocation(line: 1758, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5637, file: !2831, line: 1758, column: 7)
!5889 = !DILocation(line: 1764, column: 5, scope: !5632)
!5890 = !DILocation(line: 0, scope: !5634)
!5891 = !DILocation(line: 1764, column: 20, scope: !5632)
!5892 = !DILocation(line: 1764, column: 17, scope: !5632)
!5893 = !DILocation(line: 1765, column: 6, scope: !5643)
!5894 = !DILocation(line: 0, scope: !5643)
!5895 = !DILocation(line: 1765, column: 6, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5643, file: !2831, line: 1765, column: 6)
!5897 = distinct !{!5897, !5889, !5898}
!5898 = !DILocation(line: 1766, column: 5, scope: !5632)
!5899 = !DILocation(line: 1773, column: 12, scope: !5648)
!5900 = !DILocation(line: 1773, column: 7, scope: !5556)
!5901 = !DILocation(line: 1773, column: 7, scope: !5648)
!5902 = !DILocation(line: 1774, column: 4, scope: !5646)
!5903 = !DILocation(line: 0, scope: !5646)
!5904 = !DILocation(line: 1774, column: 4, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5646, file: !2831, line: 1774, column: 4)
!5906 = !DILocation(line: 1818, column: 8, scope: !5652)
!5907 = !DILocation(line: 1818, column: 27, scope: !5652)
!5908 = !DILocation(line: 1818, column: 25, scope: !5652)
!5909 = !DILocation(line: 1818, column: 8, scope: !5653)
!5910 = !DILocation(line: 1819, column: 5, scope: !5650)
!5911 = !DILocation(line: 0, scope: !5650)
!5912 = !DILocation(line: 1819, column: 5, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5650, file: !2831, line: 1819, column: 5)
!5914 = !DILocation(line: 1822, column: 14, scope: !5658)
!5915 = !DILocation(line: 1822, column: 8, scope: !5653)
!5916 = !DILocation(line: 1823, column: 5, scope: !5656)
!5917 = !DILocation(line: 0, scope: !5656)
!5918 = !DILocation(line: 1823, column: 5, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5656, file: !2831, line: 1823, column: 5)
!5920 = !DILocation(line: 1826, column: 20, scope: !5653)
!5921 = !DILocation(line: 1827, column: 4, scope: !5653)
!5922 = !DILocation(line: 0, scope: !5653)
!5923 = !DILocation(line: 1827, column: 21, scope: !5653)
!5924 = !DILocation(line: 1827, column: 18, scope: !5653)
!5925 = !DILocation(line: 1828, column: 5, scope: !5660)
!5926 = !DILocation(line: 0, scope: !5660)
!5927 = !DILocation(line: 1828, column: 5, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5660, file: !2831, line: 1828, column: 5)
!5929 = distinct !{!5929, !5921, !5930}
!5930 = !DILocation(line: 1829, column: 4, scope: !5653)
!5931 = !DILocation(line: 1831, column: 4, scope: !5663)
!5932 = !DILocation(line: 0, scope: !5663)
!5933 = !DILocation(line: 1831, column: 4, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5663, file: !2831, line: 1831, column: 4)
!5935 = !DILocation(line: 1835, column: 16, scope: !5556)
!5936 = !DILocation(line: 1835, column: 3, scope: !5556)
!5937 = !DILocation(line: 1836, column: 4, scope: !5665)
!5938 = !DILocation(line: 0, scope: !5665)
!5939 = !DILocation(line: 1836, column: 4, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5665, file: !2831, line: 1836, column: 4)
!5941 = !DILocation(line: 1837, column: 4, scope: !5666)
!5942 = distinct !{!5942, !5936, !5943}
!5943 = !DILocation(line: 1838, column: 3, scope: !5556)
!5944 = !DILocation(line: 1844, column: 1, scope: !5529)
!5945 = distinct !DISubprogram(name: "extract_conversion", scope: !2831, file: !2831, line: 642, type: !5946, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !5948)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{!140, !5602, !140}
!5948 = !{!5949, !5950}
!5949 = !DILocalVariable(name: "conv", arg: 1, scope: !5945, file: !2831, line: 642, type: !5602)
!5950 = !DILocalVariable(name: "sp", arg: 2, scope: !5945, file: !2831, line: 643, type: !140)
!5951 = !DILocation(line: 0, scope: !5945)
!5952 = !DILocation(line: 645, column: 10, scope: !5945)
!5953 = !DILocation(line: 653, column: 2, scope: !5945)
!5954 = !DILocation(line: 654, column: 6, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5945, file: !2831, line: 654, column: 6)
!5956 = !DILocation(line: 654, column: 10, scope: !5955)
!5957 = !DILocation(line: 654, column: 6, scope: !5945)
!5958 = !DILocation(line: 655, column: 24, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5955, file: !2831, line: 654, column: 18)
!5960 = !DILocation(line: 655, column: 19, scope: !5959)
!5961 = !DILocation(line: 656, column: 3, scope: !5959)
!5962 = !DILocation(line: 659, column: 7, scope: !5945)
!5963 = !DILocation(line: 660, column: 7, scope: !5945)
!5964 = !DILocation(line: 661, column: 7, scope: !5945)
!5965 = !DILocation(line: 662, column: 7, scope: !5945)
!5966 = !DILocation(line: 663, column: 7, scope: !5945)
!5967 = !DILocation(line: 665, column: 2, scope: !5945)
!5968 = !DILocation(line: 666, column: 1, scope: !5945)
!5969 = distinct !DISubprogram(name: "outs", scope: !2831, file: !2831, line: 1319, type: !5970, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !5972)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!125, !4720, !124, !140, !140}
!5972 = !{!5973, !5974, !5975, !5976, !5977, !5978}
!5973 = !DILocalVariable(name: "out", arg: 1, scope: !5969, file: !2831, line: 1319, type: !4720)
!5974 = !DILocalVariable(name: "ctx", arg: 2, scope: !5969, file: !2831, line: 1320, type: !124)
!5975 = !DILocalVariable(name: "sp", arg: 3, scope: !5969, file: !2831, line: 1321, type: !140)
!5976 = !DILocalVariable(name: "ep", arg: 4, scope: !5969, file: !2831, line: 1322, type: !140)
!5977 = !DILocalVariable(name: "count", scope: !5969, file: !2831, line: 1324, type: !272)
!5978 = !DILocalVariable(name: "rc", scope: !5979, file: !2831, line: 1327, type: !125)
!5979 = distinct !DILexicalBlock(scope: !5969, file: !2831, line: 1326, column: 45)
!5980 = !DILocation(line: 0, scope: !5969)
!5981 = !DILocation(line: 1326, column: 2, scope: !5969)
!5982 = !DILocation(line: 1324, column: 9, scope: !5969)
!5983 = !DILocation(line: 1326, column: 13, scope: !5969)
!5984 = !DILocation(line: 1326, column: 19, scope: !5969)
!5985 = !DILocation(line: 1327, column: 21, scope: !5979)
!5986 = !DILocation(line: 1326, column: 36, scope: !5969)
!5987 = !DILocation(line: 1326, column: 39, scope: !5969)
!5988 = !DILocation(line: 1327, column: 24, scope: !5979)
!5989 = !DILocation(line: 1327, column: 16, scope: !5979)
!5990 = !DILocation(line: 1327, column: 12, scope: !5979)
!5991 = !DILocation(line: 0, scope: !5979)
!5992 = !DILocation(line: 1329, column: 10, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5979, file: !2831, line: 1329, column: 7)
!5994 = !DILocation(line: 1329, column: 7, scope: !5979)
!5995 = distinct !{!5995, !5981, !5996}
!5996 = !DILocation(line: 1333, column: 2, scope: !5969)
!5997 = !DILocation(line: 1336, column: 1, scope: !5969)
!5998 = distinct !DISubprogram(name: "encode_uint", scope: !2831, file: !2831, line: 788, type: !5999, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6001)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{!393, !2853, !5602, !393, !140}
!6001 = !{!6002, !6003, !6004, !6005, !6006, !6007, !6009, !6010}
!6002 = !DILocalVariable(name: "value", arg: 1, scope: !5998, file: !2831, line: 788, type: !2853)
!6003 = !DILocalVariable(name: "conv", arg: 2, scope: !5998, file: !2831, line: 789, type: !5602)
!6004 = !DILocalVariable(name: "bps", arg: 3, scope: !5998, file: !2831, line: 790, type: !393)
!6005 = !DILocalVariable(name: "bpe", arg: 4, scope: !5998, file: !2831, line: 791, type: !140)
!6006 = !DILocalVariable(name: "upcase", scope: !5998, file: !2831, line: 793, type: !153)
!6007 = !DILocalVariable(name: "radix", scope: !5998, file: !2831, line: 794, type: !6008)
!6008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6009 = !DILocalVariable(name: "bp", scope: !5998, file: !2831, line: 795, type: !393)
!6010 = !DILocalVariable(name: "lsv", scope: !6011, file: !2831, line: 798, type: !32)
!6011 = distinct !DILexicalBlock(scope: !5998, file: !2831, line: 797, column: 5)
!6012 = !DILocation(line: 0, scope: !5998)
!6013 = !DILocation(line: 793, column: 35, scope: !5998)
!6014 = !DILocation(line: 793, column: 24, scope: !5998)
!6015 = !DILocation(line: 793, column: 16, scope: !5998)
!6016 = !DILocation(line: 794, column: 29, scope: !5998)
!6017 = !DILocation(line: 795, column: 24, scope: !5998)
!6018 = !DILocation(line: 795, column: 17, scope: !5998)
!6019 = !DILocation(line: 797, column: 2, scope: !5998)
!6020 = !DILocation(line: 802, column: 9, scope: !6011)
!6021 = !DILocation(line: 798, column: 22, scope: !6011)
!6022 = !DILocation(line: 0, scope: !6011)
!6023 = !DILocation(line: 800, column: 16, scope: !6011)
!6024 = !DILocation(line: 800, column: 11, scope: !6011)
!6025 = !DILocation(line: 800, column: 4, scope: !6011)
!6026 = !DILocation(line: 800, column: 9, scope: !6011)
!6027 = !DILocation(line: 803, column: 18, scope: !5998)
!6028 = !DILocation(line: 803, column: 24, scope: !5998)
!6029 = !DILocation(line: 803, column: 2, scope: !6011)
!6030 = distinct !{!6030, !6019, !6031}
!6031 = !DILocation(line: 803, column: 37, scope: !5998)
!6032 = !DILocation(line: 808, column: 12, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5998, file: !2831, line: 808, column: 6)
!6034 = !DILocation(line: 808, column: 6, scope: !5998)
!6035 = !DILocation(line: 809, column: 7, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !2831, line: 808, column: 23)
!6037 = !DILocation(line: 813, column: 3, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !2831, line: 811, column: 27)
!6039 = distinct !DILexicalBlock(scope: !6040, file: !2831, line: 811, column: 14)
!6040 = distinct !DILexicalBlock(scope: !6036, file: !2831, line: 809, column: 7)
!6041 = !DILocation(line: 0, scope: !6040)
!6042 = !DILocation(line: 818, column: 2, scope: !5998)
!6043 = distinct !DISubprogram(name: "store_count", scope: !2831, file: !2831, line: 1280, type: !6044, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6048)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !6046, !124, !125}
!6046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6047, size: 32)
!6047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5569)
!6048 = !{!6049, !6050, !6051}
!6049 = !DILocalVariable(name: "conv", arg: 1, scope: !6043, file: !2831, line: 1280, type: !6046)
!6050 = !DILocalVariable(name: "dp", arg: 2, scope: !6043, file: !2831, line: 1281, type: !124)
!6051 = !DILocalVariable(name: "count", arg: 3, scope: !6043, file: !2831, line: 1282, type: !125)
!6052 = !DILocation(line: 0, scope: !6043)
!6053 = !DILocation(line: 1284, column: 38, scope: !6043)
!6054 = !DILocation(line: 1284, column: 2, scope: !6043)
!6055 = !DILocation(line: 1286, column: 4, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6043, file: !2831, line: 1284, column: 50)
!6057 = !DILocation(line: 1286, column: 14, scope: !6056)
!6058 = !DILocation(line: 1287, column: 3, scope: !6056)
!6059 = !DILocation(line: 1289, column: 24, scope: !6056)
!6060 = !DILocation(line: 1289, column: 22, scope: !6056)
!6061 = !DILocation(line: 1290, column: 3, scope: !6056)
!6062 = !DILocation(line: 1292, column: 18, scope: !6056)
!6063 = !DILocation(line: 1292, column: 4, scope: !6056)
!6064 = !DILocation(line: 1292, column: 16, scope: !6056)
!6065 = !DILocation(line: 1293, column: 3, scope: !6056)
!6066 = !DILocation(line: 1295, column: 4, scope: !6056)
!6067 = !DILocation(line: 1295, column: 15, scope: !6056)
!6068 = !DILocation(line: 1296, column: 3, scope: !6056)
!6069 = !DILocation(line: 1298, column: 22, scope: !6056)
!6070 = !DILocation(line: 1298, column: 4, scope: !6056)
!6071 = !DILocation(line: 1298, column: 20, scope: !6056)
!6072 = !DILocation(line: 1299, column: 3, scope: !6056)
!6073 = !DILocation(line: 1301, column: 21, scope: !6056)
!6074 = !DILocation(line: 1301, column: 4, scope: !6056)
!6075 = !DILocation(line: 1301, column: 19, scope: !6056)
!6076 = !DILocation(line: 1302, column: 3, scope: !6056)
!6077 = !DILocation(line: 1304, column: 4, scope: !6056)
!6078 = !DILocation(line: 1304, column: 17, scope: !6056)
!6079 = !DILocation(line: 1305, column: 3, scope: !6056)
!6080 = !DILocation(line: 1307, column: 4, scope: !6056)
!6081 = !DILocation(line: 1307, column: 20, scope: !6056)
!6082 = !DILocation(line: 1308, column: 3, scope: !6056)
!6083 = !DILocation(line: 1316, column: 1, scope: !6043)
!6084 = distinct !DISubprogram(name: "isupper", scope: !6085, file: !6085, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6086)
!6085 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6086 = !{!6087}
!6087 = !DILocalVariable(name: "a", arg: 1, scope: !6084, file: !6085, line: 16, type: !125)
!6088 = !DILocation(line: 0, scope: !6084)
!6089 = !DILocation(line: 18, column: 29, scope: !6084)
!6090 = !DILocation(line: 18, column: 45, scope: !6084)
!6091 = !DILocation(line: 18, column: 2, scope: !6084)
!6092 = distinct !DISubprogram(name: "conversion_radix", scope: !2831, file: !2831, line: 761, type: !6093, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6095)
!6093 = !DISubroutineType(types: !6094)
!6094 = !{!272, !142}
!6095 = !{!6096}
!6096 = !DILocalVariable(name: "specifier", arg: 1, scope: !6092, file: !2831, line: 761, type: !142)
!6097 = !DILocation(line: 0, scope: !6092)
!6098 = !DILocation(line: 763, column: 2, scope: !6092)
!6099 = !DILocation(line: 770, column: 3, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6092, file: !2831, line: 763, column: 21)
!6101 = !DILocation(line: 774, column: 3, scope: !6100)
!6102 = !DILocation(line: 0, scope: !6100)
!6103 = !DILocation(line: 776, column: 1, scope: !6092)
!6104 = distinct !DISubprogram(name: "extract_flags", scope: !2831, file: !2831, line: 339, type: !5946, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6105)
!6105 = !{!6106, !6107, !6108}
!6106 = !DILocalVariable(name: "conv", arg: 1, scope: !6104, file: !2831, line: 339, type: !5602)
!6107 = !DILocalVariable(name: "sp", arg: 2, scope: !6104, file: !2831, line: 340, type: !140)
!6108 = !DILocalVariable(name: "loop", scope: !6104, file: !2831, line: 342, type: !153)
!6109 = !DILocation(line: 0, scope: !6104)
!6110 = !DILocation(line: 344, column: 2, scope: !6104)
!6111 = !DILocation(line: 345, column: 11, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6104, file: !2831, line: 344, column: 5)
!6113 = !DILocation(line: 345, column: 3, scope: !6112)
!6114 = !DILocation(line: 351, column: 4, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6112, file: !2831, line: 345, column: 16)
!6116 = !DILocation(line: 354, column: 4, scope: !6115)
!6117 = !DILocation(line: 357, column: 4, scope: !6115)
!6118 = !DILocation(line: 360, column: 4, scope: !6115)
!6119 = !DILocation(line: 0, scope: !6115)
!6120 = !DILocation(line: 370, column: 12, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6104, file: !2831, line: 370, column: 6)
!6122 = !DILocation(line: 370, column: 22, scope: !6121)
!6123 = !DILocation(line: 371, column: 19, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6121, file: !2831, line: 370, column: 42)
!6125 = !DILocation(line: 372, column: 2, scope: !6124)
!6126 = !DILocation(line: 376, column: 2, scope: !6104)
!6127 = distinct !DISubprogram(name: "extract_width", scope: !2831, file: !2831, line: 388, type: !5946, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6128)
!6128 = !{!6129, !6130, !6131, !6132}
!6129 = !DILocalVariable(name: "conv", arg: 1, scope: !6127, file: !2831, line: 388, type: !5602)
!6130 = !DILocalVariable(name: "sp", arg: 2, scope: !6127, file: !2831, line: 389, type: !140)
!6131 = !DILocalVariable(name: "wp", scope: !6127, file: !2831, line: 398, type: !140)
!6132 = !DILocalVariable(name: "width", scope: !6127, file: !2831, line: 399, type: !272)
!6133 = !DILocation(line: 0, scope: !6127)
!6134 = !DILocation(line: 391, column: 8, scope: !6127)
!6135 = !DILocation(line: 391, column: 22, scope: !6127)
!6136 = !DILocation(line: 393, column: 6, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6127, file: !2831, line: 393, column: 6)
!6138 = !DILocation(line: 393, column: 10, scope: !6137)
!6139 = !DILocation(line: 393, column: 6, scope: !6127)
!6140 = !DILocation(line: 394, column: 20, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6137, file: !2831, line: 393, column: 18)
!6142 = !DILocation(line: 395, column: 10, scope: !6141)
!6143 = !DILocation(line: 395, column: 3, scope: !6141)
!6144 = !DILocation(line: 399, column: 17, scope: !6127)
!6145 = !DILocation(line: 401, column: 6, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6127, file: !2831, line: 401, column: 6)
!6147 = !DILocation(line: 401, column: 9, scope: !6146)
!6148 = !DILocation(line: 401, column: 6, scope: !6127)
!6149 = !DILocation(line: 402, column: 23, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6146, file: !2831, line: 401, column: 16)
!6151 = !DILocation(line: 403, column: 9, scope: !6150)
!6152 = !DILocation(line: 403, column: 21, scope: !6150)
!6153 = !DILocation(line: 405, column: 11, scope: !6150)
!6154 = !DILocation(line: 404, column: 21, scope: !6150)
!6155 = !DILocation(line: 406, column: 2, scope: !6150)
!6156 = !DILocation(line: 409, column: 1, scope: !6127)
!6157 = distinct !DISubprogram(name: "extract_prec", scope: !2831, file: !2831, line: 420, type: !5946, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6158)
!6158 = !{!6159, !6160, !6161}
!6159 = !DILocalVariable(name: "conv", arg: 1, scope: !6157, file: !2831, line: 420, type: !5602)
!6160 = !DILocalVariable(name: "sp", arg: 2, scope: !6157, file: !2831, line: 421, type: !140)
!6161 = !DILocalVariable(name: "prec", scope: !6157, file: !2831, line: 435, type: !272)
!6162 = !DILocation(line: 0, scope: !6157)
!6163 = !DILocation(line: 423, column: 24, scope: !6157)
!6164 = !DILocation(line: 423, column: 28, scope: !6157)
!6165 = !DILocation(line: 423, column: 8, scope: !6157)
!6166 = !DILocation(line: 423, column: 21, scope: !6157)
!6167 = !DILocation(line: 425, column: 6, scope: !6157)
!6168 = !DILocation(line: 428, column: 2, scope: !6157)
!6169 = !DILocation(line: 430, column: 6, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6157, file: !2831, line: 430, column: 6)
!6171 = !DILocation(line: 430, column: 10, scope: !6170)
!6172 = !DILocation(line: 430, column: 6, scope: !6157)
!6173 = !DILocation(line: 431, column: 19, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6170, file: !2831, line: 430, column: 18)
!6175 = !DILocation(line: 432, column: 10, scope: !6174)
!6176 = !DILocation(line: 432, column: 3, scope: !6174)
!6177 = !DILocation(line: 435, column: 16, scope: !6157)
!6178 = !DILocation(line: 437, column: 8, scope: !6157)
!6179 = !DILocation(line: 437, column: 19, scope: !6157)
!6180 = !DILocation(line: 439, column: 10, scope: !6157)
!6181 = !DILocation(line: 438, column: 20, scope: !6157)
!6182 = !DILocation(line: 441, column: 9, scope: !6157)
!6183 = !DILocation(line: 442, column: 1, scope: !6157)
!6184 = distinct !DISubprogram(name: "extract_length", scope: !2831, file: !2831, line: 453, type: !5946, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6185)
!6185 = !{!6186, !6187}
!6186 = !DILocalVariable(name: "conv", arg: 1, scope: !6184, file: !2831, line: 453, type: !5602)
!6187 = !DILocalVariable(name: "sp", arg: 2, scope: !6184, file: !2831, line: 454, type: !140)
!6188 = !DILocation(line: 0, scope: !6184)
!6189 = !DILocation(line: 456, column: 10, scope: !6184)
!6190 = !DILocation(line: 456, column: 2, scope: !6184)
!6191 = !DILocation(line: 458, column: 8, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !2831, line: 458, column: 7)
!6193 = distinct !DILexicalBlock(scope: !6184, file: !2831, line: 456, column: 15)
!6194 = !DILocation(line: 458, column: 7, scope: !6192)
!6195 = !DILocation(line: 458, column: 13, scope: !6192)
!6196 = !DILocation(line: 0, scope: !6192)
!6197 = !DILocation(line: 458, column: 7, scope: !6193)
!6198 = !DILocation(line: 459, column: 21, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6192, file: !2831, line: 458, column: 21)
!6200 = !DILocation(line: 460, column: 4, scope: !6199)
!6201 = !DILocation(line: 461, column: 3, scope: !6199)
!6202 = !DILocation(line: 462, column: 21, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6192, file: !2831, line: 461, column: 10)
!6204 = !DILocation(line: 466, column: 8, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6193, file: !2831, line: 466, column: 7)
!6206 = !DILocation(line: 466, column: 7, scope: !6205)
!6207 = !DILocation(line: 466, column: 13, scope: !6205)
!6208 = !DILocation(line: 0, scope: !6205)
!6209 = !DILocation(line: 466, column: 7, scope: !6193)
!6210 = !DILocation(line: 467, column: 21, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6205, file: !2831, line: 466, column: 21)
!6212 = !DILocation(line: 468, column: 4, scope: !6211)
!6213 = !DILocation(line: 469, column: 3, scope: !6211)
!6214 = !DILocation(line: 470, column: 21, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6205, file: !2831, line: 469, column: 10)
!6216 = !DILocation(line: 474, column: 9, scope: !6193)
!6217 = !DILocation(line: 474, column: 20, scope: !6193)
!6218 = !DILocation(line: 475, column: 3, scope: !6193)
!6219 = !DILocation(line: 476, column: 3, scope: !6193)
!6220 = !DILocation(line: 478, column: 9, scope: !6193)
!6221 = !DILocation(line: 478, column: 20, scope: !6193)
!6222 = !DILocation(line: 479, column: 3, scope: !6193)
!6223 = !DILocation(line: 480, column: 3, scope: !6193)
!6224 = !DILocation(line: 482, column: 9, scope: !6193)
!6225 = !DILocation(line: 482, column: 20, scope: !6193)
!6226 = !DILocation(line: 483, column: 3, scope: !6193)
!6227 = !DILocation(line: 484, column: 3, scope: !6193)
!6228 = !DILocation(line: 486, column: 9, scope: !6193)
!6229 = !DILocation(line: 486, column: 20, scope: !6193)
!6230 = !DILocation(line: 487, column: 3, scope: !6193)
!6231 = !DILocation(line: 492, column: 21, scope: !6193)
!6232 = !DILocation(line: 493, column: 3, scope: !6193)
!6233 = !DILocation(line: 495, column: 9, scope: !6193)
!6234 = !DILocation(line: 495, column: 20, scope: !6193)
!6235 = !DILocation(line: 496, column: 3, scope: !6193)
!6236 = !DILocation(line: 498, column: 2, scope: !6184)
!6237 = distinct !DISubprogram(name: "extract_specifier", scope: !2831, file: !2831, line: 513, type: !5946, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6238)
!6238 = !{!6239, !6240, !6241, !6242}
!6239 = !DILocalVariable(name: "conv", arg: 1, scope: !6237, file: !2831, line: 513, type: !5602)
!6240 = !DILocalVariable(name: "sp", arg: 2, scope: !6237, file: !2831, line: 514, type: !140)
!6241 = !DILocalVariable(name: "unsupported", scope: !6237, file: !2831, line: 516, type: !153)
!6242 = !DILabel(scope: !6243, name: "int_conv", file: !2831, line: 526)
!6243 = distinct !DILexicalBlock(scope: !6237, file: !2831, line: 520, column: 27)
!6244 = !DILocation(line: 0, scope: !6237)
!6245 = !DILocation(line: 518, column: 20, scope: !6237)
!6246 = !DILocation(line: 518, column: 8, scope: !6237)
!6247 = !DILocation(line: 518, column: 18, scope: !6237)
!6248 = !DILocation(line: 520, column: 2, scope: !6237)
!6249 = !DILocation(line: 525, column: 3, scope: !6243)
!6250 = !DILocation(line: 0, scope: !6243)
!6251 = !DILocation(line: 526, column: 1, scope: !6243)
!6252 = !DILocation(line: 528, column: 24, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6243, file: !2831, line: 528, column: 7)
!6254 = !DILocation(line: 528, column: 7, scope: !6243)
!6255 = !DILocation(line: 535, column: 23, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6243, file: !2831, line: 535, column: 7)
!6257 = !DILocation(line: 535, column: 7, scope: !6243)
!6258 = !DILocation(line: 536, column: 36, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !2831, line: 535, column: 31)
!6260 = !DILocation(line: 537, column: 3, scope: !6259)
!6261 = !DILocation(line: 570, column: 9, scope: !6243)
!6262 = !DILocation(line: 570, column: 23, scope: !6243)
!6263 = !DILocation(line: 575, column: 4, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !2831, line: 573, column: 48)
!6265 = distinct !DILexicalBlock(scope: !6243, file: !2831, line: 573, column: 7)
!6266 = !DILocation(line: 603, column: 9, scope: !6243)
!6267 = !DILocation(line: 603, column: 23, scope: !6243)
!6268 = !DILocation(line: 605, column: 24, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6243, file: !2831, line: 605, column: 7)
!6270 = !DILocation(line: 605, column: 7, scope: !6243)
!6271 = !DILocation(line: 612, column: 9, scope: !6243)
!6272 = !DILocation(line: 612, column: 23, scope: !6243)
!6273 = !DILocation(line: 619, column: 24, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6243, file: !2831, line: 619, column: 7)
!6275 = !DILocation(line: 619, column: 7, scope: !6243)
!6276 = !DILocation(line: 625, column: 9, scope: !6243)
!6277 = !DILocation(line: 625, column: 17, scope: !6243)
!6278 = !DILocation(line: 626, column: 3, scope: !6243)
!6279 = !DILocation(line: 629, column: 20, scope: !6237)
!6280 = !DILocation(line: 629, column: 8, scope: !6237)
!6281 = !DILocation(line: 518, column: 23, scope: !6237)
!6282 = !DILocation(line: 631, column: 2, scope: !6237)
!6283 = distinct !DISubprogram(name: "extract_decimal", scope: !2831, file: !2831, line: 318, type: !6284, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6286)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{!272, !386}
!6286 = !{!6287, !6288, !6289}
!6287 = !DILocalVariable(name: "str", arg: 1, scope: !6283, file: !2831, line: 318, type: !386)
!6288 = !DILocalVariable(name: "sp", scope: !6283, file: !2831, line: 320, type: !140)
!6289 = !DILocalVariable(name: "val", scope: !6283, file: !2831, line: 321, type: !272)
!6290 = !DILocation(line: 0, scope: !6283)
!6291 = !DILocation(line: 320, column: 19, scope: !6283)
!6292 = !DILocation(line: 323, column: 37, scope: !6283)
!6293 = !DILocation(line: 323, column: 17, scope: !6283)
!6294 = !DILocation(line: 323, column: 9, scope: !6283)
!6295 = !DILocation(line: 323, column: 2, scope: !6283)
!6296 = !DILocation(line: 324, column: 13, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6283, file: !2831, line: 323, column: 43)
!6298 = !DILocation(line: 324, column: 24, scope: !6297)
!6299 = !DILocation(line: 324, column: 19, scope: !6297)
!6300 = !DILocation(line: 324, column: 27, scope: !6297)
!6301 = distinct !{!6301, !6295, !6302}
!6302 = !DILocation(line: 325, column: 2, scope: !6283)
!6303 = !DILocation(line: 326, column: 7, scope: !6283)
!6304 = !DILocation(line: 327, column: 2, scope: !6283)
!6305 = distinct !DISubprogram(name: "isdigit", scope: !6085, file: !6085, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !6306)
!6306 = !{!6307}
!6307 = !DILocalVariable(name: "a", arg: 1, scope: !6305, file: !6085, line: 43, type: !125)
!6308 = !DILocation(line: 0, scope: !6305)
!6309 = !DILocation(line: 45, column: 29, scope: !6305)
!6310 = !DILocation(line: 45, column: 45, scope: !6305)
!6311 = !DILocation(line: 45, column: 2, scope: !6305)
!6312 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6313, file: !6313, line: 9, type: !3440, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !639)
!6313 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!6314 = !DILocation(line: 11, column: 1, scope: !6312)
!6315 = !{i64 2147565708, i64 2147565751, i64 2147565791}
!6316 = !DILocation(line: 12, column: 1, scope: !6312)
!6317 = !{i64 2147569935, i64 2147569978, i64 2147570018}
!6318 = !DILocation(line: 13, column: 1, scope: !6312)
!6319 = !{i64 2147570144, i64 2147570187, i64 2147570227}
!6320 = !DILocation(line: 14, column: 1, scope: !6312)
!6321 = !{i64 2147570313, i64 2147570356, i64 2147570396}
!6322 = !DILocation(line: 15, column: 1, scope: !6312)
!6323 = !{i64 2147570476, i64 2147570519, i64 2147570559}
!6324 = !DILocation(line: 16, column: 1, scope: !6312)
!6325 = !{i64 2147570660, i64 2147570703, i64 2147570743}
!6326 = !DILocation(line: 17, column: 1, scope: !6312)
!6327 = !{i64 2147570839, i64 2147570882, i64 2147570922}
!6328 = !DILocation(line: 18, column: 1, scope: !6312)
!6329 = !{i64 2147571082, i64 2147571125, i64 2147571165}
!6330 = !DILocation(line: 19, column: 1, scope: !6312)
!6331 = !{i64 2147571317, i64 2147571360, i64 2147571400}
!6332 = !DILocation(line: 20, column: 1, scope: !6312)
!6333 = !{i64 2147571504, i64 2147571547, i64 2147571587}
!6334 = !DILocation(line: 21, column: 1, scope: !6312)
!6335 = !{i64 2147571720, i64 2147571763, i64 2147571803}
!6336 = !DILocation(line: 22, column: 1, scope: !6312)
!6337 = !{i64 2147571923, i64 2147571966, i64 2147572006}
!6338 = !DILocation(line: 23, column: 1, scope: !6312)
!6339 = !{i64 2147572126, i64 2147572169, i64 2147572209}
!6340 = !DILocation(line: 24, column: 1, scope: !6312)
!6341 = !{i64 2147572301, i64 2147572344, i64 2147572384}
!6342 = !DILocation(line: 25, column: 1, scope: !6312)
!6343 = !{i64 2147572509, i64 2147572552, i64 2147572592}
!6344 = !DILocation(line: 26, column: 1, scope: !6312)
!6345 = !{i64 2147572713, i64 2147572756, i64 2147572796}
!6346 = !DILocation(line: 27, column: 1, scope: !6312)
!6347 = !{i64 2147572906, i64 2147572949, i64 2147572989}
!6348 = !DILocation(line: 28, column: 1, scope: !6312)
!6349 = !{i64 2147573108, i64 2147573151, i64 2147573191}
!6350 = !DILocation(line: 29, column: 1, scope: !6312)
!6351 = !{i64 2147573307, i64 2147573350, i64 2147573390}
!6352 = !DILocation(line: 30, column: 1, scope: !6312)
!6353 = !{i64 2147573534, i64 2147573577, i64 2147573617}
!6354 = !DILocation(line: 31, column: 1, scope: !6312)
!6355 = !{i64 2147573736, i64 2147573779, i64 2147573819}
!6356 = !DILocation(line: 32, column: 1, scope: !6312)
!6357 = !{i64 2147573951, i64 2147573994, i64 2147574034}
!6358 = !DILocation(line: 33, column: 1, scope: !6312)
!6359 = !{i64 2147574132, i64 2147574175, i64 2147574215}
!6360 = !DILocation(line: 34, column: 1, scope: !6312)
!6361 = !{i64 2147574304, i64 2147574347, i64 2147574387}
!6362 = !DILocation(line: 35, column: 1, scope: !6312)
!6363 = !{i64 2147574506, i64 2147574549, i64 2147574589}
!6364 = !DILocation(line: 36, column: 1, scope: !6312)
!6365 = !{i64 2147574732, i64 2147574775, i64 2147574815}
!6366 = !DILocation(line: 37, column: 1, scope: !6312)
!6367 = !{i64 2147574931, i64 2147574974, i64 2147575014}
!6368 = !DILocation(line: 38, column: 1, scope: !6312)
!6369 = !{i64 2147575106, i64 2147575149, i64 2147575189}
!6370 = !DILocation(line: 39, column: 1, scope: !6312)
!6371 = !{i64 2147575359, i64 2147575402, i64 2147575442}
!6372 = !DILocation(line: 40, column: 1, scope: !6312)
!6373 = !{i64 2147575600, i64 2147575643, i64 2147575683}
!6374 = !DILocation(line: 41, column: 1, scope: !6312)
!6375 = !{i64 2147575835, i64 2147575878, i64 2147575918}
!6376 = !DILocation(line: 42, column: 1, scope: !6312)
!6377 = !{i64 2147576061, i64 2147576104, i64 2147576144}
!6378 = !DILocation(line: 43, column: 1, scope: !6312)
!6379 = !{i64 2147576287, i64 2147576330, i64 2147576370}
!6380 = !DILocation(line: 44, column: 1, scope: !6312)
!6381 = !{i64 2147576522, i64 2147576565, i64 2147576605}
!6382 = !DILocation(line: 45, column: 1, scope: !6312)
!6383 = !{i64 2147576757, i64 2147576800, i64 2147576840}
!6384 = !DILocation(line: 46, column: 1, scope: !6312)
!6385 = !{i64 2147576992, i64 2147577035, i64 2147577075}
!6386 = !DILocation(line: 47, column: 1, scope: !6312)
!6387 = !{i64 2147577230, i64 2147577273, i64 2147577313}
!6388 = !DILocation(line: 48, column: 1, scope: !6312)
!6389 = !{i64 2147577504, i64 2147577547, i64 2147577587}
!6390 = !DILocation(line: 49, column: 1, scope: !6312)
!6391 = !{i64 2147577742, i64 2147577785, i64 2147577825}
!6392 = !DILocation(line: 50, column: 1, scope: !6312)
!6393 = !{i64 2147577995, i64 2147578038, i64 2147578078}
!6394 = !DILocation(line: 51, column: 1, scope: !6312)
!6395 = !{i64 2147578239, i64 2147578282, i64 2147578322}
!6396 = !DILocation(line: 52, column: 1, scope: !6312)
!6397 = !{i64 2147578489, i64 2147578532, i64 2147578572}
!6398 = !DILocation(line: 53, column: 1, scope: !6312)
!6399 = !{i64 2147582791, i64 2147582834, i64 2147582874}
!6400 = !DILocation(line: 54, column: 1, scope: !6312)
!6401 = !{i64 2147583038, i64 2147583081, i64 2147583121}
!6402 = !DILocation(line: 55, column: 1, scope: !6312)
!6403 = !{i64 2147583273, i64 2147583316, i64 2147583356}
!6404 = !DILocation(line: 56, column: 1, scope: !6312)
!6405 = !{i64 2147583508, i64 2147583551, i64 2147583591}
!6406 = !DILocation(line: 57, column: 1, scope: !6312)
!6407 = !{i64 2147583743, i64 2147583786, i64 2147583826}
!6408 = !DILocation(line: 58, column: 1, scope: !6312)
!6409 = !{i64 2147583978, i64 2147584021, i64 2147584061}
!6410 = !DILocation(line: 59, column: 1, scope: !6312)
!6411 = !{i64 2147584222, i64 2147584265, i64 2147584305}
!6412 = !DILocation(line: 60, column: 1, scope: !6312)
!6413 = !{i64 2147584460, i64 2147584503, i64 2147584543}
!6414 = !DILocation(line: 61, column: 1, scope: !6312)
!6415 = !{i64 2147584701, i64 2147584744, i64 2147584784}
!6416 = !DILocation(line: 62, column: 1, scope: !6312)
!6417 = !{i64 2147584981, i64 2147585024, i64 2147585064}
!6418 = !DILocation(line: 63, column: 1, scope: !6312)
!6419 = !{i64 2147585240, i64 2147585283, i64 2147585323}
!6420 = !DILocation(line: 64, column: 1, scope: !6312)
!6421 = !{i64 2147585478, i64 2147585521, i64 2147585561}
!6422 = !DILocation(line: 65, column: 1, scope: !6312)
!6423 = !{i64 2147585737, i64 2147585780, i64 2147585820}
!6424 = !DILocation(line: 66, column: 1, scope: !6312)
!6425 = !{i64 2147585966, i64 2147586009, i64 2147586049}
!6426 = !DILocation(line: 67, column: 1, scope: !6312)
!6427 = !{i64 2147586174, i64 2147586217, i64 2147586257}
!6428 = !DILocation(line: 68, column: 1, scope: !6312)
!6429 = !{i64 2147586385, i64 2147586428, i64 2147586468}
!6430 = !DILocation(line: 69, column: 1, scope: !6312)
!6431 = !{i64 2147586620, i64 2147586663, i64 2147586703}
!6432 = !DILocation(line: 70, column: 1, scope: !6312)
!6433 = !{i64 2147586849, i64 2147586892, i64 2147586932}
!6434 = !DILocation(line: 71, column: 1, scope: !6312)
!6435 = !{i64 2147587066, i64 2147587109, i64 2147587149}
!6436 = !DILocation(line: 72, column: 1, scope: !6312)
!6437 = !{i64 2147587295, i64 2147587338, i64 2147587378}
!6438 = !DILocation(line: 73, column: 1, scope: !6312)
!6439 = !{i64 2147587533, i64 2147587576, i64 2147587616}
!6440 = !DILocation(line: 74, column: 1, scope: !6312)
!6441 = !{i64 2147587765, i64 2147587808, i64 2147587848}
!6442 = !DILocation(line: 75, column: 1, scope: !6312)
!6443 = !{i64 2147587991, i64 2147588034, i64 2147588074}
!6444 = !DILocation(line: 76, column: 1, scope: !6312)
!6445 = !{i64 2147588208, i64 2147588251, i64 2147588291}
!6446 = !DILocation(line: 77, column: 1, scope: !6312)
!6447 = !{i64 2147588440, i64 2147588483, i64 2147588523}
!6448 = !DILocation(line: 78, column: 1, scope: !6312)
!6449 = !{i64 2147588666, i64 2147588709, i64 2147588749}
!6450 = !DILocation(line: 79, column: 1, scope: !6312)
!6451 = !{i64 2147588880, i64 2147588923, i64 2147588963}
!6452 = !DILocation(line: 80, column: 1, scope: !6312)
!6453 = !{i64 2147589100, i64 2147589143, i64 2147589183}
!6454 = !DILocation(line: 81, column: 1, scope: !6312)
!6455 = !{i64 2147589332, i64 2147589375, i64 2147589415}
!6456 = !DILocation(line: 82, column: 1, scope: !6312)
!6457 = !{i64 2147589540, i64 2147589583, i64 2147589623}
!6458 = !DILocation(line: 83, column: 1, scope: !6312)
!6459 = !{i64 2147589745, i64 2147589788, i64 2147589828}
!6460 = !DILocation(line: 84, column: 1, scope: !6312)
!6461 = !{i64 2147589962, i64 2147590005, i64 2147590045}
!6462 = !DILocation(line: 85, column: 1, scope: !6312)
!6463 = !{i64 2147590176, i64 2147590219, i64 2147590259}
!6464 = !DILocation(line: 86, column: 1, scope: !6312)
!6465 = !{i64 2147590402, i64 2147590445, i64 2147590485}
!6466 = !DILocation(line: 87, column: 1, scope: !6312)
!6467 = !{i64 2147590622, i64 2147590665, i64 2147590705}
!6468 = !DILocation(line: 88, column: 1, scope: !6312)
!6469 = !{i64 2147590827, i64 2147590870, i64 2147590910}
!6470 = !DILocation(line: 89, column: 1, scope: !6312)
!6471 = !{i64 2147595120, i64 2147595163, i64 2147595203}
!6472 = !DILocation(line: 90, column: 1, scope: !6312)
!6473 = !{i64 2147595355, i64 2147595398, i64 2147595438}
!6474 = !DILocation(line: 91, column: 1, scope: !6312)
!6475 = !{i64 2147595605, i64 2147595648, i64 2147595688}
!6476 = !DILocation(line: 92, column: 1, scope: !6312)
!6477 = !{i64 2147595855, i64 2147595898, i64 2147595938}
!6478 = !DILocation(line: 93, column: 1, scope: !6312)
!6479 = !{i64 2147596093, i64 2147596136, i64 2147596176}
!6480 = !DILocation(line: 94, column: 1, scope: !6312)
!6481 = !{i64 2147596304, i64 2147596347, i64 2147596387}
!6482 = !DILocation(line: 95, column: 1, scope: !6312)
!6483 = !{i64 2147596521, i64 2147596564, i64 2147596604}
!6484 = !DILocation(line: 96, column: 1, scope: !6312)
!6485 = !{i64 2147596717, i64 2147596760, i64 2147596800}
!6486 = !DILocation(line: 97, column: 1, scope: !6312)
!6487 = !{i64 2147596919, i64 2147596962, i64 2147597002}
!6488 = !DILocation(line: 98, column: 1, scope: !6312)
!6489 = !{i64 2147597112, i64 2147597155, i64 2147597195}
!6490 = !DILocation(line: 99, column: 1, scope: !6312)
!6491 = !{i64 2147597320, i64 2147597363, i64 2147597403}
!6492 = !DILocation(line: 100, column: 1, scope: !6312)
!6493 = !{i64 2147597513, i64 2147597556, i64 2147597596}
!6494 = !DILocation(line: 101, column: 1, scope: !6312)
!6495 = !{i64 2147597718, i64 2147597761, i64 2147597801}
!6496 = !DILocation(line: 102, column: 1, scope: !6312)
!6497 = !{i64 2147597923, i64 2147597966, i64 2147598006}
!6498 = !DILocation(line: 103, column: 1, scope: !6312)
!6499 = !{i64 2147598128, i64 2147598171, i64 2147598211}
!6500 = !DILocation(line: 104, column: 1, scope: !6312)
!6501 = !{i64 2147598336, i64 2147598379, i64 2147598419}
!6502 = !DILocation(line: 105, column: 1, scope: !6312)
!6503 = !{i64 2147598532, i64 2147598575, i64 2147598615}
!6504 = !DILocation(line: 106, column: 1, scope: !6312)
!6505 = !{i64 2147598743, i64 2147598786, i64 2147598826}
!6506 = !DILocation(line: 107, column: 1, scope: !6312)
!6507 = !{i64 2147598954, i64 2147598997, i64 2147599037}
!6508 = !DILocation(line: 108, column: 1, scope: !6312)
!6509 = !{i64 2147599153, i64 2147599196, i64 2147599236}
!6510 = !DILocation(line: 109, column: 1, scope: !6312)
!6511 = !{i64 2147599328, i64 2147599371, i64 2147599411}
!6512 = !DILocation(line: 110, column: 1, scope: !6312)
!6513 = !{i64 2147599512, i64 2147599555, i64 2147599595}
!6514 = !DILocation(line: 111, column: 1, scope: !6312)
!6515 = !{i64 2147599714, i64 2147599757, i64 2147599797}
!6516 = !DILocation(line: 112, column: 1, scope: !6312)
!6517 = !{i64 2147599895, i64 2147599938, i64 2147599978}
!6518 = !DILocation(line: 113, column: 1, scope: !6312)
!6519 = !{i64 2147600094, i64 2147600137, i64 2147600177}
!6520 = !DILocation(line: 114, column: 1, scope: !6312)
!6521 = !{i64 2147600299, i64 2147600342, i64 2147600382}
!6522 = !DILocation(line: 115, column: 1, scope: !6312)
!6523 = !{i64 2147600492, i64 2147600535, i64 2147600575}
!6524 = !DILocation(line: 116, column: 1, scope: !6312)
!6525 = !{i64 2147600658, i64 2147600701, i64 2147600741}
!6526 = !DILocation(line: 117, column: 1, scope: !6312)
!6527 = !{i64 2147600842, i64 2147600885, i64 2147600925}
!6528 = !DILocation(line: 118, column: 1, scope: !6312)
!6529 = !{i64 2147601032, i64 2147601075, i64 2147601115}
!6530 = !DILocation(line: 119, column: 1, scope: !6312)
!6531 = !{i64 2147601216, i64 2147601259, i64 2147601299}
!6532 = !DILocation(line: 120, column: 1, scope: !6312)
!6533 = !{i64 2147601430, i64 2147601473, i64 2147601513}
!6534 = !DILocation(line: 121, column: 1, scope: !6312)
!6535 = !{i64 2147601641, i64 2147601684, i64 2147601724}
!6536 = !DILocation(line: 122, column: 1, scope: !6312)
!6537 = !{i64 2147601864, i64 2147601907, i64 2147601947}
!6538 = !DILocation(line: 123, column: 1, scope: !6312)
!6539 = !{i64 2147602048, i64 2147602091, i64 2147602131}
!6540 = !DILocation(line: 124, column: 1, scope: !6312)
!6541 = !{i64 2147602262, i64 2147602305, i64 2147602345}
!6542 = !DILocation(line: 125, column: 1, scope: !6312)
!6543 = !{i64 2147602428, i64 2147602471, i64 2147602511}
!6544 = !DILocation(line: 126, column: 1, scope: !6312)
!6545 = !{i64 2147602609, i64 2147602652, i64 2147602692}
!6546 = !DILocation(line: 127, column: 1, scope: !6312)
!6547 = !{i64 2147602802, i64 2147602845, i64 2147602885}
!6548 = !DILocation(line: 128, column: 1, scope: !6312)
!6549 = !{i64 2147603028, i64 2147603071, i64 2147603111}
!6550 = !DILocation(line: 129, column: 1, scope: !6312)
!6551 = !{i64 2147603242, i64 2147603285, i64 2147603325}
!6552 = !DILocation(line: 130, column: 1, scope: !6312)
!6553 = !{i64 2147603468, i64 2147603511, i64 2147603551}
!6554 = !DILocation(line: 131, column: 1, scope: !6312)
!6555 = !{i64 2147603685, i64 2147603728, i64 2147603768}
!6556 = !DILocation(line: 132, column: 1, scope: !6312)
!6557 = !{i64 2147603962, i64 2147604005, i64 2147604045}
!6558 = !DILocation(line: 133, column: 1, scope: !6312)
!6559 = !{i64 2147604188, i64 2147604231, i64 2147604271}
!6560 = !DILocation(line: 134, column: 1, scope: !6312)
!6561 = !{i64 2147608457, i64 2147608500, i64 2147608540}
!6562 = !DILocation(line: 135, column: 1, scope: !6312)
!6563 = !{i64 2147608653, i64 2147608696, i64 2147608736}
!6564 = !DILocation(line: 136, column: 1, scope: !6312)
!6565 = !{i64 2147608918, i64 2147608961, i64 2147609001}
!6566 = !DILocation(line: 137, column: 1, scope: !6312)
!6567 = !{i64 2147609132, i64 2147609175, i64 2147609215}
!6568 = !DILocation(line: 138, column: 1, scope: !6312)
!6569 = !{i64 2147609307, i64 2147609350, i64 2147609390}
!6570 = !DILocation(line: 139, column: 1, scope: !6312)
!6571 = !{i64 2147609561, i64 2147609604, i64 2147609644}
!6572 = !DILocation(line: 140, column: 1, scope: !6312)
!6573 = !{i64 2147609760, i64 2147609803, i64 2147609843}
!6574 = !DILocation(line: 141, column: 1, scope: !6312)
!6575 = !{i64 2147610002, i64 2147610045, i64 2147610085}
!6576 = !DILocation(line: 142, column: 1, scope: !6312)
!6577 = !{i64 2147610165, i64 2147610208, i64 2147610248}
!6578 = !DILocation(line: 143, column: 1, scope: !6312)
!6579 = !{i64 2147610352, i64 2147610395, i64 2147610435}
!6580 = !DILocation(line: 144, column: 1, scope: !6312)
!6581 = !{i64 2147610560, i64 2147610603, i64 2147610643}
!6582 = !DILocation(line: 145, column: 1, scope: !6312)
!6583 = !{i64 2147610756, i64 2147610799, i64 2147610839}
!6584 = !DILocation(line: 146, column: 1, scope: !6312)
!6585 = !{i64 2147610949, i64 2147610992, i64 2147611032}
!6586 = !DILocation(line: 147, column: 1, scope: !6312)
!6587 = !{i64 2147611132, i64 2147611175, i64 2147611215}
!6588 = !DILocation(line: 148, column: 1, scope: !6312)
!6589 = !{i64 2147611346, i64 2147611389, i64 2147611429}
!6590 = !DILocation(line: 149, column: 1, scope: !6312)
!6591 = !{i64 2147611557, i64 2147611600, i64 2147611640}
!6592 = !DILocation(line: 150, column: 1, scope: !6312)
!6593 = !{i64 2147611777, i64 2147611820, i64 2147611860}
!6594 = !DILocation(line: 151, column: 1, scope: !6312)
!6595 = !{i64 2147611984, i64 2147612027, i64 2147612067}
!6596 = !DILocation(line: 152, column: 1, scope: !6312)
!6597 = !{i64 2147612257, i64 2147612300, i64 2147612340}
!6598 = !DILocation(line: 153, column: 1, scope: !6312)
!6599 = !{i64 2147612505, i64 2147612548, i64 2147612588}
!6600 = !DILocation(line: 154, column: 1, scope: !6312)
!6601 = !{i64 2147612704, i64 2147612747, i64 2147612787}
!6602 = !DILocation(line: 155, column: 1, scope: !6312)
!6603 = !{i64 2147612939, i64 2147612982, i64 2147613022}
!6604 = !DILocation(line: 156, column: 1, scope: !6312)
!6605 = !{i64 2147613189, i64 2147613232, i64 2147613272}
!6606 = !DILocation(line: 157, column: 1, scope: !6312)
!6607 = !{i64 2147613391, i64 2147613434, i64 2147613474}
!6608 = !DILocation(line: 158, column: 1, scope: !6312)
!6609 = !{i64 2147613614, i64 2147613657, i64 2147613697}
!6610 = !DILocation(line: 159, column: 1, scope: !6312)
!6611 = !{i64 2147613828, i64 2147613871, i64 2147613911}
!6612 = !DILocation(line: 160, column: 1, scope: !6312)
!6613 = !{i64 2147614072, i64 2147614115, i64 2147614155}
!6614 = !DILocation(line: 161, column: 1, scope: !6312)
!6615 = !{i64 2147614301, i64 2147614344, i64 2147614384}
!6616 = !DILocation(line: 162, column: 1, scope: !6312)
!6617 = !{i64 2147614530, i64 2147614573, i64 2147614613}
!6618 = !DILocation(line: 163, column: 1, scope: !6312)
!6619 = !{i64 2147614738, i64 2147614781, i64 2147614821}
!6620 = !DILocation(line: 164, column: 1, scope: !6312)
!6621 = !{i64 2147614976, i64 2147615019, i64 2147615059}
!6622 = !DILocation(line: 165, column: 1, scope: !6312)
!6623 = !{i64 2147615202, i64 2147615245, i64 2147615285}
!6624 = !DILocation(line: 166, column: 1, scope: !6312)
!6625 = !{i64 2147615461, i64 2147615504, i64 2147615544}
!6626 = !DILocation(line: 167, column: 1, scope: !6312)
!6627 = !{i64 2147615681, i64 2147615724, i64 2147615764}
!6628 = !DILocation(line: 168, column: 1, scope: !6312)
!6629 = !{i64 2147615913, i64 2147615956, i64 2147615996}
!6630 = !DILocation(line: 169, column: 1, scope: !6312)
!6631 = !{i64 2147616154, i64 2147616197, i64 2147616237}
!6632 = !DILocation(line: 170, column: 1, scope: !6312)
!6633 = !{i64 2147616395, i64 2147616438, i64 2147616478}
!6634 = !DILocation(line: 171, column: 1, scope: !6312)
!6635 = !{i64 2147616618, i64 2147616661, i64 2147616701}
!6636 = !DILocation(line: 172, column: 1, scope: !6312)
!6637 = !{i64 2147620896, i64 2147620939, i64 2147620979}
!6638 = !DILocation(line: 173, column: 1, scope: !6312)
!6639 = !{i64 2147621137, i64 2147621180, i64 2147621220}
!6640 = !DILocation(line: 174, column: 1, scope: !6312)
!6641 = !{i64 2147621324, i64 2147621367, i64 2147621407}
!6642 = !DILocation(line: 175, column: 1, scope: !6312)
!6643 = !{i64 2147621511, i64 2147621554, i64 2147621594}
!6644 = !DILocation(line: 176, column: 1, scope: !6312)
!6645 = !{i64 2147621674, i64 2147621717, i64 2147621757}
!6646 = !DILocation(line: 177, column: 1, scope: !6312)
!6647 = !{i64 2147621879, i64 2147621922, i64 2147621962}
!6648 = !DILocation(line: 178, column: 1, scope: !6312)
!6649 = !{i64 2147622072, i64 2147622115, i64 2147622155}
!6650 = !DILocation(line: 179, column: 1, scope: !6312)
!6651 = !{i64 2147622331, i64 2147622374, i64 2147622414}
!6652 = !DILocation(line: 180, column: 1, scope: !6312)
!6653 = !{i64 2147622554, i64 2147622597, i64 2147622637}
!6654 = !DILocation(line: 181, column: 1, scope: !6312)
!6655 = !{i64 2147622783, i64 2147622826, i64 2147622866}
!6656 = !DILocation(line: 182, column: 1, scope: !6312)
!6657 = !{i64 2147622997, i64 2147623040, i64 2147623080}
!6658 = !DILocation(line: 183, column: 1, scope: !6312)
!6659 = !{i64 2147623199, i64 2147623242, i64 2147623282}
!6660 = !DILocation(line: 184, column: 1, scope: !6312)
!6661 = !{i64 2147623395, i64 2147623438, i64 2147623478}
!6662 = !DILocation(line: 185, column: 1, scope: !6312)
!6663 = !{i64 2147623607, i64 2147623650, i64 2147623690}
!6664 = !DILocation(line: 186, column: 1, scope: !6312)
!6665 = !{i64 2147623828, i64 2147623871, i64 2147623911}
!6666 = !DILocation(line: 187, column: 1, scope: !6312)
!6667 = !{i64 2147624042, i64 2147624085, i64 2147624125}
!6668 = !DILocation(line: 188, column: 1, scope: !6312)
!6669 = !{i64 2147624232, i64 2147624275, i64 2147624315}
!6670 = !DILocation(line: 189, column: 1, scope: !6312)
!6671 = !{i64 2147624431, i64 2147624474, i64 2147624514}
!6672 = !DILocation(line: 190, column: 1, scope: !6312)
!6673 = !{i64 2147624636, i64 2147624679, i64 2147624719}
!6674 = !DILocation(line: 191, column: 1, scope: !6312)
!6675 = !{i64 2147624856, i64 2147624899, i64 2147624939}
!6676 = !DILocation(line: 192, column: 1, scope: !6312)
!6677 = !{i64 2147625057, i64 2147625100, i64 2147625140}
!6678 = !DILocation(line: 193, column: 1, scope: !6312)
!6679 = !{i64 2147625256, i64 2147625299, i64 2147625339}
!6680 = !DILocation(line: 194, column: 1, scope: !6312)
!6681 = !{i64 2147625461, i64 2147625504, i64 2147625544}
!6682 = !DILocation(line: 195, column: 1, scope: !6312)
!6683 = !{i64 2147625630, i64 2147625673, i64 2147625713}
!6684 = !DILocation(line: 196, column: 1, scope: !6312)
!6685 = !{i64 2147625814, i64 2147625857, i64 2147625897}
!6686 = !DILocation(line: 197, column: 1, scope: !6312)
!6687 = !{i64 2147625998, i64 2147626041, i64 2147626081}
!6688 = !DILocation(line: 198, column: 1, scope: !6312)
!6689 = !{i64 2147626185, i64 2147626228, i64 2147626268}
!6690 = !DILocation(line: 199, column: 1, scope: !6312)
!6691 = !{i64 2147626369, i64 2147626412, i64 2147626452}
!6692 = !DILocation(line: 200, column: 1, scope: !6312)
!6693 = !{i64 2147626607, i64 2147626650, i64 2147626690}
!6694 = !DILocation(line: 201, column: 1, scope: !6312)
!6695 = !{i64 2147626837, i64 2147626880, i64 2147626920}
!6696 = !DILocation(line: 202, column: 1, scope: !6312)
!6697 = !{i64 2147627066, i64 2147627109, i64 2147627149}
!6698 = !DILocation(line: 203, column: 1, scope: !6312)
!6699 = !{i64 2147627253, i64 2147627296, i64 2147627336}
!6700 = !DILocation(line: 204, column: 1, scope: !6312)
!6701 = !{i64 2147627449, i64 2147627492, i64 2147627532}
!6702 = !DILocation(line: 205, column: 1, scope: !6312)
!6703 = !{i64 2147627657, i64 2147627700, i64 2147627740}
!6704 = !DILocation(line: 206, column: 1, scope: !6312)
!6705 = !{i64 2147627869, i64 2147627912, i64 2147627952}
!6706 = !DILocation(line: 207, column: 1, scope: !6312)
!6707 = !{i64 2147628068, i64 2147628111, i64 2147628151}
!6708 = !DILocation(line: 208, column: 1, scope: !6312)
!6709 = !{i64 2147628306, i64 2147628349, i64 2147628389}
!6710 = !DILocation(line: 209, column: 1, scope: !6312)
!6711 = !{i64 2147628502, i64 2147628545, i64 2147628585}
!6712 = !DILocation(line: 210, column: 1, scope: !6312)
!6713 = !{i64 2147628704, i64 2147628747, i64 2147628787}
!6714 = !DILocation(line: 211, column: 1, scope: !6312)
!6715 = !{i64 2147628897, i64 2147628940, i64 2147628980}
!6716 = !DILocation(line: 212, column: 1, scope: !6312)
!6717 = !{i64 2147629131, i64 2147629174, i64 2147629214}
!6718 = !DILocation(line: 213, column: 1, scope: !6312)
!6719 = !{i64 2147629294, i64 2147629337, i64 2147629377}
!6720 = !DILocation(line: 214, column: 1, scope: !6312)
!6721 = !{i64 2147629533, i64 2147629576, i64 2147629616}
!6722 = !DILocation(line: 215, column: 1, scope: !6312)
!6723 = !{i64 2147629772, i64 2147629815, i64 2147629855}
!6724 = !DILocation(line: 216, column: 1, scope: !6312)
!6725 = !{i64 2147630008, i64 2147630051, i64 2147630091}
!6726 = !DILocation(line: 217, column: 1, scope: !6312)
!6727 = !{i64 2147634299, i64 2147634342, i64 2147634382}
!6728 = !DILocation(line: 218, column: 1, scope: !6312)
!6729 = !{i64 2147634486, i64 2147634529, i64 2147634569}
!6730 = !DILocation(line: 219, column: 1, scope: !6312)
!6731 = !{i64 2147634685, i64 2147634728, i64 2147634768}
!6732 = !DILocation(line: 220, column: 1, scope: !6312)
!6733 = !{i64 2147634956, i64 2147634999, i64 2147635039}
!6734 = !DILocation(line: 221, column: 1, scope: !6312)
!6735 = !{i64 2147635131, i64 2147635174, i64 2147635214}
!6736 = !DILocation(line: 222, column: 1, scope: !6312)
!6737 = !{i64 2147635365, i64 2147635408, i64 2147635448}
!6738 = !DILocation(line: 223, column: 1, scope: !6312)
!6739 = !{i64 2147635573, i64 2147635616, i64 2147635656}
!6740 = !DILocation(line: 224, column: 1, scope: !6312)
!6741 = !{i64 2147635791, i64 2147635834, i64 2147635874}
!6742 = !DILocation(line: 225, column: 1, scope: !6312)
!6743 = !{i64 2147635981, i64 2147636024, i64 2147636064}
!6744 = !DILocation(line: 226, column: 1, scope: !6312)
!6745 = !{i64 2147636213, i64 2147636256, i64 2147636296}
!6746 = !DILocation(line: 227, column: 1, scope: !6312)
!6747 = !{i64 2147636433, i64 2147636476, i64 2147636516}
!6748 = !DILocation(line: 228, column: 1, scope: !6312)
!6749 = !{i64 2147636629, i64 2147636672, i64 2147636712}
!6750 = !DILocation(line: 229, column: 1, scope: !6312)
!6751 = !{i64 2147636835, i64 2147636878, i64 2147636918}
!6752 = !DILocation(line: 230, column: 1, scope: !6312)
!6753 = !{i64 2147637040, i64 2147637083, i64 2147637123}
!6754 = !DILocation(line: 231, column: 1, scope: !6312)
!6755 = !{i64 2147637266, i64 2147637309, i64 2147637349}
!6756 = !DILocation(line: 232, column: 1, scope: !6312)
!6757 = !{i64 2147637474, i64 2147637517, i64 2147637557}
!6758 = !DILocation(line: 233, column: 1, scope: !6312)
!6759 = !{i64 2147637670, i64 2147637713, i64 2147637753}
!6760 = !DILocation(line: 234, column: 1, scope: !6312)
!6761 = !{i64 2147637902, i64 2147637945, i64 2147637985}
!6762 = !DILocation(line: 235, column: 1, scope: !6312)
!6763 = !{i64 2147638086, i64 2147638129, i64 2147638169}
!6764 = !DILocation(line: 236, column: 1, scope: !6312)
!6765 = !{i64 2147638295, i64 2147638338, i64 2147638378}
!6766 = !DILocation(line: 237, column: 1, scope: !6312)
!6767 = !{i64 2147638503, i64 2147638546, i64 2147638586}
!6768 = !DILocation(line: 238, column: 1, scope: !6312)
!6769 = !{i64 2147638699, i64 2147638742, i64 2147638782}
!6770 = !DILocation(line: 239, column: 1, scope: !6312)
!6771 = !{i64 2147638883, i64 2147638926, i64 2147638966}
!6772 = !DILocation(line: 240, column: 1, scope: !6312)
!6773 = !{i64 2147639109, i64 2147639152, i64 2147639192}
!6774 = !DILocation(line: 241, column: 1, scope: !6312)
!6775 = !{i64 2147639335, i64 2147639378, i64 2147639418}
!6776 = !DILocation(line: 242, column: 1, scope: !6312)
!6777 = !{i64 2147639561, i64 2147639604, i64 2147639644}
!6778 = !DILocation(line: 243, column: 1, scope: !6312)
!6779 = !{i64 2147639787, i64 2147639830, i64 2147639870}
!6780 = !DILocation(line: 244, column: 1, scope: !6312)
!6781 = !{i64 2147640013, i64 2147640056, i64 2147640096}
!6782 = !DILocation(line: 245, column: 1, scope: !6312)
!6783 = !{i64 2147640245, i64 2147640288, i64 2147640328}
!6784 = !DILocation(line: 246, column: 1, scope: !6312)
!6785 = !{i64 2147640483, i64 2147640526, i64 2147640566}
!6786 = !DILocation(line: 247, column: 1, scope: !6312)
!6787 = !{i64 2147640703, i64 2147640746, i64 2147640786}
!6788 = !DILocation(line: 248, column: 1, scope: !6312)
!6789 = !{i64 2147640947, i64 2147640990, i64 2147641030}
!6790 = !DILocation(line: 249, column: 1, scope: !6312)
!6791 = !{i64 2147641188, i64 2147641231, i64 2147641271}
!6792 = !DILocation(line: 250, column: 1, scope: !6312)
!6793 = !{i64 2147641423, i64 2147641466, i64 2147641506}
!6794 = !DILocation(line: 251, column: 1, scope: !6312)
!6795 = !{i64 2147641655, i64 2147641698, i64 2147641738}
!6796 = !DILocation(line: 252, column: 1, scope: !6312)
!6797 = !{i64 2147641857, i64 2147641900, i64 2147641940}
!6798 = !DILocation(line: 253, column: 1, scope: !6312)
!6799 = !{i64 2147642107, i64 2147642150, i64 2147642190}
!6800 = !DILocation(line: 254, column: 1, scope: !6312)
!6801 = !{i64 2147642345, i64 2147642388, i64 2147642428}
!6802 = !DILocation(line: 255, column: 1, scope: !6312)
!6803 = !{i64 2147642553, i64 2147642596, i64 2147642636}
!6804 = !DILocation(line: 256, column: 1, scope: !6312)
!6805 = !{i64 2147642749, i64 2147642792, i64 2147642832}
!6806 = !DILocation(line: 257, column: 1, scope: !6312)
!6807 = !{i64 2147646994, i64 2147647037, i64 2147647077}
!6808 = !DILocation(line: 258, column: 1, scope: !6312)
!6809 = !{i64 2147647211, i64 2147647254, i64 2147647294}
!6810 = !DILocation(line: 259, column: 1, scope: !6312)
!6811 = !{i64 2147647416, i64 2147647459, i64 2147647499}
!6812 = !DILocation(line: 260, column: 1, scope: !6312)
!6813 = !{i64 2147647651, i64 2147647694, i64 2147647734}
!6814 = !DILocation(line: 261, column: 1, scope: !6312)
!6815 = !{i64 2147647874, i64 2147647917, i64 2147647957}
!6816 = !DILocation(line: 262, column: 1, scope: !6312)
!6817 = !{i64 2147648098, i64 2147648141, i64 2147648181}
!6818 = !DILocation(line: 263, column: 1, scope: !6312)
!6819 = !{i64 2147648336, i64 2147648379, i64 2147648419}
!6820 = !DILocation(line: 264, column: 1, scope: !6312)
!6821 = !{i64 2147648574, i64 2147648617, i64 2147648657}
!6822 = !DILocation(line: 265, column: 1, scope: !6312)
!6823 = !{i64 2147648746, i64 2147648789, i64 2147648829}
!6824 = !DILocation(line: 266, column: 1, scope: !6312)
!6825 = !{i64 2147648961, i64 2147649004, i64 2147649044}
!6826 = !DILocation(line: 267, column: 1, scope: !6312)
!6827 = !{i64 2147649175, i64 2147649218, i64 2147649258}
!6828 = !DILocation(line: 268, column: 1, scope: !6312)
!6829 = !{i64 2147649377, i64 2147649420, i64 2147649460}
!6830 = !DILocation(line: 269, column: 1, scope: !6312)
!6831 = !{i64 2147649594, i64 2147649637, i64 2147649677}
!6832 = !DILocation(line: 270, column: 1, scope: !6312)
!6833 = !{i64 2147649847, i64 2147649890, i64 2147649930}
!6834 = !DILocation(line: 271, column: 1, scope: !6312)
!6835 = !{i64 2147650091, i64 2147650134, i64 2147650174}
!6836 = !DILocation(line: 272, column: 1, scope: !6312)
!6837 = !{i64 2147650308, i64 2147650351, i64 2147650391}
!6838 = !DILocation(line: 273, column: 1, scope: !6312)
!6839 = !{i64 2147650513, i64 2147650556, i64 2147650596}
!6840 = !DILocation(line: 274, column: 1, scope: !6312)
!6841 = !{i64 2147650706, i64 2147650749, i64 2147650789}
!6842 = !DILocation(line: 275, column: 1, scope: !6312)
!6843 = !{i64 2147650959, i64 2147651002, i64 2147651042}
!6844 = !DILocation(line: 276, column: 1, scope: !6312)
!6845 = !{i64 2147651167, i64 2147651210, i64 2147651250}
!6846 = !DILocation(line: 277, column: 1, scope: !6312)
!6847 = !{i64 2147651363, i64 2147651406, i64 2147651446}
!6848 = !DILocation(line: 278, column: 1, scope: !6312)
!6849 = !{i64 2147651577, i64 2147651620, i64 2147651660}
!6850 = !DILocation(line: 279, column: 1, scope: !6312)
!6851 = !{i64 2147651785, i64 2147651828, i64 2147651868}
!6852 = !DILocation(line: 280, column: 1, scope: !6312)
!6853 = !{i64 2147651975, i64 2147652018, i64 2147652058}
!6854 = !DILocation(line: 281, column: 1, scope: !6312)
!6855 = !{i64 2147652189, i64 2147652232, i64 2147652272}
!6856 = !DILocation(line: 282, column: 1, scope: !6312)
!6857 = !{i64 2147652451, i64 2147652494, i64 2147652534}
!6858 = !DILocation(line: 283, column: 1, scope: !6312)
!6859 = !{i64 2147652662, i64 2147652705, i64 2147652745}
!6860 = !DILocation(line: 284, column: 1, scope: !6312)
!6861 = !{i64 2147652906, i64 2147652949, i64 2147652989}
!6862 = !DILocation(line: 285, column: 1, scope: !6312)
!6863 = !{i64 2147653117, i64 2147653160, i64 2147653200}
!6864 = !DILocation(line: 286, column: 1, scope: !6312)
!6865 = !{i64 2147653346, i64 2147653389, i64 2147653429}
!6866 = !DILocation(line: 287, column: 1, scope: !6312)
!6867 = !{i64 2147653611, i64 2147653654, i64 2147653694}
!6868 = !DILocation(line: 288, column: 1, scope: !6312)
!6869 = !{i64 2147653816, i64 2147653859, i64 2147653899}
!6870 = !DILocation(line: 289, column: 1, scope: !6312)
!6871 = !{i64 2147654012, i64 2147654055, i64 2147654095}
!6872 = !DILocation(line: 290, column: 1, scope: !6312)
!6873 = !{i64 2147654235, i64 2147654278, i64 2147654318}
!6874 = !DILocation(line: 291, column: 1, scope: !6312)
!6875 = !{i64 2147654398, i64 2147654441, i64 2147654481}
!6876 = !DILocation(line: 292, column: 1, scope: !6312)
!6877 = !{i64 2147654603, i64 2147654646, i64 2147654686}
!6878 = !DILocation(line: 293, column: 1, scope: !6312)
!6879 = !{i64 2147654823, i64 2147654866, i64 2147654906}
!6880 = !DILocation(line: 294, column: 1, scope: !6312)
!6881 = !{i64 2147655037, i64 2147655080, i64 2147655120}
!6882 = !DILocation(line: 295, column: 1, scope: !6312)
!6883 = !{i64 2147655281, i64 2147655324, i64 2147655364}
!6884 = !DILocation(line: 296, column: 1, scope: !6312)
!6885 = !{i64 2147659574, i64 2147659617, i64 2147659657}
!6886 = !DILocation(line: 297, column: 1, scope: !6312)
!6887 = !{i64 2147659788, i64 2147659831, i64 2147659871}
!6888 = !DILocation(line: 298, column: 1, scope: !6312)
!6889 = !{i64 2147659999, i64 2147660042, i64 2147660082}
!6890 = !DILocation(line: 299, column: 1, scope: !6312)
!6891 = !{i64 2147660192, i64 2147660235, i64 2147660275}
!6892 = !DILocation(line: 300, column: 1, scope: !6312)
!6893 = !{i64 2147660391, i64 2147660434, i64 2147660474}
!6894 = !DILocation(line: 301, column: 1, scope: !6312)
!6895 = !{i64 2147660563, i64 2147660606, i64 2147660646}
!6896 = !DILocation(line: 302, column: 1, scope: !6312)
!6897 = !{i64 2147660756, i64 2147660799, i64 2147660839}
!6898 = !DILocation(line: 303, column: 1, scope: !6312)
!6899 = !{i64 2147660952, i64 2147660995, i64 2147661035}
!6900 = !DILocation(line: 304, column: 1, scope: !6312)
!6901 = !{i64 2147661115, i64 2147661158, i64 2147661198}
!6902 = !DILocation(line: 305, column: 1, scope: !6312)
!6903 = !{i64 2147661317, i64 2147661360, i64 2147661400}
!6904 = !DILocation(line: 306, column: 1, scope: !6312)
!6905 = !{i64 2147661522, i64 2147661565, i64 2147661605}
!6906 = !DILocation(line: 307, column: 1, scope: !6312)
!6907 = !{i64 2147661730, i64 2147661773, i64 2147661813}
!6908 = !DILocation(line: 308, column: 1, scope: !6312)
!6909 = !{i64 2147661923, i64 2147661966, i64 2147662006}
!6910 = !DILocation(line: 309, column: 1, scope: !6312)
!6911 = !{i64 2147662110, i64 2147662153, i64 2147662193}
!6912 = !DILocation(line: 310, column: 1, scope: !6312)
!6913 = !{i64 2147662337, i64 2147662380, i64 2147662420}
!6914 = !DILocation(line: 311, column: 1, scope: !6312)
!6915 = !{i64 2147662554, i64 2147662597, i64 2147662637}
!6916 = !DILocation(line: 312, column: 1, scope: !6312)
!6917 = !{i64 2147662846, i64 2147662889, i64 2147662929}
!6918 = !DILocation(line: 313, column: 1, scope: !6312)
!6919 = !{i64 2147663078, i64 2147663121, i64 2147663161}
!6920 = !DILocation(line: 314, column: 1, scope: !6312)
!6921 = !{i64 2147663295, i64 2147663338, i64 2147663378}
!6922 = !DILocation(line: 315, column: 1, scope: !6312)
!6923 = !{i64 2147663502, i64 2147663545, i64 2147663585}
!6924 = !DILocation(line: 316, column: 1, scope: !6312)
!6925 = !{i64 2147663703, i64 2147663746, i64 2147663786}
!6926 = !DILocation(line: 317, column: 1, scope: !6312)
!6927 = !{i64 2147663935, i64 2147663978, i64 2147664018}
!6928 = !DILocation(line: 318, column: 1, scope: !6312)
!6929 = !{i64 2147664143, i64 2147664186, i64 2147664226}
!6930 = !DILocation(line: 319, column: 1, scope: !6312)
!6931 = !{i64 2147664333, i64 2147664376, i64 2147664416}
!6932 = !DILocation(line: 320, column: 1, scope: !6312)
!6933 = !{i64 2147664559, i64 2147664602, i64 2147664642}
!6934 = !DILocation(line: 321, column: 1, scope: !6312)
!6935 = !{i64 2147664748, i64 2147664791, i64 2147664831}
!6936 = !DILocation(line: 322, column: 1, scope: !6312)
!6937 = !{i64 2147665019, i64 2147665062, i64 2147665102}
!6938 = !DILocation(line: 323, column: 1, scope: !6312)
!6939 = !{i64 2147665239, i64 2147665282, i64 2147665322}
!6940 = !DILocation(line: 324, column: 1, scope: !6312)
!6941 = !{i64 2147665492, i64 2147665535, i64 2147665575}
!6942 = !DILocation(line: 325, column: 1, scope: !6312)
!6943 = !{i64 2147665700, i64 2147665743, i64 2147665783}
!6944 = !DILocation(line: 326, column: 1, scope: !6312)
!6945 = !{i64 2147665932, i64 2147665975, i64 2147666015}
!6946 = !DILocation(line: 327, column: 1, scope: !6312)
!6947 = !{i64 2147666143, i64 2147666186, i64 2147666226}
!6948 = !DILocation(line: 328, column: 1, scope: !6312)
!6949 = !{i64 2147666333, i64 2147666376, i64 2147666416}
!6950 = !DILocation(line: 329, column: 1, scope: !6312)
!6951 = !{i64 2147666547, i64 2147666590, i64 2147666630}
!6952 = !DILocation(line: 330, column: 1, scope: !6312)
!6953 = !{i64 2147666746, i64 2147666789, i64 2147666829}
!6954 = !DILocation(line: 331, column: 1, scope: !6312)
!6955 = !{i64 2147666933, i64 2147666976, i64 2147667016}
!6956 = !DILocation(line: 332, column: 1, scope: !6312)
!6957 = !{i64 2147667141, i64 2147667184, i64 2147667224}
!6958 = !DILocation(line: 333, column: 1, scope: !6312)
!6959 = !{i64 2147667370, i64 2147667413, i64 2147667453}
!6960 = !DILocation(line: 334, column: 1, scope: !6312)
!6961 = !{i64 2147667572, i64 2147667615, i64 2147667655}
!6962 = !DILocation(line: 335, column: 1, scope: !6312)
!6963 = !{i64 2147667771, i64 2147667814, i64 2147667854}
!6964 = !DILocation(line: 336, column: 1, scope: !6312)
!6965 = !{i64 2147667961, i64 2147668004, i64 2147668044}
!6966 = !DILocation(line: 337, column: 1, scope: !6312)
!6967 = !{i64 2147668178, i64 2147668221, i64 2147668261}
!6968 = !DILocation(line: 339, column: 1, scope: !6312)
!6969 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !431, file: !431, line: 30, type: !438, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6970)
!6970 = !{!6971, !6972}
!6971 = !DILocalVariable(name: "arg", arg: 1, scope: !6969, file: !431, line: 30, type: !440)
!6972 = !DILocalVariable(name: "key", scope: !6969, file: !431, line: 32, type: !208)
!6973 = !DILocation(line: 0, scope: !6969)
!6974 = !DILocation(line: 37, column: 2, scope: !6969)
!6975 = !DILocation(line: 38, column: 2, scope: !6969)
!6976 = !DILocation(line: 55, column: 2, scope: !6977, inlinedAt: !6984)
!6977 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6981)
!6978 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!32}
!6981 = !{!6982, !6983}
!6982 = !DILocalVariable(name: "key", scope: !6977, file: !6978, line: 44, type: !32)
!6983 = !DILocalVariable(name: "tmp", scope: !6977, file: !6978, line: 53, type: !32)
!6984 = distinct !DILocation(line: 40, column: 8, scope: !6969)
!6985 = !{i64 2507014}
!6986 = !DILocation(line: 0, scope: !6977, inlinedAt: !6984)
!6987 = !DILocalVariable(name: "key", arg: 1, scope: !6988, file: !6978, line: 84, type: !32)
!6988 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{null, !32}
!6991 = !{!6987}
!6992 = !DILocation(line: 0, scope: !6988, inlinedAt: !6993)
!6993 = distinct !DILocation(line: 47, column: 2, scope: !6969)
!6994 = !DILocation(line: 95, column: 2, scope: !6988, inlinedAt: !6993)
!6995 = !{i64 2507831}
!6996 = !DILocation(line: 51, column: 18, scope: !6969)
!6997 = !DILocation(line: 53, column: 2, scope: !6969)
!6998 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6999, file: !6999, line: 1609, type: !3440, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6999 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7000 = !DILocation(line: 1611, column: 3, scope: !6998)
!7001 = !DILocation(line: 1612, column: 1, scope: !6998)
!7002 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6999, file: !6999, line: 1629, type: !3440, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!7003 = !DILocation(line: 1631, column: 3, scope: !7002)
!7004 = !DILocation(line: 1632, column: 1, scope: !7002)
!7005 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !461, file: !461, line: 26, type: !467, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7006)
!7006 = !{!7007}
!7007 = !DILocalVariable(name: "dev", arg: 1, scope: !7005, file: !461, line: 26, type: !469)
!7008 = !DILocation(line: 0, scope: !7005)
!7009 = !DILocation(line: 68, column: 2, scope: !7005)
!7010 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7011, file: !7011, line: 14, type: !5292, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7012)
!7011 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7012 = !{!7013, !7014}
!7013 = !DILocalVariable(name: "fmt", arg: 1, scope: !7010, file: !7011, line: 14, type: !140)
!7014 = !DILocalVariable(name: "ap", scope: !7010, file: !7011, line: 16, type: !7015)
!7015 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4360, line: 99, baseType: !7016)
!7016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4360, line: 40, baseType: !7017)
!7017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7011, baseType: !7018)
!7018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7019)
!7019 = !{!7020}
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7018, file: !7011, line: 16, baseType: !124, size: 32)
!7021 = !DILocation(line: 0, scope: !7010)
!7022 = !DILocation(line: 16, column: 2, scope: !7010)
!7023 = !DILocation(line: 16, column: 10, scope: !7010)
!7024 = !DILocation(line: 18, column: 2, scope: !7010)
!7025 = !DILocation(line: 19, column: 2, scope: !7010)
!7026 = !DILocation(line: 20, column: 2, scope: !7010)
!7027 = !DILocation(line: 21, column: 1, scope: !7010)
!7028 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7011, file: !7011, line: 23, type: !7029, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7031)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{null, !140, !7015}
!7031 = !{!7032, !7033}
!7032 = !DILocalVariable(name: "fmt", arg: 1, scope: !7028, file: !7011, line: 23, type: !140)
!7033 = !DILocalVariable(name: "ap", arg: 2, scope: !7028, file: !7011, line: 23, type: !7015)
!7034 = !DILocation(line: 0, scope: !7028)
!7035 = !DILocation(line: 25, column: 2, scope: !7028)
!7036 = !DILocation(line: 26, column: 1, scope: !7028)
!7037 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7011, file: !7011, line: 52, type: !7038, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7040)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{null, !125, !13, !272}
!7040 = !{!7041, !7042, !7043, !7044}
!7041 = !DILocalVariable(name: "level", arg: 1, scope: !7037, file: !7011, line: 52, type: !125)
!7042 = !DILocalVariable(name: "data", arg: 2, scope: !7037, file: !7011, line: 52, type: !13)
!7043 = !DILocalVariable(name: "size", arg: 3, scope: !7037, file: !7011, line: 52, type: !272)
!7044 = !DILocalVariable(name: "data_buffer", scope: !7037, file: !7011, line: 54, type: !140)
!7045 = !DILocation(line: 0, scope: !7037)
!7046 = !DILocation(line: 55, column: 14, scope: !7037)
!7047 = !DILocation(line: 55, column: 2, scope: !7037)
!7048 = !DILocation(line: 56, column: 3, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7037, file: !7011, line: 55, column: 20)
!7050 = !DILocation(line: 57, column: 3, scope: !7049)
!7051 = !DILocation(line: 59, column: 7, scope: !7049)
!7052 = distinct !{!7052, !7047, !7053}
!7053 = !DILocation(line: 65, column: 2, scope: !7037)
!7054 = !DILocation(line: 66, column: 1, scope: !7037)
!7055 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3604, file: !3604, line: 175, type: !3605, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7056)
!7056 = !{!7057}
!7057 = !DILocalVariable(name: "level", arg: 1, scope: !7055, file: !3604, line: 175, type: !125)
!7058 = !DILocation(line: 0, scope: !7055)
!7059 = !DILocation(line: 177, column: 2, scope: !7055)
!7060 = !DILocation(line: 189, column: 1, scope: !7055)
!7061 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7011, file: !7011, line: 28, type: !7062, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7064)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{null, !140, !272}
!7064 = !{!7065, !7066, !7067, !7069, !7071}
!7065 = !DILocalVariable(name: "data", arg: 1, scope: !7061, file: !7011, line: 28, type: !140)
!7066 = !DILocalVariable(name: "length", arg: 2, scope: !7061, file: !7011, line: 28, type: !272)
!7067 = !DILocalVariable(name: "i", scope: !7068, file: !7011, line: 30, type: !272)
!7068 = distinct !DILexicalBlock(scope: !7061, file: !7011, line: 30, column: 2)
!7069 = !DILocalVariable(name: "i", scope: !7070, file: !7011, line: 40, type: !272)
!7070 = distinct !DILexicalBlock(scope: !7061, file: !7011, line: 40, column: 2)
!7071 = !DILocalVariable(name: "c", scope: !7072, file: !7011, line: 42, type: !151)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !7011, line: 41, column: 19)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !7011, line: 41, column: 7)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !7011, line: 40, column: 54)
!7075 = distinct !DILexicalBlock(scope: !7070, file: !7011, line: 40, column: 2)
!7076 = !DILocation(line: 0, scope: !7061)
!7077 = !DILocation(line: 0, scope: !7068)
!7078 = !DILocation(line: 30, column: 2, scope: !7068)
!7079 = !DILocation(line: 38, column: 2, scope: !7061)
!7080 = !DILocation(line: 0, scope: !7070)
!7081 = !DILocation(line: 40, column: 2, scope: !7070)
!7082 = !DILocation(line: 31, column: 9, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !7011, line: 31, column: 7)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !7011, line: 30, column: 54)
!7085 = distinct !DILexicalBlock(scope: !7068, file: !7011, line: 30, column: 2)
!7086 = !DILocation(line: 31, column: 7, scope: !7084)
!7087 = !DILocation(line: 32, column: 35, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !7011, line: 31, column: 19)
!7089 = !DILocation(line: 32, column: 20, scope: !7088)
!7090 = !DILocation(line: 32, column: 4, scope: !7088)
!7091 = !DILocation(line: 33, column: 3, scope: !7088)
!7092 = !DILocation(line: 34, column: 4, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7083, file: !7011, line: 33, column: 10)
!7094 = !DILocation(line: 30, column: 50, scope: !7085)
!7095 = !DILocation(line: 30, column: 24, scope: !7085)
!7096 = distinct !{!7096, !7078, !7097}
!7097 = !DILocation(line: 36, column: 2, scope: !7068)
!7098 = !DILocation(line: 49, column: 2, scope: !7061)
!7099 = !DILocation(line: 50, column: 1, scope: !7061)
!7100 = !DILocation(line: 41, column: 9, scope: !7073)
!7101 = !DILocation(line: 41, column: 7, scope: !7074)
!7102 = !DILocation(line: 42, column: 22, scope: !7072)
!7103 = !DILocation(line: 0, scope: !7072)
!7104 = !DILocation(line: 44, column: 25, scope: !7072)
!7105 = !DILocation(line: 44, column: 17, scope: !7072)
!7106 = !DILocation(line: 44, column: 33, scope: !7072)
!7107 = !DILocation(line: 44, column: 4, scope: !7072)
!7108 = !DILocation(line: 45, column: 3, scope: !7072)
!7109 = !DILocation(line: 46, column: 4, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7073, file: !7011, line: 45, column: 10)
!7111 = !DILocation(line: 40, column: 50, scope: !7075)
!7112 = !DILocation(line: 40, column: 24, scope: !7075)
!7113 = distinct !{!7113, !7081, !7114}
!7114 = !DILocation(line: 48, column: 2, scope: !7070)
!7115 = distinct !DISubprogram(name: "isprint", scope: !6085, file: !6085, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7116)
!7116 = !{!7117}
!7117 = !DILocalVariable(name: "c", arg: 1, scope: !7115, file: !6085, line: 37, type: !125)
!7118 = !DILocation(line: 0, scope: !7115)
!7119 = !DILocation(line: 39, column: 38, scope: !7115)
!7120 = !DILocation(line: 39, column: 2, scope: !7115)
!7121 = distinct !DISubprogram(name: "_copy", scope: !7122, file: !7122, line: 40, type: !7123, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !7125)
!7122 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!32, !184, !32, !490, !32}
!7125 = !{!7126, !7127, !7128, !7129}
!7126 = !DILocalVariable(name: "to", arg: 1, scope: !7121, file: !7122, line: 40, type: !184)
!7127 = !DILocalVariable(name: "to_len", arg: 2, scope: !7121, file: !7122, line: 40, type: !32)
!7128 = !DILocalVariable(name: "from", arg: 3, scope: !7121, file: !7122, line: 41, type: !490)
!7129 = !DILocalVariable(name: "from_len", arg: 4, scope: !7121, file: !7122, line: 41, type: !32)
!7130 = !DILocation(line: 0, scope: !7121)
!7131 = !DILocation(line: 43, column: 15, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7121, file: !7122, line: 43, column: 6)
!7133 = !DILocation(line: 43, column: 6, scope: !7121)
!7134 = !DILocation(line: 44, column: 9, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7132, file: !7122, line: 43, column: 26)
!7136 = !DILocation(line: 45, column: 3, scope: !7135)
!7137 = !DILocation(line: 0, scope: !7132)
!7138 = !DILocation(line: 49, column: 1, scope: !7121)
!7139 = distinct !DISubprogram(name: "_set", scope: !7122, file: !7122, line: 51, type: !7140, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !7142)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{null, !124, !150, !32}
!7142 = !{!7143, !7144, !7145}
!7143 = !DILocalVariable(name: "to", arg: 1, scope: !7139, file: !7122, line: 51, type: !124)
!7144 = !DILocalVariable(name: "val", arg: 2, scope: !7139, file: !7122, line: 51, type: !150)
!7145 = !DILocalVariable(name: "len", arg: 3, scope: !7139, file: !7122, line: 51, type: !32)
!7146 = !DILocation(line: 0, scope: !7139)
!7147 = !DILocation(line: 53, column: 19, scope: !7139)
!7148 = !DILocation(line: 53, column: 8, scope: !7139)
!7149 = !DILocation(line: 54, column: 1, scope: !7139)
!7150 = distinct !DISubprogram(name: "_double_byte", scope: !7122, file: !7122, line: 59, type: !7151, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !7153)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!150, !150}
!7153 = !{!7154}
!7154 = !DILocalVariable(name: "a", arg: 1, scope: !7150, file: !7122, line: 59, type: !150)
!7155 = !DILocation(line: 0, scope: !7150)
!7156 = !DILocation(line: 61, column: 12, scope: !7150)
!7157 = !DILocation(line: 61, column: 27, scope: !7150)
!7158 = !DILocation(line: 61, column: 17, scope: !7150)
!7159 = !DILocation(line: 61, column: 2, scope: !7150)
!7160 = distinct !DISubprogram(name: "_compare", scope: !7122, file: !7122, line: 64, type: !7161, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !7163)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{!125, !490, !490, !272}
!7163 = !{!7164, !7165, !7166, !7167, !7168, !7169, !7170}
!7164 = !DILocalVariable(name: "a", arg: 1, scope: !7160, file: !7122, line: 64, type: !490)
!7165 = !DILocalVariable(name: "b", arg: 2, scope: !7160, file: !7122, line: 64, type: !490)
!7166 = !DILocalVariable(name: "size", arg: 3, scope: !7160, file: !7122, line: 64, type: !272)
!7167 = !DILocalVariable(name: "tempa", scope: !7160, file: !7122, line: 66, type: !490)
!7168 = !DILocalVariable(name: "tempb", scope: !7160, file: !7122, line: 67, type: !490)
!7169 = !DILocalVariable(name: "result", scope: !7160, file: !7122, line: 68, type: !150)
!7170 = !DILocalVariable(name: "i", scope: !7171, file: !7122, line: 70, type: !32)
!7171 = distinct !DILexicalBlock(scope: !7160, file: !7122, line: 70, column: 2)
!7172 = !DILocation(line: 0, scope: !7160)
!7173 = !DILocation(line: 0, scope: !7171)
!7174 = !DILocation(line: 70, column: 29, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7171, file: !7122, line: 70, column: 2)
!7176 = !DILocation(line: 70, column: 2, scope: !7171)
!7177 = !DILocation(line: 73, column: 2, scope: !7160)
!7178 = !DILocation(line: 71, column: 13, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7175, file: !7122, line: 70, column: 42)
!7180 = !DILocation(line: 71, column: 24, scope: !7179)
!7181 = !DILocation(line: 71, column: 22, scope: !7179)
!7182 = !DILocation(line: 71, column: 10, scope: !7179)
!7183 = !DILocation(line: 70, column: 38, scope: !7175)
!7184 = distinct !{!7184, !7176, !7185}
!7185 = !DILocation(line: 72, column: 2, scope: !7171)
!7186 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !501, file: !501, line: 62, type: !7187, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7189)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!125, !491, !490}
!7189 = !{!7190, !7191}
!7190 = !DILocalVariable(name: "s", arg: 1, scope: !7186, file: !501, line: 62, type: !491)
!7191 = !DILocalVariable(name: "k", arg: 2, scope: !7186, file: !501, line: 62, type: !490)
!7192 = !DILocation(line: 0, scope: !7186)
!7193 = !DILocation(line: 64, column: 9, scope: !7186)
!7194 = !DILocation(line: 64, column: 2, scope: !7186)
!7195 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !501, file: !501, line: 129, type: !7196, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7199)
!7196 = !DISubroutineType(types: !7197)
!7197 = !{!125, !184, !490, !7198}
!7198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!7199 = !{!7200, !7201, !7202, !7203, !7204}
!7200 = !DILocalVariable(name: "out", arg: 1, scope: !7195, file: !501, line: 129, type: !184)
!7201 = !DILocalVariable(name: "in", arg: 2, scope: !7195, file: !501, line: 129, type: !490)
!7202 = !DILocalVariable(name: "s", arg: 3, scope: !7195, file: !501, line: 129, type: !7198)
!7203 = !DILocalVariable(name: "state", scope: !7195, file: !501, line: 131, type: !311)
!7204 = !DILocalVariable(name: "i", scope: !7195, file: !501, line: 132, type: !32)
!7205 = !DILocation(line: 0, scope: !7195)
!7206 = !DILocation(line: 131, column: 2, scope: !7195)
!7207 = !DILocation(line: 131, column: 10, scope: !7195)
!7208 = !DILocation(line: 134, column: 10, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7195, file: !501, line: 134, column: 6)
!7210 = !DILocation(line: 134, column: 6, scope: !7195)
!7211 = !DILocation(line: 142, column: 8, scope: !7195)
!7212 = !DILocation(line: 144, column: 32, scope: !7195)
!7213 = !DILocation(line: 144, column: 2, scope: !7195)
!7214 = !DILocation(line: 146, column: 2, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7195, file: !501, line: 146, column: 2)
!7216 = !DILocation(line: 147, column: 3, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !501, line: 146, column: 31)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !501, line: 146, column: 2)
!7219 = !DILocation(line: 148, column: 3, scope: !7217)
!7220 = !DILocation(line: 149, column: 37, scope: !7217)
!7221 = !DILocation(line: 149, column: 33, scope: !7217)
!7222 = !DILocation(line: 149, column: 3, scope: !7217)
!7223 = !DILocation(line: 150, column: 3, scope: !7217)
!7224 = !DILocation(line: 146, column: 26, scope: !7218)
!7225 = !DILocation(line: 146, column: 21, scope: !7218)
!7226 = distinct !{!7226, !7214, !7227}
!7227 = !DILocation(line: 151, column: 2, scope: !7215)
!7228 = !DILocation(line: 144, column: 23, scope: !7195)
!7229 = !DILocation(line: 153, column: 2, scope: !7195)
!7230 = !DILocation(line: 154, column: 2, scope: !7195)
!7231 = !DILocation(line: 155, column: 2, scope: !7195)
!7232 = !DILocation(line: 157, column: 8, scope: !7195)
!7233 = !DILocation(line: 160, column: 2, scope: !7195)
!7234 = !DILocation(line: 163, column: 2, scope: !7195)
!7235 = !DILocation(line: 164, column: 1, scope: !7195)
!7236 = distinct !DISubprogram(name: "add_round_key", scope: !501, file: !501, line: 92, type: !7237, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7240)
!7237 = !DISubroutineType(types: !7238)
!7238 = !{null, !184, !7239}
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 32)
!7240 = !{!7241, !7242}
!7241 = !DILocalVariable(name: "s", arg: 1, scope: !7236, file: !501, line: 92, type: !184)
!7242 = !DILocalVariable(name: "k", arg: 2, scope: !7236, file: !501, line: 92, type: !7239)
!7243 = !DILocation(line: 0, scope: !7236)
!7244 = !DILocation(line: 94, column: 20, scope: !7236)
!7245 = !DILocation(line: 94, column: 25, scope: !7236)
!7246 = !DILocation(line: 94, column: 7, scope: !7236)
!7247 = !DILocation(line: 94, column: 51, scope: !7236)
!7248 = !DILocation(line: 94, column: 56, scope: !7236)
!7249 = !DILocation(line: 94, column: 33, scope: !7236)
!7250 = !DILocation(line: 94, column: 38, scope: !7236)
!7251 = !DILocation(line: 95, column: 20, scope: !7236)
!7252 = !DILocation(line: 95, column: 25, scope: !7236)
!7253 = !DILocation(line: 95, column: 2, scope: !7236)
!7254 = !DILocation(line: 95, column: 7, scope: !7236)
!7255 = !DILocation(line: 95, column: 50, scope: !7236)
!7256 = !DILocation(line: 95, column: 32, scope: !7236)
!7257 = !DILocation(line: 95, column: 37, scope: !7236)
!7258 = !DILocation(line: 96, column: 20, scope: !7236)
!7259 = !DILocation(line: 96, column: 25, scope: !7236)
!7260 = !DILocation(line: 96, column: 2, scope: !7236)
!7261 = !DILocation(line: 96, column: 7, scope: !7236)
!7262 = !DILocation(line: 96, column: 51, scope: !7236)
!7263 = !DILocation(line: 96, column: 56, scope: !7236)
!7264 = !DILocation(line: 96, column: 33, scope: !7236)
!7265 = !DILocation(line: 96, column: 38, scope: !7236)
!7266 = !DILocation(line: 97, column: 20, scope: !7236)
!7267 = !DILocation(line: 97, column: 25, scope: !7236)
!7268 = !DILocation(line: 97, column: 2, scope: !7236)
!7269 = !DILocation(line: 97, column: 7, scope: !7236)
!7270 = !DILocation(line: 97, column: 50, scope: !7236)
!7271 = !DILocation(line: 97, column: 32, scope: !7236)
!7272 = !DILocation(line: 97, column: 37, scope: !7236)
!7273 = !DILocation(line: 98, column: 20, scope: !7236)
!7274 = !DILocation(line: 98, column: 25, scope: !7236)
!7275 = !DILocation(line: 98, column: 2, scope: !7236)
!7276 = !DILocation(line: 98, column: 7, scope: !7236)
!7277 = !DILocation(line: 98, column: 51, scope: !7236)
!7278 = !DILocation(line: 98, column: 56, scope: !7236)
!7279 = !DILocation(line: 98, column: 33, scope: !7236)
!7280 = !DILocation(line: 98, column: 38, scope: !7236)
!7281 = !DILocation(line: 99, column: 21, scope: !7236)
!7282 = !DILocation(line: 99, column: 26, scope: !7236)
!7283 = !DILocation(line: 99, column: 2, scope: !7236)
!7284 = !DILocation(line: 99, column: 8, scope: !7236)
!7285 = !DILocation(line: 99, column: 52, scope: !7236)
!7286 = !DILocation(line: 99, column: 33, scope: !7236)
!7287 = !DILocation(line: 99, column: 39, scope: !7236)
!7288 = !DILocation(line: 100, column: 21, scope: !7236)
!7289 = !DILocation(line: 100, column: 26, scope: !7236)
!7290 = !DILocation(line: 100, column: 2, scope: !7236)
!7291 = !DILocation(line: 100, column: 8, scope: !7236)
!7292 = !DILocation(line: 100, column: 53, scope: !7236)
!7293 = !DILocation(line: 100, column: 58, scope: !7236)
!7294 = !DILocation(line: 100, column: 34, scope: !7236)
!7295 = !DILocation(line: 100, column: 40, scope: !7236)
!7296 = !DILocation(line: 101, column: 21, scope: !7236)
!7297 = !DILocation(line: 101, column: 26, scope: !7236)
!7298 = !DILocation(line: 101, column: 2, scope: !7236)
!7299 = !DILocation(line: 101, column: 8, scope: !7236)
!7300 = !DILocation(line: 101, column: 52, scope: !7236)
!7301 = !DILocation(line: 101, column: 33, scope: !7236)
!7302 = !DILocation(line: 101, column: 39, scope: !7236)
!7303 = !DILocation(line: 102, column: 1, scope: !7236)
!7304 = distinct !DISubprogram(name: "inv_shift_rows", scope: !501, file: !501, line: 118, type: !7305, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7307)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{null, !184}
!7307 = !{!7308, !7309}
!7308 = !DILocalVariable(name: "s", arg: 1, scope: !7304, file: !501, line: 118, type: !184)
!7309 = !DILocalVariable(name: "t", scope: !7304, file: !501, line: 120, type: !311)
!7310 = !DILocation(line: 0, scope: !7304)
!7311 = !DILocation(line: 120, column: 2, scope: !7304)
!7312 = !DILocation(line: 120, column: 10, scope: !7304)
!7313 = !DILocation(line: 122, column: 10, scope: !7304)
!7314 = !DILocation(line: 122, column: 8, scope: !7304)
!7315 = !DILocation(line: 122, column: 23, scope: !7304)
!7316 = !DILocation(line: 122, column: 16, scope: !7304)
!7317 = !DILocation(line: 122, column: 21, scope: !7304)
!7318 = !DILocation(line: 122, column: 37, scope: !7304)
!7319 = !DILocation(line: 122, column: 30, scope: !7304)
!7320 = !DILocation(line: 122, column: 35, scope: !7304)
!7321 = !DILocation(line: 122, column: 51, scope: !7304)
!7322 = !DILocation(line: 122, column: 44, scope: !7304)
!7323 = !DILocation(line: 122, column: 49, scope: !7304)
!7324 = !DILocation(line: 123, column: 10, scope: !7304)
!7325 = !DILocation(line: 123, column: 2, scope: !7304)
!7326 = !DILocation(line: 123, column: 8, scope: !7304)
!7327 = !DILocation(line: 123, column: 23, scope: !7304)
!7328 = !DILocation(line: 123, column: 16, scope: !7304)
!7329 = !DILocation(line: 123, column: 21, scope: !7304)
!7330 = !DILocation(line: 123, column: 36, scope: !7304)
!7331 = !DILocation(line: 123, column: 29, scope: !7304)
!7332 = !DILocation(line: 123, column: 34, scope: !7304)
!7333 = !DILocation(line: 123, column: 50, scope: !7304)
!7334 = !DILocation(line: 123, column: 43, scope: !7304)
!7335 = !DILocation(line: 123, column: 48, scope: !7304)
!7336 = !DILocation(line: 124, column: 10, scope: !7304)
!7337 = !DILocation(line: 124, column: 2, scope: !7304)
!7338 = !DILocation(line: 124, column: 8, scope: !7304)
!7339 = !DILocation(line: 124, column: 23, scope: !7304)
!7340 = !DILocation(line: 124, column: 16, scope: !7304)
!7341 = !DILocation(line: 124, column: 21, scope: !7304)
!7342 = !DILocation(line: 124, column: 37, scope: !7304)
!7343 = !DILocation(line: 124, column: 29, scope: !7304)
!7344 = !DILocation(line: 124, column: 35, scope: !7304)
!7345 = !DILocation(line: 124, column: 51, scope: !7304)
!7346 = !DILocation(line: 124, column: 43, scope: !7304)
!7347 = !DILocation(line: 124, column: 49, scope: !7304)
!7348 = !DILocation(line: 125, column: 10, scope: !7304)
!7349 = !DILocation(line: 125, column: 2, scope: !7304)
!7350 = !DILocation(line: 125, column: 8, scope: !7304)
!7351 = !DILocation(line: 125, column: 25, scope: !7304)
!7352 = !DILocation(line: 125, column: 17, scope: !7304)
!7353 = !DILocation(line: 125, column: 23, scope: !7304)
!7354 = !DILocation(line: 125, column: 39, scope: !7304)
!7355 = !DILocation(line: 125, column: 31, scope: !7304)
!7356 = !DILocation(line: 125, column: 37, scope: !7304)
!7357 = !DILocation(line: 125, column: 53, scope: !7304)
!7358 = !DILocation(line: 125, column: 45, scope: !7304)
!7359 = !DILocation(line: 125, column: 51, scope: !7304)
!7360 = !DILocation(line: 126, column: 8, scope: !7304)
!7361 = !DILocation(line: 127, column: 1, scope: !7304)
!7362 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !501, file: !501, line: 104, type: !7305, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7363)
!7363 = !{!7364, !7365}
!7364 = !DILocalVariable(name: "s", arg: 1, scope: !7362, file: !501, line: 104, type: !184)
!7365 = !DILocalVariable(name: "i", scope: !7362, file: !501, line: 106, type: !32)
!7366 = !DILocation(line: 0, scope: !7362)
!7367 = !DILocation(line: 108, column: 2, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7362, file: !501, line: 108, column: 2)
!7369 = !DILocation(line: 109, column: 19, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7371, file: !501, line: 108, column: 32)
!7371 = distinct !DILexicalBlock(scope: !7368, file: !501, line: 108, column: 2)
!7372 = !DILocation(line: 109, column: 10, scope: !7370)
!7373 = !DILocation(line: 109, column: 8, scope: !7370)
!7374 = !DILocation(line: 108, column: 27, scope: !7371)
!7375 = !DILocation(line: 108, column: 16, scope: !7371)
!7376 = distinct !{!7376, !7367, !7377}
!7377 = !DILocation(line: 110, column: 2, scope: !7368)
!7378 = !DILocation(line: 111, column: 1, scope: !7362)
!7379 = distinct !DISubprogram(name: "inv_mix_columns", scope: !501, file: !501, line: 81, type: !7305, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7380)
!7380 = !{!7381, !7382}
!7381 = !DILocalVariable(name: "s", arg: 1, scope: !7379, file: !501, line: 81, type: !184)
!7382 = !DILocalVariable(name: "t", scope: !7379, file: !501, line: 83, type: !311)
!7383 = !DILocation(line: 0, scope: !7379)
!7384 = !DILocation(line: 83, column: 2, scope: !7379)
!7385 = !DILocation(line: 83, column: 10, scope: !7379)
!7386 = !DILocation(line: 85, column: 2, scope: !7379)
!7387 = !DILocation(line: 86, column: 19, scope: !7379)
!7388 = !DILocation(line: 86, column: 27, scope: !7379)
!7389 = !DILocation(line: 86, column: 2, scope: !7379)
!7390 = !DILocation(line: 87, column: 19, scope: !7379)
!7391 = !DILocation(line: 87, column: 29, scope: !7379)
!7392 = !DILocation(line: 87, column: 2, scope: !7379)
!7393 = !DILocation(line: 88, column: 19, scope: !7379)
!7394 = !DILocation(line: 88, column: 29, scope: !7379)
!7395 = !DILocation(line: 88, column: 2, scope: !7379)
!7396 = !DILocation(line: 89, column: 8, scope: !7379)
!7397 = !DILocation(line: 90, column: 1, scope: !7379)
!7398 = distinct !DISubprogram(name: "mult_row_column", scope: !501, file: !501, line: 73, type: !7399, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7401)
!7399 = !DISubroutineType(types: !7400)
!7400 = !{null, !184, !490}
!7401 = !{!7402, !7403}
!7402 = !DILocalVariable(name: "out", arg: 1, scope: !7398, file: !501, line: 73, type: !184)
!7403 = !DILocalVariable(name: "in", arg: 2, scope: !7398, file: !501, line: 73, type: !490)
!7404 = !DILocation(line: 0, scope: !7398)
!7405 = !DILocation(line: 75, column: 11, scope: !7398)
!7406 = !DILocation(line: 75, column: 26, scope: !7398)
!7407 = !DILocation(line: 75, column: 41, scope: !7398)
!7408 = !DILocation(line: 75, column: 56, scope: !7398)
!7409 = !DILocation(line: 75, column: 24, scope: !7398)
!7410 = !DILocation(line: 75, column: 39, scope: !7398)
!7411 = !DILocation(line: 75, column: 54, scope: !7398)
!7412 = !DILocation(line: 75, column: 9, scope: !7398)
!7413 = !DILocation(line: 76, column: 11, scope: !7398)
!7414 = !DILocation(line: 76, column: 26, scope: !7398)
!7415 = !DILocation(line: 76, column: 41, scope: !7398)
!7416 = !DILocation(line: 76, column: 56, scope: !7398)
!7417 = !DILocation(line: 76, column: 24, scope: !7398)
!7418 = !DILocation(line: 76, column: 39, scope: !7398)
!7419 = !DILocation(line: 76, column: 54, scope: !7398)
!7420 = !DILocation(line: 76, column: 2, scope: !7398)
!7421 = !DILocation(line: 76, column: 9, scope: !7398)
!7422 = !DILocation(line: 77, column: 11, scope: !7398)
!7423 = !DILocation(line: 77, column: 26, scope: !7398)
!7424 = !DILocation(line: 77, column: 41, scope: !7398)
!7425 = !DILocation(line: 77, column: 56, scope: !7398)
!7426 = !DILocation(line: 77, column: 24, scope: !7398)
!7427 = !DILocation(line: 77, column: 39, scope: !7398)
!7428 = !DILocation(line: 77, column: 54, scope: !7398)
!7429 = !DILocation(line: 77, column: 2, scope: !7398)
!7430 = !DILocation(line: 77, column: 9, scope: !7398)
!7431 = !DILocation(line: 78, column: 11, scope: !7398)
!7432 = !DILocation(line: 78, column: 26, scope: !7398)
!7433 = !DILocation(line: 78, column: 41, scope: !7398)
!7434 = !DILocation(line: 78, column: 56, scope: !7398)
!7435 = !DILocation(line: 78, column: 24, scope: !7398)
!7436 = !DILocation(line: 78, column: 39, scope: !7398)
!7437 = !DILocation(line: 78, column: 54, scope: !7398)
!7438 = !DILocation(line: 78, column: 2, scope: !7398)
!7439 = !DILocation(line: 78, column: 9, scope: !7398)
!7440 = !DILocation(line: 79, column: 1, scope: !7398)
!7441 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !516, file: !516, line: 70, type: !7442, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7444)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!125, !510, !490}
!7444 = !{!7445, !7446, !7447, !7449, !7450}
!7445 = !DILocalVariable(name: "s", arg: 1, scope: !7441, file: !516, line: 70, type: !510)
!7446 = !DILocalVariable(name: "k", arg: 2, scope: !7441, file: !516, line: 70, type: !490)
!7447 = !DILocalVariable(name: "rconst", scope: !7441, file: !516, line: 72, type: !7448)
!7448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6008, size: 352, elements: !2221)
!7449 = !DILocalVariable(name: "i", scope: !7441, file: !516, line: 76, type: !32)
!7450 = !DILocalVariable(name: "t", scope: !7441, file: !516, line: 77, type: !32)
!7451 = !DILocation(line: 0, scope: !7441)
!7452 = !DILocation(line: 72, column: 21, scope: !7441)
!7453 = !DILocation(line: 79, column: 8, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7441, file: !516, line: 79, column: 6)
!7455 = !DILocation(line: 79, column: 6, scope: !7441)
!7456 = !DILocation(line: 91, column: 7, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !516, line: 90, column: 35)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !516, line: 90, column: 2)
!7459 = distinct !DILexicalBlock(scope: !7441, file: !516, line: 90, column: 2)
!7460 = !DILocation(line: 90, column: 2, scope: !7459)
!7461 = !DILocation(line: 86, column: 22, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !516, line: 85, column: 27)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !516, line: 85, column: 2)
!7464 = distinct !DILexicalBlock(scope: !7441, file: !516, line: 85, column: 2)
!7465 = !DILocation(line: 86, column: 18, scope: !7462)
!7466 = !DILocation(line: 86, column: 25, scope: !7462)
!7467 = !DILocation(line: 86, column: 40, scope: !7462)
!7468 = !DILocation(line: 86, column: 34, scope: !7462)
!7469 = !DILocation(line: 86, column: 43, scope: !7462)
!7470 = !DILocation(line: 86, column: 31, scope: !7462)
!7471 = !DILocation(line: 87, column: 17, scope: !7462)
!7472 = !DILocation(line: 87, column: 11, scope: !7462)
!7473 = !DILocation(line: 87, column: 20, scope: !7462)
!7474 = !DILocation(line: 86, column: 49, scope: !7462)
!7475 = !DILocation(line: 87, column: 34, scope: !7462)
!7476 = !DILocation(line: 87, column: 28, scope: !7462)
!7477 = !DILocation(line: 87, column: 27, scope: !7462)
!7478 = !DILocation(line: 87, column: 25, scope: !7462)
!7479 = !DILocation(line: 86, column: 3, scope: !7462)
!7480 = !DILocation(line: 86, column: 15, scope: !7462)
!7481 = !DILocation(line: 85, column: 22, scope: !7463)
!7482 = !DILocation(line: 85, column: 16, scope: !7463)
!7483 = !DILocation(line: 85, column: 2, scope: !7464)
!7484 = distinct !{!7484, !7483, !7485}
!7485 = !DILocation(line: 88, column: 2, scope: !7464)
!7486 = !DILocation(line: 92, column: 10, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7457, file: !516, line: 92, column: 7)
!7488 = !DILocation(line: 92, column: 16, scope: !7487)
!7489 = !DILocation(line: 92, column: 7, scope: !7457)
!7490 = !DILocation(line: 93, column: 8, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7487, file: !516, line: 92, column: 22)
!7492 = !DILocation(line: 93, column: 38, scope: !7491)
!7493 = !DILocation(line: 93, column: 30, scope: !7491)
!7494 = !DILocation(line: 93, column: 28, scope: !7491)
!7495 = !DILocation(line: 94, column: 3, scope: !7491)
!7496 = !DILocation(line: 0, scope: !7457)
!7497 = !DILocation(line: 95, column: 27, scope: !7457)
!7498 = !DILocation(line: 95, column: 17, scope: !7457)
!7499 = !DILocation(line: 95, column: 32, scope: !7457)
!7500 = !DILocation(line: 95, column: 3, scope: !7457)
!7501 = !DILocation(line: 95, column: 15, scope: !7457)
!7502 = !DILocation(line: 90, column: 30, scope: !7458)
!7503 = !DILocation(line: 90, column: 11, scope: !7458)
!7504 = distinct !{!7504, !7460, !7505}
!7505 = !DILocation(line: 96, column: 2, scope: !7459)
!7506 = !DILocation(line: 99, column: 1, scope: !7441)
!7507 = distinct !DISubprogram(name: "rotword", scope: !516, file: !516, line: 62, type: !7508, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7510)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!32, !32}
!7510 = !{!7511}
!7511 = !DILocalVariable(name: "a", arg: 1, scope: !7507, file: !516, line: 62, type: !32)
!7512 = !DILocation(line: 0, scope: !7507)
!7513 = !DILocation(line: 64, column: 21, scope: !7507)
!7514 = !DILocation(line: 64, column: 2, scope: !7507)
!7515 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !516, file: !516, line: 158, type: !7516, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7519)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{!125, !184, !490, !7518}
!7518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!7519 = !{!7520, !7521, !7522, !7523, !7524}
!7520 = !DILocalVariable(name: "out", arg: 1, scope: !7515, file: !516, line: 158, type: !184)
!7521 = !DILocalVariable(name: "in", arg: 2, scope: !7515, file: !516, line: 158, type: !490)
!7522 = !DILocalVariable(name: "s", arg: 3, scope: !7515, file: !516, line: 158, type: !7518)
!7523 = !DILocalVariable(name: "state", scope: !7515, file: !516, line: 160, type: !311)
!7524 = !DILocalVariable(name: "i", scope: !7515, file: !516, line: 161, type: !32)
!7525 = !DILocation(line: 0, scope: !7515)
!7526 = !DILocation(line: 160, column: 2, scope: !7515)
!7527 = !DILocation(line: 160, column: 10, scope: !7515)
!7528 = !DILocation(line: 163, column: 10, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7515, file: !516, line: 163, column: 6)
!7530 = !DILocation(line: 163, column: 6, scope: !7515)
!7531 = !DILocation(line: 171, column: 8, scope: !7515)
!7532 = !DILocation(line: 172, column: 23, scope: !7515)
!7533 = !DILocation(line: 172, column: 2, scope: !7515)
!7534 = !DILocation(line: 174, column: 2, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7515, file: !516, line: 174, column: 2)
!7536 = !DILocation(line: 175, column: 3, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !516, line: 174, column: 33)
!7538 = distinct !DILexicalBlock(scope: !7535, file: !516, line: 174, column: 2)
!7539 = !DILocation(line: 176, column: 3, scope: !7537)
!7540 = !DILocation(line: 177, column: 3, scope: !7537)
!7541 = !DILocation(line: 178, column: 40, scope: !7537)
!7542 = !DILocation(line: 178, column: 37, scope: !7537)
!7543 = !DILocation(line: 178, column: 33, scope: !7537)
!7544 = !DILocation(line: 178, column: 3, scope: !7537)
!7545 = !DILocation(line: 174, column: 16, scope: !7538)
!7546 = distinct !{!7546, !7534, !7547}
!7547 = !DILocation(line: 179, column: 2, scope: !7535)
!7548 = !DILocation(line: 181, column: 2, scope: !7515)
!7549 = !DILocation(line: 182, column: 2, scope: !7515)
!7550 = !DILocation(line: 183, column: 32, scope: !7515)
!7551 = !DILocation(line: 183, column: 2, scope: !7515)
!7552 = !DILocation(line: 185, column: 8, scope: !7515)
!7553 = !DILocation(line: 188, column: 2, scope: !7515)
!7554 = !DILocation(line: 190, column: 2, scope: !7515)
!7555 = !DILocation(line: 191, column: 1, scope: !7515)
!7556 = distinct !DISubprogram(name: "add_round_key", scope: !516, file: !516, line: 101, type: !7237, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7557)
!7557 = !{!7558, !7559}
!7558 = !DILocalVariable(name: "s", arg: 1, scope: !7556, file: !516, line: 101, type: !184)
!7559 = !DILocalVariable(name: "k", arg: 2, scope: !7556, file: !516, line: 101, type: !7239)
!7560 = !DILocation(line: 0, scope: !7556)
!7561 = !DILocation(line: 103, column: 20, scope: !7556)
!7562 = !DILocation(line: 103, column: 25, scope: !7556)
!7563 = !DILocation(line: 103, column: 7, scope: !7556)
!7564 = !DILocation(line: 103, column: 51, scope: !7556)
!7565 = !DILocation(line: 103, column: 56, scope: !7556)
!7566 = !DILocation(line: 103, column: 33, scope: !7556)
!7567 = !DILocation(line: 103, column: 38, scope: !7556)
!7568 = !DILocation(line: 104, column: 20, scope: !7556)
!7569 = !DILocation(line: 104, column: 25, scope: !7556)
!7570 = !DILocation(line: 104, column: 2, scope: !7556)
!7571 = !DILocation(line: 104, column: 7, scope: !7556)
!7572 = !DILocation(line: 104, column: 50, scope: !7556)
!7573 = !DILocation(line: 104, column: 32, scope: !7556)
!7574 = !DILocation(line: 104, column: 37, scope: !7556)
!7575 = !DILocation(line: 105, column: 20, scope: !7556)
!7576 = !DILocation(line: 105, column: 25, scope: !7556)
!7577 = !DILocation(line: 105, column: 2, scope: !7556)
!7578 = !DILocation(line: 105, column: 7, scope: !7556)
!7579 = !DILocation(line: 105, column: 51, scope: !7556)
!7580 = !DILocation(line: 105, column: 56, scope: !7556)
!7581 = !DILocation(line: 105, column: 33, scope: !7556)
!7582 = !DILocation(line: 105, column: 38, scope: !7556)
!7583 = !DILocation(line: 106, column: 20, scope: !7556)
!7584 = !DILocation(line: 106, column: 25, scope: !7556)
!7585 = !DILocation(line: 106, column: 2, scope: !7556)
!7586 = !DILocation(line: 106, column: 7, scope: !7556)
!7587 = !DILocation(line: 106, column: 50, scope: !7556)
!7588 = !DILocation(line: 106, column: 32, scope: !7556)
!7589 = !DILocation(line: 106, column: 37, scope: !7556)
!7590 = !DILocation(line: 107, column: 20, scope: !7556)
!7591 = !DILocation(line: 107, column: 25, scope: !7556)
!7592 = !DILocation(line: 107, column: 2, scope: !7556)
!7593 = !DILocation(line: 107, column: 7, scope: !7556)
!7594 = !DILocation(line: 107, column: 51, scope: !7556)
!7595 = !DILocation(line: 107, column: 56, scope: !7556)
!7596 = !DILocation(line: 107, column: 33, scope: !7556)
!7597 = !DILocation(line: 107, column: 38, scope: !7556)
!7598 = !DILocation(line: 108, column: 21, scope: !7556)
!7599 = !DILocation(line: 108, column: 26, scope: !7556)
!7600 = !DILocation(line: 108, column: 2, scope: !7556)
!7601 = !DILocation(line: 108, column: 8, scope: !7556)
!7602 = !DILocation(line: 108, column: 52, scope: !7556)
!7603 = !DILocation(line: 108, column: 33, scope: !7556)
!7604 = !DILocation(line: 108, column: 39, scope: !7556)
!7605 = !DILocation(line: 109, column: 21, scope: !7556)
!7606 = !DILocation(line: 109, column: 26, scope: !7556)
!7607 = !DILocation(line: 109, column: 2, scope: !7556)
!7608 = !DILocation(line: 109, column: 8, scope: !7556)
!7609 = !DILocation(line: 109, column: 53, scope: !7556)
!7610 = !DILocation(line: 109, column: 58, scope: !7556)
!7611 = !DILocation(line: 109, column: 34, scope: !7556)
!7612 = !DILocation(line: 109, column: 40, scope: !7556)
!7613 = !DILocation(line: 110, column: 21, scope: !7556)
!7614 = !DILocation(line: 110, column: 26, scope: !7556)
!7615 = !DILocation(line: 110, column: 2, scope: !7556)
!7616 = !DILocation(line: 110, column: 8, scope: !7556)
!7617 = !DILocation(line: 110, column: 52, scope: !7556)
!7618 = !DILocation(line: 110, column: 33, scope: !7556)
!7619 = !DILocation(line: 110, column: 39, scope: !7556)
!7620 = !DILocation(line: 111, column: 1, scope: !7556)
!7621 = distinct !DISubprogram(name: "sub_bytes", scope: !516, file: !516, line: 113, type: !7305, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7622)
!7622 = !{!7623, !7624}
!7623 = !DILocalVariable(name: "s", arg: 1, scope: !7621, file: !516, line: 113, type: !184)
!7624 = !DILocalVariable(name: "i", scope: !7621, file: !516, line: 115, type: !32)
!7625 = !DILocation(line: 0, scope: !7621)
!7626 = !DILocation(line: 117, column: 2, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7621, file: !516, line: 117, column: 2)
!7628 = !DILocation(line: 118, column: 15, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !516, line: 117, column: 34)
!7630 = distinct !DILexicalBlock(scope: !7627, file: !516, line: 117, column: 2)
!7631 = !DILocation(line: 118, column: 10, scope: !7629)
!7632 = !DILocation(line: 118, column: 8, scope: !7629)
!7633 = !DILocation(line: 117, column: 29, scope: !7630)
!7634 = !DILocation(line: 117, column: 16, scope: !7630)
!7635 = distinct !{!7635, !7626, !7636}
!7636 = !DILocation(line: 119, column: 2, scope: !7627)
!7637 = !DILocation(line: 120, column: 1, scope: !7621)
!7638 = distinct !DISubprogram(name: "shift_rows", scope: !516, file: !516, line: 147, type: !7305, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7639)
!7639 = !{!7640, !7641}
!7640 = !DILocalVariable(name: "s", arg: 1, scope: !7638, file: !516, line: 147, type: !184)
!7641 = !DILocalVariable(name: "t", scope: !7638, file: !516, line: 149, type: !311)
!7642 = !DILocation(line: 0, scope: !7638)
!7643 = !DILocation(line: 149, column: 2, scope: !7638)
!7644 = !DILocation(line: 149, column: 10, scope: !7638)
!7645 = !DILocation(line: 151, column: 10, scope: !7638)
!7646 = !DILocation(line: 151, column: 8, scope: !7638)
!7647 = !DILocation(line: 151, column: 23, scope: !7638)
!7648 = !DILocation(line: 151, column: 16, scope: !7638)
!7649 = !DILocation(line: 151, column: 21, scope: !7638)
!7650 = !DILocation(line: 151, column: 36, scope: !7638)
!7651 = !DILocation(line: 151, column: 29, scope: !7638)
!7652 = !DILocation(line: 151, column: 34, scope: !7638)
!7653 = !DILocation(line: 151, column: 50, scope: !7638)
!7654 = !DILocation(line: 151, column: 43, scope: !7638)
!7655 = !DILocation(line: 151, column: 48, scope: !7638)
!7656 = !DILocation(line: 152, column: 10, scope: !7638)
!7657 = !DILocation(line: 152, column: 2, scope: !7638)
!7658 = !DILocation(line: 152, column: 8, scope: !7638)
!7659 = !DILocation(line: 152, column: 23, scope: !7638)
!7660 = !DILocation(line: 152, column: 16, scope: !7638)
!7661 = !DILocation(line: 152, column: 21, scope: !7638)
!7662 = !DILocation(line: 152, column: 36, scope: !7638)
!7663 = !DILocation(line: 152, column: 29, scope: !7638)
!7664 = !DILocation(line: 152, column: 34, scope: !7638)
!7665 = !DILocation(line: 152, column: 50, scope: !7638)
!7666 = !DILocation(line: 152, column: 43, scope: !7638)
!7667 = !DILocation(line: 152, column: 48, scope: !7638)
!7668 = !DILocation(line: 153, column: 10, scope: !7638)
!7669 = !DILocation(line: 153, column: 2, scope: !7638)
!7670 = !DILocation(line: 153, column: 8, scope: !7638)
!7671 = !DILocation(line: 153, column: 23, scope: !7638)
!7672 = !DILocation(line: 153, column: 16, scope: !7638)
!7673 = !DILocation(line: 153, column: 21, scope: !7638)
!7674 = !DILocation(line: 153, column: 38, scope: !7638)
!7675 = !DILocation(line: 153, column: 30, scope: !7638)
!7676 = !DILocation(line: 153, column: 36, scope: !7638)
!7677 = !DILocation(line: 153, column: 52, scope: !7638)
!7678 = !DILocation(line: 153, column: 44, scope: !7638)
!7679 = !DILocation(line: 153, column: 50, scope: !7638)
!7680 = !DILocation(line: 154, column: 10, scope: !7638)
!7681 = !DILocation(line: 154, column: 2, scope: !7638)
!7682 = !DILocation(line: 154, column: 8, scope: !7638)
!7683 = !DILocation(line: 154, column: 25, scope: !7638)
!7684 = !DILocation(line: 154, column: 17, scope: !7638)
!7685 = !DILocation(line: 154, column: 23, scope: !7638)
!7686 = !DILocation(line: 154, column: 39, scope: !7638)
!7687 = !DILocation(line: 154, column: 31, scope: !7638)
!7688 = !DILocation(line: 154, column: 37, scope: !7638)
!7689 = !DILocation(line: 154, column: 53, scope: !7638)
!7690 = !DILocation(line: 154, column: 45, scope: !7638)
!7691 = !DILocation(line: 154, column: 51, scope: !7638)
!7692 = !DILocation(line: 155, column: 9, scope: !7638)
!7693 = !DILocation(line: 156, column: 1, scope: !7638)
!7694 = distinct !DISubprogram(name: "mix_columns", scope: !516, file: !516, line: 132, type: !7305, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7695)
!7695 = !{!7696, !7697}
!7696 = !DILocalVariable(name: "s", arg: 1, scope: !7694, file: !516, line: 132, type: !184)
!7697 = !DILocalVariable(name: "t", scope: !7694, file: !516, line: 134, type: !311)
!7698 = !DILocation(line: 0, scope: !7694)
!7699 = !DILocation(line: 134, column: 2, scope: !7694)
!7700 = !DILocation(line: 134, column: 10, scope: !7694)
!7701 = !DILocation(line: 136, column: 2, scope: !7694)
!7702 = !DILocation(line: 137, column: 19, scope: !7694)
!7703 = !DILocation(line: 137, column: 27, scope: !7694)
!7704 = !DILocation(line: 137, column: 2, scope: !7694)
!7705 = !DILocation(line: 138, column: 19, scope: !7694)
!7706 = !DILocation(line: 138, column: 32, scope: !7694)
!7707 = !DILocation(line: 138, column: 2, scope: !7694)
!7708 = !DILocation(line: 139, column: 19, scope: !7694)
!7709 = !DILocation(line: 139, column: 32, scope: !7694)
!7710 = !DILocation(line: 139, column: 2, scope: !7694)
!7711 = !DILocation(line: 140, column: 9, scope: !7694)
!7712 = !DILocation(line: 141, column: 1, scope: !7694)
!7713 = distinct !DISubprogram(name: "mult_row_column", scope: !516, file: !516, line: 124, type: !7399, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7714)
!7714 = !{!7715, !7716}
!7715 = !DILocalVariable(name: "out", arg: 1, scope: !7713, file: !516, line: 124, type: !184)
!7716 = !DILocalVariable(name: "in", arg: 2, scope: !7713, file: !516, line: 124, type: !490)
!7717 = !DILocation(line: 0, scope: !7713)
!7718 = !DILocation(line: 126, column: 24, scope: !7713)
!7719 = !DILocation(line: 126, column: 11, scope: !7713)
!7720 = !DILocation(line: 126, column: 33, scope: !7713)
!7721 = !DILocation(line: 126, column: 49, scope: !7713)
!7722 = !DILocation(line: 126, column: 57, scope: !7713)
!7723 = !DILocation(line: 126, column: 31, scope: !7713)
!7724 = !DILocation(line: 126, column: 47, scope: !7713)
!7725 = !DILocation(line: 126, column: 55, scope: !7713)
!7726 = !DILocation(line: 126, column: 9, scope: !7713)
!7727 = !DILocation(line: 127, column: 11, scope: !7713)
!7728 = !DILocation(line: 127, column: 32, scope: !7713)
!7729 = !DILocation(line: 127, column: 19, scope: !7713)
!7730 = !DILocation(line: 127, column: 41, scope: !7713)
!7731 = !DILocation(line: 127, column: 57, scope: !7713)
!7732 = !DILocation(line: 127, column: 17, scope: !7713)
!7733 = !DILocation(line: 127, column: 39, scope: !7713)
!7734 = !DILocation(line: 127, column: 55, scope: !7713)
!7735 = !DILocation(line: 127, column: 2, scope: !7713)
!7736 = !DILocation(line: 127, column: 9, scope: !7713)
!7737 = !DILocation(line: 128, column: 11, scope: !7713)
!7738 = !DILocation(line: 128, column: 19, scope: !7713)
!7739 = !DILocation(line: 128, column: 40, scope: !7713)
!7740 = !DILocation(line: 128, column: 27, scope: !7713)
!7741 = !DILocation(line: 128, column: 49, scope: !7713)
!7742 = !DILocation(line: 128, column: 17, scope: !7713)
!7743 = !DILocation(line: 128, column: 25, scope: !7713)
!7744 = !DILocation(line: 128, column: 47, scope: !7713)
!7745 = !DILocation(line: 128, column: 2, scope: !7713)
!7746 = !DILocation(line: 128, column: 9, scope: !7713)
!7747 = !DILocation(line: 129, column: 11, scope: !7713)
!7748 = !DILocation(line: 129, column: 27, scope: !7713)
!7749 = !DILocation(line: 129, column: 25, scope: !7713)
!7750 = !DILocation(line: 129, column: 35, scope: !7713)
!7751 = !DILocation(line: 129, column: 33, scope: !7713)
!7752 = !DILocation(line: 129, column: 56, scope: !7713)
!7753 = !DILocation(line: 129, column: 43, scope: !7713)
!7754 = !DILocation(line: 129, column: 41, scope: !7713)
!7755 = !DILocation(line: 129, column: 2, scope: !7713)
!7756 = !DILocation(line: 129, column: 9, scope: !7713)
!7757 = !DILocation(line: 130, column: 1, scope: !7713)
!7758 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7759, file: !7759, line: 37, type: !7760, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !7763)
!7759 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!125, !184, !32, !490, !32, !490, !7762}
!7762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2871)
!7763 = !{!7764, !7765, !7766, !7767, !7768, !7769, !7770, !7771, !7772}
!7764 = !DILocalVariable(name: "out", arg: 1, scope: !7758, file: !7759, line: 37, type: !184)
!7765 = !DILocalVariable(name: "outlen", arg: 2, scope: !7758, file: !7759, line: 37, type: !32)
!7766 = !DILocalVariable(name: "in", arg: 3, scope: !7758, file: !7759, line: 37, type: !490)
!7767 = !DILocalVariable(name: "inlen", arg: 4, scope: !7758, file: !7759, line: 38, type: !32)
!7768 = !DILocalVariable(name: "iv", arg: 5, scope: !7758, file: !7759, line: 38, type: !490)
!7769 = !DILocalVariable(name: "sched", arg: 6, scope: !7758, file: !7759, line: 39, type: !7762)
!7770 = !DILocalVariable(name: "buffer", scope: !7758, file: !7759, line: 42, type: !311)
!7771 = !DILocalVariable(name: "n", scope: !7758, file: !7759, line: 43, type: !32)
!7772 = !DILocalVariable(name: "m", scope: !7758, file: !7759, line: 43, type: !32)
!7773 = !DILocation(line: 0, scope: !7758)
!7774 = !DILocation(line: 42, column: 2, scope: !7758)
!7775 = !DILocation(line: 42, column: 10, scope: !7758)
!7776 = !DILocation(line: 46, column: 10, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7758, file: !7759, line: 46, column: 6)
!7778 = !DILocation(line: 46, column: 27, scope: !7777)
!7779 = !DILocation(line: 58, column: 8, scope: !7758)
!7780 = !DILocation(line: 60, column: 8, scope: !7758)
!7781 = !DILocation(line: 63, column: 2, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7758, file: !7759, line: 63, column: 2)
!7783 = !DILocation(line: 61, column: 6, scope: !7758)
!7784 = !DILocation(line: 64, column: 21, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7786, file: !7759, line: 63, column: 34)
!7786 = distinct !DILexicalBlock(scope: !7782, file: !7759, line: 63, column: 2)
!7787 = !DILocation(line: 64, column: 18, scope: !7785)
!7788 = !DILocation(line: 64, column: 11, scope: !7785)
!7789 = !DILocation(line: 64, column: 3, scope: !7785)
!7790 = !DILocation(line: 64, column: 15, scope: !7785)
!7791 = !DILocation(line: 65, column: 9, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7785, file: !7759, line: 65, column: 7)
!7793 = !DILocation(line: 65, column: 7, scope: !7785)
!7794 = !DILocation(line: 66, column: 10, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7792, file: !7759, line: 65, column: 31)
!7796 = !DILocation(line: 67, column: 10, scope: !7795)
!7797 = !DILocation(line: 69, column: 8, scope: !7795)
!7798 = !DILocation(line: 71, column: 3, scope: !7795)
!7799 = !DILocation(line: 0, scope: !7785)
!7800 = !DILocation(line: 63, column: 29, scope: !7786)
!7801 = !DILocation(line: 63, column: 20, scope: !7786)
!7802 = distinct !{!7802, !7781, !7803}
!7803 = !DILocation(line: 72, column: 2, scope: !7782)
!7804 = !DILocation(line: 75, column: 1, scope: !7758)
!7805 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7759, file: !7759, line: 77, type: !7760, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !7806)
!7806 = !{!7807, !7808, !7809, !7810, !7811, !7812, !7813, !7814, !7815, !7816}
!7807 = !DILocalVariable(name: "out", arg: 1, scope: !7805, file: !7759, line: 77, type: !184)
!7808 = !DILocalVariable(name: "outlen", arg: 2, scope: !7805, file: !7759, line: 77, type: !32)
!7809 = !DILocalVariable(name: "in", arg: 3, scope: !7805, file: !7759, line: 77, type: !490)
!7810 = !DILocalVariable(name: "inlen", arg: 4, scope: !7805, file: !7759, line: 78, type: !32)
!7811 = !DILocalVariable(name: "iv", arg: 5, scope: !7805, file: !7759, line: 78, type: !490)
!7812 = !DILocalVariable(name: "sched", arg: 6, scope: !7805, file: !7759, line: 79, type: !7762)
!7813 = !DILocalVariable(name: "buffer", scope: !7805, file: !7759, line: 82, type: !311)
!7814 = !DILocalVariable(name: "p", scope: !7805, file: !7759, line: 83, type: !490)
!7815 = !DILocalVariable(name: "n", scope: !7805, file: !7759, line: 84, type: !32)
!7816 = !DILocalVariable(name: "m", scope: !7805, file: !7759, line: 84, type: !32)
!7817 = !DILocation(line: 0, scope: !7805)
!7818 = !DILocation(line: 82, column: 2, scope: !7805)
!7819 = !DILocation(line: 82, column: 10, scope: !7805)
!7820 = !DILocation(line: 87, column: 10, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7805, file: !7759, line: 87, column: 6)
!7822 = !DILocation(line: 87, column: 27, scope: !7821)
!7823 = !DILocation(line: 105, column: 10, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7759, line: 105, column: 7)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7759, line: 104, column: 35)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7759, line: 104, column: 2)
!7827 = distinct !DILexicalBlock(scope: !7805, file: !7759, line: 104, column: 2)
!7828 = !DILocation(line: 105, column: 31, scope: !7824)
!7829 = !DILocation(line: 105, column: 7, scope: !7825)
!7830 = !DILocation(line: 106, column: 10, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7824, file: !7759, line: 105, column: 37)
!7832 = !DILocation(line: 107, column: 7, scope: !7831)
!7833 = !DILocation(line: 109, column: 3, scope: !7831)
!7834 = !DILocation(line: 0, scope: !7827)
!7835 = !DILocation(line: 110, column: 20, scope: !7825)
!7836 = !DILocation(line: 110, column: 12, scope: !7825)
!7837 = !DILocation(line: 110, column: 28, scope: !7825)
!7838 = !DILocation(line: 110, column: 26, scope: !7825)
!7839 = !DILocation(line: 110, column: 24, scope: !7825)
!7840 = !DILocation(line: 110, column: 7, scope: !7825)
!7841 = !DILocation(line: 110, column: 10, scope: !7825)
!7842 = !DILocation(line: 104, column: 30, scope: !7826)
!7843 = !DILocation(line: 104, column: 20, scope: !7826)
!7844 = !DILocation(line: 104, column: 2, scope: !7827)
!7845 = distinct !{!7845, !7844, !7846}
!7846 = !DILocation(line: 111, column: 2, scope: !7827)
!7847 = !DILocation(line: 114, column: 1, scope: !7805)
!7848 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7849, file: !7849, line: 37, type: !7850, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !7853)
!7849 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!125, !184, !32, !490, !32, !184, !7852}
!7852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2879)
!7853 = !{!7854, !7855, !7856, !7857, !7858, !7859, !7860, !7861, !7862, !7863}
!7854 = !DILocalVariable(name: "out", arg: 1, scope: !7848, file: !7849, line: 37, type: !184)
!7855 = !DILocalVariable(name: "outlen", arg: 2, scope: !7848, file: !7849, line: 37, type: !32)
!7856 = !DILocalVariable(name: "in", arg: 3, scope: !7848, file: !7849, line: 37, type: !490)
!7857 = !DILocalVariable(name: "inlen", arg: 4, scope: !7848, file: !7849, line: 38, type: !32)
!7858 = !DILocalVariable(name: "ctr", arg: 5, scope: !7848, file: !7849, line: 38, type: !184)
!7859 = !DILocalVariable(name: "sched", arg: 6, scope: !7848, file: !7849, line: 38, type: !7852)
!7860 = !DILocalVariable(name: "buffer", scope: !7848, file: !7849, line: 41, type: !311)
!7861 = !DILocalVariable(name: "nonce", scope: !7848, file: !7849, line: 42, type: !311)
!7862 = !DILocalVariable(name: "block_num", scope: !7848, file: !7849, line: 43, type: !32)
!7863 = !DILocalVariable(name: "i", scope: !7848, file: !7849, line: 44, type: !32)
!7864 = !DILocation(line: 0, scope: !7848)
!7865 = !DILocation(line: 41, column: 2, scope: !7848)
!7866 = !DILocation(line: 41, column: 10, scope: !7848)
!7867 = !DILocation(line: 42, column: 2, scope: !7848)
!7868 = !DILocation(line: 42, column: 10, scope: !7848)
!7869 = !DILocation(line: 47, column: 10, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7848, file: !7849, line: 47, column: 6)
!7871 = !DILocation(line: 47, column: 27, scope: !7870)
!7872 = !DILocation(line: 58, column: 8, scope: !7848)
!7873 = !DILocation(line: 61, column: 15, scope: !7848)
!7874 = !DILocation(line: 61, column: 35, scope: !7848)
!7875 = !DILocation(line: 62, column: 8, scope: !7848)
!7876 = !DILocation(line: 62, column: 27, scope: !7848)
!7877 = !DILocation(line: 61, column: 45, scope: !7848)
!7878 = !DILocation(line: 61, column: 25, scope: !7848)
!7879 = !DILocation(line: 61, column: 32, scope: !7848)
!7880 = !DILocation(line: 62, column: 18, scope: !7848)
!7881 = !DILocation(line: 61, column: 52, scope: !7848)
!7882 = !DILocation(line: 62, column: 26, scope: !7848)
!7883 = !DILocation(line: 62, column: 24, scope: !7848)
!7884 = !DILocation(line: 63, column: 2, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7848, file: !7849, line: 63, column: 2)
!7886 = !DILocation(line: 64, column: 10, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7888, file: !7849, line: 64, column: 7)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !7849, line: 63, column: 30)
!7889 = distinct !DILexicalBlock(scope: !7885, file: !7849, line: 63, column: 2)
!7890 = !DILocation(line: 64, column: 33, scope: !7887)
!7891 = !DILocation(line: 64, column: 7, scope: !7888)
!7892 = !DILocation(line: 66, column: 8, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7849, line: 66, column: 8)
!7894 = distinct !DILexicalBlock(scope: !7887, file: !7849, line: 64, column: 39)
!7895 = !DILocation(line: 66, column: 8, scope: !7894)
!7896 = !DILocation(line: 67, column: 14, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7893, file: !7849, line: 66, column: 46)
!7898 = !DILocation(line: 68, column: 37, scope: !7897)
!7899 = !DILocation(line: 68, column: 17, scope: !7897)
!7900 = !DILocation(line: 68, column: 15, scope: !7897)
!7901 = !DILocation(line: 69, column: 37, scope: !7897)
!7902 = !DILocation(line: 69, column: 17, scope: !7897)
!7903 = !DILocation(line: 69, column: 15, scope: !7897)
!7904 = !DILocation(line: 70, column: 37, scope: !7897)
!7905 = !DILocation(line: 70, column: 17, scope: !7897)
!7906 = !DILocation(line: 70, column: 15, scope: !7897)
!7907 = !DILocation(line: 71, column: 17, scope: !7897)
!7908 = !DILocation(line: 71, column: 15, scope: !7897)
!7909 = !DILocation(line: 75, column: 3, scope: !7894)
!7910 = !DILocation(line: 77, column: 12, scope: !7888)
!7911 = !DILocation(line: 77, column: 47, scope: !7888)
!7912 = !DILocation(line: 77, column: 44, scope: !7888)
!7913 = !DILocation(line: 77, column: 42, scope: !7888)
!7914 = !DILocation(line: 77, column: 7, scope: !7888)
!7915 = !DILocation(line: 77, column: 10, scope: !7888)
!7916 = !DILocation(line: 63, column: 25, scope: !7889)
!7917 = !DILocation(line: 63, column: 16, scope: !7889)
!7918 = distinct !{!7918, !7884, !7919}
!7919 = !DILocation(line: 78, column: 2, scope: !7885)
!7920 = !DILocation(line: 81, column: 2, scope: !7848)
!7921 = !DILocation(line: 81, column: 10, scope: !7848)
!7922 = !DILocation(line: 81, column: 23, scope: !7848)
!7923 = !DILocation(line: 81, column: 31, scope: !7848)
!7924 = !DILocation(line: 82, column: 2, scope: !7848)
!7925 = !DILocation(line: 82, column: 10, scope: !7848)
!7926 = !DILocation(line: 82, column: 23, scope: !7848)
!7927 = !DILocation(line: 82, column: 31, scope: !7848)
!7928 = !DILocation(line: 84, column: 2, scope: !7848)
!7929 = !DILocation(line: 85, column: 1, scope: !7848)
!7930 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7931, file: !7931, line: 39, type: !7932, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !7934)
!7931 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!125, !2887, !2893, !184, !32, !32}
!7934 = !{!7935, !7936, !7937, !7938, !7939}
!7935 = !DILocalVariable(name: "c", arg: 1, scope: !7930, file: !7931, line: 39, type: !2887)
!7936 = !DILocalVariable(name: "sched", arg: 2, scope: !7930, file: !7931, line: 39, type: !2893)
!7937 = !DILocalVariable(name: "nonce", arg: 3, scope: !7930, file: !7931, line: 39, type: !184)
!7938 = !DILocalVariable(name: "nlen", arg: 4, scope: !7930, file: !7931, line: 40, type: !32)
!7939 = !DILocalVariable(name: "mlen", arg: 5, scope: !7930, file: !7931, line: 40, type: !32)
!7940 = !DILocation(line: 0, scope: !7930)
!7941 = !DILocation(line: 44, column: 8, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7930, file: !7931, line: 44, column: 6)
!7943 = !DILocation(line: 44, column: 27, scope: !7942)
!7944 = !DILocation(line: 50, column: 24, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !7931, line: 50, column: 13)
!7946 = distinct !DILexicalBlock(scope: !7942, file: !7931, line: 48, column: 13)
!7947 = !DILocation(line: 54, column: 5, scope: !7930)
!7948 = !DILocation(line: 54, column: 10, scope: !7930)
!7949 = !DILocation(line: 55, column: 5, scope: !7930)
!7950 = !DILocation(line: 55, column: 11, scope: !7930)
!7951 = !DILocation(line: 56, column: 5, scope: !7930)
!7952 = !DILocation(line: 56, column: 11, scope: !7930)
!7953 = !DILocation(line: 58, column: 2, scope: !7930)
!7954 = !DILocation(line: 59, column: 1, scope: !7930)
!7955 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7931, file: !7931, line: 137, type: !7956, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !7958)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!125, !184, !32, !490, !32, !490, !32, !2887}
!7958 = !{!7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968}
!7959 = !DILocalVariable(name: "out", arg: 1, scope: !7955, file: !7931, line: 137, type: !184)
!7960 = !DILocalVariable(name: "olen", arg: 2, scope: !7955, file: !7931, line: 137, type: !32)
!7961 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7955, file: !7931, line: 138, type: !490)
!7962 = !DILocalVariable(name: "alen", arg: 4, scope: !7955, file: !7931, line: 139, type: !32)
!7963 = !DILocalVariable(name: "payload", arg: 5, scope: !7955, file: !7931, line: 139, type: !490)
!7964 = !DILocalVariable(name: "plen", arg: 6, scope: !7955, file: !7931, line: 140, type: !32)
!7965 = !DILocalVariable(name: "c", arg: 7, scope: !7955, file: !7931, line: 140, type: !2887)
!7966 = !DILocalVariable(name: "b", scope: !7955, file: !7931, line: 154, type: !311)
!7967 = !DILocalVariable(name: "tag", scope: !7955, file: !7931, line: 155, type: !311)
!7968 = !DILocalVariable(name: "i", scope: !7955, file: !7931, line: 156, type: !32)
!7969 = !DILocation(line: 0, scope: !7955)
!7970 = !DILocation(line: 144, column: 11, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7955, file: !7931, line: 144, column: 6)
!7972 = !DILocation(line: 144, column: 29, scope: !7971)
!7973 = !DILocation(line: 146, column: 10, scope: !7971)
!7974 = !DILocation(line: 146, column: 15, scope: !7971)
!7975 = !DILocation(line: 147, column: 10, scope: !7971)
!7976 = !DILocation(line: 147, column: 15, scope: !7971)
!7977 = !DILocation(line: 150, column: 22, scope: !7971)
!7978 = !DILocation(line: 150, column: 17, scope: !7971)
!7979 = !DILocation(line: 150, column: 9, scope: !7971)
!7980 = !DILocation(line: 144, column: 6, scope: !7955)
!7981 = !DILocation(line: 154, column: 2, scope: !7955)
!7982 = !DILocation(line: 154, column: 10, scope: !7955)
!7983 = !DILocation(line: 155, column: 2, scope: !7955)
!7984 = !DILocation(line: 155, column: 10, scope: !7955)
!7985 = !DILocation(line: 161, column: 10, scope: !7955)
!7986 = !DILocation(line: 161, column: 53, scope: !7955)
!7987 = !DILocation(line: 161, column: 31, scope: !7955)
!7988 = !DILocation(line: 161, column: 9, scope: !7955)
!7989 = !DILocation(line: 161, column: 7, scope: !7955)
!7990 = !DILocation(line: 162, column: 2, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7955, file: !7931, line: 162, column: 2)
!7992 = !DILocation(line: 163, column: 21, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7994, file: !7931, line: 162, column: 28)
!7994 = distinct !DILexicalBlock(scope: !7991, file: !7931, line: 162, column: 2)
!7995 = !DILocation(line: 163, column: 10, scope: !7993)
!7996 = !DILocation(line: 163, column: 3, scope: !7993)
!7997 = !DILocation(line: 163, column: 8, scope: !7993)
!7998 = !DILocation(line: 162, column: 23, scope: !7994)
!7999 = !DILocation(line: 162, column: 16, scope: !7994)
!8000 = distinct !{!8000, !7990, !8001}
!8001 = !DILocation(line: 164, column: 2, scope: !7991)
!8002 = !DILocation(line: 165, column: 25, scope: !7955)
!8003 = !DILocation(line: 165, column: 10, scope: !7955)
!8004 = !DILocation(line: 165, column: 2, scope: !7955)
!8005 = !DILocation(line: 165, column: 8, scope: !7955)
!8006 = !DILocation(line: 166, column: 10, scope: !7955)
!8007 = !DILocation(line: 166, column: 2, scope: !7955)
!8008 = !DILocation(line: 166, column: 8, scope: !7955)
!8009 = !DILocation(line: 169, column: 35, scope: !7955)
!8010 = !DILocation(line: 169, column: 9, scope: !7955)
!8011 = !DILocation(line: 170, column: 6, scope: !7955)
!8012 = !DILocation(line: 171, column: 49, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !7931, line: 170, column: 16)
!8014 = distinct !DILexicalBlock(scope: !7955, file: !7931, line: 170, column: 6)
!8015 = !DILocation(line: 171, column: 3, scope: !8013)
!8016 = !DILocation(line: 172, column: 2, scope: !8013)
!8017 = !DILocation(line: 173, column: 6, scope: !7955)
!8018 = !DILocation(line: 174, column: 41, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !7931, line: 173, column: 16)
!8020 = distinct !DILexicalBlock(scope: !7955, file: !7931, line: 173, column: 6)
!8021 = !DILocation(line: 174, column: 3, scope: !8019)
!8022 = !DILocation(line: 175, column: 2, scope: !8019)
!8023 = !DILocation(line: 180, column: 7, scope: !7955)
!8024 = !DILocation(line: 181, column: 16, scope: !7955)
!8025 = !DILocation(line: 181, column: 8, scope: !7955)
!8026 = !DILocation(line: 184, column: 47, scope: !7955)
!8027 = !DILocation(line: 184, column: 2, scope: !7955)
!8028 = !DILocation(line: 186, column: 16, scope: !7955)
!8029 = !DILocation(line: 186, column: 8, scope: !7955)
!8030 = !DILocation(line: 189, column: 33, scope: !7955)
!8031 = !DILocation(line: 189, column: 9, scope: !7955)
!8032 = !DILocation(line: 191, column: 21, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8034, file: !7931, line: 191, column: 2)
!8034 = distinct !DILexicalBlock(scope: !7955, file: !7931, line: 191, column: 2)
!8035 = !DILocation(line: 191, column: 16, scope: !8033)
!8036 = !DILocation(line: 191, column: 2, scope: !8034)
!8037 = !DILocation(line: 190, column: 6, scope: !7955)
!8038 = !DILocation(line: 192, column: 12, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8033, file: !7931, line: 191, column: 32)
!8040 = !DILocation(line: 192, column: 21, scope: !8039)
!8041 = !DILocation(line: 192, column: 19, scope: !8039)
!8042 = !DILocation(line: 192, column: 7, scope: !8039)
!8043 = !DILocation(line: 192, column: 10, scope: !8039)
!8044 = !DILocation(line: 191, column: 27, scope: !8033)
!8045 = distinct !{!8045, !8036, !8046}
!8046 = !DILocation(line: 193, column: 2, scope: !8034)
!8047 = !DILocation(line: 196, column: 1, scope: !7955)
!8048 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7931, file: !7931, line: 64, type: !8049, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{null, !184, !490, !32, !32, !2893}
!8051 = !{!8052, !8053, !8054, !8055, !8056, !8057}
!8052 = !DILocalVariable(name: "T", arg: 1, scope: !8048, file: !7931, line: 64, type: !184)
!8053 = !DILocalVariable(name: "data", arg: 2, scope: !8048, file: !7931, line: 64, type: !490)
!8054 = !DILocalVariable(name: "dlen", arg: 3, scope: !8048, file: !7931, line: 64, type: !32)
!8055 = !DILocalVariable(name: "flag", arg: 4, scope: !8048, file: !7931, line: 65, type: !32)
!8056 = !DILocalVariable(name: "sched", arg: 5, scope: !8048, file: !7931, line: 65, type: !2893)
!8057 = !DILocalVariable(name: "i", scope: !8048, file: !7931, line: 68, type: !32)
!8058 = !DILocation(line: 0, scope: !8048)
!8059 = !DILocation(line: 70, column: 11, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8048, file: !7931, line: 70, column: 6)
!8061 = !DILocation(line: 70, column: 6, scope: !8048)
!8062 = !DILocation(line: 71, column: 26, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8060, file: !7931, line: 70, column: 16)
!8064 = !DILocation(line: 71, column: 8, scope: !8063)
!8065 = !DILocation(line: 72, column: 3, scope: !8063)
!8066 = !DILocation(line: 72, column: 8, scope: !8063)
!8067 = !DILocation(line: 73, column: 8, scope: !8063)
!8068 = !DILocation(line: 74, column: 2, scope: !8063)
!8069 = !DILocation(line: 0, scope: !8060)
!8070 = !DILocation(line: 78, column: 11, scope: !8048)
!8071 = !DILocation(line: 78, column: 2, scope: !8048)
!8072 = !DILocation(line: 79, column: 30, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8048, file: !7931, line: 78, column: 19)
!8074 = !DILocation(line: 79, column: 25, scope: !8073)
!8075 = !DILocation(line: 79, column: 6, scope: !8073)
!8076 = !DILocation(line: 79, column: 9, scope: !8073)
!8077 = !DILocation(line: 79, column: 3, scope: !8073)
!8078 = !DILocation(line: 79, column: 22, scope: !8073)
!8079 = !DILocation(line: 80, column: 11, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8073, file: !7931, line: 80, column: 7)
!8081 = !DILocation(line: 80, column: 24, scope: !8080)
!8082 = !DILocation(line: 80, column: 30, scope: !8080)
!8083 = !DILocation(line: 81, column: 11, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !7931, line: 80, column: 44)
!8085 = !DILocation(line: 82, column: 3, scope: !8084)
!8086 = distinct !{!8086, !8071, !8087}
!8087 = !DILocation(line: 83, column: 2, scope: !8048)
!8088 = !DILocation(line: 84, column: 1, scope: !8048)
!8089 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7931, file: !7931, line: 93, type: !8090, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !8093)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{!125, !184, !32, !490, !32, !184, !8092}
!8092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2893)
!8093 = !{!8094, !8095, !8096, !8097, !8098, !8099, !8100, !8101, !8102, !8103}
!8094 = !DILocalVariable(name: "out", arg: 1, scope: !8089, file: !7931, line: 93, type: !184)
!8095 = !DILocalVariable(name: "outlen", arg: 2, scope: !8089, file: !7931, line: 93, type: !32)
!8096 = !DILocalVariable(name: "in", arg: 3, scope: !8089, file: !7931, line: 93, type: !490)
!8097 = !DILocalVariable(name: "inlen", arg: 4, scope: !8089, file: !7931, line: 94, type: !32)
!8098 = !DILocalVariable(name: "ctr", arg: 5, scope: !8089, file: !7931, line: 94, type: !184)
!8099 = !DILocalVariable(name: "sched", arg: 6, scope: !8089, file: !7931, line: 94, type: !8092)
!8100 = !DILocalVariable(name: "buffer", scope: !8089, file: !7931, line: 97, type: !311)
!8101 = !DILocalVariable(name: "nonce", scope: !8089, file: !7931, line: 98, type: !311)
!8102 = !DILocalVariable(name: "block_num", scope: !8089, file: !7931, line: 99, type: !227)
!8103 = !DILocalVariable(name: "i", scope: !8089, file: !7931, line: 100, type: !32)
!8104 = !DILocation(line: 0, scope: !8089)
!8105 = !DILocation(line: 97, column: 2, scope: !8089)
!8106 = !DILocation(line: 97, column: 10, scope: !8089)
!8107 = !DILocation(line: 98, column: 2, scope: !8089)
!8108 = !DILocation(line: 98, column: 10, scope: !8089)
!8109 = !DILocation(line: 103, column: 10, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8089, file: !7931, line: 103, column: 6)
!8111 = !DILocation(line: 103, column: 27, scope: !8110)
!8112 = !DILocation(line: 114, column: 9, scope: !8089)
!8113 = !DILocation(line: 117, column: 27, scope: !8089)
!8114 = !DILocation(line: 117, column: 44, scope: !8089)
!8115 = !DILocation(line: 117, column: 37, scope: !8089)
!8116 = !DILocation(line: 117, column: 43, scope: !8089)
!8117 = !DILocation(line: 117, column: 42, scope: !8089)
!8118 = !DILocation(line: 118, column: 2, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8089, file: !7931, line: 118, column: 2)
!8120 = !DILocation(line: 119, column: 10, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !7931, line: 119, column: 7)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !7931, line: 118, column: 30)
!8123 = distinct !DILexicalBlock(scope: !8119, file: !7931, line: 118, column: 2)
!8124 = !DILocation(line: 119, column: 33, scope: !8121)
!8125 = !DILocation(line: 119, column: 7, scope: !8122)
!8126 = !DILocation(line: 120, column: 13, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8121, file: !7931, line: 119, column: 39)
!8128 = !DILocation(line: 121, column: 36, scope: !8127)
!8129 = !DILocation(line: 121, column: 16, scope: !8127)
!8130 = !DILocation(line: 121, column: 14, scope: !8127)
!8131 = !DILocation(line: 122, column: 16, scope: !8127)
!8132 = !DILocation(line: 122, column: 14, scope: !8127)
!8133 = !DILocation(line: 123, column: 9, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8127, file: !7931, line: 123, column: 8)
!8135 = !DILocation(line: 123, column: 8, scope: !8127)
!8136 = !DILocation(line: 128, column: 12, scope: !8122)
!8137 = !DILocation(line: 128, column: 49, scope: !8122)
!8138 = !DILocation(line: 128, column: 46, scope: !8122)
!8139 = !DILocation(line: 128, column: 44, scope: !8122)
!8140 = !DILocation(line: 128, column: 7, scope: !8122)
!8141 = !DILocation(line: 128, column: 10, scope: !8122)
!8142 = !DILocation(line: 118, column: 25, scope: !8123)
!8143 = !DILocation(line: 118, column: 16, scope: !8123)
!8144 = distinct !{!8144, !8118, !8145}
!8145 = !DILocation(line: 129, column: 2, scope: !8119)
!8146 = !DILocation(line: 132, column: 12, scope: !8089)
!8147 = !DILocation(line: 132, column: 33, scope: !8089)
!8148 = !DILocation(line: 132, column: 2, scope: !8089)
!8149 = !DILocation(line: 132, column: 10, scope: !8089)
!8150 = !DILocation(line: 132, column: 23, scope: !8089)
!8151 = !DILocation(line: 132, column: 31, scope: !8089)
!8152 = !DILocation(line: 134, column: 2, scope: !8089)
!8153 = !DILocation(line: 135, column: 1, scope: !8089)
!8154 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7931, file: !7931, line: 198, type: !7956, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !8155)
!8155 = !{!8156, !8157, !8158, !8159, !8160, !8161, !8162, !8163, !8164, !8165}
!8156 = !DILocalVariable(name: "out", arg: 1, scope: !8154, file: !7931, line: 198, type: !184)
!8157 = !DILocalVariable(name: "olen", arg: 2, scope: !8154, file: !7931, line: 198, type: !32)
!8158 = !DILocalVariable(name: "associated_data", arg: 3, scope: !8154, file: !7931, line: 199, type: !490)
!8159 = !DILocalVariable(name: "alen", arg: 4, scope: !8154, file: !7931, line: 200, type: !32)
!8160 = !DILocalVariable(name: "payload", arg: 5, scope: !8154, file: !7931, line: 200, type: !490)
!8161 = !DILocalVariable(name: "plen", arg: 6, scope: !8154, file: !7931, line: 201, type: !32)
!8162 = !DILocalVariable(name: "c", arg: 7, scope: !8154, file: !7931, line: 201, type: !2887)
!8163 = !DILocalVariable(name: "b", scope: !8154, file: !7931, line: 215, type: !311)
!8164 = !DILocalVariable(name: "tag", scope: !8154, file: !7931, line: 216, type: !311)
!8165 = !DILocalVariable(name: "i", scope: !8154, file: !7931, line: 217, type: !32)
!8166 = !DILocation(line: 0, scope: !8154)
!8167 = !DILocation(line: 205, column: 11, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 205, column: 6)
!8169 = !DILocation(line: 205, column: 29, scope: !8168)
!8170 = !DILocation(line: 207, column: 13, scope: !8168)
!8171 = !DILocation(line: 207, column: 18, scope: !8168)
!8172 = !DILocation(line: 208, column: 13, scope: !8168)
!8173 = !DILocation(line: 208, column: 18, scope: !8168)
!8174 = !DILocation(line: 211, column: 24, scope: !8168)
!8175 = !DILocation(line: 211, column: 19, scope: !8168)
!8176 = !DILocation(line: 211, column: 12, scope: !8168)
!8177 = !DILocation(line: 205, column: 6, scope: !8154)
!8178 = !DILocation(line: 215, column: 2, scope: !8154)
!8179 = !DILocation(line: 215, column: 10, scope: !8154)
!8180 = !DILocation(line: 216, column: 2, scope: !8154)
!8181 = !DILocation(line: 216, column: 10, scope: !8154)
!8182 = !DILocation(line: 222, column: 7, scope: !8154)
!8183 = !DILocation(line: 223, column: 2, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 223, column: 2)
!8185 = !DILocation(line: 224, column: 21, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !7931, line: 223, column: 27)
!8187 = distinct !DILexicalBlock(scope: !8184, file: !7931, line: 223, column: 2)
!8188 = !DILocation(line: 224, column: 10, scope: !8186)
!8189 = !DILocation(line: 224, column: 3, scope: !8186)
!8190 = !DILocation(line: 224, column: 8, scope: !8186)
!8191 = !DILocation(line: 223, column: 22, scope: !8187)
!8192 = !DILocation(line: 223, column: 16, scope: !8187)
!8193 = distinct !{!8193, !8183, !8194}
!8194 = !DILocation(line: 225, column: 2, scope: !8184)
!8195 = !DILocation(line: 226, column: 10, scope: !8154)
!8196 = !DILocation(line: 226, column: 16, scope: !8154)
!8197 = !DILocation(line: 226, column: 2, scope: !8154)
!8198 = !DILocation(line: 226, column: 8, scope: !8154)
!8199 = !DILocation(line: 229, column: 67, scope: !8154)
!8200 = !DILocation(line: 229, column: 2, scope: !8154)
!8201 = !DILocation(line: 231, column: 16, scope: !8154)
!8202 = !DILocation(line: 231, column: 8, scope: !8154)
!8203 = !DILocation(line: 234, column: 33, scope: !8154)
!8204 = !DILocation(line: 234, column: 9, scope: !8154)
!8205 = !DILocation(line: 235, column: 16, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !7931, line: 235, column: 2)
!8207 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 235, column: 2)
!8208 = !DILocation(line: 235, column: 2, scope: !8207)
!8209 = !DILocation(line: 236, column: 39, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8206, file: !7931, line: 235, column: 32)
!8211 = !DILocation(line: 236, column: 12, scope: !8210)
!8212 = !DILocation(line: 236, column: 46, scope: !8210)
!8213 = !DILocation(line: 236, column: 44, scope: !8210)
!8214 = !DILocation(line: 236, column: 3, scope: !8210)
!8215 = !DILocation(line: 236, column: 10, scope: !8210)
!8216 = !DILocation(line: 235, column: 27, scope: !8206)
!8217 = distinct !{!8217, !8208, !8218}
!8218 = !DILocation(line: 237, column: 2, scope: !8207)
!8219 = !DILocation(line: 242, column: 10, scope: !8154)
!8220 = !DILocation(line: 242, column: 51, scope: !8154)
!8221 = !DILocation(line: 242, column: 30, scope: !8154)
!8222 = !DILocation(line: 242, column: 9, scope: !8154)
!8223 = !DILocation(line: 242, column: 7, scope: !8154)
!8224 = !DILocation(line: 243, column: 2, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 243, column: 2)
!8226 = !DILocation(line: 244, column: 21, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !7931, line: 243, column: 27)
!8228 = distinct !DILexicalBlock(scope: !8225, file: !7931, line: 243, column: 2)
!8229 = !DILocation(line: 244, column: 10, scope: !8227)
!8230 = !DILocation(line: 244, column: 3, scope: !8227)
!8231 = !DILocation(line: 244, column: 8, scope: !8227)
!8232 = !DILocation(line: 243, column: 22, scope: !8228)
!8233 = !DILocation(line: 243, column: 16, scope: !8228)
!8234 = distinct !{!8234, !8224, !8235}
!8235 = !DILocation(line: 245, column: 2, scope: !8225)
!8236 = !DILocation(line: 246, column: 26, scope: !8154)
!8237 = !DILocation(line: 246, column: 37, scope: !8154)
!8238 = !DILocation(line: 246, column: 10, scope: !8154)
!8239 = !DILocation(line: 246, column: 8, scope: !8154)
!8240 = !DILocation(line: 247, column: 10, scope: !8154)
!8241 = !DILocation(line: 247, column: 8, scope: !8154)
!8242 = !DILocation(line: 250, column: 33, scope: !8154)
!8243 = !DILocation(line: 250, column: 9, scope: !8154)
!8244 = !DILocation(line: 251, column: 6, scope: !8154)
!8245 = !DILocation(line: 252, column: 47, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8247, file: !7931, line: 251, column: 16)
!8247 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 251, column: 6)
!8248 = !DILocation(line: 252, column: 3, scope: !8246)
!8249 = !DILocation(line: 253, column: 2, scope: !8246)
!8250 = !DILocation(line: 254, column: 6, scope: !8154)
!8251 = !DILocation(line: 255, column: 33, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !7931, line: 254, column: 16)
!8253 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 254, column: 6)
!8254 = !DILocation(line: 255, column: 28, scope: !8252)
!8255 = !DILocation(line: 255, column: 45, scope: !8252)
!8256 = !DILocation(line: 255, column: 3, scope: !8252)
!8257 = !DILocation(line: 256, column: 2, scope: !8252)
!8258 = !DILocation(line: 259, column: 26, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8154, file: !7931, line: 259, column: 6)
!8260 = !DILocation(line: 259, column: 6, scope: !8259)
!8261 = !DILocation(line: 259, column: 32, scope: !8259)
!8262 = !DILocation(line: 259, column: 6, scope: !8154)
!8263 = !DILocation(line: 263, column: 26, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8259, file: !7931, line: 261, column: 11)
!8265 = !DILocation(line: 263, column: 21, scope: !8264)
!8266 = !DILocation(line: 263, column: 3, scope: !8264)
!8267 = !DILocation(line: 264, column: 3, scope: !8264)
!8268 = !DILocation(line: 0, scope: !8259)
!8269 = !DILocation(line: 266, column: 1, scope: !8154)
!8270 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8271, file: !8271, line: 57, type: !8272, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !8318)
!8271 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8272 = !DISubroutineType(types: !8273)
!8273 = !{null, !32, !8274}
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8275, size: 32)
!8275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8276)
!8276 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3020, line: 141, baseType: !8277)
!8277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3020, line: 97, size: 256, elements: !8278)
!8278 = !{!8279}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8277, file: !3020, line: 107, baseType: !8280, size: 256)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3020, line: 98, size: 256, elements: !8281)
!8281 = !{!8282, !8287, !8292, !8297, !8302, !8307, !8312, !8317}
!8282 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 99, baseType: !8283, size: 32)
!8283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 99, size: 32, elements: !8284)
!8284 = !{!8285, !8286}
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8283, file: !3020, line: 99, baseType: !208, size: 32)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8283, file: !3020, line: 99, baseType: !208, size: 32)
!8287 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 100, baseType: !8288, size: 32, offset: 32)
!8288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 100, size: 32, elements: !8289)
!8289 = !{!8290, !8291}
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8288, file: !3020, line: 100, baseType: !208, size: 32)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8288, file: !3020, line: 100, baseType: !208, size: 32)
!8292 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 101, baseType: !8293, size: 32, offset: 64)
!8293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 101, size: 32, elements: !8294)
!8294 = !{!8295, !8296}
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8293, file: !3020, line: 101, baseType: !208, size: 32)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8293, file: !3020, line: 101, baseType: !208, size: 32)
!8297 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 102, baseType: !8298, size: 32, offset: 96)
!8298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 102, size: 32, elements: !8299)
!8299 = !{!8300, !8301}
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8298, file: !3020, line: 102, baseType: !208, size: 32)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8298, file: !3020, line: 102, baseType: !208, size: 32)
!8302 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 103, baseType: !8303, size: 32, offset: 128)
!8303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 103, size: 32, elements: !8304)
!8304 = !{!8305, !8306}
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8303, file: !3020, line: 103, baseType: !208, size: 32)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8303, file: !3020, line: 103, baseType: !208, size: 32)
!8307 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 104, baseType: !8308, size: 32, offset: 160)
!8308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 104, size: 32, elements: !8309)
!8309 = !{!8310, !8311}
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8308, file: !3020, line: 104, baseType: !208, size: 32)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8308, file: !3020, line: 104, baseType: !208, size: 32)
!8312 = !DIDerivedType(tag: DW_TAG_member, scope: !8280, file: !3020, line: 105, baseType: !8313, size: 32, offset: 192)
!8313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8280, file: !3020, line: 105, size: 32, elements: !8314)
!8314 = !{!8315, !8316}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8313, file: !3020, line: 105, baseType: !208, size: 32)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8313, file: !3020, line: 105, baseType: !208, size: 32)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8280, file: !3020, line: 106, baseType: !208, size: 32, offset: 224)
!8318 = !{!8319, !8320}
!8319 = !DILocalVariable(name: "reason", arg: 1, scope: !8270, file: !8271, line: 57, type: !32)
!8320 = !DILocalVariable(name: "esf", arg: 2, scope: !8270, file: !8271, line: 57, type: !8274)
!8321 = !DILocation(line: 0, scope: !8270)
!8322 = !DILocation(line: 60, column: 10, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8270, file: !8271, line: 60, column: 6)
!8324 = !DILocation(line: 60, column: 6, scope: !8270)
!8325 = !DILocation(line: 61, column: 3, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8323, file: !8271, line: 60, column: 19)
!8327 = !DILocation(line: 62, column: 2, scope: !8326)
!8328 = !DILocation(line: 63, column: 2, scope: !8270)
!8329 = !DILocation(line: 64, column: 1, scope: !8270)
!8330 = distinct !DISubprogram(name: "esf_dump", scope: !8271, file: !8271, line: 20, type: !8331, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !8333)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{null, !8274}
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "esf", arg: 1, scope: !8330, file: !8271, line: 20, type: !8274)
!8335 = !DILocation(line: 0, scope: !8330)
!8336 = !DILocation(line: 22, column: 2, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !8271, line: 22, column: 2)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !8271, line: 22, column: 2)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8271, line: 22, column: 2)
!8340 = distinct !DILexicalBlock(scope: !8330, file: !8271, line: 22, column: 2)
!8341 = !DILocation(line: 24, column: 2, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !8271, line: 24, column: 2)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !8271, line: 24, column: 2)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !8271, line: 24, column: 2)
!8345 = distinct !DILexicalBlock(scope: !8330, file: !8271, line: 24, column: 2)
!8346 = !DILocation(line: 26, column: 2, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !8271, line: 26, column: 2)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !8271, line: 26, column: 2)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !8271, line: 26, column: 2)
!8350 = distinct !DILexicalBlock(scope: !8330, file: !8271, line: 26, column: 2)
!8351 = !DILocation(line: 53, column: 2, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !8271, line: 53, column: 2)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !8271, line: 53, column: 2)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !8271, line: 53, column: 2)
!8355 = distinct !DILexicalBlock(scope: !8330, file: !8271, line: 53, column: 2)
!8356 = !DILocation(line: 55, column: 1, scope: !8330)
!8357 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8271, file: !8271, line: 82, type: !8358, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !8373)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{null, !8274, !8360}
!8360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8361, size: 32)
!8361 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8362)
!8362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8363)
!8363 = !{!8364, !8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372}
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8362, file: !601, line: 26, baseType: !208, size: 32)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8362, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8362, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8362, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8362, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8362, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8362, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8362, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8362, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8373 = !{!8374, !8375, !8376}
!8374 = !DILocalVariable(name: "esf", arg: 1, scope: !8357, file: !8271, line: 82, type: !8274)
!8375 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8357, file: !8271, line: 82, type: !8360)
!8376 = !DILocalVariable(name: "reason", scope: !8357, file: !8271, line: 88, type: !32)
!8377 = !DILocation(line: 0, scope: !8357)
!8378 = !DILocation(line: 88, column: 35, scope: !8357)
!8379 = !DILocation(line: 108, column: 2, scope: !8357)
!8380 = !DILocation(line: 131, column: 1, scope: !8357)
!8381 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8271, file: !8271, line: 133, type: !8382, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !8384)
!8382 = !DISubroutineType(types: !8383)
!8383 = !{null, !124}
!8384 = !{!8385, !8386, !8387}
!8385 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8381, file: !8271, line: 133, type: !124)
!8386 = !DILocalVariable(name: "ssf_contents", scope: !8381, file: !8271, line: 135, type: !1055)
!8387 = !DILocalVariable(name: "oops_esf", scope: !8381, file: !8271, line: 136, type: !8276)
!8388 = !DILocation(line: 0, scope: !8381)
!8389 = !DILocation(line: 136, column: 2, scope: !8381)
!8390 = !DILocation(line: 136, column: 15, scope: !8381)
!8391 = !DILocation(line: 139, column: 22, scope: !8381)
!8392 = !DILocation(line: 139, column: 17, scope: !8381)
!8393 = !DILocation(line: 139, column: 20, scope: !8381)
!8394 = !DILocation(line: 141, column: 2, scope: !8381)
!8395 = !DILocation(line: 142, column: 2, scope: !8381)
!8396 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8397, file: !8397, line: 40, type: !6989, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8398)
!8397 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8398 = !{!8399}
!8399 = !DILocalVariable(name: "irq", arg: 1, scope: !8396, file: !8397, line: 40, type: !32)
!8400 = !DILocation(line: 0, scope: !8396)
!8401 = !DILocation(line: 42, column: 2, scope: !8396)
!8402 = !DILocation(line: 43, column: 1, scope: !8396)
!8403 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !680, file: !680, line: 1684, type: !8404, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8406)
!8404 = !DISubroutineType(types: !8405)
!8405 = !{null, !945}
!8406 = !{!8407}
!8407 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8403, file: !680, line: 1684, type: !945)
!8408 = !DILocation(line: 0, scope: !8403)
!8409 = !DILocation(line: 1686, column: 23, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8403, file: !680, line: 1686, column: 7)
!8411 = !DILocation(line: 1686, column: 7, scope: !8403)
!8412 = !DILocation(line: 1688, column: 5, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8410, file: !680, line: 1687, column: 3)
!8414 = !{i64 2151640583}
!8415 = !DILocation(line: 1689, column: 81, scope: !8413)
!8416 = !DILocation(line: 1689, column: 60, scope: !8413)
!8417 = !DILocation(line: 1689, column: 34, scope: !8413)
!8418 = !DILocation(line: 1689, column: 5, scope: !8413)
!8419 = !DILocation(line: 1689, column: 43, scope: !8413)
!8420 = !DILocation(line: 1690, column: 5, scope: !8413)
!8421 = !{i64 2151640697}
!8422 = !DILocation(line: 1691, column: 3, scope: !8413)
!8423 = !DILocation(line: 1692, column: 1, scope: !8403)
!8424 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8397, file: !8397, line: 45, type: !6989, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8425)
!8425 = !{!8426}
!8426 = !DILocalVariable(name: "irq", arg: 1, scope: !8424, file: !8397, line: 45, type: !32)
!8427 = !DILocation(line: 0, scope: !8424)
!8428 = !DILocation(line: 47, column: 2, scope: !8424)
!8429 = !DILocation(line: 48, column: 1, scope: !8424)
!8430 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !680, file: !680, line: 1722, type: !8404, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8431)
!8431 = !{!8432}
!8432 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8430, file: !680, line: 1722, type: !945)
!8433 = !DILocation(line: 0, scope: !8430)
!8434 = !DILocation(line: 1724, column: 23, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8430, file: !680, line: 1724, column: 7)
!8436 = !DILocation(line: 1724, column: 7, scope: !8430)
!8437 = !DILocation(line: 1726, column: 81, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8435, file: !680, line: 1725, column: 3)
!8439 = !DILocation(line: 1726, column: 60, scope: !8438)
!8440 = !DILocation(line: 1726, column: 34, scope: !8438)
!8441 = !DILocation(line: 1726, column: 5, scope: !8438)
!8442 = !DILocation(line: 1726, column: 43, scope: !8438)
!8443 = !DILocation(line: 271, column: 3, scope: !8444, inlinedAt: !8446)
!8444 = distinct !DISubprogram(name: "__DSB", scope: !8445, file: !8445, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !639)
!8445 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8446 = distinct !DILocation(line: 1727, column: 5, scope: !8438)
!8447 = !{i64 4094966}
!8448 = !DILocation(line: 260, column: 3, scope: !8449, inlinedAt: !8450)
!8449 = distinct !DISubprogram(name: "__ISB", scope: !8445, file: !8445, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !639)
!8450 = distinct !DILocation(line: 1728, column: 5, scope: !8438)
!8451 = !{i64 4094683}
!8452 = !DILocation(line: 1729, column: 3, scope: !8438)
!8453 = !DILocation(line: 1730, column: 1, scope: !8430)
!8454 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8397, file: !8397, line: 50, type: !8455, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8457)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{!125, !32}
!8457 = !{!8458}
!8458 = !DILocalVariable(name: "irq", arg: 1, scope: !8454, file: !8397, line: 50, type: !32)
!8459 = !DILocation(line: 0, scope: !8454)
!8460 = !DILocation(line: 52, column: 20, scope: !8454)
!8461 = !DILocation(line: 52, column: 9, scope: !8454)
!8462 = !DILocation(line: 52, column: 41, scope: !8454)
!8463 = !DILocation(line: 52, column: 39, scope: !8454)
!8464 = !DILocation(line: 52, column: 2, scope: !8454)
!8465 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8397, file: !8397, line: 64, type: !8466, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8468)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{null, !32, !32, !208}
!8468 = !{!8469, !8470, !8471}
!8469 = !DILocalVariable(name: "irq", arg: 1, scope: !8465, file: !8397, line: 64, type: !32)
!8470 = !DILocalVariable(name: "prio", arg: 2, scope: !8465, file: !8397, line: 64, type: !32)
!8471 = !DILocalVariable(name: "flags", arg: 3, scope: !8465, file: !8397, line: 64, type: !208)
!8472 = !DILocation(line: 0, scope: !8465)
!8473 = !DILocation(line: 83, column: 8, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8397, line: 82, column: 9)
!8475 = distinct !DILexicalBlock(scope: !8465, file: !8397, line: 76, column: 6)
!8476 = !DILocation(line: 95, column: 2, scope: !8465)
!8477 = !DILocation(line: 96, column: 1, scope: !8465)
!8478 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8479, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{null, !945, !208}
!8481 = !{!8482, !8483}
!8482 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8478, file: !680, line: 1814, type: !945)
!8483 = !DILocalVariable(name: "priority", arg: 2, scope: !8478, file: !680, line: 1814, type: !208)
!8484 = !DILocation(line: 0, scope: !8478)
!8485 = !DILocation(line: 0, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8478, file: !680, line: 1816, column: 7)
!8487 = !DILocation(line: 1816, column: 7, scope: !8478)
!8488 = !DILocation(line: 1824, column: 1, scope: !8478)
!8489 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8397, file: !8397, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !8490)
!8490 = !{!8491}
!8491 = !DILocalVariable(name: "unused", arg: 1, scope: !8489, file: !8397, line: 155, type: !13)
!8492 = !DILocation(line: 0, scope: !8489)
!8493 = !DILocation(line: 159, column: 2, scope: !8489)
!8494 = !DILocation(line: 160, column: 1, scope: !8489)
!8495 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8496, file: !8496, line: 87, type: !3440, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2957, retainedNodes: !639)
!8496 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8497 = !DILocation(line: 89, column: 2, scope: !8495)
!8498 = !DILocation(line: 90, column: 2, scope: !8495)
!8499 = !DILocation(line: 91, column: 1, scope: !8495)
!8500 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8496, file: !8496, line: 23, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8501 = !DISubprogram(name: "z_arm_int_exit", scope: !8502, file: !8502, line: 153, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8502 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8503 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8504, file: !8504, line: 256, type: !3440, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !639)
!8504 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8505 = !DILocation(line: 258, column: 2, scope: !8503)
!8506 = !DILocation(line: 260, column: 2, scope: !8503)
!8507 = !DILocation(line: 262, column: 2, scope: !8503)
!8508 = !DILocation(line: 263, column: 2, scope: !8503)
!8509 = !DILocation(line: 267, column: 2, scope: !8503)
!8510 = !DILocation(line: 268, column: 2, scope: !8503)
!8511 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8504, file: !8504, line: 53, type: !3440, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !639)
!8512 = !DILocation(line: 55, column: 12, scope: !8511)
!8513 = !DILocation(line: 271, column: 3, scope: !8514, inlinedAt: !8515)
!8514 = distinct !DISubprogram(name: "__DSB", scope: !8445, file: !8445, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !639)
!8515 = distinct !DILocation(line: 56, column: 2, scope: !8511)
!8516 = !{i64 4093637}
!8517 = !DILocation(line: 260, column: 3, scope: !8518, inlinedAt: !8519)
!8518 = distinct !DISubprogram(name: "__ISB", scope: !8445, file: !8445, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !639)
!8519 = distinct !DILocation(line: 57, column: 2, scope: !8511)
!8520 = !{i64 4093354}
!8521 = !DILocation(line: 58, column: 1, scope: !8511)
!8522 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8504, file: !8504, line: 96, type: !3440, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !639)
!8523 = !DILocation(line: 103, column: 13, scope: !8522)
!8524 = !DILocation(line: 975, column: 3, scope: !8525, inlinedAt: !8530)
!8525 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8445, file: !8445, line: 971, type: !8526, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !8528)
!8526 = !DISubroutineType(types: !8527)
!8527 = !{!208}
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "result", scope: !8525, file: !8445, line: 973, type: !208)
!8530 = distinct !DILocation(line: 189, column: 16, scope: !8522)
!8531 = !{i64 4114467}
!8532 = !DILocation(line: 0, scope: !8525, inlinedAt: !8530)
!8533 = !DILocation(line: 189, column: 32, scope: !8522)
!8534 = !DILocalVariable(name: "control", arg: 1, scope: !8535, file: !8445, line: 1001, type: !208)
!8535 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8445, file: !8445, line: 1001, type: !8536, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2959, retainedNodes: !8538)
!8536 = !DISubroutineType(types: !8537)
!8537 = !{null, !208}
!8538 = !{!8534}
!8539 = !DILocation(line: 0, scope: !8535, inlinedAt: !8540)
!8540 = distinct !DILocation(line: 189, column: 2, scope: !8522)
!8541 = !DILocation(line: 1003, column: 3, scope: !8535, inlinedAt: !8540)
!8542 = !{i64 4115187}
!8543 = !DILocation(line: 260, column: 3, scope: !8518, inlinedAt: !8544)
!8544 = distinct !DILocation(line: 1004, column: 3, scope: !8535, inlinedAt: !8540)
!8545 = !DILocation(line: 191, column: 1, scope: !8522)
!8546 = distinct !DISubprogram(name: "arch_swap", scope: !8547, file: !8547, line: 33, type: !8455, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !8548)
!8547 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8548 = !{!8549}
!8549 = !DILocalVariable(name: "key", arg: 1, scope: !8546, file: !8547, line: 33, type: !32)
!8550 = !DILocation(line: 0, scope: !8546)
!8551 = !DILocation(line: 36, column: 2, scope: !8546)
!8552 = !DILocation(line: 36, column: 17, scope: !8546)
!8553 = !DILocation(line: 36, column: 25, scope: !8546)
!8554 = !DILocation(line: 37, column: 37, scope: !8546)
!8555 = !DILocation(line: 37, column: 17, scope: !8546)
!8556 = !DILocation(line: 37, column: 35, scope: !8546)
!8557 = !DILocation(line: 41, column: 12, scope: !8546)
!8558 = !DILocalVariable(name: "key", arg: 1, scope: !8559, file: !6978, line: 84, type: !32)
!8559 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !8560)
!8560 = !{!8558}
!8561 = !DILocation(line: 0, scope: !8559, inlinedAt: !8562)
!8562 = distinct !DILocation(line: 44, column: 2, scope: !8546)
!8563 = !DILocation(line: 95, column: 2, scope: !8559, inlinedAt: !8562)
!8564 = !{i64 2594481}
!8565 = !DILocation(line: 53, column: 9, scope: !8546)
!8566 = !DILocation(line: 53, column: 24, scope: !8546)
!8567 = !DILocation(line: 53, column: 2, scope: !8546)
!8568 = distinct !DISubprogram(name: "arch_new_thread", scope: !8569, file: !8569, line: 56, type: !8570, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8677)
!8569 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8570 = !DISubroutineType(types: !8571)
!8571 = !{null, !8572, !8672, !393, !5390, !124, !124, !124}
!8572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8573, size: 32)
!8573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !8574)
!8574 = !{!8575, !8633, !8645, !8646, !8647, !8648, !8654, !8667}
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8573, file: !531, line: 247, baseType: !8576, size: 384)
!8576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !8577)
!8577 = !{!8578, !8602, !8609, !8610, !8611, !8620, !8621, !8622}
!8578 = !DIDerivedType(tag: DW_TAG_member, scope: !8576, file: !531, line: 60, baseType: !8579, size: 64)
!8579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8576, file: !531, line: 60, size: 64, elements: !8580)
!8580 = !{!8581, !8596}
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8579, file: !531, line: 61, baseType: !8582, size: 64)
!8582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !8583)
!8583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !8584)
!8584 = !{!8585, !8591}
!8585 = !DIDerivedType(tag: DW_TAG_member, scope: !8583, file: !541, line: 38, baseType: !8586, size: 32)
!8586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8583, file: !541, line: 38, size: 32, elements: !8587)
!8587 = !{!8588, !8590}
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8586, file: !541, line: 39, baseType: !8589, size: 32)
!8589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 32)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8586, file: !541, line: 40, baseType: !8589, size: 32)
!8591 = !DIDerivedType(tag: DW_TAG_member, scope: !8583, file: !541, line: 42, baseType: !8592, size: 32, offset: 32)
!8592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8583, file: !541, line: 42, size: 32, elements: !8593)
!8593 = !{!8594, !8595}
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8592, file: !541, line: 43, baseType: !8589, size: 32)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8592, file: !541, line: 44, baseType: !8589, size: 32)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8579, file: !531, line: 62, baseType: !8597, size: 64)
!8597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !8598)
!8598 = !{!8599}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8597, file: !557, line: 50, baseType: !8600, size: 64)
!8600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8601, size: 64, elements: !562)
!8601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8597, size: 32)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8576, file: !531, line: 68, baseType: !8603, size: 32, offset: 64)
!8603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8604, size: 32)
!8604 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !8605)
!8605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !8606)
!8606 = !{!8607}
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8605, file: !567, line: 232, baseType: !8608, size: 64)
!8608 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !8583)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8576, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8576, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!8611 = !DIDerivedType(tag: DW_TAG_member, scope: !8576, file: !531, line: 90, baseType: !8612, size: 16, offset: 112)
!8612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8576, file: !531, line: 90, size: 16, elements: !8613)
!8613 = !{!8614, !8619}
!8614 = !DIDerivedType(tag: DW_TAG_member, scope: !8612, file: !531, line: 91, baseType: !8615, size: 16)
!8615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8612, file: !531, line: 91, size: 16, elements: !8616)
!8616 = !{!8617, !8618}
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8615, file: !531, line: 96, baseType: !581, size: 8)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8615, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8612, file: !531, line: 100, baseType: !227, size: 16)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8576, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8576, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8576, file: !531, line: 131, baseType: !8623, size: 192, offset: 192)
!8623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !8624)
!8624 = !{!8625, !8626, !8632}
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8623, file: !567, line: 245, baseType: !8582, size: 64)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8623, file: !567, line: 246, baseType: !8627, size: 32, offset: 64)
!8627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !8628)
!8628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8629, size: 32)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{null, !8631}
!8631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8623, size: 32)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8623, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8573, file: !531, line: 250, baseType: !8634, size: 288, offset: 384)
!8634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8635)
!8635 = !{!8636, !8637, !8638, !8639, !8640, !8641, !8642, !8643, !8644}
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8634, file: !601, line: 26, baseType: !208, size: 32)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8634, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8634, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8634, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8634, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8634, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8634, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8634, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8644 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8634, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8573, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8573, file: !531, line: 256, baseType: !8604, size: 64, offset: 704)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8573, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8573, file: !531, line: 300, baseType: !8649, size: 96, offset: 800)
!8649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !8650)
!8650 = !{!8651, !8652, !8653}
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8649, file: !531, line: 153, baseType: !22, size: 32)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8649, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8649, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8573, file: !531, line: 325, baseType: !8655, size: 32, offset: 896)
!8655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8656, size: 32)
!8656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !8657)
!8657 = !{!8658, !8664, !8665}
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8656, file: !624, line: 5074, baseType: !8659, size: 96)
!8659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !8660)
!8660 = !{!8661, !8662, !8663}
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8659, file: !628, line: 57, baseType: !631, size: 32)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8659, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8659, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8656, file: !624, line: 5075, baseType: !8604, size: 64, offset: 96)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8656, file: !624, line: 5076, baseType: !8666, offset: 160)
!8666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8573, file: !531, line: 343, baseType: !8668, size: 64, offset: 928)
!8668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !8669)
!8669 = !{!8670, !8671}
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8668, file: !601, line: 63, baseType: !208, size: 32)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8668, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!8672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8673, size: 32)
!8673 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5391, line: 44, baseType: !8674)
!8674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2492, line: 47, size: 8, elements: !8675)
!8675 = !{!8676}
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8674, file: !2492, line: 48, baseType: !142, size: 8)
!8677 = !{!8678, !8679, !8680, !8681, !8682, !8683, !8684, !8685}
!8678 = !DILocalVariable(name: "thread", arg: 1, scope: !8568, file: !8569, line: 56, type: !8572)
!8679 = !DILocalVariable(name: "stack", arg: 2, scope: !8568, file: !8569, line: 56, type: !8672)
!8680 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8568, file: !8569, line: 57, type: !393)
!8681 = !DILocalVariable(name: "entry", arg: 4, scope: !8568, file: !8569, line: 57, type: !5390)
!8682 = !DILocalVariable(name: "p1", arg: 5, scope: !8568, file: !8569, line: 58, type: !124)
!8683 = !DILocalVariable(name: "p2", arg: 6, scope: !8568, file: !8569, line: 58, type: !124)
!8684 = !DILocalVariable(name: "p3", arg: 7, scope: !8568, file: !8569, line: 58, type: !124)
!8685 = !DILocalVariable(name: "iframe", scope: !8568, file: !8569, line: 60, type: !3018)
!8686 = !DILocation(line: 0, scope: !8568)
!8687 = !DILocation(line: 85, column: 11, scope: !8568)
!8688 = !DILocation(line: 93, column: 10, scope: !8568)
!8689 = !DILocation(line: 98, column: 13, scope: !8568)
!8690 = !DILocation(line: 100, column: 15, scope: !8568)
!8691 = !DILocation(line: 100, column: 10, scope: !8568)
!8692 = !DILocation(line: 100, column: 13, scope: !8568)
!8693 = !DILocation(line: 101, column: 15, scope: !8568)
!8694 = !DILocation(line: 101, column: 10, scope: !8568)
!8695 = !DILocation(line: 101, column: 13, scope: !8568)
!8696 = !DILocation(line: 102, column: 15, scope: !8568)
!8697 = !DILocation(line: 102, column: 10, scope: !8568)
!8698 = !DILocation(line: 102, column: 13, scope: !8568)
!8699 = !DILocation(line: 103, column: 15, scope: !8568)
!8700 = !DILocation(line: 103, column: 10, scope: !8568)
!8701 = !DILocation(line: 103, column: 13, scope: !8568)
!8702 = !DILocation(line: 106, column: 10, scope: !8568)
!8703 = !DILocation(line: 106, column: 15, scope: !8568)
!8704 = !DILocation(line: 122, column: 29, scope: !8568)
!8705 = !DILocation(line: 122, column: 23, scope: !8568)
!8706 = !DILocation(line: 122, column: 27, scope: !8568)
!8707 = !DILocation(line: 123, column: 15, scope: !8568)
!8708 = !DILocation(line: 123, column: 23, scope: !8568)
!8709 = !DILocation(line: 143, column: 1, scope: !8568)
!8710 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8569, file: !8569, line: 385, type: !8711, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8714)
!8711 = !DISubroutineType(types: !8712)
!8712 = !{!208, !8713, !8713}
!8713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8714 = !{!8715, !8716, !8717, !8720}
!8715 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8710, file: !8569, line: 385, type: !8713)
!8716 = !DILocalVariable(name: "psp", arg: 2, scope: !8710, file: !8569, line: 385, type: !8713)
!8717 = !DILocalVariable(name: "thread", scope: !8710, file: !8569, line: 388, type: !8718)
!8718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8719, size: 32)
!8719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8573)
!8720 = !DILocalVariable(name: "guard_len", scope: !8710, file: !8569, line: 405, type: !208)
!8721 = !DILocation(line: 0, scope: !8710)
!8722 = !DILocation(line: 388, column: 34, scope: !8710)
!8723 = !DILocation(line: 390, column: 13, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8710, file: !8569, line: 390, column: 6)
!8725 = !DILocation(line: 390, column: 6, scope: !8710)
!8726 = !DILocation(line: 438, column: 6, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8710, file: !8569, line: 438, column: 6)
!8728 = !DILocation(line: 438, column: 6, scope: !8710)
!8729 = !DILocation(line: 442, column: 3, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8727, file: !8569, line: 440, column: 22)
!8731 = !DILocation(line: 455, column: 1, scope: !8710)
!8732 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8569, file: !8569, line: 530, type: !8733, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{null, !8572, !393, !5390}
!8735 = !{!8736, !8737, !8738}
!8736 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8732, file: !8569, line: 530, type: !8572)
!8737 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8732, file: !8569, line: 530, type: !393)
!8738 = !DILocalVariable(name: "_main", arg: 3, scope: !8732, file: !8569, line: 531, type: !5390)
!8739 = !DILocation(line: 0, scope: !8732)
!8740 = !DILocation(line: 535, column: 11, scope: !8732)
!8741 = !DILocation(line: 560, column: 2, scope: !8732)
!8742 = !DILocation(line: 576, column: 2, scope: !8732)
!8743 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8744 = !DILocation(line: 603, column: 2, scope: !8732)
!8745 = distinct !DISubprogram(name: "z_arm_fault", scope: !8746, file: !8746, line: 1036, type: !8747, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !8762)
!8746 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8747 = !DISubroutineType(types: !8748)
!8748 = !{null, !208, !208, !208, !8749}
!8749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8750, size: 32)
!8750 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8751)
!8751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8752)
!8752 = !{!8753, !8754, !8755, !8756, !8757, !8758, !8759, !8760, !8761}
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8751, file: !601, line: 26, baseType: !208, size: 32)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8751, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8751, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8751, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8751, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8751, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8751, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8751, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8751, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8762 = !{!8763, !8764, !8765, !8766, !8767, !8768, !8769, !8770, !8771, !8772}
!8763 = !DILocalVariable(name: "msp", arg: 1, scope: !8745, file: !8746, line: 1036, type: !208)
!8764 = !DILocalVariable(name: "psp", arg: 2, scope: !8745, file: !8746, line: 1036, type: !208)
!8765 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8745, file: !8746, line: 1036, type: !208)
!8766 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8745, file: !8746, line: 1037, type: !8749)
!8767 = !DILocalVariable(name: "reason", scope: !8745, file: !8746, line: 1039, type: !208)
!8768 = !DILocalVariable(name: "fault", scope: !8745, file: !8746, line: 1040, type: !125)
!8769 = !DILocalVariable(name: "recoverable", scope: !8745, file: !8746, line: 1041, type: !153)
!8770 = !DILocalVariable(name: "nested_exc", scope: !8745, file: !8746, line: 1041, type: !153)
!8771 = !DILocalVariable(name: "esf", scope: !8745, file: !8746, line: 1042, type: !3086)
!8772 = !DILocalVariable(name: "esf_copy", scope: !8745, file: !8746, line: 1047, type: !3087)
!8773 = !DILocation(line: 0, scope: !8745)
!8774 = !DILocation(line: 1040, column: 19, scope: !8745)
!8775 = !DILocation(line: 1040, column: 24, scope: !8745)
!8776 = !DILocation(line: 1041, column: 2, scope: !8745)
!8777 = !DILocation(line: 1047, column: 2, scope: !8745)
!8778 = !DILocation(line: 1047, column: 15, scope: !8745)
!8779 = !DILocalVariable(name: "key", arg: 1, scope: !8780, file: !6978, line: 84, type: !32)
!8780 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !8781)
!8781 = !{!8779}
!8782 = !DILocation(line: 0, scope: !8780, inlinedAt: !8783)
!8783 = distinct !DILocation(line: 1050, column: 2, scope: !8745)
!8784 = !DILocation(line: 95, column: 2, scope: !8780, inlinedAt: !8783)
!8785 = !{i64 2627725}
!8786 = !DILocation(line: 1055, column: 9, scope: !8745)
!8787 = !DILocation(line: 1063, column: 11, scope: !8745)
!8788 = !DILocation(line: 1064, column: 6, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8745, file: !8746, line: 1064, column: 6)
!8790 = !{i8 0, i8 2}
!8791 = !DILocation(line: 1064, column: 6, scope: !8745)
!8792 = !DILocation(line: 1070, column: 20, scope: !8745)
!8793 = !DILocation(line: 1070, column: 2, scope: !8745)
!8794 = !DILocation(line: 1089, column: 6, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8745, file: !8746, line: 1089, column: 6)
!8796 = !DILocation(line: 0, scope: !8795)
!8797 = !DILocation(line: 1089, column: 6, scope: !8745)
!8798 = !DILocation(line: 1090, column: 28, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !8746, line: 1090, column: 7)
!8800 = distinct !DILexicalBlock(scope: !8795, file: !8746, line: 1089, column: 18)
!8801 = !DILocation(line: 1090, column: 44, scope: !8799)
!8802 = !DILocation(line: 1090, column: 7, scope: !8800)
!8803 = !DILocation(line: 1091, column: 24, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8799, file: !8746, line: 1090, column: 50)
!8805 = !DILocation(line: 1092, column: 3, scope: !8804)
!8806 = !DILocation(line: 1094, column: 23, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8795, file: !8746, line: 1093, column: 9)
!8808 = !DILocation(line: 1097, column: 2, scope: !8745)
!8809 = !DILocation(line: 1098, column: 1, scope: !8745)
!8810 = distinct !DISubprogram(name: "get_esf", scope: !8746, file: !8746, line: 894, type: !8811, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !8814)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!3086, !208, !208, !208, !8813}
!8813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8814 = !{!8815, !8816, !8817, !8818, !8819, !8820}
!8815 = !DILocalVariable(name: "msp", arg: 1, scope: !8810, file: !8746, line: 894, type: !208)
!8816 = !DILocalVariable(name: "psp", arg: 2, scope: !8810, file: !8746, line: 894, type: !208)
!8817 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8810, file: !8746, line: 894, type: !208)
!8818 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8810, file: !8746, line: 895, type: !8813)
!8819 = !DILocalVariable(name: "alternative_state_exc", scope: !8810, file: !8746, line: 897, type: !153)
!8820 = !DILocalVariable(name: "ptr_esf", scope: !8810, file: !8746, line: 898, type: !3086)
!8821 = !DILocation(line: 0, scope: !8810)
!8822 = !DILocation(line: 900, column: 14, scope: !8810)
!8823 = !DILocation(line: 902, column: 49, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8810, file: !8746, line: 902, column: 6)
!8825 = !DILocation(line: 902, column: 6, scope: !8810)
!8826 = !DILocation(line: 983, column: 44, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8810, file: !8746, line: 983, column: 6)
!8828 = !DILocation(line: 985, column: 3, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !8746, line: 985, column: 3)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8746, line: 985, column: 3)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !8746, line: 985, column: 3)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !8746, line: 985, column: 3)
!8833 = distinct !DILexicalBlock(scope: !8827, file: !8746, line: 984, column: 47)
!8834 = !DILocation(line: 986, column: 3, scope: !8833)
!8835 = !DILocation(line: 983, column: 18, scope: !8827)
!8836 = !DILocation(line: 991, column: 7, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !8746, line: 990, column: 30)
!8838 = distinct !DILexicalBlock(scope: !8810, file: !8746, line: 990, column: 6)
!8839 = !DILocation(line: 998, column: 16, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !8746, line: 995, column: 10)
!8841 = distinct !DILexicalBlock(scope: !8837, file: !8746, line: 991, column: 7)
!8842 = !DILocation(line: 1002, column: 2, scope: !8810)
!8843 = !DILocation(line: 1003, column: 1, scope: !8810)
!8844 = distinct !DISubprogram(name: "fault_handle", scope: !8746, file: !8746, line: 786, type: !8845, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !8847)
!8845 = !DISubroutineType(types: !8846)
!8846 = !{!208, !3086, !125, !8813}
!8847 = !{!8848, !8849, !8850, !8851}
!8848 = !DILocalVariable(name: "esf", arg: 1, scope: !8844, file: !8746, line: 786, type: !3086)
!8849 = !DILocalVariable(name: "fault", arg: 2, scope: !8844, file: !8746, line: 786, type: !125)
!8850 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8844, file: !8746, line: 786, type: !8813)
!8851 = !DILocalVariable(name: "reason", scope: !8844, file: !8746, line: 788, type: !208)
!8852 = !DILocation(line: 0, scope: !8844)
!8853 = !DILocation(line: 790, column: 15, scope: !8844)
!8854 = !DILocation(line: 792, column: 2, scope: !8844)
!8855 = !DILocation(line: 794, column: 12, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8844, file: !8746, line: 792, column: 17)
!8857 = !DILocation(line: 795, column: 3, scope: !8856)
!8858 = !DILocation(line: 800, column: 12, scope: !8856)
!8859 = !DILocation(line: 801, column: 3, scope: !8856)
!8860 = !DILocation(line: 803, column: 12, scope: !8856)
!8861 = !DILocation(line: 804, column: 3, scope: !8856)
!8862 = !DILocation(line: 806, column: 12, scope: !8856)
!8863 = !DILocation(line: 807, column: 3, scope: !8856)
!8864 = !DILocation(line: 814, column: 3, scope: !8856)
!8865 = !DILocation(line: 815, column: 3, scope: !8856)
!8866 = !DILocation(line: 820, column: 3, scope: !8856)
!8867 = !DILocation(line: 821, column: 3, scope: !8856)
!8868 = !DILocation(line: 829, column: 2, scope: !8844)
!8869 = distinct !DISubprogram(name: "hard_fault", scope: !8746, file: !8746, line: 709, type: !8870, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !8872)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{!208, !3086, !8813}
!8872 = !{!8873, !8874, !8875}
!8873 = !DILocalVariable(name: "esf", arg: 1, scope: !8869, file: !8746, line: 709, type: !3086)
!8874 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8869, file: !8746, line: 709, type: !8813)
!8875 = !DILocalVariable(name: "reason", scope: !8869, file: !8746, line: 711, type: !208)
!8876 = !DILocation(line: 0, scope: !8869)
!8877 = !DILocation(line: 713, column: 2, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8746, line: 713, column: 2)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !8746, line: 713, column: 2)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !8746, line: 713, column: 2)
!8881 = distinct !DILexicalBlock(scope: !8869, file: !8746, line: 713, column: 2)
!8882 = !DILocation(line: 732, column: 15, scope: !8869)
!8883 = !DILocation(line: 734, column: 12, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8869, file: !8746, line: 734, column: 6)
!8885 = !DILocation(line: 734, column: 17, scope: !8884)
!8886 = !DILocation(line: 734, column: 41, scope: !8884)
!8887 = !DILocation(line: 734, column: 6, scope: !8869)
!8888 = !DILocation(line: 735, column: 3, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !8746, line: 735, column: 3)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !8746, line: 735, column: 3)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !8746, line: 735, column: 3)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !8746, line: 735, column: 3)
!8893 = distinct !DILexicalBlock(scope: !8884, file: !8746, line: 734, column: 47)
!8894 = !DILocation(line: 736, column: 2, scope: !8893)
!8895 = !DILocation(line: 736, column: 19, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8884, file: !8746, line: 736, column: 13)
!8897 = !DILocation(line: 736, column: 49, scope: !8896)
!8898 = !DILocation(line: 736, column: 13, scope: !8884)
!8899 = !DILocation(line: 737, column: 3, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8901, file: !8746, line: 737, column: 3)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !8746, line: 737, column: 3)
!8902 = distinct !DILexicalBlock(scope: !8903, file: !8746, line: 737, column: 3)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !8746, line: 737, column: 3)
!8904 = distinct !DILexicalBlock(scope: !8896, file: !8746, line: 736, column: 55)
!8905 = !DILocation(line: 738, column: 2, scope: !8904)
!8906 = !DILocation(line: 738, column: 19, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8896, file: !8746, line: 738, column: 13)
!8908 = !DILocation(line: 738, column: 24, scope: !8907)
!8909 = !DILocation(line: 738, column: 47, scope: !8907)
!8910 = !DILocation(line: 738, column: 13, scope: !8896)
!8911 = !DILocation(line: 739, column: 3, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8913, file: !8746, line: 739, column: 3)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !8746, line: 739, column: 3)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !8746, line: 739, column: 3)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !8746, line: 739, column: 3)
!8916 = distinct !DILexicalBlock(scope: !8907, file: !8746, line: 738, column: 53)
!8917 = !DILocation(line: 740, column: 7, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8916, file: !8746, line: 740, column: 7)
!8919 = !DILocation(line: 740, column: 7, scope: !8916)
!8920 = !DILocation(line: 741, column: 4, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !8746, line: 741, column: 4)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !8746, line: 741, column: 4)
!8923 = distinct !DILexicalBlock(scope: !8924, file: !8746, line: 741, column: 4)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !8746, line: 741, column: 4)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !8746, line: 740, column: 38)
!8926 = !DILocation(line: 742, column: 24, scope: !8925)
!8927 = !DILocation(line: 743, column: 3, scope: !8925)
!8928 = !DILocation(line: 743, column: 20, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8918, file: !8746, line: 743, column: 14)
!8930 = !DILocation(line: 743, column: 25, scope: !8929)
!8931 = !DILocation(line: 743, column: 52, scope: !8929)
!8932 = !DILocation(line: 743, column: 14, scope: !8918)
!8933 = !DILocation(line: 744, column: 13, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8929, file: !8746, line: 743, column: 58)
!8935 = !DILocation(line: 745, column: 3, scope: !8934)
!8936 = !DILocation(line: 745, column: 20, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8929, file: !8746, line: 745, column: 14)
!8938 = !DILocation(line: 745, column: 25, scope: !8937)
!8939 = !DILocation(line: 745, column: 52, scope: !8937)
!8940 = !DILocation(line: 745, column: 14, scope: !8929)
!8941 = !DILocation(line: 746, column: 13, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8937, file: !8746, line: 745, column: 58)
!8943 = !DILocation(line: 747, column: 3, scope: !8942)
!8944 = !DILocation(line: 747, column: 20, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8937, file: !8746, line: 747, column: 14)
!8946 = !DILocation(line: 747, column: 52, scope: !8945)
!8947 = !DILocation(line: 747, column: 14, scope: !8937)
!8948 = !DILocation(line: 748, column: 13, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8945, file: !8746, line: 747, column: 58)
!8950 = !DILocation(line: 753, column: 3, scope: !8949)
!8951 = !DILocation(line: 766, column: 2, scope: !8869)
!8952 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8746, file: !8746, line: 229, type: !8845, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !8953)
!8953 = !{!8954, !8955, !8956, !8957, !8958, !8959, !8962}
!8954 = !DILocalVariable(name: "esf", arg: 1, scope: !8952, file: !8746, line: 229, type: !3086)
!8955 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8952, file: !8746, line: 229, type: !125)
!8956 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8952, file: !8746, line: 230, type: !8813)
!8957 = !DILocalVariable(name: "reason", scope: !8952, file: !8746, line: 232, type: !208)
!8958 = !DILocalVariable(name: "mmfar", scope: !8952, file: !8746, line: 233, type: !208)
!8959 = !DILocalVariable(name: "temp", scope: !8960, file: !8746, line: 254, type: !208)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !8746, line: 244, column: 48)
!8961 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 244, column: 6)
!8962 = !DILocalVariable(name: "min_stack_ptr", scope: !8963, file: !8746, line: 309, type: !208)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !8746, line: 308, column: 43)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !8746, line: 308, column: 7)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !8746, line: 289, column: 40)
!8966 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 288, column: 6)
!8967 = !DILocation(line: 0, scope: !8952)
!8968 = !DILocation(line: 235, column: 2, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !8746, line: 235, column: 2)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !8746, line: 235, column: 2)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !8746, line: 235, column: 2)
!8972 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 235, column: 2)
!8973 = !DILocation(line: 237, column: 12, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 237, column: 6)
!8975 = !DILocation(line: 237, column: 17, scope: !8974)
!8976 = !DILocation(line: 237, column: 41, scope: !8974)
!8977 = !DILocation(line: 237, column: 6, scope: !8952)
!8978 = !DILocation(line: 238, column: 3, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8980, file: !8746, line: 238, column: 3)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !8746, line: 238, column: 3)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !8746, line: 238, column: 3)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !8746, line: 238, column: 3)
!8983 = distinct !DILexicalBlock(scope: !8974, file: !8746, line: 237, column: 47)
!8984 = !DILocation(line: 240, column: 2, scope: !8983)
!8985 = !DILocation(line: 241, column: 12, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 241, column: 6)
!8987 = !DILocation(line: 241, column: 17, scope: !8986)
!8988 = !DILocation(line: 241, column: 43, scope: !8986)
!8989 = !DILocation(line: 241, column: 6, scope: !8952)
!8990 = !DILocation(line: 242, column: 3, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !8746, line: 242, column: 3)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !8746, line: 242, column: 3)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !8746, line: 242, column: 3)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !8746, line: 242, column: 3)
!8995 = distinct !DILexicalBlock(scope: !8986, file: !8746, line: 241, column: 49)
!8996 = !DILocation(line: 243, column: 2, scope: !8995)
!8997 = !DILocation(line: 244, column: 12, scope: !8961)
!8998 = !DILocation(line: 244, column: 17, scope: !8961)
!8999 = !DILocation(line: 244, column: 42, scope: !8961)
!9000 = !DILocation(line: 244, column: 6, scope: !8952)
!9001 = !DILocation(line: 245, column: 3, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !8746, line: 245, column: 3)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !8746, line: 245, column: 3)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !8746, line: 245, column: 3)
!9005 = distinct !DILexicalBlock(scope: !8960, file: !8746, line: 245, column: 3)
!9006 = !DILocation(line: 254, column: 24, scope: !8960)
!9007 = !DILocation(line: 0, scope: !8960)
!9008 = !DILocation(line: 256, column: 13, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8960, file: !8746, line: 256, column: 7)
!9010 = !DILocation(line: 256, column: 18, scope: !9009)
!9011 = !DILocation(line: 256, column: 44, scope: !9009)
!9012 = !DILocation(line: 256, column: 7, scope: !8960)
!9013 = !DILocation(line: 258, column: 4, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !8746, line: 258, column: 4)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !8746, line: 258, column: 4)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !8746, line: 258, column: 4)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !8746, line: 258, column: 4)
!9018 = distinct !DILexicalBlock(scope: !9009, file: !8746, line: 256, column: 50)
!9019 = !DILocation(line: 259, column: 24, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9018, file: !8746, line: 259, column: 8)
!9021 = !DILocation(line: 259, column: 8, scope: !9018)
!9022 = !DILocation(line: 261, column: 15, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9020, file: !8746, line: 259, column: 30)
!9024 = !DILocation(line: 262, column: 4, scope: !9023)
!9025 = !DILocation(line: 265, column: 12, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 265, column: 6)
!9027 = !DILocation(line: 265, column: 17, scope: !9026)
!9028 = !DILocation(line: 265, column: 42, scope: !9026)
!9029 = !DILocation(line: 265, column: 6, scope: !8952)
!9030 = !DILocation(line: 266, column: 3, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !8746, line: 266, column: 3)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !8746, line: 266, column: 3)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !8746, line: 266, column: 3)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !8746, line: 266, column: 3)
!9035 = distinct !DILexicalBlock(scope: !9026, file: !8746, line: 265, column: 48)
!9036 = !DILocation(line: 267, column: 2, scope: !9035)
!9037 = !DILocation(line: 269, column: 12, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 269, column: 6)
!9039 = !DILocation(line: 269, column: 17, scope: !9038)
!9040 = !DILocation(line: 269, column: 41, scope: !9038)
!9041 = !DILocation(line: 269, column: 6, scope: !8952)
!9042 = !DILocation(line: 270, column: 3, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !8746, line: 270, column: 3)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !8746, line: 270, column: 3)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !8746, line: 270, column: 3)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8746, line: 270, column: 3)
!9047 = distinct !DILexicalBlock(scope: !9038, file: !8746, line: 269, column: 47)
!9048 = !DILocation(line: 272, column: 2, scope: !9047)
!9049 = !DILocation(line: 288, column: 12, scope: !8966)
!9050 = !DILocation(line: 288, column: 17, scope: !8966)
!9051 = !DILocation(line: 288, column: 41, scope: !8966)
!9052 = !DILocation(line: 289, column: 9, scope: !8966)
!9053 = !DILocation(line: 289, column: 14, scope: !8966)
!9054 = !DILocation(line: 288, column: 6, scope: !8952)
!9055 = !DILocation(line: 308, column: 12, scope: !8964)
!9056 = !DILocation(line: 308, column: 17, scope: !8964)
!9057 = !DILocation(line: 308, column: 7, scope: !8965)
!9058 = !DILocation(line: 310, column: 6, scope: !8963)
!9059 = !DILocation(line: 309, column: 29, scope: !8963)
!9060 = !DILocation(line: 0, scope: !8963)
!9061 = !DILocation(line: 312, column: 8, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !8963, file: !8746, line: 312, column: 8)
!9063 = !DILocation(line: 312, column: 8, scope: !8963)
!9064 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !9065, file: !8445, line: 1099, type: !208)
!9065 = distinct !DISubprogram(name: "__set_PSP", scope: !8445, file: !8445, line: 1099, type: !8536, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9066)
!9066 = !{!9064}
!9067 = !DILocation(line: 0, scope: !9065, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 338, column: 5, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9062, file: !8746, line: 312, column: 23)
!9070 = !DILocation(line: 1101, column: 3, scope: !9065, inlinedAt: !9068)
!9071 = !{i64 4144606}
!9072 = !DILocation(line: 341, column: 4, scope: !9069)
!9073 = !DILocation(line: 360, column: 12, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !8952, file: !8746, line: 360, column: 6)
!9075 = !DILocation(line: 360, column: 17, scope: !9074)
!9076 = !DILocation(line: 360, column: 41, scope: !9074)
!9077 = !DILocation(line: 360, column: 6, scope: !8952)
!9078 = !DILocation(line: 361, column: 14, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9074, file: !8746, line: 360, column: 47)
!9080 = !DILocation(line: 362, column: 2, scope: !9079)
!9081 = !DILocation(line: 366, column: 12, scope: !8952)
!9082 = !DILocation(line: 369, column: 15, scope: !8952)
!9083 = !DILocation(line: 371, column: 2, scope: !8952)
!9084 = distinct !DISubprogram(name: "bus_fault", scope: !8746, file: !8746, line: 383, type: !9085, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9087)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{!125, !3086, !125, !8813}
!9087 = !{!9088, !9089, !9090, !9091, !9092}
!9088 = !DILocalVariable(name: "esf", arg: 1, scope: !9084, file: !8746, line: 383, type: !3086)
!9089 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !9084, file: !8746, line: 383, type: !125)
!9090 = !DILocalVariable(name: "recoverable", arg: 3, scope: !9084, file: !8746, line: 383, type: !8813)
!9091 = !DILocalVariable(name: "reason", scope: !9084, file: !8746, line: 385, type: !208)
!9092 = !DILocalVariable(name: "bfar", scope: !9093, file: !8746, line: 405, type: !208)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !8746, line: 395, column: 42)
!9094 = distinct !DILexicalBlock(scope: !9084, file: !8746, line: 395, column: 6)
!9095 = !DILocation(line: 0, scope: !9084)
!9096 = !DILocation(line: 387, column: 2, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !8746, line: 387, column: 2)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !8746, line: 387, column: 2)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !8746, line: 387, column: 2)
!9100 = distinct !DILexicalBlock(scope: !9084, file: !8746, line: 387, column: 2)
!9101 = !DILocation(line: 389, column: 11, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9084, file: !8746, line: 389, column: 6)
!9103 = !DILocation(line: 389, column: 16, scope: !9102)
!9104 = !DILocation(line: 389, column: 6, scope: !9084)
!9105 = !DILocation(line: 390, column: 3, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !8746, line: 390, column: 3)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !8746, line: 390, column: 3)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !8746, line: 390, column: 3)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !8746, line: 390, column: 3)
!9110 = distinct !DILexicalBlock(scope: !9102, file: !8746, line: 389, column: 39)
!9111 = !DILocation(line: 391, column: 2, scope: !9110)
!9112 = !DILocation(line: 392, column: 11, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9084, file: !8746, line: 392, column: 6)
!9114 = !DILocation(line: 392, column: 16, scope: !9113)
!9115 = !DILocation(line: 392, column: 6, scope: !9084)
!9116 = !DILocation(line: 393, column: 3, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !8746, line: 393, column: 3)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !8746, line: 393, column: 3)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !8746, line: 393, column: 3)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !8746, line: 393, column: 3)
!9121 = distinct !DILexicalBlock(scope: !9113, file: !8746, line: 392, column: 41)
!9122 = !DILocation(line: 394, column: 2, scope: !9121)
!9123 = !DILocation(line: 395, column: 11, scope: !9094)
!9124 = !DILocation(line: 395, column: 16, scope: !9094)
!9125 = !DILocation(line: 395, column: 6, scope: !9084)
!9126 = !DILocation(line: 396, column: 3, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !8746, line: 396, column: 3)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !8746, line: 396, column: 3)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !8746, line: 396, column: 3)
!9130 = distinct !DILexicalBlock(scope: !9093, file: !8746, line: 396, column: 3)
!9131 = !DILocation(line: 405, column: 3, scope: !9093)
!9132 = !DILocation(line: 0, scope: !9093)
!9133 = !DILocation(line: 407, column: 13, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9093, file: !8746, line: 407, column: 7)
!9135 = !DILocation(line: 407, column: 18, scope: !9134)
!9136 = !DILocation(line: 407, column: 44, scope: !9134)
!9137 = !DILocation(line: 407, column: 7, scope: !9093)
!9138 = !DILocation(line: 408, column: 4, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !8746, line: 408, column: 4)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !8746, line: 408, column: 4)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !8746, line: 408, column: 4)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !8746, line: 408, column: 4)
!9143 = distinct !DILexicalBlock(scope: !9134, file: !8746, line: 407, column: 50)
!9144 = !DILocation(line: 409, column: 24, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9143, file: !8746, line: 409, column: 8)
!9146 = !DILocation(line: 409, column: 8, scope: !9143)
!9147 = !DILocation(line: 411, column: 15, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9145, file: !8746, line: 409, column: 30)
!9149 = !DILocation(line: 412, column: 4, scope: !9148)
!9150 = !DILocation(line: 415, column: 11, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9084, file: !8746, line: 415, column: 6)
!9152 = !DILocation(line: 415, column: 16, scope: !9151)
!9153 = !DILocation(line: 415, column: 6, scope: !9084)
!9154 = !DILocation(line: 416, column: 3, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !8746, line: 416, column: 3)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !8746, line: 416, column: 3)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !8746, line: 416, column: 3)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !8746, line: 416, column: 3)
!9159 = distinct !DILexicalBlock(scope: !9151, file: !8746, line: 415, column: 44)
!9160 = !DILocation(line: 417, column: 2, scope: !9159)
!9161 = !DILocation(line: 418, column: 12, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9084, file: !8746, line: 418, column: 6)
!9163 = !DILocation(line: 418, column: 17, scope: !9162)
!9164 = !DILocation(line: 418, column: 41, scope: !9162)
!9165 = !DILocation(line: 418, column: 6, scope: !9084)
!9166 = !DILocation(line: 423, column: 18, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9162, file: !8746, line: 423, column: 13)
!9168 = !DILocation(line: 423, column: 23, scope: !9167)
!9169 = !DILocation(line: 423, column: 13, scope: !9162)
!9170 = !DILocation(line: 0, scope: !9162)
!9171 = !DILocation(line: 524, column: 12, scope: !9084)
!9172 = !DILocation(line: 526, column: 15, scope: !9084)
!9173 = !DILocation(line: 528, column: 2, scope: !9084)
!9174 = distinct !DISubprogram(name: "usage_fault", scope: !8746, file: !8746, line: 539, type: !9175, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9179)
!9175 = !DISubroutineType(types: !9176)
!9176 = !{!208, !9177}
!9177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9178, size: 32)
!9178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3087)
!9179 = !{!9180, !9181}
!9180 = !DILocalVariable(name: "esf", arg: 1, scope: !9174, file: !8746, line: 539, type: !9177)
!9181 = !DILocalVariable(name: "reason", scope: !9174, file: !8746, line: 541, type: !208)
!9182 = !DILocation(line: 0, scope: !9174)
!9183 = !DILocation(line: 543, column: 2, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !8746, line: 543, column: 2)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !8746, line: 543, column: 2)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !8746, line: 543, column: 2)
!9187 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 543, column: 2)
!9188 = !DILocation(line: 546, column: 12, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 546, column: 6)
!9190 = !DILocation(line: 546, column: 17, scope: !9189)
!9191 = !DILocation(line: 546, column: 43, scope: !9189)
!9192 = !DILocation(line: 546, column: 6, scope: !9174)
!9193 = !DILocation(line: 547, column: 3, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !8746, line: 547, column: 3)
!9195 = distinct !DILexicalBlock(scope: !9196, file: !8746, line: 547, column: 3)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !8746, line: 547, column: 3)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !8746, line: 547, column: 3)
!9198 = distinct !DILexicalBlock(scope: !9189, file: !8746, line: 546, column: 49)
!9199 = !DILocation(line: 548, column: 2, scope: !9198)
!9200 = !DILocation(line: 549, column: 12, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 549, column: 6)
!9202 = !DILocation(line: 549, column: 17, scope: !9201)
!9203 = !DILocation(line: 549, column: 43, scope: !9201)
!9204 = !DILocation(line: 549, column: 6, scope: !9174)
!9205 = !DILocation(line: 550, column: 3, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !8746, line: 550, column: 3)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !8746, line: 550, column: 3)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !8746, line: 550, column: 3)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !8746, line: 550, column: 3)
!9210 = distinct !DILexicalBlock(scope: !9201, file: !8746, line: 549, column: 49)
!9211 = !DILocation(line: 551, column: 2, scope: !9210)
!9212 = !DILocation(line: 567, column: 12, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 567, column: 6)
!9214 = !DILocation(line: 567, column: 17, scope: !9213)
!9215 = !DILocation(line: 567, column: 38, scope: !9213)
!9216 = !DILocation(line: 567, column: 6, scope: !9174)
!9217 = !DILocation(line: 568, column: 3, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !8746, line: 568, column: 3)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !8746, line: 568, column: 3)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !8746, line: 568, column: 3)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !8746, line: 568, column: 3)
!9222 = distinct !DILexicalBlock(scope: !9213, file: !8746, line: 567, column: 44)
!9223 = !DILocation(line: 569, column: 2, scope: !9222)
!9224 = !DILocation(line: 570, column: 12, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 570, column: 6)
!9226 = !DILocation(line: 570, column: 17, scope: !9225)
!9227 = !DILocation(line: 570, column: 39, scope: !9225)
!9228 = !DILocation(line: 570, column: 6, scope: !9174)
!9229 = !DILocation(line: 571, column: 3, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !8746, line: 571, column: 3)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !8746, line: 571, column: 3)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !8746, line: 571, column: 3)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !8746, line: 571, column: 3)
!9234 = distinct !DILexicalBlock(scope: !9225, file: !8746, line: 570, column: 45)
!9235 = !DILocation(line: 572, column: 2, scope: !9234)
!9236 = !DILocation(line: 573, column: 12, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 573, column: 6)
!9238 = !DILocation(line: 573, column: 17, scope: !9237)
!9239 = !DILocation(line: 573, column: 42, scope: !9237)
!9240 = !DILocation(line: 573, column: 6, scope: !9174)
!9241 = !DILocation(line: 574, column: 3, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !8746, line: 574, column: 3)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !8746, line: 574, column: 3)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !8746, line: 574, column: 3)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !8746, line: 574, column: 3)
!9246 = distinct !DILexicalBlock(scope: !9237, file: !8746, line: 573, column: 48)
!9247 = !DILocation(line: 575, column: 2, scope: !9246)
!9248 = !DILocation(line: 576, column: 12, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9174, file: !8746, line: 576, column: 6)
!9250 = !DILocation(line: 576, column: 17, scope: !9249)
!9251 = !DILocation(line: 576, column: 44, scope: !9249)
!9252 = !DILocation(line: 576, column: 6, scope: !9174)
!9253 = !DILocation(line: 577, column: 3, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9255, file: !8746, line: 577, column: 3)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !8746, line: 577, column: 3)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !8746, line: 577, column: 3)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !8746, line: 577, column: 3)
!9258 = distinct !DILexicalBlock(scope: !9249, file: !8746, line: 576, column: 50)
!9259 = !DILocation(line: 578, column: 2, scope: !9258)
!9260 = !DILocation(line: 581, column: 12, scope: !9174)
!9261 = !DILocation(line: 583, column: 2, scope: !9174)
!9262 = distinct !DISubprogram(name: "debug_monitor", scope: !8746, file: !8746, line: 632, type: !9263, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9265)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{null, !3086, !8813}
!9265 = !{!9266, !9267}
!9266 = !DILocalVariable(name: "esf", arg: 1, scope: !9262, file: !8746, line: 632, type: !3086)
!9267 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9262, file: !8746, line: 632, type: !8813)
!9268 = !DILocation(line: 0, scope: !9262)
!9269 = !DILocation(line: 634, column: 15, scope: !9262)
!9270 = !DILocation(line: 636, column: 2, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9272, file: !8746, line: 636, column: 2)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !8746, line: 636, column: 2)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !8746, line: 636, column: 2)
!9274 = distinct !DILexicalBlock(scope: !9262, file: !8746, line: 636, column: 2)
!9275 = !DILocation(line: 652, column: 1, scope: !9262)
!9276 = distinct !DISubprogram(name: "reserved_exception", scope: !8746, file: !8746, line: 776, type: !9277, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9279)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{null, !9177, !125}
!9279 = !{!9280, !9281}
!9280 = !DILocalVariable(name: "esf", arg: 1, scope: !9276, file: !8746, line: 776, type: !9177)
!9281 = !DILocalVariable(name: "fault", arg: 2, scope: !9276, file: !8746, line: 776, type: !125)
!9282 = !DILocation(line: 0, scope: !9276)
!9283 = !DILocation(line: 780, column: 2, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9285, file: !8746, line: 780, column: 2)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !8746, line: 780, column: 2)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !8746, line: 780, column: 2)
!9287 = distinct !DILexicalBlock(scope: !9276, file: !8746, line: 780, column: 2)
!9288 = !DILocation(line: 783, column: 1, scope: !9276)
!9289 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8746, file: !8746, line: 658, type: !9290, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9292)
!9290 = !DISubroutineType(types: !9291)
!9291 = !{!153, !3086}
!9292 = !{!9293, !9294, !9295}
!9293 = !DILocalVariable(name: "esf", arg: 1, scope: !9289, file: !8746, line: 658, type: !3086)
!9294 = !DILocalVariable(name: "ret_addr", scope: !9289, file: !8746, line: 660, type: !3129)
!9295 = !DILocalVariable(name: "fault_insn", scope: !9289, file: !8746, line: 686, type: !227)
!9296 = !DILocation(line: 0, scope: !9289)
!9297 = !DILocation(line: 660, column: 46, scope: !9289)
!9298 = !DILocation(line: 660, column: 23, scope: !9289)
!9299 = !DILocation(line: 682, column: 11, scope: !9289)
!9300 = !DILocation(line: 271, column: 3, scope: !9301, inlinedAt: !9302)
!9301 = distinct !DISubprogram(name: "__DSB", scope: !8445, file: !8445, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !639)
!9302 = distinct !DILocation(line: 683, column: 2, scope: !9289)
!9303 = !{i64 4120741}
!9304 = !DILocation(line: 260, column: 3, scope: !9305, inlinedAt: !9306)
!9305 = distinct !DISubprogram(name: "__ISB", scope: !8445, file: !8445, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !639)
!9306 = distinct !DILocation(line: 684, column: 2, scope: !9289)
!9307 = !{i64 4120458}
!9308 = !DILocation(line: 686, column: 35, scope: !9289)
!9309 = !DILocation(line: 686, column: 24, scope: !9289)
!9310 = !DILocation(line: 688, column: 11, scope: !9289)
!9311 = !DILocation(line: 271, column: 3, scope: !9301, inlinedAt: !9312)
!9312 = distinct !DILocation(line: 689, column: 2, scope: !9289)
!9313 = !DILocation(line: 260, column: 3, scope: !9305, inlinedAt: !9314)
!9314 = distinct !DILocation(line: 690, column: 2, scope: !9289)
!9315 = !DILocation(line: 693, column: 45, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9289, file: !8746, line: 693, column: 6)
!9317 = !DILocation(line: 699, column: 1, scope: !9289)
!9318 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8746, file: !8746, line: 1107, type: !3440, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !639)
!9319 = !DILocation(line: 1111, column: 11, scope: !9318)
!9320 = !DILocation(line: 1136, column: 1, scope: !9318)
!9321 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9322, file: !9322, line: 26, type: !3440, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !9323)
!9322 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9323 = !{!9324}
!9324 = !DILocalVariable(name: "irq", scope: !9321, file: !9322, line: 28, type: !125)
!9325 = !DILocation(line: 0, scope: !9321)
!9326 = !DILocation(line: 30, column: 2, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9321, file: !9322, line: 30, column: 2)
!9328 = !DILocation(line: 31, column: 3, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !9322, line: 30, column: 39)
!9330 = distinct !DILexicalBlock(scope: !9327, file: !9322, line: 30, column: 2)
!9331 = !DILocation(line: 30, column: 35, scope: !9330)
!9332 = !DILocation(line: 30, column: 13, scope: !9330)
!9333 = distinct !{!9333, !9326, !9334}
!9334 = !DILocation(line: 32, column: 2, scope: !9327)
!9335 = !DILocation(line: 33, column: 1, scope: !9321)
!9336 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8479, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !9337)
!9337 = !{!9338, !9339}
!9338 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9336, file: !680, line: 1814, type: !945)
!9339 = !DILocalVariable(name: "priority", arg: 2, scope: !9336, file: !680, line: 1814, type: !208)
!9340 = !DILocation(line: 0, scope: !9336)
!9341 = !DILocation(line: 1816, column: 7, scope: !9336)
!9342 = !DILocation(line: 0, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9336, file: !680, line: 1816, column: 7)
!9344 = !DILocation(line: 1824, column: 1, scope: !9336)
!9345 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9346, file: !9346, line: 27, type: !9347, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !9450)
!9346 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9347 = !DISubroutineType(types: !9348)
!9348 = !{null, !9349}
!9349 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !9350)
!9350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9351, size: 32)
!9351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !9352)
!9352 = !{!9353, !9411, !9423, !9424, !9425, !9426, !9432, !9445}
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9351, file: !531, line: 247, baseType: !9354, size: 384)
!9354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !9355)
!9355 = !{!9356, !9380, !9387, !9388, !9389, !9398, !9399, !9400}
!9356 = !DIDerivedType(tag: DW_TAG_member, scope: !9354, file: !531, line: 60, baseType: !9357, size: 64)
!9357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9354, file: !531, line: 60, size: 64, elements: !9358)
!9358 = !{!9359, !9374}
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9357, file: !531, line: 61, baseType: !9360, size: 64)
!9360 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !9361)
!9361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !9362)
!9362 = !{!9363, !9369}
!9363 = !DIDerivedType(tag: DW_TAG_member, scope: !9361, file: !541, line: 38, baseType: !9364, size: 32)
!9364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9361, file: !541, line: 38, size: 32, elements: !9365)
!9365 = !{!9366, !9368}
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9364, file: !541, line: 39, baseType: !9367, size: 32)
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9361, size: 32)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9364, file: !541, line: 40, baseType: !9367, size: 32)
!9369 = !DIDerivedType(tag: DW_TAG_member, scope: !9361, file: !541, line: 42, baseType: !9370, size: 32, offset: 32)
!9370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9361, file: !541, line: 42, size: 32, elements: !9371)
!9371 = !{!9372, !9373}
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9370, file: !541, line: 43, baseType: !9367, size: 32)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9370, file: !541, line: 44, baseType: !9367, size: 32)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9357, file: !531, line: 62, baseType: !9375, size: 64)
!9375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !9376)
!9376 = !{!9377}
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9375, file: !557, line: 50, baseType: !9378, size: 64)
!9378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9379, size: 64, elements: !562)
!9379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9375, size: 32)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9354, file: !531, line: 68, baseType: !9381, size: 32, offset: 64)
!9381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9382, size: 32)
!9382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !9383)
!9383 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !9384)
!9384 = !{!9385}
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9383, file: !567, line: 232, baseType: !9386, size: 64)
!9386 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !9361)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9354, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9354, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!9389 = !DIDerivedType(tag: DW_TAG_member, scope: !9354, file: !531, line: 90, baseType: !9390, size: 16, offset: 112)
!9390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9354, file: !531, line: 90, size: 16, elements: !9391)
!9391 = !{!9392, !9397}
!9392 = !DIDerivedType(tag: DW_TAG_member, scope: !9390, file: !531, line: 91, baseType: !9393, size: 16)
!9393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9390, file: !531, line: 91, size: 16, elements: !9394)
!9394 = !{!9395, !9396}
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9393, file: !531, line: 96, baseType: !581, size: 8)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9393, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9390, file: !531, line: 100, baseType: !227, size: 16)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9354, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9354, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9354, file: !531, line: 131, baseType: !9401, size: 192, offset: 192)
!9401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !9402)
!9402 = !{!9403, !9404, !9410}
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9401, file: !567, line: 245, baseType: !9360, size: 64)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9401, file: !567, line: 246, baseType: !9405, size: 32, offset: 64)
!9405 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !9406)
!9406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9407, size: 32)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{null, !9409}
!9409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9401, size: 32)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9401, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9351, file: !531, line: 250, baseType: !9412, size: 288, offset: 384)
!9412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !9413)
!9413 = !{!9414, !9415, !9416, !9417, !9418, !9419, !9420, !9421, !9422}
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9412, file: !601, line: 26, baseType: !208, size: 32)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9412, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9412, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9412, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9412, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9412, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9412, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9412, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9412, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9351, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9351, file: !531, line: 256, baseType: !9382, size: 64, offset: 704)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9351, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9351, file: !531, line: 300, baseType: !9427, size: 96, offset: 800)
!9427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !9428)
!9428 = !{!9429, !9430, !9431}
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9427, file: !531, line: 153, baseType: !22, size: 32)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9427, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9427, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9351, file: !531, line: 325, baseType: !9433, size: 32, offset: 896)
!9433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9434, size: 32)
!9434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !9435)
!9435 = !{!9436, !9442, !9443}
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9434, file: !624, line: 5074, baseType: !9437, size: 96)
!9437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !9438)
!9438 = !{!9439, !9440, !9441}
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9437, file: !628, line: 57, baseType: !631, size: 32)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9437, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9437, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9434, file: !624, line: 5075, baseType: !9382, size: 64, offset: 96)
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9434, file: !624, line: 5076, baseType: !9444, offset: 160)
!9444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9351, file: !531, line: 343, baseType: !9446, size: 64, offset: 928)
!9446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !9447)
!9447 = !{!9448, !9449}
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9446, file: !601, line: 63, baseType: !208, size: 32)
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9446, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!9450 = !{!9451}
!9451 = !DILocalVariable(name: "thread", arg: 1, scope: !9345, file: !9346, line: 27, type: !9349)
!9452 = !DILocation(line: 0, scope: !9345)
!9453 = !DILocation(line: 29, column: 6, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9345, file: !9346, line: 29, column: 6)
!9455 = !DILocation(line: 29, column: 15, scope: !9454)
!9456 = !DILocation(line: 29, column: 6, scope: !9345)
!9457 = !DILocation(line: 1031, column: 3, scope: !9458, inlinedAt: !9461)
!9458 = distinct !DISubprogram(name: "__get_IPSR", scope: !8445, file: !8445, line: 1027, type: !8526, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !9459)
!9459 = !{!9460}
!9460 = !DILocalVariable(name: "result", scope: !9458, file: !8445, line: 1029, type: !208)
!9461 = distinct !DILocation(line: 48, column: 10, scope: !9462, inlinedAt: !9466)
!9462 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9463, file: !9463, line: 46, type: !9464, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !639)
!9463 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9464 = !DISubroutineType(types: !9465)
!9465 = !{!153}
!9466 = distinct !DILocation(line: 30, column: 7, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !9346, line: 30, column: 7)
!9468 = distinct !DILexicalBlock(scope: !9454, file: !9346, line: 29, column: 26)
!9469 = !{i64 4109589}
!9470 = !DILocation(line: 0, scope: !9458, inlinedAt: !9461)
!9471 = !DILocation(line: 48, column: 9, scope: !9462, inlinedAt: !9466)
!9472 = !DILocation(line: 30, column: 7, scope: !9468)
!9473 = !DILocation(line: 42, column: 14, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9467, file: !9346, line: 30, column: 25)
!9475 = !DILocation(line: 48, column: 15, scope: !9474)
!9476 = !DILocation(line: 49, column: 3, scope: !9474)
!9477 = !DILocation(line: 52, column: 2, scope: !9345)
!9478 = !DILocation(line: 53, column: 1, scope: !9345)
!9479 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !526, file: !526, line: 127, type: !3440, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !639)
!9480 = !DILocation(line: 134, column: 2, scope: !9479)
!9481 = !DILocation(line: 156, column: 1, scope: !9479)
!9482 = !DILocation(line: 0, scope: !525)
!9483 = !DILocation(line: 289, column: 36, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !525, file: !526, line: 285, column: 2)
!9485 = !DILocation(line: 289, column: 42, scope: !9484)
!9486 = !DILocation(line: 300, column: 36, scope: !525)
!9487 = !DILocation(line: 301, column: 35, scope: !525)
!9488 = !DILocation(line: 302, column: 37, scope: !525)
!9489 = !DILocation(line: 311, column: 2, scope: !525)
!9490 = !DILocation(line: 316, column: 1, scope: !525)
!9491 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !708, file: !708, line: 180, type: !3440, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9492 = !DILocation(line: 188, column: 12, scope: !9491)
!9493 = !DILocation(line: 271, column: 3, scope: !9494, inlinedAt: !9495)
!9494 = distinct !DISubprogram(name: "__DSB", scope: !8445, file: !8445, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9495 = distinct !DILocation(line: 192, column: 2, scope: !9491)
!9496 = !{i64 4303101}
!9497 = !DILocation(line: 260, column: 3, scope: !9498, inlinedAt: !9499)
!9498 = distinct !DISubprogram(name: "__ISB", scope: !8445, file: !8445, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9499 = distinct !DILocation(line: 193, column: 2, scope: !9491)
!9500 = !{i64 4302818}
!9501 = !DILocation(line: 194, column: 1, scope: !9491)
!9502 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !708, file: !708, line: 199, type: !3440, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9503 = !DILocation(line: 282, column: 3, scope: !9504, inlinedAt: !9505)
!9504 = distinct !DISubprogram(name: "__DMB", scope: !8445, file: !8445, line: 280, type: !3440, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9505 = distinct !DILocation(line: 202, column: 2, scope: !9502)
!9506 = !{i64 4303377}
!9507 = !DILocation(line: 205, column: 12, scope: !9502)
!9508 = !DILocation(line: 206, column: 1, scope: !9502)
!9509 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !708, file: !708, line: 275, type: !9510, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9523)
!9510 = !DISubroutineType(types: !9511)
!9511 = !{null, !9512, !323, !8713, !8713}
!9512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9513, size: 32)
!9513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9514)
!9514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !9515)
!9515 = !{!9516, !9517, !9518}
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9514, file: !652, line: 53, baseType: !22, size: 32)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9514, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9514, file: !652, line: 55, baseType: !9519, size: 32, offset: 64)
!9519 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !9520)
!9520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !9521)
!9521 = !{!9522}
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9520, file: !658, line: 150, baseType: !208, size: 32)
!9523 = !{!9524, !9525, !9526, !9527}
!9524 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9509, file: !708, line: 276, type: !9512)
!9525 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9509, file: !708, line: 276, type: !323)
!9526 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9509, file: !708, line: 277, type: !8713)
!9527 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9509, file: !708, line: 277, type: !8713)
!9528 = !DILocation(line: 0, scope: !9509)
!9529 = !DILocation(line: 279, column: 6, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9509, file: !708, line: 279, column: 6)
!9531 = !DILocation(line: 285, column: 1, scope: !9509)
!9532 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9533, file: !9533, line: 220, type: !9534, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9536)
!9533 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9534 = !DISubroutineType(types: !9535)
!9535 = !{!125, !9512, !323, !8713, !8713}
!9536 = !{!9537, !9538, !9539, !9540, !9541}
!9537 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9532, file: !9533, line: 221, type: !9512)
!9538 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9532, file: !9533, line: 221, type: !323)
!9539 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9532, file: !9533, line: 222, type: !8713)
!9540 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9532, file: !9533, line: 223, type: !8713)
!9541 = !DILocalVariable(name: "mpu_reg_index", scope: !9532, file: !9533, line: 225, type: !125)
!9542 = !DILocation(line: 0, scope: !9532)
!9543 = !DILocation(line: 225, column: 22, scope: !9532)
!9544 = !DILocation(line: 233, column: 18, scope: !9532)
!9545 = !DILocation(line: 236, column: 23, scope: !9532)
!9546 = !DILocation(line: 236, column: 21, scope: !9532)
!9547 = !DILocation(line: 238, column: 2, scope: !9532)
!9548 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !708, file: !708, line: 105, type: !9549, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9551)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!125, !9512, !150, !150, !153}
!9551 = !{!9552, !9553, !9554, !9555, !9556, !9557}
!9552 = !DILocalVariable(name: "regions", arg: 1, scope: !9548, file: !708, line: 106, type: !9512)
!9553 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9548, file: !708, line: 106, type: !150)
!9554 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9548, file: !708, line: 106, type: !150)
!9555 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9548, file: !708, line: 107, type: !153)
!9556 = !DILocalVariable(name: "i", scope: !9548, file: !708, line: 109, type: !125)
!9557 = !DILocalVariable(name: "reg_index", scope: !9548, file: !708, line: 110, type: !125)
!9558 = !DILocation(line: 0, scope: !9548)
!9559 = !DILocation(line: 110, column: 18, scope: !9548)
!9560 = !DILocation(line: 112, column: 16, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !708, line: 112, column: 2)
!9562 = distinct !DILexicalBlock(scope: !9548, file: !708, line: 112, column: 2)
!9563 = !DILocation(line: 112, column: 2, scope: !9562)
!9564 = !DILocation(line: 113, column: 7, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !708, line: 113, column: 7)
!9566 = distinct !DILexicalBlock(scope: !9561, file: !708, line: 112, column: 36)
!9567 = !DILocation(line: 113, column: 18, scope: !9565)
!9568 = !DILocation(line: 113, column: 23, scope: !9565)
!9569 = !DILocation(line: 113, column: 7, scope: !9566)
!9570 = !DILocation(line: 118, column: 23, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9566, file: !708, line: 118, column: 7)
!9572 = !DILocation(line: 119, column: 7, scope: !9571)
!9573 = !DILocation(line: 118, column: 7, scope: !9566)
!9574 = !DILocation(line: 120, column: 4, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !708, line: 120, column: 4)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !708, line: 120, column: 4)
!9577 = distinct !DILexicalBlock(scope: !9578, file: !708, line: 120, column: 4)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !708, line: 120, column: 4)
!9579 = distinct !DILexicalBlock(scope: !9571, file: !708, line: 119, column: 45)
!9580 = !DILocation(line: 121, column: 4, scope: !9579)
!9581 = !DILocation(line: 124, column: 36, scope: !9566)
!9582 = !DILocation(line: 124, column: 15, scope: !9566)
!9583 = !DILocation(line: 126, column: 17, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9566, file: !708, line: 126, column: 7)
!9585 = !DILocation(line: 126, column: 7, scope: !9566)
!9586 = !DILocation(line: 131, column: 12, scope: !9566)
!9587 = !DILocation(line: 132, column: 2, scope: !9566)
!9588 = !DILocation(line: 112, column: 32, scope: !9561)
!9589 = distinct !{!9589, !9563, !9590}
!9590 = !DILocation(line: 132, column: 2, scope: !9562)
!9591 = !DILocation(line: 135, column: 1, scope: !9548)
!9592 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9533, file: !9533, line: 63, type: !9593, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9595)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{!125, !9512}
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "part", arg: 1, scope: !9592, file: !9533, line: 63, type: !9512)
!9597 = !DILocalVariable(name: "partition_is_valid", scope: !9592, file: !9533, line: 70, type: !125)
!9598 = !DILocation(line: 0, scope: !9592)
!9599 = !DILocation(line: 71, column: 11, scope: !9592)
!9600 = !DILocation(line: 71, column: 37, scope: !9592)
!9601 = !{i32 0, i32 33}
!9602 = !DILocation(line: 72, column: 3, scope: !9592)
!9603 = !DILocation(line: 71, column: 30, scope: !9592)
!9604 = !DILocation(line: 75, column: 11, scope: !9592)
!9605 = !DILocation(line: 75, column: 17, scope: !9592)
!9606 = !DILocation(line: 75, column: 38, scope: !9592)
!9607 = !DILocation(line: 77, column: 2, scope: !9592)
!9608 = distinct !DISubprogram(name: "mpu_configure_region", scope: !708, file: !708, line: 79, type: !9609, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9611)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!125, !323, !9512}
!9611 = !{!9612, !9613, !9614}
!9612 = !DILocalVariable(name: "index", arg: 1, scope: !9608, file: !708, line: 79, type: !323)
!9613 = !DILocalVariable(name: "new_region", arg: 2, scope: !9608, file: !708, line: 80, type: !9512)
!9614 = !DILocalVariable(name: "region_conf", scope: !9608, file: !708, line: 82, type: !697)
!9615 = !DILocation(line: 0, scope: !9608)
!9616 = !DILocation(line: 82, column: 2, scope: !9608)
!9617 = !DILocation(line: 82, column: 24, scope: !9608)
!9618 = !DILocation(line: 87, column: 33, scope: !9608)
!9619 = !DILocation(line: 87, column: 14, scope: !9608)
!9620 = !DILocation(line: 87, column: 19, scope: !9608)
!9621 = !DILocation(line: 91, column: 55, scope: !9608)
!9622 = !DILocation(line: 92, column: 16, scope: !9608)
!9623 = !DILocation(line: 92, column: 53, scope: !9608)
!9624 = !DILocation(line: 91, column: 2, scope: !9608)
!9625 = !DILocation(line: 95, column: 9, scope: !9608)
!9626 = !DILocation(line: 97, column: 1, scope: !9608)
!9627 = !DILocation(line: 95, column: 2, scope: !9608)
!9628 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9533, file: !9533, line: 113, type: !9629, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9634)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{null, !9631, !9632, !208, !208}
!9631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!9632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9633, size: 32)
!9633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9519)
!9634 = !{!9635, !9636, !9637, !9638}
!9635 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9628, file: !9533, line: 114, type: !9631)
!9636 = !DILocalVariable(name: "attr", arg: 2, scope: !9628, file: !9533, line: 115, type: !9632)
!9637 = !DILocalVariable(name: "base", arg: 3, scope: !9628, file: !9533, line: 115, type: !208)
!9638 = !DILocalVariable(name: "size", arg: 4, scope: !9628, file: !9533, line: 115, type: !208)
!9639 = !DILocation(line: 0, scope: !9628)
!9640 = !DILocation(line: 127, column: 23, scope: !9628)
!9641 = !DILocation(line: 127, column: 35, scope: !9628)
!9642 = !DILocation(line: 127, column: 33, scope: !9628)
!9643 = !DILocation(line: 127, column: 10, scope: !9628)
!9644 = !DILocation(line: 127, column: 15, scope: !9628)
!9645 = !DILocation(line: 129, column: 1, scope: !9628)
!9646 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !708, file: !708, line: 57, type: !9647, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9649)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{!125, !323, !695}
!9649 = !{!9650, !9651}
!9650 = !DILocalVariable(name: "index", arg: 1, scope: !9646, file: !708, line: 57, type: !323)
!9651 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9646, file: !708, line: 58, type: !695)
!9652 = !DILocation(line: 0, scope: !9646)
!9653 = !DILocation(line: 61, column: 6, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9646, file: !708, line: 61, column: 6)
!9655 = !DILocation(line: 61, column: 12, scope: !9654)
!9656 = !DILocation(line: 61, column: 6, scope: !9646)
!9657 = !DILocation(line: 64, column: 3, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !708, line: 64, column: 3)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !708, line: 64, column: 3)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !708, line: 64, column: 3)
!9661 = distinct !DILexicalBlock(scope: !9662, file: !708, line: 64, column: 3)
!9662 = distinct !DILexicalBlock(scope: !9654, file: !708, line: 61, column: 40)
!9663 = !DILocation(line: 65, column: 3, scope: !9662)
!9664 = !DILocation(line: 71, column: 2, scope: !9646)
!9665 = !DILocation(line: 73, column: 2, scope: !9646)
!9666 = !DILocation(line: 74, column: 1, scope: !9646)
!9667 = distinct !DISubprogram(name: "region_init", scope: !9533, file: !9533, line: 29, type: !9668, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9670)
!9668 = !DISubroutineType(types: !9669)
!9669 = !{null, !8713, !695}
!9670 = !{!9671, !9672}
!9671 = !DILocalVariable(name: "index", arg: 1, scope: !9667, file: !9533, line: 29, type: !8713)
!9672 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9667, file: !9533, line: 30, type: !695)
!9673 = !DILocation(line: 0, scope: !9667)
!9674 = !DILocation(line: 33, column: 2, scope: !9667)
!9675 = !DILocation(line: 47, column: 28, scope: !9667)
!9676 = !DILocation(line: 47, column: 33, scope: !9667)
!9677 = !DILocation(line: 48, column: 26, scope: !9667)
!9678 = !DILocation(line: 47, column: 12, scope: !9667)
!9679 = !DILocation(line: 49, column: 32, scope: !9667)
!9680 = !DILocation(line: 49, column: 37, scope: !9667)
!9681 = !DILocation(line: 49, column: 12, scope: !9667)
!9682 = !DILocation(line: 53, column: 1, scope: !9667)
!9683 = distinct !DISubprogram(name: "set_region_number", scope: !9684, file: !9684, line: 32, type: !8536, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9685)
!9684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9685 = !{!9686}
!9686 = !DILocalVariable(name: "index", arg: 1, scope: !9683, file: !9684, line: 32, type: !208)
!9687 = !DILocation(line: 0, scope: !9683)
!9688 = !DILocation(line: 34, column: 11, scope: !9683)
!9689 = !DILocation(line: 35, column: 1, scope: !9683)
!9690 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9533, file: !9533, line: 88, type: !9691, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9693)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{!208, !208}
!9693 = !{!9694}
!9694 = !DILocalVariable(name: "size", arg: 1, scope: !9690, file: !9533, line: 88, type: !208)
!9695 = !DILocation(line: 0, scope: !9690)
!9696 = !DILocation(line: 91, column: 11, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9690, file: !9533, line: 91, column: 6)
!9698 = !DILocation(line: 91, column: 6, scope: !9690)
!9699 = !DILocation(line: 100, column: 11, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9690, file: !9533, line: 100, column: 6)
!9701 = !DILocation(line: 100, column: 6, scope: !9690)
!9702 = !DILocation(line: 104, column: 35, scope: !9690)
!9703 = !DILocation(line: 104, column: 16, scope: !9690)
!9704 = !DILocation(line: 104, column: 50, scope: !9690)
!9705 = !DILocation(line: 104, column: 72, scope: !9690)
!9706 = !DILocation(line: 104, column: 2, scope: !9690)
!9707 = !DILocation(line: 106, column: 1, scope: !9690)
!9708 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !708, file: !708, line: 307, type: !9709, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9711)
!9709 = !DISubroutineType(types: !9710)
!9710 = !{null, !9512, !150}
!9711 = !{!9712, !9713}
!9712 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9708, file: !708, line: 308, type: !9512)
!9713 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9708, file: !708, line: 308, type: !150)
!9714 = !DILocation(line: 0, scope: !9708)
!9715 = !DILocation(line: 310, column: 6, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9708, file: !708, line: 310, column: 6)
!9717 = !DILocation(line: 316, column: 1, scope: !9708)
!9718 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9533, file: !9533, line: 249, type: !9719, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9721)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{!125, !9512, !150}
!9721 = !{!9722, !9723, !9724, !9725}
!9722 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9718, file: !9533, line: 250, type: !9512)
!9723 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9718, file: !9533, line: 250, type: !150)
!9724 = !DILocalVariable(name: "mpu_reg_index", scope: !9718, file: !9533, line: 252, type: !125)
!9725 = !DILocalVariable(name: "i", scope: !9726, file: !9533, line: 264, type: !125)
!9726 = distinct !DILexicalBlock(scope: !9727, file: !9533, line: 264, column: 3)
!9727 = distinct !DILexicalBlock(scope: !9728, file: !9533, line: 261, column: 32)
!9728 = distinct !DILexicalBlock(scope: !9718, file: !9533, line: 261, column: 6)
!9729 = !DILocation(line: 0, scope: !9718)
!9730 = !DILocation(line: 252, column: 22, scope: !9718)
!9731 = !DILocation(line: 258, column: 18, scope: !9718)
!9732 = !DILocation(line: 261, column: 20, scope: !9728)
!9733 = !DILocation(line: 261, column: 6, scope: !9718)
!9734 = !DILocation(line: 0, scope: !9726)
!9735 = !DILocation(line: 265, column: 4, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !9533, line: 264, column: 59)
!9737 = distinct !DILexicalBlock(scope: !9726, file: !9533, line: 264, column: 3)
!9738 = !DILocation(line: 264, column: 55, scope: !9737)
!9739 = !DILocation(line: 264, column: 33, scope: !9737)
!9740 = !DILocation(line: 264, column: 3, scope: !9726)
!9741 = distinct !{!9741, !9740, !9742}
!9742 = !DILocation(line: 266, column: 3, scope: !9726)
!9743 = !DILocation(line: 269, column: 2, scope: !9718)
!9744 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9745, file: !9745, line: 218, type: !8536, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9746)
!9745 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9746 = !{!9747}
!9747 = !DILocalVariable(name: "rnr", arg: 1, scope: !9744, file: !9745, line: 218, type: !208)
!9748 = !DILocation(line: 0, scope: !9744)
!9749 = !DILocation(line: 220, column: 12, scope: !9744)
!9750 = !DILocation(line: 221, column: 13, scope: !9744)
!9751 = !DILocation(line: 222, column: 1, scope: !9744)
!9752 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !708, file: !708, line: 326, type: !9753, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9755)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!125}
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "r_index", scope: !9752, file: !708, line: 328, type: !208)
!9757 = !DILocation(line: 330, column: 17, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9752, file: !708, line: 330, column: 6)
!9759 = !DILocation(line: 330, column: 29, scope: !9758)
!9760 = !DILocation(line: 330, column: 6, scope: !9752)
!9761 = !DILocation(line: 347, column: 2, scope: !9752)
!9762 = !DILocation(line: 0, scope: !9752)
!9763 = !DILocation(line: 364, column: 29, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !708, line: 364, column: 2)
!9765 = distinct !DILexicalBlock(scope: !9752, file: !708, line: 364, column: 2)
!9766 = !DILocation(line: 364, column: 2, scope: !9765)
!9767 = !DILocation(line: 365, column: 25, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9764, file: !708, line: 364, column: 66)
!9769 = !DILocation(line: 365, column: 3, scope: !9768)
!9770 = !DILocation(line: 364, column: 62, scope: !9764)
!9771 = distinct !{!9771, !9766, !9772}
!9772 = !DILocation(line: 366, column: 2, scope: !9765)
!9773 = !DILocation(line: 369, column: 23, scope: !9752)
!9774 = !DILocation(line: 369, column: 21, scope: !9752)
!9775 = !DILocation(line: 372, column: 2, scope: !9752)
!9776 = !DILocation(line: 443, column: 2, scope: !9752)
!9777 = !DILocation(line: 444, column: 1, scope: !9752)
!9778 = distinct !DISubprogram(name: "strcpy", scope: !9779, file: !9779, line: 20, type: !9780, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9784)
!9779 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!393, !9782, !9783}
!9782 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9783 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9784 = !{!9785, !9786, !9787}
!9785 = !DILocalVariable(name: "d", arg: 1, scope: !9778, file: !9779, line: 20, type: !9782)
!9786 = !DILocalVariable(name: "s", arg: 2, scope: !9778, file: !9779, line: 20, type: !9783)
!9787 = !DILocalVariable(name: "dest", scope: !9778, file: !9779, line: 22, type: !393)
!9788 = !DILocation(line: 0, scope: !9778)
!9789 = !DILocation(line: 24, column: 9, scope: !9778)
!9790 = !DILocation(line: 24, column: 12, scope: !9778)
!9791 = !DILocation(line: 24, column: 2, scope: !9778)
!9792 = !DILocation(line: 25, column: 6, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9778, file: !9779, line: 24, column: 21)
!9794 = !DILocation(line: 26, column: 4, scope: !9793)
!9795 = !DILocation(line: 27, column: 4, scope: !9793)
!9796 = distinct !{!9796, !9791, !9797}
!9797 = !DILocation(line: 28, column: 2, scope: !9778)
!9798 = !DILocation(line: 30, column: 5, scope: !9778)
!9799 = !DILocation(line: 32, column: 2, scope: !9778)
!9800 = distinct !DISubprogram(name: "strncpy", scope: !9779, file: !9779, line: 42, type: !9801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9803)
!9801 = !DISubroutineType(types: !9802)
!9802 = !{!393, !9782, !9783, !272}
!9803 = !{!9804, !9805, !9806, !9807}
!9804 = !DILocalVariable(name: "d", arg: 1, scope: !9800, file: !9779, line: 42, type: !9782)
!9805 = !DILocalVariable(name: "s", arg: 2, scope: !9800, file: !9779, line: 42, type: !9783)
!9806 = !DILocalVariable(name: "n", arg: 3, scope: !9800, file: !9779, line: 42, type: !272)
!9807 = !DILocalVariable(name: "dest", scope: !9800, file: !9779, line: 44, type: !393)
!9808 = !DILocation(line: 0, scope: !9800)
!9809 = !DILocation(line: 46, column: 12, scope: !9800)
!9810 = !DILocation(line: 46, column: 17, scope: !9800)
!9811 = !DILocation(line: 46, column: 20, scope: !9800)
!9812 = !DILocation(line: 46, column: 23, scope: !9800)
!9813 = !DILocation(line: 46, column: 2, scope: !9800)
!9814 = !DILocation(line: 47, column: 6, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9800, file: !9779, line: 46, column: 32)
!9816 = !DILocation(line: 48, column: 4, scope: !9815)
!9817 = !DILocation(line: 49, column: 4, scope: !9815)
!9818 = !DILocation(line: 50, column: 4, scope: !9815)
!9819 = distinct !{!9819, !9813, !9820}
!9820 = !DILocation(line: 51, column: 2, scope: !9800)
!9821 = !DILocation(line: 54, column: 6, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9800, file: !9779, line: 53, column: 16)
!9823 = !DILocation(line: 55, column: 4, scope: !9822)
!9824 = !DILocation(line: 56, column: 4, scope: !9822)
!9825 = !DILocation(line: 53, column: 11, scope: !9800)
!9826 = !DILocation(line: 53, column: 2, scope: !9800)
!9827 = distinct !{!9827, !9826, !9828}
!9828 = !DILocation(line: 57, column: 2, scope: !9800)
!9829 = !DILocation(line: 59, column: 2, scope: !9800)
!9830 = distinct !DISubprogram(name: "strchr", scope: !9779, file: !9779, line: 69, type: !9831, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9833)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!393, !140, !125}
!9833 = !{!9834, !9835, !9836}
!9834 = !DILocalVariable(name: "s", arg: 1, scope: !9830, file: !9779, line: 69, type: !140)
!9835 = !DILocalVariable(name: "c", arg: 2, scope: !9830, file: !9779, line: 69, type: !125)
!9836 = !DILocalVariable(name: "tmp", scope: !9830, file: !9779, line: 71, type: !142)
!9837 = !DILocation(line: 0, scope: !9830)
!9838 = !DILocation(line: 73, column: 2, scope: !9830)
!9839 = !DILocation(line: 73, column: 10, scope: !9830)
!9840 = !DILocation(line: 73, column: 13, scope: !9830)
!9841 = !DILocation(line: 73, column: 21, scope: !9830)
!9842 = !DILocation(line: 74, column: 4, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9830, file: !9779, line: 73, column: 38)
!9844 = distinct !{!9844, !9838, !9845}
!9845 = !DILocation(line: 75, column: 2, scope: !9830)
!9846 = !DILocation(line: 77, column: 9, scope: !9830)
!9847 = !DILocation(line: 77, column: 2, scope: !9830)
!9848 = distinct !DISubprogram(name: "strrchr", scope: !9779, file: !9779, line: 87, type: !9831, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852}
!9850 = !DILocalVariable(name: "s", arg: 1, scope: !9848, file: !9779, line: 87, type: !140)
!9851 = !DILocalVariable(name: "c", arg: 2, scope: !9848, file: !9779, line: 87, type: !125)
!9852 = !DILocalVariable(name: "match", scope: !9848, file: !9779, line: 89, type: !393)
!9853 = !DILocation(line: 0, scope: !9848)
!9854 = !DILocation(line: 91, column: 2, scope: !9848)
!9855 = !DILocation(line: 92, column: 7, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9857, file: !9779, line: 92, column: 7)
!9857 = distinct !DILexicalBlock(scope: !9848, file: !9779, line: 91, column: 5)
!9858 = !DILocation(line: 92, column: 10, scope: !9856)
!9859 = !DILocation(line: 92, column: 7, scope: !9857)
!9860 = !DILocation(line: 95, column: 13, scope: !9848)
!9861 = !DILocation(line: 95, column: 2, scope: !9857)
!9862 = distinct !{!9862, !9854, !9863}
!9863 = !DILocation(line: 95, column: 15, scope: !9848)
!9864 = !DILocation(line: 97, column: 2, scope: !9848)
!9865 = distinct !DISubprogram(name: "strlen", scope: !9779, file: !9779, line: 107, type: !9866, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9868)
!9866 = !DISubroutineType(types: !9867)
!9867 = !{!272, !140}
!9868 = !{!9869, !9870}
!9869 = !DILocalVariable(name: "s", arg: 1, scope: !9865, file: !9779, line: 107, type: !140)
!9870 = !DILocalVariable(name: "n", scope: !9865, file: !9779, line: 109, type: !272)
!9871 = !DILocation(line: 0, scope: !9865)
!9872 = !DILocation(line: 111, column: 9, scope: !9865)
!9873 = !DILocation(line: 111, column: 12, scope: !9865)
!9874 = !DILocation(line: 111, column: 2, scope: !9865)
!9875 = !DILocation(line: 112, column: 4, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9865, file: !9779, line: 111, column: 21)
!9877 = !DILocation(line: 113, column: 4, scope: !9876)
!9878 = distinct !{!9878, !9874, !9879}
!9879 = !DILocation(line: 114, column: 2, scope: !9865)
!9880 = !DILocation(line: 116, column: 2, scope: !9865)
!9881 = distinct !DISubprogram(name: "strnlen", scope: !9779, file: !9779, line: 126, type: !9882, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9884)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{!272, !140, !272}
!9884 = !{!9885, !9886, !9887}
!9885 = !DILocalVariable(name: "s", arg: 1, scope: !9881, file: !9779, line: 126, type: !140)
!9886 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9881, file: !9779, line: 126, type: !272)
!9887 = !DILocalVariable(name: "n", scope: !9881, file: !9779, line: 128, type: !272)
!9888 = !DILocation(line: 0, scope: !9881)
!9889 = !DILocation(line: 130, column: 9, scope: !9881)
!9890 = !DILocation(line: 130, column: 12, scope: !9881)
!9891 = !DILocation(line: 130, column: 20, scope: !9881)
!9892 = !DILocation(line: 130, column: 2, scope: !9881)
!9893 = !DILocation(line: 131, column: 4, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9881, file: !9779, line: 130, column: 35)
!9895 = !DILocation(line: 132, column: 4, scope: !9894)
!9896 = distinct !{!9896, !9892, !9897}
!9897 = !DILocation(line: 133, column: 2, scope: !9881)
!9898 = !DILocation(line: 135, column: 2, scope: !9881)
!9899 = distinct !DISubprogram(name: "strcmp", scope: !9779, file: !9779, line: 145, type: !9900, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9902)
!9900 = !DISubroutineType(types: !9901)
!9901 = !{!125, !140, !140}
!9902 = !{!9903, !9904}
!9903 = !DILocalVariable(name: "s1", arg: 1, scope: !9899, file: !9779, line: 145, type: !140)
!9904 = !DILocalVariable(name: "s2", arg: 2, scope: !9899, file: !9779, line: 145, type: !140)
!9905 = !DILocation(line: 0, scope: !9899)
!9906 = !DILocation(line: 147, column: 10, scope: !9899)
!9907 = !DILocation(line: 147, column: 17, scope: !9899)
!9908 = !DILocation(line: 147, column: 14, scope: !9899)
!9909 = !DILocation(line: 147, column: 22, scope: !9899)
!9910 = !DILocation(line: 148, column: 5, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9899, file: !9779, line: 147, column: 40)
!9912 = !DILocation(line: 149, column: 5, scope: !9911)
!9913 = distinct !{!9913, !9914, !9915}
!9914 = !DILocation(line: 147, column: 2, scope: !9899)
!9915 = !DILocation(line: 150, column: 2, scope: !9899)
!9916 = !DILocation(line: 152, column: 9, scope: !9899)
!9917 = !DILocation(line: 152, column: 15, scope: !9899)
!9918 = !DILocation(line: 152, column: 13, scope: !9899)
!9919 = !DILocation(line: 152, column: 2, scope: !9899)
!9920 = distinct !DISubprogram(name: "strncmp", scope: !9779, file: !9779, line: 162, type: !9921, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{!125, !140, !140, !272}
!9923 = !{!9924, !9925, !9926}
!9924 = !DILocalVariable(name: "s1", arg: 1, scope: !9920, file: !9779, line: 162, type: !140)
!9925 = !DILocalVariable(name: "s2", arg: 2, scope: !9920, file: !9779, line: 162, type: !140)
!9926 = !DILocalVariable(name: "n", arg: 3, scope: !9920, file: !9779, line: 162, type: !272)
!9927 = !DILocation(line: 0, scope: !9920)
!9928 = !DILocation(line: 164, column: 17, scope: !9920)
!9929 = !DILocation(line: 164, column: 21, scope: !9920)
!9930 = !DILocation(line: 164, column: 28, scope: !9920)
!9931 = !DILocation(line: 164, column: 25, scope: !9920)
!9932 = !DILocation(line: 164, column: 33, scope: !9920)
!9933 = !DILocation(line: 165, column: 5, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9920, file: !9779, line: 164, column: 51)
!9935 = !DILocation(line: 166, column: 5, scope: !9934)
!9936 = !DILocation(line: 167, column: 4, scope: !9934)
!9937 = distinct !{!9937, !9938, !9939}
!9938 = !DILocation(line: 164, column: 2, scope: !9920)
!9939 = !DILocation(line: 168, column: 2, scope: !9920)
!9940 = !DILocation(line: 170, column: 25, scope: !9920)
!9941 = !DILocation(line: 170, column: 31, scope: !9920)
!9942 = !DILocation(line: 170, column: 29, scope: !9920)
!9943 = !DILocation(line: 170, column: 9, scope: !9920)
!9944 = !DILocation(line: 170, column: 2, scope: !9920)
!9945 = distinct !DISubprogram(name: "strtok_r", scope: !9779, file: !9779, line: 180, type: !9946, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9948)
!9946 = !DISubroutineType(types: !9947)
!9947 = !{!393, !393, !140, !392}
!9948 = !{!9949, !9950, !9951, !9952, !9953}
!9949 = !DILocalVariable(name: "str", arg: 1, scope: !9945, file: !9779, line: 180, type: !393)
!9950 = !DILocalVariable(name: "sep", arg: 2, scope: !9945, file: !9779, line: 180, type: !140)
!9951 = !DILocalVariable(name: "state", arg: 3, scope: !9945, file: !9779, line: 180, type: !392)
!9952 = !DILocalVariable(name: "start", scope: !9945, file: !9779, line: 182, type: !393)
!9953 = !DILocalVariable(name: "end", scope: !9945, file: !9779, line: 182, type: !393)
!9954 = !DILocation(line: 0, scope: !9945)
!9955 = !DILocation(line: 184, column: 10, scope: !9945)
!9956 = !DILocation(line: 184, column: 22, scope: !9945)
!9957 = !DILocation(line: 187, column: 9, scope: !9945)
!9958 = !DILocation(line: 187, column: 16, scope: !9945)
!9959 = !DILocation(line: 187, column: 19, scope: !9945)
!9960 = !DILocation(line: 187, column: 2, scope: !9945)
!9961 = !DILocation(line: 188, column: 8, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9945, file: !9779, line: 187, column: 40)
!9963 = distinct !{!9963, !9960, !9964}
!9964 = !DILocation(line: 189, column: 2, scope: !9945)
!9965 = !DILocation(line: 198, column: 9, scope: !9945)
!9966 = !DILocation(line: 198, column: 18, scope: !9945)
!9967 = !DILocation(line: 198, column: 17, scope: !9945)
!9968 = !DILocation(line: 198, column: 2, scope: !9945)
!9969 = !DILocation(line: 199, column: 6, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9945, file: !9779, line: 198, column: 37)
!9971 = !DILocation(line: 198, column: 14, scope: !9945)
!9972 = distinct !{!9972, !9968, !9973}
!9973 = !DILocation(line: 200, column: 2, scope: !9945)
!9974 = !DILocation(line: 203, column: 8, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !9779, line: 202, column: 20)
!9976 = distinct !DILexicalBlock(scope: !9945, file: !9779, line: 202, column: 6)
!9977 = !DILocation(line: 204, column: 16, scope: !9975)
!9978 = !DILocation(line: 205, column: 2, scope: !9975)
!9979 = !DILocation(line: 210, column: 1, scope: !9945)
!9980 = distinct !DISubprogram(name: "strcat", scope: !9779, file: !9779, line: 212, type: !9780, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9981)
!9981 = !{!9982, !9983}
!9982 = !DILocalVariable(name: "dest", arg: 1, scope: !9980, file: !9779, line: 212, type: !9782)
!9983 = !DILocalVariable(name: "src", arg: 2, scope: !9980, file: !9779, line: 212, type: !9783)
!9984 = !DILocation(line: 0, scope: !9980)
!9985 = !DILocation(line: 214, column: 16, scope: !9980)
!9986 = !DILocation(line: 214, column: 14, scope: !9980)
!9987 = !DILocation(line: 214, column: 2, scope: !9980)
!9988 = !DILocation(line: 215, column: 2, scope: !9980)
!9989 = distinct !DISubprogram(name: "strncat", scope: !9779, file: !9779, line: 218, type: !9801, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !9990)
!9990 = !{!9991, !9992, !9993, !9994, !9995}
!9991 = !DILocalVariable(name: "dest", arg: 1, scope: !9989, file: !9779, line: 218, type: !9782)
!9992 = !DILocalVariable(name: "src", arg: 2, scope: !9989, file: !9779, line: 218, type: !9783)
!9993 = !DILocalVariable(name: "n", arg: 3, scope: !9989, file: !9779, line: 219, type: !272)
!9994 = !DILocalVariable(name: "orig_dest", scope: !9989, file: !9779, line: 221, type: !393)
!9995 = !DILocalVariable(name: "len", scope: !9989, file: !9779, line: 222, type: !272)
!9996 = !DILocation(line: 0, scope: !9989)
!9997 = !DILocation(line: 222, column: 15, scope: !9989)
!9998 = !DILocation(line: 224, column: 7, scope: !9989)
!9999 = !DILocation(line: 225, column: 14, scope: !9989)
!10000 = !DILocation(line: 225, column: 19, scope: !9989)
!10001 = !DILocation(line: 225, column: 11, scope: !9989)
!10002 = !DILocation(line: 225, column: 23, scope: !9989)
!10003 = !DILocation(line: 225, column: 28, scope: !9989)
!10004 = !DILocation(line: 225, column: 2, scope: !9989)
!10005 = !DILocation(line: 226, column: 17, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9989, file: !9779, line: 225, column: 38)
!10007 = !DILocation(line: 226, column: 8, scope: !10006)
!10008 = !DILocation(line: 226, column: 11, scope: !10006)
!10009 = distinct !{!10009, !10004, !10010}
!10010 = !DILocation(line: 227, column: 2, scope: !9989)
!10011 = !DILocation(line: 228, column: 8, scope: !9989)
!10012 = !DILocation(line: 230, column: 2, scope: !9989)
!10013 = distinct !DISubprogram(name: "memcmp", scope: !9779, file: !9779, line: 239, type: !10014, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10016)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!125, !13, !13, !272}
!10016 = !{!10017, !10018, !10019, !10020, !10021}
!10017 = !DILocalVariable(name: "m1", arg: 1, scope: !10013, file: !9779, line: 239, type: !13)
!10018 = !DILocalVariable(name: "m2", arg: 2, scope: !10013, file: !9779, line: 239, type: !13)
!10019 = !DILocalVariable(name: "n", arg: 3, scope: !10013, file: !9779, line: 239, type: !272)
!10020 = !DILocalVariable(name: "c1", scope: !10013, file: !9779, line: 241, type: !140)
!10021 = !DILocalVariable(name: "c2", scope: !10013, file: !9779, line: 242, type: !140)
!10022 = !DILocation(line: 0, scope: !10013)
!10023 = !DILocation(line: 244, column: 7, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10013, file: !9779, line: 244, column: 6)
!10025 = !DILocation(line: 244, column: 6, scope: !10013)
!10026 = !DILocation(line: 248, column: 10, scope: !10013)
!10027 = !DILocation(line: 248, column: 14, scope: !10013)
!10028 = !DILocation(line: 248, column: 19, scope: !10013)
!10029 = !DILocation(line: 248, column: 2, scope: !10013)
!10030 = !DILocation(line: 248, column: 23, scope: !10013)
!10031 = !DILocation(line: 248, column: 30, scope: !10013)
!10032 = !DILocation(line: 248, column: 27, scope: !10013)
!10033 = !DILocation(line: 249, column: 5, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10013, file: !9779, line: 248, column: 36)
!10035 = !DILocation(line: 250, column: 5, scope: !10034)
!10036 = distinct !{!10036, !10029, !10037}
!10037 = !DILocation(line: 251, column: 2, scope: !10013)
!10038 = !DILocation(line: 253, column: 9, scope: !10013)
!10039 = !DILocation(line: 253, column: 15, scope: !10013)
!10040 = !DILocation(line: 253, column: 13, scope: !10013)
!10041 = !DILocation(line: 253, column: 2, scope: !10013)
!10042 = !DILocation(line: 254, column: 1, scope: !10013)
!10043 = distinct !DISubprogram(name: "memmove", scope: !9779, file: !9779, line: 263, type: !10044, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10046)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{!124, !124, !13, !272}
!10046 = !{!10047, !10048, !10049, !10050, !10051}
!10047 = !DILocalVariable(name: "d", arg: 1, scope: !10043, file: !9779, line: 263, type: !124)
!10048 = !DILocalVariable(name: "s", arg: 2, scope: !10043, file: !9779, line: 263, type: !13)
!10049 = !DILocalVariable(name: "n", arg: 3, scope: !10043, file: !9779, line: 263, type: !272)
!10050 = !DILocalVariable(name: "dest", scope: !10043, file: !9779, line: 265, type: !393)
!10051 = !DILocalVariable(name: "src", scope: !10043, file: !9779, line: 266, type: !140)
!10052 = !DILocation(line: 0, scope: !10043)
!10053 = !DILocation(line: 268, column: 21, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10043, file: !9779, line: 268, column: 6)
!10055 = !DILocation(line: 268, column: 28, scope: !10054)
!10056 = !DILocation(line: 268, column: 6, scope: !10043)
!10057 = !DILocation(line: 280, column: 12, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !9779, line: 278, column: 9)
!10059 = !DILocation(line: 280, column: 3, scope: !10058)
!10060 = !DILocation(line: 275, column: 5, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !9779, line: 274, column: 17)
!10062 = distinct !DILexicalBlock(scope: !10054, file: !9779, line: 268, column: 33)
!10063 = !DILocation(line: 276, column: 14, scope: !10061)
!10064 = !DILocation(line: 276, column: 4, scope: !10061)
!10065 = !DILocation(line: 276, column: 12, scope: !10061)
!10066 = !DILocation(line: 274, column: 12, scope: !10062)
!10067 = !DILocation(line: 274, column: 3, scope: !10062)
!10068 = distinct !{!10068, !10067, !10069}
!10069 = !DILocation(line: 277, column: 3, scope: !10062)
!10070 = !DILocation(line: 281, column: 12, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10058, file: !9779, line: 280, column: 17)
!10072 = !DILocation(line: 281, column: 10, scope: !10071)
!10073 = !DILocation(line: 282, column: 8, scope: !10071)
!10074 = !DILocation(line: 283, column: 7, scope: !10071)
!10075 = !DILocation(line: 284, column: 5, scope: !10071)
!10076 = distinct !{!10076, !10059, !10077}
!10077 = !DILocation(line: 285, column: 3, scope: !10058)
!10078 = !DILocation(line: 288, column: 2, scope: !10043)
!10079 = distinct !DISubprogram(name: "memcpy", scope: !9779, file: !9779, line: 298, type: !10080, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10084)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!124, !10082, !10083, !272}
!10082 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!10083 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!10084 = !{!10085, !10086, !10087, !10088, !10089}
!10085 = !DILocalVariable(name: "d", arg: 1, scope: !10079, file: !9779, line: 298, type: !10082)
!10086 = !DILocalVariable(name: "s", arg: 2, scope: !10079, file: !9779, line: 298, type: !10083)
!10087 = !DILocalVariable(name: "n", arg: 3, scope: !10079, file: !9779, line: 298, type: !272)
!10088 = !DILocalVariable(name: "d_byte", scope: !10079, file: !9779, line: 302, type: !1158)
!10089 = !DILocalVariable(name: "s_byte", scope: !10079, file: !9779, line: 303, type: !3206)
!10090 = !DILocation(line: 0, scope: !10079)
!10091 = !DILocation(line: 337, column: 11, scope: !10079)
!10092 = !DILocation(line: 337, column: 2, scope: !10079)
!10093 = !DILocation(line: 338, column: 25, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10079, file: !9779, line: 337, column: 16)
!10095 = !DILocation(line: 338, column: 17, scope: !10094)
!10096 = !DILocation(line: 338, column: 11, scope: !10094)
!10097 = !DILocation(line: 338, column: 15, scope: !10094)
!10098 = !DILocation(line: 339, column: 4, scope: !10094)
!10099 = distinct !{!10099, !10092, !10100}
!10100 = !DILocation(line: 340, column: 2, scope: !10079)
!10101 = !DILocation(line: 342, column: 2, scope: !10079)
!10102 = distinct !DISubprogram(name: "memset", scope: !9779, file: !9779, line: 352, type: !10103, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10105)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{!124, !124, !125, !272}
!10105 = !{!10106, !10107, !10108, !10109, !10110}
!10106 = !DILocalVariable(name: "buf", arg: 1, scope: !10102, file: !9779, line: 352, type: !124)
!10107 = !DILocalVariable(name: "c", arg: 2, scope: !10102, file: !9779, line: 352, type: !125)
!10108 = !DILocalVariable(name: "n", arg: 3, scope: !10102, file: !9779, line: 352, type: !272)
!10109 = !DILocalVariable(name: "d_byte", scope: !10102, file: !9779, line: 356, type: !1158)
!10110 = !DILocalVariable(name: "c_byte", scope: !10102, file: !9779, line: 357, type: !151)
!10111 = !DILocation(line: 0, scope: !10102)
!10112 = !DILocation(line: 357, column: 25, scope: !10102)
!10113 = !DILocation(line: 389, column: 11, scope: !10102)
!10114 = !DILocation(line: 389, column: 2, scope: !10102)
!10115 = !DILocation(line: 390, column: 11, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10102, file: !9779, line: 389, column: 16)
!10117 = !DILocation(line: 390, column: 15, scope: !10116)
!10118 = !DILocation(line: 391, column: 4, scope: !10116)
!10119 = distinct !{!10119, !10114, !10120}
!10120 = !DILocation(line: 392, column: 2, scope: !10102)
!10121 = !DILocation(line: 394, column: 2, scope: !10102)
!10122 = distinct !DISubprogram(name: "memchr", scope: !9779, file: !9779, line: 404, type: !10123, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10125)
!10123 = !DISubroutineType(types: !10124)
!10124 = !{!124, !13, !125, !272}
!10125 = !{!10126, !10127, !10128, !10129}
!10126 = !DILocalVariable(name: "s", arg: 1, scope: !10122, file: !9779, line: 404, type: !13)
!10127 = !DILocalVariable(name: "c", arg: 2, scope: !10122, file: !9779, line: 404, type: !125)
!10128 = !DILocalVariable(name: "n", arg: 3, scope: !10122, file: !9779, line: 404, type: !272)
!10129 = !DILocalVariable(name: "p", scope: !10130, file: !9779, line: 407, type: !3206)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !9779, line: 406, column: 14)
!10131 = distinct !DILexicalBlock(scope: !10122, file: !9779, line: 406, column: 6)
!10132 = !DILocation(line: 0, scope: !10122)
!10133 = !DILocation(line: 406, column: 8, scope: !10131)
!10134 = !DILocation(line: 406, column: 6, scope: !10122)
!10135 = !DILocation(line: 409, column: 3, scope: !10130)
!10136 = !DILocation(line: 0, scope: !10130)
!10137 = !DILocation(line: 410, column: 8, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !9779, line: 410, column: 8)
!10139 = distinct !DILexicalBlock(scope: !10130, file: !9779, line: 409, column: 6)
!10140 = !DILocation(line: 410, column: 13, scope: !10138)
!10141 = !DILocation(line: 410, column: 8, scope: !10139)
!10142 = distinct !{!10142, !10135, !10143}
!10143 = !DILocation(line: 414, column: 20, scope: !10130)
!10144 = !DILocation(line: 417, column: 2, scope: !10122)
!10145 = !DILocation(line: 418, column: 1, scope: !10122)
!10146 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !718, file: !718, line: 23, type: !5214, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10147)
!10147 = !{!10148}
!10148 = !DILocalVariable(name: "hook", arg: 1, scope: !10146, file: !718, line: 23, type: !409)
!10149 = !DILocation(line: 0, scope: !10146)
!10150 = !DILocation(line: 25, column: 15, scope: !10146)
!10151 = !DILocation(line: 26, column: 1, scope: !10146)
!10152 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !718, file: !718, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10153)
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "c", arg: 1, scope: !10152, file: !718, line: 14, type: !125)
!10155 = !DILocation(line: 0, scope: !10152)
!10156 = !DILocation(line: 18, column: 2, scope: !10152)
!10157 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !718, file: !718, line: 28, type: !10158, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10160)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!125, !125, !714}
!10160 = !{!10161, !10162}
!10161 = !DILocalVariable(name: "c", arg: 1, scope: !10157, file: !718, line: 28, type: !125)
!10162 = !DILocalVariable(name: "stream", arg: 2, scope: !10157, file: !718, line: 28, type: !714)
!10163 = !DILocation(line: 0, scope: !10157)
!10164 = !DILocation(line: 30, column: 27, scope: !10157)
!10165 = !DILocation(line: 30, column: 50, scope: !10157)
!10166 = !DILocation(line: 30, column: 9, scope: !10157)
!10167 = !DILocation(line: 30, column: 2, scope: !10157)
!10168 = distinct !DISubprogram(name: "fputc", scope: !718, file: !718, line: 41, type: !10158, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10169)
!10169 = !{!10170, !10171}
!10170 = !DILocalVariable(name: "c", arg: 1, scope: !10168, file: !718, line: 41, type: !125)
!10171 = !DILocalVariable(name: "stream", arg: 2, scope: !10168, file: !718, line: 41, type: !714)
!10172 = !DILocation(line: 0, scope: !10168)
!10173 = !DILocation(line: 43, column: 9, scope: !10168)
!10174 = !DILocation(line: 43, column: 2, scope: !10168)
!10175 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10176, file: !10176, line: 72, type: !10158, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10177)
!10176 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!10177 = !{!10178, !10179}
!10178 = !DILocalVariable(name: "c", arg: 1, scope: !10175, file: !10176, line: 72, type: !125)
!10179 = !DILocalVariable(name: "stream", arg: 2, scope: !10175, file: !10176, line: 72, type: !714)
!10180 = !DILocation(line: 0, scope: !10175)
!10181 = !DILocation(line: 81, column: 2, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10175, file: !10176, line: 81, column: 2)
!10183 = !{i64 2155502046}
!10184 = !DILocation(line: 82, column: 9, scope: !10175)
!10185 = !DILocation(line: 82, column: 2, scope: !10175)
!10186 = distinct !DISubprogram(name: "fputs", scope: !718, file: !718, line: 46, type: !10187, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10190)
!10187 = !DISubroutineType(types: !10188)
!10188 = !{!125, !9783, !10189}
!10189 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!10190 = !{!10191, !10192, !10193, !10194}
!10191 = !DILocalVariable(name: "s", arg: 1, scope: !10186, file: !718, line: 46, type: !9783)
!10192 = !DILocalVariable(name: "stream", arg: 2, scope: !10186, file: !718, line: 46, type: !10189)
!10193 = !DILocalVariable(name: "len", scope: !10186, file: !718, line: 48, type: !125)
!10194 = !DILocalVariable(name: "ret", scope: !10186, file: !718, line: 49, type: !125)
!10195 = !DILocation(line: 0, scope: !10186)
!10196 = !DILocation(line: 48, column: 12, scope: !10186)
!10197 = !DILocation(line: 51, column: 8, scope: !10186)
!10198 = !DILocation(line: 53, column: 13, scope: !10186)
!10199 = !DILocation(line: 53, column: 9, scope: !10186)
!10200 = !DILocation(line: 53, column: 2, scope: !10186)
!10201 = distinct !DISubprogram(name: "fwrite", scope: !718, file: !718, line: 99, type: !10202, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10204)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!272, !10083, !272, !272, !10189}
!10204 = !{!10205, !10206, !10207, !10208}
!10205 = !DILocalVariable(name: "ptr", arg: 1, scope: !10201, file: !718, line: 99, type: !10083)
!10206 = !DILocalVariable(name: "size", arg: 2, scope: !10201, file: !718, line: 99, type: !272)
!10207 = !DILocalVariable(name: "nitems", arg: 3, scope: !10201, file: !718, line: 99, type: !272)
!10208 = !DILocalVariable(name: "stream", arg: 4, scope: !10201, file: !718, line: 100, type: !10189)
!10209 = !DILocation(line: 0, scope: !10201)
!10210 = !DILocation(line: 102, column: 9, scope: !10201)
!10211 = !DILocation(line: 102, column: 2, scope: !10201)
!10212 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10176, file: !10176, line: 96, type: !10202, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10213)
!10213 = !{!10214, !10215, !10216, !10217}
!10214 = !DILocalVariable(name: "ptr", arg: 1, scope: !10212, file: !10176, line: 96, type: !10083)
!10215 = !DILocalVariable(name: "size", arg: 2, scope: !10212, file: !10176, line: 96, type: !272)
!10216 = !DILocalVariable(name: "nitems", arg: 3, scope: !10212, file: !10176, line: 96, type: !272)
!10217 = !DILocalVariable(name: "stream", arg: 4, scope: !10212, file: !10176, line: 96, type: !10189)
!10218 = !DILocation(line: 0, scope: !10212)
!10219 = !DILocation(line: 107, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10212, file: !10176, line: 107, column: 2)
!10221 = !{i64 2155502150}
!10222 = !DILocation(line: 108, column: 9, scope: !10212)
!10223 = !DILocation(line: 108, column: 2, scope: !10212)
!10224 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !718, file: !718, line: 56, type: !10202, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10225)
!10225 = !{!10226, !10227, !10228, !10229, !10230, !10231, !10232, !10233}
!10226 = !DILocalVariable(name: "ptr", arg: 1, scope: !10224, file: !718, line: 56, type: !10083)
!10227 = !DILocalVariable(name: "size", arg: 2, scope: !10224, file: !718, line: 56, type: !272)
!10228 = !DILocalVariable(name: "nitems", arg: 3, scope: !10224, file: !718, line: 57, type: !272)
!10229 = !DILocalVariable(name: "stream", arg: 4, scope: !10224, file: !718, line: 57, type: !10189)
!10230 = !DILocalVariable(name: "i", scope: !10224, file: !718, line: 59, type: !272)
!10231 = !DILocalVariable(name: "j", scope: !10224, file: !718, line: 60, type: !272)
!10232 = !DILocalVariable(name: "p", scope: !10224, file: !718, line: 61, type: !3206)
!10233 = !DILabel(scope: !10224, name: "done", file: !718, line: 82)
!10234 = !DILocation(line: 0, scope: !10224)
!10235 = !DILocation(line: 63, column: 14, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10224, file: !718, line: 63, column: 6)
!10237 = !DILocation(line: 63, column: 24, scope: !10236)
!10238 = !DILocation(line: 72, column: 3, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10224, file: !718, line: 70, column: 5)
!10240 = !DILocation(line: 0, scope: !10239)
!10241 = !DILocation(line: 73, column: 8, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !718, line: 73, column: 8)
!10243 = distinct !DILexicalBlock(scope: !10239, file: !718, line: 72, column: 6)
!10244 = !DILocation(line: 73, column: 29, scope: !10242)
!10245 = !DILocation(line: 73, column: 27, scope: !10242)
!10246 = !DILocation(line: 73, column: 21, scope: !10242)
!10247 = !DILocation(line: 73, column: 33, scope: !10242)
!10248 = !DILocation(line: 73, column: 8, scope: !10243)
!10249 = !DILocation(line: 76, column: 5, scope: !10243)
!10250 = !DILocation(line: 77, column: 14, scope: !10239)
!10251 = !DILocation(line: 77, column: 3, scope: !10243)
!10252 = distinct !{!10252, !10238, !10253}
!10253 = !DILocation(line: 77, column: 17, scope: !10239)
!10254 = !DILocation(line: 79, column: 4, scope: !10239)
!10255 = !DILocation(line: 80, column: 13, scope: !10224)
!10256 = !DILocation(line: 80, column: 2, scope: !10239)
!10257 = distinct !{!10257, !10258, !10259}
!10258 = !DILocation(line: 70, column: 2, scope: !10224)
!10259 = !DILocation(line: 80, column: 16, scope: !10224)
!10260 = !DILocation(line: 82, column: 1, scope: !10224)
!10261 = !DILocation(line: 83, column: 17, scope: !10224)
!10262 = !DILocation(line: 83, column: 2, scope: !10224)
!10263 = !DILocation(line: 84, column: 1, scope: !10224)
!10264 = distinct !DISubprogram(name: "puts", scope: !718, file: !718, line: 106, type: !10265, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10267)
!10265 = !DISubroutineType(types: !10266)
!10266 = !{!125, !140}
!10267 = !{!10268}
!10268 = !DILocalVariable(name: "s", arg: 1, scope: !10264, file: !718, line: 106, type: !140)
!10269 = !DILocation(line: 0, scope: !10264)
!10270 = !DILocation(line: 108, column: 6, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10264, file: !718, line: 108, column: 6)
!10272 = !DILocation(line: 108, column: 23, scope: !10271)
!10273 = !DILocation(line: 108, column: 6, scope: !10264)
!10274 = !DILocation(line: 112, column: 9, scope: !10264)
!10275 = !DILocation(line: 112, column: 29, scope: !10264)
!10276 = !DILocation(line: 112, column: 2, scope: !10264)
!10277 = !DILocation(line: 113, column: 1, scope: !10264)
!10278 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !861, file: !861, line: 368, type: !912, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10279)
!10279 = !{!10280}
!10280 = !DILocalVariable(name: "dev", arg: 1, scope: !10278, file: !861, line: 368, type: !890)
!10281 = !DILocation(line: 0, scope: !10278)
!10282 = !DILocation(line: 370, column: 2, scope: !10278)
!10283 = !DILocation(line: 371, column: 1, scope: !10278)
!10284 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !861, file: !861, line: 243, type: !10285, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10287)
!10285 = !DISubroutineType(types: !10286)
!10286 = !{null, !125, !125, !890}
!10287 = !{!10288, !10289, !10290, !10291, !10293}
!10288 = !DILocalVariable(name: "min", arg: 1, scope: !10284, file: !861, line: 243, type: !125)
!10289 = !DILocalVariable(name: "max", arg: 2, scope: !10284, file: !861, line: 243, type: !125)
!10290 = !DILocalVariable(name: "dev", arg: 3, scope: !10284, file: !861, line: 243, type: !890)
!10291 = !DILocalVariable(name: "data", scope: !10284, file: !861, line: 245, type: !10292)
!10292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!10293 = !DILocalVariable(name: "line", scope: !10284, file: !861, line: 246, type: !125)
!10294 = !DILocation(line: 0, scope: !10284)
!10295 = !DILocation(line: 245, column: 38, scope: !10284)
!10296 = !DILocation(line: 249, column: 24, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !861, line: 249, column: 2)
!10298 = distinct !DILexicalBlock(scope: !10284, file: !861, line: 249, column: 2)
!10299 = !DILocation(line: 249, column: 2, scope: !10298)
!10300 = !DILocation(line: 251, column: 7, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10302, file: !861, line: 251, column: 7)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !861, line: 249, column: 39)
!10303 = !DILocation(line: 251, column: 7, scope: !10302)
!10304 = !DILocation(line: 253, column: 4, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10301, file: !861, line: 251, column: 36)
!10306 = !DILocation(line: 256, column: 24, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10305, file: !861, line: 256, column: 8)
!10308 = !DILocation(line: 256, column: 9, scope: !10307)
!10309 = !DILocation(line: 256, column: 8, scope: !10305)
!10310 = !DILocation(line: 260, column: 43, scope: !10305)
!10311 = !DILocation(line: 260, column: 4, scope: !10305)
!10312 = !DILocation(line: 261, column: 3, scope: !10305)
!10313 = !DILocation(line: 249, column: 35, scope: !10297)
!10314 = distinct !{!10314, !10299, !10315}
!10315 = !DILocation(line: 262, column: 2, scope: !10298)
!10316 = !DILocation(line: 263, column: 1, scope: !10284)
!10317 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !861, file: !861, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10318)
!10318 = !{!10319}
!10319 = !DILocalVariable(name: "line", arg: 1, scope: !10317, file: !861, line: 158, type: !125)
!10320 = !DILocation(line: 0, scope: !10317)
!10321 = !DILocation(line: 170, column: 38, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10323, file: !861, line: 160, column: 17)
!10323 = distinct !DILexicalBlock(scope: !10317, file: !861, line: 160, column: 6)
!10324 = !DILocation(line: 170, column: 10, scope: !10322)
!10325 = !DILocation(line: 176, column: 1, scope: !10317)
!10326 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !861, file: !861, line: 183, type: !10327, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10329)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{null, !125}
!10329 = !{!10330}
!10330 = !DILocalVariable(name: "line", arg: 1, scope: !10326, file: !861, line: 183, type: !125)
!10331 = !DILocation(line: 0, scope: !10326)
!10332 = !DILocation(line: 195, column: 28, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !861, line: 185, column: 17)
!10334 = distinct !DILexicalBlock(scope: !10326, file: !861, line: 185, column: 6)
!10335 = !DILocation(line: 195, column: 3, scope: !10333)
!10336 = !DILocation(line: 200, column: 1, scope: !10326)
!10337 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10338, file: !10338, line: 910, type: !8536, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10339)
!10338 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10339 = !{!10340}
!10340 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10337, file: !10338, line: 910, type: !208)
!10341 = !DILocation(line: 0, scope: !10337)
!10342 = !DILocation(line: 912, column: 3, scope: !10337)
!10343 = !DILocation(line: 913, column: 1, scope: !10337)
!10344 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10338, file: !10338, line: 834, type: !9691, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10345)
!10345 = !{!10346}
!10346 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10344, file: !10338, line: 834, type: !208)
!10347 = !DILocation(line: 0, scope: !10344)
!10348 = !DILocation(line: 836, column: 11, scope: !10344)
!10349 = !DILocation(line: 836, column: 40, scope: !10344)
!10350 = !DILocation(line: 836, column: 3, scope: !10344)
!10351 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !861, file: !861, line: 304, type: !912, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10352)
!10352 = !{!10353}
!10353 = !DILocalVariable(name: "dev", arg: 1, scope: !10351, file: !861, line: 304, type: !890)
!10354 = !DILocation(line: 0, scope: !10351)
!10355 = !DILocation(line: 306, column: 2, scope: !10351)
!10356 = !DILocation(line: 307, column: 1, scope: !10351)
!10357 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !861, file: !861, line: 299, type: !912, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10358)
!10358 = !{!10359}
!10359 = !DILocalVariable(name: "dev", arg: 1, scope: !10357, file: !861, line: 299, type: !890)
!10360 = !DILocation(line: 0, scope: !10357)
!10361 = !DILocation(line: 301, column: 2, scope: !10357)
!10362 = !DILocation(line: 302, column: 1, scope: !10357)
!10363 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !861, file: !861, line: 294, type: !912, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10364)
!10364 = !{!10365}
!10365 = !DILocalVariable(name: "dev", arg: 1, scope: !10363, file: !861, line: 294, type: !890)
!10366 = !DILocation(line: 0, scope: !10363)
!10367 = !DILocation(line: 296, column: 2, scope: !10363)
!10368 = !DILocation(line: 297, column: 1, scope: !10363)
!10369 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !861, file: !861, line: 397, type: !912, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10370)
!10370 = !{!10371}
!10371 = !DILocalVariable(name: "dev", arg: 1, scope: !10369, file: !861, line: 397, type: !890)
!10372 = !DILocation(line: 0, scope: !10369)
!10373 = !DILocation(line: 399, column: 2, scope: !10369)
!10374 = !DILocation(line: 400, column: 1, scope: !10369)
!10375 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !861, file: !861, line: 392, type: !912, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10376)
!10376 = !{!10377}
!10377 = !DILocalVariable(name: "dev", arg: 1, scope: !10375, file: !861, line: 392, type: !890)
!10378 = !DILocation(line: 0, scope: !10375)
!10379 = !DILocation(line: 394, column: 2, scope: !10375)
!10380 = !DILocation(line: 395, column: 1, scope: !10375)
!10381 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !861, file: !861, line: 289, type: !912, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10382)
!10382 = !{!10383}
!10383 = !DILocalVariable(name: "dev", arg: 1, scope: !10381, file: !861, line: 289, type: !890)
!10384 = !DILocation(line: 0, scope: !10381)
!10385 = !DILocation(line: 291, column: 2, scope: !10381)
!10386 = !DILocation(line: 292, column: 1, scope: !10381)
!10387 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !861, file: !861, line: 387, type: !912, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10388)
!10388 = !{!10389}
!10389 = !DILocalVariable(name: "dev", arg: 1, scope: !10387, file: !861, line: 387, type: !890)
!10390 = !DILocation(line: 0, scope: !10387)
!10391 = !DILocation(line: 389, column: 2, scope: !10387)
!10392 = !DILocation(line: 390, column: 1, scope: !10387)
!10393 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !861, file: !861, line: 382, type: !912, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10394)
!10394 = !{!10395}
!10395 = !DILocalVariable(name: "dev", arg: 1, scope: !10393, file: !861, line: 382, type: !890)
!10396 = !DILocation(line: 0, scope: !10393)
!10397 = !DILocation(line: 384, column: 2, scope: !10393)
!10398 = !DILocation(line: 385, column: 1, scope: !10393)
!10399 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !861, file: !861, line: 373, type: !912, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10400)
!10400 = !{!10401}
!10401 = !DILocalVariable(name: "dev", arg: 1, scope: !10399, file: !861, line: 373, type: !890)
!10402 = !DILocation(line: 0, scope: !10399)
!10403 = !DILocation(line: 375, column: 2, scope: !10399)
!10404 = !DILocation(line: 376, column: 1, scope: !10399)
!10405 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !861, file: !861, line: 284, type: !912, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10406)
!10406 = !{!10407}
!10407 = !DILocalVariable(name: "dev", arg: 1, scope: !10405, file: !861, line: 284, type: !890)
!10408 = !DILocation(line: 0, scope: !10405)
!10409 = !DILocation(line: 286, column: 2, scope: !10405)
!10410 = !DILocation(line: 287, column: 1, scope: !10405)
!10411 = distinct !DISubprogram(name: "stm32_exti_init", scope: !861, file: !861, line: 416, type: !888, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10412)
!10412 = !{!10413}
!10413 = !DILocalVariable(name: "dev", arg: 1, scope: !10411, file: !861, line: 416, type: !890)
!10414 = !DILocation(line: 0, scope: !10411)
!10415 = !DILocation(line: 418, column: 2, scope: !10411)
!10416 = !DILocation(line: 420, column: 2, scope: !10411)
!10417 = !DILocation(line: 0, scope: !911)
!10418 = !DILocation(line: 493, column: 2, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !911, file: !861, line: 493, column: 2)
!10420 = !DILocation(line: 497, column: 2, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !911, file: !861, line: 497, column: 2)
!10422 = !DILocation(line: 507, column: 2, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !911, file: !861, line: 507, column: 2)
!10424 = !DILocation(line: 512, column: 2, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !911, file: !861, line: 512, column: 2)
!10426 = !DILocation(line: 516, column: 2, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !911, file: !861, line: 516, column: 2)
!10428 = !DILocation(line: 523, column: 2, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !911, file: !861, line: 523, column: 2)
!10430 = !DILocation(line: 527, column: 2, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !911, file: !861, line: 527, column: 2)
!10432 = !DILocation(line: 581, column: 2, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !911, file: !861, line: 581, column: 2)
!10434 = !DILocation(line: 586, column: 2, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !911, file: !861, line: 586, column: 2)
!10436 = !DILocation(line: 591, column: 2, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !911, file: !861, line: 591, column: 2)
!10438 = !DILocation(line: 595, column: 2, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !911, file: !861, line: 595, column: 2)
!10440 = !DILocation(line: 607, column: 1, scope: !911)
!10441 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !861, file: !861, line: 112, type: !10327, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10442)
!10442 = !{!10443, !10444}
!10443 = !DILocalVariable(name: "line", arg: 1, scope: !10441, file: !861, line: 112, type: !125)
!10444 = !DILocalVariable(name: "irqnum", scope: !10441, file: !861, line: 114, type: !125)
!10445 = !DILocation(line: 0, scope: !10441)
!10446 = !DILocation(line: 121, column: 11, scope: !10441)
!10447 = !DILocation(line: 130, column: 26, scope: !10441)
!10448 = !DILocation(line: 130, column: 2, scope: !10441)
!10449 = !DILocation(line: 134, column: 2, scope: !10441)
!10450 = !DILocation(line: 135, column: 1, scope: !10441)
!10451 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10338, file: !10338, line: 268, type: !8536, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10452)
!10452 = !{!10453}
!10453 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10451, file: !10338, line: 268, type: !208)
!10454 = !DILocation(line: 0, scope: !10451)
!10455 = !DILocation(line: 270, column: 3, scope: !10451)
!10456 = !DILocation(line: 271, column: 1, scope: !10451)
!10457 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !861, file: !861, line: 137, type: !10327, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10458)
!10458 = !{!10459}
!10459 = !DILocalVariable(name: "line", arg: 1, scope: !10457, file: !861, line: 137, type: !125)
!10460 = !DILocation(line: 0, scope: !10457)
!10461 = !DILocation(line: 141, column: 11, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10457, file: !861, line: 141, column: 6)
!10463 = !DILocation(line: 141, column: 6, scope: !10457)
!10464 = !DILocation(line: 145, column: 28, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10462, file: !861, line: 141, column: 17)
!10466 = !DILocation(line: 145, column: 3, scope: !10465)
!10467 = !DILocation(line: 147, column: 2, scope: !10465)
!10468 = !DILocation(line: 151, column: 1, scope: !10457)
!10469 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10338, file: !10338, line: 309, type: !8536, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10470)
!10470 = !{!10471}
!10471 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10469, file: !10338, line: 309, type: !208)
!10472 = !DILocation(line: 0, scope: !10469)
!10473 = !DILocation(line: 311, column: 3, scope: !10469)
!10474 = !DILocation(line: 312, column: 1, scope: !10469)
!10475 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !861, file: !861, line: 202, type: !10476, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10478)
!10476 = !DISubroutineType(types: !10477)
!10477 = !{null, !125, !125}
!10478 = !{!10479, !10480}
!10479 = !DILocalVariable(name: "line", arg: 1, scope: !10475, file: !861, line: 202, type: !125)
!10480 = !DILocalVariable(name: "trigger", arg: 2, scope: !10475, file: !861, line: 202, type: !125)
!10481 = !DILocation(line: 0, scope: !10475)
!10482 = !DILocation(line: 211, column: 2, scope: !10475)
!10483 = !DILocation(line: 213, column: 36, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10475, file: !861, line: 211, column: 19)
!10485 = !DILocation(line: 213, column: 3, scope: !10484)
!10486 = !DILocation(line: 214, column: 3, scope: !10484)
!10487 = !DILocation(line: 215, column: 3, scope: !10484)
!10488 = !DILocation(line: 217, column: 35, scope: !10484)
!10489 = !DILocation(line: 217, column: 3, scope: !10484)
!10490 = !DILocation(line: 218, column: 3, scope: !10484)
!10491 = !DILocation(line: 219, column: 3, scope: !10484)
!10492 = !DILocation(line: 221, column: 36, scope: !10484)
!10493 = !DILocation(line: 221, column: 3, scope: !10484)
!10494 = !DILocation(line: 222, column: 3, scope: !10484)
!10495 = !DILocation(line: 223, column: 3, scope: !10484)
!10496 = !DILocation(line: 225, column: 35, scope: !10484)
!10497 = !DILocation(line: 225, column: 3, scope: !10484)
!10498 = !DILocation(line: 226, column: 3, scope: !10484)
!10499 = !DILocation(line: 227, column: 3, scope: !10484)
!10500 = !DILocation(line: 232, column: 1, scope: !10475)
!10501 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10338, file: !10338, line: 573, type: !8536, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10502)
!10502 = !{!10503}
!10503 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10501, file: !10338, line: 573, type: !208)
!10504 = !DILocation(line: 0, scope: !10501)
!10505 = !DILocation(line: 575, column: 3, scope: !10501)
!10506 = !DILocation(line: 577, column: 1, scope: !10501)
!10507 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10338, file: !10338, line: 703, type: !8536, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10508)
!10508 = !{!10509}
!10509 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10507, file: !10338, line: 703, type: !208)
!10510 = !DILocation(line: 0, scope: !10507)
!10511 = !DILocation(line: 705, column: 3, scope: !10507)
!10512 = !DILocation(line: 706, column: 1, scope: !10507)
!10513 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10338, file: !10338, line: 529, type: !8536, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10514)
!10514 = !{!10515}
!10515 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10513, file: !10338, line: 529, type: !208)
!10516 = !DILocation(line: 0, scope: !10513)
!10517 = !DILocation(line: 531, column: 3, scope: !10513)
!10518 = !DILocation(line: 533, column: 1, scope: !10513)
!10519 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10338, file: !10338, line: 661, type: !8536, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10520)
!10520 = !{!10521}
!10521 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10519, file: !10338, line: 661, type: !208)
!10522 = !DILocation(line: 0, scope: !10519)
!10523 = !DILocation(line: 663, column: 3, scope: !10519)
!10524 = !DILocation(line: 664, column: 1, scope: !10519)
!10525 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !861, file: !861, line: 433, type: !10526, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10528)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!125, !125, !901, !124}
!10528 = !{!10529, !10530, !10531, !10532, !10534}
!10529 = !DILocalVariable(name: "line", arg: 1, scope: !10525, file: !861, line: 433, type: !125)
!10530 = !DILocalVariable(name: "cb", arg: 2, scope: !10525, file: !861, line: 433, type: !901)
!10531 = !DILocalVariable(name: "arg", arg: 3, scope: !10525, file: !861, line: 433, type: !124)
!10532 = !DILocalVariable(name: "dev", scope: !10525, file: !861, line: 435, type: !10533)
!10533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!10534 = !DILocalVariable(name: "data", scope: !10525, file: !861, line: 436, type: !10292)
!10535 = !DILocation(line: 0, scope: !10525)
!10536 = !DILocation(line: 438, column: 21, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10525, file: !861, line: 438, column: 6)
!10538 = !DILocation(line: 438, column: 6, scope: !10537)
!10539 = !DILocation(line: 438, column: 6, scope: !10525)
!10540 = !DILocation(line: 442, column: 20, scope: !10525)
!10541 = !DILocation(line: 443, column: 17, scope: !10525)
!10542 = !DILocation(line: 443, column: 22, scope: !10525)
!10543 = !DILocation(line: 445, column: 2, scope: !10525)
!10544 = !DILocation(line: 446, column: 1, scope: !10525)
!10545 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !861, file: !861, line: 448, type: !10327, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10546)
!10546 = !{!10547, !10548, !10549}
!10547 = !DILocalVariable(name: "line", arg: 1, scope: !10545, file: !861, line: 448, type: !125)
!10548 = !DILocalVariable(name: "dev", scope: !10545, file: !861, line: 450, type: !10533)
!10549 = !DILocalVariable(name: "data", scope: !10545, file: !861, line: 451, type: !10292)
!10550 = !DILocation(line: 0, scope: !10545)
!10551 = !DILocation(line: 453, column: 17, scope: !10545)
!10552 = !DILocation(line: 453, column: 20, scope: !10545)
!10553 = !DILocation(line: 454, column: 17, scope: !10545)
!10554 = !DILocation(line: 454, column: 22, scope: !10545)
!10555 = !DILocation(line: 455, column: 1, scope: !10545)
!10556 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1059, file: !1059, line: 183, type: !1095, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10557)
!10557 = !{!10558, !10559, !10560, !10561, !10562}
!10558 = !DILocalVariable(name: "dev", arg: 1, scope: !10556, file: !1059, line: 183, type: !1086)
!10559 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10556, file: !1059, line: 184, type: !1097)
!10560 = !DILocalVariable(name: "pclken", scope: !10556, file: !1059, line: 186, type: !1049)
!10561 = !DILocalVariable(name: "reg", scope: !10556, file: !1059, line: 187, type: !1855)
!10562 = !DILocalVariable(name: "reg_val", scope: !10556, file: !1059, line: 188, type: !208)
!10563 = !DILocation(line: 0, scope: !10556)
!10564 = !DILocation(line: 192, column: 6, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10556, file: !1059, line: 192, column: 6)
!10566 = !DILocation(line: 192, column: 6, scope: !10556)
!10567 = !DILocation(line: 197, column: 52, scope: !10556)
!10568 = !DILocation(line: 197, column: 8, scope: !10556)
!10569 = !DILocation(line: 198, column: 12, scope: !10556)
!10570 = !DILocation(line: 199, column: 21, scope: !10556)
!10571 = !DILocation(line: 199, column: 10, scope: !10556)
!10572 = !DILocation(line: 200, column: 7, scope: !10556)
!10573 = !DILocation(line: 202, column: 2, scope: !10556)
!10574 = !DILocation(line: 203, column: 1, scope: !10556)
!10575 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1059, file: !1059, line: 205, type: !1095, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10576)
!10576 = !{!10577, !10578, !10579, !10580, !10581}
!10577 = !DILocalVariable(name: "dev", arg: 1, scope: !10575, file: !1059, line: 205, type: !1086)
!10578 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10575, file: !1059, line: 206, type: !1097)
!10579 = !DILocalVariable(name: "pclken", scope: !10575, file: !1059, line: 208, type: !1049)
!10580 = !DILocalVariable(name: "reg", scope: !10575, file: !1059, line: 209, type: !1855)
!10581 = !DILocalVariable(name: "reg_val", scope: !10575, file: !1059, line: 210, type: !208)
!10582 = !DILocation(line: 0, scope: !10575)
!10583 = !DILocation(line: 214, column: 6, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10575, file: !1059, line: 214, column: 6)
!10585 = !DILocation(line: 214, column: 6, scope: !10575)
!10586 = !DILocation(line: 219, column: 52, scope: !10575)
!10587 = !DILocation(line: 219, column: 8, scope: !10575)
!10588 = !DILocation(line: 220, column: 12, scope: !10575)
!10589 = !DILocation(line: 221, column: 22, scope: !10575)
!10590 = !DILocation(line: 221, column: 13, scope: !10575)
!10591 = !DILocation(line: 221, column: 10, scope: !10575)
!10592 = !DILocation(line: 222, column: 7, scope: !10575)
!10593 = !DILocation(line: 224, column: 2, scope: !10575)
!10594 = !DILocation(line: 225, column: 1, scope: !10575)
!10595 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1059, file: !1059, line: 262, type: !1111, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10596)
!10596 = !{!10597, !10598, !10599, !10600, !10601, !10602, !10603, !10604}
!10597 = !DILocalVariable(name: "clock", arg: 1, scope: !10595, file: !1059, line: 262, type: !1086)
!10598 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10595, file: !1059, line: 263, type: !1097)
!10599 = !DILocalVariable(name: "rate", arg: 3, scope: !10595, file: !1059, line: 264, type: !1055)
!10600 = !DILocalVariable(name: "pclken", scope: !10595, file: !1059, line: 266, type: !1049)
!10601 = !DILocalVariable(name: "ahb_clock", scope: !10595, file: !1059, line: 273, type: !208)
!10602 = !DILocalVariable(name: "apb1_clock", scope: !10595, file: !1059, line: 274, type: !208)
!10603 = !DILocalVariable(name: "apb2_clock", scope: !10595, file: !1059, line: 276, type: !208)
!10604 = !DILocalVariable(name: "ahb3_clock", scope: !10595, file: !1059, line: 286, type: !208)
!10605 = !DILocation(line: 0, scope: !10595)
!10606 = !DILocation(line: 273, column: 23, scope: !10595)
!10607 = !DILocation(line: 299, column: 18, scope: !10595)
!10608 = !DILocation(line: 299, column: 2, scope: !10595)
!10609 = !DILocation(line: 274, column: 24, scope: !10595)
!10610 = !DILocation(line: 319, column: 3, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10595, file: !1059, line: 299, column: 23)
!10612 = !DILocation(line: 276, column: 24, scope: !10595)
!10613 = !DILocation(line: 323, column: 3, scope: !10611)
!10614 = !DILocation(line: 346, column: 33, scope: !10611)
!10615 = !DILocation(line: 346, column: 11, scope: !10611)
!10616 = !DILocation(line: 350, column: 3, scope: !10611)
!10617 = !DILocation(line: 354, column: 33, scope: !10611)
!10618 = !DILocation(line: 354, column: 11, scope: !10611)
!10619 = !DILocation(line: 358, column: 3, scope: !10611)
!10620 = !DILocation(line: 374, column: 3, scope: !10611)
!10621 = !DILocation(line: 379, column: 3, scope: !10611)
!10622 = !DILocation(line: 0, scope: !10611)
!10623 = !DILocation(line: 396, column: 1, scope: !10595)
!10624 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1059, file: !1059, line: 227, type: !1127, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10625)
!10625 = !{!10626, !10627, !10628, !10629, !10630, !10631, !10632, !10633}
!10626 = !DILocalVariable(name: "dev", arg: 1, scope: !10624, file: !1059, line: 227, type: !1086)
!10627 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10624, file: !1059, line: 228, type: !1097)
!10628 = !DILocalVariable(name: "data", arg: 3, scope: !10624, file: !1059, line: 229, type: !124)
!10629 = !DILocalVariable(name: "pclken", scope: !10624, file: !1059, line: 233, type: !1049)
!10630 = !DILocalVariable(name: "reg", scope: !10624, file: !1059, line: 234, type: !1855)
!10631 = !DILocalVariable(name: "reg_val", scope: !10624, file: !1059, line: 235, type: !208)
!10632 = !DILocalVariable(name: "dt_val", scope: !10624, file: !1059, line: 235, type: !208)
!10633 = !DILocalVariable(name: "err", scope: !10624, file: !1059, line: 236, type: !125)
!10634 = !DILocation(line: 0, scope: !10624)
!10635 = !DILocation(line: 241, column: 30, scope: !10624)
!10636 = !DILocation(line: 241, column: 8, scope: !10624)
!10637 = !DILocation(line: 242, column: 10, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10624, file: !1059, line: 242, column: 6)
!10639 = !DILocation(line: 242, column: 6, scope: !10624)
!10640 = !DILocation(line: 247, column: 11, scope: !10624)
!10641 = !DILocation(line: 248, column: 6, scope: !10624)
!10642 = !DILocation(line: 247, column: 44, scope: !10624)
!10643 = !DILocation(line: 250, column: 6, scope: !10624)
!10644 = !DILocation(line: 249, column: 52, scope: !10624)
!10645 = !DILocation(line: 249, column: 8, scope: !10624)
!10646 = !DILocation(line: 251, column: 12, scope: !10624)
!10647 = !DILocation(line: 252, column: 10, scope: !10624)
!10648 = !DILocation(line: 253, column: 7, scope: !10624)
!10649 = !DILocation(line: 255, column: 2, scope: !10624)
!10650 = !DILocation(line: 260, column: 1, scope: !10624)
!10651 = distinct !DISubprogram(name: "enabled_clock", scope: !1059, file: !1059, line: 100, type: !10652, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10654)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{!125, !208}
!10654 = !{!10655, !10656}
!10655 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10651, file: !1059, line: 100, type: !208)
!10656 = !DILocalVariable(name: "r", scope: !10651, file: !1059, line: 102, type: !125)
!10657 = !DILocation(line: 0, scope: !10651)
!10658 = !DILocation(line: 104, column: 2, scope: !10651)
!10659 = !DILocation(line: 180, column: 2, scope: !10651)
!10660 = !DILocation(line: 181, column: 1, scope: !10651)
!10661 = distinct !DISubprogram(name: "get_bus_clock", scope: !1059, file: !1059, line: 79, type: !10662, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10664)
!10662 = !DISubroutineType(types: !10663)
!10663 = !{!208, !208, !208}
!10664 = !{!10665, !10666}
!10665 = !DILocalVariable(name: "clock", arg: 1, scope: !10661, file: !1059, line: 79, type: !208)
!10666 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10661, file: !1059, line: 79, type: !208)
!10667 = !DILocation(line: 0, scope: !10661)
!10668 = !DILocation(line: 81, column: 15, scope: !10661)
!10669 = !DILocation(line: 81, column: 2, scope: !10661)
!10670 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1059, file: !1059, line: 68, type: !10671, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10673)
!10671 = !DISubroutineType(types: !10672)
!10672 = !{!208, !208, !125, !125, !125}
!10673 = !{!10674, !10675, !10676, !10677}
!10674 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10670, file: !1059, line: 68, type: !208)
!10675 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10670, file: !1059, line: 69, type: !125)
!10676 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10670, file: !1059, line: 70, type: !125)
!10677 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10670, file: !1059, line: 71, type: !125)
!10678 = !DILocation(line: 0, scope: !10670)
!10679 = !DILocation(line: 75, column: 22, scope: !10670)
!10680 = !DILocation(line: 76, column: 13, scope: !10670)
!10681 = !DILocation(line: 75, column: 34, scope: !10670)
!10682 = !DILocation(line: 75, column: 2, scope: !10670)
!10683 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1059, file: !1059, line: 641, type: !1084, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10684)
!10684 = !{!10685, !10686, !10687}
!10685 = !DILocalVariable(name: "dev", arg: 1, scope: !10683, file: !1059, line: 641, type: !1086)
!10686 = !DILocalVariable(name: "old_flash_freq", scope: !10683, file: !1059, line: 664, type: !208)
!10687 = !DILocalVariable(name: "new_flash_freq", scope: !10683, file: !1059, line: 665, type: !208)
!10688 = !DILocation(line: 0, scope: !10683)
!10689 = !DILocation(line: 646, column: 2, scope: !10683)
!10690 = !DILocation(line: 667, column: 19, scope: !10683)
!10691 = !DILocation(line: 674, column: 21, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10683, file: !1059, line: 674, column: 6)
!10693 = !DILocation(line: 674, column: 6, scope: !10683)
!10694 = !DILocation(line: 675, column: 3, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10692, file: !1059, line: 674, column: 59)
!10696 = !DILocation(line: 676, column: 2, scope: !10695)
!10697 = !DILocation(line: 680, column: 2, scope: !10683)
!10698 = !DILocation(line: 683, column: 2, scope: !10683)
!10699 = !DILocation(line: 690, column: 3, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !1059, line: 689, column: 9)
!10701 = distinct !DILexicalBlock(scope: !10683, file: !1059, line: 685, column: 6)
!10702 = !DILocation(line: 695, column: 2, scope: !10683)
!10703 = !DILocation(line: 696, column: 2, scope: !10683)
!10704 = !DILocation(line: 696, column: 9, scope: !10683)
!10705 = !DILocation(line: 696, column: 34, scope: !10683)
!10706 = distinct !{!10706, !10703, !10707}
!10707 = !DILocation(line: 697, column: 2, scope: !10683)
!10708 = !DILocation(line: 720, column: 21, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10683, file: !1059, line: 720, column: 6)
!10710 = !DILocation(line: 720, column: 6, scope: !10683)
!10711 = !DILocation(line: 721, column: 3, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10709, file: !1059, line: 720, column: 60)
!10713 = !DILocation(line: 722, column: 2, scope: !10712)
!10714 = !DILocation(line: 725, column: 18, scope: !10683)
!10715 = !DILocation(line: 728, column: 2, scope: !10683)
!10716 = !DILocation(line: 730, column: 2, scope: !10683)
!10717 = !DILocation(line: 745, column: 2, scope: !10683)
!10718 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10719, file: !10719, line: 3275, type: !8526, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10719 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10720 = !DILocation(line: 3277, column: 21, scope: !10718)
!10721 = !DILocation(line: 3277, column: 3, scope: !10718)
!10722 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1059, file: !1059, line: 507, type: !3440, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10723 = !DILocation(line: 516, column: 4, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10725, file: !1059, line: 515, column: 10)
!10725 = distinct !DILexicalBlock(scope: !10726, file: !1059, line: 513, column: 7)
!10726 = distinct !DILexicalBlock(scope: !10727, file: !1059, line: 510, column: 37)
!10727 = distinct !DILexicalBlock(scope: !10722, file: !1059, line: 510, column: 6)
!10728 = !DILocation(line: 526, column: 3, scope: !10726)
!10729 = !DILocation(line: 527, column: 3, scope: !10726)
!10730 = !DILocation(line: 527, column: 10, scope: !10726)
!10731 = !DILocation(line: 527, column: 31, scope: !10726)
!10732 = distinct !{!10732, !10729, !10733}
!10733 = !DILocation(line: 529, column: 3, scope: !10726)
!10734 = !DILocation(line: 627, column: 1, scope: !10722)
!10735 = distinct !DISubprogram(name: "set_up_plls", scope: !1059, file: !1059, line: 448, type: !3440, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10736 = !DILocation(line: 460, column: 6, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10735, file: !1059, line: 460, column: 6)
!10738 = !DILocation(line: 460, column: 31, scope: !10737)
!10739 = !DILocation(line: 460, column: 6, scope: !10735)
!10740 = !DILocation(line: 461, column: 3, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10737, file: !1059, line: 460, column: 67)
!10742 = !DILocation(line: 462, column: 3, scope: !10741)
!10743 = !DILocation(line: 463, column: 2, scope: !10741)
!10744 = !DILocation(line: 464, column: 2, scope: !10735)
!10745 = !DILocation(line: 488, column: 2, scope: !10735)
!10746 = !DILocation(line: 492, column: 2, scope: !10735)
!10747 = !DILocation(line: 496, column: 2, scope: !10735)
!10748 = !DILocation(line: 499, column: 2, scope: !10735)
!10749 = !DILocation(line: 500, column: 2, scope: !10735)
!10750 = !DILocation(line: 500, column: 9, scope: !10735)
!10751 = !DILocation(line: 500, column: 30, scope: !10735)
!10752 = distinct !{!10752, !10749, !10753}
!10753 = !DILocation(line: 502, column: 2, scope: !10735)
!10754 = !DILocation(line: 505, column: 1, scope: !10735)
!10755 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10719, file: !10719, line: 3224, type: !8536, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10756)
!10756 = !{!10757}
!10757 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10755, file: !10719, line: 3224, type: !208)
!10758 = !DILocation(line: 0, scope: !10755)
!10759 = !DILocation(line: 3226, column: 3, scope: !10755)
!10760 = !DILocation(line: 3227, column: 1, scope: !10755)
!10761 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10719, file: !10719, line: 3188, type: !8536, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10762)
!10762 = !{!10763}
!10763 = !DILocalVariable(name: "Source", arg: 1, scope: !10761, file: !10719, line: 3188, type: !208)
!10764 = !DILocation(line: 0, scope: !10761)
!10765 = !DILocation(line: 3190, column: 3, scope: !10761)
!10766 = !DILocation(line: 3191, column: 1, scope: !10761)
!10767 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10719, file: !10719, line: 3204, type: !8526, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10768 = !DILocation(line: 3206, column: 21, scope: !10767)
!10769 = !DILocation(line: 3206, column: 3, scope: !10767)
!10770 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10719, file: !10719, line: 3240, type: !8536, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10771)
!10771 = !{!10772}
!10772 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10770, file: !10719, line: 3240, type: !208)
!10773 = !DILocation(line: 0, scope: !10770)
!10774 = !DILocation(line: 3242, column: 3, scope: !10770)
!10775 = !DILocation(line: 3243, column: 1, scope: !10770)
!10776 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10719, file: !10719, line: 3256, type: !8536, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10777)
!10777 = !{!10778}
!10778 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10776, file: !10719, line: 3256, type: !208)
!10779 = !DILocation(line: 0, scope: !10776)
!10780 = !DILocation(line: 3258, column: 3, scope: !10776)
!10781 = !DILocation(line: 3259, column: 1, scope: !10776)
!10782 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1059, file: !1059, line: 409, type: !3440, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10783 = !DILocation(line: 412, column: 6, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10782, file: !1059, line: 412, column: 6)
!10785 = !DILocation(line: 412, column: 27, scope: !10784)
!10786 = !DILocation(line: 412, column: 6, scope: !10782)
!10787 = !DILocation(line: 414, column: 3, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10784, file: !1059, line: 412, column: 33)
!10789 = !DILocation(line: 415, column: 3, scope: !10788)
!10790 = !DILocation(line: 415, column: 10, scope: !10788)
!10791 = !DILocation(line: 415, column: 31, scope: !10788)
!10792 = distinct !{!10792, !10789, !10793}
!10793 = !DILocation(line: 417, column: 3, scope: !10788)
!10794 = !DILocation(line: 421, column: 2, scope: !10782)
!10795 = !DILocation(line: 422, column: 2, scope: !10782)
!10796 = !DILocation(line: 422, column: 9, scope: !10782)
!10797 = !DILocation(line: 422, column: 34, scope: !10782)
!10798 = distinct !{!10798, !10795, !10799}
!10799 = !DILocation(line: 423, column: 2, scope: !10782)
!10800 = !DILocation(line: 424, column: 1, scope: !10782)
!10801 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10719, file: !10719, line: 4195, type: !3440, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10802 = !DILocation(line: 4197, column: 3, scope: !10801)
!10803 = !DILocation(line: 4198, column: 1, scope: !10801)
!10804 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10719, file: !10719, line: 4184, type: !3440, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10805 = !DILocation(line: 4186, column: 3, scope: !10804)
!10806 = !DILocation(line: 4187, column: 1, scope: !10804)
!10807 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10719, file: !10719, line: 4205, type: !8526, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10808 = !DILocation(line: 4207, column: 11, scope: !10807)
!10809 = !DILocation(line: 4207, column: 44, scope: !10807)
!10810 = !DILocation(line: 4207, column: 3, scope: !10807)
!10811 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10719, file: !10719, line: 3007, type: !8526, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10812 = !DILocation(line: 3009, column: 11, scope: !10811)
!10813 = !DILocation(line: 3009, column: 44, scope: !10811)
!10814 = !DILocation(line: 3009, column: 3, scope: !10811)
!10815 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10719, file: !10719, line: 2987, type: !3440, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10816 = !DILocation(line: 2989, column: 3, scope: !10815)
!10817 = !DILocation(line: 2990, column: 1, scope: !10815)
!10818 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10719, file: !10719, line: 2939, type: !3440, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10819 = !DILocation(line: 2941, column: 3, scope: !10818)
!10820 = !DILocation(line: 2942, column: 1, scope: !10818)
!10821 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10719, file: !10719, line: 2949, type: !3440, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10822 = !DILocation(line: 2951, column: 3, scope: !10821)
!10823 = !DILocation(line: 2952, column: 1, scope: !10821)
!10824 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10719, file: !10719, line: 2969, type: !8526, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !639)
!10825 = !DILocation(line: 2971, column: 11, scope: !10824)
!10826 = !DILocation(line: 2971, column: 44, scope: !10824)
!10827 = !DILocation(line: 2971, column: 3, scope: !10824)
!10828 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10829, file: !10829, line: 40, type: !8526, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !639)
!10829 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10830 = !DILocation(line: 45, column: 3, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !10829, line: 44, column: 44)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !10829, line: 44, column: 13)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !10829, line: 42, column: 6)
!10834 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10829, file: !10829, line: 56, type: !3440, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !639)
!10835 = !DILocation(line: 58, column: 2, scope: !10834)
!10836 = !DILocation(line: 62, column: 1, scope: !10834)
!10837 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10719, file: !10719, line: 4304, type: !10838, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{null, !208, !208, !208, !208}
!10840 = !{!10841, !10842, !10843, !10844}
!10841 = !DILocalVariable(name: "Source", arg: 1, scope: !10837, file: !10719, line: 4304, type: !208)
!10842 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10837, file: !10719, line: 4304, type: !208)
!10843 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10837, file: !10719, line: 4304, type: !208)
!10844 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10837, file: !10719, line: 4304, type: !208)
!10845 = !DILocation(line: 0, scope: !10837)
!10846 = !DILocation(line: 4306, column: 3, scope: !10837)
!10847 = !DILocation(line: 4308, column: 3, scope: !10837)
!10848 = !DILocation(line: 4312, column: 1, scope: !10837)
!10849 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10829, file: !10829, line: 69, type: !3440, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !639)
!10850 = !DILocation(line: 72, column: 2, scope: !10849)
!10851 = !DILocation(line: 73, column: 1, scope: !10849)
!10852 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10853, file: !10853, line: 1185, type: !8536, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !10854)
!10853 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10854 = !{!10855, !10856}
!10855 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10852, file: !10853, line: 1185, type: !208)
!10856 = !DILocalVariable(name: "tmpreg", scope: !10852, file: !10853, line: 1187, type: !423)
!10857 = !DILocation(line: 0, scope: !10852)
!10858 = !DILocation(line: 1187, column: 3, scope: !10852)
!10859 = !DILocation(line: 1187, column: 17, scope: !10852)
!10860 = !DILocation(line: 1188, column: 3, scope: !10852)
!10861 = !DILocation(line: 1190, column: 12, scope: !10852)
!10862 = !DILocation(line: 1190, column: 10, scope: !10852)
!10863 = !DILocation(line: 1191, column: 9, scope: !10852)
!10864 = !DILocation(line: 1192, column: 1, scope: !10852)
!10865 = distinct !DISubprogram(name: "uart_console_init", scope: !1188, file: !1188, line: 588, type: !1165, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10866)
!10866 = !{!10867}
!10867 = !DILocalVariable(name: "arg", arg: 1, scope: !10865, file: !1188, line: 588, type: !1143)
!10868 = !DILocation(line: 0, scope: !10865)
!10869 = !DILocation(line: 593, column: 7, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10865, file: !1188, line: 593, column: 6)
!10871 = !DILocation(line: 593, column: 6, scope: !10865)
!10872 = !DILocation(line: 597, column: 2, scope: !10865)
!10873 = !DILocation(line: 599, column: 2, scope: !10865)
!10874 = !DILocation(line: 600, column: 1, scope: !10865)
!10875 = distinct !DISubprogram(name: "device_is_ready", scope: !4345, file: !4345, line: 47, type: !10876, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10878)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!153, !1143}
!10878 = !{!10879}
!10879 = !DILocalVariable(name: "dev", arg: 1, scope: !10875, file: !4345, line: 47, type: !1143)
!10880 = !DILocation(line: 0, scope: !10875)
!10881 = !DILocation(line: 55, column: 2, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10875, file: !4345, line: 55, column: 2)
!10883 = !{i64 2155670833}
!10884 = !DILocation(line: 56, column: 9, scope: !10875)
!10885 = !DILocation(line: 56, column: 2, scope: !10875)
!10886 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1188, file: !1188, line: 573, type: !3440, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !639)
!10887 = !DILocation(line: 576, column: 2, scope: !10886)
!10888 = !DILocation(line: 579, column: 2, scope: !10886)
!10889 = !DILocation(line: 581, column: 1, scope: !10886)
!10890 = distinct !DISubprogram(name: "console_out", scope: !1188, file: !1188, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10891)
!10891 = !{!10892}
!10892 = !DILocalVariable(name: "c", arg: 1, scope: !10890, file: !1188, line: 77, type: !125)
!10893 = !DILocation(line: 0, scope: !10890)
!10894 = !DILocation(line: 89, column: 11, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10890, file: !1188, line: 89, column: 6)
!10896 = !DILocation(line: 89, column: 6, scope: !10890)
!10897 = !DILocation(line: 90, column: 3, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10895, file: !1188, line: 89, column: 17)
!10899 = !DILocation(line: 91, column: 2, scope: !10898)
!10900 = !DILocation(line: 92, column: 34, scope: !10890)
!10901 = !DILocation(line: 92, column: 2, scope: !10890)
!10902 = !DILocation(line: 94, column: 2, scope: !10890)
!10903 = distinct !DISubprogram(name: "uart_poll_out", scope: !10904, file: !10904, line: 95, type: !1161, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10905)
!10904 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/crypto")
!10905 = !{!10906, !10907}
!10906 = !DILocalVariable(name: "dev", arg: 1, scope: !10903, file: !10904, line: 95, type: !1143)
!10907 = !DILocalVariable(name: "out_char", arg: 2, scope: !10903, file: !10904, line: 95, type: !151)
!10908 = !DILocation(line: 0, scope: !10903)
!10909 = !DILocation(line: 105, column: 2, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10903, file: !10904, line: 105, column: 2)
!10911 = !{i64 2155754224}
!10912 = !DILocation(line: 106, column: 2, scope: !10903)
!10913 = !DILocation(line: 107, column: 1, scope: !10903)
!10914 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1137, file: !1137, line: 574, type: !1161, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10915)
!10915 = !{!10916, !10917, !10918}
!10916 = !DILocalVariable(name: "dev", arg: 1, scope: !10914, file: !1137, line: 574, type: !1143)
!10917 = !DILocalVariable(name: "out_char", arg: 2, scope: !10914, file: !1137, line: 575, type: !151)
!10918 = !DILocalVariable(name: "api", scope: !10914, file: !1137, line: 577, type: !1134)
!10919 = !DILocation(line: 0, scope: !10914)
!10920 = !DILocation(line: 578, column: 40, scope: !10914)
!10921 = !DILocation(line: 580, column: 7, scope: !10914)
!10922 = !DILocation(line: 580, column: 2, scope: !10914)
!10923 = !DILocation(line: 581, column: 1, scope: !10914)
!10924 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10876, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10925)
!10925 = !{!10926}
!10926 = !DILocalVariable(name: "dev", arg: 1, scope: !10924, file: !137, line: 730, type: !1143)
!10927 = !DILocation(line: 0, scope: !10924)
!10928 = !DILocation(line: 732, column: 9, scope: !10924)
!10929 = !DILocation(line: 732, column: 2, scope: !10924)
!10930 = distinct !DISubprogram(name: "uart_register_input", scope: !1188, file: !1188, line: 560, type: !10931, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1131, retainedNodes: !10976)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{null, !10933, !10933, !10973}
!10933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10934, size: 32)
!10934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !624, line: 2208, size: 128, elements: !10935)
!10935 = !{!10936}
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10934, file: !624, line: 2209, baseType: !10937, size: 128)
!10937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !624, line: 1709, size: 128, elements: !10938)
!10938 = !{!10939, !10952, !10954}
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10937, file: !624, line: 1710, baseType: !10940, size: 64)
!10940 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10941, line: 46, baseType: !10942)
!10941 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10941, line: 41, size: 64, elements: !10943)
!10943 = !{!10944, !10951}
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10942, file: !10941, line: 42, baseType: !10945, size: 32)
!10945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10946, size: 32)
!10946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10941, line: 39, baseType: !10947)
!10947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10941, line: 35, size: 32, elements: !10948)
!10948 = !{!10949}
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10947, file: !10941, line: 36, baseType: !10950, size: 32)
!10950 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10941, line: 32, baseType: !208)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10942, file: !10941, line: 43, baseType: !10945, size: 32, offset: 32)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10937, file: !624, line: 1711, baseType: !10953, offset: 64)
!10953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10937, file: !624, line: 1712, baseType: !10955, size: 64, offset: 64)
!10955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !10956)
!10956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !10957)
!10957 = !{!10958}
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10956, file: !567, line: 232, baseType: !10959, size: 64)
!10959 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !10960)
!10960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !10961)
!10961 = !{!10962, !10968}
!10962 = !DIDerivedType(tag: DW_TAG_member, scope: !10960, file: !541, line: 38, baseType: !10963, size: 32)
!10963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10960, file: !541, line: 38, size: 32, elements: !10964)
!10964 = !{!10965, !10967}
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10963, file: !541, line: 39, baseType: !10966, size: 32)
!10966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10960, size: 32)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10963, file: !541, line: 40, baseType: !10966, size: 32)
!10968 = !DIDerivedType(tag: DW_TAG_member, scope: !10960, file: !541, line: 42, baseType: !10969, size: 32, offset: 32)
!10969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10960, file: !541, line: 42, size: 32, elements: !10970)
!10970 = !{!10971, !10972}
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10969, file: !541, line: 43, baseType: !10966, size: 32)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10969, file: !541, line: 44, baseType: !10966, size: 32)
!10973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10974, size: 32)
!10974 = !DISubroutineType(types: !10975)
!10975 = !{!150, !393, !150}
!10976 = !{!10977, !10978, !10979}
!10977 = !DILocalVariable(name: "avail", arg: 1, scope: !10930, file: !1188, line: 560, type: !10933)
!10978 = !DILocalVariable(name: "lines", arg: 2, scope: !10930, file: !1188, line: 560, type: !10933)
!10979 = !DILocalVariable(name: "completion", arg: 3, scope: !10930, file: !1188, line: 561, type: !10973)
!10980 = !DILocation(line: 0, scope: !10930)
!10981 = !DILocation(line: 566, column: 1, scope: !10930)
!10982 = distinct !DISubprogram(name: "tc_shim_init", scope: !1203, file: !1203, line: 305, type: !1227, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !10983)
!10983 = !{!10984, !10985}
!10984 = !DILocalVariable(name: "dev", arg: 1, scope: !10982, file: !1203, line: 305, type: !1229)
!10985 = !DILocalVariable(name: "i", scope: !10982, file: !1203, line: 307, type: !125)
!10986 = !DILocation(line: 0, scope: !10982)
!10987 = !DILocation(line: 311, column: 29, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !1203, line: 310, column: 43)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !1203, line: 310, column: 2)
!10990 = distinct !DILexicalBlock(scope: !10982, file: !1203, line: 310, column: 2)
!10991 = !DILocation(line: 314, column: 2, scope: !10982)
!10992 = distinct !DISubprogram(name: "tc_query_caps", scope: !1203, file: !1203, line: 289, type: !1227, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !10993)
!10993 = !{!10994}
!10994 = !DILocalVariable(name: "dev", arg: 1, scope: !10992, file: !1203, line: 289, type: !1229)
!10995 = !DILocation(line: 0, scope: !10992)
!10996 = !DILocation(line: 291, column: 2, scope: !10992)
!10997 = distinct !DISubprogram(name: "tc_session_setup", scope: !1203, file: !1203, line: 193, type: !1240, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !10998)
!10998 = !{!10999, !11000, !11001, !11002, !11003, !11004, !11006}
!10999 = !DILocalVariable(name: "dev", arg: 1, scope: !10997, file: !1203, line: 193, type: !1229)
!11000 = !DILocalVariable(name: "ctx", arg: 2, scope: !10997, file: !1203, line: 193, type: !1242)
!11001 = !DILocalVariable(name: "algo", arg: 3, scope: !10997, file: !1203, line: 194, type: !39)
!11002 = !DILocalVariable(name: "mode", arg: 4, scope: !10997, file: !1203, line: 194, type: !30)
!11003 = !DILocalVariable(name: "op_type", arg: 5, scope: !10997, file: !1203, line: 195, type: !42)
!11004 = !DILocalVariable(name: "data", scope: !10997, file: !1203, line: 197, type: !11005)
!11005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!11006 = !DILocalVariable(name: "idx", scope: !10997, file: !1203, line: 198, type: !125)
!11007 = !DILocation(line: 0, scope: !10997)
!11008 = !DILocation(line: 203, column: 11, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10997, file: !1203, line: 203, column: 6)
!11010 = !DILocation(line: 203, column: 6, scope: !10997)
!11011 = !DILocation(line: 204, column: 3, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11013, file: !1203, line: 204, column: 3)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !1203, line: 204, column: 3)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !1203, line: 204, column: 3)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !1203, line: 204, column: 3)
!11016 = distinct !DILexicalBlock(scope: !11009, file: !1203, line: 203, column: 38)
!11017 = !DILocation(line: 205, column: 3, scope: !11016)
!11018 = !DILocation(line: 211, column: 13, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10997, file: !1203, line: 211, column: 6)
!11020 = !DILocation(line: 211, column: 19, scope: !11019)
!11021 = !DILocation(line: 211, column: 6, scope: !10997)
!11022 = !DILocation(line: 212, column: 3, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1203, line: 212, column: 3)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !1203, line: 212, column: 3)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !1203, line: 212, column: 3)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !1203, line: 212, column: 3)
!11027 = distinct !DILexicalBlock(scope: !11019, file: !1203, line: 211, column: 36)
!11028 = !DILocation(line: 213, column: 3, scope: !11027)
!11029 = !DILocation(line: 216, column: 11, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !10997, file: !1203, line: 216, column: 6)
!11031 = !DILocation(line: 216, column: 18, scope: !11030)
!11032 = !DILocation(line: 216, column: 6, scope: !10997)
!11033 = !DILocation(line: 218, column: 3, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !1203, line: 218, column: 3)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !1203, line: 218, column: 3)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !1203, line: 218, column: 3)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !1203, line: 218, column: 3)
!11038 = distinct !DILexicalBlock(scope: !11030, file: !1203, line: 216, column: 38)
!11039 = !DILocation(line: 219, column: 3, scope: !11038)
!11040 = !DILocation(line: 222, column: 14, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !10997, file: !1203, line: 222, column: 6)
!11042 = !DILocation(line: 222, column: 6, scope: !10997)
!11043 = !DILocation(line: 223, column: 3, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11041, file: !1203, line: 222, column: 43)
!11045 = !DILocation(line: 225, column: 13, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11044, file: !1203, line: 223, column: 17)
!11047 = !DILocation(line: 225, column: 29, scope: !11046)
!11048 = !DILocation(line: 226, column: 4, scope: !11046)
!11049 = !DILocation(line: 228, column: 34, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11046, file: !1203, line: 228, column: 8)
!11051 = !DILocation(line: 228, column: 42, scope: !11050)
!11052 = !DILocation(line: 228, column: 8, scope: !11046)
!11053 = !DILocation(line: 229, column: 5, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !1203, line: 229, column: 5)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !1203, line: 229, column: 5)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1203, line: 229, column: 5)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1203, line: 229, column: 5)
!11058 = distinct !DILexicalBlock(scope: !11050, file: !1203, line: 228, column: 50)
!11059 = !DILocation(line: 231, column: 5, scope: !11058)
!11060 = !DILocation(line: 233, column: 13, scope: !11046)
!11061 = !DILocation(line: 233, column: 29, scope: !11046)
!11062 = !DILocation(line: 234, column: 4, scope: !11046)
!11063 = !DILocation(line: 236, column: 13, scope: !11046)
!11064 = !DILocation(line: 236, column: 29, scope: !11046)
!11065 = !DILocation(line: 237, column: 4, scope: !11046)
!11066 = !DILocation(line: 239, column: 4, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !1203, line: 239, column: 4)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !1203, line: 239, column: 4)
!11069 = distinct !DILexicalBlock(scope: !11070, file: !1203, line: 239, column: 4)
!11070 = distinct !DILexicalBlock(scope: !11046, file: !1203, line: 239, column: 4)
!11071 = !DILocation(line: 240, column: 4, scope: !11046)
!11072 = !DILocation(line: 243, column: 3, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11041, file: !1203, line: 242, column: 9)
!11074 = !DILocation(line: 245, column: 13, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11073, file: !1203, line: 243, column: 17)
!11076 = !DILocation(line: 245, column: 29, scope: !11075)
!11077 = !DILocation(line: 246, column: 4, scope: !11075)
!11078 = !DILocation(line: 249, column: 34, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !1203, line: 249, column: 8)
!11080 = !DILocation(line: 249, column: 42, scope: !11079)
!11081 = !DILocation(line: 249, column: 8, scope: !11075)
!11082 = !DILocation(line: 250, column: 5, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !1203, line: 250, column: 5)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !1203, line: 250, column: 5)
!11085 = distinct !DILexicalBlock(scope: !11086, file: !1203, line: 250, column: 5)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !1203, line: 250, column: 5)
!11087 = distinct !DILexicalBlock(scope: !11079, file: !1203, line: 249, column: 50)
!11088 = !DILocation(line: 252, column: 5, scope: !11087)
!11089 = !DILocation(line: 254, column: 13, scope: !11075)
!11090 = !DILocation(line: 254, column: 29, scope: !11075)
!11091 = !DILocation(line: 255, column: 4, scope: !11075)
!11092 = !DILocation(line: 257, column: 13, scope: !11075)
!11093 = !DILocation(line: 257, column: 29, scope: !11075)
!11094 = !DILocation(line: 258, column: 4, scope: !11075)
!11095 = !DILocation(line: 260, column: 4, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !1203, line: 260, column: 4)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !1203, line: 260, column: 4)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !1203, line: 260, column: 4)
!11099 = distinct !DILexicalBlock(scope: !11075, file: !1203, line: 260, column: 4)
!11100 = !DILocation(line: 261, column: 4, scope: !11075)
!11101 = !DILocation(line: 266, column: 11, scope: !10997)
!11102 = !DILocation(line: 266, column: 23, scope: !10997)
!11103 = !DILocation(line: 268, column: 8, scope: !10997)
!11104 = !DILocation(line: 269, column: 10, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !10997, file: !1203, line: 269, column: 6)
!11106 = !DILocation(line: 269, column: 6, scope: !10997)
!11107 = !DILocation(line: 270, column: 3, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !1203, line: 270, column: 3)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !1203, line: 270, column: 3)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !1203, line: 270, column: 3)
!11111 = distinct !DILexicalBlock(scope: !11112, file: !1203, line: 270, column: 3)
!11112 = distinct !DILexicalBlock(scope: !11105, file: !1203, line: 269, column: 33)
!11113 = !DILocation(line: 271, column: 3, scope: !11112)
!11114 = !DILocation(line: 274, column: 10, scope: !10997)
!11115 = !DILocation(line: 276, column: 39, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !10997, file: !1203, line: 276, column: 6)
!11117 = !DILocation(line: 276, column: 61, scope: !11116)
!11118 = !DILocation(line: 276, column: 6, scope: !11116)
!11119 = !DILocation(line: 277, column: 5, scope: !11116)
!11120 = !DILocation(line: 276, column: 6, scope: !10997)
!11121 = !DILocation(line: 278, column: 3, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !1203, line: 278, column: 3)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !1203, line: 278, column: 3)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !1203, line: 278, column: 3)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !1203, line: 278, column: 3)
!11126 = distinct !DILexicalBlock(scope: !11116, file: !1203, line: 277, column: 24)
!11127 = !DILocation(line: 279, column: 24, scope: !11126)
!11128 = !DILocation(line: 279, column: 31, scope: !11126)
!11129 = !DILocation(line: 281, column: 3, scope: !11126)
!11130 = !DILocation(line: 284, column: 7, scope: !10997)
!11131 = !DILocation(line: 284, column: 23, scope: !10997)
!11132 = !DILocation(line: 286, column: 2, scope: !10997)
!11133 = !DILocation(line: 287, column: 1, scope: !10997)
!11134 = distinct !DISubprogram(name: "tc_session_free", scope: !1203, file: !1203, line: 294, type: !1316, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11135)
!11135 = !{!11136, !11137, !11138}
!11136 = !DILocalVariable(name: "dev", arg: 1, scope: !11134, file: !1203, line: 294, type: !1229)
!11137 = !DILocalVariable(name: "sessn", arg: 2, scope: !11134, file: !1203, line: 294, type: !1242)
!11138 = !DILocalVariable(name: "data", scope: !11134, file: !1203, line: 296, type: !11005)
!11139 = !DILocation(line: 0, scope: !11134)
!11140 = !DILocation(line: 296, column: 43, scope: !11134)
!11141 = !DILocation(line: 299, column: 8, scope: !11134)
!11142 = !DILocation(line: 300, column: 8, scope: !11134)
!11143 = !DILocation(line: 300, column: 15, scope: !11134)
!11144 = !DILocation(line: 302, column: 2, scope: !11134)
!11145 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1203, file: !1203, line: 28, type: !1269, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11146)
!11146 = !{!11147, !11148, !11149, !11150}
!11147 = !DILocalVariable(name: "ctx", arg: 1, scope: !11145, file: !1203, line: 28, type: !1242)
!11148 = !DILocalVariable(name: "op", arg: 2, scope: !11145, file: !1203, line: 28, type: !1257)
!11149 = !DILocalVariable(name: "iv", arg: 3, scope: !11145, file: !1203, line: 29, type: !184)
!11150 = !DILocalVariable(name: "data", scope: !11145, file: !1203, line: 31, type: !11005)
!11151 = !DILocation(line: 0, scope: !11145)
!11152 = !DILocation(line: 31, column: 41, scope: !11145)
!11153 = !DILocation(line: 33, column: 30, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11145, file: !1203, line: 33, column: 6)
!11155 = !DILocation(line: 34, column: 9, scope: !11154)
!11156 = !DILocation(line: 35, column: 9, scope: !11154)
!11157 = !DILocation(line: 35, column: 21, scope: !11154)
!11158 = !DILocation(line: 37, column: 12, scope: !11154)
!11159 = !DILocation(line: 33, column: 6, scope: !11154)
!11160 = !DILocation(line: 37, column: 25, scope: !11154)
!11161 = !DILocation(line: 33, column: 6, scope: !11145)
!11162 = !DILocation(line: 38, column: 3, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1203, line: 38, column: 3)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !1203, line: 38, column: 3)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !1203, line: 38, column: 3)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1203, line: 38, column: 3)
!11167 = distinct !DILexicalBlock(scope: !11154, file: !1203, line: 37, column: 44)
!11168 = !DILocation(line: 39, column: 3, scope: !11167)
!11169 = !DILocation(line: 43, column: 20, scope: !11145)
!11170 = !DILocation(line: 43, column: 6, scope: !11145)
!11171 = !DILocation(line: 43, column: 14, scope: !11145)
!11172 = !DILocation(line: 45, column: 2, scope: !11145)
!11173 = !DILocation(line: 46, column: 1, scope: !11145)
!11174 = distinct !DISubprogram(name: "do_ctr_op", scope: !1203, file: !1203, line: 76, type: !1269, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11175)
!11175 = !{!11176, !11177, !11178, !11179, !11180, !11181}
!11176 = !DILocalVariable(name: "ctx", arg: 1, scope: !11174, file: !1203, line: 76, type: !1242)
!11177 = !DILocalVariable(name: "op", arg: 2, scope: !11174, file: !1203, line: 76, type: !1257)
!11178 = !DILocalVariable(name: "iv", arg: 3, scope: !11174, file: !1203, line: 77, type: !184)
!11179 = !DILocalVariable(name: "data", scope: !11174, file: !1203, line: 79, type: !11005)
!11180 = !DILocalVariable(name: "ctr", scope: !11174, file: !1203, line: 80, type: !311)
!11181 = !DILocalVariable(name: "ivlen", scope: !11174, file: !1203, line: 81, type: !125)
!11182 = !DILocation(line: 0, scope: !11174)
!11183 = !DILocation(line: 79, column: 41, scope: !11174)
!11184 = !DILocation(line: 80, column: 2, scope: !11174)
!11185 = !DILocation(line: 80, column: 10, scope: !11174)
!11186 = !DILocation(line: 81, column: 19, scope: !11174)
!11187 = !DILocation(line: 81, column: 14, scope: !11174)
!11188 = !DILocation(line: 81, column: 55, scope: !11174)
!11189 = !DILocation(line: 81, column: 63, scope: !11174)
!11190 = !DILocation(line: 81, column: 26, scope: !11174)
!11191 = !DILocation(line: 86, column: 2, scope: !11174)
!11192 = !DILocation(line: 88, column: 22, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11174, file: !1203, line: 88, column: 6)
!11194 = !DILocation(line: 88, column: 35, scope: !11193)
!11195 = !DILocation(line: 88, column: 52, scope: !11193)
!11196 = !DILocation(line: 89, column: 8, scope: !11193)
!11197 = !DILocation(line: 90, column: 11, scope: !11193)
!11198 = !DILocation(line: 88, column: 6, scope: !11193)
!11199 = !DILocation(line: 90, column: 24, scope: !11193)
!11200 = !DILocation(line: 88, column: 6, scope: !11174)
!11201 = !DILocation(line: 91, column: 3, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !1203, line: 91, column: 3)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !1203, line: 91, column: 3)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !1203, line: 91, column: 3)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !1203, line: 91, column: 3)
!11206 = distinct !DILexicalBlock(scope: !11193, file: !1203, line: 90, column: 43)
!11207 = !DILocation(line: 92, column: 3, scope: !11206)
!11208 = !DILocation(line: 96, column: 20, scope: !11174)
!11209 = !DILocation(line: 96, column: 6, scope: !11174)
!11210 = !DILocation(line: 96, column: 14, scope: !11174)
!11211 = !DILocation(line: 98, column: 2, scope: !11174)
!11212 = !DILocation(line: 99, column: 1, scope: !11174)
!11213 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1203, file: !1203, line: 101, type: !1276, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11214)
!11214 = !{!11215, !11216, !11217, !11218, !11226, !11227, !11229}
!11215 = !DILocalVariable(name: "ctx", arg: 1, scope: !11213, file: !1203, line: 101, type: !1242)
!11216 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11213, file: !1203, line: 102, type: !1278)
!11217 = !DILocalVariable(name: "nonce", arg: 3, scope: !11213, file: !1203, line: 102, type: !184)
!11218 = !DILocalVariable(name: "ccm", scope: !11213, file: !1203, line: 104, type: !11219)
!11219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2888, line: 91, size: 96, elements: !11220)
!11220 = !{!11221, !11224, !11225}
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11219, file: !2888, line: 92, baseType: !11222, size: 32)
!11222 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !11223)
!11223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11219, file: !2888, line: 93, baseType: !184, size: 32, offset: 32)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11219, file: !2888, line: 94, baseType: !32, size: 32, offset: 64)
!11226 = !DILocalVariable(name: "data", scope: !11213, file: !1203, line: 105, type: !11005)
!11227 = !DILocalVariable(name: "ccm_param", scope: !11213, file: !1203, line: 106, type: !11228)
!11228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!11229 = !DILocalVariable(name: "op", scope: !11213, file: !1203, line: 107, type: !1257)
!11230 = !DILocation(line: 0, scope: !11213)
!11231 = !DILocation(line: 104, column: 2, scope: !11213)
!11232 = !DILocation(line: 104, column: 28, scope: !11213)
!11233 = !DILocation(line: 105, column: 41, scope: !11213)
!11234 = !DILocation(line: 106, column: 39, scope: !11213)
!11235 = !DILocation(line: 106, column: 51, scope: !11213)
!11236 = !DILocation(line: 107, column: 35, scope: !11213)
!11237 = !DILocation(line: 109, column: 33, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11213, file: !1203, line: 109, column: 6)
!11239 = !DILocation(line: 110, column: 15, scope: !11238)
!11240 = !DILocation(line: 110, column: 4, scope: !11238)
!11241 = !DILocation(line: 111, column: 15, scope: !11238)
!11242 = !DILocation(line: 111, column: 4, scope: !11238)
!11243 = !DILocation(line: 109, column: 6, scope: !11238)
!11244 = !DILocation(line: 111, column: 24, scope: !11238)
!11245 = !DILocation(line: 109, column: 6, scope: !11213)
!11246 = !DILocation(line: 112, column: 3, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !1203, line: 112, column: 3)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !1203, line: 112, column: 3)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !1203, line: 112, column: 3)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !1203, line: 112, column: 3)
!11251 = distinct !DILexicalBlock(scope: !11238, file: !1203, line: 111, column: 43)
!11252 = !DILocation(line: 113, column: 3, scope: !11251)
!11253 = !DILocation(line: 116, column: 39, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11213, file: !1203, line: 116, column: 6)
!11255 = !DILocation(line: 116, column: 52, scope: !11254)
!11256 = !DILocation(line: 117, column: 16, scope: !11254)
!11257 = !DILocation(line: 117, column: 29, scope: !11254)
!11258 = !DILocation(line: 117, column: 41, scope: !11254)
!11259 = !DILocation(line: 118, column: 11, scope: !11254)
!11260 = !DILocation(line: 116, column: 6, scope: !11254)
!11261 = !DILocation(line: 118, column: 25, scope: !11254)
!11262 = !DILocation(line: 116, column: 6, scope: !11213)
!11263 = !DILocation(line: 119, column: 3, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !1203, line: 119, column: 3)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !1203, line: 119, column: 3)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !1203, line: 119, column: 3)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !1203, line: 119, column: 3)
!11268 = distinct !DILexicalBlock(scope: !11254, file: !1203, line: 118, column: 44)
!11269 = !DILocation(line: 120, column: 3, scope: !11268)
!11270 = !DILocation(line: 128, column: 15, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11213, file: !1203, line: 128, column: 6)
!11272 = !DILocation(line: 128, column: 6, scope: !11271)
!11273 = !DILocation(line: 128, column: 6, scope: !11213)
!11274 = !DILocation(line: 129, column: 28, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11271, file: !1203, line: 128, column: 20)
!11276 = !DILocation(line: 129, column: 42, scope: !11275)
!11277 = !DILocation(line: 129, column: 36, scope: !11275)
!11278 = !DILocation(line: 129, column: 54, scope: !11275)
!11279 = !DILocation(line: 129, column: 3, scope: !11275)
!11280 = !DILocation(line: 130, column: 2, scope: !11275)
!11281 = !DILocation(line: 136, column: 20, scope: !11213)
!11282 = !DILocation(line: 136, column: 33, scope: !11213)
!11283 = !DILocation(line: 136, column: 27, scope: !11213)
!11284 = !DILocation(line: 136, column: 6, scope: !11213)
!11285 = !DILocation(line: 136, column: 14, scope: !11213)
!11286 = !DILocation(line: 138, column: 2, scope: !11213)
!11287 = !DILocation(line: 139, column: 1, scope: !11213)
!11288 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1203, file: !1203, line: 48, type: !1269, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11289)
!11289 = !{!11290, !11291, !11292, !11293}
!11290 = !DILocalVariable(name: "ctx", arg: 1, scope: !11288, file: !1203, line: 48, type: !1242)
!11291 = !DILocalVariable(name: "op", arg: 2, scope: !11288, file: !1203, line: 48, type: !1257)
!11292 = !DILocalVariable(name: "iv", arg: 3, scope: !11288, file: !1203, line: 49, type: !184)
!11293 = !DILocalVariable(name: "data", scope: !11288, file: !1203, line: 51, type: !11005)
!11294 = !DILocation(line: 0, scope: !11288)
!11295 = !DILocation(line: 56, column: 16, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11288, file: !1203, line: 56, column: 6)
!11297 = !DILocation(line: 56, column: 9, scope: !11296)
!11298 = !DILocation(line: 56, column: 6, scope: !11288)
!11299 = !DILocation(line: 57, column: 3, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !1203, line: 57, column: 3)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !1203, line: 57, column: 3)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !1203, line: 57, column: 3)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !1203, line: 57, column: 3)
!11304 = distinct !DILexicalBlock(scope: !11296, file: !1203, line: 56, column: 24)
!11305 = !DILocation(line: 58, column: 3, scope: !11304)
!11306 = !DILocation(line: 51, column: 41, scope: !11288)
!11307 = !DILocation(line: 61, column: 30, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11288, file: !1203, line: 61, column: 6)
!11309 = !DILocation(line: 62, column: 8, scope: !11308)
!11310 = !DILocation(line: 63, column: 15, scope: !11308)
!11311 = !DILocation(line: 64, column: 8, scope: !11308)
!11312 = !DILocation(line: 64, column: 15, scope: !11308)
!11313 = !DILocation(line: 65, column: 23, scope: !11308)
!11314 = !DILocation(line: 61, column: 6, scope: !11308)
!11315 = !DILocation(line: 65, column: 36, scope: !11308)
!11316 = !DILocation(line: 61, column: 6, scope: !11288)
!11317 = !DILocation(line: 66, column: 3, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !1203, line: 66, column: 3)
!11319 = distinct !DILexicalBlock(scope: !11320, file: !1203, line: 66, column: 3)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !1203, line: 66, column: 3)
!11321 = distinct !DILexicalBlock(scope: !11322, file: !1203, line: 66, column: 3)
!11322 = distinct !DILexicalBlock(scope: !11308, file: !1203, line: 65, column: 55)
!11323 = !DILocation(line: 67, column: 3, scope: !11322)
!11324 = !DILocation(line: 71, column: 20, scope: !11288)
!11325 = !DILocation(line: 71, column: 6, scope: !11288)
!11326 = !DILocation(line: 71, column: 14, scope: !11288)
!11327 = !DILocation(line: 73, column: 2, scope: !11288)
!11328 = !DILocation(line: 74, column: 1, scope: !11288)
!11329 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1203, file: !1203, line: 141, type: !1276, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11330)
!11330 = !{!11331, !11332, !11333, !11334, !11335, !11336, !11337}
!11331 = !DILocalVariable(name: "ctx", arg: 1, scope: !11329, file: !1203, line: 141, type: !1242)
!11332 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11329, file: !1203, line: 142, type: !1278)
!11333 = !DILocalVariable(name: "nonce", arg: 3, scope: !11329, file: !1203, line: 142, type: !184)
!11334 = !DILocalVariable(name: "ccm", scope: !11329, file: !1203, line: 144, type: !11219)
!11335 = !DILocalVariable(name: "data", scope: !11329, file: !1203, line: 145, type: !11005)
!11336 = !DILocalVariable(name: "ccm_param", scope: !11329, file: !1203, line: 146, type: !11228)
!11337 = !DILocalVariable(name: "op", scope: !11329, file: !1203, line: 147, type: !1257)
!11338 = !DILocation(line: 0, scope: !11329)
!11339 = !DILocation(line: 144, column: 2, scope: !11329)
!11340 = !DILocation(line: 144, column: 28, scope: !11329)
!11341 = !DILocation(line: 145, column: 41, scope: !11329)
!11342 = !DILocation(line: 146, column: 39, scope: !11329)
!11343 = !DILocation(line: 146, column: 51, scope: !11329)
!11344 = !DILocation(line: 147, column: 35, scope: !11329)
!11345 = !DILocation(line: 149, column: 33, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11329, file: !1203, line: 149, column: 6)
!11347 = !DILocation(line: 150, column: 17, scope: !11346)
!11348 = !DILocation(line: 150, column: 6, scope: !11346)
!11349 = !DILocation(line: 151, column: 17, scope: !11346)
!11350 = !DILocation(line: 151, column: 6, scope: !11346)
!11351 = !DILocation(line: 149, column: 6, scope: !11346)
!11352 = !DILocation(line: 151, column: 26, scope: !11346)
!11353 = !DILocation(line: 149, column: 6, scope: !11329)
!11354 = !DILocation(line: 152, column: 3, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !1203, line: 152, column: 3)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !1203, line: 152, column: 3)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !1203, line: 152, column: 3)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !1203, line: 152, column: 3)
!11359 = distinct !DILexicalBlock(scope: !11346, file: !1203, line: 151, column: 45)
!11360 = !DILocation(line: 153, column: 3, scope: !11359)
!11361 = !DILocation(line: 160, column: 15, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11329, file: !1203, line: 160, column: 6)
!11363 = !DILocation(line: 160, column: 26, scope: !11362)
!11364 = !DILocation(line: 160, column: 39, scope: !11362)
!11365 = !DILocation(line: 160, column: 33, scope: !11362)
!11366 = !DILocation(line: 160, column: 19, scope: !11362)
!11367 = !DILocation(line: 160, column: 6, scope: !11329)
!11368 = !DILocation(line: 161, column: 3, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !1203, line: 161, column: 3)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !1203, line: 161, column: 3)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !1203, line: 161, column: 3)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !1203, line: 161, column: 3)
!11373 = distinct !DILexicalBlock(scope: !11362, file: !1203, line: 160, column: 47)
!11374 = !DILocation(line: 162, column: 3, scope: !11373)
!11375 = !DILocation(line: 165, column: 41, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11329, file: !1203, line: 165, column: 6)
!11377 = !DILocation(line: 165, column: 54, scope: !11376)
!11378 = !DILocation(line: 166, column: 18, scope: !11376)
!11379 = !DILocation(line: 166, column: 31, scope: !11376)
!11380 = !DILocation(line: 168, column: 33, scope: !11376)
!11381 = !DILocation(line: 168, column: 22, scope: !11376)
!11382 = !DILocation(line: 168, column: 20, scope: !11376)
!11383 = !DILocation(line: 165, column: 6, scope: !11376)
!11384 = !DILocation(line: 169, column: 15, scope: !11376)
!11385 = !DILocation(line: 165, column: 6, scope: !11329)
!11386 = !DILocation(line: 170, column: 3, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !1203, line: 170, column: 3)
!11388 = distinct !DILexicalBlock(scope: !11389, file: !1203, line: 170, column: 3)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !1203, line: 170, column: 3)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !1203, line: 170, column: 3)
!11391 = distinct !DILexicalBlock(scope: !11376, file: !1203, line: 169, column: 34)
!11392 = !DILocation(line: 171, column: 3, scope: !11391)
!11393 = !DILocation(line: 174, column: 20, scope: !11329)
!11394 = !DILocation(line: 174, column: 40, scope: !11329)
!11395 = !DILocation(line: 174, column: 29, scope: !11329)
!11396 = !DILocation(line: 174, column: 27, scope: !11329)
!11397 = !DILocation(line: 174, column: 6, scope: !11329)
!11398 = !DILocation(line: 174, column: 14, scope: !11329)
!11399 = !DILocation(line: 176, column: 2, scope: !11329)
!11400 = !DILocation(line: 177, column: 1, scope: !11329)
!11401 = distinct !DISubprogram(name: "get_unused_session", scope: !1203, file: !1203, line: 179, type: !9753, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1197, retainedNodes: !11402)
!11402 = !{!11403}
!11403 = !DILocalVariable(name: "i", scope: !11401, file: !1203, line: 181, type: !125)
!11404 = !DILocation(line: 0, scope: !11401)
!11405 = !DILocation(line: 183, column: 2, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11401, file: !1203, line: 183, column: 2)
!11407 = !DILocation(line: 184, column: 26, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !1203, line: 184, column: 7)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !1203, line: 183, column: 43)
!11410 = distinct !DILexicalBlock(scope: !11406, file: !1203, line: 183, column: 2)
!11411 = !DILocation(line: 184, column: 33, scope: !11408)
!11412 = !DILocation(line: 184, column: 7, scope: !11409)
!11413 = !DILocation(line: 185, column: 30, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11408, file: !1203, line: 184, column: 39)
!11415 = !DILocation(line: 186, column: 4, scope: !11414)
!11416 = distinct !{!11416, !11405, !11417}
!11417 = !DILocation(line: 188, column: 2, scope: !11406)
!11418 = !DILocation(line: 190, column: 2, scope: !11401)
!11419 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1548, file: !1548, line: 523, type: !1406, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11420)
!11420 = !{!11421, !11422, !11423, !11424, !11425}
!11421 = !DILocalVariable(name: "dev", arg: 1, scope: !11419, file: !1548, line: 523, type: !1408)
!11422 = !DILocalVariable(name: "pin", arg: 2, scope: !11419, file: !1548, line: 524, type: !1423)
!11423 = !DILocalVariable(name: "flags", arg: 3, scope: !11419, file: !1548, line: 524, type: !1424)
!11424 = !DILocalVariable(name: "err", scope: !11419, file: !1548, line: 526, type: !125)
!11425 = !DILocalVariable(name: "pincfg", scope: !11419, file: !1548, line: 527, type: !125)
!11426 = !DILocation(line: 0, scope: !11419)
!11427 = !DILocation(line: 527, column: 2, scope: !11419)
!11428 = !DILocation(line: 532, column: 8, scope: !11419)
!11429 = !DILocation(line: 533, column: 10, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11419, file: !1548, line: 533, column: 6)
!11431 = !DILocation(line: 533, column: 6, scope: !11419)
!11432 = !DILocation(line: 543, column: 13, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11419, file: !1548, line: 543, column: 6)
!11434 = !DILocation(line: 543, column: 28, scope: !11433)
!11435 = !DILocation(line: 543, column: 6, scope: !11419)
!11436 = !DILocation(line: 544, column: 14, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !1548, line: 544, column: 7)
!11438 = distinct !DILexicalBlock(scope: !11433, file: !1548, line: 543, column: 34)
!11439 = !DILocation(line: 544, column: 39, scope: !11437)
!11440 = !DILocation(line: 544, column: 7, scope: !11438)
!11441 = !DILocation(line: 545, column: 38, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11437, file: !1548, line: 544, column: 45)
!11443 = !DILocation(line: 545, column: 4, scope: !11442)
!11444 = !DILocation(line: 546, column: 3, scope: !11442)
!11445 = !DILocation(line: 546, column: 21, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11437, file: !1548, line: 546, column: 14)
!11447 = !DILocation(line: 546, column: 45, scope: !11446)
!11448 = !DILocation(line: 546, column: 14, scope: !11437)
!11449 = !DILocation(line: 547, column: 40, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11446, file: !1548, line: 546, column: 51)
!11451 = !DILocation(line: 547, column: 4, scope: !11450)
!11452 = !DILocation(line: 548, column: 3, scope: !11450)
!11453 = !DILocation(line: 551, column: 32, scope: !11419)
!11454 = !DILocation(line: 551, column: 37, scope: !11419)
!11455 = !DILocation(line: 551, column: 2, scope: !11419)
!11456 = !DILocation(line: 554, column: 6, scope: !11419)
!11457 = !DILocation(line: 562, column: 1, scope: !11419)
!11458 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1548, file: !1548, line: 410, type: !11459, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11461)
!11459 = !DISubroutineType(types: !11460)
!11460 = !{!125, !1408, !1055}
!11461 = !{!11462, !11463, !11464, !11466}
!11462 = !DILocalVariable(name: "dev", arg: 1, scope: !11458, file: !1548, line: 410, type: !1408)
!11463 = !DILocalVariable(name: "value", arg: 2, scope: !11458, file: !1548, line: 410, type: !1055)
!11464 = !DILocalVariable(name: "cfg", scope: !11458, file: !1548, line: 412, type: !11465)
!11465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!11466 = !DILocalVariable(name: "gpio", scope: !11458, file: !1548, line: 413, type: !1481)
!11467 = !DILocation(line: 0, scope: !11458)
!11468 = !DILocation(line: 412, column: 45, scope: !11458)
!11469 = !DILocation(line: 413, column: 44, scope: !11458)
!11470 = !DILocation(line: 415, column: 11, scope: !11458)
!11471 = !DILocation(line: 415, column: 9, scope: !11458)
!11472 = !DILocation(line: 417, column: 2, scope: !11458)
!11473 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1548, file: !1548, line: 420, type: !1433, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11474)
!11474 = !{!11475, !11476, !11477, !11478, !11479, !11480}
!11475 = !DILocalVariable(name: "dev", arg: 1, scope: !11473, file: !1548, line: 420, type: !1408)
!11476 = !DILocalVariable(name: "mask", arg: 2, scope: !11473, file: !1548, line: 421, type: !1435)
!11477 = !DILocalVariable(name: "value", arg: 3, scope: !11473, file: !1548, line: 422, type: !1430)
!11478 = !DILocalVariable(name: "cfg", scope: !11473, file: !1548, line: 424, type: !11465)
!11479 = !DILocalVariable(name: "gpio", scope: !11473, file: !1548, line: 425, type: !1481)
!11480 = !DILocalVariable(name: "port_value", scope: !11473, file: !1548, line: 426, type: !208)
!11481 = !DILocation(line: 0, scope: !11473)
!11482 = !DILocation(line: 424, column: 45, scope: !11473)
!11483 = !DILocation(line: 425, column: 44, scope: !11473)
!11484 = !DILocation(line: 430, column: 15, scope: !11473)
!11485 = !DILocation(line: 431, column: 46, scope: !11473)
!11486 = !DILocation(line: 431, column: 44, scope: !11473)
!11487 = !DILocation(line: 431, column: 61, scope: !11473)
!11488 = !DILocation(line: 431, column: 53, scope: !11473)
!11489 = !DILocation(line: 431, column: 2, scope: !11473)
!11490 = !DILocation(line: 435, column: 2, scope: !11473)
!11491 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1548, file: !1548, line: 438, type: !1438, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11492)
!11492 = !{!11493, !11494, !11495, !11496}
!11493 = !DILocalVariable(name: "dev", arg: 1, scope: !11491, file: !1548, line: 438, type: !1408)
!11494 = !DILocalVariable(name: "pins", arg: 2, scope: !11491, file: !1548, line: 439, type: !1435)
!11495 = !DILocalVariable(name: "cfg", scope: !11491, file: !1548, line: 441, type: !11465)
!11496 = !DILocalVariable(name: "gpio", scope: !11491, file: !1548, line: 442, type: !1481)
!11497 = !DILocation(line: 0, scope: !11491)
!11498 = !DILocation(line: 441, column: 45, scope: !11491)
!11499 = !DILocation(line: 442, column: 44, scope: !11491)
!11500 = !DILocation(line: 448, column: 2, scope: !11491)
!11501 = !DILocation(line: 450, column: 2, scope: !11491)
!11502 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1548, file: !1548, line: 453, type: !1438, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11503)
!11503 = !{!11504, !11505, !11506, !11507}
!11504 = !DILocalVariable(name: "dev", arg: 1, scope: !11502, file: !1548, line: 453, type: !1408)
!11505 = !DILocalVariable(name: "pins", arg: 2, scope: !11502, file: !1548, line: 454, type: !1435)
!11506 = !DILocalVariable(name: "cfg", scope: !11502, file: !1548, line: 456, type: !11465)
!11507 = !DILocalVariable(name: "gpio", scope: !11502, file: !1548, line: 457, type: !1481)
!11508 = !DILocation(line: 0, scope: !11502)
!11509 = !DILocation(line: 456, column: 45, scope: !11502)
!11510 = !DILocation(line: 457, column: 44, scope: !11502)
!11511 = !DILocation(line: 467, column: 2, scope: !11502)
!11512 = !DILocation(line: 470, column: 2, scope: !11502)
!11513 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1548, file: !1548, line: 473, type: !1438, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11514)
!11514 = !{!11515, !11516, !11517, !11518}
!11515 = !DILocalVariable(name: "dev", arg: 1, scope: !11513, file: !1548, line: 473, type: !1408)
!11516 = !DILocalVariable(name: "pins", arg: 2, scope: !11513, file: !1548, line: 474, type: !1435)
!11517 = !DILocalVariable(name: "cfg", scope: !11513, file: !1548, line: 476, type: !11465)
!11518 = !DILocalVariable(name: "gpio", scope: !11513, file: !1548, line: 477, type: !1481)
!11519 = !DILocation(line: 0, scope: !11513)
!11520 = !DILocation(line: 476, column: 45, scope: !11513)
!11521 = !DILocation(line: 477, column: 44, scope: !11513)
!11522 = !DILocation(line: 484, column: 2, scope: !11513)
!11523 = !DILocation(line: 487, column: 2, scope: !11513)
!11524 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1548, file: !1548, line: 594, type: !1444, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11525)
!11525 = !{!11526, !11527, !11528, !11529, !11530, !11531, !11533, !11534, !11535}
!11526 = !DILocalVariable(name: "dev", arg: 1, scope: !11524, file: !1548, line: 594, type: !1408)
!11527 = !DILocalVariable(name: "pin", arg: 2, scope: !11524, file: !1548, line: 595, type: !1423)
!11528 = !DILocalVariable(name: "mode", arg: 3, scope: !11524, file: !1548, line: 596, type: !1382)
!11529 = !DILocalVariable(name: "trig", arg: 4, scope: !11524, file: !1548, line: 597, type: !1388)
!11530 = !DILocalVariable(name: "cfg", scope: !11524, file: !1548, line: 599, type: !11465)
!11531 = !DILocalVariable(name: "data", scope: !11524, file: !1548, line: 600, type: !11532)
!11532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!11533 = !DILocalVariable(name: "edge", scope: !11524, file: !1548, line: 601, type: !125)
!11534 = !DILocalVariable(name: "err", scope: !11524, file: !1548, line: 602, type: !125)
!11535 = !DILabel(scope: !11524, name: "exit", file: !1548, line: 643)
!11536 = !DILocation(line: 0, scope: !11524)
!11537 = !DILocation(line: 599, column: 45, scope: !11524)
!11538 = !DILocation(line: 604, column: 6, scope: !11524)
!11539 = !DILocation(line: 605, column: 34, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !1548, line: 605, column: 7)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !1548, line: 604, column: 38)
!11542 = distinct !DILexicalBlock(scope: !11524, file: !1548, line: 604, column: 6)
!11543 = !DILocation(line: 605, column: 7, scope: !11540)
!11544 = !DILocation(line: 605, column: 47, scope: !11540)
!11545 = !DILocation(line: 605, column: 39, scope: !11540)
!11546 = !DILocation(line: 605, column: 7, scope: !11541)
!11547 = !DILocation(line: 606, column: 4, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11540, file: !1548, line: 605, column: 53)
!11549 = !DILocation(line: 607, column: 4, scope: !11548)
!11550 = !DILocation(line: 608, column: 4, scope: !11548)
!11551 = !DILocation(line: 609, column: 3, scope: !11548)
!11552 = !DILocation(line: 600, column: 38, scope: !11524)
!11553 = !DILocation(line: 620, column: 30, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11524, file: !1548, line: 620, column: 6)
!11555 = !DILocation(line: 620, column: 6, scope: !11554)
!11556 = !DILocation(line: 620, column: 57, scope: !11554)
!11557 = !DILocation(line: 620, column: 6, scope: !11524)
!11558 = !DILocation(line: 625, column: 29, scope: !11524)
!11559 = !DILocation(line: 625, column: 2, scope: !11524)
!11560 = !DILocation(line: 627, column: 2, scope: !11524)
!11561 = !DILocation(line: 630, column: 3, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11524, file: !1548, line: 627, column: 16)
!11563 = !DILocation(line: 633, column: 3, scope: !11562)
!11564 = !DILocation(line: 636, column: 3, scope: !11562)
!11565 = !DILocation(line: 639, column: 2, scope: !11524)
!11566 = !DILocation(line: 641, column: 2, scope: !11524)
!11567 = !DILocation(line: 643, column: 1, scope: !11524)
!11568 = !DILocation(line: 644, column: 2, scope: !11524)
!11569 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1548, file: !1548, line: 647, type: !1448, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11570)
!11570 = !{!11571, !11572, !11573, !11574}
!11571 = !DILocalVariable(name: "dev", arg: 1, scope: !11569, file: !1548, line: 647, type: !1408)
!11572 = !DILocalVariable(name: "callback", arg: 2, scope: !11569, file: !1548, line: 648, type: !1450)
!11573 = !DILocalVariable(name: "set", arg: 3, scope: !11569, file: !1548, line: 649, type: !153)
!11574 = !DILocalVariable(name: "data", scope: !11569, file: !1548, line: 651, type: !11532)
!11575 = !DILocation(line: 0, scope: !11569)
!11576 = !DILocation(line: 651, column: 38, scope: !11569)
!11577 = !DILocation(line: 653, column: 37, scope: !11569)
!11578 = !DILocation(line: 653, column: 9, scope: !11569)
!11579 = !DILocation(line: 653, column: 2, scope: !11569)
!11580 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11581, file: !11581, line: 38, type: !11582, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11585)
!11581 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11582 = !DISubroutineType(types: !11583)
!11583 = !{!125, !11584, !1450, !153}
!11584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!11585 = !{!11586, !11587, !11588}
!11586 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11580, file: !11581, line: 38, type: !11584)
!11587 = !DILocalVariable(name: "callback", arg: 2, scope: !11580, file: !11581, line: 39, type: !1450)
!11588 = !DILocalVariable(name: "set", arg: 3, scope: !11580, file: !11581, line: 40, type: !153)
!11589 = !DILocation(line: 0, scope: !11580)
!11590 = !DILocation(line: 45, column: 7, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11580, file: !11581, line: 45, column: 6)
!11592 = !DILocation(line: 45, column: 6, scope: !11580)
!11593 = !DILocation(line: 46, column: 56, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11595, file: !11581, line: 46, column: 7)
!11595 = distinct !DILexicalBlock(scope: !11591, file: !11581, line: 45, column: 38)
!11596 = !DILocation(line: 46, column: 8, scope: !11594)
!11597 = !DILocation(line: 46, column: 7, scope: !11595)
!11598 = !DILocation(line: 51, column: 13, scope: !11591)
!11599 = !DILocation(line: 56, column: 43, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11601, file: !11581, line: 55, column: 11)
!11601 = distinct !DILexicalBlock(scope: !11580, file: !11581, line: 55, column: 6)
!11602 = !DILocation(line: 56, column: 3, scope: !11600)
!11603 = !DILocation(line: 57, column: 2, scope: !11600)
!11604 = !DILocation(line: 60, column: 1, scope: !11580)
!11605 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1455, file: !1455, line: 261, type: !11606, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11608)
!11606 = !DISubroutineType(types: !11607)
!11607 = !{!153, !11584}
!11608 = !{!11609}
!11609 = !DILocalVariable(name: "list", arg: 1, scope: !11605, file: !1455, line: 261, type: !11584)
!11610 = !DILocation(line: 0, scope: !11605)
!11611 = !DILocation(line: 261, column: 1, scope: !11605)
!11612 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1455, file: !1455, line: 417, type: !11613, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11615)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{!153, !11584, !1639}
!11615 = !{!11616, !11617, !11618, !11619}
!11616 = !DILocalVariable(name: "list", arg: 1, scope: !11612, file: !1455, line: 417, type: !11584)
!11617 = !DILocalVariable(name: "node", arg: 2, scope: !11612, file: !1455, line: 417, type: !1639)
!11618 = !DILocalVariable(name: "prev", scope: !11612, file: !1455, line: 417, type: !1639)
!11619 = !DILocalVariable(name: "test", scope: !11612, file: !1455, line: 417, type: !1639)
!11620 = !DILocation(line: 0, scope: !11612)
!11621 = !DILocation(line: 417, column: 1, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11612, file: !1455, line: 417, column: 1)
!11623 = !DILocation(line: 417, column: 1, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11622, file: !1455, line: 417, column: 1)
!11625 = !DILocation(line: 417, column: 1, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !1455, line: 417, column: 1)
!11627 = distinct !DILexicalBlock(scope: !11624, file: !1455, line: 417, column: 1)
!11628 = !DILocation(line: 417, column: 1, scope: !11627)
!11629 = distinct !{!11629, !11621, !11621}
!11630 = !DILocation(line: 417, column: 1, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11626, file: !1455, line: 417, column: 1)
!11632 = !DILocation(line: 417, column: 1, scope: !11612)
!11633 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1455, file: !1455, line: 298, type: !11634, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11636)
!11634 = !DISubroutineType(types: !11635)
!11635 = !{null, !11584, !1639}
!11636 = !{!11637, !11638}
!11637 = !DILocalVariable(name: "list", arg: 1, scope: !11633, file: !1455, line: 298, type: !11584)
!11638 = !DILocalVariable(name: "node", arg: 2, scope: !11633, file: !1455, line: 298, type: !1639)
!11639 = !DILocation(line: 0, scope: !11633)
!11640 = !DILocation(line: 298, column: 1, scope: !11633)
!11641 = !DILocation(line: 298, column: 1, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11633, file: !1455, line: 298, column: 1)
!11643 = !DILocation(line: 298, column: 1, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11642, file: !1455, line: 298, column: 1)
!11645 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1455, file: !1455, line: 231, type: !11646, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11648)
!11646 = !DISubroutineType(types: !11647)
!11647 = !{!1639, !11584}
!11648 = !{!11649}
!11649 = !DILocalVariable(name: "list", arg: 1, scope: !11645, file: !1455, line: 231, type: !11584)
!11650 = !DILocation(line: 0, scope: !11645)
!11651 = !DILocation(line: 233, column: 15, scope: !11645)
!11652 = !DILocation(line: 233, column: 2, scope: !11645)
!11653 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1455, file: !1455, line: 209, type: !11654, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11656)
!11654 = !DISubroutineType(types: !11655)
!11655 = !{null, !1639, !1639}
!11656 = !{!11657, !11658}
!11657 = !DILocalVariable(name: "parent", arg: 1, scope: !11653, file: !1455, line: 209, type: !1639)
!11658 = !DILocalVariable(name: "child", arg: 2, scope: !11653, file: !1455, line: 209, type: !1639)
!11659 = !DILocation(line: 0, scope: !11653)
!11660 = !DILocation(line: 211, column: 10, scope: !11653)
!11661 = !DILocation(line: 211, column: 15, scope: !11653)
!11662 = !DILocation(line: 212, column: 1, scope: !11653)
!11663 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1455, file: !1455, line: 214, type: !11634, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11664)
!11664 = !{!11665, !11666}
!11665 = !DILocalVariable(name: "list", arg: 1, scope: !11663, file: !1455, line: 214, type: !11584)
!11666 = !DILocalVariable(name: "node", arg: 2, scope: !11663, file: !1455, line: 214, type: !1639)
!11667 = !DILocation(line: 0, scope: !11663)
!11668 = !DILocation(line: 216, column: 8, scope: !11663)
!11669 = !DILocation(line: 216, column: 13, scope: !11663)
!11670 = !DILocation(line: 217, column: 1, scope: !11663)
!11671 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1455, file: !1455, line: 243, type: !11646, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11672)
!11672 = !{!11673}
!11673 = !DILocalVariable(name: "list", arg: 1, scope: !11671, file: !1455, line: 243, type: !11584)
!11674 = !DILocation(line: 0, scope: !11671)
!11675 = !DILocation(line: 245, column: 15, scope: !11671)
!11676 = !DILocation(line: 245, column: 2, scope: !11671)
!11677 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1455, file: !1455, line: 219, type: !11634, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11678)
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "list", arg: 1, scope: !11677, file: !1455, line: 219, type: !11584)
!11680 = !DILocalVariable(name: "node", arg: 2, scope: !11677, file: !1455, line: 219, type: !1639)
!11681 = !DILocation(line: 0, scope: !11677)
!11682 = !DILocation(line: 221, column: 8, scope: !11677)
!11683 = !DILocation(line: 221, column: 13, scope: !11677)
!11684 = !DILocation(line: 222, column: 1, scope: !11677)
!11685 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1455, file: !1455, line: 401, type: !11686, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11688)
!11686 = !DISubroutineType(types: !11687)
!11687 = !{null, !11584, !1639, !1639}
!11688 = !{!11689, !11690, !11691}
!11689 = !DILocalVariable(name: "list", arg: 1, scope: !11685, file: !1455, line: 401, type: !11584)
!11690 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11685, file: !1455, line: 401, type: !1639)
!11691 = !DILocalVariable(name: "node", arg: 3, scope: !11685, file: !1455, line: 401, type: !1639)
!11692 = !DILocation(line: 0, scope: !11685)
!11693 = !DILocation(line: 401, column: 1, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11685, file: !1455, line: 401, column: 1)
!11695 = !DILocation(line: 0, scope: !11694)
!11696 = !DILocation(line: 401, column: 1, scope: !11685)
!11697 = !DILocation(line: 401, column: 1, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11694, file: !1455, line: 401, column: 1)
!11699 = !DILocation(line: 401, column: 1, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11698, file: !1455, line: 401, column: 1)
!11701 = !DILocation(line: 401, column: 1, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11700, file: !1455, line: 401, column: 1)
!11703 = !DILocation(line: 401, column: 1, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11694, file: !1455, line: 401, column: 1)
!11705 = !DILocation(line: 401, column: 1, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11704, file: !1455, line: 401, column: 1)
!11707 = !DILocation(line: 401, column: 1, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11706, file: !1455, line: 401, column: 1)
!11709 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1455, file: !1455, line: 285, type: !11710, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11712)
!11710 = !DISubroutineType(types: !11711)
!11711 = !{!1639, !1639}
!11712 = !{!11713}
!11713 = !DILocalVariable(name: "node", arg: 1, scope: !11709, file: !1455, line: 285, type: !1639)
!11714 = !DILocation(line: 0, scope: !11709)
!11715 = !DILocation(line: 285, column: 1, scope: !11709)
!11716 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1455, file: !1455, line: 274, type: !11710, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11717)
!11717 = !{!11718}
!11718 = !DILocalVariable(name: "node", arg: 1, scope: !11716, file: !1455, line: 274, type: !1639)
!11719 = !DILocation(line: 0, scope: !11716)
!11720 = !DILocation(line: 274, column: 1, scope: !11716)
!11721 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1455, file: !1455, line: 204, type: !11710, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11722)
!11722 = !{!11723}
!11723 = !DILocalVariable(name: "node", arg: 1, scope: !11721, file: !1455, line: 204, type: !1639)
!11724 = !DILocation(line: 0, scope: !11721)
!11725 = !DILocation(line: 206, column: 15, scope: !11721)
!11726 = !DILocation(line: 206, column: 2, scope: !11721)
!11727 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1548, file: !1548, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11728)
!11728 = !{!11729, !11730, !11731}
!11729 = !DILocalVariable(name: "pin", arg: 1, scope: !11727, file: !1548, line: 342, type: !125)
!11730 = !DILocalVariable(name: "line", scope: !11727, file: !1548, line: 344, type: !208)
!11731 = !DILocalVariable(name: "port", scope: !11727, file: !1548, line: 345, type: !125)
!11732 = !DILocation(line: 0, scope: !11727)
!11733 = !DILocation(line: 344, column: 18, scope: !11727)
!11734 = !{i32 983040, i32 0}
!11735 = !DILocation(line: 356, column: 9, scope: !11727)
!11736 = !DILocation(line: 370, column: 2, scope: !11727)
!11737 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1548, file: !1548, line: 37, type: !904, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11738)
!11738 = !{!11739, !11740, !11741}
!11739 = !DILocalVariable(name: "line", arg: 1, scope: !11737, file: !1548, line: 37, type: !125)
!11740 = !DILocalVariable(name: "arg", arg: 2, scope: !11737, file: !1548, line: 37, type: !124)
!11741 = !DILocalVariable(name: "data", scope: !11737, file: !1548, line: 39, type: !11532)
!11742 = !DILocation(line: 0, scope: !11737)
!11743 = !DILocation(line: 41, column: 29, scope: !11737)
!11744 = !DILocation(line: 41, column: 39, scope: !11737)
!11745 = !DILocation(line: 41, column: 44, scope: !11737)
!11746 = !DILocation(line: 41, column: 2, scope: !11737)
!11747 = !DILocation(line: 42, column: 1, scope: !11737)
!11748 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1548, file: !1548, line: 376, type: !11749, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11751)
!11749 = !DISubroutineType(types: !11750)
!11750 = !{!125, !125, !125}
!11751 = !{!11752, !11753, !11754, !11756, !11757}
!11752 = !DILocalVariable(name: "port", arg: 1, scope: !11748, file: !1548, line: 376, type: !125)
!11753 = !DILocalVariable(name: "pin", arg: 2, scope: !11748, file: !1548, line: 376, type: !125)
!11754 = !DILocalVariable(name: "clk", scope: !11748, file: !1548, line: 386, type: !11755)
!11755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1408)
!11756 = !DILocalVariable(name: "pclken", scope: !11748, file: !1548, line: 387, type: !1694)
!11757 = !DILocalVariable(name: "ret", scope: !11748, file: !1548, line: 396, type: !125)
!11758 = !DILocation(line: 0, scope: !11748)
!11759 = !DILocation(line: 387, column: 2, scope: !11748)
!11760 = !DILocation(line: 387, column: 22, scope: !11748)
!11761 = !DILocation(line: 399, column: 8, scope: !11748)
!11762 = !DILocation(line: 400, column: 10, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11748, file: !1548, line: 400, column: 6)
!11764 = !DILocation(line: 400, column: 6, scope: !11748)
!11765 = !DILocation(line: 405, column: 2, scope: !11748)
!11766 = !DILocation(line: 407, column: 2, scope: !11748)
!11767 = !DILocation(line: 408, column: 1, scope: !11748)
!11768 = distinct !DISubprogram(name: "clock_control_on", scope: !1005, file: !1005, line: 123, type: !1513, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11769)
!11769 = !{!11770, !11771, !11772}
!11770 = !DILocalVariable(name: "dev", arg: 1, scope: !11768, file: !1005, line: 123, type: !1408)
!11771 = !DILocalVariable(name: "sys", arg: 2, scope: !11768, file: !1005, line: 124, type: !1097)
!11772 = !DILocalVariable(name: "api", scope: !11768, file: !1005, line: 126, type: !1506)
!11773 = !DILocation(line: 0, scope: !11768)
!11774 = !DILocation(line: 127, column: 49, scope: !11768)
!11775 = !DILocation(line: 129, column: 14, scope: !11768)
!11776 = !DILocation(line: 129, column: 9, scope: !11768)
!11777 = !DILocation(line: 129, column: 2, scope: !11768)
!11778 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1548, file: !1548, line: 311, type: !10476, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11779)
!11779 = !{!11780, !11781, !11782}
!11780 = !DILocalVariable(name: "port", arg: 1, scope: !11778, file: !1548, line: 311, type: !125)
!11781 = !DILocalVariable(name: "pin", arg: 2, scope: !11778, file: !1548, line: 311, type: !125)
!11782 = !DILocalVariable(name: "line", scope: !11778, file: !1548, line: 313, type: !208)
!11783 = !DILocation(line: 0, scope: !11778)
!11784 = !DILocation(line: 313, column: 18, scope: !11778)
!11785 = !DILocation(line: 337, column: 2, scope: !11778)
!11786 = !DILocation(line: 340, column: 1, scope: !11778)
!11787 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1548, file: !1548, line: 295, type: !11788, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11790)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{!208, !125}
!11790 = !{!11791}
!11791 = !DILocalVariable(name: "pin", arg: 1, scope: !11787, file: !1548, line: 295, type: !125)
!11792 = !DILocation(line: 0, scope: !11787)
!11793 = !DILocation(line: 307, column: 46, scope: !11787)
!11794 = !DILocation(line: 307, column: 27, scope: !11787)
!11795 = !DILocation(line: 307, column: 32, scope: !11787)
!11796 = !DILocation(line: 307, column: 14, scope: !11787)
!11797 = !DILocation(line: 307, column: 39, scope: !11787)
!11798 = !DILocation(line: 307, column: 2, scope: !11787)
!11799 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6999, file: !6999, line: 671, type: !11800, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11802)
!11800 = !DISubroutineType(types: !11801)
!11801 = !{null, !208, !208}
!11802 = !{!11803, !11804}
!11803 = !DILocalVariable(name: "Port", arg: 1, scope: !11799, file: !6999, line: 671, type: !208)
!11804 = !DILocalVariable(name: "Line", arg: 2, scope: !11799, file: !6999, line: 671, type: !208)
!11805 = !DILocation(line: 0, scope: !11799)
!11806 = !DILocation(line: 673, column: 3, scope: !11799)
!11807 = !DILocalVariable(name: "value", arg: 1, scope: !11808, file: !8445, line: 373, type: !208)
!11808 = distinct !DISubprogram(name: "__RBIT", scope: !8445, file: !8445, line: 373, type: !9691, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11809)
!11809 = !{!11807, !11810}
!11810 = !DILocalVariable(name: "result", scope: !11808, file: !8445, line: 375, type: !208)
!11811 = !DILocation(line: 0, scope: !11808, inlinedAt: !11812)
!11812 = distinct !DILocation(line: 673, column: 3, scope: !11799)
!11813 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !11812)
!11814 = !{i64 4116889}
!11815 = !DILocalVariable(name: "value", arg: 1, scope: !11816, file: !8445, line: 403, type: !208)
!11816 = distinct !DISubprogram(name: "__CLZ", scope: !8445, file: !8445, line: 403, type: !11817, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11819)
!11817 = !DISubroutineType(types: !11818)
!11818 = !{!150, !208}
!11819 = !{!11815}
!11820 = !DILocation(line: 0, scope: !11816, inlinedAt: !11821)
!11821 = distinct !DILocation(line: 673, column: 3, scope: !11799)
!11822 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !11821)
!11823 = !DILocation(line: 674, column: 1, scope: !11799)
!11824 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11581, file: !11581, line: 69, type: !11825, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11827)
!11825 = !DISubroutineType(types: !11826)
!11826 = !{null, !11584, !1408, !208}
!11827 = !{!11828, !11829, !11830, !11831, !11832}
!11828 = !DILocalVariable(name: "list", arg: 1, scope: !11824, file: !11581, line: 69, type: !11584)
!11829 = !DILocalVariable(name: "port", arg: 2, scope: !11824, file: !11581, line: 70, type: !1408)
!11830 = !DILocalVariable(name: "pins", arg: 3, scope: !11824, file: !11581, line: 71, type: !208)
!11831 = !DILocalVariable(name: "cb", scope: !11824, file: !11581, line: 73, type: !1450)
!11832 = !DILocalVariable(name: "tmp", scope: !11824, file: !11581, line: 73, type: !1450)
!11833 = !DILocation(line: 0, scope: !11824)
!11834 = !DILocation(line: 75, column: 2, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11824, file: !11581, line: 75, column: 2)
!11836 = !DILocation(line: 0, scope: !11835)
!11837 = !DILocation(line: 76, column: 11, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11839, file: !11581, line: 76, column: 7)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !11581, line: 75, column: 57)
!11840 = distinct !DILexicalBlock(scope: !11835, file: !11581, line: 75, column: 2)
!11841 = !DILocation(line: 76, column: 20, scope: !11838)
!11842 = !DILocation(line: 76, column: 7, scope: !11839)
!11843 = !DILocation(line: 78, column: 8, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11838, file: !11581, line: 76, column: 28)
!11845 = !DILocation(line: 78, column: 4, scope: !11844)
!11846 = !DILocation(line: 79, column: 3, scope: !11844)
!11847 = !DILocation(line: 75, column: 2, scope: !11840)
!11848 = !DILocation(line: 81, column: 1, scope: !11824)
!11849 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6999, file: !6999, line: 710, type: !9691, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11850)
!11850 = !{!11851}
!11851 = !DILocalVariable(name: "Line", arg: 1, scope: !11849, file: !6999, line: 710, type: !208)
!11852 = !DILocation(line: 0, scope: !11849)
!11853 = !DILocation(line: 712, column: 21, scope: !11849)
!11854 = !DILocation(line: 0, scope: !11808, inlinedAt: !11855)
!11855 = distinct !DILocation(line: 712, column: 76, scope: !11849)
!11856 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !11855)
!11857 = !DILocation(line: 0, scope: !11816, inlinedAt: !11858)
!11858 = distinct !DILocation(line: 712, column: 76, scope: !11849)
!11859 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !11858)
!11860 = !DILocation(line: 712, column: 73, scope: !11849)
!11861 = !DILocation(line: 712, column: 3, scope: !11849)
!11862 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11863, file: !11863, line: 910, type: !11864, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11866)
!11863 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11864 = !DISubroutineType(types: !11865)
!11865 = !{null, !1481, !208}
!11866 = !{!11867, !11868}
!11867 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11862, file: !11863, line: 910, type: !1481)
!11868 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11862, file: !11863, line: 910, type: !208)
!11869 = !DILocation(line: 0, scope: !11862)
!11870 = !DILocation(line: 912, column: 3, scope: !11862)
!11871 = !DILocation(line: 913, column: 1, scope: !11862)
!11872 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11863, file: !11863, line: 823, type: !11873, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11875)
!11873 = !DISubroutineType(types: !11874)
!11874 = !{!208, !1481}
!11875 = !{!11876}
!11876 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11872, file: !11863, line: 823, type: !1481)
!11877 = !DILocation(line: 0, scope: !11872)
!11878 = !DILocation(line: 825, column: 21, scope: !11872)
!11879 = !DILocation(line: 825, column: 3, scope: !11872)
!11880 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11863, file: !11863, line: 812, type: !11864, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11881)
!11881 = !{!11882, !11883}
!11882 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11880, file: !11863, line: 812, type: !1481)
!11883 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11880, file: !11863, line: 812, type: !208)
!11884 = !DILocation(line: 0, scope: !11880)
!11885 = !DILocation(line: 814, column: 3, scope: !11880)
!11886 = !DILocation(line: 815, column: 1, scope: !11880)
!11887 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11863, file: !11863, line: 771, type: !11873, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11888)
!11888 = !{!11889}
!11889 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11887, file: !11863, line: 771, type: !1481)
!11890 = !DILocation(line: 0, scope: !11887)
!11891 = !DILocation(line: 773, column: 21, scope: !11887)
!11892 = !DILocation(line: 773, column: 3, scope: !11887)
!11893 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1548, file: !1548, line: 47, type: !11894, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11896)
!11894 = !DISubroutineType(types: !11895)
!11895 = !{!125, !1424, !387}
!11896 = !{!11897, !11898}
!11897 = !DILocalVariable(name: "flags", arg: 1, scope: !11893, file: !1548, line: 47, type: !1424)
!11898 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11893, file: !1548, line: 47, type: !387)
!11899 = !DILocation(line: 0, scope: !11893)
!11900 = !DILocation(line: 50, column: 13, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11893, file: !1548, line: 50, column: 6)
!11902 = !DILocation(line: 50, column: 28, scope: !11901)
!11903 = !DILocation(line: 50, column: 6, scope: !11893)
!11904 = !DILocation(line: 53, column: 11, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11901, file: !1548, line: 50, column: 34)
!11906 = !DILocation(line: 55, column: 14, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11905, file: !1548, line: 55, column: 7)
!11908 = !DILocation(line: 55, column: 35, scope: !11907)
!11909 = !DILocation(line: 55, column: 7, scope: !11905)
!11910 = !DILocation(line: 56, column: 14, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !1548, line: 56, column: 8)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !1548, line: 55, column: 41)
!11913 = !DILocation(line: 56, column: 8, scope: !11912)
!11914 = !DILocation(line: 0, scope: !11907)
!11915 = !DILocation(line: 66, column: 14, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11905, file: !1548, line: 66, column: 7)
!11917 = !DILocation(line: 66, column: 30, scope: !11916)
!11918 = !DILocation(line: 66, column: 7, scope: !11905)
!11919 = !DILocation(line: 67, column: 12, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11916, file: !1548, line: 66, column: 36)
!11921 = !DILocation(line: 68, column: 3, scope: !11920)
!11922 = !DILocation(line: 68, column: 21, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11916, file: !1548, line: 68, column: 14)
!11924 = !DILocation(line: 68, column: 39, scope: !11923)
!11925 = !DILocation(line: 68, column: 14, scope: !11916)
!11926 = !DILocation(line: 69, column: 12, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11923, file: !1548, line: 68, column: 45)
!11928 = !DILocation(line: 70, column: 3, scope: !11927)
!11929 = !DILocation(line: 72, column: 21, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11901, file: !1548, line: 72, column: 14)
!11931 = !DILocation(line: 72, column: 35, scope: !11930)
!11932 = !DILocation(line: 72, column: 14, scope: !11901)
!11933 = !DILocation(line: 77, column: 14, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11935, file: !1548, line: 77, column: 7)
!11935 = distinct !DILexicalBlock(scope: !11930, file: !1548, line: 72, column: 41)
!11936 = !DILocation(line: 77, column: 30, scope: !11934)
!11937 = !DILocation(line: 77, column: 7, scope: !11935)
!11938 = !DILocation(line: 0, scope: !11901)
!11939 = !DILocation(line: 90, column: 1, scope: !11893)
!11940 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1548, file: !1548, line: 157, type: !11941, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11943)
!11941 = !DISubroutineType(types: !11942)
!11942 = !{null, !1408, !125, !125, !125}
!11943 = !{!11944, !11945, !11946, !11947, !11948, !11949, !11950, !11951, !11952, !11953, !11954}
!11944 = !DILocalVariable(name: "dev", arg: 1, scope: !11940, file: !1548, line: 157, type: !1408)
!11945 = !DILocalVariable(name: "pin", arg: 2, scope: !11940, file: !1548, line: 157, type: !125)
!11946 = !DILocalVariable(name: "conf", arg: 3, scope: !11940, file: !1548, line: 158, type: !125)
!11947 = !DILocalVariable(name: "func", arg: 4, scope: !11940, file: !1548, line: 158, type: !125)
!11948 = !DILocalVariable(name: "cfg", scope: !11940, file: !1548, line: 160, type: !11465)
!11949 = !DILocalVariable(name: "gpio", scope: !11940, file: !1548, line: 161, type: !1481)
!11950 = !DILocalVariable(name: "pin_ll", scope: !11940, file: !1548, line: 163, type: !125)
!11951 = !DILocalVariable(name: "mode", scope: !11940, file: !1548, line: 227, type: !32)
!11952 = !DILocalVariable(name: "otype", scope: !11940, file: !1548, line: 227, type: !32)
!11953 = !DILocalVariable(name: "ospeed", scope: !11940, file: !1548, line: 227, type: !32)
!11954 = !DILocalVariable(name: "pupd", scope: !11940, file: !1548, line: 227, type: !32)
!11955 = !DILocation(line: 0, scope: !11940)
!11956 = !DILocation(line: 160, column: 45, scope: !11940)
!11957 = !DILocation(line: 161, column: 44, scope: !11940)
!11958 = !DILocation(line: 163, column: 15, scope: !11940)
!11959 = !DILocation(line: 229, column: 14, scope: !11940)
!11960 = !DILocation(line: 246, column: 47, scope: !11940)
!11961 = !DILocation(line: 246, column: 2, scope: !11940)
!11962 = !DILocation(line: 248, column: 43, scope: !11940)
!11963 = !DILocation(line: 248, column: 2, scope: !11940)
!11964 = !DILocation(line: 250, column: 40, scope: !11940)
!11965 = !DILocation(line: 250, column: 2, scope: !11940)
!11966 = !DILocation(line: 252, column: 11, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11940, file: !1548, line: 252, column: 6)
!11968 = !DILocation(line: 252, column: 6, scope: !11940)
!11969 = !DILocation(line: 253, column: 11, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !1548, line: 253, column: 7)
!11971 = distinct !DILexicalBlock(scope: !11967, file: !1548, line: 252, column: 36)
!11972 = !DILocation(line: 253, column: 7, scope: !11971)
!11973 = !DILocation(line: 254, column: 4, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11970, file: !1548, line: 253, column: 16)
!11975 = !DILocation(line: 255, column: 3, scope: !11974)
!11976 = !DILocation(line: 256, column: 4, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11970, file: !1548, line: 255, column: 10)
!11978 = !DILocation(line: 260, column: 40, scope: !11940)
!11979 = !DILocation(line: 260, column: 2, scope: !11940)
!11980 = !DILocation(line: 265, column: 1, scope: !11940)
!11981 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1548, file: !1548, line: 137, type: !11788, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11982)
!11982 = !{!11983, !11984}
!11983 = !DILocalVariable(name: "pin", arg: 1, scope: !11981, file: !1548, line: 137, type: !125)
!11984 = !DILocalVariable(name: "pinval", scope: !11981, file: !1548, line: 139, type: !208)
!11985 = !DILocation(line: 0, scope: !11981)
!11986 = !DILocation(line: 149, column: 13, scope: !11981)
!11987 = !DILocation(line: 151, column: 2, scope: !11981)
!11988 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11863, file: !11863, line: 342, type: !11989, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{null, !1481, !208, !208}
!11991 = !{!11992, !11993, !11994}
!11992 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11988, file: !11863, line: 342, type: !1481)
!11993 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11988, file: !11863, line: 342, type: !208)
!11994 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11988, file: !11863, line: 342, type: !208)
!11995 = !DILocation(line: 0, scope: !11988)
!11996 = !DILocation(line: 344, column: 3, scope: !11988)
!11997 = !DILocation(line: 345, column: 1, scope: !11988)
!11998 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11863, file: !11863, line: 413, type: !11989, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !11999)
!11999 = !{!12000, !12001, !12002}
!12000 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11998, file: !11863, line: 413, type: !1481)
!12001 = !DILocalVariable(name: "Pin", arg: 2, scope: !11998, file: !11863, line: 413, type: !208)
!12002 = !DILocalVariable(name: "Speed", arg: 3, scope: !11998, file: !11863, line: 413, type: !208)
!12003 = !DILocation(line: 0, scope: !11998)
!12004 = !DILocation(line: 415, column: 3, scope: !11998)
!12005 = !DILocation(line: 0, scope: !11808, inlinedAt: !12006)
!12006 = distinct !DILocation(line: 415, column: 3, scope: !11998)
!12007 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !12006)
!12008 = !DILocation(line: 0, scope: !11816, inlinedAt: !12009)
!12009 = distinct !DILocation(line: 415, column: 3, scope: !11998)
!12010 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !12009)
!12011 = !DILocation(line: 0, scope: !11808, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 415, column: 3, scope: !11998)
!12013 = !DILocation(line: 0, scope: !11816, inlinedAt: !12014)
!12014 = distinct !DILocation(line: 415, column: 3, scope: !11998)
!12015 = !DILocation(line: 417, column: 1, scope: !11998)
!12016 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11863, file: !11863, line: 484, type: !11989, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12017)
!12017 = !{!12018, !12019, !12020}
!12018 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12016, file: !11863, line: 484, type: !1481)
!12019 = !DILocalVariable(name: "Pin", arg: 2, scope: !12016, file: !11863, line: 484, type: !208)
!12020 = !DILocalVariable(name: "Pull", arg: 3, scope: !12016, file: !11863, line: 484, type: !208)
!12021 = !DILocation(line: 0, scope: !12016)
!12022 = !DILocation(line: 486, column: 3, scope: !12016)
!12023 = !DILocation(line: 0, scope: !11808, inlinedAt: !12024)
!12024 = distinct !DILocation(line: 486, column: 3, scope: !12016)
!12025 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !12024)
!12026 = !DILocation(line: 0, scope: !11816, inlinedAt: !12027)
!12027 = distinct !DILocation(line: 486, column: 3, scope: !12016)
!12028 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !12027)
!12029 = !DILocation(line: 0, scope: !11808, inlinedAt: !12030)
!12030 = distinct !DILocation(line: 486, column: 3, scope: !12016)
!12031 = !DILocation(line: 0, scope: !11816, inlinedAt: !12032)
!12032 = distinct !DILocation(line: 486, column: 3, scope: !12016)
!12033 = !DILocation(line: 487, column: 1, scope: !12016)
!12034 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11863, file: !11863, line: 556, type: !11989, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12035)
!12035 = !{!12036, !12037, !12038}
!12036 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12034, file: !11863, line: 556, type: !1481)
!12037 = !DILocalVariable(name: "Pin", arg: 2, scope: !12034, file: !11863, line: 556, type: !208)
!12038 = !DILocalVariable(name: "Alternate", arg: 3, scope: !12034, file: !11863, line: 556, type: !208)
!12039 = !DILocation(line: 0, scope: !12034)
!12040 = !DILocation(line: 558, column: 3, scope: !12034)
!12041 = !DILocation(line: 0, scope: !11808, inlinedAt: !12042)
!12042 = distinct !DILocation(line: 558, column: 3, scope: !12034)
!12043 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !12042)
!12044 = !DILocation(line: 0, scope: !11816, inlinedAt: !12045)
!12045 = distinct !DILocation(line: 558, column: 3, scope: !12034)
!12046 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !12045)
!12047 = !DILocation(line: 0, scope: !11808, inlinedAt: !12048)
!12048 = distinct !DILocation(line: 558, column: 3, scope: !12034)
!12049 = !DILocation(line: 0, scope: !11816, inlinedAt: !12050)
!12050 = distinct !DILocation(line: 558, column: 3, scope: !12034)
!12051 = !DILocation(line: 560, column: 1, scope: !12034)
!12052 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11863, file: !11863, line: 633, type: !11989, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12053)
!12053 = !{!12054, !12055, !12056}
!12054 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12052, file: !11863, line: 633, type: !1481)
!12055 = !DILocalVariable(name: "Pin", arg: 2, scope: !12052, file: !11863, line: 633, type: !208)
!12056 = !DILocalVariable(name: "Alternate", arg: 3, scope: !12052, file: !11863, line: 633, type: !208)
!12057 = !DILocation(line: 0, scope: !12052)
!12058 = !DILocation(line: 635, column: 3, scope: !12052)
!12059 = !DILocation(line: 0, scope: !11808, inlinedAt: !12060)
!12060 = distinct !DILocation(line: 635, column: 3, scope: !12052)
!12061 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !12060)
!12062 = !DILocation(line: 0, scope: !11816, inlinedAt: !12063)
!12063 = distinct !DILocation(line: 635, column: 3, scope: !12052)
!12064 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !12063)
!12065 = !DILocation(line: 0, scope: !11808, inlinedAt: !12066)
!12066 = distinct !DILocation(line: 635, column: 3, scope: !12052)
!12067 = !DILocation(line: 0, scope: !11816, inlinedAt: !12068)
!12068 = distinct !DILocation(line: 635, column: 3, scope: !12052)
!12069 = !DILocation(line: 637, column: 1, scope: !12052)
!12070 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11863, file: !11863, line: 273, type: !11989, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12071)
!12071 = !{!12072, !12073, !12074}
!12072 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12070, file: !11863, line: 273, type: !1481)
!12073 = !DILocalVariable(name: "Pin", arg: 2, scope: !12070, file: !11863, line: 273, type: !208)
!12074 = !DILocalVariable(name: "Mode", arg: 3, scope: !12070, file: !11863, line: 273, type: !208)
!12075 = !DILocation(line: 0, scope: !12070)
!12076 = !DILocation(line: 275, column: 3, scope: !12070)
!12077 = !DILocation(line: 0, scope: !11808, inlinedAt: !12078)
!12078 = distinct !DILocation(line: 275, column: 3, scope: !12070)
!12079 = !DILocation(line: 380, column: 4, scope: !11808, inlinedAt: !12078)
!12080 = !DILocation(line: 0, scope: !11816, inlinedAt: !12081)
!12081 = distinct !DILocation(line: 275, column: 3, scope: !12070)
!12082 = !DILocation(line: 414, column: 7, scope: !11816, inlinedAt: !12081)
!12083 = !DILocation(line: 0, scope: !11808, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 275, column: 3, scope: !12070)
!12085 = !DILocation(line: 0, scope: !11816, inlinedAt: !12086)
!12086 = distinct !DILocation(line: 275, column: 3, scope: !12070)
!12087 = !DILocation(line: 276, column: 1, scope: !12070)
!12088 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1548, file: !1548, line: 698, type: !1561, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12089)
!12089 = !{!12090, !12091, !12092}
!12090 = !DILocalVariable(name: "dev", arg: 1, scope: !12088, file: !1548, line: 698, type: !1408)
!12091 = !DILocalVariable(name: "data", scope: !12088, file: !1548, line: 700, type: !11532)
!12092 = !DILocalVariable(name: "ret", scope: !12088, file: !1548, line: 701, type: !125)
!12093 = !DILocation(line: 0, scope: !12088)
!12094 = !DILocation(line: 700, column: 38, scope: !12088)
!12095 = !DILocation(line: 703, column: 8, scope: !12088)
!12096 = !DILocation(line: 703, column: 12, scope: !12088)
!12097 = !DILocation(line: 705, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12088, file: !1548, line: 705, column: 6)
!12099 = !DILocation(line: 705, column: 6, scope: !12088)
!12100 = !DILocation(line: 722, column: 8, scope: !12088)
!12101 = !DILocation(line: 723, column: 10, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12088, file: !1548, line: 723, column: 6)
!12103 = !DILocation(line: 723, column: 6, scope: !12088)
!12104 = !DILocation(line: 731, column: 1, scope: !12088)
!12105 = distinct !DISubprogram(name: "device_is_ready", scope: !4345, file: !4345, line: 47, type: !12106, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12108)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{!153, !1408}
!12108 = !{!12109}
!12109 = !DILocalVariable(name: "dev", arg: 1, scope: !12105, file: !4345, line: 47, type: !1408)
!12110 = !DILocation(line: 0, scope: !12105)
!12111 = !DILocation(line: 55, column: 2, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12105, file: !4345, line: 55, column: 2)
!12113 = !{i64 2155662040}
!12114 = !DILocation(line: 56, column: 9, scope: !12105)
!12115 = !DILocation(line: 56, column: 2, scope: !12105)
!12116 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1548, file: !1548, line: 270, type: !12117, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12119)
!12117 = !DISubroutineType(types: !12118)
!12118 = !{!125, !1408, !153}
!12119 = !{!12120, !12121, !12122, !12123, !12124}
!12120 = !DILocalVariable(name: "dev", arg: 1, scope: !12116, file: !1548, line: 270, type: !1408)
!12121 = !DILocalVariable(name: "on", arg: 2, scope: !12116, file: !1548, line: 270, type: !153)
!12122 = !DILocalVariable(name: "cfg", scope: !12116, file: !1548, line: 272, type: !11465)
!12123 = !DILocalVariable(name: "ret", scope: !12116, file: !1548, line: 273, type: !125)
!12124 = !DILocalVariable(name: "clk", scope: !12116, file: !1548, line: 278, type: !11755)
!12125 = !DILocation(line: 0, scope: !12116)
!12126 = !DILocation(line: 272, column: 45, scope: !12116)
!12127 = !DILocation(line: 282, column: 38, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !1548, line: 280, column: 10)
!12129 = distinct !DILexicalBlock(scope: !12116, file: !1548, line: 280, column: 6)
!12130 = !DILocation(line: 282, column: 6, scope: !12128)
!12131 = !DILocation(line: 281, column: 9, scope: !12128)
!12132 = !DILocation(line: 293, column: 1, scope: !12116)
!12133 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12106, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12134)
!12134 = !{!12135}
!12135 = !DILocalVariable(name: "dev", arg: 1, scope: !12133, file: !137, line: 730, type: !1408)
!12136 = !DILocation(line: 0, scope: !12133)
!12137 = !DILocation(line: 732, column: 9, scope: !12133)
!12138 = !DILocation(line: 732, column: 2, scope: !12133)
!12139 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1548, file: !1548, line: 496, type: !12140, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1379, retainedNodes: !12142)
!12140 = !DISubroutineType(types: !12141)
!12141 = !{!125, !1408, !125, !125, !125}
!12142 = !{!12143, !12144, !12145, !12146, !12147, !12148}
!12143 = !DILocalVariable(name: "dev", arg: 1, scope: !12139, file: !1548, line: 496, type: !1408)
!12144 = !DILocalVariable(name: "pin", arg: 2, scope: !12139, file: !1548, line: 496, type: !125)
!12145 = !DILocalVariable(name: "conf", arg: 3, scope: !12139, file: !1548, line: 496, type: !125)
!12146 = !DILocalVariable(name: "func", arg: 4, scope: !12139, file: !1548, line: 496, type: !125)
!12147 = !DILocalVariable(name: "ret", scope: !12139, file: !1548, line: 498, type: !125)
!12148 = !DILocalVariable(name: "gpio_out", scope: !12149, file: !1548, line: 508, type: !208)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !1548, line: 507, column: 27)
!12150 = distinct !DILexicalBlock(scope: !12139, file: !1548, line: 507, column: 6)
!12151 = !DILocation(line: 0, scope: !12139)
!12152 = !DILocation(line: 505, column: 2, scope: !12139)
!12153 = !DILocation(line: 507, column: 11, scope: !12150)
!12154 = !DILocation(line: 507, column: 6, scope: !12139)
!12155 = !DILocation(line: 508, column: 28, scope: !12149)
!12156 = !DILocation(line: 0, scope: !12149)
!12157 = !DILocation(line: 510, column: 16, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12149, file: !1548, line: 510, column: 7)
!12159 = !DILocation(line: 0, scope: !12158)
!12160 = !DILocation(line: 510, column: 7, scope: !12149)
!12161 = !DILocation(line: 511, column: 4, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12158, file: !1548, line: 510, column: 32)
!12163 = !DILocation(line: 512, column: 3, scope: !12162)
!12164 = !DILocation(line: 513, column: 4, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !1548, line: 512, column: 39)
!12166 = distinct !DILexicalBlock(scope: !12158, file: !1548, line: 512, column: 14)
!12167 = !DILocation(line: 514, column: 3, scope: !12165)
!12168 = !DILocation(line: 518, column: 1, scope: !12139)
!12169 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1859, file: !1859, line: 526, type: !1760, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12170)
!12170 = !{!12171, !12172, !12173}
!12171 = !DILocalVariable(name: "dev", arg: 1, scope: !12169, file: !1859, line: 526, type: !1762)
!12172 = !DILocalVariable(name: "c", arg: 2, scope: !12169, file: !1859, line: 526, type: !1158)
!12173 = !DILocalVariable(name: "config", scope: !12169, file: !1859, line: 528, type: !12174)
!12174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!12175 = !DILocation(line: 0, scope: !12169)
!12176 = !DILocation(line: 528, column: 48, scope: !12169)
!12177 = !DILocation(line: 531, column: 40, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12169, file: !1859, line: 531, column: 6)
!12179 = !DILocation(line: 531, column: 6, scope: !12178)
!12180 = !DILocation(line: 531, column: 6, scope: !12169)
!12181 = !DILocation(line: 532, column: 34, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12178, file: !1859, line: 531, column: 48)
!12183 = !DILocation(line: 532, column: 3, scope: !12182)
!12184 = !DILocation(line: 533, column: 2, scope: !12182)
!12185 = !DILocation(line: 539, column: 42, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12169, file: !1859, line: 539, column: 6)
!12187 = !DILocation(line: 539, column: 7, scope: !12186)
!12188 = !DILocation(line: 539, column: 6, scope: !12169)
!12189 = !DILocation(line: 543, column: 52, scope: !12169)
!12190 = !DILocation(line: 543, column: 22, scope: !12169)
!12191 = !DILocation(line: 543, column: 5, scope: !12169)
!12192 = !DILocation(line: 545, column: 2, scope: !12169)
!12193 = !DILocation(line: 546, column: 1, scope: !12169)
!12194 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1859, file: !1859, line: 548, type: !1779, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12195)
!12195 = !{!12196, !12197, !12198, !12199}
!12196 = !DILocalVariable(name: "dev", arg: 1, scope: !12194, file: !1859, line: 548, type: !1762)
!12197 = !DILocalVariable(name: "c", arg: 2, scope: !12194, file: !1859, line: 549, type: !151)
!12198 = !DILocalVariable(name: "config", scope: !12194, file: !1859, line: 551, type: !12174)
!12199 = !DILocalVariable(name: "key", scope: !12194, file: !1859, line: 555, type: !32)
!12200 = !DILocation(line: 0, scope: !12194)
!12201 = !DILocation(line: 551, column: 48, scope: !12194)
!12202 = !DILocation(line: 562, column: 2, scope: !12194)
!12203 = !DILocation(line: 563, column: 41, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !1859, line: 563, column: 7)
!12205 = distinct !DILexicalBlock(scope: !12194, file: !1859, line: 562, column: 12)
!12206 = !DILocation(line: 563, column: 7, scope: !12204)
!12207 = !DILocation(line: 563, column: 7, scope: !12205)
!12208 = !DILocation(line: 55, column: 2, scope: !12209, inlinedAt: !12213)
!12209 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12210)
!12210 = !{!12211, !12212}
!12211 = !DILocalVariable(name: "key", scope: !12209, file: !6978, line: 44, type: !32)
!12212 = !DILocalVariable(name: "tmp", scope: !12209, file: !6978, line: 53, type: !32)
!12213 = distinct !DILocation(line: 564, column: 10, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12204, file: !1859, line: 563, column: 49)
!12215 = !{i64 2644082}
!12216 = !DILocation(line: 0, scope: !12209, inlinedAt: !12213)
!12217 = !DILocation(line: 565, column: 42, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12214, file: !1859, line: 565, column: 8)
!12219 = !DILocation(line: 565, column: 8, scope: !12218)
!12220 = !DILocation(line: 565, column: 8, scope: !12214)
!12221 = !DILocalVariable(name: "key", arg: 1, scope: !12222, file: !6978, line: 84, type: !32)
!12222 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12223)
!12223 = !{!12221}
!12224 = !DILocation(line: 0, scope: !12222, inlinedAt: !12225)
!12225 = distinct !DILocation(line: 568, column: 4, scope: !12214)
!12226 = !DILocation(line: 95, column: 2, scope: !12222, inlinedAt: !12225)
!12227 = !{i64 2644899}
!12228 = !DILocation(line: 569, column: 3, scope: !12214)
!12229 = distinct !{!12229, !12202, !12230}
!12230 = !DILocation(line: 570, column: 2, scope: !12194)
!12231 = !DILocation(line: 592, column: 33, scope: !12194)
!12232 = !DILocation(line: 592, column: 2, scope: !12194)
!12233 = !DILocation(line: 0, scope: !12222, inlinedAt: !12234)
!12234 = distinct !DILocation(line: 593, column: 2, scope: !12194)
!12235 = !DILocation(line: 95, column: 2, scope: !12222, inlinedAt: !12234)
!12236 = !DILocation(line: 594, column: 1, scope: !12194)
!12237 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1859, file: !1859, line: 596, type: !1783, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12238)
!12238 = !{!12239, !12240, !12241}
!12239 = !DILocalVariable(name: "dev", arg: 1, scope: !12237, file: !1859, line: 596, type: !1762)
!12240 = !DILocalVariable(name: "config", scope: !12237, file: !1859, line: 598, type: !12174)
!12241 = !DILocalVariable(name: "err", scope: !12237, file: !1859, line: 599, type: !208)
!12242 = !DILocation(line: 0, scope: !12237)
!12243 = !DILocation(line: 598, column: 48, scope: !12237)
!12244 = !DILocation(line: 606, column: 40, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 606, column: 6)
!12246 = !DILocation(line: 606, column: 6, scope: !12245)
!12247 = !DILocation(line: 606, column: 6, scope: !12237)
!12248 = !DILocation(line: 610, column: 39, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 610, column: 6)
!12250 = !DILocation(line: 610, column: 6, scope: !12249)
!12251 = !DILocation(line: 610, column: 6, scope: !12237)
!12252 = !DILocation(line: 614, column: 39, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 614, column: 6)
!12254 = !DILocation(line: 614, column: 6, scope: !12253)
!12255 = !DILocation(line: 614, column: 6, scope: !12237)
!12256 = !DILocation(line: 619, column: 40, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 619, column: 6)
!12258 = !DILocation(line: 619, column: 6, scope: !12257)
!12259 = !DILocation(line: 619, column: 6, scope: !12237)
!12260 = !DILocation(line: 623, column: 10, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 623, column: 6)
!12262 = !DILocation(line: 623, column: 6, scope: !12237)
!12263 = !DILocation(line: 624, column: 34, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12261, file: !1859, line: 623, column: 24)
!12265 = !DILocation(line: 624, column: 3, scope: !12264)
!12266 = !DILocation(line: 625, column: 2, scope: !12264)
!12267 = !DILocation(line: 632, column: 10, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 632, column: 6)
!12269 = !DILocation(line: 632, column: 6, scope: !12237)
!12270 = !DILocation(line: 633, column: 34, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12268, file: !1859, line: 632, column: 32)
!12272 = !DILocation(line: 633, column: 3, scope: !12271)
!12273 = !DILocation(line: 634, column: 2, scope: !12271)
!12274 = !DILocation(line: 636, column: 10, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 636, column: 6)
!12276 = !DILocation(line: 636, column: 6, scope: !12237)
!12277 = !DILocation(line: 637, column: 33, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12275, file: !1859, line: 636, column: 31)
!12279 = !DILocation(line: 637, column: 3, scope: !12278)
!12280 = !DILocation(line: 638, column: 2, scope: !12278)
!12281 = !DILocation(line: 640, column: 10, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12237, file: !1859, line: 640, column: 6)
!12283 = !DILocation(line: 640, column: 6, scope: !12237)
!12284 = !DILocation(line: 641, column: 33, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12282, file: !1859, line: 640, column: 32)
!12286 = !DILocation(line: 641, column: 3, scope: !12285)
!12287 = !DILocation(line: 642, column: 2, scope: !12285)
!12288 = !DILocation(line: 646, column: 32, scope: !12237)
!12289 = !DILocation(line: 646, column: 2, scope: !12237)
!12290 = !DILocation(line: 648, column: 2, scope: !12237)
!12291 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1859, file: !1859, line: 419, type: !1787, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12292)
!12292 = !{!12293, !12294, !12295, !12296, !12298, !12299, !12300, !12301}
!12293 = !DILocalVariable(name: "dev", arg: 1, scope: !12291, file: !1859, line: 419, type: !1762)
!12294 = !DILocalVariable(name: "cfg", arg: 2, scope: !12291, file: !1859, line: 420, type: !1789)
!12295 = !DILocalVariable(name: "config", scope: !12291, file: !1859, line: 422, type: !12174)
!12296 = !DILocalVariable(name: "data", scope: !12291, file: !1859, line: 423, type: !12297)
!12297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 32)
!12298 = !DILocalVariable(name: "parity", scope: !12291, file: !1859, line: 424, type: !8713)
!12299 = !DILocalVariable(name: "stopbits", scope: !12291, file: !1859, line: 425, type: !8713)
!12300 = !DILocalVariable(name: "databits", scope: !12291, file: !1859, line: 426, type: !8713)
!12301 = !DILocalVariable(name: "flowctrl", scope: !12291, file: !1859, line: 428, type: !8713)
!12302 = !DILocation(line: 0, scope: !12291)
!12303 = !DILocation(line: 422, column: 48, scope: !12291)
!12304 = !DILocation(line: 423, column: 38, scope: !12291)
!12305 = !DILocation(line: 424, column: 56, scope: !12291)
!12306 = !DILocation(line: 424, column: 51, scope: !12291)
!12307 = !DILocation(line: 424, column: 26, scope: !12291)
!12308 = !DILocation(line: 425, column: 60, scope: !12291)
!12309 = !DILocation(line: 425, column: 55, scope: !12291)
!12310 = !DILocation(line: 425, column: 28, scope: !12291)
!12311 = !DILocation(line: 426, column: 60, scope: !12291)
!12312 = !DILocation(line: 426, column: 55, scope: !12291)
!12313 = !DILocation(line: 426, column: 28, scope: !12291)
!12314 = !DILocation(line: 428, column: 58, scope: !12291)
!12315 = !DILocation(line: 428, column: 53, scope: !12291)
!12316 = !DILocation(line: 428, column: 28, scope: !12291)
!12317 = !DILocation(line: 431, column: 44, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 431, column: 6)
!12319 = !DILocation(line: 438, column: 22, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 437, column: 6)
!12321 = !DILocation(line: 437, column: 6, scope: !12291)
!12322 = !DILocation(line: 448, column: 6, scope: !12291)
!12323 = !DILocation(line: 465, column: 47, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 465, column: 6)
!12325 = !DILocation(line: 475, column: 21, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 475, column: 6)
!12327 = !DILocation(line: 475, column: 6, scope: !12291)
!12328 = !DILocation(line: 476, column: 8, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !1859, line: 476, column: 7)
!12330 = distinct !DILexicalBlock(scope: !12326, file: !1859, line: 475, column: 49)
!12331 = !DILocation(line: 477, column: 34, scope: !12329)
!12332 = !DILocation(line: 476, column: 7, scope: !12330)
!12333 = !DILocation(line: 482, column: 27, scope: !12291)
!12334 = !DILocation(line: 482, column: 2, scope: !12291)
!12335 = !DILocation(line: 484, column: 16, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 484, column: 6)
!12337 = !DILocation(line: 484, column: 13, scope: !12336)
!12338 = !DILocation(line: 484, column: 6, scope: !12291)
!12339 = !DILocation(line: 485, column: 3, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12336, file: !1859, line: 484, column: 44)
!12341 = !DILocation(line: 486, column: 2, scope: !12340)
!12342 = !DILocation(line: 488, column: 18, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 488, column: 6)
!12344 = !DILocation(line: 488, column: 15, scope: !12343)
!12345 = !DILocation(line: 488, column: 6, scope: !12291)
!12346 = !DILocation(line: 489, column: 3, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12343, file: !1859, line: 488, column: 48)
!12348 = !DILocation(line: 490, column: 2, scope: !12347)
!12349 = !DILocation(line: 492, column: 18, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 492, column: 6)
!12351 = !DILocation(line: 492, column: 15, scope: !12350)
!12352 = !DILocation(line: 492, column: 6, scope: !12291)
!12353 = !DILocation(line: 493, column: 3, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12350, file: !1859, line: 492, column: 48)
!12355 = !DILocation(line: 494, column: 2, scope: !12354)
!12356 = !DILocation(line: 496, column: 18, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 496, column: 6)
!12358 = !DILocation(line: 496, column: 15, scope: !12357)
!12359 = !DILocation(line: 496, column: 6, scope: !12291)
!12360 = !DILocation(line: 497, column: 3, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12357, file: !1859, line: 496, column: 46)
!12362 = !DILocation(line: 498, column: 2, scope: !12361)
!12363 = !DILocation(line: 500, column: 11, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12291, file: !1859, line: 500, column: 6)
!12365 = !DILocation(line: 500, column: 29, scope: !12364)
!12366 = !DILocation(line: 500, column: 20, scope: !12364)
!12367 = !DILocation(line: 500, column: 6, scope: !12291)
!12368 = !DILocation(line: 501, column: 3, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12364, file: !1859, line: 500, column: 40)
!12370 = !DILocation(line: 502, column: 26, scope: !12369)
!12371 = !DILocation(line: 502, column: 19, scope: !12369)
!12372 = !DILocation(line: 503, column: 2, scope: !12369)
!12373 = !DILocation(line: 505, column: 26, scope: !12291)
!12374 = !DILocation(line: 505, column: 2, scope: !12291)
!12375 = !DILocation(line: 506, column: 2, scope: !12291)
!12376 = !DILocation(line: 507, column: 1, scope: !12291)
!12377 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1859, file: !1859, line: 509, type: !1800, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12378)
!12378 = !{!12379, !12380, !12381}
!12379 = !DILocalVariable(name: "dev", arg: 1, scope: !12377, file: !1859, line: 509, type: !1762)
!12380 = !DILocalVariable(name: "cfg", arg: 2, scope: !12377, file: !1859, line: 510, type: !1802)
!12381 = !DILocalVariable(name: "data", scope: !12377, file: !1859, line: 512, type: !12297)
!12382 = !DILocation(line: 0, scope: !12377)
!12383 = !DILocation(line: 512, column: 38, scope: !12377)
!12384 = !DILocation(line: 514, column: 24, scope: !12377)
!12385 = !DILocation(line: 514, column: 7, scope: !12377)
!12386 = !DILocation(line: 514, column: 16, scope: !12377)
!12387 = !DILocation(line: 515, column: 41, scope: !12377)
!12388 = !{i32 0, i32 1537}
!12389 = !DILocation(line: 515, column: 16, scope: !12377)
!12390 = !DILocation(line: 515, column: 7, scope: !12377)
!12391 = !DILocation(line: 515, column: 14, scope: !12377)
!12392 = !DILocation(line: 517, column: 3, scope: !12377)
!12393 = !{i32 0, i32 12289}
!12394 = !DILocation(line: 516, column: 19, scope: !12377)
!12395 = !DILocation(line: 516, column: 7, scope: !12377)
!12396 = !DILocation(line: 516, column: 17, scope: !12377)
!12397 = !DILocation(line: 519, column: 3, scope: !12377)
!12398 = !DILocation(line: 519, column: 33, scope: !12377)
!12399 = !DILocation(line: 518, column: 19, scope: !12377)
!12400 = !DILocation(line: 518, column: 7, scope: !12377)
!12401 = !DILocation(line: 518, column: 17, scope: !12377)
!12402 = !DILocation(line: 521, column: 3, scope: !12377)
!12403 = !{i32 0, i32 769}
!12404 = !DILocation(line: 520, column: 19, scope: !12377)
!12405 = !DILocation(line: 520, column: 7, scope: !12377)
!12406 = !DILocation(line: 520, column: 17, scope: !12377)
!12407 = !DILocation(line: 522, column: 2, scope: !12377)
!12408 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1859, file: !1859, line: 205, type: !12409, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12411)
!12409 = !DISubroutineType(types: !12410)
!12410 = !{!208, !1762}
!12411 = !{!12412, !12413}
!12412 = !DILocalVariable(name: "dev", arg: 1, scope: !12408, file: !1859, line: 205, type: !1762)
!12413 = !DILocalVariable(name: "config", scope: !12408, file: !1859, line: 207, type: !12174)
!12414 = !DILocation(line: 0, scope: !12408)
!12415 = !DILocation(line: 207, column: 48, scope: !12408)
!12416 = !DILocation(line: 209, column: 36, scope: !12408)
!12417 = !DILocation(line: 209, column: 9, scope: !12408)
!12418 = !DILocation(line: 209, column: 2, scope: !12408)
!12419 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1859, file: !1859, line: 270, type: !12420, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12422)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!1728, !208}
!12422 = !{!12423}
!12423 = !DILocalVariable(name: "parity", arg: 1, scope: !12419, file: !1859, line: 270, type: !208)
!12424 = !DILocation(line: 0, scope: !12419)
!12425 = !DILocation(line: 272, column: 2, scope: !12419)
!12426 = !DILocation(line: 281, column: 1, scope: !12419)
!12427 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1859, file: !1859, line: 220, type: !12409, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12428)
!12428 = !{!12429, !12430}
!12429 = !DILocalVariable(name: "dev", arg: 1, scope: !12427, file: !1859, line: 220, type: !1762)
!12430 = !DILocalVariable(name: "config", scope: !12427, file: !1859, line: 222, type: !12174)
!12431 = !DILocation(line: 0, scope: !12427)
!12432 = !DILocation(line: 222, column: 48, scope: !12427)
!12433 = !DILocation(line: 224, column: 44, scope: !12427)
!12434 = !DILocation(line: 224, column: 9, scope: !12427)
!12435 = !DILocation(line: 224, column: 2, scope: !12427)
!12436 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1859, file: !1859, line: 304, type: !12437, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12439)
!12437 = !DISubroutineType(types: !12438)
!12438 = !{!1742, !208}
!12439 = !{!12440}
!12440 = !DILocalVariable(name: "sb", arg: 1, scope: !12436, file: !1859, line: 304, type: !208)
!12441 = !DILocation(line: 0, scope: !12436)
!12442 = !DILocation(line: 306, column: 2, scope: !12436)
!12443 = !DILocation(line: 0, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12436, file: !1859, line: 306, column: 14)
!12445 = !DILocation(line: 323, column: 1, scope: !12436)
!12446 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1859, file: !1859, line: 235, type: !12409, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12447)
!12447 = !{!12448, !12449}
!12448 = !DILocalVariable(name: "dev", arg: 1, scope: !12446, file: !1859, line: 235, type: !1762)
!12449 = !DILocalVariable(name: "config", scope: !12446, file: !1859, line: 237, type: !12174)
!12450 = !DILocation(line: 0, scope: !12446)
!12451 = !DILocation(line: 237, column: 48, scope: !12446)
!12452 = !DILocation(line: 239, column: 39, scope: !12446)
!12453 = !DILocation(line: 239, column: 9, scope: !12446)
!12454 = !DILocation(line: 239, column: 2, scope: !12446)
!12455 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1859, file: !1859, line: 355, type: !12456, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12458)
!12456 = !DISubroutineType(types: !12457)
!12457 = !{!1735, !208, !208}
!12458 = !{!12459, !12460}
!12459 = !DILocalVariable(name: "db", arg: 1, scope: !12455, file: !1859, line: 355, type: !208)
!12460 = !DILocalVariable(name: "p", arg: 2, scope: !12455, file: !1859, line: 356, type: !208)
!12461 = !DILocation(line: 0, scope: !12455)
!12462 = !DILocation(line: 358, column: 2, scope: !12455)
!12463 = !DILocation(line: 384, column: 1, scope: !12455)
!12464 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1859, file: !1859, line: 250, type: !12409, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12465)
!12465 = !{!12466, !12467}
!12466 = !DILocalVariable(name: "dev", arg: 1, scope: !12464, file: !1859, line: 250, type: !1762)
!12467 = !DILocalVariable(name: "config", scope: !12464, file: !1859, line: 252, type: !12174)
!12468 = !DILocation(line: 0, scope: !12464)
!12469 = !DILocation(line: 252, column: 48, scope: !12464)
!12470 = !DILocation(line: 254, column: 40, scope: !12464)
!12471 = !DILocation(line: 254, column: 9, scope: !12464)
!12472 = !DILocation(line: 254, column: 2, scope: !12464)
!12473 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1859, file: !1859, line: 409, type: !12474, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12476)
!12474 = !DISubroutineType(types: !12475)
!12475 = !{!1748, !208}
!12476 = !{!12477}
!12477 = !DILocalVariable(name: "fc", arg: 1, scope: !12473, file: !1859, line: 409, type: !208)
!12478 = !DILocation(line: 0, scope: !12473)
!12479 = !DILocation(line: 411, column: 9, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12473, file: !1859, line: 411, column: 6)
!12481 = !DILocation(line: 416, column: 1, scope: !12473)
!12482 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12483, file: !12483, line: 967, type: !12484, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12486)
!12483 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12484 = !DISubroutineType(types: !12485)
!12485 = !{!208, !1803}
!12486 = !{!12487}
!12487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12482, file: !12483, line: 967, type: !1803)
!12488 = !DILocation(line: 0, scope: !12482)
!12489 = !DILocation(line: 969, column: 21, scope: !12482)
!12490 = !DILocation(line: 969, column: 3, scope: !12482)
!12491 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12483, file: !12483, line: 601, type: !12484, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12492)
!12492 = !{!12493}
!12493 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12491, file: !12483, line: 601, type: !1803)
!12494 = !DILocation(line: 0, scope: !12491)
!12495 = !DILocation(line: 603, column: 21, scope: !12491)
!12496 = !DILocation(line: 603, column: 3, scope: !12491)
!12497 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12483, file: !12483, line: 820, type: !12484, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12498)
!12498 = !{!12499}
!12499 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12497, file: !12483, line: 820, type: !1803)
!12500 = !DILocation(line: 0, scope: !12497)
!12501 = !DILocation(line: 822, column: 21, scope: !12497)
!12502 = !DILocation(line: 822, column: 3, scope: !12497)
!12503 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12483, file: !12483, line: 547, type: !12484, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12504)
!12504 = !{!12505}
!12505 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12503, file: !12483, line: 547, type: !1803)
!12506 = !DILocation(line: 0, scope: !12503)
!12507 = !DILocation(line: 549, column: 21, scope: !12503)
!12508 = !DILocation(line: 549, column: 3, scope: !12503)
!12509 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1859, file: !1859, line: 257, type: !12510, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12512)
!12510 = !DISubroutineType(types: !12511)
!12511 = !{!208, !1728}
!12512 = !{!12513}
!12513 = !DILocalVariable(name: "parity", arg: 1, scope: !12509, file: !1859, line: 257, type: !1728)
!12514 = !DILocation(line: 0, scope: !12509)
!12515 = !DILocation(line: 259, column: 2, scope: !12509)
!12516 = !DILocation(line: 268, column: 1, scope: !12509)
!12517 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1859, file: !1859, line: 283, type: !12518, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12520)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{!208, !1742}
!12520 = !{!12521}
!12521 = !DILocalVariable(name: "sb", arg: 1, scope: !12517, file: !1859, line: 283, type: !1742)
!12522 = !DILocation(line: 0, scope: !12517)
!12523 = !DILocation(line: 285, column: 2, scope: !12517)
!12524 = !DILocation(line: 0, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12517, file: !1859, line: 285, column: 14)
!12526 = !DILocation(line: 302, column: 1, scope: !12517)
!12527 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1859, file: !1859, line: 325, type: !12528, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12530)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!208, !1735, !1728}
!12530 = !{!12531, !12532}
!12531 = !DILocalVariable(name: "db", arg: 1, scope: !12527, file: !1859, line: 325, type: !1735)
!12532 = !DILocalVariable(name: "p", arg: 2, scope: !12527, file: !1859, line: 326, type: !1728)
!12533 = !DILocation(line: 0, scope: !12527)
!12534 = !DILocation(line: 328, column: 2, scope: !12527)
!12535 = !DILocation(line: 353, column: 1, scope: !12527)
!12536 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1859, file: !1859, line: 393, type: !12537, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12539)
!12537 = !DISubroutineType(types: !12538)
!12538 = !{!208, !1748}
!12539 = !{!12540}
!12540 = !DILocalVariable(name: "fc", arg: 1, scope: !12536, file: !1859, line: 393, type: !1748)
!12541 = !DILocation(line: 0, scope: !12536)
!12542 = !DILocation(line: 395, column: 9, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12536, file: !1859, line: 395, column: 6)
!12544 = !DILocation(line: 400, column: 1, scope: !12536)
!12545 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12483, file: !12483, line: 424, type: !12546, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12548)
!12546 = !DISubroutineType(types: !12547)
!12547 = !{null, !1803}
!12548 = !{!12549}
!12549 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12545, file: !12483, line: 424, type: !1803)
!12550 = !DILocation(line: 0, scope: !12545)
!12551 = !DILocation(line: 426, column: 3, scope: !12545)
!12552 = !DILocation(line: 427, column: 1, scope: !12545)
!12553 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1859, file: !1859, line: 197, type: !12554, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12556)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{null, !1762, !208}
!12556 = !{!12557, !12558, !12559}
!12557 = !DILocalVariable(name: "dev", arg: 1, scope: !12553, file: !1859, line: 197, type: !1762)
!12558 = !DILocalVariable(name: "parity", arg: 2, scope: !12553, file: !1859, line: 198, type: !208)
!12559 = !DILocalVariable(name: "config", scope: !12553, file: !1859, line: 200, type: !12174)
!12560 = !DILocation(line: 0, scope: !12553)
!12561 = !DILocation(line: 200, column: 48, scope: !12553)
!12562 = !DILocation(line: 202, column: 29, scope: !12553)
!12563 = !DILocation(line: 202, column: 2, scope: !12553)
!12564 = !DILocation(line: 203, column: 1, scope: !12553)
!12565 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1859, file: !1859, line: 212, type: !12554, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12566)
!12566 = !{!12567, !12568, !12569}
!12567 = !DILocalVariable(name: "dev", arg: 1, scope: !12565, file: !1859, line: 212, type: !1762)
!12568 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12565, file: !1859, line: 213, type: !208)
!12569 = !DILocalVariable(name: "config", scope: !12565, file: !1859, line: 215, type: !12174)
!12570 = !DILocation(line: 0, scope: !12565)
!12571 = !DILocation(line: 215, column: 48, scope: !12565)
!12572 = !DILocation(line: 217, column: 37, scope: !12565)
!12573 = !DILocation(line: 217, column: 2, scope: !12565)
!12574 = !DILocation(line: 218, column: 1, scope: !12565)
!12575 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1859, file: !1859, line: 227, type: !12554, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12576)
!12576 = !{!12577, !12578, !12579}
!12577 = !DILocalVariable(name: "dev", arg: 1, scope: !12575, file: !1859, line: 227, type: !1762)
!12578 = !DILocalVariable(name: "databits", arg: 2, scope: !12575, file: !1859, line: 228, type: !208)
!12579 = !DILocalVariable(name: "config", scope: !12575, file: !1859, line: 230, type: !12174)
!12580 = !DILocation(line: 0, scope: !12575)
!12581 = !DILocation(line: 230, column: 48, scope: !12575)
!12582 = !DILocation(line: 232, column: 32, scope: !12575)
!12583 = !DILocation(line: 232, column: 2, scope: !12575)
!12584 = !DILocation(line: 233, column: 1, scope: !12575)
!12585 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1859, file: !1859, line: 242, type: !12554, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12586)
!12586 = !{!12587, !12588, !12589}
!12587 = !DILocalVariable(name: "dev", arg: 1, scope: !12585, file: !1859, line: 242, type: !1762)
!12588 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12585, file: !1859, line: 243, type: !208)
!12589 = !DILocalVariable(name: "config", scope: !12585, file: !1859, line: 245, type: !12174)
!12590 = !DILocation(line: 0, scope: !12585)
!12591 = !DILocation(line: 245, column: 48, scope: !12585)
!12592 = !DILocation(line: 247, column: 33, scope: !12585)
!12593 = !DILocation(line: 247, column: 2, scope: !12585)
!12594 = !DILocation(line: 248, column: 1, scope: !12585)
!12595 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1859, file: !1859, line: 107, type: !12554, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12596)
!12596 = !{!12597, !12598, !12599, !12600, !12601}
!12597 = !DILocalVariable(name: "dev", arg: 1, scope: !12595, file: !1859, line: 107, type: !1762)
!12598 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12595, file: !1859, line: 107, type: !208)
!12599 = !DILocalVariable(name: "config", scope: !12595, file: !1859, line: 109, type: !12174)
!12600 = !DILocalVariable(name: "data", scope: !12595, file: !1859, line: 110, type: !12297)
!12601 = !DILocalVariable(name: "clock_rate", scope: !12595, file: !1859, line: 112, type: !208)
!12602 = !DILocation(line: 0, scope: !12595)
!12603 = !DILocation(line: 109, column: 48, scope: !12595)
!12604 = !DILocation(line: 110, column: 38, scope: !12595)
!12605 = !DILocation(line: 112, column: 2, scope: !12595)
!12606 = !DILocation(line: 123, column: 36, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !1859, line: 123, column: 7)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !1859, line: 122, column: 9)
!12609 = distinct !DILexicalBlock(scope: !12595, file: !1859, line: 115, column: 6)
!12610 = !DILocation(line: 124, column: 42, scope: !12607)
!12611 = !DILocation(line: 123, column: 7, scope: !12607)
!12612 = !DILocation(line: 125, column: 22, scope: !12607)
!12613 = !DILocation(line: 123, column: 7, scope: !12608)
!12614 = !DILocation(line: 126, column: 4, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12616, file: !1859, line: 126, column: 4)
!12616 = distinct !DILexicalBlock(scope: !12617, file: !1859, line: 126, column: 4)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !1859, line: 126, column: 4)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !1859, line: 126, column: 4)
!12619 = distinct !DILexicalBlock(scope: !12607, file: !1859, line: 125, column: 27)
!12620 = !DILocation(line: 127, column: 4, scope: !12619)
!12621 = !DILocation(line: 176, column: 36, scope: !12595)
!12622 = !DILocation(line: 176, column: 3, scope: !12595)
!12623 = !DILocation(line: 179, column: 32, scope: !12595)
!12624 = !DILocation(line: 180, column: 10, scope: !12595)
!12625 = !DILocation(line: 179, column: 3, scope: !12595)
!12626 = !DILocation(line: 195, column: 1, scope: !12595)
!12627 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12483, file: !12483, line: 410, type: !12546, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12628)
!12628 = !{!12629}
!12629 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12627, file: !12483, line: 410, type: !1803)
!12630 = !DILocation(line: 0, scope: !12627)
!12631 = !DILocation(line: 412, column: 3, scope: !12627)
!12632 = !DILocation(line: 413, column: 1, scope: !12627)
!12633 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1005, file: !1005, line: 216, type: !1836, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12634)
!12634 = !{!12635, !12636, !12637, !12638}
!12635 = !DILocalVariable(name: "dev", arg: 1, scope: !12633, file: !1005, line: 216, type: !1762)
!12636 = !DILocalVariable(name: "sys", arg: 2, scope: !12633, file: !1005, line: 217, type: !1097)
!12637 = !DILocalVariable(name: "rate", arg: 3, scope: !12633, file: !1005, line: 218, type: !1055)
!12638 = !DILocalVariable(name: "api", scope: !12633, file: !1005, line: 220, type: !1814)
!12639 = !DILocation(line: 0, scope: !12633)
!12640 = !DILocation(line: 221, column: 49, scope: !12633)
!12641 = !DILocation(line: 223, column: 11, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12633, file: !1005, line: 223, column: 6)
!12643 = !DILocation(line: 223, column: 20, scope: !12642)
!12644 = !DILocation(line: 223, column: 6, scope: !12633)
!12645 = !DILocation(line: 227, column: 9, scope: !12633)
!12646 = !DILocation(line: 227, column: 2, scope: !12633)
!12647 = !DILocation(line: 228, column: 1, scope: !12633)
!12648 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3604, file: !3604, line: 175, type: !3605, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12649)
!12649 = !{!12650}
!12650 = !DILocalVariable(name: "level", arg: 1, scope: !12648, file: !3604, line: 175, type: !125)
!12651 = !DILocation(line: 0, scope: !12648)
!12652 = !DILocation(line: 177, column: 2, scope: !12648)
!12653 = !DILocation(line: 189, column: 1, scope: !12648)
!12654 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12483, file: !12483, line: 615, type: !12655, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12657)
!12655 = !DISubroutineType(types: !12656)
!12656 = !{null, !1803, !208}
!12657 = !{!12658, !12659}
!12658 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12654, file: !12483, line: 615, type: !1803)
!12659 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12654, file: !12483, line: 615, type: !208)
!12660 = !DILocation(line: 0, scope: !12654)
!12661 = !DILocation(line: 617, column: 3, scope: !12654)
!12662 = !DILocation(line: 618, column: 1, scope: !12654)
!12663 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12483, file: !12483, line: 1020, type: !12664, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12666)
!12664 = !DISubroutineType(types: !12665)
!12665 = !{null, !1803, !208, !208, !208}
!12666 = !{!12667, !12668, !12669, !12670}
!12667 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12663, file: !12483, line: 1020, type: !1803)
!12668 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12663, file: !12483, line: 1020, type: !208)
!12669 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12663, file: !12483, line: 1020, type: !208)
!12670 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12663, file: !12483, line: 1021, type: !208)
!12671 = !DILocation(line: 0, scope: !12663)
!12672 = !DILocation(line: 1029, column: 30, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !12483, line: 1028, column: 3)
!12674 = distinct !DILexicalBlock(scope: !12663, file: !12483, line: 1023, column: 7)
!12675 = !DILocation(line: 1029, column: 19, scope: !12673)
!12676 = !DILocation(line: 1029, column: 13, scope: !12673)
!12677 = !DILocation(line: 1029, column: 17, scope: !12673)
!12678 = !DILocation(line: 1031, column: 1, scope: !12663)
!12679 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12483, file: !12483, line: 949, type: !12655, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12680)
!12680 = !{!12681, !12682}
!12681 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12679, file: !12483, line: 949, type: !1803)
!12682 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12679, file: !12483, line: 949, type: !208)
!12683 = !DILocation(line: 0, scope: !12679)
!12684 = !DILocation(line: 951, column: 3, scope: !12679)
!12685 = !DILocation(line: 952, column: 1, scope: !12679)
!12686 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12483, file: !12483, line: 588, type: !12655, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12687)
!12687 = !{!12688, !12689}
!12688 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12686, file: !12483, line: 588, type: !1803)
!12689 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12686, file: !12483, line: 588, type: !208)
!12690 = !DILocation(line: 0, scope: !12686)
!12691 = !DILocation(line: 590, column: 3, scope: !12686)
!12692 = !DILocation(line: 591, column: 1, scope: !12686)
!12693 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12483, file: !12483, line: 805, type: !12655, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12694)
!12694 = !{!12695, !12696}
!12695 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12693, file: !12483, line: 805, type: !1803)
!12696 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12693, file: !12483, line: 805, type: !208)
!12697 = !DILocation(line: 0, scope: !12693)
!12698 = !DILocation(line: 807, column: 3, scope: !12693)
!12699 = !DILocation(line: 808, column: 1, scope: !12693)
!12700 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12483, file: !12483, line: 532, type: !12655, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12701)
!12701 = !{!12702, !12703}
!12702 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12700, file: !12483, line: 532, type: !1803)
!12703 = !DILocalVariable(name: "Parity", arg: 2, scope: !12700, file: !12483, line: 532, type: !208)
!12704 = !DILocation(line: 0, scope: !12700)
!12705 = !DILocation(line: 534, column: 3, scope: !12700)
!12706 = !DILocation(line: 535, column: 1, scope: !12700)
!12707 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12483, file: !12483, line: 1770, type: !12484, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12708)
!12708 = !{!12709}
!12709 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12707, file: !12483, line: 1770, type: !1803)
!12710 = !DILocation(line: 0, scope: !12707)
!12711 = !DILocation(line: 1772, column: 11, scope: !12707)
!12712 = !DILocation(line: 1772, column: 46, scope: !12707)
!12713 = !DILocation(line: 1772, column: 3, scope: !12707)
!12714 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12483, file: !12483, line: 1737, type: !12484, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12715)
!12715 = !{!12716}
!12716 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12714, file: !12483, line: 1737, type: !1803)
!12717 = !DILocation(line: 0, scope: !12714)
!12718 = !DILocation(line: 1739, column: 11, scope: !12714)
!12719 = !DILocation(line: 1739, column: 3, scope: !12714)
!12720 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12483, file: !12483, line: 1748, type: !12484, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12721)
!12721 = !{!12722}
!12722 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12720, file: !12483, line: 1748, type: !1803)
!12723 = !DILocation(line: 0, scope: !12720)
!12724 = !DILocation(line: 1750, column: 11, scope: !12720)
!12725 = !DILocation(line: 1750, column: 45, scope: !12720)
!12726 = !DILocation(line: 1750, column: 3, scope: !12720)
!12727 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12483, file: !12483, line: 1827, type: !12484, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12728)
!12728 = !{!12729}
!12729 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12727, file: !12483, line: 1827, type: !1803)
!12730 = !DILocation(line: 0, scope: !12727)
!12731 = !DILocation(line: 1829, column: 11, scope: !12727)
!12732 = !DILocation(line: 1829, column: 46, scope: !12727)
!12733 = !DILocation(line: 1829, column: 3, scope: !12727)
!12734 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12483, file: !12483, line: 1992, type: !12546, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12735)
!12735 = !{!12736}
!12736 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12734, file: !12483, line: 1992, type: !1803)
!12737 = !DILocation(line: 0, scope: !12734)
!12738 = !DILocation(line: 1994, column: 3, scope: !12734)
!12739 = !DILocation(line: 1995, column: 1, scope: !12734)
!12740 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12483, file: !12483, line: 1934, type: !12546, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12741)
!12741 = !{!12742, !12743}
!12742 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12740, file: !12483, line: 1934, type: !1803)
!12743 = !DILocalVariable(name: "tmpreg", scope: !12740, file: !12483, line: 1936, type: !423)
!12744 = !DILocation(line: 0, scope: !12740)
!12745 = !DILocation(line: 1936, column: 3, scope: !12740)
!12746 = !DILocation(line: 1936, column: 17, scope: !12740)
!12747 = !DILocation(line: 1937, column: 20, scope: !12740)
!12748 = !DILocation(line: 1937, column: 10, scope: !12740)
!12749 = !DILocation(line: 1938, column: 10, scope: !12740)
!12750 = !DILocation(line: 1939, column: 20, scope: !12740)
!12751 = !DILocation(line: 1939, column: 10, scope: !12740)
!12752 = !DILocation(line: 1940, column: 10, scope: !12740)
!12753 = !DILocation(line: 1941, column: 1, scope: !12740)
!12754 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12483, file: !12483, line: 1877, type: !12546, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12755)
!12755 = !{!12756, !12757}
!12756 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12754, file: !12483, line: 1877, type: !1803)
!12757 = !DILocalVariable(name: "tmpreg", scope: !12754, file: !12483, line: 1879, type: !423)
!12758 = !DILocation(line: 0, scope: !12754)
!12759 = !DILocation(line: 1879, column: 3, scope: !12754)
!12760 = !DILocation(line: 1879, column: 17, scope: !12754)
!12761 = !DILocation(line: 1880, column: 20, scope: !12754)
!12762 = !DILocation(line: 1880, column: 10, scope: !12754)
!12763 = !DILocation(line: 1881, column: 10, scope: !12754)
!12764 = !DILocation(line: 1882, column: 20, scope: !12754)
!12765 = !DILocation(line: 1882, column: 10, scope: !12754)
!12766 = !DILocation(line: 1883, column: 10, scope: !12754)
!12767 = !DILocation(line: 1884, column: 1, scope: !12754)
!12768 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12483, file: !12483, line: 1896, type: !12546, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12769)
!12769 = !{!12770, !12771}
!12770 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12768, file: !12483, line: 1896, type: !1803)
!12771 = !DILocalVariable(name: "tmpreg", scope: !12768, file: !12483, line: 1898, type: !423)
!12772 = !DILocation(line: 0, scope: !12768)
!12773 = !DILocation(line: 1898, column: 3, scope: !12768)
!12774 = !DILocation(line: 1898, column: 17, scope: !12768)
!12775 = !DILocation(line: 1899, column: 20, scope: !12768)
!12776 = !DILocation(line: 1899, column: 10, scope: !12768)
!12777 = !DILocation(line: 1900, column: 10, scope: !12768)
!12778 = !DILocation(line: 1901, column: 20, scope: !12768)
!12779 = !DILocation(line: 1901, column: 10, scope: !12768)
!12780 = !DILocation(line: 1902, column: 10, scope: !12768)
!12781 = !DILocation(line: 1903, column: 1, scope: !12768)
!12782 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12483, file: !12483, line: 1915, type: !12546, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12783)
!12783 = !{!12784, !12785}
!12784 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12782, file: !12483, line: 1915, type: !1803)
!12785 = !DILocalVariable(name: "tmpreg", scope: !12782, file: !12483, line: 1917, type: !423)
!12786 = !DILocation(line: 0, scope: !12782)
!12787 = !DILocation(line: 1917, column: 3, scope: !12782)
!12788 = !DILocation(line: 1917, column: 17, scope: !12782)
!12789 = !DILocation(line: 1918, column: 20, scope: !12782)
!12790 = !DILocation(line: 1918, column: 10, scope: !12782)
!12791 = !DILocation(line: 1919, column: 10, scope: !12782)
!12792 = !DILocation(line: 1920, column: 20, scope: !12782)
!12793 = !DILocation(line: 1920, column: 10, scope: !12782)
!12794 = !DILocation(line: 1921, column: 10, scope: !12782)
!12795 = !DILocation(line: 1922, column: 1, scope: !12782)
!12796 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12483, file: !12483, line: 1814, type: !12484, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12797)
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12796, file: !12483, line: 1814, type: !1803)
!12799 = !DILocation(line: 0, scope: !12796)
!12800 = !DILocation(line: 1816, column: 11, scope: !12796)
!12801 = !DILocation(line: 1816, column: 46, scope: !12796)
!12802 = !DILocation(line: 1816, column: 3, scope: !12796)
!12803 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12483, file: !12483, line: 2426, type: !12804, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12806)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{null, !1803, !150}
!12806 = !{!12807, !12808}
!12807 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12803, file: !12483, line: 2426, type: !1803)
!12808 = !DILocalVariable(name: "Value", arg: 2, scope: !12803, file: !12483, line: 2426, type: !150)
!12809 = !DILocation(line: 0, scope: !12803)
!12810 = !DILocation(line: 2428, column: 16, scope: !12803)
!12811 = !DILocation(line: 2428, column: 11, scope: !12803)
!12812 = !DILocation(line: 2428, column: 14, scope: !12803)
!12813 = !DILocation(line: 2429, column: 1, scope: !12803)
!12814 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12483, file: !12483, line: 1792, type: !12484, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12815)
!12815 = !{!12816}
!12816 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12814, file: !12483, line: 1792, type: !1803)
!12817 = !DILocation(line: 0, scope: !12814)
!12818 = !DILocation(line: 1794, column: 11, scope: !12814)
!12819 = !DILocation(line: 1794, column: 47, scope: !12814)
!12820 = !DILocation(line: 1794, column: 3, scope: !12814)
!12821 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12483, file: !12483, line: 2403, type: !12822, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12824)
!12822 = !DISubroutineType(types: !12823)
!12823 = !{!150, !1803}
!12824 = !{!12825}
!12825 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12821, file: !12483, line: 2403, type: !1803)
!12826 = !DILocation(line: 0, scope: !12821)
!12827 = !DILocation(line: 2405, column: 20, scope: !12821)
!12828 = !DILocation(line: 2405, column: 10, scope: !12821)
!12829 = !DILocation(line: 2405, column: 3, scope: !12821)
!12830 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1859, file: !1859, line: 1583, type: !1783, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12831)
!12831 = !{!12832, !12833, !12834, !12835, !12836, !12837}
!12832 = !DILocalVariable(name: "dev", arg: 1, scope: !12830, file: !1859, line: 1583, type: !1762)
!12833 = !DILocalVariable(name: "config", scope: !12830, file: !1859, line: 1585, type: !12174)
!12834 = !DILocalVariable(name: "data", scope: !12830, file: !1859, line: 1586, type: !12297)
!12835 = !DILocalVariable(name: "ll_parity", scope: !12830, file: !1859, line: 1587, type: !208)
!12836 = !DILocalVariable(name: "ll_datawidth", scope: !12830, file: !1859, line: 1588, type: !208)
!12837 = !DILocalVariable(name: "err", scope: !12830, file: !1859, line: 1589, type: !125)
!12838 = !DILocation(line: 0, scope: !12830)
!12839 = !DILocation(line: 1585, column: 48, scope: !12830)
!12840 = !DILocation(line: 1586, column: 38, scope: !12830)
!12841 = !DILocation(line: 1591, column: 2, scope: !12830)
!12842 = !DILocation(line: 1593, column: 29, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12830, file: !1859, line: 1593, column: 6)
!12844 = !DILocation(line: 1593, column: 7, scope: !12843)
!12845 = !DILocation(line: 1593, column: 6, scope: !12830)
!12846 = !DILocation(line: 1594, column: 3, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !1859, line: 1594, column: 3)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !1859, line: 1594, column: 3)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !1859, line: 1594, column: 3)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !1859, line: 1594, column: 3)
!12851 = distinct !DILexicalBlock(scope: !12843, file: !1859, line: 1593, column: 37)
!12852 = !DILocation(line: 1595, column: 3, scope: !12851)
!12853 = !DILocation(line: 1599, column: 31, scope: !12830)
!12854 = !DILocation(line: 1599, column: 71, scope: !12830)
!12855 = !DILocation(line: 1599, column: 8, scope: !12830)
!12856 = !DILocation(line: 1600, column: 10, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12830, file: !1859, line: 1600, column: 6)
!12858 = !DILocation(line: 1600, column: 6, scope: !12830)
!12859 = !DILocation(line: 1601, column: 3, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12861, file: !1859, line: 1601, column: 3)
!12861 = distinct !DILexicalBlock(scope: !12862, file: !1859, line: 1601, column: 3)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !1859, line: 1601, column: 3)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !1859, line: 1601, column: 3)
!12864 = distinct !DILexicalBlock(scope: !12857, file: !1859, line: 1600, column: 16)
!12865 = !DILocation(line: 1602, column: 3, scope: !12864)
!12866 = !DILocation(line: 1616, column: 36, scope: !12830)
!12867 = !DILocation(line: 1616, column: 8, scope: !12830)
!12868 = !DILocation(line: 1617, column: 10, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12830, file: !1859, line: 1617, column: 6)
!12870 = !DILocation(line: 1617, column: 6, scope: !12830)
!12871 = !DILocation(line: 1621, column: 27, scope: !12830)
!12872 = !DILocation(line: 1621, column: 2, scope: !12830)
!12873 = !DILocation(line: 1624, column: 40, scope: !12830)
!12874 = !DILocation(line: 1624, column: 2, scope: !12830)
!12875 = !DILocation(line: 1630, column: 14, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12830, file: !1859, line: 1630, column: 6)
!12877 = !DILocation(line: 1630, column: 6, scope: !12830)
!12878 = !DILocation(line: 1640, column: 4, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12880, file: !1859, line: 1640, column: 4)
!12880 = distinct !DILexicalBlock(scope: !12881, file: !1859, line: 1640, column: 4)
!12881 = distinct !DILexicalBlock(scope: !12882, file: !1859, line: 1640, column: 4)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !1859, line: 1640, column: 4)
!12883 = distinct !DILexicalBlock(scope: !12884, file: !1859, line: 1639, column: 28)
!12884 = distinct !DILexicalBlock(scope: !12885, file: !1859, line: 1639, column: 7)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !1859, line: 1638, column: 9)
!12886 = distinct !DILexicalBlock(scope: !12876, file: !1859, line: 1634, column: 13)
!12887 = !DILocation(line: 0, scope: !12876)
!12888 = !DILocation(line: 1649, column: 35, scope: !12830)
!12889 = !DILocation(line: 1649, column: 2, scope: !12830)
!12890 = !DILocation(line: 1654, column: 14, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12830, file: !1859, line: 1654, column: 6)
!12892 = !DILocation(line: 1654, column: 6, scope: !12830)
!12893 = !DILocation(line: 1655, column: 3, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12891, file: !1859, line: 1654, column: 31)
!12895 = !DILocation(line: 1656, column: 2, scope: !12894)
!12896 = !DILocation(line: 1659, column: 37, scope: !12830)
!12897 = !DILocation(line: 1659, column: 2, scope: !12830)
!12898 = !DILocation(line: 1662, column: 14, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12830, file: !1859, line: 1662, column: 6)
!12900 = !DILocation(line: 1662, column: 6, scope: !12830)
!12901 = !DILocation(line: 1663, column: 37, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12899, file: !1859, line: 1662, column: 27)
!12903 = !DILocation(line: 1663, column: 3, scope: !12902)
!12904 = !DILocation(line: 1664, column: 2, scope: !12902)
!12905 = !DILocation(line: 1684, column: 26, scope: !12830)
!12906 = !DILocation(line: 1684, column: 2, scope: !12830)
!12907 = !DILocation(line: 1722, column: 2, scope: !12830)
!12908 = !DILocation(line: 1724, column: 1, scope: !12830)
!12909 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1859, file: !1859, line: 651, type: !12910, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12912)
!12910 = !DISubroutineType(types: !12911)
!12911 = !{null, !1762}
!12912 = !{!12913, !12914, !12915}
!12913 = !DILocalVariable(name: "dev", arg: 1, scope: !12909, file: !1859, line: 651, type: !1762)
!12914 = !DILocalVariable(name: "data", scope: !12909, file: !1859, line: 653, type: !12297)
!12915 = !DILocalVariable(name: "clk", scope: !12909, file: !1859, line: 654, type: !12916)
!12916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!12917 = !DILocation(line: 0, scope: !12909)
!12918 = !DILocation(line: 653, column: 38, scope: !12909)
!12919 = !DILocation(line: 656, column: 8, scope: !12909)
!12920 = !DILocation(line: 656, column: 14, scope: !12909)
!12921 = !DILocation(line: 657, column: 1, scope: !12909)
!12922 = distinct !DISubprogram(name: "device_is_ready", scope: !4345, file: !4345, line: 47, type: !12923, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12925)
!12923 = !DISubroutineType(types: !12924)
!12924 = !{!153, !1762}
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "dev", arg: 1, scope: !12922, file: !4345, line: 47, type: !1762)
!12927 = !DILocation(line: 0, scope: !12922)
!12928 = !DILocation(line: 55, column: 2, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12922, file: !4345, line: 55, column: 2)
!12930 = !{i64 2155753203}
!12931 = !DILocation(line: 56, column: 9, scope: !12922)
!12932 = !DILocation(line: 56, column: 2, scope: !12922)
!12933 = distinct !DISubprogram(name: "clock_control_on", scope: !1005, file: !1005, line: 123, type: !1821, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12934)
!12934 = !{!12935, !12936, !12937}
!12935 = !DILocalVariable(name: "dev", arg: 1, scope: !12933, file: !1005, line: 123, type: !1762)
!12936 = !DILocalVariable(name: "sys", arg: 2, scope: !12933, file: !1005, line: 124, type: !1097)
!12937 = !DILocalVariable(name: "api", scope: !12933, file: !1005, line: 126, type: !1814)
!12938 = !DILocation(line: 0, scope: !12933)
!12939 = !DILocation(line: 127, column: 49, scope: !12933)
!12940 = !DILocation(line: 129, column: 14, scope: !12933)
!12941 = !DILocation(line: 129, column: 9, scope: !12933)
!12942 = !DILocation(line: 129, column: 2, scope: !12933)
!12943 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1929, file: !1929, line: 342, type: !12944, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12946)
!12944 = !DISubroutineType(types: !12945)
!12945 = !{!125, !1926, !150}
!12946 = !{!12947, !12948, !12949, !12950}
!12947 = !DILocalVariable(name: "config", arg: 1, scope: !12943, file: !1929, line: 342, type: !1926)
!12948 = !DILocalVariable(name: "id", arg: 2, scope: !12943, file: !1929, line: 343, type: !150)
!12949 = !DILocalVariable(name: "ret", scope: !12943, file: !1929, line: 345, type: !125)
!12950 = !DILocalVariable(name: "state", scope: !12943, file: !1929, line: 346, type: !1932)
!12951 = !DILocation(line: 0, scope: !12943)
!12952 = !DILocation(line: 346, column: 2, scope: !12943)
!12953 = !DILocation(line: 348, column: 8, scope: !12943)
!12954 = !DILocation(line: 349, column: 10, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12943, file: !1929, line: 349, column: 6)
!12956 = !DILocation(line: 349, column: 6, scope: !12943)
!12957 = !DILocation(line: 353, column: 44, scope: !12943)
!12958 = !DILocation(line: 353, column: 9, scope: !12943)
!12959 = !DILocation(line: 353, column: 2, scope: !12943)
!12960 = !DILocation(line: 354, column: 1, scope: !12943)
!12961 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12483, file: !12483, line: 497, type: !12655, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12962)
!12962 = !{!12963, !12964, !12965}
!12963 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12961, file: !12483, line: 497, type: !1803)
!12964 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12961, file: !12483, line: 497, type: !208)
!12965 = !DILocalVariable(name: "val", scope: !12966, file: !12483, line: 499, type: !208)
!12966 = distinct !DILexicalBlock(scope: !12961, file: !12483, line: 499, column: 3)
!12967 = !DILocation(line: 0, scope: !12961)
!12968 = !DILocation(line: 499, column: 3, scope: !12966)
!12969 = !DILocalVariable(name: "addr", arg: 1, scope: !12970, file: !8445, line: 476, type: !1855)
!12970 = distinct !DISubprogram(name: "__LDREXW", scope: !8445, file: !8445, line: 476, type: !12971, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12973)
!12971 = !DISubroutineType(types: !12972)
!12972 = !{!208, !1855}
!12973 = !{!12969, !12974}
!12974 = !DILocalVariable(name: "result", scope: !12970, file: !8445, line: 478, type: !208)
!12975 = !DILocation(line: 0, scope: !12970, inlinedAt: !12976)
!12976 = distinct !DILocation(line: 499, column: 3, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12966, file: !12483, line: 499, column: 3)
!12978 = !DILocation(line: 480, column: 4, scope: !12970, inlinedAt: !12976)
!12979 = !{i64 4144496}
!12980 = !DILocation(line: 499, column: 3, scope: !12977)
!12981 = !DILocation(line: 0, scope: !12966)
!12982 = !DILocalVariable(name: "value", arg: 1, scope: !12983, file: !8445, line: 527, type: !208)
!12983 = distinct !DISubprogram(name: "__STREXW", scope: !8445, file: !8445, line: 527, type: !12984, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12986)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{!208, !208, !1855}
!12986 = !{!12982, !12987, !12988}
!12987 = !DILocalVariable(name: "addr", arg: 2, scope: !12983, file: !8445, line: 527, type: !1855)
!12988 = !DILocalVariable(name: "result", scope: !12983, file: !8445, line: 529, type: !208)
!12989 = !DILocation(line: 0, scope: !12983, inlinedAt: !12990)
!12990 = distinct !DILocation(line: 499, column: 3, scope: !12966)
!12991 = !DILocation(line: 531, column: 4, scope: !12983, inlinedAt: !12990)
!12992 = !{i64 4145932}
!12993 = distinct !{!12993, !12968, !12968}
!12994 = !DILocation(line: 500, column: 1, scope: !12961)
!12995 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12483, file: !12483, line: 850, type: !12664, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !12996)
!12996 = !{!12997, !12998, !12999, !13000}
!12997 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12995, file: !12483, line: 850, type: !1803)
!12998 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12995, file: !12483, line: 850, type: !208)
!12999 = !DILocalVariable(name: "Parity", arg: 3, scope: !12995, file: !12483, line: 850, type: !208)
!13000 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12995, file: !12483, line: 851, type: !208)
!13001 = !DILocation(line: 0, scope: !12995)
!13002 = !DILocation(line: 853, column: 3, scope: !12995)
!13003 = !DILocation(line: 854, column: 3, scope: !12995)
!13004 = !DILocation(line: 855, column: 1, scope: !12995)
!13005 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12483, file: !12483, line: 1337, type: !12546, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !13006)
!13006 = !{!13007}
!13007 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13005, file: !12483, line: 1337, type: !1803)
!13008 = !DILocation(line: 0, scope: !13005)
!13009 = !DILocation(line: 1339, column: 3, scope: !13005)
!13010 = !DILocation(line: 1340, column: 1, scope: !13005)
!13011 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1929, file: !1929, line: 316, type: !13012, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !13014)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!125, !1926, !1932}
!13014 = !{!13015, !13016, !13017}
!13015 = !DILocalVariable(name: "config", arg: 1, scope: !13011, file: !1929, line: 317, type: !1926)
!13016 = !DILocalVariable(name: "state", arg: 2, scope: !13011, file: !1929, line: 318, type: !1932)
!13017 = !DILocalVariable(name: "reg", scope: !13011, file: !1929, line: 320, type: !22)
!13018 = !DILocation(line: 0, scope: !13011)
!13019 = !DILocation(line: 329, column: 39, scope: !13011)
!13020 = !DILocation(line: 329, column: 52, scope: !13011)
!13021 = !DILocation(line: 329, column: 9, scope: !13011)
!13022 = !DILocation(line: 329, column: 2, scope: !13011)
!13023 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12923, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !13024)
!13024 = !{!13025}
!13025 = !DILocalVariable(name: "dev", arg: 1, scope: !13023, file: !137, line: 730, type: !1762)
!13026 = !DILocation(line: 0, scope: !13023)
!13027 = !DILocation(line: 732, column: 9, scope: !13023)
!13028 = !DILocation(line: 732, column: 2, scope: !13023)
!13029 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2100, file: !2100, line: 270, type: !2106, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13030)
!13030 = !{!13031}
!13031 = !DILocalVariable(name: "dev", arg: 1, scope: !13029, file: !2100, line: 270, type: !2108)
!13032 = !DILocation(line: 0, scope: !13029)
!13033 = !DILocation(line: 274, column: 2, scope: !13029)
!13034 = !DILocation(line: 275, column: 12, scope: !13029)
!13035 = !DILocation(line: 276, column: 15, scope: !13029)
!13036 = !DILocation(line: 277, column: 16, scope: !13029)
!13037 = !DILocation(line: 278, column: 15, scope: !13029)
!13038 = !DILocation(line: 279, column: 16, scope: !13029)
!13039 = !DILocation(line: 282, column: 2, scope: !13029)
!13040 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8479, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13041)
!13041 = !{!13042, !13043}
!13042 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13040, file: !680, line: 1814, type: !945)
!13043 = !DILocalVariable(name: "priority", arg: 2, scope: !13040, file: !680, line: 1814, type: !208)
!13044 = !DILocation(line: 0, scope: !13040)
!13045 = !DILocation(line: 1822, column: 46, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !680, line: 1821, column: 3)
!13047 = distinct !DILexicalBlock(scope: !13040, file: !680, line: 1816, column: 7)
!13048 = !DILocation(line: 1824, column: 1, scope: !13040)
!13049 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2100, file: !2100, line: 118, type: !8382, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13050)
!13050 = !{!13051, !13052}
!13051 = !DILocalVariable(name: "arg", arg: 1, scope: !13049, file: !2100, line: 118, type: !124)
!13052 = !DILocalVariable(name: "dticks", scope: !13049, file: !2100, line: 121, type: !208)
!13053 = !DILocation(line: 0, scope: !13049)
!13054 = !DILocation(line: 124, column: 2, scope: !13049)
!13055 = !DILocation(line: 129, column: 17, scope: !13049)
!13056 = !DILocation(line: 129, column: 14, scope: !13049)
!13057 = !DILocation(line: 130, column: 15, scope: !13049)
!13058 = !DILocation(line: 145, column: 27, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !2100, line: 132, column: 16)
!13060 = distinct !DILexicalBlock(scope: !13049, file: !2100, line: 132, column: 6)
!13061 = !DILocation(line: 145, column: 25, scope: !13059)
!13062 = !DILocation(line: 145, column: 45, scope: !13059)
!13063 = !DILocation(line: 146, column: 30, scope: !13059)
!13064 = !DILocation(line: 146, column: 20, scope: !13059)
!13065 = !DILocation(line: 147, column: 3, scope: !13059)
!13066 = !DILocation(line: 151, column: 2, scope: !13049)
!13067 = !DILocation(line: 152, column: 1, scope: !13049)
!13068 = distinct !DISubprogram(name: "elapsed", scope: !2100, file: !2100, line: 85, type: !8526, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13069)
!13069 = !{!13070, !13071, !13072}
!13070 = !DILocalVariable(name: "val1", scope: !13068, file: !2100, line: 87, type: !208)
!13071 = !DILocalVariable(name: "ctrl", scope: !13068, file: !2100, line: 88, type: !208)
!13072 = !DILocalVariable(name: "val2", scope: !13068, file: !2100, line: 89, type: !208)
!13073 = !DILocation(line: 87, column: 27, scope: !13068)
!13074 = !DILocation(line: 0, scope: !13068)
!13075 = !DILocation(line: 88, column: 27, scope: !13068)
!13076 = !DILocation(line: 89, column: 27, scope: !13068)
!13077 = !DILocation(line: 105, column: 12, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13068, file: !2100, line: 105, column: 6)
!13079 = !DILocation(line: 106, column: 6, scope: !13078)
!13080 = !DILocation(line: 107, column: 16, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13078, file: !2100, line: 106, column: 24)
!13082 = !DILocation(line: 111, column: 18, scope: !13081)
!13083 = !DILocation(line: 112, column: 2, scope: !13081)
!13084 = !DILocation(line: 114, column: 20, scope: !13068)
!13085 = !DILocation(line: 114, column: 30, scope: !13068)
!13086 = !DILocation(line: 114, column: 28, scope: !13068)
!13087 = !DILocation(line: 114, column: 2, scope: !13068)
!13088 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2100, file: !2100, line: 154, type: !13089, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13091)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{null, !919, !153}
!13091 = !{!13092, !13093, !13094, !13095, !13096, !13097, !13098, !13103, !13104}
!13092 = !DILocalVariable(name: "ticks", arg: 1, scope: !13088, file: !2100, line: 154, type: !919)
!13093 = !DILocalVariable(name: "idle", arg: 2, scope: !13088, file: !2100, line: 154, type: !153)
!13094 = !DILocalVariable(name: "delay", scope: !13088, file: !2100, line: 169, type: !208)
!13095 = !DILocalVariable(name: "val1", scope: !13088, file: !2100, line: 170, type: !208)
!13096 = !DILocalVariable(name: "val2", scope: !13088, file: !2100, line: 170, type: !208)
!13097 = !DILocalVariable(name: "last_load_", scope: !13088, file: !2100, line: 171, type: !208)
!13098 = !DILocalVariable(name: "key", scope: !13088, file: !2100, line: 176, type: !13099)
!13099 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !13100)
!13100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !13101)
!13101 = !{!13102}
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13100, file: !638, line: 33, baseType: !125, size: 32)
!13103 = !DILocalVariable(name: "pending", scope: !13088, file: !2100, line: 178, type: !208)
!13104 = !DILocalVariable(name: "unannounced", scope: !13088, file: !2100, line: 185, type: !208)
!13105 = !DILocation(line: 0, scope: !13088)
!13106 = !DILocation(line: 162, column: 49, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13088, file: !2100, line: 162, column: 6)
!13108 = !DILocation(line: 163, column: 17, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13107, file: !2100, line: 162, column: 78)
!13110 = !DILocation(line: 164, column: 13, scope: !13109)
!13111 = !DILocation(line: 165, column: 3, scope: !13109)
!13112 = !DILocation(line: 171, column: 24, scope: !13088)
!13113 = !DILocation(line: 173, column: 10, scope: !13088)
!13114 = !DILocation(line: 174, column: 10, scope: !13088)
!13115 = !DILocalVariable(name: "l", arg: 1, scope: !13116, file: !638, line: 136, type: !13119)
!13116 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !13117, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13120)
!13117 = !DISubroutineType(types: !13118)
!13118 = !{!13099, !13119}
!13119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!13120 = !{!13115, !13121}
!13121 = !DILocalVariable(name: "k", scope: !13116, file: !638, line: 139, type: !13099)
!13122 = !DILocation(line: 0, scope: !13116, inlinedAt: !13123)
!13123 = distinct !DILocation(line: 176, column: 25, scope: !13088)
!13124 = !DILocation(line: 55, column: 2, scope: !13125, inlinedAt: !13129)
!13125 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13126)
!13126 = !{!13127, !13128}
!13127 = !DILocalVariable(name: "key", scope: !13125, file: !6978, line: 44, type: !32)
!13128 = !DILocalVariable(name: "tmp", scope: !13125, file: !6978, line: 53, type: !32)
!13129 = distinct !DILocation(line: 145, column: 10, scope: !13116, inlinedAt: !13123)
!13130 = !{i64 2601304}
!13131 = !DILocation(line: 0, scope: !13125, inlinedAt: !13129)
!13132 = !DILocation(line: 178, column: 21, scope: !13088)
!13133 = !DILocation(line: 180, column: 18, scope: !13088)
!13134 = !DILocation(line: 182, column: 14, scope: !13088)
!13135 = !DILocation(line: 183, column: 15, scope: !13088)
!13136 = !DILocation(line: 185, column: 39, scope: !13088)
!13137 = !DILocation(line: 185, column: 37, scope: !13088)
!13138 = !DILocation(line: 187, column: 27, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13088, file: !2100, line: 187, column: 6)
!13140 = !DILocation(line: 187, column: 6, scope: !13088)
!13141 = !DILocation(line: 202, column: 27, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13139, file: !2100, line: 195, column: 9)
!13143 = !DILocation(line: 202, column: 48, scope: !13142)
!13144 = !DILocation(line: 203, column: 9, scope: !13142)
!13145 = !DILocation(line: 204, column: 11, scope: !13142)
!13146 = !DILocation(line: 205, column: 13, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13142, file: !2100, line: 205, column: 7)
!13148 = !DILocation(line: 205, column: 7, scope: !13142)
!13149 = !DILocation(line: 0, scope: !13139)
!13150 = !DILocation(line: 212, column: 18, scope: !13088)
!13151 = !DILocation(line: 214, column: 28, scope: !13088)
!13152 = !DILocation(line: 214, column: 16, scope: !13088)
!13153 = !DILocation(line: 215, column: 15, scope: !13088)
!13154 = !DILocation(line: 227, column: 11, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13088, file: !2100, line: 227, column: 6)
!13156 = !DILocation(line: 227, column: 6, scope: !13088)
!13157 = !DILocation(line: 228, column: 15, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13155, file: !2100, line: 227, column: 19)
!13159 = !DILocation(line: 228, column: 38, scope: !13158)
!13160 = !DILocation(line: 228, column: 24, scope: !13158)
!13161 = !DILocation(line: 229, column: 2, scope: !13158)
!13162 = !DILocation(line: 230, column: 24, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13155, file: !2100, line: 229, column: 9)
!13164 = !DILocation(line: 230, column: 15, scope: !13163)
!13165 = !DILocation(line: 0, scope: !13155)
!13166 = !DILocalVariable(name: "key", arg: 2, scope: !13167, file: !638, line: 190, type: !13099)
!13167 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !13168, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13170)
!13168 = !DISubroutineType(types: !13169)
!13169 = !{null, !13119, !13099}
!13170 = !{!13171, !13166}
!13171 = !DILocalVariable(name: "l", arg: 1, scope: !13167, file: !638, line: 189, type: !13119)
!13172 = !DILocation(line: 0, scope: !13167, inlinedAt: !13173)
!13173 = distinct !DILocation(line: 232, column: 2, scope: !13088)
!13174 = !DILocalVariable(name: "key", arg: 1, scope: !13175, file: !6978, line: 84, type: !32)
!13175 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13176)
!13176 = !{!13174}
!13177 = !DILocation(line: 0, scope: !13175, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 215, column: 2, scope: !13167, inlinedAt: !13173)
!13179 = !DILocation(line: 95, column: 2, scope: !13175, inlinedAt: !13178)
!13180 = !{i64 2602121}
!13181 = !DILocation(line: 234, column: 1, scope: !13088)
!13182 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2100, file: !2100, line: 236, type: !8526, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13183)
!13183 = !{!13184, !13185}
!13184 = !DILocalVariable(name: "key", scope: !13182, file: !2100, line: 242, type: !13099)
!13185 = !DILocalVariable(name: "cyc", scope: !13182, file: !2100, line: 243, type: !208)
!13186 = !DILocation(line: 0, scope: !13116, inlinedAt: !13187)
!13187 = distinct !DILocation(line: 242, column: 25, scope: !13182)
!13188 = !DILocation(line: 55, column: 2, scope: !13125, inlinedAt: !13189)
!13189 = distinct !DILocation(line: 145, column: 10, scope: !13116, inlinedAt: !13187)
!13190 = !DILocation(line: 0, scope: !13125, inlinedAt: !13189)
!13191 = !DILocation(line: 0, scope: !13182)
!13192 = !DILocation(line: 243, column: 17, scope: !13182)
!13193 = !DILocation(line: 243, column: 29, scope: !13182)
!13194 = !DILocation(line: 243, column: 27, scope: !13182)
!13195 = !DILocation(line: 243, column: 43, scope: !13182)
!13196 = !DILocation(line: 243, column: 41, scope: !13182)
!13197 = !DILocation(line: 0, scope: !13167, inlinedAt: !13198)
!13198 = distinct !DILocation(line: 245, column: 2, scope: !13182)
!13199 = !DILocation(line: 0, scope: !13175, inlinedAt: !13200)
!13200 = distinct !DILocation(line: 215, column: 2, scope: !13167, inlinedAt: !13198)
!13201 = !DILocation(line: 95, column: 2, scope: !13175, inlinedAt: !13200)
!13202 = !DILocation(line: 246, column: 13, scope: !13182)
!13203 = !DILocation(line: 246, column: 2, scope: !13182)
!13204 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2100, file: !2100, line: 249, type: !8526, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !13205)
!13205 = !{!13206, !13207}
!13206 = !DILocalVariable(name: "key", scope: !13204, file: !2100, line: 251, type: !13099)
!13207 = !DILocalVariable(name: "ret", scope: !13204, file: !2100, line: 252, type: !208)
!13208 = !DILocation(line: 0, scope: !13116, inlinedAt: !13209)
!13209 = distinct !DILocation(line: 251, column: 25, scope: !13204)
!13210 = !DILocation(line: 55, column: 2, scope: !13125, inlinedAt: !13211)
!13211 = distinct !DILocation(line: 145, column: 10, scope: !13116, inlinedAt: !13209)
!13212 = !DILocation(line: 0, scope: !13125, inlinedAt: !13211)
!13213 = !DILocation(line: 0, scope: !13204)
!13214 = !DILocation(line: 252, column: 17, scope: !13204)
!13215 = !DILocation(line: 252, column: 29, scope: !13204)
!13216 = !DILocation(line: 252, column: 27, scope: !13204)
!13217 = !DILocation(line: 0, scope: !13167, inlinedAt: !13218)
!13218 = distinct !DILocation(line: 254, column: 2, scope: !13204)
!13219 = !DILocation(line: 0, scope: !13175, inlinedAt: !13220)
!13220 = distinct !DILocation(line: 215, column: 2, scope: !13167, inlinedAt: !13218)
!13221 = !DILocation(line: 95, column: 2, scope: !13175, inlinedAt: !13220)
!13222 = !DILocation(line: 255, column: 2, scope: !13204)
!13223 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2100, file: !2100, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !639)
!13224 = !DILocation(line: 260, column: 6, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13223, file: !2100, line: 260, column: 6)
!13226 = !DILocation(line: 260, column: 16, scope: !13225)
!13227 = !DILocation(line: 260, column: 6, scope: !13223)
!13228 = !DILocation(line: 261, column: 17, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13225, file: !2100, line: 260, column: 34)
!13230 = !DILocation(line: 262, column: 2, scope: !13229)
!13231 = !DILocation(line: 263, column: 1, scope: !13223)
!13232 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2100, file: !2100, line: 265, type: !3440, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2022, retainedNodes: !639)
!13233 = !DILocation(line: 267, column: 16, scope: !13232)
!13234 = !DILocation(line: 268, column: 1, scope: !13232)
!13235 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13236, file: !13236, line: 9, type: !13237, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3247, retainedNodes: !13260)
!13236 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13237 = !DISubroutineType(types: !13238)
!13238 = !{!125, !13239, !150, !13259}
!13239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13240, size: 32)
!13240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13241)
!13241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1929, line: 60, size: 64, elements: !13242)
!13242 = !{!13243, !13258}
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13241, file: !1929, line: 69, baseType: !13244, size: 32)
!13244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13245, size: 32)
!13245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13246)
!13246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1929, line: 50, size: 64, elements: !13247)
!13247 = !{!13248, !13256, !13257}
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13246, file: !1929, line: 52, baseType: !13249, size: 32)
!13249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13250, size: 32)
!13250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13251)
!13251 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1940, line: 37, baseType: !13252)
!13252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1940, line: 32, size: 64, elements: !13253)
!13253 = !{!13254, !13255}
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13252, file: !1940, line: 34, baseType: !208, size: 32)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13252, file: !1940, line: 36, baseType: !208, size: 32, offset: 32)
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13246, file: !1929, line: 54, baseType: !150, size: 8, offset: 32)
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13246, file: !1929, line: 56, baseType: !150, size: 8, offset: 40)
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13241, file: !1929, line: 71, baseType: !150, size: 8, offset: 32)
!13259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13244, size: 32)
!13260 = !{!13261, !13262, !13263}
!13261 = !DILocalVariable(name: "config", arg: 1, scope: !13235, file: !13236, line: 9, type: !13239)
!13262 = !DILocalVariable(name: "id", arg: 2, scope: !13235, file: !13236, line: 9, type: !150)
!13263 = !DILocalVariable(name: "state", arg: 3, scope: !13235, file: !13236, line: 10, type: !13259)
!13264 = !DILocation(line: 0, scope: !13235)
!13265 = !DILocation(line: 12, column: 20, scope: !13235)
!13266 = !DILocation(line: 13, column: 27, scope: !13235)
!13267 = !DILocation(line: 13, column: 42, scope: !13235)
!13268 = !DILocation(line: 13, column: 19, scope: !13235)
!13269 = !DILocation(line: 13, column: 16, scope: !13235)
!13270 = !DILocation(line: 13, column: 2, scope: !13235)
!13271 = distinct !{!13271, !13270, !13272}
!13272 = !DILocation(line: 19, column: 2, scope: !13235)
!13273 = !DILocation(line: 14, column: 23, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13275, file: !13236, line: 14, column: 7)
!13275 = distinct !DILexicalBlock(scope: !13235, file: !13236, line: 13, column: 54)
!13276 = !DILocation(line: 14, column: 10, scope: !13274)
!13277 = !DILocation(line: 18, column: 11, scope: !13275)
!13278 = !DILocation(line: 14, column: 7, scope: !13275)
!13279 = !DILocation(line: 22, column: 1, scope: !13235)
!13280 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2217, file: !2217, line: 193, type: !13281, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13290)
!13281 = !DISubroutineType(types: !13282)
!13282 = !{!125, !13283, !150, !22}
!13283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13284, size: 32)
!13284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13285)
!13285 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1940, line: 37, baseType: !13286)
!13286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1940, line: 32, size: 64, elements: !13287)
!13287 = !{!13288, !13289}
!13288 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13286, file: !1940, line: 34, baseType: !208, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13286, file: !1940, line: 36, baseType: !208, size: 32, offset: 32)
!13290 = !{!13291, !13292, !13293, !13294, !13295, !13296, !13297, !13298, !13300}
!13291 = !DILocalVariable(name: "pins", arg: 1, scope: !13280, file: !2217, line: 193, type: !13283)
!13292 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13280, file: !2217, line: 193, type: !150)
!13293 = !DILocalVariable(name: "reg", arg: 3, scope: !13280, file: !2217, line: 194, type: !22)
!13294 = !DILocalVariable(name: "pin", scope: !13280, file: !2217, line: 196, type: !208)
!13295 = !DILocalVariable(name: "mux", scope: !13280, file: !2217, line: 196, type: !208)
!13296 = !DILocalVariable(name: "pin_cgf", scope: !13280, file: !2217, line: 197, type: !208)
!13297 = !DILocalVariable(name: "ret", scope: !13280, file: !2217, line: 198, type: !125)
!13298 = !DILocalVariable(name: "i", scope: !13299, file: !2217, line: 209, type: !150)
!13299 = distinct !DILexicalBlock(scope: !13280, file: !2217, line: 209, column: 2)
!13300 = !DILocalVariable(name: "gpio_out", scope: !13301, file: !2217, line: 239, type: !208)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !2217, line: 238, column: 55)
!13302 = distinct !DILexicalBlock(scope: !13303, file: !2217, line: 238, column: 14)
!13303 = distinct !DILexicalBlock(scope: !13304, file: !2217, line: 236, column: 14)
!13304 = distinct !DILexicalBlock(scope: !13305, file: !2217, line: 234, column: 7)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !2217, line: 209, column: 41)
!13306 = distinct !DILexicalBlock(scope: !13299, file: !2217, line: 209, column: 2)
!13307 = !DILocation(line: 0, scope: !13280)
!13308 = !DILocation(line: 0, scope: !13299)
!13309 = !DILocation(line: 209, column: 25, scope: !13306)
!13310 = !DILocation(line: 209, column: 2, scope: !13299)
!13311 = distinct !{!13311, !13310, !13312}
!13312 = !DILocation(line: 259, column: 2, scope: !13299)
!13313 = !DILocation(line: 210, column: 17, scope: !13305)
!13314 = !DILocation(line: 234, column: 7, scope: !13304)
!13315 = !DILocation(line: 234, column: 33, scope: !13304)
!13316 = !DILocation(line: 234, column: 7, scope: !13305)
!13317 = !DILocation(line: 235, column: 22, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13304, file: !2217, line: 234, column: 49)
!13319 = !DILocation(line: 235, column: 29, scope: !13318)
!13320 = !DILocation(line: 236, column: 3, scope: !13318)
!13321 = !DILocation(line: 236, column: 14, scope: !13304)
!13322 = !DILocation(line: 239, column: 32, scope: !13301)
!13323 = !DILocation(line: 0, scope: !13301)
!13324 = !DILocation(line: 241, column: 8, scope: !13301)
!13325 = !DILocation(line: 246, column: 3, scope: !13301)
!13326 = !DILocation(line: 252, column: 9, scope: !13305)
!13327 = !DILocation(line: 255, column: 9, scope: !13305)
!13328 = !DILocation(line: 256, column: 11, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13305, file: !2217, line: 256, column: 7)
!13330 = !DILocation(line: 209, column: 37, scope: !13306)
!13331 = !DILocation(line: 256, column: 7, scope: !13305)
!13332 = !DILocation(line: 262, column: 1, scope: !13280)
!13333 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2217, file: !2217, line: 176, type: !13334, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13336)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{!125, !208, !208, !208}
!13336 = !{!13337, !13338, !13339, !13340}
!13337 = !DILocalVariable(name: "pin", arg: 1, scope: !13333, file: !2217, line: 176, type: !208)
!13338 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13333, file: !2217, line: 176, type: !208)
!13339 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13333, file: !2217, line: 176, type: !208)
!13340 = !DILocalVariable(name: "port_device", scope: !13333, file: !2217, line: 178, type: !2147)
!13341 = !DILocation(line: 0, scope: !13333)
!13342 = !DILocation(line: 180, column: 22, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13333, file: !2217, line: 180, column: 6)
!13344 = !DILocation(line: 180, column: 6, scope: !13333)
!13345 = !DILocation(line: 180, column: 6, scope: !13343)
!13346 = !DILocation(line: 184, column: 16, scope: !13333)
!13347 = !DILocation(line: 186, column: 33, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13333, file: !2217, line: 186, column: 6)
!13349 = !DILocation(line: 186, column: 6, scope: !13333)
!13350 = !DILocation(line: 190, column: 43, scope: !13333)
!13351 = !DILocation(line: 190, column: 9, scope: !13333)
!13352 = !DILocation(line: 190, column: 2, scope: !13333)
!13353 = !DILocation(line: 191, column: 1, scope: !13333)
!13354 = distinct !DISubprogram(name: "device_is_ready", scope: !4345, file: !4345, line: 47, type: !13355, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13357)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{!153, !2147}
!13357 = !{!13358}
!13358 = !DILocalVariable(name: "dev", arg: 1, scope: !13354, file: !4345, line: 47, type: !2147)
!13359 = !DILocation(line: 0, scope: !13354)
!13360 = !DILocation(line: 55, column: 2, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13354, file: !4345, line: 55, column: 2)
!13362 = !{i64 2149835310}
!13363 = !DILocation(line: 56, column: 9, scope: !13354)
!13364 = !DILocation(line: 56, column: 2, scope: !13354)
!13365 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13355, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13366)
!13366 = !{!13367}
!13367 = !DILocalVariable(name: "dev", arg: 1, scope: !13365, file: !137, line: 730, type: !2147)
!13368 = !DILocation(line: 0, scope: !13365)
!13369 = !DILocation(line: 732, column: 9, scope: !13365)
!13370 = !DILocation(line: 732, column: 2, scope: !13365)
!13371 = distinct !DISubprogram(name: "SystemInit", scope: !2267, file: !2267, line: 167, type: !3440, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2225, retainedNodes: !639)
!13372 = !DILocation(line: 182, column: 1, scope: !13371)
!13373 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2267, file: !2267, line: 220, type: !3440, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2225, retainedNodes: !13374)
!13374 = !{!13375, !13376, !13377, !13378, !13379}
!13375 = !DILocalVariable(name: "tmp", scope: !13373, file: !2267, line: 222, type: !208)
!13376 = !DILocalVariable(name: "pllvco", scope: !13373, file: !2267, line: 222, type: !208)
!13377 = !DILocalVariable(name: "pllp", scope: !13373, file: !2267, line: 222, type: !208)
!13378 = !DILocalVariable(name: "pllsource", scope: !13373, file: !2267, line: 222, type: !208)
!13379 = !DILocalVariable(name: "pllm", scope: !13373, file: !2267, line: 222, type: !208)
!13380 = !DILocation(line: 0, scope: !13373)
!13381 = !DILocation(line: 225, column: 14, scope: !13373)
!13382 = !DILocation(line: 225, column: 19, scope: !13373)
!13383 = !DILocation(line: 227, column: 3, scope: !13373)
!13384 = !DILocation(line: 234, column: 7, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13373, file: !2267, line: 228, column: 3)
!13386 = !DILocation(line: 240, column: 25, scope: !13385)
!13387 = !DILocation(line: 241, column: 19, scope: !13385)
!13388 = !DILocation(line: 241, column: 27, scope: !13385)
!13389 = !DILocation(line: 243, column: 21, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13385, file: !2267, line: 243, column: 11)
!13391 = !DILocation(line: 0, scope: !13390)
!13392 = !DILocation(line: 254, column: 22, scope: !13385)
!13393 = !DILocation(line: 254, column: 62, scope: !13385)
!13394 = !DILocation(line: 255, column: 31, scope: !13385)
!13395 = !DILocation(line: 256, column: 7, scope: !13385)
!13396 = !DILocation(line: 0, scope: !13385)
!13397 = !DILocation(line: 263, column: 30, scope: !13373)
!13398 = !DILocation(line: 263, column: 52, scope: !13373)
!13399 = !DILocation(line: 263, column: 9, scope: !13373)
!13400 = !DILocation(line: 265, column: 19, scope: !13373)
!13401 = !DILocation(line: 266, column: 1, scope: !13373)
!13402 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13403, file: !13403, line: 200, type: !13404, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!13403 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13404 = !DISubroutineType(types: !13405)
!13405 = !{!13406}
!13406 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3253, line: 44, baseType: !3252)
!13407 = !DILocation(line: 202, column: 3, scope: !13402)
!13408 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13403, file: !13403, line: 219, type: !13409, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !13433)
!13409 = !DISubroutineType(types: !13410)
!13410 = !{!13406, !13411}
!13411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13412, size: 32)
!13412 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13413, line: 70, baseType: !13414)
!13413 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13413, line: 49, size: 384, elements: !13415)
!13415 = !{!13416, !13417, !13418, !13419, !13420, !13421, !13422}
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13414, file: !13413, line: 51, baseType: !208, size: 32)
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13414, file: !13413, line: 54, baseType: !208, size: 32, offset: 32)
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13414, file: !13413, line: 57, baseType: !208, size: 32, offset: 64)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13414, file: !13413, line: 60, baseType: !208, size: 32, offset: 96)
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13414, file: !13413, line: 63, baseType: !208, size: 32, offset: 128)
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13414, file: !13413, line: 66, baseType: !208, size: 32, offset: 160)
!13422 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13414, file: !13413, line: 69, baseType: !13423, size: 192, offset: 192)
!13423 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13424, line: 73, baseType: !13425)
!13424 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13424, line: 45, size: 192, elements: !13426)
!13426 = !{!13427, !13428, !13429, !13430, !13431, !13432}
!13427 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13425, file: !13424, line: 47, baseType: !208, size: 32)
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13425, file: !13424, line: 50, baseType: !208, size: 32, offset: 32)
!13429 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13425, file: !13424, line: 53, baseType: !208, size: 32, offset: 64)
!13430 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13425, file: !13424, line: 56, baseType: !208, size: 32, offset: 96)
!13431 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13425, file: !13424, line: 60, baseType: !208, size: 32, offset: 128)
!13432 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13425, file: !13424, line: 63, baseType: !208, size: 32, offset: 160)
!13433 = !{!13434, !13435, !13436, !13437, !13441}
!13434 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13408, file: !13403, line: 219, type: !13411)
!13435 = !DILocalVariable(name: "tickstart", scope: !13408, file: !13403, line: 221, type: !208)
!13436 = !DILocalVariable(name: "pll_config", scope: !13408, file: !13403, line: 221, type: !208)
!13437 = !DILocalVariable(name: "pwrclkchanged", scope: !13438, file: !13403, line: 391, type: !13440)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13403, line: 390, column: 3)
!13439 = distinct !DILexicalBlock(scope: !13408, file: !13403, line: 389, column: 6)
!13440 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1000, line: 188, baseType: !3259)
!13441 = !DILocalVariable(name: "tmpreg", scope: !13442, file: !13403, line: 400, type: !423)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !13403, line: 400, column: 7)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !13403, line: 399, column: 5)
!13444 = distinct !DILexicalBlock(scope: !13438, file: !13403, line: 398, column: 8)
!13445 = !DILocation(line: 0, scope: !13408)
!13446 = !DILocation(line: 224, column: 24, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13408, file: !13403, line: 224, column: 6)
!13448 = !DILocation(line: 224, column: 6, scope: !13408)
!13449 = !DILocation(line: 232, column: 27, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13408, file: !13403, line: 232, column: 6)
!13451 = !DILocation(line: 232, column: 43, scope: !13450)
!13452 = !DILocation(line: 232, column: 69, scope: !13450)
!13453 = !DILocation(line: 232, column: 6, scope: !13408)
!13454 = !DILocation(line: 237, column: 9, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !13403, line: 237, column: 8)
!13456 = distinct !DILexicalBlock(scope: !13450, file: !13403, line: 233, column: 3)
!13457 = !DILocation(line: 237, column: 39, scope: !13455)
!13458 = !DILocation(line: 237, column: 60, scope: !13455)
!13459 = !DILocation(line: 238, column: 9, scope: !13455)
!13460 = !DILocation(line: 238, column: 39, scope: !13455)
!13461 = !DILocation(line: 238, column: 60, scope: !13455)
!13462 = !DILocation(line: 238, column: 70, scope: !13455)
!13463 = !DILocation(line: 238, column: 78, scope: !13455)
!13464 = !DILocation(line: 238, column: 100, scope: !13455)
!13465 = !DILocation(line: 237, column: 8, scope: !13456)
!13466 = !DILocation(line: 240, column: 11, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !13403, line: 240, column: 10)
!13468 = distinct !DILexicalBlock(scope: !13455, file: !13403, line: 239, column: 5)
!13469 = !DILocation(line: 240, column: 57, scope: !13467)
!13470 = !DILocation(line: 240, column: 80, scope: !13467)
!13471 = !DILocation(line: 240, column: 89, scope: !13467)
!13472 = !DILocation(line: 240, column: 10, scope: !13468)
!13473 = !DILocation(line: 248, column: 7, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !13403, line: 248, column: 7)
!13475 = distinct !DILexicalBlock(scope: !13476, file: !13403, line: 248, column: 7)
!13476 = distinct !DILexicalBlock(scope: !13455, file: !13403, line: 246, column: 5)
!13477 = !DILocation(line: 248, column: 7, scope: !13475)
!13478 = !DILocation(line: 248, column: 7, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13474, file: !13403, line: 248, column: 7)
!13480 = !DILocation(line: 248, column: 7, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !13403, line: 248, column: 7)
!13482 = distinct !DILexicalBlock(scope: !13474, file: !13403, line: 248, column: 7)
!13483 = !DILocation(line: 248, column: 7, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13482, file: !13403, line: 248, column: 7)
!13485 = !DILocation(line: 0, scope: !13474)
!13486 = !DILocation(line: 251, column: 30, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13476, file: !13403, line: 251, column: 10)
!13488 = !DILocation(line: 251, column: 40, scope: !13487)
!13489 = !DILocation(line: 0, scope: !13487)
!13490 = !DILocation(line: 251, column: 10, scope: !13476)
!13491 = !DILocation(line: 257, column: 15, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13487, file: !13403, line: 252, column: 7)
!13493 = !DILocation(line: 257, column: 51, scope: !13492)
!13494 = !DILocation(line: 257, column: 9, scope: !13492)
!13495 = !DILocation(line: 259, column: 15, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !13403, line: 259, column: 14)
!13497 = distinct !DILexicalBlock(scope: !13492, file: !13403, line: 258, column: 9)
!13498 = !DILocation(line: 259, column: 29, scope: !13496)
!13499 = !DILocation(line: 259, column: 43, scope: !13496)
!13500 = !DILocation(line: 259, column: 14, scope: !13497)
!13501 = distinct !{!13501, !13494, !13502}
!13502 = !DILocation(line: 263, column: 9, scope: !13492)
!13503 = !DILocation(line: 271, column: 15, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13487, file: !13403, line: 266, column: 7)
!13505 = !DILocation(line: 271, column: 9, scope: !13504)
!13506 = !DILocation(line: 273, column: 15, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13508, file: !13403, line: 273, column: 14)
!13508 = distinct !DILexicalBlock(scope: !13504, file: !13403, line: 272, column: 9)
!13509 = !DILocation(line: 273, column: 29, scope: !13507)
!13510 = !DILocation(line: 273, column: 43, scope: !13507)
!13511 = !DILocation(line: 273, column: 14, scope: !13508)
!13512 = distinct !{!13512, !13505, !13513}
!13513 = !DILocation(line: 277, column: 9, scope: !13504)
!13514 = !DILocation(line: 282, column: 27, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13408, file: !13403, line: 282, column: 6)
!13516 = !DILocation(line: 282, column: 43, scope: !13515)
!13517 = !DILocation(line: 282, column: 69, scope: !13515)
!13518 = !DILocation(line: 282, column: 6, scope: !13408)
!13519 = !DILocation(line: 289, column: 9, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !13403, line: 289, column: 8)
!13521 = distinct !DILexicalBlock(scope: !13515, file: !13403, line: 283, column: 3)
!13522 = !DILocation(line: 289, column: 39, scope: !13520)
!13523 = !DILocation(line: 289, column: 60, scope: !13520)
!13524 = !DILocation(line: 290, column: 9, scope: !13520)
!13525 = !DILocation(line: 290, column: 39, scope: !13520)
!13526 = !DILocation(line: 290, column: 60, scope: !13520)
!13527 = !DILocation(line: 290, column: 70, scope: !13520)
!13528 = !DILocation(line: 290, column: 78, scope: !13520)
!13529 = !DILocation(line: 290, column: 100, scope: !13520)
!13530 = !DILocation(line: 289, column: 8, scope: !13521)
!13531 = !DILocation(line: 293, column: 11, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13533, file: !13403, line: 293, column: 10)
!13533 = distinct !DILexicalBlock(scope: !13520, file: !13403, line: 291, column: 5)
!13534 = !DILocation(line: 293, column: 57, scope: !13532)
!13535 = !DILocation(line: 293, column: 80, scope: !13532)
!13536 = !DILocation(line: 293, column: 89, scope: !13532)
!13537 = !DILocation(line: 293, column: 10, scope: !13533)
!13538 = !DILocation(line: 307, column: 30, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !13403, line: 307, column: 10)
!13540 = distinct !DILexicalBlock(scope: !13520, file: !13403, line: 305, column: 5)
!13541 = !DILocation(line: 307, column: 39, scope: !13539)
!13542 = !DILocation(line: 307, column: 10, scope: !13540)
!13543 = !DILocation(line: 310, column: 9, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13539, file: !13403, line: 308, column: 7)
!13545 = !DILocation(line: 313, column: 21, scope: !13544)
!13546 = !DILocation(line: 316, column: 9, scope: !13544)
!13547 = !DILocation(line: 316, column: 15, scope: !13544)
!13548 = !DILocation(line: 316, column: 51, scope: !13544)
!13549 = !DILocation(line: 318, column: 15, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13551, file: !13403, line: 318, column: 14)
!13551 = distinct !DILexicalBlock(scope: !13544, file: !13403, line: 317, column: 9)
!13552 = !DILocation(line: 318, column: 29, scope: !13550)
!13553 = !DILocation(line: 318, column: 43, scope: !13550)
!13554 = !DILocation(line: 318, column: 14, scope: !13551)
!13555 = distinct !{!13555, !13546, !13556}
!13556 = !DILocation(line: 322, column: 9, scope: !13544)
!13557 = !DILocation(line: 330, column: 9, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13539, file: !13403, line: 328, column: 7)
!13559 = !DILocation(line: 333, column: 21, scope: !13558)
!13560 = !DILocation(line: 336, column: 9, scope: !13558)
!13561 = !DILocation(line: 336, column: 15, scope: !13558)
!13562 = !DILocation(line: 338, column: 15, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13564, file: !13403, line: 338, column: 14)
!13564 = distinct !DILexicalBlock(scope: !13558, file: !13403, line: 337, column: 9)
!13565 = !DILocation(line: 338, column: 29, scope: !13563)
!13566 = !DILocation(line: 338, column: 43, scope: !13563)
!13567 = !DILocation(line: 338, column: 14, scope: !13564)
!13568 = distinct !{!13568, !13560, !13569}
!13569 = !DILocation(line: 342, column: 9, scope: !13558)
!13570 = !DILocation(line: 0, scope: !13520)
!13571 = !DILocation(line: 347, column: 27, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13408, file: !13403, line: 347, column: 6)
!13573 = !DILocation(line: 347, column: 43, scope: !13572)
!13574 = !DILocation(line: 347, column: 69, scope: !13572)
!13575 = !DILocation(line: 347, column: 6, scope: !13408)
!13576 = !DILocation(line: 353, column: 28, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !13403, line: 353, column: 8)
!13578 = distinct !DILexicalBlock(scope: !13572, file: !13403, line: 348, column: 3)
!13579 = !DILocation(line: 353, column: 37, scope: !13577)
!13580 = !DILocation(line: 353, column: 8, scope: !13578)
!13581 = !DILocation(line: 356, column: 7, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !13403, line: 354, column: 5)
!13583 = !DILocation(line: 359, column: 19, scope: !13582)
!13584 = !DILocation(line: 362, column: 7, scope: !13582)
!13585 = !DILocation(line: 362, column: 13, scope: !13582)
!13586 = !DILocation(line: 362, column: 49, scope: !13582)
!13587 = !DILocation(line: 364, column: 13, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !13403, line: 364, column: 12)
!13589 = distinct !DILexicalBlock(scope: !13582, file: !13403, line: 363, column: 7)
!13590 = !DILocation(line: 364, column: 27, scope: !13588)
!13591 = !DILocation(line: 364, column: 41, scope: !13588)
!13592 = !DILocation(line: 364, column: 12, scope: !13589)
!13593 = distinct !{!13593, !13584, !13594}
!13594 = !DILocation(line: 368, column: 7, scope: !13582)
!13595 = !DILocation(line: 373, column: 7, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13577, file: !13403, line: 371, column: 5)
!13597 = !DILocation(line: 376, column: 19, scope: !13596)
!13598 = !DILocation(line: 379, column: 7, scope: !13596)
!13599 = !DILocation(line: 379, column: 13, scope: !13596)
!13600 = !DILocation(line: 381, column: 13, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !13403, line: 381, column: 12)
!13602 = distinct !DILexicalBlock(scope: !13596, file: !13403, line: 380, column: 7)
!13603 = !DILocation(line: 381, column: 27, scope: !13601)
!13604 = !DILocation(line: 381, column: 41, scope: !13601)
!13605 = !DILocation(line: 381, column: 12, scope: !13602)
!13606 = distinct !{!13606, !13598, !13607}
!13607 = !DILocation(line: 385, column: 7, scope: !13596)
!13608 = !DILocation(line: 389, column: 27, scope: !13439)
!13609 = !DILocation(line: 389, column: 43, scope: !13439)
!13610 = !DILocation(line: 389, column: 69, scope: !13439)
!13611 = !DILocation(line: 389, column: 6, scope: !13408)
!13612 = !DILocation(line: 0, scope: !13438)
!13613 = !DILocation(line: 398, column: 8, scope: !13444)
!13614 = !DILocation(line: 398, column: 8, scope: !13438)
!13615 = !DILocation(line: 400, column: 7, scope: !13442)
!13616 = !DILocation(line: 400, column: 7, scope: !13443)
!13617 = !DILocation(line: 402, column: 5, scope: !13443)
!13618 = !DILocation(line: 404, column: 8, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13438, file: !13403, line: 404, column: 8)
!13620 = !DILocation(line: 404, column: 8, scope: !13438)
!13621 = !DILocation(line: 407, column: 7, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13619, file: !13403, line: 405, column: 5)
!13623 = !DILocation(line: 410, column: 19, scope: !13622)
!13624 = !DILocation(line: 412, column: 7, scope: !13622)
!13625 = !DILocation(line: 412, column: 13, scope: !13622)
!13626 = !DILocation(line: 414, column: 13, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13628, file: !13403, line: 414, column: 12)
!13628 = distinct !DILexicalBlock(scope: !13622, file: !13403, line: 413, column: 7)
!13629 = !DILocation(line: 414, column: 27, scope: !13627)
!13630 = !DILocation(line: 414, column: 40, scope: !13627)
!13631 = !DILocation(line: 414, column: 12, scope: !13628)
!13632 = distinct !{!13632, !13624, !13633}
!13633 = !DILocation(line: 418, column: 7, scope: !13622)
!13634 = !DILocation(line: 422, column: 5, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !13403, line: 422, column: 5)
!13636 = distinct !DILexicalBlock(scope: !13438, file: !13403, line: 422, column: 5)
!13637 = !DILocation(line: 422, column: 5, scope: !13636)
!13638 = !DILocation(line: 422, column: 5, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13635, file: !13403, line: 422, column: 5)
!13640 = !DILocation(line: 422, column: 5, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13642, file: !13403, line: 422, column: 5)
!13642 = distinct !DILexicalBlock(scope: !13635, file: !13403, line: 422, column: 5)
!13643 = !DILocation(line: 422, column: 5, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13642, file: !13403, line: 422, column: 5)
!13645 = !DILocation(line: 0, scope: !13635)
!13646 = !DILocation(line: 424, column: 28, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13438, file: !13403, line: 424, column: 8)
!13648 = !DILocation(line: 424, column: 38, scope: !13647)
!13649 = !DILocation(line: 0, scope: !13647)
!13650 = !DILocation(line: 424, column: 8, scope: !13438)
!13651 = !DILocation(line: 430, column: 13, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13647, file: !13403, line: 425, column: 5)
!13653 = !DILocation(line: 430, column: 49, scope: !13652)
!13654 = !DILocation(line: 430, column: 7, scope: !13652)
!13655 = !DILocation(line: 432, column: 13, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13657, file: !13403, line: 432, column: 12)
!13657 = distinct !DILexicalBlock(scope: !13652, file: !13403, line: 431, column: 7)
!13658 = !DILocation(line: 432, column: 27, scope: !13656)
!13659 = !DILocation(line: 432, column: 41, scope: !13656)
!13660 = !DILocation(line: 432, column: 12, scope: !13657)
!13661 = distinct !{!13661, !13654, !13662}
!13662 = !DILocation(line: 436, column: 7, scope: !13652)
!13663 = !DILocation(line: 444, column: 13, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13647, file: !13403, line: 439, column: 5)
!13665 = !DILocation(line: 444, column: 7, scope: !13664)
!13666 = !DILocation(line: 446, column: 13, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !13403, line: 446, column: 12)
!13668 = distinct !DILexicalBlock(scope: !13664, file: !13403, line: 445, column: 7)
!13669 = !DILocation(line: 446, column: 27, scope: !13667)
!13670 = !DILocation(line: 446, column: 41, scope: !13667)
!13671 = !DILocation(line: 446, column: 12, scope: !13668)
!13672 = distinct !{!13672, !13665, !13673}
!13673 = !DILocation(line: 450, column: 7, scope: !13664)
!13674 = !DILocation(line: 454, column: 8, scope: !13438)
!13675 = !DILocation(line: 456, column: 7, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13677, file: !13403, line: 455, column: 5)
!13677 = distinct !DILexicalBlock(scope: !13438, file: !13403, line: 454, column: 8)
!13678 = !DILocation(line: 457, column: 5, scope: !13676)
!13679 = !DILocation(line: 462, column: 31, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13408, file: !13403, line: 462, column: 7)
!13681 = !DILocation(line: 462, column: 41, scope: !13680)
!13682 = !DILocation(line: 462, column: 7, scope: !13408)
!13683 = !DILocation(line: 465, column: 8, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !13403, line: 465, column: 8)
!13685 = distinct !DILexicalBlock(scope: !13680, file: !13403, line: 463, column: 3)
!13686 = !DILocation(line: 465, column: 38, scope: !13684)
!13687 = !DILocation(line: 465, column: 8, scope: !13685)
!13688 = !DILocation(line: 467, column: 44, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !13403, line: 467, column: 10)
!13690 = distinct !DILexicalBlock(scope: !13684, file: !13403, line: 466, column: 5)
!13691 = !DILocation(line: 0, scope: !13689)
!13692 = !DILocation(line: 467, column: 10, scope: !13690)
!13693 = !DILocation(line: 483, column: 15, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13689, file: !13403, line: 468, column: 7)
!13695 = !DILocation(line: 483, column: 9, scope: !13694)
!13696 = !DILocation(line: 485, column: 15, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !13403, line: 485, column: 14)
!13698 = distinct !DILexicalBlock(scope: !13694, file: !13403, line: 484, column: 9)
!13699 = !DILocation(line: 485, column: 29, scope: !13697)
!13700 = !DILocation(line: 485, column: 43, scope: !13697)
!13701 = !DILocation(line: 485, column: 14, scope: !13698)
!13702 = distinct !{!13702, !13695, !13703}
!13703 = !DILocation(line: 489, column: 9, scope: !13694)
!13704 = !DILocation(line: 492, column: 9, scope: !13694)
!13705 = !DILocation(line: 498, column: 9, scope: !13694)
!13706 = !DILocation(line: 501, column: 21, scope: !13694)
!13707 = !DILocation(line: 504, column: 9, scope: !13694)
!13708 = !DILocation(line: 504, column: 15, scope: !13694)
!13709 = !DILocation(line: 504, column: 51, scope: !13694)
!13710 = !DILocation(line: 506, column: 15, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13712, file: !13403, line: 506, column: 14)
!13712 = distinct !DILexicalBlock(scope: !13694, file: !13403, line: 505, column: 9)
!13713 = !DILocation(line: 506, column: 29, scope: !13711)
!13714 = !DILocation(line: 506, column: 43, scope: !13711)
!13715 = !DILocation(line: 506, column: 14, scope: !13712)
!13716 = distinct !{!13716, !13707, !13717}
!13717 = !DILocation(line: 510, column: 9, scope: !13694)
!13718 = !DILocation(line: 521, column: 15, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13689, file: !13403, line: 513, column: 7)
!13720 = !DILocation(line: 521, column: 9, scope: !13719)
!13721 = !DILocation(line: 523, column: 15, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !13403, line: 523, column: 14)
!13723 = distinct !DILexicalBlock(scope: !13719, file: !13403, line: 522, column: 9)
!13724 = !DILocation(line: 523, column: 29, scope: !13722)
!13725 = !DILocation(line: 523, column: 43, scope: !13722)
!13726 = !DILocation(line: 523, column: 14, scope: !13723)
!13727 = distinct !{!13727, !13720, !13728}
!13728 = !DILocation(line: 527, column: 9, scope: !13719)
!13729 = !DILocation(line: 533, column: 44, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !13403, line: 533, column: 10)
!13731 = distinct !DILexicalBlock(scope: !13684, file: !13403, line: 531, column: 5)
!13732 = !DILocation(line: 533, column: 10, scope: !13731)
!13733 = !DILocation(line: 540, column: 27, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13730, file: !13403, line: 538, column: 7)
!13735 = !DILocation(line: 551, column: 14, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13734, file: !13403, line: 550, column: 13)
!13737 = !DILocation(line: 551, column: 81, scope: !13736)
!13738 = !DILocation(line: 551, column: 55, scope: !13736)
!13739 = !DILocation(line: 551, column: 92, scope: !13736)
!13740 = !DILocation(line: 552, column: 14, scope: !13736)
!13741 = !DILocation(line: 552, column: 80, scope: !13736)
!13742 = !DILocation(line: 552, column: 53, scope: !13736)
!13743 = !DILocation(line: 552, column: 111, scope: !13736)
!13744 = !DILocation(line: 553, column: 14, scope: !13736)
!13745 = !DILocation(line: 553, column: 80, scope: !13736)
!13746 = !DILocation(line: 553, column: 86, scope: !13736)
!13747 = !DILocation(line: 553, column: 53, scope: !13736)
!13748 = !DILocation(line: 553, column: 111, scope: !13736)
!13749 = !DILocation(line: 554, column: 14, scope: !13736)
!13750 = !DILocation(line: 554, column: 82, scope: !13736)
!13751 = !DILocation(line: 554, column: 101, scope: !13736)
!13752 = !DILocation(line: 554, column: 53, scope: !13736)
!13753 = !DILocation(line: 554, column: 126, scope: !13736)
!13754 = !DILocation(line: 555, column: 14, scope: !13736)
!13755 = !DILocation(line: 555, column: 80, scope: !13736)
!13756 = !DILocation(line: 555, column: 85, scope: !13736)
!13757 = !DILocation(line: 555, column: 53, scope: !13736)
!13758 = !DILocation(line: 550, column: 13, scope: !13734)
!13759 = !DILocation(line: 563, column: 3, scope: !13408)
!13760 = !DILocation(line: 564, column: 1, scope: !13408)
!13761 = !DISubprogram(name: "HAL_GetTick", scope: !13762, file: !13762, line: 234, type: !8526, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13762 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13763 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13403, file: !13403, line: 591, type: !13764, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !13775)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{!13406, !13766, !208}
!13766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13767, size: 32)
!13767 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13413, line: 92, baseType: !13768)
!13768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13413, line: 75, size: 160, elements: !13769)
!13769 = !{!13770, !13771, !13772, !13773, !13774}
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13768, file: !13413, line: 77, baseType: !208, size: 32)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13768, file: !13413, line: 80, baseType: !208, size: 32, offset: 32)
!13772 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13768, file: !13413, line: 83, baseType: !208, size: 32, offset: 64)
!13773 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13768, file: !13413, line: 86, baseType: !208, size: 32, offset: 96)
!13774 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13768, file: !13413, line: 89, baseType: !208, size: 32, offset: 128)
!13775 = !{!13776, !13777, !13778}
!13776 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13763, file: !13403, line: 591, type: !13766)
!13777 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13763, file: !13403, line: 591, type: !208)
!13778 = !DILocalVariable(name: "tickstart", scope: !13763, file: !13403, line: 593, type: !208)
!13779 = !DILocation(line: 0, scope: !13763)
!13780 = !DILocation(line: 596, column: 24, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 596, column: 6)
!13782 = !DILocation(line: 596, column: 6, scope: !13763)
!13783 = !DILocation(line: 610, column: 17, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 610, column: 6)
!13785 = !DILocation(line: 610, column: 15, scope: !13784)
!13786 = !DILocation(line: 610, column: 6, scope: !13763)
!13787 = !DILocation(line: 613, column: 5, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13784, file: !13403, line: 611, column: 3)
!13789 = !DILocation(line: 617, column: 8, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13788, file: !13403, line: 617, column: 8)
!13791 = !DILocation(line: 617, column: 34, scope: !13790)
!13792 = !DILocation(line: 617, column: 8, scope: !13788)
!13793 = !DILocation(line: 624, column: 27, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 624, column: 6)
!13795 = !DILocation(line: 624, column: 38, scope: !13794)
!13796 = !DILocation(line: 624, column: 60, scope: !13794)
!13797 = !DILocation(line: 624, column: 6, scope: !13763)
!13798 = !DILocation(line: 628, column: 40, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !13403, line: 628, column: 8)
!13800 = distinct !DILexicalBlock(scope: !13794, file: !13403, line: 625, column: 3)
!13801 = !DILocation(line: 628, column: 63, scope: !13799)
!13802 = !DILocation(line: 628, column: 8, scope: !13800)
!13803 = !DILocation(line: 630, column: 7, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13799, file: !13403, line: 629, column: 5)
!13805 = !DILocation(line: 633, column: 29, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13800, file: !13403, line: 633, column: 8)
!13807 = !DILocation(line: 631, column: 5, scope: !13804)
!13808 = !DILocation(line: 633, column: 40, scope: !13806)
!13809 = !DILocation(line: 633, column: 63, scope: !13806)
!13810 = !DILocation(line: 633, column: 8, scope: !13800)
!13811 = !DILocation(line: 635, column: 7, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13806, file: !13403, line: 634, column: 5)
!13813 = !DILocation(line: 636, column: 5, scope: !13812)
!13814 = !DILocation(line: 639, column: 5, scope: !13800)
!13815 = !DILocation(line: 643, column: 27, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 643, column: 6)
!13817 = !DILocation(line: 640, column: 3, scope: !13800)
!13818 = !DILocation(line: 643, column: 38, scope: !13816)
!13819 = !DILocation(line: 643, column: 62, scope: !13816)
!13820 = !DILocation(line: 643, column: 6, scope: !13763)
!13821 = !DILocation(line: 648, column: 27, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !13403, line: 648, column: 8)
!13823 = distinct !DILexicalBlock(scope: !13816, file: !13403, line: 644, column: 3)
!13824 = !DILocation(line: 648, column: 8, scope: !13823)
!13825 = !DILocation(line: 651, column: 10, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !13403, line: 651, column: 10)
!13827 = distinct !DILexicalBlock(scope: !13822, file: !13403, line: 649, column: 5)
!13828 = !DILocation(line: 651, column: 46, scope: !13826)
!13829 = !DILocation(line: 651, column: 10, scope: !13827)
!13830 = !DILocation(line: 661, column: 10, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !13403, line: 661, column: 10)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !13403, line: 659, column: 5)
!13833 = distinct !DILexicalBlock(scope: !13822, file: !13403, line: 657, column: 13)
!13834 = !DILocation(line: 661, column: 46, scope: !13831)
!13835 = !DILocation(line: 661, column: 10, scope: !13832)
!13836 = !DILocation(line: 670, column: 10, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13838, file: !13403, line: 670, column: 10)
!13838 = distinct !DILexicalBlock(scope: !13833, file: !13403, line: 668, column: 5)
!13839 = !DILocation(line: 670, column: 46, scope: !13837)
!13840 = !DILocation(line: 670, column: 10, scope: !13838)
!13841 = !DILocation(line: 676, column: 5, scope: !13823)
!13842 = !DILocation(line: 679, column: 17, scope: !13823)
!13843 = !DILocation(line: 681, column: 5, scope: !13823)
!13844 = !DILocation(line: 681, column: 12, scope: !13823)
!13845 = !DILocation(line: 681, column: 65, scope: !13823)
!13846 = !DILocation(line: 681, column: 78, scope: !13823)
!13847 = !DILocation(line: 681, column: 42, scope: !13823)
!13848 = !DILocation(line: 683, column: 12, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13850, file: !13403, line: 683, column: 11)
!13850 = distinct !DILexicalBlock(scope: !13823, file: !13403, line: 682, column: 5)
!13851 = !DILocation(line: 683, column: 26, scope: !13849)
!13852 = !DILocation(line: 683, column: 39, scope: !13849)
!13853 = !DILocation(line: 683, column: 11, scope: !13850)
!13854 = distinct !{!13854, !13843, !13855}
!13855 = !DILocation(line: 687, column: 5, scope: !13823)
!13856 = !DILocation(line: 691, column: 17, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 691, column: 6)
!13858 = !DILocation(line: 691, column: 15, scope: !13857)
!13859 = !DILocation(line: 691, column: 6, scope: !13763)
!13860 = !DILocation(line: 694, column: 5, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13857, file: !13403, line: 692, column: 3)
!13862 = !DILocation(line: 698, column: 8, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13861, file: !13403, line: 698, column: 8)
!13864 = !DILocation(line: 698, column: 34, scope: !13863)
!13865 = !DILocation(line: 698, column: 8, scope: !13861)
!13866 = !DILocation(line: 705, column: 27, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 705, column: 6)
!13868 = !DILocation(line: 705, column: 38, scope: !13867)
!13869 = !DILocation(line: 705, column: 61, scope: !13867)
!13870 = !DILocation(line: 705, column: 6, scope: !13763)
!13871 = !DILocation(line: 708, column: 5, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13867, file: !13403, line: 706, column: 3)
!13873 = !DILocation(line: 712, column: 27, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13763, file: !13403, line: 712, column: 6)
!13875 = !DILocation(line: 709, column: 3, scope: !13872)
!13876 = !DILocation(line: 712, column: 38, scope: !13874)
!13877 = !DILocation(line: 712, column: 61, scope: !13874)
!13878 = !DILocation(line: 712, column: 6, scope: !13763)
!13879 = !DILocation(line: 715, column: 5, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13874, file: !13403, line: 713, column: 3)
!13881 = !DILocation(line: 716, column: 3, scope: !13880)
!13882 = !DILocation(line: 719, column: 21, scope: !13763)
!13883 = !DILocation(line: 719, column: 70, scope: !13763)
!13884 = !DILocation(line: 719, column: 91, scope: !13763)
!13885 = !DILocation(line: 719, column: 50, scope: !13763)
!13886 = !DILocation(line: 719, column: 47, scope: !13763)
!13887 = !DILocation(line: 719, column: 19, scope: !13763)
!13888 = !DILocation(line: 722, column: 17, scope: !13763)
!13889 = !DILocation(line: 722, column: 3, scope: !13763)
!13890 = !DILocation(line: 724, column: 3, scope: !13763)
!13891 = !DILocation(line: 725, column: 1, scope: !13763)
!13892 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13403, file: !13403, line: 885, type: !8526, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !13893)
!13893 = !{!13894, !13895, !13896, !13897}
!13894 = !DILocalVariable(name: "pllm", scope: !13892, file: !13403, line: 887, type: !208)
!13895 = !DILocalVariable(name: "pllvco", scope: !13892, file: !13403, line: 887, type: !208)
!13896 = !DILocalVariable(name: "pllp", scope: !13892, file: !13403, line: 887, type: !208)
!13897 = !DILocalVariable(name: "sysclockfreq", scope: !13892, file: !13403, line: 888, type: !208)
!13898 = !DILocation(line: 0, scope: !13892)
!13899 = !DILocation(line: 891, column: 16, scope: !13892)
!13900 = !DILocation(line: 891, column: 21, scope: !13892)
!13901 = !DILocation(line: 891, column: 3, scope: !13892)
!13902 = !DILocation(line: 901, column: 7, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !13403, line: 899, column: 5)
!13904 = distinct !DILexicalBlock(scope: !13892, file: !13403, line: 892, column: 3)
!13905 = !DILocation(line: 907, column: 19, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13904, file: !13403, line: 904, column: 5)
!13907 = !DILocation(line: 907, column: 27, scope: !13906)
!13908 = !DILocation(line: 908, column: 10, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13906, file: !13403, line: 908, column: 10)
!13910 = !DILocation(line: 908, column: 40, scope: !13909)
!13911 = !DILocation(line: 0, scope: !13909)
!13912 = !DILocation(line: 918, column: 23, scope: !13906)
!13913 = !DILocation(line: 918, column: 82, scope: !13906)
!13914 = !DILocation(line: 920, column: 28, scope: !13906)
!13915 = !DILocation(line: 921, column: 7, scope: !13906)
!13916 = !DILocation(line: 0, scope: !13904)
!13917 = !DILocation(line: 929, column: 3, scope: !13892)
!13918 = !DISubprogram(name: "HAL_InitTick", scope: !13762, file: !13762, line: 223, type: !13919, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13919 = !DISubroutineType(types: !13920)
!13920 = !{!13406, !208}
!13921 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13403, file: !13403, line: 775, type: !13922, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !13924)
!13922 = !DISubroutineType(types: !13923)
!13923 = !{null, !208, !208, !208}
!13924 = !{!13925, !13926, !13927, !13928, !13938, !13942}
!13925 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13921, file: !13403, line: 775, type: !208)
!13926 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13921, file: !13403, line: 775, type: !208)
!13927 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13921, file: !13403, line: 775, type: !208)
!13928 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13921, file: !13403, line: 777, type: !13929)
!13929 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13930, line: 62, baseType: !13931)
!13930 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13930, line: 46, size: 160, elements: !13932)
!13932 = !{!13933, !13934, !13935, !13936, !13937}
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13931, file: !13930, line: 48, baseType: !208, size: 32)
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13931, file: !13930, line: 51, baseType: !208, size: 32, offset: 32)
!13935 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13931, file: !13930, line: 54, baseType: !208, size: 32, offset: 64)
!13936 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13931, file: !13930, line: 57, baseType: !208, size: 32, offset: 96)
!13937 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13931, file: !13930, line: 60, baseType: !208, size: 32, offset: 128)
!13938 = !DILocalVariable(name: "tmpreg", scope: !13939, file: !13403, line: 787, type: !423)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !13403, line: 787, column: 5)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !13403, line: 783, column: 3)
!13941 = distinct !DILexicalBlock(scope: !13921, file: !13403, line: 782, column: 6)
!13942 = !DILocalVariable(name: "tmpreg", scope: !13943, file: !13403, line: 811, type: !423)
!13943 = distinct !DILexicalBlock(scope: !13944, file: !13403, line: 811, column: 5)
!13944 = distinct !DILexicalBlock(scope: !13941, file: !13403, line: 807, column: 3)
!13945 = !DILocation(line: 0, scope: !13921)
!13946 = !DILocation(line: 777, column: 3, scope: !13921)
!13947 = !DILocation(line: 777, column: 20, scope: !13921)
!13948 = !DILocation(line: 782, column: 15, scope: !13941)
!13949 = !DILocation(line: 782, column: 6, scope: !13921)
!13950 = !DILocation(line: 787, column: 5, scope: !13939)
!13951 = !DILocation(line: 787, column: 5, scope: !13940)
!13952 = !DILocation(line: 790, column: 21, scope: !13940)
!13953 = !DILocation(line: 790, column: 25, scope: !13940)
!13954 = !DILocation(line: 791, column: 21, scope: !13940)
!13955 = !DILocation(line: 791, column: 26, scope: !13940)
!13956 = !DILocation(line: 792, column: 21, scope: !13940)
!13957 = !DILocation(line: 792, column: 27, scope: !13940)
!13958 = !DILocation(line: 793, column: 21, scope: !13940)
!13959 = !DILocation(line: 793, column: 26, scope: !13940)
!13960 = !DILocation(line: 794, column: 21, scope: !13940)
!13961 = !DILocation(line: 794, column: 31, scope: !13940)
!13962 = !DILocation(line: 795, column: 5, scope: !13940)
!13963 = !DILocation(line: 798, column: 5, scope: !13940)
!13964 = !DILocation(line: 804, column: 3, scope: !13940)
!13965 = !DILocation(line: 811, column: 5, scope: !13943)
!13966 = !DILocation(line: 811, column: 5, scope: !13944)
!13967 = !DILocation(line: 814, column: 21, scope: !13944)
!13968 = !DILocation(line: 814, column: 25, scope: !13944)
!13969 = !DILocation(line: 815, column: 21, scope: !13944)
!13970 = !DILocation(line: 815, column: 26, scope: !13944)
!13971 = !DILocation(line: 816, column: 21, scope: !13944)
!13972 = !DILocation(line: 816, column: 27, scope: !13944)
!13973 = !DILocation(line: 817, column: 21, scope: !13944)
!13974 = !DILocation(line: 817, column: 26, scope: !13944)
!13975 = !DILocation(line: 818, column: 21, scope: !13944)
!13976 = !DILocation(line: 818, column: 31, scope: !13944)
!13977 = !DILocation(line: 819, column: 5, scope: !13944)
!13978 = !DILocation(line: 822, column: 5, scope: !13944)
!13979 = !DILocation(line: 0, scope: !13941)
!13980 = !DILocation(line: 830, column: 1, scope: !13921)
!13981 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13930, file: !13930, line: 224, type: !13982, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{null, !3322, !13984}
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13929, size: 32)
!13985 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13403, file: !13403, line: 841, type: !3440, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!13986 = !DILocation(line: 843, column: 38, scope: !13985)
!13987 = !DILocation(line: 844, column: 1, scope: !13985)
!13988 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13403, file: !13403, line: 850, type: !3440, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!13989 = !DILocation(line: 852, column: 38, scope: !13988)
!13990 = !DILocation(line: 853, column: 1, scope: !13988)
!13991 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13403, file: !13403, line: 941, type: !8526, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!13992 = !DILocation(line: 943, column: 10, scope: !13991)
!13993 = !DILocation(line: 943, column: 3, scope: !13991)
!13994 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13403, file: !13403, line: 952, type: !8526, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!13995 = !DILocation(line: 955, column: 11, scope: !13994)
!13996 = !DILocation(line: 955, column: 56, scope: !13994)
!13997 = !DILocation(line: 955, column: 78, scope: !13994)
!13998 = !DILocation(line: 955, column: 36, scope: !13994)
!13999 = !DILocation(line: 955, column: 33, scope: !13994)
!14000 = !DILocation(line: 955, column: 3, scope: !13994)
!14001 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13403, file: !13403, line: 964, type: !8526, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!14002 = !DILocation(line: 967, column: 11, scope: !14001)
!14003 = !DILocation(line: 967, column: 55, scope: !14001)
!14004 = !DILocation(line: 967, column: 77, scope: !14001)
!14005 = !DILocation(line: 967, column: 35, scope: !14001)
!14006 = !DILocation(line: 967, column: 32, scope: !14001)
!14007 = !DILocation(line: 967, column: 3, scope: !14001)
!14008 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13403, file: !13403, line: 977, type: !14009, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !14011)
!14009 = !DISubroutineType(types: !14010)
!14010 = !{null, !13411}
!14011 = !{!14012}
!14012 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14008, file: !13403, line: 977, type: !13411)
!14013 = !DILocation(line: 0, scope: !14008)
!14014 = !DILocation(line: 980, column: 22, scope: !14008)
!14015 = !DILocation(line: 980, column: 37, scope: !14008)
!14016 = !DILocation(line: 983, column: 12, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14008, file: !13403, line: 983, column: 6)
!14018 = !DILocation(line: 983, column: 15, scope: !14017)
!14019 = !DILocation(line: 983, column: 31, scope: !14017)
!14020 = !DILocation(line: 983, column: 6, scope: !14008)
!14021 = !DILocation(line: 985, column: 24, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14017, file: !13403, line: 984, column: 3)
!14023 = !DILocation(line: 985, column: 33, scope: !14022)
!14024 = !DILocation(line: 986, column: 3, scope: !14022)
!14025 = !DILocation(line: 987, column: 17, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14017, file: !13403, line: 987, column: 11)
!14027 = !DILocation(line: 987, column: 20, scope: !14026)
!14028 = !DILocation(line: 987, column: 35, scope: !14026)
!14029 = !DILocation(line: 0, scope: !14026)
!14030 = !DILocation(line: 987, column: 11, scope: !14017)
!14031 = !DILocation(line: 989, column: 33, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14026, file: !13403, line: 988, column: 3)
!14033 = !DILocation(line: 990, column: 3, scope: !14032)
!14034 = !DILocation(line: 993, column: 33, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14026, file: !13403, line: 992, column: 3)
!14036 = !DILocation(line: 997, column: 12, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14008, file: !13403, line: 997, column: 6)
!14038 = !DILocation(line: 997, column: 15, scope: !14037)
!14039 = !DILocation(line: 1003, column: 24, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14037, file: !13403, line: 1002, column: 3)
!14041 = !DILocation(line: 1003, column: 33, scope: !14040)
!14042 = !DILocation(line: 1006, column: 61, scope: !14008)
!14043 = !DILocation(line: 1006, column: 81, scope: !14008)
!14044 = !DILocation(line: 1006, column: 22, scope: !14008)
!14045 = !DILocation(line: 1006, column: 42, scope: !14008)
!14046 = !DILocation(line: 1009, column: 12, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14008, file: !13403, line: 1009, column: 6)
!14048 = !DILocation(line: 1009, column: 17, scope: !14047)
!14049 = !DILocation(line: 1009, column: 35, scope: !14047)
!14050 = !DILocation(line: 1009, column: 6, scope: !14008)
!14051 = !DILocation(line: 1011, column: 24, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14047, file: !13403, line: 1010, column: 3)
!14053 = !DILocation(line: 1011, column: 33, scope: !14052)
!14054 = !DILocation(line: 1012, column: 3, scope: !14052)
!14055 = !DILocation(line: 1013, column: 17, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14047, file: !13403, line: 1013, column: 11)
!14057 = !DILocation(line: 1013, column: 22, scope: !14056)
!14058 = !DILocation(line: 1013, column: 39, scope: !14056)
!14059 = !DILocation(line: 0, scope: !14056)
!14060 = !DILocation(line: 1013, column: 11, scope: !14047)
!14061 = !DILocation(line: 1015, column: 33, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14056, file: !13403, line: 1014, column: 3)
!14063 = !DILocation(line: 1016, column: 3, scope: !14062)
!14064 = !DILocation(line: 1019, column: 33, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14056, file: !13403, line: 1018, column: 3)
!14066 = !DILocation(line: 1023, column: 12, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14008, file: !13403, line: 1023, column: 6)
!14068 = !DILocation(line: 1023, column: 16, scope: !14067)
!14069 = !DILocation(line: 1029, column: 24, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14067, file: !13403, line: 1028, column: 3)
!14071 = !DILocation(line: 1029, column: 33, scope: !14070)
!14072 = !DILocation(line: 1033, column: 12, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14008, file: !13403, line: 1033, column: 6)
!14074 = !DILocation(line: 1033, column: 15, scope: !14073)
!14075 = !DILocation(line: 1033, column: 30, scope: !14073)
!14076 = !DILocation(line: 1033, column: 6, scope: !14008)
!14077 = !DILocation(line: 1039, column: 28, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14073, file: !13403, line: 1038, column: 3)
!14079 = !DILocation(line: 1039, column: 37, scope: !14078)
!14080 = !DILocation(line: 1041, column: 54, scope: !14008)
!14081 = !DILocation(line: 1041, column: 62, scope: !14008)
!14082 = !DILocation(line: 1041, column: 26, scope: !14008)
!14083 = !DILocation(line: 1041, column: 36, scope: !14008)
!14084 = !DILocation(line: 1042, column: 49, scope: !14008)
!14085 = !DILocation(line: 1042, column: 57, scope: !14008)
!14086 = !DILocation(line: 1042, column: 26, scope: !14008)
!14087 = !DILocation(line: 1042, column: 31, scope: !14008)
!14088 = !DILocation(line: 1043, column: 50, scope: !14008)
!14089 = !DILocation(line: 1043, column: 78, scope: !14008)
!14090 = !DILocation(line: 1043, column: 26, scope: !14008)
!14091 = !DILocation(line: 1043, column: 31, scope: !14008)
!14092 = !DILocation(line: 1044, column: 52, scope: !14008)
!14093 = !DILocation(line: 1044, column: 102, scope: !14008)
!14094 = !DILocation(line: 1044, column: 109, scope: !14008)
!14095 = !DILocation(line: 1044, column: 26, scope: !14008)
!14096 = !DILocation(line: 1044, column: 31, scope: !14008)
!14097 = !DILocation(line: 1045, column: 50, scope: !14008)
!14098 = !DILocation(line: 1045, column: 78, scope: !14008)
!14099 = !DILocation(line: 1045, column: 26, scope: !14008)
!14100 = !DILocation(line: 1045, column: 31, scope: !14008)
!14101 = !DILocation(line: 1046, column: 1, scope: !14008)
!14102 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13403, file: !13403, line: 1056, type: !14103, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !14105)
!14103 = !DISubroutineType(types: !14104)
!14104 = !{null, !13766, !1055}
!14105 = !{!14106, !14107}
!14106 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !14102, file: !13403, line: 1056, type: !13766)
!14107 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !14102, file: !13403, line: 1056, type: !1055)
!14108 = !DILocation(line: 0, scope: !14102)
!14109 = !DILocation(line: 1059, column: 22, scope: !14102)
!14110 = !DILocation(line: 1059, column: 32, scope: !14102)
!14111 = !DILocation(line: 1062, column: 53, scope: !14102)
!14112 = !DILocation(line: 1062, column: 58, scope: !14102)
!14113 = !DILocation(line: 1062, column: 22, scope: !14102)
!14114 = !DILocation(line: 1062, column: 35, scope: !14102)
!14115 = !DILocation(line: 1065, column: 54, scope: !14102)
!14116 = !DILocation(line: 1065, column: 59, scope: !14102)
!14117 = !DILocation(line: 1065, column: 22, scope: !14102)
!14118 = !DILocation(line: 1065, column: 36, scope: !14102)
!14119 = !DILocation(line: 1068, column: 55, scope: !14102)
!14120 = !DILocation(line: 1068, column: 60, scope: !14102)
!14121 = !DILocation(line: 1068, column: 22, scope: !14102)
!14122 = !DILocation(line: 1068, column: 37, scope: !14102)
!14123 = !DILocation(line: 1071, column: 56, scope: !14102)
!14124 = !DILocation(line: 1071, column: 79, scope: !14102)
!14125 = !DILocation(line: 1071, column: 22, scope: !14102)
!14126 = !DILocation(line: 1071, column: 37, scope: !14102)
!14127 = !DILocation(line: 1074, column: 34, scope: !14102)
!14128 = !DILocation(line: 1074, column: 38, scope: !14102)
!14129 = !DILocation(line: 1074, column: 14, scope: !14102)
!14130 = !DILocation(line: 1075, column: 1, scope: !14102)
!14131 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13403, file: !13403, line: 1082, type: !3440, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!14132 = !DILocation(line: 1085, column: 6, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14131, file: !13403, line: 1085, column: 6)
!14134 = !DILocation(line: 1085, column: 6, scope: !14131)
!14135 = !DILocation(line: 1088, column: 5, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14133, file: !13403, line: 1086, column: 3)
!14137 = !DILocation(line: 1091, column: 5, scope: !14136)
!14138 = !DILocation(line: 1092, column: 3, scope: !14136)
!14139 = !DILocation(line: 1093, column: 1, scope: !14131)
!14140 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13403, file: !13403, line: 1099, type: !3440, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3249, retainedNodes: !639)
!14141 = !DILocation(line: 1104, column: 1, scope: !14140)
!14142 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14143, file: !14143, line: 257, type: !8536, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14144)
!14143 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14142, file: !14143, line: 257, type: !208)
!14146 = !DILocation(line: 0, scope: !14142)
!14147 = !DILocation(line: 260, column: 3, scope: !14142)
!14148 = !DILocation(line: 261, column: 1, scope: !14142)
!14149 = distinct !DISubprogram(name: "LL_InitTick", scope: !14150, file: !14150, line: 260, type: !11800, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14151)
!14150 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14151 = !{!14152, !14153}
!14152 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14149, file: !14150, line: 260, type: !208)
!14153 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14149, file: !14150, line: 260, type: !208)
!14154 = !DILocation(line: 0, scope: !14149)
!14155 = !DILocation(line: 263, column: 46, scope: !14149)
!14156 = !DILocation(line: 263, column: 55, scope: !14149)
!14157 = !DILocation(line: 263, column: 18, scope: !14149)
!14158 = !DILocation(line: 264, column: 18, scope: !14149)
!14159 = !DILocation(line: 265, column: 18, scope: !14149)
!14160 = !DILocation(line: 267, column: 1, scope: !14149)
!14161 = distinct !DISubprogram(name: "LL_mDelay", scope: !14143, file: !14143, line: 273, type: !8536, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14162)
!14162 = !{!14163, !14164}
!14163 = !DILocalVariable(name: "Delay", arg: 1, scope: !14161, file: !14143, line: 273, type: !208)
!14164 = !DILocalVariable(name: "tmp", scope: !14161, file: !14143, line: 275, type: !423)
!14165 = !DILocation(line: 0, scope: !14161)
!14166 = !DILocation(line: 275, column: 3, scope: !14161)
!14167 = !DILocation(line: 275, column: 18, scope: !14161)
!14168 = !DILocation(line: 275, column: 33, scope: !14161)
!14169 = !DILocation(line: 277, column: 10, scope: !14161)
!14170 = !DILocation(line: 280, column: 12, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14161, file: !14143, line: 280, column: 6)
!14172 = !DILocation(line: 285, column: 3, scope: !14161)
!14173 = !DILocation(line: 287, column: 18, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14175, file: !14143, line: 287, column: 8)
!14175 = distinct !DILexicalBlock(scope: !14161, file: !14143, line: 286, column: 3)
!14176 = !DILocation(line: 292, column: 1, scope: !14161)
!14177 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14143, file: !14143, line: 323, type: !8536, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14178)
!14178 = !{!14179}
!14179 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14177, file: !14143, line: 323, type: !208)
!14180 = !DILocation(line: 0, scope: !14177)
!14181 = !DILocation(line: 326, column: 19, scope: !14177)
!14182 = !DILocation(line: 327, column: 1, scope: !14177)
!14183 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14143, file: !14143, line: 338, type: !14184, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14187)
!14184 = !DISubroutineType(types: !14185)
!14185 = !{!14186, !208}
!14186 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1000, line: 201, baseType: !999)
!14187 = !{!14188, !14189, !14190, !14191, !14192}
!14188 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14183, file: !14143, line: 338, type: !208)
!14189 = !DILocalVariable(name: "timeout", scope: !14183, file: !14143, line: 340, type: !208)
!14190 = !DILocalVariable(name: "getlatency", scope: !14183, file: !14143, line: 341, type: !208)
!14191 = !DILocalVariable(name: "latency", scope: !14183, file: !14143, line: 342, type: !208)
!14192 = !DILocalVariable(name: "status", scope: !14183, file: !14143, line: 343, type: !14186)
!14193 = !DILocation(line: 0, scope: !14183)
!14194 = !DILocation(line: 347, column: 21, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14183, file: !14143, line: 347, column: 6)
!14196 = !DILocation(line: 347, column: 6, scope: !14183)
!14197 = !DILocation(line: 353, column: 8, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14199, file: !14143, line: 353, column: 8)
!14199 = distinct !DILexicalBlock(scope: !14195, file: !14143, line: 352, column: 3)
!14200 = !DILocation(line: 353, column: 40, scope: !14198)
!14201 = !DILocation(line: 353, column: 8, scope: !14199)
!14202 = !DILocation(line: 356, column: 26, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !14143, line: 356, column: 10)
!14204 = distinct !DILexicalBlock(scope: !14198, file: !14143, line: 354, column: 5)
!14205 = !DILocation(line: 356, column: 55, scope: !14203)
!14206 = !DILocation(line: 362, column: 55, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14204, file: !14143, line: 362, column: 10)
!14208 = !DILocation(line: 368, column: 55, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14204, file: !14143, line: 368, column: 10)
!14210 = !DILocation(line: 374, column: 26, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14204, file: !14143, line: 374, column: 10)
!14212 = !DILocation(line: 374, column: 55, scope: !14211)
!14213 = !DILocation(line: 380, column: 28, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !14143, line: 380, column: 12)
!14215 = distinct !DILexicalBlock(scope: !14211, file: !14143, line: 379, column: 7)
!14216 = !DILocation(line: 380, column: 57, scope: !14214)
!14217 = !DILocation(line: 387, column: 8, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14199, file: !14143, line: 387, column: 8)
!14219 = !DILocation(line: 387, column: 40, scope: !14218)
!14220 = !DILocation(line: 387, column: 8, scope: !14199)
!14221 = !DILocation(line: 390, column: 26, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14223, file: !14143, line: 390, column: 10)
!14223 = distinct !DILexicalBlock(scope: !14218, file: !14143, line: 388, column: 5)
!14224 = !DILocation(line: 390, column: 55, scope: !14222)
!14225 = !DILocation(line: 396, column: 26, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14223, file: !14143, line: 396, column: 10)
!14227 = !DILocation(line: 396, column: 55, scope: !14226)
!14228 = !DILocation(line: 402, column: 26, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14223, file: !14143, line: 402, column: 10)
!14230 = !DILocation(line: 402, column: 55, scope: !14229)
!14231 = !DILocation(line: 407, column: 26, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14223, file: !14143, line: 407, column: 10)
!14233 = !DILocation(line: 407, column: 55, scope: !14232)
!14234 = !DILocation(line: 413, column: 28, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !14143, line: 413, column: 12)
!14236 = distinct !DILexicalBlock(scope: !14232, file: !14143, line: 412, column: 7)
!14237 = !DILocation(line: 413, column: 57, scope: !14235)
!14238 = !DILocation(line: 0, scope: !14199)
!14239 = !DILocation(line: 420, column: 8, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14199, file: !14143, line: 420, column: 8)
!14241 = !DILocation(line: 420, column: 40, scope: !14240)
!14242 = !DILocation(line: 420, column: 8, scope: !14199)
!14243 = !DILocation(line: 423, column: 26, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14245, file: !14143, line: 423, column: 10)
!14245 = distinct !DILexicalBlock(scope: !14240, file: !14143, line: 421, column: 5)
!14246 = !DILocation(line: 423, column: 55, scope: !14244)
!14247 = !DILocation(line: 429, column: 26, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14245, file: !14143, line: 429, column: 10)
!14249 = !DILocation(line: 429, column: 55, scope: !14248)
!14250 = !DILocation(line: 435, column: 28, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !14143, line: 435, column: 12)
!14252 = distinct !DILexicalBlock(scope: !14248, file: !14143, line: 434, column: 7)
!14253 = !DILocation(line: 435, column: 57, scope: !14251)
!14254 = !DILocation(line: 444, column: 5, scope: !14199)
!14255 = !DILocation(line: 448, column: 5, scope: !14199)
!14256 = !DILocation(line: 451, column: 18, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14199, file: !14143, line: 449, column: 5)
!14258 = !DILocation(line: 452, column: 12, scope: !14257)
!14259 = !DILocation(line: 453, column: 26, scope: !14199)
!14260 = !DILocation(line: 453, column: 38, scope: !14199)
!14261 = !DILocation(line: 453, column: 5, scope: !14257)
!14262 = distinct !{!14262, !14255, !14263}
!14263 = !DILocation(line: 453, column: 54, scope: !14199)
!14264 = !DILocation(line: 0, scope: !14195)
!14265 = !DILocation(line: 464, column: 3, scope: !14183)
!14266 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14267, file: !14267, line: 519, type: !8526, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14267 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14268 = !DILocation(line: 521, column: 21, scope: !14266)
!14269 = !DILocation(line: 521, column: 3, scope: !14266)
!14270 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6999, file: !6999, line: 1543, type: !8536, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14271)
!14271 = !{!14272}
!14272 = !DILocalVariable(name: "Latency", arg: 1, scope: !14270, file: !6999, line: 1543, type: !208)
!14273 = !DILocation(line: 0, scope: !14270)
!14274 = !DILocation(line: 1545, column: 3, scope: !14270)
!14275 = !DILocation(line: 1546, column: 1, scope: !14270)
!14276 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6999, file: !6999, line: 1569, type: !8526, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14277 = !DILocation(line: 1571, column: 21, scope: !14276)
!14278 = !DILocation(line: 1571, column: 3, scope: !14276)
!14279 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14143, file: !14143, line: 483, type: !14280, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14296)
!14280 = !DISubroutineType(types: !14281)
!14281 = !{!14186, !14282, !14289}
!14282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14283, size: 32)
!14283 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14150, line: 114, baseType: !14284)
!14284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14150, line: 94, size: 96, elements: !14285)
!14285 = !{!14286, !14287, !14288}
!14286 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14284, file: !14150, line: 96, baseType: !208, size: 32)
!14287 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14284, file: !14150, line: 102, baseType: !208, size: 32, offset: 32)
!14288 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14284, file: !14150, line: 109, baseType: !208, size: 32, offset: 64)
!14289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14290, size: 32)
!14290 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14150, line: 139, baseType: !14291)
!14291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14150, line: 119, size: 96, elements: !14292)
!14292 = !{!14293, !14294, !14295}
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14291, file: !14150, line: 121, baseType: !208, size: 32)
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14291, file: !14150, line: 127, baseType: !208, size: 32, offset: 32)
!14295 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14291, file: !14150, line: 133, baseType: !208, size: 32, offset: 64)
!14296 = !{!14297, !14298, !14299, !14300}
!14297 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14279, file: !14143, line: 483, type: !14282)
!14298 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14279, file: !14143, line: 484, type: !14289)
!14299 = !DILocalVariable(name: "status", scope: !14279, file: !14143, line: 486, type: !14186)
!14300 = !DILocalVariable(name: "pllfreq", scope: !14279, file: !14143, line: 487, type: !208)
!14301 = !DILocation(line: 0, scope: !14279)
!14302 = !DILocation(line: 490, column: 6, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14279, file: !14143, line: 490, column: 6)
!14304 = !DILocation(line: 490, column: 25, scope: !14303)
!14305 = !DILocation(line: 490, column: 6, scope: !14279)
!14306 = !DILocation(line: 493, column: 15, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14303, file: !14143, line: 491, column: 3)
!14308 = !DILocation(line: 496, column: 8, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14307, file: !14143, line: 496, column: 8)
!14310 = !DILocation(line: 496, column: 29, scope: !14309)
!14311 = !DILocation(line: 496, column: 8, scope: !14307)
!14312 = !DILocation(line: 498, column: 7, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14309, file: !14143, line: 497, column: 5)
!14314 = !DILocation(line: 499, column: 7, scope: !14313)
!14315 = !DILocation(line: 499, column: 14, scope: !14313)
!14316 = !DILocation(line: 499, column: 35, scope: !14313)
!14317 = distinct !{!14317, !14314, !14318}
!14318 = !DILocation(line: 502, column: 7, scope: !14313)
!14319 = !DILocation(line: 506, column: 76, scope: !14307)
!14320 = !DILocation(line: 506, column: 103, scope: !14307)
!14321 = !DILocation(line: 507, column: 54, scope: !14307)
!14322 = !DILocation(line: 506, column: 5, scope: !14307)
!14323 = !DILocation(line: 510, column: 14, scope: !14307)
!14324 = !DILocation(line: 511, column: 3, scope: !14307)
!14325 = !DILocation(line: 0, scope: !14303)
!14326 = !DILocation(line: 518, column: 3, scope: !14279)
!14327 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14143, file: !14143, line: 642, type: !14328, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14330)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{!14186}
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "status", scope: !14327, file: !14143, line: 644, type: !14186)
!14332 = !DILocation(line: 0, scope: !14327)
!14333 = !DILocation(line: 647, column: 6, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14327, file: !14143, line: 647, column: 6)
!14335 = !DILocation(line: 647, column: 27, scope: !14334)
!14336 = !DILocation(line: 655, column: 6, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14327, file: !14143, line: 655, column: 6)
!14338 = !DILocation(line: 655, column: 30, scope: !14337)
!14339 = !DILocation(line: 663, column: 6, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14327, file: !14143, line: 663, column: 6)
!14341 = !DILocation(line: 663, column: 30, scope: !14340)
!14342 = !DILocation(line: 663, column: 6, scope: !14327)
!14343 = !DILocation(line: 669, column: 3, scope: !14327)
!14344 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14143, file: !14143, line: 611, type: !14345, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14347)
!14345 = !DISubroutineType(types: !14346)
!14346 = !{!208, !208, !14282}
!14347 = !{!14348, !14349, !14350}
!14348 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14344, file: !14143, line: 611, type: !208)
!14349 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14344, file: !14143, line: 611, type: !14282)
!14350 = !DILocalVariable(name: "pllfreq", scope: !14344, file: !14143, line: 613, type: !208)
!14351 = !DILocation(line: 0, scope: !14344)
!14352 = !DILocation(line: 622, column: 56, scope: !14344)
!14353 = !DILocation(line: 622, column: 61, scope: !14344)
!14354 = !DILocation(line: 622, column: 32, scope: !14344)
!14355 = !DILocation(line: 626, column: 45, scope: !14344)
!14356 = !DILocation(line: 626, column: 50, scope: !14344)
!14357 = !DILocation(line: 626, column: 21, scope: !14344)
!14358 = !DILocation(line: 630, column: 47, scope: !14344)
!14359 = !DILocation(line: 630, column: 82, scope: !14344)
!14360 = !DILocation(line: 630, column: 21, scope: !14344)
!14361 = !DILocation(line: 633, column: 3, scope: !14344)
!14362 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10719, file: !10719, line: 3007, type: !8526, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14363 = !DILocation(line: 3009, column: 11, scope: !14362)
!14364 = !DILocation(line: 3009, column: 44, scope: !14362)
!14365 = !DILocation(line: 3009, column: 3, scope: !14362)
!14366 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10719, file: !10719, line: 2987, type: !3440, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14367 = !DILocation(line: 2989, column: 3, scope: !14366)
!14368 = !DILocation(line: 2990, column: 1, scope: !14366)
!14369 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10719, file: !10719, line: 4304, type: !10838, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14370)
!14370 = !{!14371, !14372, !14373, !14374}
!14371 = !DILocalVariable(name: "Source", arg: 1, scope: !14369, file: !10719, line: 4304, type: !208)
!14372 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14369, file: !10719, line: 4304, type: !208)
!14373 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14369, file: !10719, line: 4304, type: !208)
!14374 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14369, file: !10719, line: 4304, type: !208)
!14375 = !DILocation(line: 0, scope: !14369)
!14376 = !DILocation(line: 4306, column: 3, scope: !14369)
!14377 = !DILocation(line: 4308, column: 3, scope: !14369)
!14378 = !DILocation(line: 4312, column: 1, scope: !14369)
!14379 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14143, file: !14143, line: 681, type: !14380, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14382)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{!14186, !208, !14289}
!14382 = !{!14383, !14384, !14385, !14386}
!14383 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14379, file: !14143, line: 681, type: !208)
!14384 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14379, file: !14143, line: 681, type: !14289)
!14385 = !DILocalVariable(name: "status", scope: !14379, file: !14143, line: 683, type: !14186)
!14386 = !DILocalVariable(name: "hclk_frequency", scope: !14379, file: !14143, line: 684, type: !208)
!14387 = !DILocation(line: 0, scope: !14379)
!14388 = !DILocation(line: 691, column: 20, scope: !14379)
!14389 = !DILocation(line: 694, column: 6, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14379, file: !14143, line: 694, column: 6)
!14391 = !DILocation(line: 694, column: 22, scope: !14390)
!14392 = !DILocation(line: 694, column: 6, scope: !14379)
!14393 = !DILocation(line: 697, column: 14, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14390, file: !14143, line: 695, column: 3)
!14395 = !DILocation(line: 701, column: 13, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14379, file: !14143, line: 701, column: 6)
!14397 = !DILocation(line: 701, column: 6, scope: !14379)
!14398 = !DILocation(line: 704, column: 5, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14396, file: !14143, line: 702, column: 3)
!14400 = !DILocation(line: 705, column: 5, scope: !14399)
!14401 = !DILocation(line: 705, column: 12, scope: !14399)
!14402 = !DILocation(line: 705, column: 33, scope: !14399)
!14403 = distinct !{!14403, !14400, !14404}
!14404 = !DILocation(line: 708, column: 5, scope: !14399)
!14405 = !DILocation(line: 711, column: 49, scope: !14399)
!14406 = !DILocation(line: 711, column: 5, scope: !14399)
!14407 = !DILocation(line: 712, column: 5, scope: !14399)
!14408 = !DILocation(line: 713, column: 5, scope: !14399)
!14409 = !DILocation(line: 713, column: 12, scope: !14399)
!14410 = !DILocation(line: 713, column: 37, scope: !14399)
!14411 = distinct !{!14411, !14408, !14412}
!14412 = !DILocation(line: 716, column: 5, scope: !14399)
!14413 = !DILocation(line: 719, column: 50, scope: !14399)
!14414 = !DILocation(line: 719, column: 5, scope: !14399)
!14415 = !DILocation(line: 720, column: 50, scope: !14399)
!14416 = !DILocation(line: 720, column: 5, scope: !14399)
!14417 = !DILocation(line: 721, column: 3, scope: !14399)
!14418 = !DILocation(line: 724, column: 6, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14379, file: !14143, line: 724, column: 6)
!14420 = !DILocation(line: 724, column: 22, scope: !14419)
!14421 = !DILocation(line: 724, column: 6, scope: !14379)
!14422 = !DILocation(line: 727, column: 14, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14419, file: !14143, line: 725, column: 3)
!14424 = !DILocation(line: 728, column: 3, scope: !14423)
!14425 = !DILocation(line: 731, column: 13, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14379, file: !14143, line: 731, column: 6)
!14427 = !DILocation(line: 731, column: 6, scope: !14379)
!14428 = !DILocation(line: 733, column: 5, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14426, file: !14143, line: 732, column: 3)
!14430 = !DILocation(line: 734, column: 3, scope: !14429)
!14431 = !DILocation(line: 736, column: 3, scope: !14379)
!14432 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10719, file: !10719, line: 4184, type: !3440, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14433 = !DILocation(line: 4186, column: 3, scope: !14432)
!14434 = !DILocation(line: 4187, column: 1, scope: !14432)
!14435 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10719, file: !10719, line: 4205, type: !8526, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14436 = !DILocation(line: 4207, column: 11, scope: !14435)
!14437 = !DILocation(line: 4207, column: 44, scope: !14435)
!14438 = !DILocation(line: 4207, column: 3, scope: !14435)
!14439 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10719, file: !10719, line: 3224, type: !8536, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14440)
!14440 = !{!14441}
!14441 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14439, file: !10719, line: 3224, type: !208)
!14442 = !DILocation(line: 0, scope: !14439)
!14443 = !DILocation(line: 3226, column: 3, scope: !14439)
!14444 = !DILocation(line: 3227, column: 1, scope: !14439)
!14445 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10719, file: !10719, line: 3188, type: !8536, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14446)
!14446 = !{!14447}
!14447 = !DILocalVariable(name: "Source", arg: 1, scope: !14445, file: !10719, line: 3188, type: !208)
!14448 = !DILocation(line: 0, scope: !14445)
!14449 = !DILocation(line: 3190, column: 3, scope: !14445)
!14450 = !DILocation(line: 3191, column: 1, scope: !14445)
!14451 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10719, file: !10719, line: 3204, type: !8526, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14452 = !DILocation(line: 3206, column: 21, scope: !14451)
!14453 = !DILocation(line: 3206, column: 3, scope: !14451)
!14454 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10719, file: !10719, line: 3240, type: !8536, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14455)
!14455 = !{!14456}
!14456 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14454, file: !10719, line: 3240, type: !208)
!14457 = !DILocation(line: 0, scope: !14454)
!14458 = !DILocation(line: 3242, column: 3, scope: !14454)
!14459 = !DILocation(line: 3243, column: 1, scope: !14454)
!14460 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10719, file: !10719, line: 3256, type: !8536, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14461)
!14461 = !{!14462}
!14462 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14460, file: !10719, line: 3256, type: !208)
!14463 = !DILocation(line: 0, scope: !14460)
!14464 = !DILocation(line: 3258, column: 3, scope: !14460)
!14465 = !DILocation(line: 3259, column: 1, scope: !14460)
!14466 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10719, file: !10719, line: 5969, type: !8526, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14467 = !DILocation(line: 5971, column: 11, scope: !14466)
!14468 = !DILocation(line: 5971, column: 47, scope: !14466)
!14469 = !DILocation(line: 5971, column: 3, scope: !14466)
!14470 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10719, file: !10719, line: 5153, type: !8526, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14471 = !DILocation(line: 5155, column: 11, scope: !14470)
!14472 = !DILocation(line: 5155, column: 47, scope: !14470)
!14473 = !DILocation(line: 5155, column: 3, scope: !14470)
!14474 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14143, file: !14143, line: 540, type: !14475, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !14477)
!14475 = !DISubroutineType(types: !14476)
!14476 = !{!14186, !208, !208, !14282, !14289}
!14477 = !{!14478, !14479, !14480, !14481, !14482, !14483}
!14478 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14474, file: !14143, line: 540, type: !208)
!14479 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14474, file: !14143, line: 540, type: !208)
!14480 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14474, file: !14143, line: 541, type: !14282)
!14481 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14474, file: !14143, line: 541, type: !14289)
!14482 = !DILocalVariable(name: "status", scope: !14474, file: !14143, line: 543, type: !14186)
!14483 = !DILocalVariable(name: "pllfreq", scope: !14474, file: !14143, line: 544, type: !208)
!14484 = !DILocation(line: 0, scope: !14474)
!14485 = !DILocation(line: 551, column: 6, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14474, file: !14143, line: 551, column: 6)
!14487 = !DILocation(line: 551, column: 25, scope: !14486)
!14488 = !DILocation(line: 551, column: 6, scope: !14474)
!14489 = !DILocation(line: 554, column: 15, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14486, file: !14143, line: 552, column: 3)
!14491 = !DILocation(line: 557, column: 8, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14490, file: !14143, line: 557, column: 8)
!14493 = !DILocation(line: 557, column: 29, scope: !14492)
!14494 = !DILocation(line: 557, column: 8, scope: !14490)
!14495 = !DILocation(line: 560, column: 20, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14497, file: !14143, line: 560, column: 10)
!14497 = distinct !DILexicalBlock(scope: !14492, file: !14143, line: 558, column: 5)
!14498 = !DILocation(line: 560, column: 10, scope: !14497)
!14499 = !DILocation(line: 562, column: 9, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14496, file: !14143, line: 561, column: 7)
!14501 = !DILocation(line: 563, column: 7, scope: !14500)
!14502 = !DILocation(line: 566, column: 9, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14496, file: !14143, line: 565, column: 7)
!14504 = !DILocation(line: 570, column: 7, scope: !14497)
!14505 = !DILocation(line: 571, column: 7, scope: !14497)
!14506 = !DILocation(line: 571, column: 14, scope: !14497)
!14507 = !DILocation(line: 571, column: 35, scope: !14497)
!14508 = distinct !{!14508, !14505, !14509}
!14509 = !DILocation(line: 574, column: 7, scope: !14497)
!14510 = !DILocation(line: 578, column: 76, scope: !14490)
!14511 = !DILocation(line: 578, column: 103, scope: !14490)
!14512 = !DILocation(line: 579, column: 54, scope: !14490)
!14513 = !DILocation(line: 578, column: 5, scope: !14490)
!14514 = !DILocation(line: 582, column: 14, scope: !14490)
!14515 = !DILocation(line: 583, column: 3, scope: !14490)
!14516 = !DILocation(line: 0, scope: !14486)
!14517 = !DILocation(line: 590, column: 3, scope: !14474)
!14518 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10719, file: !10719, line: 2969, type: !8526, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14519 = !DILocation(line: 2971, column: 11, scope: !14518)
!14520 = !DILocation(line: 2971, column: 44, scope: !14518)
!14521 = !DILocation(line: 2971, column: 3, scope: !14518)
!14522 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10719, file: !10719, line: 2929, type: !3440, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14523 = !DILocation(line: 2931, column: 3, scope: !14522)
!14524 = !DILocation(line: 2932, column: 1, scope: !14522)
!14525 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10719, file: !10719, line: 2939, type: !3440, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14526 = !DILocation(line: 2941, column: 3, scope: !14525)
!14527 = !DILocation(line: 2942, column: 1, scope: !14525)
!14528 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10719, file: !10719, line: 2949, type: !3440, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3335, retainedNodes: !639)
!14529 = !DILocation(line: 2951, column: 3, scope: !14528)
!14530 = !DILocation(line: 2952, column: 1, scope: !14528)
!14531 = distinct !DISubprogram(name: "z_device_state_init", scope: !14532, file: !14532, line: 23, type: !3440, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14533)
!14532 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14533 = !{!14534}
!14534 = !DILocalVariable(name: "dev", scope: !14531, file: !14532, line: 25, type: !14535)
!14535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14536, size: 32)
!14536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14537)
!14537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !14538)
!14538 = !{!14539, !14540, !14541, !14542, !14548, !14549}
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14537, file: !137, line: 380, baseType: !140, size: 32)
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14537, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14537, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14537, file: !137, line: 386, baseType: !14543, size: 32, offset: 96)
!14543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14544, size: 32)
!14544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !14545)
!14545 = !{!14546, !14547}
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14544, file: !137, line: 359, baseType: !150, size: 8)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14544, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14537, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14537, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!14550 = !DILocation(line: 0, scope: !14531)
!14551 = !DILocation(line: 31, column: 1, scope: !14531)
!14552 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14532, file: !14532, line: 33, type: !14553, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14555)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{!14535, !140}
!14555 = !{!14556, !14557}
!14556 = !DILocalVariable(name: "name", arg: 1, scope: !14552, file: !14532, line: 33, type: !140)
!14557 = !DILocalVariable(name: "dev", scope: !14552, file: !14532, line: 35, type: !14535)
!14558 = !DILocation(line: 0, scope: !14552)
!14559 = !DILocation(line: 40, column: 12, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14552, file: !14532, line: 40, column: 6)
!14561 = !DILocation(line: 40, column: 21, scope: !14560)
!14562 = !DILocation(line: 40, column: 25, scope: !14560)
!14563 = !DILocation(line: 40, column: 33, scope: !14560)
!14564 = !DILocation(line: 40, column: 6, scope: !14552)
!14565 = !DILocation(line: 55, column: 2, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14552, file: !14532, line: 55, column: 2)
!14567 = !DILocation(line: 50, column: 7, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !14532, line: 50, column: 7)
!14569 = distinct !DILexicalBlock(scope: !14570, file: !14532, line: 49, column: 57)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !14532, line: 49, column: 2)
!14571 = distinct !DILexicalBlock(scope: !14552, file: !14532, line: 49, column: 2)
!14572 = !DILocation(line: 50, column: 30, scope: !14568)
!14573 = !DILocation(line: 50, column: 39, scope: !14568)
!14574 = !DILocation(line: 50, column: 44, scope: !14568)
!14575 = !DILocation(line: 50, column: 7, scope: !14569)
!14576 = !DILocation(line: 49, column: 53, scope: !14570)
!14577 = !DILocation(line: 49, column: 33, scope: !14570)
!14578 = !DILocation(line: 49, column: 2, scope: !14571)
!14579 = distinct !{!14579, !14578, !14580}
!14580 = !DILocation(line: 53, column: 2, scope: !14571)
!14581 = !DILocation(line: 56, column: 7, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !14532, line: 56, column: 7)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !14532, line: 55, column: 57)
!14584 = distinct !DILexicalBlock(scope: !14566, file: !14532, line: 55, column: 2)
!14585 = !DILocation(line: 56, column: 30, scope: !14582)
!14586 = !DILocation(line: 56, column: 52, scope: !14582)
!14587 = !DILocation(line: 56, column: 34, scope: !14582)
!14588 = !DILocation(line: 56, column: 58, scope: !14582)
!14589 = !DILocation(line: 56, column: 7, scope: !14583)
!14590 = !DILocation(line: 55, column: 53, scope: !14584)
!14591 = !DILocation(line: 55, column: 33, scope: !14584)
!14592 = distinct !{!14592, !14565, !14593}
!14593 = !DILocation(line: 59, column: 2, scope: !14566)
!14594 = !DILocation(line: 62, column: 1, scope: !14552)
!14595 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14532, file: !14532, line: 93, type: !14596, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14598)
!14596 = !DISubroutineType(types: !14597)
!14597 = !{!153, !14535}
!14598 = !{!14599}
!14599 = !DILocalVariable(name: "dev", arg: 1, scope: !14595, file: !14532, line: 93, type: !14535)
!14600 = !DILocation(line: 0, scope: !14595)
!14601 = !DILocation(line: 99, column: 10, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14595, file: !14532, line: 99, column: 6)
!14603 = !DILocation(line: 99, column: 6, scope: !14595)
!14604 = !DILocation(line: 103, column: 14, scope: !14595)
!14605 = !DILocation(line: 103, column: 21, scope: !14595)
!14606 = !DILocation(line: 103, column: 33, scope: !14595)
!14607 = !DILocation(line: 103, column: 49, scope: !14595)
!14608 = !DILocation(line: 103, column: 58, scope: !14595)
!14609 = !DILocation(line: 104, column: 1, scope: !14595)
!14610 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14532, file: !14532, line: 87, type: !14611, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14614)
!14611 = !DISubroutineType(types: !14612)
!14612 = !{!272, !14613}
!14613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14535, size: 32)
!14614 = !{!14615}
!14615 = !DILocalVariable(name: "devices", arg: 1, scope: !14610, file: !14532, line: 87, type: !14613)
!14616 = !DILocation(line: 0, scope: !14610)
!14617 = !DILocation(line: 89, column: 11, scope: !14610)
!14618 = !DILocation(line: 90, column: 2, scope: !14610)
!14619 = distinct !DISubprogram(name: "device_required_foreach", scope: !14532, file: !14532, line: 125, type: !14620, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14626)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{!125, !14535, !14622, !124}
!14622 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !14623)
!14623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14624, size: 32)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{!125, !14535, !124}
!14626 = !{!14627, !14628, !14629, !14630, !14631}
!14627 = !DILocalVariable(name: "dev", arg: 1, scope: !14619, file: !14532, line: 125, type: !14535)
!14628 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14619, file: !14532, line: 126, type: !14622)
!14629 = !DILocalVariable(name: "context", arg: 3, scope: !14619, file: !14532, line: 127, type: !124)
!14630 = !DILocalVariable(name: "handle_count", scope: !14619, file: !14532, line: 129, type: !272)
!14631 = !DILocalVariable(name: "handles", scope: !14619, file: !14532, line: 130, type: !156)
!14632 = !DILocation(line: 0, scope: !14619)
!14633 = !DILocation(line: 129, column: 2, scope: !14619)
!14634 = !DILocation(line: 129, column: 9, scope: !14619)
!14635 = !DILocation(line: 130, column: 35, scope: !14619)
!14636 = !DILocation(line: 132, column: 33, scope: !14619)
!14637 = !DILocation(line: 132, column: 9, scope: !14619)
!14638 = !DILocation(line: 133, column: 1, scope: !14619)
!14639 = !DILocation(line: 132, column: 2, scope: !14619)
!14640 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !14641, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{!156, !14535, !2858}
!14643 = !{!14644, !14645, !14646, !14647}
!14644 = !DILocalVariable(name: "dev", arg: 1, scope: !14640, file: !137, line: 493, type: !14535)
!14645 = !DILocalVariable(name: "count", arg: 2, scope: !14640, file: !137, line: 493, type: !2858)
!14646 = !DILocalVariable(name: "rv", scope: !14640, file: !137, line: 495, type: !156)
!14647 = !DILocalVariable(name: "i", scope: !14648, file: !137, line: 498, type: !272)
!14648 = distinct !DILexicalBlock(scope: !14649, file: !137, line: 497, column: 18)
!14649 = distinct !DILexicalBlock(scope: !14640, file: !137, line: 497, column: 6)
!14650 = !DILocation(line: 0, scope: !14640)
!14651 = !DILocation(line: 495, column: 35, scope: !14640)
!14652 = !DILocation(line: 497, column: 9, scope: !14649)
!14653 = !DILocation(line: 497, column: 6, scope: !14640)
!14654 = !DILocation(line: 0, scope: !14648)
!14655 = !DILocation(line: 500, column: 11, scope: !14648)
!14656 = !DILocation(line: 500, column: 40, scope: !14648)
!14657 = !DILocation(line: 502, column: 4, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14648, file: !137, line: 501, column: 40)
!14659 = distinct !{!14659, !14660, !14661}
!14660 = !DILocation(line: 500, column: 3, scope: !14648)
!14661 = !DILocation(line: 503, column: 3, scope: !14648)
!14662 = !DILocation(line: 504, column: 10, scope: !14648)
!14663 = !DILocation(line: 505, column: 2, scope: !14648)
!14664 = !DILocation(line: 507, column: 2, scope: !14640)
!14665 = distinct !DISubprogram(name: "device_visitor", scope: !14532, file: !14532, line: 106, type: !14666, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14668)
!14666 = !DISubroutineType(types: !14667)
!14667 = !{!125, !156, !272, !14622, !124}
!14668 = !{!14669, !14670, !14671, !14672, !14673, !14675, !14678, !14679}
!14669 = !DILocalVariable(name: "handles", arg: 1, scope: !14665, file: !14532, line: 106, type: !156)
!14670 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14665, file: !14532, line: 107, type: !272)
!14671 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14665, file: !14532, line: 108, type: !14622)
!14672 = !DILocalVariable(name: "context", arg: 4, scope: !14665, file: !14532, line: 109, type: !124)
!14673 = !DILocalVariable(name: "i", scope: !14674, file: !14532, line: 112, type: !272)
!14674 = distinct !DILexicalBlock(scope: !14665, file: !14532, line: 112, column: 2)
!14675 = !DILocalVariable(name: "dh", scope: !14676, file: !14532, line: 113, type: !158)
!14676 = distinct !DILexicalBlock(scope: !14677, file: !14532, line: 112, column: 44)
!14677 = distinct !DILexicalBlock(scope: !14674, file: !14532, line: 112, column: 2)
!14678 = !DILocalVariable(name: "rdev", scope: !14676, file: !14532, line: 114, type: !14535)
!14679 = !DILocalVariable(name: "rc", scope: !14676, file: !14532, line: 115, type: !125)
!14680 = !DILocation(line: 0, scope: !14665)
!14681 = !DILocation(line: 0, scope: !14674)
!14682 = !DILocation(line: 112, column: 23, scope: !14677)
!14683 = !DILocation(line: 112, column: 2, scope: !14674)
!14684 = distinct !{!14684, !14683, !14685}
!14685 = !DILocation(line: 120, column: 2, scope: !14674)
!14686 = !DILocation(line: 113, column: 24, scope: !14676)
!14687 = !DILocation(line: 0, scope: !14676)
!14688 = !DILocation(line: 114, column: 31, scope: !14676)
!14689 = !DILocation(line: 115, column: 12, scope: !14676)
!14690 = !DILocation(line: 117, column: 10, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14676, file: !14532, line: 117, column: 7)
!14692 = !DILocation(line: 112, column: 39, scope: !14677)
!14693 = !DILocation(line: 123, column: 1, scope: !14665)
!14694 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !14695, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14697)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{!14535, !158}
!14697 = !{!14698, !14699, !14700}
!14698 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14694, file: !137, line: 439, type: !158)
!14699 = !DILocalVariable(name: "dev", scope: !14694, file: !137, line: 443, type: !14535)
!14700 = !DILocalVariable(name: "numdev", scope: !14694, file: !137, line: 444, type: !272)
!14701 = !DILocation(line: 0, scope: !14694)
!14702 = !DILocation(line: 446, column: 7, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14694, file: !137, line: 446, column: 6)
!14704 = !DILocation(line: 446, column: 18, scope: !14703)
!14705 = !DILocation(line: 446, column: 23, scope: !14703)
!14706 = !DILocation(line: 450, column: 2, scope: !14694)
!14707 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14532, file: !14532, line: 135, type: !14620, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14708)
!14708 = !{!14709, !14710, !14711, !14712, !14713}
!14709 = !DILocalVariable(name: "dev", arg: 1, scope: !14707, file: !14532, line: 135, type: !14535)
!14710 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14707, file: !14532, line: 136, type: !14622)
!14711 = !DILocalVariable(name: "context", arg: 3, scope: !14707, file: !14532, line: 137, type: !124)
!14712 = !DILocalVariable(name: "handle_count", scope: !14707, file: !14532, line: 139, type: !272)
!14713 = !DILocalVariable(name: "handles", scope: !14707, file: !14532, line: 140, type: !156)
!14714 = !DILocation(line: 0, scope: !14707)
!14715 = !DILocation(line: 139, column: 2, scope: !14707)
!14716 = !DILocation(line: 139, column: 9, scope: !14707)
!14717 = !DILocation(line: 140, column: 35, scope: !14707)
!14718 = !DILocation(line: 142, column: 33, scope: !14707)
!14719 = !DILocation(line: 142, column: 9, scope: !14707)
!14720 = !DILocation(line: 143, column: 1, scope: !14707)
!14721 = !DILocation(line: 142, column: 2, scope: !14707)
!14722 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !14641, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !14723)
!14723 = !{!14724, !14725, !14726, !14727, !14728}
!14724 = !DILocalVariable(name: "dev", arg: 1, scope: !14722, file: !137, line: 573, type: !14535)
!14725 = !DILocalVariable(name: "count", arg: 2, scope: !14722, file: !137, line: 573, type: !2858)
!14726 = !DILocalVariable(name: "rv", scope: !14722, file: !137, line: 575, type: !156)
!14727 = !DILocalVariable(name: "region", scope: !14722, file: !137, line: 576, type: !272)
!14728 = !DILocalVariable(name: "i", scope: !14722, file: !137, line: 577, type: !272)
!14729 = !DILocation(line: 0, scope: !14722)
!14730 = !DILocation(line: 575, column: 35, scope: !14722)
!14731 = !DILocation(line: 579, column: 9, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14722, file: !137, line: 579, column: 6)
!14733 = !DILocation(line: 579, column: 6, scope: !14722)
!14734 = !DILocation(line: 582, column: 8, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !137, line: 582, column: 8)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !137, line: 581, column: 23)
!14737 = distinct !DILexicalBlock(scope: !14732, file: !137, line: 579, column: 18)
!14738 = !DILocation(line: 582, column: 12, scope: !14735)
!14739 = !DILocation(line: 585, column: 6, scope: !14736)
!14740 = !DILocation(line: 0, scope: !14737)
!14741 = !DILocation(line: 581, column: 17, scope: !14737)
!14742 = !DILocation(line: 581, column: 3, scope: !14737)
!14743 = !DILocation(line: 588, column: 10, scope: !14737)
!14744 = !DILocation(line: 588, column: 16, scope: !14737)
!14745 = !DILocation(line: 589, column: 4, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14737, file: !137, line: 588, column: 39)
!14747 = !DILocation(line: 588, column: 3, scope: !14737)
!14748 = distinct !{!14748, !14747, !14749}
!14749 = !DILocation(line: 590, column: 3, scope: !14737)
!14750 = !DILocation(line: 591, column: 10, scope: !14737)
!14751 = !DILocation(line: 592, column: 2, scope: !14737)
!14752 = !DILocation(line: 575, column: 25, scope: !14722)
!14753 = !DILocation(line: 594, column: 2, scope: !14722)
!14754 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2277, file: !2277, line: 49, type: !14755, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !639)
!14755 = !DISubroutineType(types: !14756)
!14756 = !{!387}
!14757 = !DILocation(line: 51, column: 10, scope: !14754)
!14758 = !DILocation(line: 51, column: 20, scope: !14754)
!14759 = !DILocation(line: 51, column: 2, scope: !14754)
!14760 = distinct !DISubprogram(name: "coredump", scope: !3407, file: !3407, line: 209, type: !14761, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14907)
!14761 = !DISubroutineType(types: !14762)
!14762 = !{null, !32, !14763, !14807}
!14763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14764, size: 32)
!14764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14765)
!14765 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3020, line: 141, baseType: !14766)
!14766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3020, line: 97, size: 256, elements: !14767)
!14767 = !{!14768}
!14768 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14766, file: !3020, line: 107, baseType: !14769, size: 256)
!14769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3020, line: 98, size: 256, elements: !14770)
!14770 = !{!14771, !14776, !14781, !14786, !14791, !14796, !14801, !14806}
!14771 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 99, baseType: !14772, size: 32)
!14772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 99, size: 32, elements: !14773)
!14773 = !{!14774, !14775}
!14774 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14772, file: !3020, line: 99, baseType: !208, size: 32)
!14775 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14772, file: !3020, line: 99, baseType: !208, size: 32)
!14776 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 100, baseType: !14777, size: 32, offset: 32)
!14777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 100, size: 32, elements: !14778)
!14778 = !{!14779, !14780}
!14779 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14777, file: !3020, line: 100, baseType: !208, size: 32)
!14780 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14777, file: !3020, line: 100, baseType: !208, size: 32)
!14781 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 101, baseType: !14782, size: 32, offset: 64)
!14782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 101, size: 32, elements: !14783)
!14783 = !{!14784, !14785}
!14784 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14782, file: !3020, line: 101, baseType: !208, size: 32)
!14785 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14782, file: !3020, line: 101, baseType: !208, size: 32)
!14786 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 102, baseType: !14787, size: 32, offset: 96)
!14787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 102, size: 32, elements: !14788)
!14788 = !{!14789, !14790}
!14789 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14787, file: !3020, line: 102, baseType: !208, size: 32)
!14790 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14787, file: !3020, line: 102, baseType: !208, size: 32)
!14791 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 103, baseType: !14792, size: 32, offset: 128)
!14792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 103, size: 32, elements: !14793)
!14793 = !{!14794, !14795}
!14794 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14792, file: !3020, line: 103, baseType: !208, size: 32)
!14795 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14792, file: !3020, line: 103, baseType: !208, size: 32)
!14796 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 104, baseType: !14797, size: 32, offset: 160)
!14797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 104, size: 32, elements: !14798)
!14798 = !{!14799, !14800}
!14799 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14797, file: !3020, line: 104, baseType: !208, size: 32)
!14800 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14797, file: !3020, line: 104, baseType: !208, size: 32)
!14801 = !DIDerivedType(tag: DW_TAG_member, scope: !14769, file: !3020, line: 105, baseType: !14802, size: 32, offset: 192)
!14802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14769, file: !3020, line: 105, size: 32, elements: !14803)
!14803 = !{!14804, !14805}
!14804 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14802, file: !3020, line: 105, baseType: !208, size: 32)
!14805 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14802, file: !3020, line: 105, baseType: !208, size: 32)
!14806 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14769, file: !3020, line: 106, baseType: !208, size: 32, offset: 224)
!14807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14808, size: 32)
!14808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !14809)
!14809 = !{!14810, !14868, !14880, !14881, !14882, !14883, !14889, !14902}
!14810 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14808, file: !531, line: 247, baseType: !14811, size: 384)
!14811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !14812)
!14812 = !{!14813, !14837, !14844, !14845, !14846, !14855, !14856, !14857}
!14813 = !DIDerivedType(tag: DW_TAG_member, scope: !14811, file: !531, line: 60, baseType: !14814, size: 64)
!14814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14811, file: !531, line: 60, size: 64, elements: !14815)
!14815 = !{!14816, !14831}
!14816 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14814, file: !531, line: 61, baseType: !14817, size: 64)
!14817 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !14818)
!14818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !14819)
!14819 = !{!14820, !14826}
!14820 = !DIDerivedType(tag: DW_TAG_member, scope: !14818, file: !541, line: 38, baseType: !14821, size: 32)
!14821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14818, file: !541, line: 38, size: 32, elements: !14822)
!14822 = !{!14823, !14825}
!14823 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14821, file: !541, line: 39, baseType: !14824, size: 32)
!14824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14818, size: 32)
!14825 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14821, file: !541, line: 40, baseType: !14824, size: 32)
!14826 = !DIDerivedType(tag: DW_TAG_member, scope: !14818, file: !541, line: 42, baseType: !14827, size: 32, offset: 32)
!14827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14818, file: !541, line: 42, size: 32, elements: !14828)
!14828 = !{!14829, !14830}
!14829 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14827, file: !541, line: 43, baseType: !14824, size: 32)
!14830 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14827, file: !541, line: 44, baseType: !14824, size: 32)
!14831 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14814, file: !531, line: 62, baseType: !14832, size: 64)
!14832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !14833)
!14833 = !{!14834}
!14834 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14832, file: !557, line: 50, baseType: !14835, size: 64)
!14835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14836, size: 64, elements: !562)
!14836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14832, size: 32)
!14837 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14811, file: !531, line: 68, baseType: !14838, size: 32, offset: 64)
!14838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14839, size: 32)
!14839 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !14840)
!14840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !14841)
!14841 = !{!14842}
!14842 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14840, file: !567, line: 232, baseType: !14843, size: 64)
!14843 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !14818)
!14844 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14811, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!14845 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14811, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!14846 = !DIDerivedType(tag: DW_TAG_member, scope: !14811, file: !531, line: 90, baseType: !14847, size: 16, offset: 112)
!14847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14811, file: !531, line: 90, size: 16, elements: !14848)
!14848 = !{!14849, !14854}
!14849 = !DIDerivedType(tag: DW_TAG_member, scope: !14847, file: !531, line: 91, baseType: !14850, size: 16)
!14850 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14847, file: !531, line: 91, size: 16, elements: !14851)
!14851 = !{!14852, !14853}
!14852 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14850, file: !531, line: 96, baseType: !581, size: 8)
!14853 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14850, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!14854 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14847, file: !531, line: 100, baseType: !227, size: 16)
!14855 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14811, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!14856 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14811, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!14857 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14811, file: !531, line: 131, baseType: !14858, size: 192, offset: 192)
!14858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !14859)
!14859 = !{!14860, !14861, !14867}
!14860 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14858, file: !567, line: 245, baseType: !14817, size: 64)
!14861 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14858, file: !567, line: 246, baseType: !14862, size: 32, offset: 64)
!14862 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !14863)
!14863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14864, size: 32)
!14864 = !DISubroutineType(types: !14865)
!14865 = !{null, !14866}
!14866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14858, size: 32)
!14867 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14858, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!14868 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14808, file: !531, line: 250, baseType: !14869, size: 288, offset: 384)
!14869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !14870)
!14870 = !{!14871, !14872, !14873, !14874, !14875, !14876, !14877, !14878, !14879}
!14871 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14869, file: !601, line: 26, baseType: !208, size: 32)
!14872 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14869, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!14873 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14869, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!14874 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14869, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!14875 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14869, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!14876 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14869, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!14877 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14869, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!14878 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14869, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!14879 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14869, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!14880 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14808, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!14881 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14808, file: !531, line: 256, baseType: !14839, size: 64, offset: 704)
!14882 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14808, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!14883 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14808, file: !531, line: 300, baseType: !14884, size: 96, offset: 800)
!14884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !14885)
!14885 = !{!14886, !14887, !14888}
!14886 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14884, file: !531, line: 153, baseType: !22, size: 32)
!14887 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14884, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!14888 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14884, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!14889 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14808, file: !531, line: 325, baseType: !14890, size: 32, offset: 896)
!14890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14891, size: 32)
!14891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !14892)
!14892 = !{!14893, !14899, !14900}
!14893 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14891, file: !624, line: 5074, baseType: !14894, size: 96)
!14894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !14895)
!14895 = !{!14896, !14897, !14898}
!14896 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14894, file: !628, line: 57, baseType: !631, size: 32)
!14897 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14894, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!14898 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14894, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!14899 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14891, file: !624, line: 5075, baseType: !14839, size: 64, offset: 96)
!14900 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14891, file: !624, line: 5076, baseType: !14901, offset: 160)
!14901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!14902 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14808, file: !531, line: 343, baseType: !14903, size: 64, offset: 928)
!14903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !14904)
!14904 = !{!14905, !14906}
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14903, file: !601, line: 63, baseType: !208, size: 32)
!14906 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14903, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!14907 = !{!14908, !14909, !14910}
!14908 = !DILocalVariable(name: "reason", arg: 1, scope: !14760, file: !3407, line: 209, type: !32)
!14909 = !DILocalVariable(name: "esf", arg: 2, scope: !14760, file: !3407, line: 209, type: !14763)
!14910 = !DILocalVariable(name: "thread", arg: 3, scope: !14760, file: !3407, line: 210, type: !14807)
!14911 = !DILocation(line: 0, scope: !14760)
!14912 = !DILocation(line: 212, column: 1, scope: !14760)
!14913 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3407, file: !3407, line: 214, type: !14914, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{null, !22, !22}
!14916 = !{!14917, !14918}
!14917 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14913, file: !3407, line: 214, type: !22)
!14918 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14913, file: !3407, line: 214, type: !22)
!14919 = !DILocation(line: 0, scope: !14913)
!14920 = !DILocation(line: 216, column: 1, scope: !14913)
!14921 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3407, file: !3407, line: 218, type: !14922, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14924)
!14922 = !DISubroutineType(types: !14923)
!14923 = !{null, !184, !272}
!14924 = !{!14925, !14926}
!14925 = !DILocalVariable(name: "buf", arg: 1, scope: !14921, file: !3407, line: 218, type: !184)
!14926 = !DILocalVariable(name: "buflen", arg: 2, scope: !14921, file: !3407, line: 218, type: !272)
!14927 = !DILocation(line: 0, scope: !14921)
!14928 = !DILocation(line: 220, column: 1, scope: !14921)
!14929 = distinct !DISubprogram(name: "coredump_query", scope: !3407, file: !3407, line: 222, type: !14930, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14932)
!14930 = !DISubroutineType(types: !14931)
!14931 = !{!125, !3406, !124}
!14932 = !{!14933, !14934}
!14933 = !DILocalVariable(name: "query_id", arg: 1, scope: !14929, file: !3407, line: 222, type: !3406)
!14934 = !DILocalVariable(name: "arg", arg: 2, scope: !14929, file: !3407, line: 222, type: !124)
!14935 = !DILocation(line: 0, scope: !14929)
!14936 = !DILocation(line: 224, column: 2, scope: !14929)
!14937 = distinct !DISubprogram(name: "coredump_cmd", scope: !3407, file: !3407, line: 227, type: !14938, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14940)
!14938 = !DISubroutineType(types: !14939)
!14939 = !{!125, !3413, !124}
!14940 = !{!14941, !14942}
!14941 = !DILocalVariable(name: "query_id", arg: 1, scope: !14937, file: !3407, line: 227, type: !3413)
!14942 = !DILocalVariable(name: "arg", arg: 2, scope: !14937, file: !3407, line: 227, type: !124)
!14943 = !DILocation(line: 0, scope: !14937)
!14944 = !DILocation(line: 229, column: 2, scope: !14937)
!14945 = distinct !DISubprogram(name: "arch_system_halt", scope: !14946, file: !14946, line: 23, type: !6989, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14947)
!14946 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14947 = !{!14948}
!14948 = !DILocalVariable(name: "reason", arg: 1, scope: !14945, file: !14946, line: 23, type: !32)
!14949 = !DILocation(line: 0, scope: !14945)
!14950 = !DILocation(line: 55, column: 2, scope: !14951, inlinedAt: !14955)
!14951 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14952)
!14952 = !{!14953, !14954}
!14953 = !DILocalVariable(name: "key", scope: !14951, file: !6978, line: 44, type: !32)
!14954 = !DILocalVariable(name: "tmp", scope: !14951, file: !6978, line: 53, type: !32)
!14955 = distinct !DILocation(line: 31, column: 8, scope: !14945)
!14956 = !{i64 2596642}
!14957 = !DILocation(line: 0, scope: !14951, inlinedAt: !14955)
!14958 = !DILocation(line: 32, column: 2, scope: !14945)
!14959 = !DILocation(line: 32, column: 2, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14961, file: !14946, line: 32, column: 2)
!14961 = distinct !DILexicalBlock(scope: !14945, file: !14946, line: 32, column: 2)
!14962 = distinct !{!14962, !14963, !14964}
!14963 = !DILocation(line: 32, column: 2, scope: !14961)
!14964 = !DILocation(line: 34, column: 2, scope: !14961)
!14965 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14946, file: !14946, line: 39, type: !14966, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{null, !32, !14763}
!14968 = !{!14969, !14970}
!14969 = !DILocalVariable(name: "reason", arg: 1, scope: !14965, file: !14946, line: 39, type: !32)
!14970 = !DILocalVariable(name: "esf", arg: 2, scope: !14965, file: !14946, line: 40, type: !14763)
!14971 = !DILocation(line: 0, scope: !14965)
!14972 = !DILocation(line: 45, column: 2, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14974, file: !14946, line: 45, column: 2)
!14974 = distinct !DILexicalBlock(scope: !14975, file: !14946, line: 45, column: 2)
!14975 = distinct !DILexicalBlock(scope: !14976, file: !14946, line: 45, column: 2)
!14976 = distinct !DILexicalBlock(scope: !14965, file: !14946, line: 45, column: 2)
!14977 = !DILocation(line: 46, column: 2, scope: !14965)
!14978 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14946, file: !14946, line: 81, type: !6989, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14979)
!14979 = !{!14980}
!14980 = !DILocalVariable(name: "reason", arg: 1, scope: !14978, file: !14946, line: 81, type: !32)
!14981 = !DILocation(line: 0, scope: !14978)
!14982 = !DILocation(line: 83, column: 2, scope: !14978)
!14983 = distinct !DISubprogram(name: "z_fatal_error", scope: !14946, file: !14946, line: 96, type: !14966, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !14984)
!14984 = !{!14985, !14986, !14987, !14988}
!14985 = !DILocalVariable(name: "reason", arg: 1, scope: !14983, file: !14946, line: 96, type: !32)
!14986 = !DILocalVariable(name: "esf", arg: 2, scope: !14983, file: !14946, line: 96, type: !14763)
!14987 = !DILocalVariable(name: "key", scope: !14983, file: !14946, line: 102, type: !32)
!14988 = !DILocalVariable(name: "thread", scope: !14983, file: !14946, line: 103, type: !14807)
!14989 = !DILocation(line: 0, scope: !14983)
!14990 = !DILocation(line: 55, column: 2, scope: !14951, inlinedAt: !14991)
!14991 = distinct !DILocation(line: 102, column: 21, scope: !14983)
!14992 = !DILocation(line: 0, scope: !14951, inlinedAt: !14991)
!14993 = !DILocation(line: 104, column: 4, scope: !14983)
!14994 = !DILocation(line: 109, column: 2, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !14946, line: 109, column: 2)
!14996 = distinct !DILexicalBlock(scope: !14997, file: !14946, line: 109, column: 2)
!14997 = distinct !DILexicalBlock(scope: !14998, file: !14946, line: 109, column: 2)
!14998 = distinct !DILexicalBlock(scope: !14983, file: !14946, line: 109, column: 2)
!14999 = !DILocation(line: 119, column: 11, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14983, file: !14946, line: 119, column: 6)
!15001 = !DILocation(line: 119, column: 20, scope: !15000)
!15002 = !DILocalVariable(name: "esf", arg: 1, scope: !15003, file: !9463, line: 71, type: !14763)
!15003 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9463, file: !9463, line: 71, type: !15004, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{!153, !14763}
!15006 = !{!15002}
!15007 = !DILocation(line: 0, scope: !15003, inlinedAt: !15008)
!15008 = distinct !DILocation(line: 119, column: 23, scope: !15000)
!15009 = !DILocation(line: 73, column: 21, scope: !15003, inlinedAt: !15008)
!15010 = !DILocation(line: 73, column: 26, scope: !15003, inlinedAt: !15008)
!15011 = !DILocation(line: 73, column: 9, scope: !15003, inlinedAt: !15008)
!15012 = !DILocation(line: 119, column: 6, scope: !14983)
!15013 = !DILocation(line: 120, column: 3, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !14946, line: 120, column: 3)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !14946, line: 120, column: 3)
!15016 = distinct !DILexicalBlock(scope: !15017, file: !14946, line: 120, column: 3)
!15017 = distinct !DILexicalBlock(scope: !15018, file: !14946, line: 120, column: 3)
!15018 = distinct !DILexicalBlock(scope: !15000, file: !14946, line: 119, column: 57)
!15019 = !DILocation(line: 121, column: 2, scope: !15018)
!15020 = !DILocation(line: 124, column: 2, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15022, file: !14946, line: 124, column: 2)
!15022 = distinct !DILexicalBlock(scope: !15023, file: !14946, line: 124, column: 2)
!15023 = distinct !DILexicalBlock(scope: !15024, file: !14946, line: 124, column: 2)
!15024 = distinct !DILexicalBlock(scope: !14983, file: !14946, line: 124, column: 2)
!15025 = !DILocation(line: 131, column: 2, scope: !14983)
!15026 = !DILocation(line: 0, scope: !15003, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 151, column: 24, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15029, file: !14946, line: 151, column: 7)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !14946, line: 146, column: 32)
!15030 = distinct !DILexicalBlock(scope: !14983, file: !14946, line: 146, column: 6)
!15031 = !DILocation(line: 151, column: 7, scope: !15029)
!15032 = !DILocation(line: 151, column: 21, scope: !15028)
!15033 = !DILocalVariable(name: "key", arg: 1, scope: !15034, file: !6978, line: 84, type: !32)
!15034 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !15035)
!15035 = !{!15033}
!15036 = !DILocation(line: 0, scope: !15034, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 186, column: 2, scope: !14983)
!15038 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15037)
!15039 = !{i64 2597459}
!15040 = !DILocation(line: 189, column: 3, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !14946, line: 188, column: 41)
!15042 = distinct !DILexicalBlock(scope: !14983, file: !14946, line: 188, column: 6)
!15043 = !DILocation(line: 191, column: 1, scope: !14983)
!15044 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !15045, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !639)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!15047}
!15047 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !14807)
!15048 = !DILocation(line: 535, column: 9, scope: !15044)
!15049 = !DILocation(line: 535, column: 2, scope: !15044)
!15050 = distinct !DISubprogram(name: "reason_to_str", scope: !14946, file: !14946, line: 62, type: !15051, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !15053)
!15051 = !DISubroutineType(types: !15052)
!15052 = !{!140, !32}
!15053 = !{!15054}
!15054 = !DILocalVariable(name: "reason", arg: 1, scope: !15050, file: !14946, line: 62, type: !32)
!15055 = !DILocation(line: 0, scope: !15050)
!15056 = !DILocation(line: 64, column: 2, scope: !15050)
!15057 = !DILocation(line: 0, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15050, file: !14946, line: 64, column: 18)
!15059 = !DILocation(line: 78, column: 1, scope: !15050)
!15060 = distinct !DISubprogram(name: "thread_name_get", scope: !14946, file: !14946, line: 51, type: !15061, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !15063)
!15061 = !DISubroutineType(types: !15062)
!15062 = !{!140, !14807}
!15063 = !{!15064, !15065}
!15064 = !DILocalVariable(name: "thread", arg: 1, scope: !15060, file: !14946, line: 51, type: !14807)
!15065 = !DILocalVariable(name: "thread_name", scope: !15060, file: !14946, line: 53, type: !140)
!15066 = !DILocation(line: 0, scope: !15060)
!15067 = !DILocation(line: 53, column: 36, scope: !15060)
!15068 = !DILocation(line: 53, column: 28, scope: !15060)
!15069 = !DILocation(line: 53, column: 47, scope: !15060)
!15070 = !DILocation(line: 55, column: 19, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15060, file: !14946, line: 55, column: 6)
!15072 = !DILocation(line: 55, column: 28, scope: !15071)
!15073 = !DILocation(line: 55, column: 32, scope: !15071)
!15074 = !DILocation(line: 55, column: 47, scope: !15071)
!15075 = !DILocation(line: 55, column: 6, scope: !15060)
!15076 = !DILocation(line: 57, column: 2, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15071, file: !14946, line: 55, column: 57)
!15078 = !DILocation(line: 59, column: 2, scope: !15060)
!15079 = distinct !DISubprogram(name: "k_thread_abort", scope: !5512, file: !5512, line: 188, type: !15080, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !15082)
!15080 = !DISubroutineType(types: !15081)
!15081 = !{null, !15047}
!15082 = !{!15083}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15079, file: !5512, line: 188, type: !15047)
!15084 = !DILocation(line: 0, scope: !15079)
!15085 = !DILocation(line: 197, column: 2, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15079, file: !5512, line: 197, column: 2)
!15087 = !{i64 2155440286}
!15088 = !DILocation(line: 198, column: 2, scope: !15079)
!15089 = !DILocation(line: 199, column: 1, scope: !15079)
!15090 = distinct !DISubprogram(name: "z_current_get", scope: !5512, file: !5512, line: 173, type: !15045, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !639)
!15091 = !DILocation(line: 180, column: 2, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15090, file: !5512, line: 180, column: 2)
!15093 = !{i64 2155440218}
!15094 = !DILocation(line: 181, column: 9, scope: !15090)
!15095 = !DILocation(line: 181, column: 2, scope: !15090)
!15096 = distinct !DISubprogram(name: "z_early_memset", scope: !2285, file: !2285, line: 108, type: !15097, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15099)
!15097 = !DISubroutineType(types: !15098)
!15098 = !{null, !124, !125, !272}
!15099 = !{!15100, !15101, !15102}
!15100 = !DILocalVariable(name: "dst", arg: 1, scope: !15096, file: !2285, line: 108, type: !124)
!15101 = !DILocalVariable(name: "c", arg: 2, scope: !15096, file: !2285, line: 108, type: !125)
!15102 = !DILocalVariable(name: "n", arg: 3, scope: !15096, file: !2285, line: 108, type: !272)
!15103 = !DILocation(line: 0, scope: !15096)
!15104 = !DILocation(line: 110, column: 9, scope: !15096)
!15105 = !DILocation(line: 111, column: 1, scope: !15096)
!15106 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2285, file: !2285, line: 121, type: !15107, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15109)
!15107 = !DISubroutineType(types: !15108)
!15108 = !{null, !124, !13, !272}
!15109 = !{!15110, !15111, !15112}
!15110 = !DILocalVariable(name: "dst", arg: 1, scope: !15106, file: !2285, line: 121, type: !124)
!15111 = !DILocalVariable(name: "src", arg: 2, scope: !15106, file: !2285, line: 121, type: !13)
!15112 = !DILocalVariable(name: "n", arg: 3, scope: !15106, file: !2285, line: 121, type: !272)
!15113 = !DILocation(line: 0, scope: !15106)
!15114 = !DILocation(line: 123, column: 9, scope: !15106)
!15115 = !DILocation(line: 124, column: 1, scope: !15106)
!15116 = distinct !DISubprogram(name: "z_bss_zero", scope: !2285, file: !2285, line: 132, type: !3440, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !639)
!15117 = !DILocation(line: 143, column: 2, scope: !15116)
!15118 = !DILocation(line: 145, column: 2, scope: !15116)
!15119 = !DILocation(line: 168, column: 1, scope: !15116)
!15120 = distinct !DISubprogram(name: "z_init_cpu", scope: !2285, file: !2285, line: 372, type: !10327, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15121)
!15121 = !{!15122}
!15122 = !DILocalVariable(name: "id", arg: 1, scope: !15120, file: !2285, line: 372, type: !125)
!15123 = !DILocation(line: 0, scope: !15120)
!15124 = !DILocation(line: 374, column: 2, scope: !15120)
!15125 = !DILocation(line: 375, column: 34, scope: !15120)
!15126 = !DILocation(line: 375, column: 19, scope: !15120)
!15127 = !DILocation(line: 375, column: 31, scope: !15120)
!15128 = !DILocation(line: 376, column: 24, scope: !15120)
!15129 = !DILocation(line: 376, column: 19, scope: !15120)
!15130 = !DILocation(line: 376, column: 22, scope: !15120)
!15131 = !DILocation(line: 378, column: 26, scope: !15120)
!15132 = !DILocation(line: 378, column: 4, scope: !15120)
!15133 = !DILocation(line: 378, column: 50, scope: !15120)
!15134 = !DILocation(line: 377, column: 19, scope: !15120)
!15135 = !DILocation(line: 377, column: 29, scope: !15120)
!15136 = !DILocation(line: 384, column: 1, scope: !15120)
!15137 = distinct !DISubprogram(name: "init_idle_thread", scope: !2285, file: !2285, line: 343, type: !10327, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15138)
!15138 = !{!15139, !15140, !15141, !15144}
!15139 = !DILocalVariable(name: "i", arg: 1, scope: !15137, file: !2285, line: 343, type: !125)
!15140 = !DILocalVariable(name: "thread", scope: !15137, file: !2285, line: 345, type: !2377)
!15141 = !DILocalVariable(name: "stack", scope: !15137, file: !2285, line: 346, type: !15142)
!15142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15143, size: 32)
!15143 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5391, line: 44, baseType: !2491)
!15144 = !DILocalVariable(name: "tname", scope: !15137, file: !2285, line: 358, type: !393)
!15145 = !DILocation(line: 0, scope: !15137)
!15146 = !DILocation(line: 345, column: 29, scope: !15137)
!15147 = !DILocation(line: 346, column: 28, scope: !15137)
!15148 = !DILocation(line: 362, column: 37, scope: !15137)
!15149 = !DILocation(line: 362, column: 36, scope: !15137)
!15150 = !DILocation(line: 361, column: 2, scope: !15137)
!15151 = !DILocation(line: 365, column: 2, scope: !15137)
!15152 = !DILocation(line: 370, column: 1, scope: !15137)
!15153 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2492, file: !2492, line: 331, type: !15154, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{!393, !15142}
!15156 = !{!15157}
!15157 = !DILocalVariable(name: "sym", arg: 1, scope: !15153, file: !2492, line: 331, type: !15142)
!15158 = !DILocation(line: 0, scope: !15153)
!15159 = !DILocation(line: 333, column: 21, scope: !15153)
!15160 = !DILocation(line: 333, column: 2, scope: !15153)
!15161 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15162, file: !15162, line: 155, type: !15163, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15165)
!15162 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15163 = !DISubroutineType(types: !15164)
!15164 = !{null, !2377}
!15165 = !{!15166}
!15166 = !DILocalVariable(name: "thread", arg: 1, scope: !15161, file: !15162, line: 155, type: !2377)
!15167 = !DILocation(line: 0, scope: !15161)
!15168 = !DILocation(line: 157, column: 15, scope: !15161)
!15169 = !DILocation(line: 157, column: 28, scope: !15161)
!15170 = !DILocation(line: 158, column: 1, scope: !15161)
!15171 = distinct !DISubprogram(name: "z_cstart", scope: !2285, file: !2285, line: 501, type: !3440, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15172)
!15172 = !{!15173}
!15173 = !DILocalVariable(name: "dummy_thread", scope: !15171, file: !2285, line: 518, type: !2378)
!15174 = !DILocation(line: 507, column: 2, scope: !15171)
!15175 = !DILocation(line: 43, column: 14, scope: !15176, inlinedAt: !15180)
!15176 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15177, file: !15177, line: 40, type: !3440, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15178)
!15177 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15178 = !{!15179}
!15179 = !DILocalVariable(name: "msp", scope: !15176, file: !15177, line: 42, type: !208)
!15180 = distinct !DILocation(line: 44, column: 2, scope: !15181, inlinedAt: !15183)
!15181 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15182, file: !15182, line: 42, type: !3440, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !639)
!15182 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15183 = distinct !DILocation(line: 510, column: 2, scope: !15171)
!15184 = !DILocation(line: 43, column: 3, scope: !15176, inlinedAt: !15180)
!15185 = !DILocation(line: 43, column: 60, scope: !15176, inlinedAt: !15180)
!15186 = !DILocation(line: 0, scope: !15176, inlinedAt: !15180)
!15187 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15188, file: !8445, line: 1153, type: !208)
!15188 = distinct !DISubprogram(name: "__set_MSP", scope: !8445, file: !8445, line: 1153, type: !8536, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15189)
!15189 = !{!15187}
!15190 = !DILocation(line: 0, scope: !15188, inlinedAt: !15191)
!15191 = distinct !DILocation(line: 46, column: 2, scope: !15176, inlinedAt: !15180)
!15192 = !DILocation(line: 1155, column: 3, scope: !15188, inlinedAt: !15191)
!15193 = !{i64 4132238}
!15194 = !DILocation(line: 62, column: 11, scope: !15176, inlinedAt: !15180)
!15195 = !DILocation(line: 102, column: 2, scope: !15196, inlinedAt: !15197)
!15196 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9463, file: !9463, line: 97, type: !3440, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !639)
!15197 = distinct !DILocation(line: 45, column: 2, scope: !15181, inlinedAt: !15183)
!15198 = !DILocation(line: 108, column: 2, scope: !15196, inlinedAt: !15197)
!15199 = !DILocation(line: 112, column: 2, scope: !15196, inlinedAt: !15197)
!15200 = !DILocation(line: 113, column: 2, scope: !15196, inlinedAt: !15197)
!15201 = !DILocation(line: 114, column: 2, scope: !15196, inlinedAt: !15197)
!15202 = !DILocation(line: 116, column: 2, scope: !15196, inlinedAt: !15197)
!15203 = !DILocation(line: 123, column: 13, scope: !15196, inlinedAt: !15197)
!15204 = !DILocation(line: 46, column: 2, scope: !15181, inlinedAt: !15183)
!15205 = !DILocation(line: 47, column: 2, scope: !15181, inlinedAt: !15183)
!15206 = !DILocation(line: 174, column: 12, scope: !15207, inlinedAt: !15208)
!15207 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9463, file: !9463, line: 169, type: !3440, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !639)
!15208 = distinct !DILocation(line: 48, column: 2, scope: !15181, inlinedAt: !15183)
!15209 = !DILocation(line: 179, column: 12, scope: !15207, inlinedAt: !15208)
!15210 = !DILocation(line: 50, column: 2, scope: !15181, inlinedAt: !15183)
!15211 = !DILocation(line: 57, column: 2, scope: !15181, inlinedAt: !15183)
!15212 = !DILocation(line: 518, column: 2, scope: !15171)
!15213 = !DILocation(line: 518, column: 18, scope: !15171)
!15214 = !DILocation(line: 520, column: 2, scope: !15171)
!15215 = !DILocation(line: 523, column: 2, scope: !15171)
!15216 = !DILocation(line: 526, column: 2, scope: !15171)
!15217 = !DILocation(line: 527, column: 2, scope: !15171)
!15218 = !DILocation(line: 543, column: 24, scope: !15171)
!15219 = !DILocation(line: 543, column: 2, scope: !15171)
!15220 = !DILocation(line: 0, scope: !2516)
!15221 = !DILocation(line: 246, column: 15, scope: !2534)
!15222 = !DILocation(line: 246, column: 36, scope: !2533)
!15223 = !DILocation(line: 246, column: 2, scope: !2534)
!15224 = !DILocation(line: 247, column: 37, scope: !2532)
!15225 = !DILocation(line: 0, scope: !2532)
!15226 = !DILocation(line: 248, column: 19, scope: !2532)
!15227 = !DILocation(line: 248, column: 12, scope: !2532)
!15228 = !DILocation(line: 250, column: 11, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !2532, file: !2285, line: 250, column: 7)
!15230 = !DILocation(line: 250, column: 7, scope: !2532)
!15231 = !DILocation(line: 254, column: 11, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15233, file: !2285, line: 254, column: 8)
!15233 = distinct !DILexicalBlock(scope: !15229, file: !2285, line: 250, column: 20)
!15234 = !DILocation(line: 254, column: 8, scope: !15233)
!15235 = !DILocation(line: 255, column: 9, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15232, file: !2285, line: 254, column: 17)
!15237 = !DILocation(line: 258, column: 9, scope: !15236)
!15238 = !DILocation(line: 261, column: 28, scope: !15236)
!15239 = !DILocation(line: 261, column: 10, scope: !15236)
!15240 = !DILocation(line: 261, column: 17, scope: !15236)
!15241 = !DILocation(line: 261, column: 26, scope: !15236)
!15242 = !DILocation(line: 262, column: 4, scope: !15236)
!15243 = !DILocation(line: 263, column: 9, scope: !15233)
!15244 = !DILocation(line: 263, column: 16, scope: !15233)
!15245 = !DILocation(line: 263, column: 28, scope: !15233)
!15246 = !DILocation(line: 264, column: 3, scope: !15233)
!15247 = !DILocation(line: 246, column: 60, scope: !2533)
!15248 = distinct !{!15248, !15223, !15249}
!15249 = !DILocation(line: 265, column: 2, scope: !2534)
!15250 = !DILocation(line: 266, column: 1, scope: !2516)
!15251 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8479, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15252)
!15252 = !{!15253, !15254}
!15253 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15251, file: !680, line: 1814, type: !945)
!15254 = !DILocalVariable(name: "priority", arg: 2, scope: !15251, file: !680, line: 1814, type: !208)
!15255 = !DILocation(line: 0, scope: !15251)
!15256 = !DILocation(line: 1822, column: 48, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15258, file: !680, line: 1821, column: 3)
!15258 = distinct !DILexicalBlock(scope: !15251, file: !680, line: 1816, column: 7)
!15259 = !DILocation(line: 1822, column: 32, scope: !15257)
!15260 = !DILocation(line: 1822, column: 40, scope: !15257)
!15261 = !DILocation(line: 1822, column: 5, scope: !15257)
!15262 = !DILocation(line: 1822, column: 46, scope: !15257)
!15263 = !DILocation(line: 1824, column: 1, scope: !15251)
!15264 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15182, file: !15182, line: 32, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15265 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15266, file: !15266, line: 215, type: !15163, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15267)
!15266 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15267 = !{!15268}
!15268 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15265, file: !15266, line: 215, type: !2377)
!15269 = !DILocation(line: 0, scope: !15265)
!15270 = !DILocation(line: 217, column: 21, scope: !15265)
!15271 = !DILocation(line: 217, column: 34, scope: !15265)
!15272 = !DILocation(line: 221, column: 21, scope: !15265)
!15273 = !DILocation(line: 221, column: 34, scope: !15265)
!15274 = !DILocation(line: 223, column: 27, scope: !15265)
!15275 = !DILocation(line: 223, column: 33, scope: !15265)
!15276 = !DILocation(line: 224, column: 27, scope: !15265)
!15277 = !DILocation(line: 224, column: 32, scope: !15265)
!15278 = !DILocation(line: 232, column: 16, scope: !15265)
!15279 = !DILocation(line: 232, column: 30, scope: !15265)
!15280 = !DILocation(line: 239, column: 24, scope: !15265)
!15281 = !DILocation(line: 240, column: 1, scope: !15265)
!15282 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2285, file: !2285, line: 399, type: !15283, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15285)
!15283 = !DISubroutineType(types: !15284)
!15284 = !{!393}
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "stack_ptr", scope: !15282, file: !2285, line: 401, type: !393)
!15287 = !DILocation(line: 404, column: 2, scope: !15282)
!15288 = !DILocation(line: 416, column: 24, scope: !15282)
!15289 = !DILocation(line: 418, column: 14, scope: !15282)
!15290 = !DILocation(line: 0, scope: !15282)
!15291 = !DILocation(line: 423, column: 2, scope: !15282)
!15292 = !DILocation(line: 424, column: 2, scope: !15282)
!15293 = !DILocation(line: 426, column: 2, scope: !15282)
!15294 = !DILocation(line: 428, column: 2, scope: !15282)
!15295 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2285, file: !2285, line: 432, type: !15296, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15298)
!15296 = !DISubroutineType(types: !15297)
!15297 = !{null, !393}
!15298 = !{!15299}
!15299 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15295, file: !2285, line: 432, type: !393)
!15300 = !DILocation(line: 0, scope: !15295)
!15301 = !DILocation(line: 435, column: 2, scope: !15295)
!15302 = !DILocation(line: 445, column: 2, scope: !15295)
!15303 = distinct !DISubprogram(name: "bg_thread_main", scope: !2285, file: !2285, line: 277, type: !5393, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !15304)
!15304 = !{!15305, !15306, !15307}
!15305 = !DILocalVariable(name: "unused1", arg: 1, scope: !15303, file: !2285, line: 277, type: !124)
!15306 = !DILocalVariable(name: "unused2", arg: 2, scope: !15303, file: !2285, line: 277, type: !124)
!15307 = !DILocalVariable(name: "unused3", arg: 3, scope: !15303, file: !2285, line: 277, type: !124)
!15308 = !DILocation(line: 0, scope: !15303)
!15309 = !DILocation(line: 291, column: 20, scope: !15303)
!15310 = !DILocation(line: 293, column: 2, scope: !15303)
!15311 = !DILocation(line: 297, column: 2, scope: !15303)
!15312 = !DILocation(line: 305, column: 2, scope: !15303)
!15313 = !DILocation(line: 307, column: 2, scope: !15303)
!15314 = !DILocation(line: 330, column: 8, scope: !15303)
!15315 = !DILocation(line: 333, column: 34, scope: !15303)
!15316 = !DILocation(line: 339, column: 1, scope: !15303)
!15317 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2547, file: !2547, line: 45, type: !15318, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15326)
!15318 = !DISubroutineType(types: !15319)
!15319 = !{null, !15320, !124}
!15320 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !624, line: 103, baseType: !15321)
!15321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15322, size: 32)
!15322 = !DISubroutineType(types: !15323)
!15323 = !{null, !15324, !124}
!15324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15325, size: 32)
!15325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!15326 = !{!15327, !15328}
!15327 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15317, file: !2547, line: 45, type: !15320)
!15328 = !DILocalVariable(name: "user_data", arg: 2, scope: !15317, file: !2547, line: 45, type: !124)
!15329 = !DILocation(line: 0, scope: !15317)
!15330 = !DILocation(line: 71, column: 1, scope: !15317)
!15331 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2547, file: !2547, line: 73, type: !15318, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15332)
!15332 = !{!15333, !15334}
!15333 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15331, file: !2547, line: 73, type: !15320)
!15334 = !DILocalVariable(name: "user_data", arg: 2, scope: !15331, file: !2547, line: 73, type: !124)
!15335 = !DILocation(line: 0, scope: !15331)
!15336 = !DILocation(line: 95, column: 1, scope: !15331)
!15337 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2547, file: !2547, line: 97, type: !9464, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !639)
!15338 = !DILocation(line: 1031, column: 3, scope: !15339, inlinedAt: !15342)
!15339 = distinct !DISubprogram(name: "__get_IPSR", scope: !8445, file: !8445, line: 1027, type: !8526, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15340)
!15340 = !{!15341}
!15341 = !DILocalVariable(name: "result", scope: !15339, file: !8445, line: 1029, type: !208)
!15342 = distinct !DILocation(line: 48, column: 10, scope: !15343, inlinedAt: !15344)
!15343 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9463, file: !9463, line: 46, type: !9464, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !639)
!15344 = distinct !DILocation(line: 99, column: 9, scope: !15337)
!15345 = !{i64 4137889}
!15346 = !DILocation(line: 0, scope: !15339, inlinedAt: !15342)
!15347 = !DILocation(line: 48, column: 9, scope: !15343, inlinedAt: !15344)
!15348 = !DILocation(line: 99, column: 2, scope: !15337)
!15349 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2547, file: !2547, line: 106, type: !3440, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !639)
!15350 = !DILocation(line: 108, column: 2, scope: !15349)
!15351 = !DILocation(line: 108, column: 17, scope: !15349)
!15352 = !DILocation(line: 108, column: 30, scope: !15349)
!15353 = !DILocation(line: 109, column: 1, scope: !15349)
!15354 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2547, file: !2547, line: 116, type: !3440, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !639)
!15355 = !DILocation(line: 118, column: 2, scope: !15354)
!15356 = !DILocation(line: 118, column: 17, scope: !15354)
!15357 = !DILocation(line: 118, column: 30, scope: !15354)
!15358 = !DILocation(line: 119, column: 1, scope: !15354)
!15359 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2547, file: !2547, line: 126, type: !9464, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !639)
!15360 = !DILocation(line: 128, column: 10, scope: !15359)
!15361 = !DILocation(line: 128, column: 25, scope: !15359)
!15362 = !DILocation(line: 128, column: 38, scope: !15359)
!15363 = !DILocation(line: 128, column: 53, scope: !15359)
!15364 = !DILocation(line: 128, column: 2, scope: !15359)
!15365 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2547, file: !2547, line: 187, type: !15366, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15368)
!15366 = !DISubroutineType(types: !15367)
!15367 = !{!125, !2551, !140}
!15368 = !{!15369, !15370}
!15369 = !DILocalVariable(name: "thread", arg: 1, scope: !15365, file: !2547, line: 187, type: !2551)
!15370 = !DILocalVariable(name: "value", arg: 2, scope: !15365, file: !2547, line: 187, type: !140)
!15371 = !DILocation(line: 0, scope: !15365)
!15372 = !DILocation(line: 206, column: 2, scope: !15365)
!15373 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2547, file: !2547, line: 238, type: !15374, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15376)
!15374 = !DISubroutineType(types: !15375)
!15375 = !{!140, !2551}
!15376 = !{!15377}
!15377 = !DILocalVariable(name: "thread", arg: 1, scope: !15373, file: !2547, line: 238, type: !2551)
!15378 = !DILocation(line: 0, scope: !15373)
!15379 = !DILocation(line: 244, column: 2, scope: !15373)
!15380 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2547, file: !2547, line: 248, type: !15381, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15383)
!15381 = !DISubroutineType(types: !15382)
!15382 = !{!125, !2550, !393, !272}
!15383 = !{!15384, !15385, !15386}
!15384 = !DILocalVariable(name: "thread", arg: 1, scope: !15380, file: !2547, line: 248, type: !2550)
!15385 = !DILocalVariable(name: "buf", arg: 2, scope: !15380, file: !2547, line: 248, type: !393)
!15386 = !DILocalVariable(name: "size", arg: 3, scope: !15380, file: !2547, line: 248, type: !272)
!15387 = !DILocation(line: 0, scope: !15380)
!15388 = !DILocation(line: 257, column: 2, scope: !15380)
!15389 = !DILocation(line: 0, scope: !2546)
!15390 = !DILocation(line: 281, column: 11, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !2546, file: !2547, line: 281, column: 6)
!15392 = !DILocation(line: 281, column: 20, scope: !15391)
!15393 = !DILocation(line: 275, column: 45, scope: !2546)
!15394 = !DILocation(line: 285, column: 10, scope: !2546)
!15395 = !DILocation(line: 0, scope: !2667)
!15396 = !DILocation(line: 293, column: 39, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !2667, file: !2547, line: 293, column: 2)
!15398 = !DILocation(line: 293, column: 2, scope: !2667)
!15399 = !DILocation(line: 273, column: 14, scope: !2546)
!15400 = !DILocation(line: 309, column: 2, scope: !2546)
!15401 = !DILocation(line: 309, column: 11, scope: !2546)
!15402 = !DILocation(line: 311, column: 2, scope: !2546)
!15403 = !DILocation(line: 293, column: 26, scope: !15397)
!15404 = !DILocation(line: 294, column: 9, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15397, file: !2547, line: 293, column: 54)
!15406 = !DILocation(line: 295, column: 21, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15405, file: !2547, line: 295, column: 7)
!15408 = !DILocation(line: 295, column: 28, scope: !15407)
!15409 = !DILocation(line: 295, column: 7, scope: !15405)
!15410 = !DILocation(line: 299, column: 25, scope: !15405)
!15411 = !DILocation(line: 299, column: 41, scope: !15405)
!15412 = !DILocation(line: 300, column: 7, scope: !15405)
!15413 = !DILocation(line: 300, column: 26, scope: !15405)
!15414 = !DILocation(line: 299, column: 10, scope: !15405)
!15415 = !DILocation(line: 299, column: 7, scope: !15405)
!15416 = !DILocation(line: 302, column: 16, scope: !15405)
!15417 = !DILocation(line: 304, column: 20, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15405, file: !2547, line: 304, column: 7)
!15419 = !DILocation(line: 304, column: 7, scope: !15405)
!15420 = !DILocation(line: 305, column: 26, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15418, file: !2547, line: 304, column: 26)
!15422 = !DILocation(line: 305, column: 42, scope: !15421)
!15423 = !DILocation(line: 305, column: 11, scope: !15421)
!15424 = !DILocation(line: 305, column: 8, scope: !15421)
!15425 = !DILocation(line: 306, column: 3, scope: !15421)
!15426 = !DILocation(line: 293, column: 50, scope: !15397)
!15427 = !DILocation(line: 312, column: 1, scope: !2546)
!15428 = distinct !DISubprogram(name: "copy_bytes", scope: !2547, file: !2547, line: 261, type: !15429, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15431)
!15429 = !DISubroutineType(types: !15430)
!15430 = !{!272, !393, !272, !140, !272}
!15431 = !{!15432, !15433, !15434, !15435, !15436}
!15432 = !DILocalVariable(name: "dest", arg: 1, scope: !15428, file: !2547, line: 261, type: !393)
!15433 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15428, file: !2547, line: 261, type: !272)
!15434 = !DILocalVariable(name: "src", arg: 3, scope: !15428, file: !2547, line: 261, type: !140)
!15435 = !DILocalVariable(name: "src_size", arg: 4, scope: !15428, file: !2547, line: 261, type: !272)
!15436 = !DILocalVariable(name: "bytes_to_copy", scope: !15428, file: !2547, line: 263, type: !272)
!15437 = !DILocation(line: 0, scope: !15428)
!15438 = !DILocation(line: 265, column: 18, scope: !15428)
!15439 = !DILocation(line: 266, column: 2, scope: !15428)
!15440 = !DILocation(line: 268, column: 2, scope: !15428)
!15441 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2547, file: !2547, line: 383, type: !15442, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15444)
!15442 = !DISubroutineType(types: !15443)
!15443 = !{null, !2551}
!15444 = !{!15445}
!15445 = !DILocalVariable(name: "thread", arg: 1, scope: !15441, file: !2547, line: 383, type: !2551)
!15446 = !DILocation(line: 0, scope: !15441)
!15447 = !DILocation(line: 387, column: 2, scope: !15441)
!15448 = !DILocation(line: 388, column: 1, scope: !15441)
!15449 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2547, file: !2547, line: 528, type: !15450, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15457)
!15450 = !DISubroutineType(types: !15451)
!15451 = !{!393, !2551, !15452, !272, !5390, !124, !124, !124, !125, !208, !140}
!15452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15453, size: 32)
!15453 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5391, line: 44, baseType: !15454)
!15454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2492, line: 47, size: 8, elements: !15455)
!15455 = !{!15456}
!15456 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15454, file: !2492, line: 48, baseType: !142, size: 8)
!15457 = !{!15458, !15459, !15460, !15461, !15462, !15463, !15464, !15465, !15466, !15467, !15468}
!15458 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15449, file: !2547, line: 528, type: !2551)
!15459 = !DILocalVariable(name: "stack", arg: 2, scope: !15449, file: !2547, line: 529, type: !15452)
!15460 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15449, file: !2547, line: 529, type: !272)
!15461 = !DILocalVariable(name: "entry", arg: 4, scope: !15449, file: !2547, line: 530, type: !5390)
!15462 = !DILocalVariable(name: "p1", arg: 5, scope: !15449, file: !2547, line: 531, type: !124)
!15463 = !DILocalVariable(name: "p2", arg: 6, scope: !15449, file: !2547, line: 531, type: !124)
!15464 = !DILocalVariable(name: "p3", arg: 7, scope: !15449, file: !2547, line: 531, type: !124)
!15465 = !DILocalVariable(name: "prio", arg: 8, scope: !15449, file: !2547, line: 532, type: !125)
!15466 = !DILocalVariable(name: "options", arg: 9, scope: !15449, file: !2547, line: 532, type: !208)
!15467 = !DILocalVariable(name: "name", arg: 10, scope: !15449, file: !2547, line: 532, type: !140)
!15468 = !DILocalVariable(name: "stack_ptr", scope: !15449, file: !2547, line: 534, type: !393)
!15469 = !DILocation(line: 0, scope: !15449)
!15470 = !DILocation(line: 550, column: 28, scope: !15449)
!15471 = !DILocation(line: 550, column: 2, scope: !15449)
!15472 = !DILocation(line: 553, column: 34, scope: !15449)
!15473 = !DILocation(line: 553, column: 2, scope: !15449)
!15474 = !DILocation(line: 554, column: 14, scope: !15449)
!15475 = !DILocation(line: 564, column: 2, scope: !15449)
!15476 = !DILocation(line: 567, column: 14, scope: !15449)
!15477 = !DILocation(line: 567, column: 24, scope: !15449)
!15478 = !DILocation(line: 612, column: 7, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15449, file: !2547, line: 612, column: 6)
!15480 = !DILocation(line: 612, column: 6, scope: !15449)
!15481 = !DILocation(line: 627, column: 40, scope: !15449)
!15482 = !DILocation(line: 637, column: 2, scope: !15449)
!15483 = !DILocation(line: 613, column: 15, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15479, file: !2547, line: 612, column: 17)
!15485 = !DILocation(line: 613, column: 29, scope: !15484)
!15486 = !DILocation(line: 638, column: 1, scope: !15449)
!15487 = distinct !DISubprogram(name: "z_waitq_init", scope: !15488, file: !15488, line: 47, type: !15489, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15491)
!15488 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15489 = !DISubroutineType(types: !15490)
!15490 = !{null, !2582}
!15491 = !{!15492}
!15492 = !DILocalVariable(name: "w", arg: 1, scope: !15487, file: !15488, line: 47, type: !2582)
!15493 = !DILocation(line: 0, scope: !15487)
!15494 = !DILocation(line: 49, column: 21, scope: !15487)
!15495 = !DILocation(line: 49, column: 2, scope: !15487)
!15496 = !DILocation(line: 50, column: 1, scope: !15487)
!15497 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2547, file: !2547, line: 791, type: !15498, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15501)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{null, !15500, !125, !208, !32}
!15500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!15501 = !{!15502, !15503, !15504, !15505}
!15502 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15497, file: !2547, line: 791, type: !15500)
!15503 = !DILocalVariable(name: "priority", arg: 2, scope: !15497, file: !2547, line: 791, type: !125)
!15504 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15497, file: !2547, line: 792, type: !208)
!15505 = !DILocalVariable(name: "options", arg: 4, scope: !15497, file: !2547, line: 792, type: !32)
!15506 = !DILocation(line: 0, scope: !15497)
!15507 = !DILocation(line: 795, column: 15, scope: !15497)
!15508 = !DILocation(line: 795, column: 25, scope: !15497)
!15509 = !DILocation(line: 796, column: 30, scope: !15497)
!15510 = !DILocation(line: 796, column: 15, scope: !15497)
!15511 = !DILocation(line: 796, column: 28, scope: !15497)
!15512 = !DILocation(line: 797, column: 30, scope: !15497)
!15513 = !DILocation(line: 797, column: 15, scope: !15497)
!15514 = !DILocation(line: 797, column: 28, scope: !15497)
!15515 = !DILocation(line: 799, column: 22, scope: !15497)
!15516 = !DILocation(line: 799, column: 15, scope: !15497)
!15517 = !DILocation(line: 799, column: 20, scope: !15497)
!15518 = !DILocation(line: 801, column: 15, scope: !15497)
!15519 = !DILocation(line: 801, column: 28, scope: !15497)
!15520 = !DILocation(line: 814, column: 2, scope: !15497)
!15521 = !DILocation(line: 815, column: 1, scope: !15497)
!15522 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2547, file: !2547, line: 449, type: !15523, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15525)
!15523 = !DISubroutineType(types: !15524)
!15524 = !{!393, !2551, !15452, !272}
!15525 = !{!15526, !15527, !15528, !15529, !15530, !15531, !15532, !15533}
!15526 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15522, file: !2547, line: 449, type: !2551)
!15527 = !DILocalVariable(name: "stack", arg: 2, scope: !15522, file: !2547, line: 450, type: !15452)
!15528 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15522, file: !2547, line: 450, type: !272)
!15529 = !DILocalVariable(name: "stack_obj_size", scope: !15522, file: !2547, line: 452, type: !272)
!15530 = !DILocalVariable(name: "stack_buf_size", scope: !15522, file: !2547, line: 452, type: !272)
!15531 = !DILocalVariable(name: "stack_ptr", scope: !15522, file: !2547, line: 453, type: !393)
!15532 = !DILocalVariable(name: "stack_buf_start", scope: !15522, file: !2547, line: 453, type: !393)
!15533 = !DILocalVariable(name: "delta", scope: !15522, file: !2547, line: 454, type: !272)
!15534 = !DILocation(line: 0, scope: !15522)
!15535 = !DILocation(line: 465, column: 20, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15522, file: !2547, line: 463, column: 2)
!15537 = !DILocation(line: 466, column: 21, scope: !15536)
!15538 = !DILocation(line: 473, column: 28, scope: !15522)
!15539 = !DILocation(line: 514, column: 33, scope: !15522)
!15540 = !DILocation(line: 514, column: 25, scope: !15522)
!15541 = !DILocation(line: 514, column: 31, scope: !15522)
!15542 = !DILocation(line: 515, column: 25, scope: !15522)
!15543 = !DILocation(line: 515, column: 30, scope: !15522)
!15544 = !DILocation(line: 516, column: 25, scope: !15522)
!15545 = !DILocation(line: 516, column: 31, scope: !15522)
!15546 = !DILocation(line: 520, column: 2, scope: !15522)
!15547 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2492, file: !2492, line: 331, type: !15548, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15550)
!15548 = !DISubroutineType(types: !15549)
!15549 = !{!393, !15452}
!15550 = !{!15551}
!15551 = !DILocalVariable(name: "sym", arg: 1, scope: !15547, file: !2492, line: 331, type: !15452)
!15552 = !DILocation(line: 0, scope: !15547)
!15553 = !DILocation(line: 333, column: 21, scope: !15547)
!15554 = !DILocation(line: 333, column: 2, scope: !15547)
!15555 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15556, file: !15556, line: 40, type: !15557, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15559)
!15556 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15557 = !DISubroutineType(types: !15558)
!15558 = !{null, !15500}
!15559 = !{!15560}
!15560 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15555, file: !15556, line: 40, type: !15500)
!15561 = !DILocation(line: 0, scope: !15555)
!15562 = !DILocation(line: 42, column: 31, scope: !15555)
!15563 = !DILocation(line: 42, column: 2, scope: !15555)
!15564 = !DILocation(line: 43, column: 1, scope: !15555)
!15565 = distinct !DISubprogram(name: "z_init_timeout", scope: !15556, file: !15556, line: 25, type: !2608, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15566)
!15566 = !{!15567}
!15567 = !DILocalVariable(name: "to", arg: 1, scope: !15565, file: !15556, line: 25, type: !2610)
!15568 = !DILocation(line: 0, scope: !15565)
!15569 = !DILocation(line: 27, column: 22, scope: !15565)
!15570 = !DILocation(line: 27, column: 2, scope: !15565)
!15571 = !DILocation(line: 28, column: 1, scope: !15565)
!15572 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !15573, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15575)
!15573 = !DISubroutineType(types: !15574)
!15574 = !{null, !2654}
!15575 = !{!15576}
!15576 = !DILocalVariable(name: "node", arg: 1, scope: !15572, file: !541, line: 211, type: !2654)
!15577 = !DILocation(line: 0, scope: !15572)
!15578 = !DILocation(line: 213, column: 8, scope: !15572)
!15579 = !DILocation(line: 213, column: 13, scope: !15572)
!15580 = !DILocation(line: 214, column: 8, scope: !15572)
!15581 = !DILocation(line: 214, column: 13, scope: !15572)
!15582 = !DILocation(line: 215, column: 1, scope: !15572)
!15583 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !15584, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15587)
!15584 = !DISubroutineType(types: !15585)
!15585 = !{null, !15586}
!15586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!15587 = !{!15588}
!15588 = !DILocalVariable(name: "list", arg: 1, scope: !15583, file: !541, line: 197, type: !15586)
!15589 = !DILocation(line: 0, scope: !15583)
!15590 = !DILocation(line: 199, column: 8, scope: !15583)
!15591 = !DILocation(line: 199, column: 13, scope: !15583)
!15592 = !DILocation(line: 200, column: 8, scope: !15583)
!15593 = !DILocation(line: 200, column: 13, scope: !15583)
!15594 = !DILocation(line: 201, column: 1, scope: !15583)
!15595 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2547, file: !2547, line: 641, type: !15596, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15602)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{!2550, !2551, !15452, !272, !5390, !124, !124, !124, !125, !208, !15598}
!15598 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2027, line: 67, baseType: !15599)
!15599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2027, line: 65, size: 64, elements: !15600)
!15600 = !{!15601}
!15601 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15599, file: !2027, line: 66, baseType: !2026, size: 64)
!15602 = !{!15603, !15604, !15605, !15606, !15607, !15608, !15609, !15610, !15611, !15612}
!15603 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15595, file: !2547, line: 641, type: !2551)
!15604 = !DILocalVariable(name: "stack", arg: 2, scope: !15595, file: !2547, line: 642, type: !15452)
!15605 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15595, file: !2547, line: 643, type: !272)
!15606 = !DILocalVariable(name: "entry", arg: 4, scope: !15595, file: !2547, line: 643, type: !5390)
!15607 = !DILocalVariable(name: "p1", arg: 5, scope: !15595, file: !2547, line: 644, type: !124)
!15608 = !DILocalVariable(name: "p2", arg: 6, scope: !15595, file: !2547, line: 644, type: !124)
!15609 = !DILocalVariable(name: "p3", arg: 7, scope: !15595, file: !2547, line: 644, type: !124)
!15610 = !DILocalVariable(name: "prio", arg: 8, scope: !15595, file: !2547, line: 645, type: !125)
!15611 = !DILocalVariable(name: "options", arg: 9, scope: !15595, file: !2547, line: 645, type: !208)
!15612 = !DILocalVariable(name: "delay", arg: 10, scope: !15595, file: !2547, line: 645, type: !15598)
!15613 = !DILocation(line: 0, scope: !15595)
!15614 = !DILocation(line: 649, column: 2, scope: !15595)
!15615 = !DILocation(line: 652, column: 7, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15595, file: !2547, line: 652, column: 6)
!15617 = !DILocation(line: 652, column: 6, scope: !15595)
!15618 = !DILocation(line: 653, column: 3, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15616, file: !2547, line: 652, column: 39)
!15620 = !DILocation(line: 654, column: 2, scope: !15619)
!15621 = !DILocation(line: 656, column: 2, scope: !15595)
!15622 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2547, file: !2547, line: 401, type: !15623, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15625)
!15623 = !DISubroutineType(types: !15624)
!15624 = !{null, !2551, !15598}
!15625 = !{!15626, !15627}
!15626 = !DILocalVariable(name: "thread", arg: 1, scope: !15622, file: !2547, line: 401, type: !2551)
!15627 = !DILocalVariable(name: "delay", arg: 2, scope: !15622, file: !2547, line: 401, type: !15598)
!15628 = !DILocation(line: 0, scope: !15622)
!15629 = !DILocation(line: 404, column: 6, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15622, file: !2547, line: 404, column: 6)
!15631 = !DILocation(line: 404, column: 6, scope: !15622)
!15632 = !DILocation(line: 405, column: 3, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15630, file: !2547, line: 404, column: 38)
!15634 = !DILocation(line: 406, column: 2, scope: !15633)
!15635 = !DILocation(line: 407, column: 3, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15630, file: !2547, line: 406, column: 9)
!15637 = !DILocation(line: 413, column: 1, scope: !15622)
!15638 = distinct !DISubprogram(name: "k_thread_start", scope: !5512, file: !5512, line: 205, type: !15639, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15641)
!15639 = !DISubroutineType(types: !15640)
!15640 = !{null, !2550}
!15641 = !{!15642}
!15642 = !DILocalVariable(name: "thread", arg: 1, scope: !15638, file: !5512, line: 205, type: !2550)
!15643 = !DILocation(line: 0, scope: !15638)
!15644 = !DILocation(line: 214, column: 2, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15638, file: !5512, line: 214, column: 2)
!15646 = !{i64 2155465510}
!15647 = !DILocation(line: 215, column: 2, scope: !15638)
!15648 = !DILocation(line: 216, column: 1, scope: !15638)
!15649 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15556, file: !15556, line: 47, type: !15623, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15650)
!15650 = !{!15651, !15652}
!15651 = !DILocalVariable(name: "thread", arg: 1, scope: !15649, file: !15556, line: 47, type: !2551)
!15652 = !DILocalVariable(name: "ticks", arg: 2, scope: !15649, file: !15556, line: 47, type: !15598)
!15653 = !DILocation(line: 0, scope: !15649)
!15654 = !DILocation(line: 49, column: 30, scope: !15649)
!15655 = !DILocation(line: 49, column: 2, scope: !15649)
!15656 = !DILocation(line: 50, column: 1, scope: !15649)
!15657 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2547, file: !2547, line: 748, type: !3440, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15658)
!15658 = !{!15659, !15677}
!15659 = !DILocalVariable(name: "thread_data", scope: !15660, file: !2547, line: 750, type: !15661)
!15660 = distinct !DILexicalBlock(scope: !15657, file: !2547, line: 750, column: 2)
!15661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15662, size: 32)
!15662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !624, line: 620, size: 384, elements: !15663)
!15663 = !{!15664, !15665, !15666, !15667, !15668, !15669, !15670, !15671, !15672, !15673, !15674, !15676}
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15662, file: !624, line: 621, baseType: !2551, size: 32)
!15665 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15662, file: !624, line: 622, baseType: !15452, size: 32, offset: 32)
!15666 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15662, file: !624, line: 623, baseType: !32, size: 32, offset: 64)
!15667 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15662, file: !624, line: 624, baseType: !5390, size: 32, offset: 96)
!15668 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15662, file: !624, line: 625, baseType: !124, size: 32, offset: 128)
!15669 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15662, file: !624, line: 626, baseType: !124, size: 32, offset: 160)
!15670 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15662, file: !624, line: 627, baseType: !124, size: 32, offset: 192)
!15671 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15662, file: !624, line: 628, baseType: !125, size: 32, offset: 224)
!15672 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15662, file: !624, line: 629, baseType: !208, size: 32, offset: 256)
!15673 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15662, file: !624, line: 630, baseType: !919, size: 32, offset: 288)
!15674 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15662, file: !624, line: 631, baseType: !15675, size: 32, offset: 320)
!15675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 32)
!15676 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15662, file: !624, line: 632, baseType: !140, size: 32, offset: 352)
!15677 = !DILocalVariable(name: "thread_data", scope: !15678, file: !2547, line: 781, type: !15661)
!15678 = distinct !DILexicalBlock(scope: !15657, file: !2547, line: 781, column: 2)
!15679 = !DILocation(line: 0, scope: !15660)
!15680 = !DILocation(line: 750, column: 2, scope: !15660)
!15681 = !DILocation(line: 780, column: 2, scope: !15657)
!15682 = !DILocation(line: 0, scope: !15678)
!15683 = !DILocation(line: 781, column: 2, scope: !15678)
!15684 = !DILocation(line: 752, column: 17, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15686, file: !2547, line: 750, column: 38)
!15686 = distinct !DILexicalBlock(scope: !15660, file: !2547, line: 750, column: 2)
!15687 = !DILocation(line: 753, column: 17, scope: !15685)
!15688 = !DILocation(line: 754, column: 17, scope: !15685)
!15689 = !DILocation(line: 755, column: 17, scope: !15685)
!15690 = !DILocation(line: 756, column: 17, scope: !15685)
!15691 = !DILocation(line: 757, column: 17, scope: !15685)
!15692 = !DILocation(line: 758, column: 17, scope: !15685)
!15693 = !DILocation(line: 759, column: 17, scope: !15685)
!15694 = !DILocation(line: 760, column: 17, scope: !15685)
!15695 = !DILocation(line: 751, column: 3, scope: !15685)
!15696 = !DILocation(line: 763, column: 16, scope: !15685)
!15697 = !DILocation(line: 763, column: 29, scope: !15685)
!15698 = !DILocation(line: 763, column: 39, scope: !15685)
!15699 = !DILocation(line: 750, column: 2, scope: !15686)
!15700 = !DILocation(line: 750, column: 2, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15686, file: !2547, line: 750, column: 2)
!15702 = distinct !{!15702, !15680, !15703}
!15703 = !DILocation(line: 764, column: 2, scope: !15660)
!15704 = !DILocation(line: 787, column: 2, scope: !15657)
!15705 = !DILocation(line: 788, column: 1, scope: !15657)
!15706 = !DILocation(line: 782, column: 20, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15708, file: !2547, line: 782, column: 7)
!15708 = distinct !DILexicalBlock(scope: !15709, file: !2547, line: 781, column: 38)
!15709 = distinct !DILexicalBlock(scope: !15678, file: !2547, line: 781, column: 2)
!15710 = !DILocation(line: 782, column: 31, scope: !15707)
!15711 = !DILocation(line: 782, column: 7, scope: !15708)
!15712 = !DILocation(line: 783, column: 37, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15707, file: !2547, line: 782, column: 51)
!15714 = !DILocation(line: 784, column: 10, scope: !15713)
!15715 = !DILocation(line: 783, column: 4, scope: !15713)
!15716 = !DILocation(line: 785, column: 3, scope: !15713)
!15717 = !DILocation(line: 781, column: 2, scope: !15709)
!15718 = !DILocation(line: 781, column: 2, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15709, file: !2547, line: 781, column: 2)
!15720 = distinct !{!15720, !15683, !15721}
!15721 = !DILocation(line: 786, column: 2, scope: !15678)
!15722 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15723, file: !15723, line: 403, type: !15724, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15726)
!15723 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15724 = !DISubroutineType(types: !15725)
!15725 = !{!1853, !1853}
!15726 = !{!15727}
!15727 = !DILocalVariable(name: "t", arg: 1, scope: !15722, file: !15723, line: 403, type: !1853)
!15728 = !DILocation(line: 0, scope: !15722)
!15729 = !DILocalVariable(name: "t", arg: 1, scope: !15730, file: !15723, line: 102, type: !1853)
!15730 = distinct !DISubprogram(name: "z_tmcvt", scope: !15723, file: !15723, line: 102, type: !15731, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15733)
!15731 = !DISubroutineType(types: !15732)
!15732 = !{!1853, !1853, !208, !208, !153, !153, !153, !153}
!15733 = !{!15729, !15734, !15735, !15736, !15737, !15738, !15739, !15740, !15741, !15742, !15743}
!15734 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15730, file: !15723, line: 102, type: !208)
!15735 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15730, file: !15723, line: 103, type: !208)
!15736 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15730, file: !15723, line: 103, type: !153)
!15737 = !DILocalVariable(name: "result32", arg: 5, scope: !15730, file: !15723, line: 104, type: !153)
!15738 = !DILocalVariable(name: "round_up", arg: 6, scope: !15730, file: !15723, line: 104, type: !153)
!15739 = !DILocalVariable(name: "round_off", arg: 7, scope: !15730, file: !15723, line: 105, type: !153)
!15740 = !DILocalVariable(name: "mul_ratio", scope: !15730, file: !15723, line: 107, type: !153)
!15741 = !DILocalVariable(name: "div_ratio", scope: !15730, file: !15723, line: 109, type: !153)
!15742 = !DILocalVariable(name: "off", scope: !15730, file: !15723, line: 116, type: !1853)
!15743 = !DILocalVariable(name: "rdivisor", scope: !15744, file: !15723, line: 119, type: !208)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !15723, line: 118, column: 18)
!15745 = distinct !DILexicalBlock(scope: !15730, file: !15723, line: 118, column: 6)
!15746 = !DILocation(line: 0, scope: !15730, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 406, column: 9, scope: !15722)
!15748 = !DILocation(line: 145, column: 13, scope: !15749, inlinedAt: !15747)
!15749 = distinct !DILexicalBlock(scope: !15750, file: !15723, line: 144, column: 10)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !15723, line: 142, column: 7)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !15723, line: 141, column: 24)
!15752 = distinct !DILexicalBlock(scope: !15753, file: !15723, line: 141, column: 13)
!15753 = distinct !DILexicalBlock(scope: !15730, file: !15723, line: 134, column: 6)
!15754 = !DILocation(line: 406, column: 2, scope: !15722)
!15755 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2547, file: !2547, line: 817, type: !5388, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15756)
!15756 = !{!15757, !15758, !15759, !15760}
!15757 = !DILocalVariable(name: "entry", arg: 1, scope: !15755, file: !2547, line: 817, type: !5390)
!15758 = !DILocalVariable(name: "p1", arg: 2, scope: !15755, file: !2547, line: 818, type: !124)
!15759 = !DILocalVariable(name: "p2", arg: 3, scope: !15755, file: !2547, line: 818, type: !124)
!15760 = !DILocalVariable(name: "p3", arg: 4, scope: !15755, file: !2547, line: 818, type: !124)
!15761 = !DILocation(line: 0, scope: !15755)
!15762 = !DILocation(line: 822, column: 2, scope: !15755)
!15763 = !DILocation(line: 822, column: 17, scope: !15755)
!15764 = !DILocation(line: 822, column: 30, scope: !15755)
!15765 = !DILocation(line: 823, column: 2, scope: !15755)
!15766 = !DILocation(line: 845, column: 2, scope: !15755)
!15767 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2547, file: !2547, line: 888, type: !15768, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15770)
!15768 = !DISubroutineType(types: !15769)
!15769 = !{!125, !2551}
!15770 = !{!15771}
!15771 = !DILocalVariable(name: "thread", arg: 1, scope: !15767, file: !2547, line: 888, type: !2551)
!15772 = !DILocation(line: 0, scope: !15767)
!15773 = !DILocation(line: 893, column: 2, scope: !15767)
!15774 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2547, file: !2547, line: 897, type: !15775, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15777)
!15775 = !DISubroutineType(types: !15776)
!15776 = !{!125, !2551, !32}
!15777 = !{!15778, !15779}
!15778 = !DILocalVariable(name: "thread", arg: 1, scope: !15774, file: !2547, line: 897, type: !2551)
!15779 = !DILocalVariable(name: "options", arg: 2, scope: !15774, file: !2547, line: 897, type: !32)
!15780 = !DILocation(line: 0, scope: !15774)
!15781 = !DILocation(line: 902, column: 2, scope: !15774)
!15782 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2547, file: !2547, line: 1072, type: !15783, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15788)
!15783 = !DISubroutineType(types: !15784)
!15784 = !{!125, !2550, !15785}
!15785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15786, size: 32)
!15786 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !531, line: 234, baseType: !15787)
!15787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !531, line: 192, elements: !639)
!15788 = !{!15789, !15790}
!15789 = !DILocalVariable(name: "thread", arg: 1, scope: !15782, file: !2547, line: 1072, type: !2550)
!15790 = !DILocalVariable(name: "stats", arg: 2, scope: !15782, file: !2547, line: 1073, type: !15785)
!15791 = !DILocation(line: 0, scope: !15782)
!15792 = !DILocation(line: 1075, column: 14, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15782, file: !2547, line: 1075, column: 6)
!15794 = !DILocation(line: 1075, column: 23, scope: !15793)
!15795 = !DILocation(line: 1086, column: 1, scope: !15782)
!15796 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2547, file: !2547, line: 1088, type: !15797, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !15799)
!15797 = !DISubroutineType(types: !15798)
!15798 = !{!125, !15785}
!15799 = !{!15800}
!15800 = !DILocalVariable(name: "stats", arg: 1, scope: !15796, file: !2547, line: 1088, type: !15785)
!15801 = !DILocation(line: 0, scope: !15796)
!15802 = !DILocation(line: 1094, column: 12, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15796, file: !2547, line: 1094, column: 6)
!15804 = !DILocation(line: 1120, column: 1, scope: !15796)
!15805 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15806, file: !15806, line: 20, type: !3440, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !639)
!15806 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15807 = !DILocation(line: 30, column: 2, scope: !15805)
!15808 = !DILocation(line: 31, column: 1, scope: !15805)
!15809 = distinct !DISubprogram(name: "idle", scope: !15806, file: !15806, line: 33, type: !5393, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !15810)
!15810 = !{!15811, !15812, !15813}
!15811 = !DILocalVariable(name: "unused1", arg: 1, scope: !15809, file: !15806, line: 33, type: !124)
!15812 = !DILocalVariable(name: "unused2", arg: 2, scope: !15809, file: !15806, line: 33, type: !124)
!15813 = !DILocalVariable(name: "unused3", arg: 3, scope: !15809, file: !15806, line: 33, type: !124)
!15814 = !DILocation(line: 0, scope: !15809)
!15815 = !DILocation(line: 41, column: 2, scope: !15809)
!15816 = !DILocation(line: 55, column: 2, scope: !15817, inlinedAt: !15821)
!15817 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !15818)
!15818 = !{!15819, !15820}
!15819 = !DILocalVariable(name: "key", scope: !15817, file: !6978, line: 44, type: !32)
!15820 = !DILocalVariable(name: "tmp", scope: !15817, file: !6978, line: 53, type: !32)
!15821 = distinct !DILocation(line: 62, column: 10, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15809, file: !15806, line: 41, column: 15)
!15823 = !{i64 2594984}
!15824 = !DILocation(line: 0, scope: !15817, inlinedAt: !15821)
!15825 = !DILocation(line: 86, column: 3, scope: !15822)
!15826 = distinct !{!15826, !15815, !15827}
!15827 = !DILocation(line: 105, column: 2, scope: !15809)
!15828 = distinct !DISubprogram(name: "k_cpu_idle", scope: !624, file: !624, line: 5627, type: !3440, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !639)
!15829 = !DILocation(line: 5629, column: 2, scope: !15828)
!15830 = !DILocation(line: 5630, column: 1, scope: !15828)
!15831 = !DISubprogram(name: "arch_cpu_idle", scope: !5391, file: !5391, line: 167, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15832 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2779, file: !2779, line: 93, type: !15833, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15835)
!15833 = !DISubroutineType(types: !15834)
!15834 = !{!919, !2674, !2674}
!15835 = !{!15836, !15837, !15838, !15839}
!15836 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15832, file: !2779, line: 93, type: !2674)
!15837 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15832, file: !2779, line: 94, type: !2674)
!15838 = !DILocalVariable(name: "b1", scope: !15832, file: !2779, line: 97, type: !919)
!15839 = !DILocalVariable(name: "b2", scope: !15832, file: !2779, line: 98, type: !919)
!15840 = !DILocation(line: 0, scope: !15832)
!15841 = !DILocation(line: 97, column: 30, scope: !15832)
!15842 = !DILocation(line: 98, column: 30, scope: !15832)
!15843 = !DILocation(line: 100, column: 9, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15832, file: !2779, line: 100, column: 6)
!15845 = !DILocation(line: 100, column: 6, scope: !15832)
!15846 = !DILocation(line: 125, column: 1, scope: !15832)
!15847 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2779, file: !2779, line: 428, type: !15848, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15850)
!15848 = !DISubroutineType(types: !15849)
!15849 = !{null, !2674}
!15850 = !{!15851}
!15851 = !DILocalVariable(name: "curr", arg: 1, scope: !15847, file: !2779, line: 428, type: !2674)
!15852 = !DILocation(line: 0, scope: !15847)
!15853 = !DILocation(line: 434, column: 6, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15847, file: !2779, line: 434, column: 6)
!15855 = !DILocation(line: 434, column: 23, scope: !15854)
!15856 = !DILocation(line: 434, column: 6, scope: !15847)
!15857 = !DILocation(line: 435, column: 50, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15854, file: !2779, line: 434, column: 29)
!15859 = !DILocation(line: 435, column: 48, scope: !15858)
!15860 = !DILocation(line: 435, column: 29, scope: !15858)
!15861 = !DILocation(line: 436, column: 24, scope: !15858)
!15862 = !DILocation(line: 436, column: 3, scope: !15858)
!15863 = !DILocation(line: 437, column: 2, scope: !15858)
!15864 = !DILocation(line: 438, column: 1, scope: !15847)
!15865 = distinct !DISubprogram(name: "slice_time", scope: !2779, file: !2779, line: 407, type: !15866, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15868)
!15866 = !DISubroutineType(types: !15867)
!15867 = !{!125, !2674}
!15868 = !{!15869, !15870}
!15869 = !DILocalVariable(name: "curr", arg: 1, scope: !15865, file: !2779, line: 407, type: !2674)
!15870 = !DILocalVariable(name: "ret", scope: !15865, file: !2779, line: 409, type: !125)
!15871 = !DILocation(line: 0, scope: !15865)
!15872 = !DILocation(line: 409, column: 12, scope: !15865)
!15873 = !DILocation(line: 416, column: 2, scope: !15865)
!15874 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2779, file: !2779, line: 440, type: !15875, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15877)
!15875 = !DISubroutineType(types: !15876)
!15876 = !{null, !919, !125}
!15877 = !{!15878, !15879, !15880, !15886}
!15878 = !DILocalVariable(name: "slice", arg: 1, scope: !15874, file: !2779, line: 440, type: !919)
!15879 = !DILocalVariable(name: "prio", arg: 2, scope: !15874, file: !2779, line: 440, type: !125)
!15880 = !DILocalVariable(name: "__i", scope: !15881, file: !2779, line: 442, type: !15882)
!15881 = distinct !DILexicalBlock(scope: !15874, file: !2779, line: 442, column: 2)
!15882 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !15883)
!15883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !15884)
!15884 = !{!15885}
!15885 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15883, file: !638, line: 33, baseType: !125, size: 32)
!15886 = !DILocalVariable(name: "__key", scope: !15881, file: !2779, line: 442, type: !15882)
!15887 = !DILocation(line: 0, scope: !15874)
!15888 = !DILocation(line: 0, scope: !15881)
!15889 = !DILocalVariable(name: "l", arg: 1, scope: !15890, file: !638, line: 136, type: !15893)
!15890 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !15891, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15894)
!15891 = !DISubroutineType(types: !15892)
!15892 = !{!15882, !15893}
!15893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 32)
!15894 = !{!15889, !15895}
!15895 = !DILocalVariable(name: "k", scope: !15890, file: !638, line: 139, type: !15882)
!15896 = !DILocation(line: 0, scope: !15890, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 442, column: 2, scope: !15881)
!15898 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !15903)
!15899 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15900)
!15900 = !{!15901, !15902}
!15901 = !DILocalVariable(name: "key", scope: !15899, file: !6978, line: 44, type: !32)
!15902 = !DILocalVariable(name: "tmp", scope: !15899, file: !6978, line: 53, type: !32)
!15903 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !15897)
!15904 = !{i64 2638955}
!15905 = !DILocation(line: 0, scope: !15899, inlinedAt: !15903)
!15906 = !DILocation(line: 443, column: 29, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !2779, line: 442, column: 26)
!15908 = distinct !DILexicalBlock(scope: !15881, file: !2779, line: 442, column: 2)
!15909 = !DILocation(line: 444, column: 17, scope: !15907)
!15910 = !DILocation(line: 445, column: 51, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15907, file: !2779, line: 445, column: 7)
!15912 = !DILocation(line: 445, column: 7, scope: !15907)
!15913 = !DILocation(line: 0, scope: !15907)
!15914 = !DILocation(line: 451, column: 18, scope: !15907)
!15915 = !DILocation(line: 452, column: 3, scope: !15907)
!15916 = !DILocalVariable(name: "key", arg: 2, scope: !15917, file: !638, line: 190, type: !15882)
!15917 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !15918, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15920)
!15918 = !DISubroutineType(types: !15919)
!15919 = !{null, !15893, !15882}
!15920 = !{!15921, !15916}
!15921 = !DILocalVariable(name: "l", arg: 1, scope: !15917, file: !638, line: 189, type: !15893)
!15922 = !DILocation(line: 0, scope: !15917, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 442, column: 2, scope: !15908)
!15924 = !DILocalVariable(name: "key", arg: 1, scope: !15925, file: !6978, line: 84, type: !32)
!15925 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15926)
!15926 = !{!15924}
!15927 = !DILocation(line: 0, scope: !15925, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !15923)
!15929 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !15928)
!15930 = !{i64 2639772}
!15931 = !DILocation(line: 454, column: 1, scope: !15874)
!15932 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15723, file: !15723, line: 389, type: !9691, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15933)
!15933 = !{!15934}
!15934 = !DILocalVariable(name: "t", arg: 1, scope: !15932, file: !15723, line: 389, type: !208)
!15935 = !DILocation(line: 0, scope: !15932)
!15936 = !DILocalVariable(name: "t", arg: 1, scope: !15937, file: !15723, line: 102, type: !1853)
!15937 = distinct !DISubprogram(name: "z_tmcvt", scope: !15723, file: !15723, line: 102, type: !15731, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15938)
!15938 = !{!15936, !15939, !15940, !15941, !15942, !15943, !15944, !15945, !15946, !15947, !15948}
!15939 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15937, file: !15723, line: 102, type: !208)
!15940 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15937, file: !15723, line: 103, type: !208)
!15941 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15937, file: !15723, line: 103, type: !153)
!15942 = !DILocalVariable(name: "result32", arg: 5, scope: !15937, file: !15723, line: 104, type: !153)
!15943 = !DILocalVariable(name: "round_up", arg: 6, scope: !15937, file: !15723, line: 104, type: !153)
!15944 = !DILocalVariable(name: "round_off", arg: 7, scope: !15937, file: !15723, line: 105, type: !153)
!15945 = !DILocalVariable(name: "mul_ratio", scope: !15937, file: !15723, line: 107, type: !153)
!15946 = !DILocalVariable(name: "div_ratio", scope: !15937, file: !15723, line: 109, type: !153)
!15947 = !DILocalVariable(name: "off", scope: !15937, file: !15723, line: 116, type: !1853)
!15948 = !DILocalVariable(name: "rdivisor", scope: !15949, file: !15723, line: 119, type: !208)
!15949 = distinct !DILexicalBlock(scope: !15950, file: !15723, line: 118, column: 18)
!15950 = distinct !DILexicalBlock(scope: !15937, file: !15723, line: 118, column: 6)
!15951 = !DILocation(line: 0, scope: !15937, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 392, column: 9, scope: !15932)
!15953 = !DILocation(line: 143, column: 25, scope: !15954, inlinedAt: !15952)
!15954 = distinct !DILexicalBlock(scope: !15955, file: !15723, line: 142, column: 17)
!15955 = distinct !DILexicalBlock(scope: !15956, file: !15723, line: 142, column: 7)
!15956 = distinct !DILexicalBlock(scope: !15957, file: !15723, line: 141, column: 24)
!15957 = distinct !DILexicalBlock(scope: !15958, file: !15723, line: 141, column: 13)
!15958 = distinct !DILexicalBlock(scope: !15937, file: !15723, line: 134, column: 6)
!15959 = !DILocation(line: 392, column: 2, scope: !15932)
!15960 = distinct !DISubprogram(name: "z_time_slice", scope: !2779, file: !2779, line: 502, type: !10327, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !15961)
!15961 = !{!15962, !15963}
!15962 = !DILocalVariable(name: "ticks", arg: 1, scope: !15960, file: !2779, line: 502, type: !125)
!15963 = !DILocalVariable(name: "key", scope: !15960, file: !2779, line: 511, type: !15882)
!15964 = !DILocation(line: 0, scope: !15960)
!15965 = !DILocation(line: 0, scope: !15890, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 511, column: 25, scope: !15960)
!15967 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !15966)
!15969 = !DILocation(line: 0, scope: !15899, inlinedAt: !15968)
!15970 = !DILocation(line: 514, column: 6, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15960, file: !2779, line: 514, column: 6)
!15972 = !DILocation(line: 514, column: 25, scope: !15971)
!15973 = !DILocation(line: 514, column: 22, scope: !15971)
!15974 = !DILocation(line: 514, column: 6, scope: !15960)
!15975 = !DILocation(line: 515, column: 3, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15971, file: !2779, line: 514, column: 35)
!15977 = !DILocation(line: 0, scope: !15917, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 516, column: 3, scope: !15976)
!15979 = !DILocation(line: 0, scope: !15925, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !15978)
!15981 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !15980)
!15982 = !DILocation(line: 517, column: 3, scope: !15976)
!15983 = !DILocation(line: 519, column: 18, scope: !15960)
!15984 = !DILocation(line: 522, column: 6, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15960, file: !2779, line: 522, column: 6)
!15986 = !DILocation(line: 522, column: 27, scope: !15985)
!15987 = !DILocation(line: 522, column: 30, scope: !15985)
!15988 = !DILocation(line: 522, column: 6, scope: !15960)
!15989 = !DILocation(line: 523, column: 30, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15991, file: !2779, line: 523, column: 7)
!15991 = distinct !DILexicalBlock(scope: !15985, file: !2779, line: 522, column: 51)
!15992 = !DILocation(line: 523, column: 13, scope: !15990)
!15993 = !DILocation(line: 523, column: 7, scope: !15991)
!15994 = !DILocation(line: 530, column: 10, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15990, file: !2779, line: 523, column: 43)
!15996 = !DILocation(line: 531, column: 3, scope: !15995)
!15997 = !DILocation(line: 532, column: 30, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15990, file: !2779, line: 531, column: 10)
!15999 = !DILocation(line: 535, column: 29, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15985, file: !2779, line: 534, column: 9)
!16001 = !DILocation(line: 0, scope: !15917, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 537, column: 2, scope: !15960)
!16003 = !DILocation(line: 0, scope: !15925, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16002)
!16005 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16004)
!16006 = !DILocation(line: 538, column: 1, scope: !15960)
!16007 = distinct !DISubprogram(name: "sliceable", scope: !2779, file: !2779, line: 468, type: !16008, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16010)
!16008 = !DISubroutineType(types: !16009)
!16009 = !{!153, !2674}
!16010 = !{!16011, !16012}
!16011 = !DILocalVariable(name: "thread", arg: 1, scope: !16007, file: !2779, line: 468, type: !2674)
!16012 = !DILocalVariable(name: "ret", scope: !16007, file: !2779, line: 470, type: !153)
!16013 = !DILocation(line: 0, scope: !16007)
!16014 = !DILocation(line: 470, column: 13, scope: !16007)
!16015 = !DILocation(line: 471, column: 3, scope: !16007)
!16016 = !DILocation(line: 471, column: 7, scope: !16007)
!16017 = !DILocation(line: 472, column: 3, scope: !16007)
!16018 = !DILocation(line: 472, column: 37, scope: !16007)
!16019 = !DILocation(line: 472, column: 24, scope: !16007)
!16020 = !DILocation(line: 472, column: 43, scope: !16007)
!16021 = !DILocation(line: 472, column: 7, scope: !16007)
!16022 = !DILocation(line: 473, column: 3, scope: !16007)
!16023 = !DILocation(line: 473, column: 7, scope: !16007)
!16024 = !DILocation(line: 473, column: 6, scope: !16007)
!16025 = !DILocation(line: 479, column: 2, scope: !16007)
!16026 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2779, file: !2779, line: 482, type: !16027, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16029)
!16027 = !DISubroutineType(types: !16028)
!16028 = !{!15882, !15882}
!16029 = !{!16030, !16031}
!16030 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16026, file: !2779, line: 482, type: !15882)
!16031 = !DILocalVariable(name: "curr", scope: !16026, file: !2779, line: 484, type: !2674)
!16032 = !DILocation(line: 0, scope: !16026)
!16033 = !DILocation(line: 484, column: 26, scope: !16026)
!16034 = !DILocation(line: 493, column: 7, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16026, file: !2779, line: 493, column: 6)
!16036 = !DILocation(line: 493, column: 6, scope: !16026)
!16037 = !DILocation(line: 494, column: 3, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16035, file: !2779, line: 493, column: 49)
!16039 = !DILocation(line: 495, column: 2, scope: !16038)
!16040 = !DILocation(line: 496, column: 2, scope: !16026)
!16041 = !DILocation(line: 499, column: 1, scope: !16026)
!16042 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15162, file: !15162, line: 106, type: !16008, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16043)
!16043 = !{!16044, !16045}
!16044 = !DILocalVariable(name: "thread", arg: 1, scope: !16042, file: !15162, line: 106, type: !2674)
!16045 = !DILocalVariable(name: "state", scope: !16042, file: !15162, line: 108, type: !150)
!16046 = !DILocation(line: 0, scope: !16042)
!16047 = !DILocation(line: 108, column: 31, scope: !16042)
!16048 = !DILocation(line: 110, column: 16, scope: !16042)
!16049 = !DILocation(line: 111, column: 41, scope: !16042)
!16050 = !DILocation(line: 110, column: 2, scope: !16042)
!16051 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2779, file: !2779, line: 393, type: !15848, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16052)
!16052 = !{!16053}
!16053 = !DILocalVariable(name: "thread", arg: 1, scope: !16051, file: !2779, line: 393, type: !2674)
!16054 = !DILocation(line: 0, scope: !16051)
!16055 = !DILocation(line: 395, column: 6, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16051, file: !2779, line: 395, column: 6)
!16057 = !DILocation(line: 395, column: 6, scope: !16051)
!16058 = !DILocalVariable(name: "thread", arg: 1, scope: !16059, file: !2779, line: 264, type: !2674)
!16059 = distinct !DISubprogram(name: "dequeue_thread", scope: !2779, file: !2779, line: 264, type: !15848, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16060)
!16060 = !{!16058}
!16061 = !DILocation(line: 0, scope: !16059, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 396, column: 3, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16056, file: !2779, line: 395, column: 34)
!16064 = !DILocation(line: 266, column: 15, scope: !16059, inlinedAt: !16062)
!16065 = !DILocation(line: 266, column: 28, scope: !16059, inlinedAt: !16062)
!16066 = !DILocalVariable(name: "thread", arg: 1, scope: !16067, file: !2779, line: 232, type: !2674)
!16067 = distinct !DISubprogram(name: "runq_remove", scope: !2779, file: !2779, line: 232, type: !15848, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16068)
!16068 = !{!16066}
!16069 = !DILocation(line: 0, scope: !16067, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 268, column: 3, scope: !16071, inlinedAt: !16062)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !2779, line: 267, column: 35)
!16072 = distinct !DILexicalBlock(scope: !16059, file: !2779, line: 267, column: 6)
!16073 = !DILocation(line: 234, column: 2, scope: !16067, inlinedAt: !16070)
!16074 = !DILocation(line: 397, column: 2, scope: !16063)
!16075 = !DILocalVariable(name: "thread", arg: 1, scope: !16076, file: !2779, line: 250, type: !2674)
!16076 = distinct !DISubprogram(name: "queue_thread", scope: !2779, file: !2779, line: 250, type: !15848, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16077)
!16077 = !{!16075}
!16078 = !DILocation(line: 0, scope: !16076, inlinedAt: !16079)
!16079 = distinct !DILocation(line: 398, column: 2, scope: !16051)
!16080 = !DILocation(line: 252, column: 15, scope: !16076, inlinedAt: !16079)
!16081 = !DILocation(line: 252, column: 28, scope: !16076, inlinedAt: !16079)
!16082 = !DILocalVariable(name: "thread", arg: 1, scope: !16083, file: !2779, line: 227, type: !2674)
!16083 = distinct !DISubprogram(name: "runq_add", scope: !2779, file: !2779, line: 227, type: !15848, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16084)
!16084 = !{!16082}
!16085 = !DILocation(line: 0, scope: !16083, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 254, column: 3, scope: !16087, inlinedAt: !16079)
!16087 = distinct !DILexicalBlock(scope: !16088, file: !2779, line: 253, column: 35)
!16088 = distinct !DILexicalBlock(scope: !16076, file: !2779, line: 253, column: 6)
!16089 = !DILocalVariable(name: "pq", arg: 1, scope: !16090, file: !2779, line: 181, type: !16093)
!16090 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2779, file: !2779, line: 181, type: !16091, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16094)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{null, !16093, !2674}
!16093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!16094 = !{!16089, !16095, !16096}
!16095 = !DILocalVariable(name: "thread", arg: 2, scope: !16090, file: !2779, line: 182, type: !2674)
!16096 = !DILocalVariable(name: "t", scope: !16090, file: !2779, line: 184, type: !2674)
!16097 = !DILocation(line: 0, scope: !16090, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 229, column: 2, scope: !16083, inlinedAt: !16086)
!16099 = !DILocation(line: 188, column: 2, scope: !16100, inlinedAt: !16098)
!16100 = distinct !DILexicalBlock(scope: !16090, file: !2779, line: 188, column: 2)
!16101 = !DILocation(line: 188, column: 2, scope: !16102, inlinedAt: !16098)
!16102 = distinct !DILexicalBlock(scope: !16100, file: !2779, line: 188, column: 2)
!16103 = !DILocation(line: 0, scope: !16100, inlinedAt: !16098)
!16104 = !DILocation(line: 189, column: 7, scope: !16105, inlinedAt: !16098)
!16105 = distinct !DILexicalBlock(scope: !16106, file: !2779, line: 189, column: 7)
!16106 = distinct !DILexicalBlock(scope: !16102, file: !2779, line: 188, column: 56)
!16107 = !DILocation(line: 189, column: 35, scope: !16105, inlinedAt: !16098)
!16108 = !DILocation(line: 189, column: 7, scope: !16106, inlinedAt: !16098)
!16109 = !DILocation(line: 191, column: 21, scope: !16110, inlinedAt: !16098)
!16110 = distinct !DILexicalBlock(scope: !16105, file: !2779, line: 189, column: 40)
!16111 = !DILocation(line: 190, column: 4, scope: !16110, inlinedAt: !16098)
!16112 = !DILocation(line: 192, column: 4, scope: !16110, inlinedAt: !16098)
!16113 = distinct !{!16113, !16099, !16114}
!16114 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16098)
!16115 = !DILocation(line: 196, column: 37, scope: !16090, inlinedAt: !16098)
!16116 = !DILocation(line: 196, column: 2, scope: !16090, inlinedAt: !16098)
!16117 = !DILocation(line: 197, column: 1, scope: !16090, inlinedAt: !16098)
!16118 = !DILocation(line: 399, column: 25, scope: !16051)
!16119 = !DILocation(line: 399, column: 22, scope: !16051)
!16120 = !DILocation(line: 399, column: 2, scope: !16051)
!16121 = !DILocation(line: 400, column: 1, scope: !16051)
!16122 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15162, file: !15162, line: 136, type: !16008, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16123)
!16123 = !{!16124}
!16124 = !DILocalVariable(name: "thread", arg: 1, scope: !16122, file: !15162, line: 136, type: !2674)
!16125 = !DILocation(line: 0, scope: !16122)
!16126 = !DILocation(line: 138, column: 9, scope: !16122)
!16127 = !DILocation(line: 138, column: 2, scope: !16122)
!16128 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2779, file: !2779, line: 1137, type: !16091, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16129)
!16129 = !{!16130, !16131}
!16130 = !DILocalVariable(name: "pq", arg: 1, scope: !16128, file: !2779, line: 1137, type: !16093)
!16131 = !DILocalVariable(name: "thread", arg: 2, scope: !16128, file: !2779, line: 1137, type: !2674)
!16132 = !DILocation(line: 0, scope: !16128)
!16133 = !DILocation(line: 1141, column: 33, scope: !16128)
!16134 = !DILocation(line: 1141, column: 2, scope: !16128)
!16135 = !DILocation(line: 1142, column: 1, scope: !16128)
!16136 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !16137, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16139)
!16137 = !DISubroutineType(types: !16138)
!16138 = !{!2775, !16093}
!16139 = !{!16140}
!16140 = !DILocalVariable(name: "list", arg: 1, scope: !16136, file: !541, line: 294, type: !16093)
!16141 = !DILocation(line: 0, scope: !16136)
!16142 = !DILocation(line: 296, column: 9, scope: !16136)
!16143 = !DILocation(line: 296, column: 49, scope: !16136)
!16144 = !DILocation(line: 296, column: 2, scope: !16136)
!16145 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !16146, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16148)
!16146 = !DISubroutineType(types: !16147)
!16147 = !{null, !2775, !2775}
!16148 = !{!16149, !16150, !16151}
!16149 = !DILocalVariable(name: "successor", arg: 1, scope: !16145, file: !541, line: 443, type: !2775)
!16150 = !DILocalVariable(name: "node", arg: 2, scope: !16145, file: !541, line: 443, type: !2775)
!16151 = !DILocalVariable(name: "prev", scope: !16145, file: !541, line: 445, type: !16152)
!16152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2775)
!16153 = !DILocation(line: 0, scope: !16145)
!16154 = !DILocation(line: 445, column: 39, scope: !16145)
!16155 = !DILocation(line: 447, column: 8, scope: !16145)
!16156 = !DILocation(line: 447, column: 13, scope: !16145)
!16157 = !DILocation(line: 448, column: 8, scope: !16145)
!16158 = !DILocation(line: 448, column: 13, scope: !16145)
!16159 = !DILocation(line: 449, column: 8, scope: !16145)
!16160 = !DILocation(line: 449, column: 13, scope: !16145)
!16161 = !DILocation(line: 450, column: 18, scope: !16145)
!16162 = !DILocation(line: 451, column: 1, scope: !16145)
!16163 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !16164, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16166)
!16164 = !DISubroutineType(types: !16165)
!16165 = !{!2775, !16093, !2775}
!16166 = !{!16167, !16168}
!16167 = !DILocalVariable(name: "list", arg: 1, scope: !16163, file: !541, line: 341, type: !16093)
!16168 = !DILocalVariable(name: "node", arg: 2, scope: !16163, file: !541, line: 342, type: !2775)
!16169 = !DILocation(line: 0, scope: !16163)
!16170 = !DILocation(line: 344, column: 15, scope: !16163)
!16171 = !DILocation(line: 344, column: 9, scope: !16163)
!16172 = !DILocation(line: 344, column: 26, scope: !16163)
!16173 = !DILocation(line: 344, column: 2, scope: !16163)
!16174 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !16175, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16177)
!16175 = !DISubroutineType(types: !16176)
!16176 = !{null, !16093, !2775}
!16177 = !{!16178, !16179, !16180}
!16178 = !DILocalVariable(name: "list", arg: 1, scope: !16174, file: !541, line: 404, type: !16093)
!16179 = !DILocalVariable(name: "node", arg: 2, scope: !16174, file: !541, line: 404, type: !2775)
!16180 = !DILocalVariable(name: "tail", scope: !16174, file: !541, line: 406, type: !16152)
!16181 = !DILocation(line: 0, scope: !16174)
!16182 = !DILocation(line: 406, column: 34, scope: !16174)
!16183 = !DILocation(line: 408, column: 8, scope: !16174)
!16184 = !DILocation(line: 408, column: 13, scope: !16174)
!16185 = !DILocation(line: 409, column: 8, scope: !16174)
!16186 = !DILocation(line: 409, column: 13, scope: !16174)
!16187 = !DILocation(line: 411, column: 8, scope: !16174)
!16188 = !DILocation(line: 411, column: 13, scope: !16174)
!16189 = !DILocation(line: 412, column: 13, scope: !16174)
!16190 = !DILocation(line: 413, column: 1, scope: !16174)
!16191 = distinct !DISubprogram(name: "update_cache", scope: !2779, file: !2779, line: 559, type: !10327, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16192)
!16192 = !{!16193, !16194}
!16193 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16191, file: !2779, line: 559, type: !125)
!16194 = !DILocalVariable(name: "thread", scope: !16191, file: !2779, line: 562, type: !2674)
!16195 = !DILocation(line: 0, scope: !16191)
!16196 = !DILocation(line: 239, column: 9, scope: !16197, inlinedAt: !16200)
!16197 = distinct !DISubprogram(name: "runq_best", scope: !2779, file: !2779, line: 237, type: !16198, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{!2674}
!16200 = distinct !DILocation(line: 314, column: 28, scope: !16201, inlinedAt: !16204)
!16201 = distinct !DISubprogram(name: "next_up", scope: !2779, file: !2779, line: 312, type: !16198, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16202)
!16202 = !{!16203}
!16203 = !DILocalVariable(name: "thread", scope: !16201, file: !2779, line: 314, type: !2674)
!16204 = distinct !DILocation(line: 562, column: 28, scope: !16191)
!16205 = !DILocation(line: 0, scope: !16201, inlinedAt: !16204)
!16206 = !DILocation(line: 340, column: 17, scope: !16201, inlinedAt: !16204)
!16207 = !DILocation(line: 340, column: 9, scope: !16201, inlinedAt: !16204)
!16208 = !DILocalVariable(name: "thread", arg: 1, scope: !16209, file: !2779, line: 127, type: !2674)
!16209 = distinct !DISubprogram(name: "should_preempt", scope: !2779, file: !2779, line: 127, type: !16210, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16212)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{!153, !2674, !125}
!16212 = !{!16208, !16213}
!16213 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16209, file: !2779, line: 128, type: !125)
!16214 = !DILocation(line: 0, scope: !16209, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 564, column: 6, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16191, file: !2779, line: 564, column: 6)
!16217 = !DILocation(line: 133, column: 17, scope: !16218, inlinedAt: !16215)
!16218 = distinct !DILexicalBlock(scope: !16209, file: !2779, line: 133, column: 6)
!16219 = !DILocation(line: 0, scope: !16216)
!16220 = !DILocation(line: 133, column: 6, scope: !16209, inlinedAt: !16215)
!16221 = !DILocation(line: 140, column: 6, scope: !16222, inlinedAt: !16215)
!16222 = distinct !DILexicalBlock(scope: !16209, file: !2779, line: 140, column: 6)
!16223 = !DILocation(line: 140, column: 6, scope: !16209, inlinedAt: !16215)
!16224 = !DILocation(line: 150, column: 9, scope: !16225, inlinedAt: !16215)
!16225 = distinct !DILexicalBlock(scope: !16209, file: !2779, line: 149, column: 6)
!16226 = !DILocation(line: 149, column: 6, scope: !16209, inlinedAt: !16215)
!16227 = !DILocation(line: 157, column: 6, scope: !16228, inlinedAt: !16215)
!16228 = distinct !DILexicalBlock(scope: !16209, file: !2779, line: 157, column: 6)
!16229 = !DILocation(line: 564, column: 6, scope: !16191)
!16230 = !DILocation(line: 566, column: 14, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2779, line: 566, column: 7)
!16232 = distinct !DILexicalBlock(scope: !16216, file: !2779, line: 564, column: 42)
!16233 = !DILocation(line: 566, column: 7, scope: !16232)
!16234 = !DILocation(line: 567, column: 4, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16231, file: !2779, line: 566, column: 27)
!16236 = !DILocation(line: 568, column: 3, scope: !16235)
!16237 = !DILocation(line: 585, column: 1, scope: !16191)
!16238 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2779, file: !2779, line: 1144, type: !16239, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16241)
!16239 = !DISubroutineType(types: !16240)
!16240 = !{!2674, !16093}
!16241 = !{!16242, !16243, !16244}
!16242 = !DILocalVariable(name: "pq", arg: 1, scope: !16238, file: !2779, line: 1144, type: !16093)
!16243 = !DILocalVariable(name: "thread", scope: !16238, file: !2779, line: 1146, type: !2674)
!16244 = !DILocalVariable(name: "n", scope: !16238, file: !2779, line: 1147, type: !2775)
!16245 = !DILocation(line: 0, scope: !16238)
!16246 = !DILocation(line: 1147, column: 19, scope: !16238)
!16247 = !DILocation(line: 1152, column: 2, scope: !16238)
!16248 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15162, file: !15162, line: 115, type: !16008, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16249)
!16249 = !{!16250}
!16250 = !DILocalVariable(name: "thread", arg: 1, scope: !16248, file: !15162, line: 115, type: !2674)
!16251 = !DILocation(line: 0, scope: !16248)
!16252 = !DILocation(line: 117, column: 46, scope: !16248)
!16253 = !DILocation(line: 117, column: 10, scope: !16248)
!16254 = !DILocation(line: 117, column: 9, scope: !16248)
!16255 = !DILocation(line: 117, column: 2, scope: !16248)
!16256 = distinct !DISubprogram(name: "is_preempt", scope: !2779, file: !2779, line: 62, type: !15866, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16257)
!16257 = !{!16258}
!16258 = !DILocalVariable(name: "thread", arg: 1, scope: !16256, file: !2779, line: 62, type: !2674)
!16259 = !DILocation(line: 0, scope: !16256)
!16260 = !DILocation(line: 65, column: 22, scope: !16256)
!16261 = !DILocation(line: 65, column: 30, scope: !16256)
!16262 = !DILocation(line: 65, column: 2, scope: !16256)
!16263 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15556, file: !15556, line: 35, type: !16264, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16268)
!16264 = !DISubroutineType(types: !16265)
!16265 = !{!153, !16266}
!16266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16267, size: 32)
!16267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2725)
!16268 = !{!16269}
!16269 = !DILocalVariable(name: "to", arg: 1, scope: !16263, file: !15556, line: 35, type: !16266)
!16270 = !DILocation(line: 0, scope: !16263)
!16271 = !DILocation(line: 37, column: 35, scope: !16263)
!16272 = !DILocation(line: 37, column: 10, scope: !16263)
!16273 = !DILocation(line: 37, column: 9, scope: !16263)
!16274 = !DILocation(line: 37, column: 2, scope: !16263)
!16275 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !16276, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16280)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{!153, !16278}
!16278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16279, size: 32)
!16279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2684)
!16280 = !{!16281}
!16281 = !DILocalVariable(name: "node", arg: 1, scope: !16275, file: !541, line: 225, type: !16278)
!16282 = !DILocation(line: 0, scope: !16275)
!16283 = !DILocation(line: 227, column: 15, scope: !16275)
!16284 = !DILocation(line: 227, column: 20, scope: !16275)
!16285 = !DILocation(line: 227, column: 2, scope: !16275)
!16286 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !16164, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16287)
!16287 = !{!16288, !16289}
!16288 = !DILocalVariable(name: "list", arg: 1, scope: !16286, file: !541, line: 325, type: !16093)
!16289 = !DILocalVariable(name: "node", arg: 2, scope: !16286, file: !541, line: 326, type: !2775)
!16290 = !DILocation(line: 0, scope: !16286)
!16291 = !DILocation(line: 328, column: 24, scope: !16286)
!16292 = !DILocation(line: 328, column: 15, scope: !16286)
!16293 = !DILocation(line: 328, column: 9, scope: !16286)
!16294 = !DILocation(line: 328, column: 45, scope: !16286)
!16295 = !DILocation(line: 328, column: 2, scope: !16286)
!16296 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !16297, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16299)
!16297 = !DISubroutineType(types: !16298)
!16298 = !{!153, !16093}
!16299 = !{!16300}
!16300 = !DILocalVariable(name: "list", arg: 1, scope: !16296, file: !541, line: 266, type: !16093)
!16301 = !DILocation(line: 0, scope: !16296)
!16302 = !DILocation(line: 268, column: 15, scope: !16296)
!16303 = !DILocation(line: 268, column: 20, scope: !16296)
!16304 = !DILocation(line: 268, column: 2, scope: !16296)
!16305 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !16306, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16308)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{null, !2775}
!16308 = !{!16309, !16310, !16311}
!16309 = !DILocalVariable(name: "node", arg: 1, scope: !16305, file: !541, line: 496, type: !2775)
!16310 = !DILocalVariable(name: "prev", scope: !16305, file: !541, line: 498, type: !16152)
!16311 = !DILocalVariable(name: "next", scope: !16305, file: !541, line: 499, type: !16152)
!16312 = !DILocation(line: 0, scope: !16305)
!16313 = !DILocation(line: 498, column: 34, scope: !16305)
!16314 = !DILocation(line: 499, column: 34, scope: !16305)
!16315 = !DILocation(line: 501, column: 8, scope: !16305)
!16316 = !DILocation(line: 501, column: 13, scope: !16305)
!16317 = !DILocation(line: 502, column: 8, scope: !16305)
!16318 = !DILocation(line: 502, column: 13, scope: !16305)
!16319 = !DILocation(line: 503, column: 2, scope: !16305)
!16320 = !DILocation(line: 504, column: 1, scope: !16305)
!16321 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16306, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16322)
!16322 = !{!16323}
!16323 = !DILocalVariable(name: "node", arg: 1, scope: !16321, file: !541, line: 211, type: !2775)
!16324 = !DILocation(line: 0, scope: !16321)
!16325 = !DILocation(line: 213, column: 8, scope: !16321)
!16326 = !DILocation(line: 213, column: 13, scope: !16321)
!16327 = !DILocation(line: 214, column: 8, scope: !16321)
!16328 = !DILocation(line: 214, column: 13, scope: !16321)
!16329 = !DILocation(line: 215, column: 1, scope: !16321)
!16330 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15162, file: !15162, line: 131, type: !16331, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16333)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!153, !2674, !208}
!16333 = !{!16334, !16335}
!16334 = !DILocalVariable(name: "thread", arg: 1, scope: !16330, file: !15162, line: 131, type: !2674)
!16335 = !DILocalVariable(name: "state", arg: 2, scope: !16330, file: !15162, line: 131, type: !208)
!16336 = !DILocation(line: 0, scope: !16330)
!16337 = !DILocation(line: 133, column: 23, scope: !16330)
!16338 = !DILocation(line: 133, column: 45, scope: !16330)
!16339 = !DILocation(line: 133, column: 2, scope: !16330)
!16340 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15162, file: !15162, line: 211, type: !16341, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16343)
!16341 = !DISubroutineType(types: !16342)
!16342 = !{!153, !125, !125}
!16343 = !{!16344, !16345}
!16344 = !DILocalVariable(name: "prio", arg: 1, scope: !16340, file: !15162, line: 211, type: !125)
!16345 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16340, file: !15162, line: 211, type: !125)
!16346 = !DILocation(line: 0, scope: !16340)
!16347 = !DILocation(line: 213, column: 9, scope: !16340)
!16348 = !DILocation(line: 213, column: 2, scope: !16340)
!16349 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15162, file: !15162, line: 83, type: !16008, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16350)
!16350 = !{!16351}
!16351 = !DILocalVariable(name: "thread", arg: 1, scope: !16349, file: !15162, line: 83, type: !2674)
!16352 = !DILocation(line: 0, scope: !16349)
!16353 = !DILocation(line: 89, column: 16, scope: !16349)
!16354 = !DILocation(line: 89, column: 2, scope: !16349)
!16355 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15162, file: !15162, line: 206, type: !16341, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16356)
!16356 = !{!16357, !16358}
!16357 = !DILocalVariable(name: "prio1", arg: 1, scope: !16355, file: !15162, line: 206, type: !125)
!16358 = !DILocalVariable(name: "prio2", arg: 2, scope: !16355, file: !15162, line: 206, type: !125)
!16359 = !DILocation(line: 0, scope: !16355)
!16360 = !DILocation(line: 208, column: 15, scope: !16355)
!16361 = !DILocation(line: 208, column: 2, scope: !16355)
!16362 = distinct !DISubprogram(name: "z_ready_thread", scope: !2779, file: !2779, line: 635, type: !15848, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16363)
!16363 = !{!16364, !16365, !16367}
!16364 = !DILocalVariable(name: "thread", arg: 1, scope: !16362, file: !2779, line: 635, type: !2674)
!16365 = !DILocalVariable(name: "__i", scope: !16366, file: !2779, line: 637, type: !15882)
!16366 = distinct !DILexicalBlock(scope: !16362, file: !2779, line: 637, column: 2)
!16367 = !DILocalVariable(name: "__key", scope: !16366, file: !2779, line: 637, type: !15882)
!16368 = !DILocation(line: 0, scope: !16362)
!16369 = !DILocation(line: 0, scope: !16366)
!16370 = !DILocation(line: 0, scope: !15890, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 637, column: 2, scope: !16366)
!16372 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16371)
!16374 = !DILocation(line: 0, scope: !15899, inlinedAt: !16373)
!16375 = !DILocation(line: 639, column: 4, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !2779, line: 638, column: 41)
!16377 = distinct !DILexicalBlock(scope: !16378, file: !2779, line: 638, column: 7)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !2779, line: 637, column: 26)
!16379 = distinct !DILexicalBlock(scope: !16366, file: !2779, line: 637, column: 2)
!16380 = !DILocation(line: 0, scope: !15917, inlinedAt: !16381)
!16381 = distinct !DILocation(line: 637, column: 2, scope: !16379)
!16382 = !DILocation(line: 0, scope: !15925, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16381)
!16384 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16383)
!16385 = !DILocation(line: 642, column: 1, scope: !16362)
!16386 = distinct !DISubprogram(name: "ready_thread", scope: !2779, file: !2779, line: 617, type: !15848, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16387)
!16387 = !{!16388}
!16388 = !DILocalVariable(name: "thread", arg: 1, scope: !16386, file: !2779, line: 617, type: !2674)
!16389 = !DILocation(line: 0, scope: !16386)
!16390 = !DILocation(line: 626, column: 7, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16386, file: !2779, line: 626, column: 6)
!16392 = !DILocation(line: 626, column: 34, scope: !16391)
!16393 = !DILocation(line: 626, column: 37, scope: !16391)
!16394 = !DILocation(line: 626, column: 6, scope: !16386)
!16395 = !DILocation(line: 0, scope: !16076, inlinedAt: !16396)
!16396 = distinct !DILocation(line: 629, column: 3, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16391, file: !2779, line: 626, column: 64)
!16398 = !DILocation(line: 252, column: 15, scope: !16076, inlinedAt: !16396)
!16399 = !DILocation(line: 252, column: 28, scope: !16076, inlinedAt: !16396)
!16400 = !DILocation(line: 0, scope: !16083, inlinedAt: !16401)
!16401 = distinct !DILocation(line: 254, column: 3, scope: !16087, inlinedAt: !16396)
!16402 = !DILocation(line: 0, scope: !16090, inlinedAt: !16403)
!16403 = distinct !DILocation(line: 229, column: 2, scope: !16083, inlinedAt: !16401)
!16404 = !DILocation(line: 188, column: 2, scope: !16100, inlinedAt: !16403)
!16405 = !DILocation(line: 188, column: 2, scope: !16102, inlinedAt: !16403)
!16406 = !DILocation(line: 0, scope: !16100, inlinedAt: !16403)
!16407 = !DILocation(line: 189, column: 7, scope: !16105, inlinedAt: !16403)
!16408 = !DILocation(line: 189, column: 35, scope: !16105, inlinedAt: !16403)
!16409 = !DILocation(line: 189, column: 7, scope: !16106, inlinedAt: !16403)
!16410 = !DILocation(line: 191, column: 21, scope: !16110, inlinedAt: !16403)
!16411 = !DILocation(line: 190, column: 4, scope: !16110, inlinedAt: !16403)
!16412 = !DILocation(line: 192, column: 4, scope: !16110, inlinedAt: !16403)
!16413 = distinct !{!16413, !16404, !16414}
!16414 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16403)
!16415 = !DILocation(line: 196, column: 37, scope: !16090, inlinedAt: !16403)
!16416 = !DILocation(line: 196, column: 2, scope: !16090, inlinedAt: !16403)
!16417 = !DILocation(line: 197, column: 1, scope: !16090, inlinedAt: !16403)
!16418 = !DILocation(line: 630, column: 3, scope: !16397)
!16419 = !DILocation(line: 632, column: 2, scope: !16397)
!16420 = !DILocation(line: 633, column: 1, scope: !16386)
!16421 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15162, file: !15162, line: 120, type: !16008, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16422)
!16422 = !{!16423}
!16423 = !DILocalVariable(name: "thread", arg: 1, scope: !16421, file: !15162, line: 120, type: !2674)
!16424 = !DILocation(line: 0, scope: !16421)
!16425 = !DILocation(line: 122, column: 12, scope: !16421)
!16426 = !DILocation(line: 122, column: 62, scope: !16421)
!16427 = !DILocation(line: 123, column: 4, scope: !16421)
!16428 = !DILocation(line: 122, column: 2, scope: !16421)
!16429 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2779, file: !2779, line: 644, type: !15848, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16430)
!16430 = !{!16431, !16432, !16434}
!16431 = !DILocalVariable(name: "thread", arg: 1, scope: !16429, file: !2779, line: 644, type: !2674)
!16432 = !DILocalVariable(name: "__i", scope: !16433, file: !2779, line: 646, type: !15882)
!16433 = distinct !DILexicalBlock(scope: !16429, file: !2779, line: 646, column: 2)
!16434 = !DILocalVariable(name: "__key", scope: !16433, file: !2779, line: 646, type: !15882)
!16435 = !DILocation(line: 0, scope: !16429)
!16436 = !DILocation(line: 0, scope: !16433)
!16437 = !DILocation(line: 0, scope: !15890, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 646, column: 2, scope: !16433)
!16439 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16438)
!16441 = !DILocation(line: 0, scope: !15899, inlinedAt: !16440)
!16442 = !DILocation(line: 647, column: 3, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16444, file: !2779, line: 646, column: 26)
!16444 = distinct !DILexicalBlock(scope: !16433, file: !2779, line: 646, column: 2)
!16445 = !DILocation(line: 0, scope: !15917, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 646, column: 2, scope: !16444)
!16447 = !DILocation(line: 0, scope: !15925, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16446)
!16449 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16448)
!16450 = !DILocation(line: 649, column: 1, scope: !16429)
!16451 = distinct !DISubprogram(name: "z_sched_start", scope: !2779, file: !2779, line: 651, type: !15848, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16452)
!16452 = !{!16453, !16454}
!16453 = !DILocalVariable(name: "thread", arg: 1, scope: !16451, file: !2779, line: 651, type: !2674)
!16454 = !DILocalVariable(name: "key", scope: !16451, file: !2779, line: 653, type: !15882)
!16455 = !DILocation(line: 0, scope: !16451)
!16456 = !DILocation(line: 0, scope: !15890, inlinedAt: !16457)
!16457 = distinct !DILocation(line: 653, column: 25, scope: !16451)
!16458 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16459)
!16459 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16457)
!16460 = !DILocation(line: 0, scope: !15899, inlinedAt: !16459)
!16461 = !DILocation(line: 655, column: 6, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16451, file: !2779, line: 655, column: 6)
!16463 = !DILocation(line: 655, column: 6, scope: !16451)
!16464 = !DILocation(line: 0, scope: !15917, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 656, column: 3, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16462, file: !2779, line: 655, column: 36)
!16467 = !DILocation(line: 0, scope: !15925, inlinedAt: !16468)
!16468 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16465)
!16469 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16468)
!16470 = !DILocation(line: 657, column: 3, scope: !16466)
!16471 = !DILocation(line: 660, column: 2, scope: !16451)
!16472 = !DILocation(line: 661, column: 2, scope: !16451)
!16473 = !DILocation(line: 662, column: 2, scope: !16451)
!16474 = !DILocation(line: 663, column: 1, scope: !16451)
!16475 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15162, file: !15162, line: 126, type: !16008, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16476)
!16476 = !{!16477}
!16477 = !DILocalVariable(name: "thread", arg: 1, scope: !16475, file: !15162, line: 126, type: !2674)
!16478 = !DILocation(line: 0, scope: !16475)
!16479 = !DILocation(line: 128, column: 23, scope: !16475)
!16480 = !DILocation(line: 128, column: 36, scope: !16475)
!16481 = !DILocation(line: 128, column: 56, scope: !16475)
!16482 = !DILocation(line: 128, column: 2, scope: !16475)
!16483 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15162, file: !15162, line: 155, type: !15848, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16484)
!16484 = !{!16485}
!16485 = !DILocalVariable(name: "thread", arg: 1, scope: !16483, file: !15162, line: 155, type: !2674)
!16486 = !DILocation(line: 0, scope: !16483)
!16487 = !DILocation(line: 157, column: 15, scope: !16483)
!16488 = !DILocation(line: 157, column: 28, scope: !16483)
!16489 = !DILocation(line: 158, column: 1, scope: !16483)
!16490 = distinct !DISubprogram(name: "z_reschedule", scope: !2779, file: !2779, line: 967, type: !15918, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16491)
!16491 = !{!16492, !16493}
!16492 = !DILocalVariable(name: "lock", arg: 1, scope: !16490, file: !2779, line: 967, type: !15893)
!16493 = !DILocalVariable(name: "key", arg: 2, scope: !16490, file: !2779, line: 967, type: !15882)
!16494 = !DILocation(line: 0, scope: !16490)
!16495 = !DILocation(line: 969, column: 6, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16490, file: !2779, line: 969, column: 6)
!16497 = !DILocation(line: 969, column: 23, scope: !16496)
!16498 = !DILocation(line: 969, column: 26, scope: !16496)
!16499 = !DILocation(line: 969, column: 6, scope: !16490)
!16500 = !DILocalVariable(name: "key", arg: 2, scope: !16501, file: !15266, line: 193, type: !15882)
!16501 = distinct !DISubprogram(name: "z_swap", scope: !15266, file: !15266, line: 193, type: !16502, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16504)
!16502 = !DISubroutineType(types: !16503)
!16503 = !{!125, !15893, !15882}
!16504 = !{!16505, !16500}
!16505 = !DILocalVariable(name: "lock", arg: 1, scope: !16501, file: !15266, line: 193, type: !15893)
!16506 = !DILocation(line: 0, scope: !16501, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 970, column: 3, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16496, file: !2779, line: 969, column: 39)
!16509 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !16507)
!16510 = !DILocation(line: 971, column: 2, scope: !16508)
!16511 = !DILocation(line: 0, scope: !15917, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 972, column: 3, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16496, file: !2779, line: 971, column: 9)
!16514 = !DILocation(line: 0, scope: !15925, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16512)
!16516 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16515)
!16517 = !DILocation(line: 975, column: 1, scope: !16490)
!16518 = distinct !DISubprogram(name: "resched", scope: !2779, file: !2779, line: 940, type: !16519, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16521)
!16519 = !DISubroutineType(types: !16520)
!16520 = !{!153, !208}
!16521 = !{!16522}
!16522 = !DILocalVariable(name: "key", arg: 1, scope: !16518, file: !2779, line: 940, type: !208)
!16523 = !DILocation(line: 0, scope: !16518)
!16524 = !DILocalVariable(name: "key", arg: 1, scope: !16525, file: !6978, line: 112, type: !32)
!16525 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6978, file: !6978, line: 112, type: !16526, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16528)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{!153, !32}
!16528 = !{!16524}
!16529 = !DILocation(line: 0, scope: !16525, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 946, column: 9, scope: !16518)
!16531 = !DILocation(line: 115, column: 13, scope: !16525, inlinedAt: !16530)
!16532 = !DILocation(line: 946, column: 32, scope: !16518)
!16533 = !DILocation(line: 1031, column: 3, scope: !16534, inlinedAt: !16537)
!16534 = distinct !DISubprogram(name: "__get_IPSR", scope: !8445, file: !8445, line: 1027, type: !8526, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16535)
!16535 = !{!16536}
!16536 = !DILocalVariable(name: "result", scope: !16534, file: !8445, line: 1029, type: !208)
!16537 = distinct !DILocation(line: 48, column: 10, scope: !16538, inlinedAt: !16539)
!16538 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9463, file: !9463, line: 46, type: !9464, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!16539 = distinct !DILocation(line: 946, column: 36, scope: !16518)
!16540 = !{i64 4155046}
!16541 = !DILocation(line: 0, scope: !16534, inlinedAt: !16537)
!16542 = !DILocation(line: 48, column: 9, scope: !16538, inlinedAt: !16539)
!16543 = !DILocation(line: 946, column: 2, scope: !16518)
!16544 = distinct !DISubprogram(name: "need_swap", scope: !2779, file: !2779, line: 953, type: !9464, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16545)
!16545 = !{!16546}
!16546 = !DILocalVariable(name: "new_thread", scope: !16544, file: !2779, line: 959, type: !2674)
!16547 = !DILocation(line: 962, column: 31, scope: !16544)
!16548 = !DILocation(line: 0, scope: !16544)
!16549 = !DILocation(line: 963, column: 23, scope: !16544)
!16550 = !DILocation(line: 963, column: 20, scope: !16544)
!16551 = !DILocation(line: 963, column: 2, scope: !16544)
!16552 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15266, file: !15266, line: 181, type: !8455, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16553)
!16553 = !{!16554, !16555}
!16554 = !DILocalVariable(name: "key", arg: 1, scope: !16552, file: !15266, line: 181, type: !32)
!16555 = !DILocalVariable(name: "ret", scope: !16552, file: !15266, line: 183, type: !125)
!16556 = !DILocation(line: 0, scope: !16552)
!16557 = !DILocation(line: 185, column: 8, scope: !16552)
!16558 = !DILocation(line: 186, column: 2, scope: !16552)
!16559 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2779, file: !2779, line: 665, type: !15848, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16560)
!16560 = !{!16561, !16562, !16564}
!16561 = !DILocalVariable(name: "thread", arg: 1, scope: !16559, file: !2779, line: 665, type: !2674)
!16562 = !DILocalVariable(name: "__i", scope: !16563, file: !2779, line: 671, type: !15882)
!16563 = distinct !DILexicalBlock(scope: !16559, file: !2779, line: 671, column: 2)
!16564 = !DILocalVariable(name: "__key", scope: !16563, file: !2779, line: 671, type: !15882)
!16565 = !DILocation(line: 0, scope: !16559)
!16566 = !DILocation(line: 669, column: 8, scope: !16559)
!16567 = !DILocation(line: 0, scope: !16563)
!16568 = !DILocation(line: 0, scope: !15890, inlinedAt: !16569)
!16569 = distinct !DILocation(line: 671, column: 2, scope: !16563)
!16570 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16569)
!16572 = !DILocation(line: 0, scope: !15899, inlinedAt: !16571)
!16573 = !DILocation(line: 672, column: 7, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !2779, line: 672, column: 7)
!16575 = distinct !DILexicalBlock(scope: !16576, file: !2779, line: 671, column: 26)
!16576 = distinct !DILexicalBlock(scope: !16563, file: !2779, line: 671, column: 2)
!16577 = !DILocation(line: 672, column: 7, scope: !16575)
!16578 = !DILocation(line: 0, scope: !16059, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 673, column: 4, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16574, file: !2779, line: 672, column: 35)
!16581 = !DILocation(line: 266, column: 15, scope: !16059, inlinedAt: !16579)
!16582 = !DILocation(line: 266, column: 28, scope: !16059, inlinedAt: !16579)
!16583 = !DILocation(line: 0, scope: !16067, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 268, column: 3, scope: !16071, inlinedAt: !16579)
!16585 = !DILocation(line: 234, column: 2, scope: !16067, inlinedAt: !16584)
!16586 = !DILocation(line: 674, column: 3, scope: !16580)
!16587 = !DILocation(line: 675, column: 3, scope: !16575)
!16588 = !DILocation(line: 676, column: 26, scope: !16575)
!16589 = !DILocation(line: 676, column: 23, scope: !16575)
!16590 = !DILocation(line: 676, column: 3, scope: !16575)
!16591 = !DILocation(line: 0, scope: !15917, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 671, column: 2, scope: !16576)
!16593 = !DILocation(line: 0, scope: !15925, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16592)
!16595 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16594)
!16596 = !DILocation(line: 679, column: 16, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16559, file: !2779, line: 679, column: 6)
!16598 = !DILocation(line: 679, column: 13, scope: !16597)
!16599 = !DILocation(line: 679, column: 6, scope: !16559)
!16600 = !DILocation(line: 680, column: 3, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16597, file: !2779, line: 679, column: 26)
!16602 = !DILocation(line: 681, column: 2, scope: !16601)
!16603 = !DILocation(line: 684, column: 1, scope: !16559)
!16604 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15556, file: !15556, line: 52, type: !15866, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16605)
!16605 = !{!16606}
!16606 = !DILocalVariable(name: "thread", arg: 1, scope: !16604, file: !15556, line: 52, type: !2674)
!16607 = !DILocation(line: 0, scope: !16604)
!16608 = !DILocation(line: 54, column: 39, scope: !16604)
!16609 = !DILocation(line: 54, column: 9, scope: !16604)
!16610 = !DILocation(line: 54, column: 2, scope: !16604)
!16611 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15162, file: !15162, line: 141, type: !15848, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16612)
!16612 = !{!16613}
!16613 = !DILocalVariable(name: "thread", arg: 1, scope: !16611, file: !15162, line: 141, type: !2674)
!16614 = !DILocation(line: 0, scope: !16611)
!16615 = !DILocation(line: 143, column: 15, scope: !16611)
!16616 = !DILocation(line: 143, column: 28, scope: !16611)
!16617 = !DILocation(line: 146, column: 1, scope: !16611)
!16618 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15162, file: !15162, line: 73, type: !3440, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!16619 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 75, column: 30, scope: !16618)
!16621 = !DILocation(line: 0, scope: !15899, inlinedAt: !16620)
!16622 = !DILocation(line: 75, column: 9, scope: !16618)
!16623 = !DILocation(line: 76, column: 1, scope: !16618)
!16624 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2779, file: !2779, line: 977, type: !8536, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16625)
!16625 = !{!16626}
!16626 = !DILocalVariable(name: "key", arg: 1, scope: !16624, file: !2779, line: 977, type: !208)
!16627 = !DILocation(line: 0, scope: !16624)
!16628 = !DILocation(line: 979, column: 6, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16624, file: !2779, line: 979, column: 6)
!16630 = !DILocation(line: 979, column: 6, scope: !16624)
!16631 = !DILocation(line: 980, column: 3, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16629, file: !2779, line: 979, column: 20)
!16633 = !DILocation(line: 981, column: 2, scope: !16632)
!16634 = !DILocation(line: 0, scope: !15925, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 982, column: 3, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16629, file: !2779, line: 981, column: 9)
!16637 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16635)
!16638 = !DILocation(line: 985, column: 1, scope: !16624)
!16639 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2779, file: !2779, line: 695, type: !15848, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16640)
!16640 = !{!16641, !16642}
!16641 = !DILocalVariable(name: "thread", arg: 1, scope: !16639, file: !2779, line: 695, type: !2674)
!16642 = !DILocalVariable(name: "key", scope: !16639, file: !2779, line: 699, type: !15882)
!16643 = !DILocation(line: 0, scope: !16639)
!16644 = !DILocation(line: 0, scope: !15890, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 699, column: 25, scope: !16639)
!16646 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16645)
!16648 = !DILocation(line: 0, scope: !15899, inlinedAt: !16647)
!16649 = !DILocation(line: 702, column: 7, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16639, file: !2779, line: 702, column: 6)
!16651 = !DILocation(line: 702, column: 6, scope: !16639)
!16652 = !DILocation(line: 0, scope: !15917, inlinedAt: !16653)
!16653 = distinct !DILocation(line: 703, column: 3, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16650, file: !2779, line: 702, column: 38)
!16655 = !DILocation(line: 0, scope: !15925, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16653)
!16657 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16656)
!16658 = !DILocation(line: 704, column: 3, scope: !16654)
!16659 = !DILocation(line: 707, column: 2, scope: !16639)
!16660 = !DILocation(line: 708, column: 2, scope: !16639)
!16661 = !DILocation(line: 710, column: 2, scope: !16639)
!16662 = !DILocation(line: 713, column: 1, scope: !16639)
!16663 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15162, file: !15162, line: 96, type: !16008, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16664)
!16664 = !{!16665}
!16665 = !DILocalVariable(name: "thread", arg: 1, scope: !16663, file: !15162, line: 96, type: !2674)
!16666 = !DILocation(line: 0, scope: !16663)
!16667 = !DILocation(line: 98, column: 23, scope: !16663)
!16668 = !DILocation(line: 98, column: 36, scope: !16663)
!16669 = !DILocation(line: 98, column: 57, scope: !16663)
!16670 = !DILocation(line: 98, column: 2, scope: !16663)
!16671 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15162, file: !15162, line: 148, type: !15848, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16672)
!16672 = !{!16673}
!16673 = !DILocalVariable(name: "thread", arg: 1, scope: !16671, file: !15162, line: 148, type: !2674)
!16674 = !DILocation(line: 0, scope: !16671)
!16675 = !DILocation(line: 150, column: 15, scope: !16671)
!16676 = !DILocation(line: 150, column: 28, scope: !16671)
!16677 = !DILocation(line: 153, column: 1, scope: !16671)
!16678 = distinct !DISubprogram(name: "z_pend_thread", scope: !2779, file: !2779, line: 770, type: !16679, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16685)
!16679 = !DISubroutineType(types: !16680)
!16680 = !{null, !2674, !2705, !16681}
!16681 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2027, line: 67, baseType: !16682)
!16682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2027, line: 65, size: 64, elements: !16683)
!16683 = !{!16684}
!16684 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16682, file: !2027, line: 66, baseType: !2026, size: 64)
!16685 = !{!16686, !16687, !16688, !16689, !16691}
!16686 = !DILocalVariable(name: "thread", arg: 1, scope: !16678, file: !2779, line: 770, type: !2674)
!16687 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16678, file: !2779, line: 770, type: !2705)
!16688 = !DILocalVariable(name: "timeout", arg: 3, scope: !16678, file: !2779, line: 771, type: !16681)
!16689 = !DILocalVariable(name: "__i", scope: !16690, file: !2779, line: 774, type: !15882)
!16690 = distinct !DILexicalBlock(scope: !16678, file: !2779, line: 774, column: 2)
!16691 = !DILocalVariable(name: "__key", scope: !16690, file: !2779, line: 774, type: !15882)
!16692 = !DILocation(line: 0, scope: !16678)
!16693 = !DILocation(line: 0, scope: !16690)
!16694 = !DILocation(line: 0, scope: !15890, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 774, column: 2, scope: !16690)
!16696 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16695)
!16698 = !DILocation(line: 0, scope: !15899, inlinedAt: !16697)
!16699 = !DILocation(line: 775, column: 3, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16701, file: !2779, line: 774, column: 26)
!16701 = distinct !DILexicalBlock(scope: !16690, file: !2779, line: 774, column: 2)
!16702 = !DILocation(line: 0, scope: !15917, inlinedAt: !16703)
!16703 = distinct !DILocation(line: 774, column: 2, scope: !16701)
!16704 = !DILocation(line: 0, scope: !15925, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16703)
!16706 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16705)
!16707 = !DILocation(line: 777, column: 1, scope: !16678)
!16708 = distinct !DISubprogram(name: "pend_locked", scope: !2779, file: !2779, line: 760, type: !16679, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16709)
!16709 = !{!16710, !16711, !16712}
!16710 = !DILocalVariable(name: "thread", arg: 1, scope: !16708, file: !2779, line: 760, type: !2674)
!16711 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16708, file: !2779, line: 760, type: !2705)
!16712 = !DILocalVariable(name: "timeout", arg: 3, scope: !16708, file: !2779, line: 761, type: !16681)
!16713 = !DILocation(line: 0, scope: !16708)
!16714 = !DILocation(line: 766, column: 2, scope: !16708)
!16715 = !DILocation(line: 767, column: 2, scope: !16708)
!16716 = !DILocation(line: 768, column: 1, scope: !16708)
!16717 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2779, file: !2779, line: 740, type: !16718, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16720)
!16718 = !DISubroutineType(types: !16719)
!16719 = !{null, !2674, !2705}
!16720 = !{!16721, !16722}
!16721 = !DILocalVariable(name: "thread", arg: 1, scope: !16717, file: !2779, line: 740, type: !2674)
!16722 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16717, file: !2779, line: 740, type: !2705)
!16723 = !DILocation(line: 0, scope: !16717)
!16724 = !DILocation(line: 742, column: 2, scope: !16717)
!16725 = !DILocation(line: 743, column: 2, scope: !16717)
!16726 = !DILocation(line: 747, column: 13, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16717, file: !2779, line: 747, column: 6)
!16728 = !DILocation(line: 747, column: 6, scope: !16717)
!16729 = !DILocation(line: 748, column: 16, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16727, file: !2779, line: 747, column: 22)
!16731 = !DILocation(line: 748, column: 26, scope: !16730)
!16732 = !DILocation(line: 749, column: 28, scope: !16730)
!16733 = !DILocation(line: 0, scope: !16090, inlinedAt: !16734)
!16734 = distinct !DILocation(line: 749, column: 3, scope: !16730)
!16735 = !DILocation(line: 188, column: 2, scope: !16100, inlinedAt: !16734)
!16736 = !DILocation(line: 188, column: 2, scope: !16102, inlinedAt: !16734)
!16737 = !DILocation(line: 0, scope: !16100, inlinedAt: !16734)
!16738 = !DILocation(line: 189, column: 7, scope: !16105, inlinedAt: !16734)
!16739 = !DILocation(line: 189, column: 35, scope: !16105, inlinedAt: !16734)
!16740 = !DILocation(line: 189, column: 7, scope: !16106, inlinedAt: !16734)
!16741 = !DILocation(line: 191, column: 21, scope: !16110, inlinedAt: !16734)
!16742 = !DILocation(line: 190, column: 4, scope: !16110, inlinedAt: !16734)
!16743 = !DILocation(line: 192, column: 4, scope: !16110, inlinedAt: !16734)
!16744 = distinct !{!16744, !16735, !16745}
!16745 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !16734)
!16746 = !DILocation(line: 196, column: 37, scope: !16090, inlinedAt: !16734)
!16747 = !DILocation(line: 196, column: 2, scope: !16090, inlinedAt: !16734)
!16748 = !DILocation(line: 197, column: 1, scope: !16090, inlinedAt: !16734)
!16749 = !DILocation(line: 751, column: 1, scope: !16717)
!16750 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2779, file: !2779, line: 753, type: !16751, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16753)
!16751 = !DISubroutineType(types: !16752)
!16752 = !{null, !2674, !16681}
!16753 = !{!16754, !16755}
!16754 = !DILocalVariable(name: "thread", arg: 1, scope: !16750, file: !2779, line: 753, type: !2674)
!16755 = !DILocalVariable(name: "timeout", arg: 2, scope: !16750, file: !2779, line: 753, type: !16681)
!16756 = !DILocation(line: 0, scope: !16750)
!16757 = !DILocation(line: 755, column: 7, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16750, file: !2779, line: 755, column: 6)
!16759 = !DILocation(line: 755, column: 6, scope: !16750)
!16760 = !DILocation(line: 756, column: 3, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16758, file: !2779, line: 755, column: 41)
!16762 = !DILocation(line: 757, column: 2, scope: !16761)
!16763 = !DILocation(line: 758, column: 1, scope: !16750)
!16764 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15556, file: !15556, line: 47, type: !16751, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16765)
!16765 = !{!16766, !16767}
!16766 = !DILocalVariable(name: "thread", arg: 1, scope: !16764, file: !15556, line: 47, type: !2674)
!16767 = !DILocalVariable(name: "ticks", arg: 2, scope: !16764, file: !15556, line: 47, type: !16681)
!16768 = !DILocation(line: 0, scope: !16764)
!16769 = !DILocation(line: 49, column: 30, scope: !16764)
!16770 = !DILocation(line: 49, column: 2, scope: !16764)
!16771 = !DILocation(line: 50, column: 1, scope: !16764)
!16772 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2779, file: !2779, line: 795, type: !2731, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16773)
!16773 = !{!16774, !16775, !16776, !16778, !16779}
!16774 = !DILocalVariable(name: "timeout", arg: 1, scope: !16772, file: !2779, line: 795, type: !2733)
!16775 = !DILocalVariable(name: "thread", scope: !16772, file: !2779, line: 797, type: !2674)
!16776 = !DILocalVariable(name: "__i", scope: !16777, file: !2779, line: 800, type: !15882)
!16777 = distinct !DILexicalBlock(scope: !16772, file: !2779, line: 800, column: 2)
!16778 = !DILocalVariable(name: "__key", scope: !16777, file: !2779, line: 800, type: !15882)
!16779 = !DILocalVariable(name: "killed", scope: !16780, file: !2779, line: 801, type: !153)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !2779, line: 800, column: 26)
!16781 = distinct !DILexicalBlock(scope: !16777, file: !2779, line: 800, column: 2)
!16782 = !DILocation(line: 0, scope: !16772)
!16783 = !DILocation(line: 797, column: 28, scope: !16772)
!16784 = !DILocation(line: 0, scope: !16777)
!16785 = !DILocation(line: 0, scope: !15890, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 800, column: 2, scope: !16777)
!16787 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16786)
!16789 = !DILocation(line: 0, scope: !15899, inlinedAt: !16788)
!16790 = !DILocation(line: 801, column: 27, scope: !16780)
!16791 = !DILocation(line: 801, column: 32, scope: !16780)
!16792 = !DILocation(line: 801, column: 61, scope: !16780)
!16793 = !DILocation(line: 0, scope: !16780)
!16794 = !DILocation(line: 804, column: 7, scope: !16780)
!16795 = !DILocation(line: 805, column: 21, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16797, file: !2779, line: 805, column: 8)
!16797 = distinct !DILexicalBlock(scope: !16798, file: !2779, line: 804, column: 16)
!16798 = distinct !DILexicalBlock(scope: !16780, file: !2779, line: 804, column: 7)
!16799 = !DILocation(line: 805, column: 31, scope: !16796)
!16800 = !DILocation(line: 805, column: 8, scope: !16797)
!16801 = !DILocation(line: 806, column: 5, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16796, file: !2779, line: 805, column: 40)
!16803 = !DILocation(line: 807, column: 4, scope: !16802)
!16804 = !DILocation(line: 808, column: 4, scope: !16797)
!16805 = !DILocation(line: 809, column: 4, scope: !16797)
!16806 = !DILocation(line: 810, column: 4, scope: !16797)
!16807 = !DILocation(line: 811, column: 3, scope: !16797)
!16808 = !DILocation(line: 0, scope: !15917, inlinedAt: !16809)
!16809 = distinct !DILocation(line: 800, column: 2, scope: !16781)
!16810 = !DILocation(line: 0, scope: !15925, inlinedAt: !16811)
!16811 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16809)
!16812 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16811)
!16813 = !DILocation(line: 813, column: 1, scope: !16772)
!16814 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2779, file: !2779, line: 779, type: !15848, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16815)
!16815 = !{!16816}
!16816 = !DILocalVariable(name: "thread", arg: 1, scope: !16814, file: !2779, line: 779, type: !2674)
!16817 = !DILocation(line: 0, scope: !16814)
!16818 = !DILocation(line: 781, column: 2, scope: !16814)
!16819 = !DILocation(line: 782, column: 2, scope: !16814)
!16820 = !DILocation(line: 783, column: 15, scope: !16814)
!16821 = !DILocation(line: 783, column: 25, scope: !16814)
!16822 = !DILocation(line: 784, column: 1, scope: !16814)
!16823 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15162, file: !15162, line: 165, type: !15848, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16824)
!16824 = !{!16825}
!16825 = !DILocalVariable(name: "thread", arg: 1, scope: !16823, file: !15162, line: 165, type: !2674)
!16826 = !DILocation(line: 0, scope: !16823)
!16827 = !DILocation(line: 167, column: 15, scope: !16823)
!16828 = !DILocation(line: 167, column: 28, scope: !16823)
!16829 = !DILocation(line: 168, column: 1, scope: !16823)
!16830 = distinct !DISubprogram(name: "unready_thread", scope: !2779, file: !2779, line: 731, type: !15848, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16831)
!16831 = !{!16832}
!16832 = !DILocalVariable(name: "thread", arg: 1, scope: !16830, file: !2779, line: 731, type: !2674)
!16833 = !DILocation(line: 0, scope: !16830)
!16834 = !DILocation(line: 733, column: 6, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16830, file: !2779, line: 733, column: 6)
!16836 = !DILocation(line: 733, column: 6, scope: !16830)
!16837 = !DILocation(line: 0, scope: !16059, inlinedAt: !16838)
!16838 = distinct !DILocation(line: 734, column: 3, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16835, file: !2779, line: 733, column: 34)
!16840 = !DILocation(line: 266, column: 15, scope: !16059, inlinedAt: !16838)
!16841 = !DILocation(line: 266, column: 28, scope: !16059, inlinedAt: !16838)
!16842 = !DILocation(line: 0, scope: !16067, inlinedAt: !16843)
!16843 = distinct !DILocation(line: 268, column: 3, scope: !16071, inlinedAt: !16838)
!16844 = !DILocation(line: 234, column: 2, scope: !16067, inlinedAt: !16843)
!16845 = !DILocation(line: 735, column: 2, scope: !16839)
!16846 = !DILocation(line: 736, column: 25, scope: !16830)
!16847 = !DILocation(line: 736, column: 22, scope: !16830)
!16848 = !DILocation(line: 736, column: 2, scope: !16830)
!16849 = !DILocation(line: 737, column: 1, scope: !16830)
!16850 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15162, file: !15162, line: 160, type: !15848, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16851)
!16851 = !{!16852}
!16852 = !DILocalVariable(name: "thread", arg: 1, scope: !16850, file: !15162, line: 160, type: !2674)
!16853 = !DILocation(line: 0, scope: !16850)
!16854 = !DILocation(line: 162, column: 15, scope: !16850)
!16855 = !DILocation(line: 162, column: 28, scope: !16850)
!16856 = !DILocation(line: 163, column: 1, scope: !16850)
!16857 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2779, file: !2779, line: 786, type: !15848, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16858)
!16858 = !{!16859, !16860, !16862}
!16859 = !DILocalVariable(name: "thread", arg: 1, scope: !16857, file: !2779, line: 786, type: !2674)
!16860 = !DILocalVariable(name: "__i", scope: !16861, file: !2779, line: 788, type: !15882)
!16861 = distinct !DILexicalBlock(scope: !16857, file: !2779, line: 788, column: 2)
!16862 = !DILocalVariable(name: "__key", scope: !16861, file: !2779, line: 788, type: !15882)
!16863 = !DILocation(line: 0, scope: !16857)
!16864 = !DILocation(line: 0, scope: !16861)
!16865 = !DILocation(line: 0, scope: !15890, inlinedAt: !16866)
!16866 = distinct !DILocation(line: 788, column: 2, scope: !16861)
!16867 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16868)
!16868 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16866)
!16869 = !DILocation(line: 0, scope: !15899, inlinedAt: !16868)
!16870 = !DILocation(line: 789, column: 3, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16872, file: !2779, line: 788, column: 26)
!16872 = distinct !DILexicalBlock(scope: !16861, file: !2779, line: 788, column: 2)
!16873 = !DILocation(line: 0, scope: !15917, inlinedAt: !16874)
!16874 = distinct !DILocation(line: 788, column: 2, scope: !16872)
!16875 = !DILocation(line: 0, scope: !15925, inlinedAt: !16876)
!16876 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16874)
!16877 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16876)
!16878 = !DILocation(line: 791, column: 1, scope: !16857)
!16879 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2779, file: !2779, line: 816, type: !16880, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16882)
!16880 = !DISubroutineType(types: !16881)
!16881 = !{!125, !208, !2705, !16681}
!16882 = !{!16883, !16884, !16885, !16886, !16887, !16889}
!16883 = !DILocalVariable(name: "key", arg: 1, scope: !16879, file: !2779, line: 816, type: !208)
!16884 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16879, file: !2779, line: 816, type: !2705)
!16885 = !DILocalVariable(name: "timeout", arg: 3, scope: !16879, file: !2779, line: 816, type: !16681)
!16886 = !DILocalVariable(name: "ret", scope: !16879, file: !2779, line: 828, type: !125)
!16887 = !DILocalVariable(name: "__i", scope: !16888, file: !2779, line: 829, type: !15882)
!16888 = distinct !DILexicalBlock(scope: !16879, file: !2779, line: 829, column: 2)
!16889 = !DILocalVariable(name: "__key", scope: !16888, file: !2779, line: 829, type: !15882)
!16890 = !DILocation(line: 0, scope: !16879)
!16891 = !DILocation(line: 823, column: 14, scope: !16879)
!16892 = !DILocation(line: 823, column: 2, scope: !16879)
!16893 = !DILocation(line: 826, column: 20, scope: !16879)
!16894 = !DILocation(line: 826, column: 18, scope: !16879)
!16895 = !DILocation(line: 828, column: 12, scope: !16879)
!16896 = !DILocation(line: 0, scope: !16888)
!16897 = !DILocation(line: 0, scope: !15890, inlinedAt: !16898)
!16898 = distinct !DILocation(line: 829, column: 2, scope: !16888)
!16899 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16900)
!16900 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16898)
!16901 = !DILocation(line: 0, scope: !15899, inlinedAt: !16900)
!16902 = !DILocation(line: 830, column: 7, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16904, file: !2779, line: 830, column: 7)
!16904 = distinct !DILexicalBlock(scope: !16905, file: !2779, line: 829, column: 26)
!16905 = distinct !DILexicalBlock(scope: !16888, file: !2779, line: 829, column: 2)
!16906 = !DILocation(line: 830, column: 26, scope: !16903)
!16907 = !DILocation(line: 830, column: 23, scope: !16903)
!16908 = !DILocation(line: 830, column: 7, scope: !16904)
!16909 = !DILocation(line: 831, column: 20, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16903, file: !2779, line: 830, column: 36)
!16911 = !DILocation(line: 832, column: 3, scope: !16910)
!16912 = !DILocation(line: 0, scope: !15917, inlinedAt: !16913)
!16913 = distinct !DILocation(line: 829, column: 2, scope: !16905)
!16914 = !DILocation(line: 0, scope: !15925, inlinedAt: !16915)
!16915 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16913)
!16916 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16915)
!16917 = !DILocation(line: 834, column: 2, scope: !16879)
!16918 = distinct !DISubprogram(name: "z_pend_curr", scope: !2779, file: !2779, line: 840, type: !16919, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16921)
!16919 = !DISubroutineType(types: !16920)
!16920 = !{!125, !15893, !15882, !2705, !16681}
!16921 = !{!16922, !16923, !16924, !16925}
!16922 = !DILocalVariable(name: "lock", arg: 1, scope: !16918, file: !2779, line: 840, type: !15893)
!16923 = !DILocalVariable(name: "key", arg: 2, scope: !16918, file: !2779, line: 840, type: !15882)
!16924 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16918, file: !2779, line: 841, type: !2705)
!16925 = !DILocalVariable(name: "timeout", arg: 4, scope: !16918, file: !2779, line: 841, type: !16681)
!16926 = !DILocation(line: 0, scope: !16918)
!16927 = !DILocation(line: 844, column: 20, scope: !16918)
!16928 = !DILocation(line: 844, column: 18, scope: !16918)
!16929 = !DILocation(line: 0, scope: !15890, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 856, column: 9, scope: !16918)
!16931 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16930)
!16933 = !DILocation(line: 0, scope: !15899, inlinedAt: !16932)
!16934 = !DILocation(line: 857, column: 14, scope: !16918)
!16935 = !DILocation(line: 857, column: 2, scope: !16918)
!16936 = !DILocation(line: 0, scope: !16501, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 859, column: 9, scope: !16918)
!16938 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !16937)
!16939 = !DILocation(line: 859, column: 2, scope: !16918)
!16940 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2779, file: !2779, line: 862, type: !16941, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16943)
!16941 = !DISubroutineType(types: !16942)
!16942 = !{!2674, !2705}
!16943 = !{!16944, !16945, !16946, !16948}
!16944 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16940, file: !2779, line: 862, type: !2705)
!16945 = !DILocalVariable(name: "thread", scope: !16940, file: !2779, line: 864, type: !2674)
!16946 = !DILocalVariable(name: "__i", scope: !16947, file: !2779, line: 866, type: !15882)
!16947 = distinct !DILexicalBlock(scope: !16940, file: !2779, line: 866, column: 2)
!16948 = !DILocalVariable(name: "__key", scope: !16947, file: !2779, line: 866, type: !15882)
!16949 = !DILocation(line: 0, scope: !16940)
!16950 = !DILocation(line: 0, scope: !16947)
!16951 = !DILocation(line: 0, scope: !15890, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 866, column: 2, scope: !16947)
!16953 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16954)
!16954 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16952)
!16955 = !DILocation(line: 0, scope: !15899, inlinedAt: !16954)
!16956 = !DILocation(line: 867, column: 12, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16958, file: !2779, line: 866, column: 26)
!16958 = distinct !DILexicalBlock(scope: !16947, file: !2779, line: 866, column: 2)
!16959 = !DILocation(line: 869, column: 14, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16957, file: !2779, line: 869, column: 7)
!16961 = !DILocation(line: 869, column: 7, scope: !16957)
!16962 = !DILocation(line: 870, column: 4, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16960, file: !2779, line: 869, column: 23)
!16964 = !DILocation(line: 871, column: 3, scope: !16963)
!16965 = !DILocation(line: 0, scope: !15917, inlinedAt: !16966)
!16966 = distinct !DILocation(line: 866, column: 2, scope: !16958)
!16967 = !DILocation(line: 0, scope: !15925, inlinedAt: !16968)
!16968 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16966)
!16969 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16968)
!16970 = !DILocation(line: 874, column: 2, scope: !16940)
!16971 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2779, file: !2779, line: 877, type: !16941, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16972)
!16972 = !{!16973, !16974, !16975, !16977}
!16973 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16971, file: !2779, line: 877, type: !2705)
!16974 = !DILocalVariable(name: "thread", scope: !16971, file: !2779, line: 879, type: !2674)
!16975 = !DILocalVariable(name: "__i", scope: !16976, file: !2779, line: 881, type: !15882)
!16976 = distinct !DILexicalBlock(scope: !16971, file: !2779, line: 881, column: 2)
!16977 = !DILocalVariable(name: "__key", scope: !16976, file: !2779, line: 881, type: !15882)
!16978 = !DILocation(line: 0, scope: !16971)
!16979 = !DILocation(line: 0, scope: !16976)
!16980 = !DILocation(line: 0, scope: !15890, inlinedAt: !16981)
!16981 = distinct !DILocation(line: 881, column: 2, scope: !16976)
!16982 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !16983)
!16983 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !16981)
!16984 = !DILocation(line: 0, scope: !15899, inlinedAt: !16983)
!16985 = !DILocation(line: 882, column: 12, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16987, file: !2779, line: 881, column: 26)
!16987 = distinct !DILexicalBlock(scope: !16976, file: !2779, line: 881, column: 2)
!16988 = !DILocation(line: 884, column: 14, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16986, file: !2779, line: 884, column: 7)
!16990 = !DILocation(line: 884, column: 7, scope: !16986)
!16991 = !DILocation(line: 885, column: 4, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16989, file: !2779, line: 884, column: 23)
!16993 = !DILocation(line: 886, column: 10, scope: !16992)
!16994 = !DILocation(line: 887, column: 3, scope: !16992)
!16995 = !DILocation(line: 0, scope: !15917, inlinedAt: !16996)
!16996 = distinct !DILocation(line: 881, column: 2, scope: !16987)
!16997 = !DILocation(line: 0, scope: !15925, inlinedAt: !16998)
!16998 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !16996)
!16999 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !16998)
!17000 = !DILocation(line: 890, column: 2, scope: !16971)
!17001 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2779, file: !2779, line: 893, type: !15848, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17002)
!17002 = !{!17003}
!17003 = !DILocalVariable(name: "thread", arg: 1, scope: !17001, file: !2779, line: 893, type: !2674)
!17004 = !DILocation(line: 0, scope: !17001)
!17005 = !DILocation(line: 0, scope: !16857, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 895, column: 2, scope: !17001)
!17007 = !DILocation(line: 0, scope: !16861, inlinedAt: !17006)
!17008 = !DILocation(line: 0, scope: !15890, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 788, column: 2, scope: !16861, inlinedAt: !17006)
!17010 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17011)
!17011 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17009)
!17012 = !DILocation(line: 0, scope: !15899, inlinedAt: !17011)
!17013 = !DILocation(line: 789, column: 3, scope: !16871, inlinedAt: !17006)
!17014 = !DILocation(line: 0, scope: !15917, inlinedAt: !17015)
!17015 = distinct !DILocation(line: 788, column: 2, scope: !16872, inlinedAt: !17006)
!17016 = !DILocation(line: 0, scope: !15925, inlinedAt: !17017)
!17017 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17015)
!17018 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17017)
!17019 = !DILocation(line: 896, column: 8, scope: !17001)
!17020 = !DILocation(line: 897, column: 1, scope: !17001)
!17021 = distinct !DISubprogram(name: "z_set_prio", scope: !2779, file: !2779, line: 902, type: !16210, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17022)
!17022 = !{!17023, !17024, !17025, !17026, !17028}
!17023 = !DILocalVariable(name: "thread", arg: 1, scope: !17021, file: !2779, line: 902, type: !2674)
!17024 = !DILocalVariable(name: "prio", arg: 2, scope: !17021, file: !2779, line: 902, type: !125)
!17025 = !DILocalVariable(name: "need_sched", scope: !17021, file: !2779, line: 904, type: !153)
!17026 = !DILocalVariable(name: "__i", scope: !17027, file: !2779, line: 906, type: !15882)
!17027 = distinct !DILexicalBlock(scope: !17021, file: !2779, line: 906, column: 2)
!17028 = !DILocalVariable(name: "__key", scope: !17027, file: !2779, line: 906, type: !15882)
!17029 = !DILocation(line: 0, scope: !17021)
!17030 = !DILocation(line: 0, scope: !17027)
!17031 = !DILocation(line: 0, scope: !15890, inlinedAt: !17032)
!17032 = distinct !DILocation(line: 906, column: 2, scope: !17027)
!17033 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17034)
!17034 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17032)
!17035 = !DILocation(line: 0, scope: !15899, inlinedAt: !17034)
!17036 = !DILocation(line: 907, column: 16, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17038, file: !2779, line: 906, column: 26)
!17038 = distinct !DILexicalBlock(scope: !17027, file: !2779, line: 906, column: 2)
!17039 = !DILocation(line: 909, column: 7, scope: !17037)
!17040 = !DILocation(line: 0, scope: !16059, inlinedAt: !17041)
!17041 = distinct !DILocation(line: 912, column: 5, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17043, file: !2779, line: 911, column: 63)
!17043 = distinct !DILexicalBlock(scope: !17044, file: !2779, line: 911, column: 8)
!17044 = distinct !DILexicalBlock(scope: !17045, file: !2779, line: 909, column: 19)
!17045 = distinct !DILexicalBlock(scope: !17037, file: !2779, line: 909, column: 7)
!17046 = !DILocation(line: 266, column: 28, scope: !16059, inlinedAt: !17041)
!17047 = !DILocation(line: 0, scope: !16067, inlinedAt: !17048)
!17048 = distinct !DILocation(line: 268, column: 3, scope: !16071, inlinedAt: !17041)
!17049 = !DILocation(line: 234, column: 2, scope: !16067, inlinedAt: !17048)
!17050 = !DILocation(line: 913, column: 23, scope: !17042)
!17051 = !DILocation(line: 0, scope: !16076, inlinedAt: !17052)
!17052 = distinct !DILocation(line: 914, column: 5, scope: !17042)
!17053 = !DILocation(line: 252, column: 28, scope: !16076, inlinedAt: !17052)
!17054 = !DILocation(line: 0, scope: !16083, inlinedAt: !17055)
!17055 = distinct !DILocation(line: 254, column: 3, scope: !16087, inlinedAt: !17052)
!17056 = !DILocation(line: 0, scope: !16090, inlinedAt: !17057)
!17057 = distinct !DILocation(line: 229, column: 2, scope: !16083, inlinedAt: !17055)
!17058 = !DILocation(line: 188, column: 2, scope: !16100, inlinedAt: !17057)
!17059 = !DILocation(line: 188, column: 2, scope: !16102, inlinedAt: !17057)
!17060 = !DILocation(line: 0, scope: !16100, inlinedAt: !17057)
!17061 = !DILocation(line: 189, column: 7, scope: !16105, inlinedAt: !17057)
!17062 = !DILocation(line: 189, column: 35, scope: !16105, inlinedAt: !17057)
!17063 = !DILocation(line: 189, column: 7, scope: !16106, inlinedAt: !17057)
!17064 = !DILocation(line: 190, column: 4, scope: !16110, inlinedAt: !17057)
!17065 = !DILocation(line: 192, column: 4, scope: !16110, inlinedAt: !17057)
!17066 = distinct !{!17066, !17058, !17067}
!17067 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !17057)
!17068 = !DILocation(line: 196, column: 2, scope: !16090, inlinedAt: !17057)
!17069 = !DILocation(line: 197, column: 1, scope: !16090, inlinedAt: !17057)
!17070 = !DILocation(line: 918, column: 4, scope: !17044)
!17071 = !DILocation(line: 919, column: 3, scope: !17044)
!17072 = !DILocation(line: 920, column: 22, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17045, file: !2779, line: 919, column: 10)
!17074 = !DILocation(line: 0, scope: !15917, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 906, column: 2, scope: !17038)
!17076 = !DILocation(line: 0, scope: !15925, inlinedAt: !17077)
!17077 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17075)
!17078 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17077)
!17079 = !DILocation(line: 926, column: 2, scope: !17021)
!17080 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2779, file: !2779, line: 929, type: !17081, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17083)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{null, !2674, !125}
!17083 = !{!17084, !17085, !17086}
!17084 = !DILocalVariable(name: "thread", arg: 1, scope: !17080, file: !2779, line: 929, type: !2674)
!17085 = !DILocalVariable(name: "prio", arg: 2, scope: !17080, file: !2779, line: 929, type: !125)
!17086 = !DILocalVariable(name: "need_sched", scope: !17080, file: !2779, line: 931, type: !153)
!17087 = !DILocation(line: 0, scope: !17080)
!17088 = !DILocation(line: 931, column: 20, scope: !17080)
!17089 = !DILocation(line: 935, column: 17, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17080, file: !2779, line: 935, column: 6)
!17091 = !DILocation(line: 935, column: 20, scope: !17090)
!17092 = !DILocation(line: 935, column: 35, scope: !17090)
!17093 = !DILocation(line: 935, column: 48, scope: !17090)
!17094 = !DILocation(line: 935, column: 6, scope: !17080)
!17095 = !DILocation(line: 936, column: 3, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17090, file: !2779, line: 935, column: 55)
!17097 = !DILocation(line: 937, column: 2, scope: !17096)
!17098 = !DILocation(line: 938, column: 1, scope: !17080)
!17099 = distinct !DISubprogram(name: "k_sched_lock", scope: !2779, file: !2779, line: 987, type: !3440, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17100)
!17100 = !{!17101, !17103}
!17101 = !DILocalVariable(name: "__i", scope: !17102, file: !2779, line: 989, type: !15882)
!17102 = distinct !DILexicalBlock(scope: !17099, file: !2779, line: 989, column: 2)
!17103 = !DILocalVariable(name: "__key", scope: !17102, file: !2779, line: 989, type: !15882)
!17104 = !DILocation(line: 0, scope: !17102)
!17105 = !DILocation(line: 0, scope: !15890, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 989, column: 2, scope: !17102)
!17107 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17108)
!17108 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17106)
!17109 = !DILocation(line: 0, scope: !15899, inlinedAt: !17108)
!17110 = !DILocation(line: 992, column: 3, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17112, file: !2779, line: 989, column: 26)
!17112 = distinct !DILexicalBlock(scope: !17102, file: !2779, line: 989, column: 2)
!17113 = !DILocation(line: 0, scope: !15917, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 989, column: 2, scope: !17112)
!17115 = !DILocation(line: 0, scope: !15925, inlinedAt: !17116)
!17116 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17114)
!17117 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17116)
!17118 = !DILocation(line: 994, column: 1, scope: !17099)
!17119 = distinct !DISubprogram(name: "z_sched_lock", scope: !15162, file: !15162, line: 251, type: !3440, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17120 = !DILocation(line: 256, column: 4, scope: !17119)
!17121 = !DILocation(line: 256, column: 19, scope: !17119)
!17122 = !DILocation(line: 256, column: 2, scope: !17119)
!17123 = !DILocation(line: 258, column: 2, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17119, file: !15162, line: 258, column: 2)
!17125 = !{i64 2155564686}
!17126 = !DILocation(line: 259, column: 1, scope: !17119)
!17127 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2779, file: !2779, line: 996, type: !3440, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17128)
!17128 = !{!17129, !17131}
!17129 = !DILocalVariable(name: "__i", scope: !17130, file: !2779, line: 998, type: !15882)
!17130 = distinct !DILexicalBlock(scope: !17127, file: !2779, line: 998, column: 2)
!17131 = !DILocalVariable(name: "__key", scope: !17130, file: !2779, line: 998, type: !15882)
!17132 = !DILocation(line: 0, scope: !17130)
!17133 = !DILocation(line: 0, scope: !15890, inlinedAt: !17134)
!17134 = distinct !DILocation(line: 998, column: 2, scope: !17130)
!17135 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17134)
!17137 = !DILocation(line: 0, scope: !15899, inlinedAt: !17136)
!17138 = !DILocation(line: 1002, column: 5, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17140, file: !2779, line: 998, column: 26)
!17140 = distinct !DILexicalBlock(scope: !17130, file: !2779, line: 998, column: 2)
!17141 = !DILocation(line: 1002, column: 20, scope: !17139)
!17142 = !DILocation(line: 1002, column: 3, scope: !17139)
!17143 = !DILocation(line: 1003, column: 3, scope: !17139)
!17144 = !DILocation(line: 0, scope: !15917, inlinedAt: !17145)
!17145 = distinct !DILocation(line: 998, column: 2, scope: !17140)
!17146 = !DILocation(line: 0, scope: !15925, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17145)
!17148 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17147)
!17149 = !DILocation(line: 1011, column: 2, scope: !17127)
!17150 = !DILocation(line: 1012, column: 1, scope: !17127)
!17151 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2779, file: !2779, line: 1014, type: !16198, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17152 = !DILocation(line: 1028, column: 25, scope: !17151)
!17153 = !DILocation(line: 1028, column: 2, scope: !17151)
!17154 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2779, file: !2779, line: 1155, type: !17155, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17157)
!17155 = !DISubroutineType(types: !17156)
!17156 = !{!153, !2703, !2703}
!17157 = !{!17158, !17159, !17160, !17161, !17162}
!17158 = !DILocalVariable(name: "a", arg: 1, scope: !17154, file: !2779, line: 1155, type: !2703)
!17159 = !DILocalVariable(name: "b", arg: 2, scope: !17154, file: !2779, line: 1155, type: !2703)
!17160 = !DILocalVariable(name: "thread_a", scope: !17154, file: !2779, line: 1157, type: !2674)
!17161 = !DILocalVariable(name: "thread_b", scope: !17154, file: !2779, line: 1157, type: !2674)
!17162 = !DILocalVariable(name: "cmp", scope: !17154, file: !2779, line: 1158, type: !919)
!17163 = !DILocation(line: 0, scope: !17154)
!17164 = !DILocation(line: 1160, column: 13, scope: !17154)
!17165 = !DILocation(line: 1161, column: 13, scope: !17154)
!17166 = !DILocation(line: 1163, column: 8, scope: !17154)
!17167 = !DILocation(line: 1165, column: 10, scope: !17168)
!17168 = distinct !DILexicalBlock(scope: !17154, file: !2779, line: 1165, column: 6)
!17169 = !DILocation(line: 1165, column: 6, scope: !17154)
!17170 = !DILocation(line: 1167, column: 17, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17168, file: !2779, line: 1167, column: 13)
!17172 = !DILocation(line: 1167, column: 13, scope: !17168)
!17173 = !DILocation(line: 1170, column: 25, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17171, file: !2779, line: 1169, column: 9)
!17175 = !DILocation(line: 1170, column: 52, scope: !17174)
!17176 = !DILocation(line: 1170, column: 35, scope: !17174)
!17177 = !DILocation(line: 1170, column: 3, scope: !17174)
!17178 = !DILocation(line: 0, scope: !17168)
!17179 = !DILocation(line: 1173, column: 1, scope: !17154)
!17180 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2779, file: !2779, line: 1175, type: !17181, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17196)
!17181 = !DISubroutineType(types: !17182)
!17182 = !{null, !17183, !2674}
!17183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17184, size: 32)
!17184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17185, line: 37, size: 128, elements: !17186)
!17185 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17186 = !{!17187, !17195}
!17187 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17184, file: !17185, line: 38, baseType: !17188, size: 96)
!17188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !557, line: 83, size: 96, elements: !17189)
!17189 = !{!17190, !17191, !17194}
!17190 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17188, file: !557, line: 84, baseType: !2703, size: 32)
!17191 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17188, file: !557, line: 85, baseType: !17192, size: 32, offset: 32)
!17192 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !557, line: 81, baseType: !17193)
!17193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17155, size: 32)
!17194 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17188, file: !557, line: 86, baseType: !125, size: 32, offset: 64)
!17195 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17184, file: !17185, line: 39, baseType: !125, size: 32, offset: 96)
!17196 = !{!17197, !17198, !17199, !17200, !17209}
!17197 = !DILocalVariable(name: "pq", arg: 1, scope: !17180, file: !2779, line: 1175, type: !17183)
!17198 = !DILocalVariable(name: "thread", arg: 2, scope: !17180, file: !2779, line: 1175, type: !2674)
!17199 = !DILocalVariable(name: "t", scope: !17180, file: !2779, line: 1177, type: !2674)
!17200 = !DILocalVariable(name: "__f", scope: !17201, file: !2779, line: 1190, type: !17204)
!17201 = distinct !DILexicalBlock(scope: !17202, file: !2779, line: 1190, column: 3)
!17202 = distinct !DILexicalBlock(scope: !17203, file: !2779, line: 1189, column: 27)
!17203 = distinct !DILexicalBlock(scope: !17180, file: !2779, line: 1189, column: 6)
!17204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !557, line: 155, size: 96, elements: !17205)
!17205 = !{!17206, !17207, !17208}
!17206 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17204, file: !557, line: 156, baseType: !2774, size: 32)
!17207 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17204, file: !557, line: 157, baseType: !184, size: 32, offset: 32)
!17208 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17204, file: !557, line: 158, baseType: !919, size: 32, offset: 64)
!17209 = !DILocalVariable(name: "n", scope: !17210, file: !2779, line: 1190, type: !2703)
!17210 = distinct !DILexicalBlock(scope: !17211, file: !2779, line: 1190, column: 3)
!17211 = distinct !DILexicalBlock(scope: !17201, file: !2779, line: 1190, column: 3)
!17212 = !DILocation(line: 0, scope: !17180)
!17213 = !DILocation(line: 1181, column: 31, scope: !17180)
!17214 = !DILocation(line: 1181, column: 45, scope: !17180)
!17215 = !DILocation(line: 1181, column: 15, scope: !17180)
!17216 = !DILocation(line: 1181, column: 25, scope: !17180)
!17217 = !DILocation(line: 1189, column: 11, scope: !17203)
!17218 = !DILocation(line: 1189, column: 7, scope: !17203)
!17219 = !DILocation(line: 1189, column: 6, scope: !17180)
!17220 = !DILocation(line: 1190, column: 3, scope: !17201)
!17221 = !DILocation(line: 1190, column: 3, scope: !17210)
!17222 = !DILocation(line: 0, scope: !17210)
!17223 = !DILocation(line: 1190, column: 3, scope: !17211)
!17224 = !DILocation(line: 1193, column: 2, scope: !17202)
!17225 = !DILocation(line: 1191, column: 42, scope: !17226)
!17226 = distinct !DILexicalBlock(scope: !17211, file: !2779, line: 1190, column: 54)
!17227 = !DILocation(line: 1191, column: 12, scope: !17226)
!17228 = !DILocation(line: 1191, column: 22, scope: !17226)
!17229 = distinct !{!17229, !17220, !17230}
!17230 = !DILocation(line: 1192, column: 3, scope: !17201)
!17231 = !DILocation(line: 1195, column: 17, scope: !17180)
!17232 = !DILocation(line: 1195, column: 37, scope: !17180)
!17233 = !DILocation(line: 1195, column: 2, scope: !17180)
!17234 = !DILocation(line: 1196, column: 1, scope: !17180)
!17235 = !DISubprogram(name: "z_rb_foreach_next", scope: !557, file: !557, line: 176, type: !17236, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17236 = !DISubroutineType(types: !17237)
!17237 = !{!2703, !17238, !17239}
!17238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17188, size: 32)
!17239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17204, size: 32)
!17240 = !DISubprogram(name: "rb_insert", scope: !557, file: !557, line: 105, type: !17241, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17241 = !DISubroutineType(types: !17242)
!17242 = !{null, !17238, !2703}
!17243 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2779, file: !2779, line: 1198, type: !17181, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17244)
!17244 = !{!17245, !17246}
!17245 = !DILocalVariable(name: "pq", arg: 1, scope: !17243, file: !2779, line: 1198, type: !17183)
!17246 = !DILocalVariable(name: "thread", arg: 2, scope: !17243, file: !2779, line: 1198, type: !2674)
!17247 = !DILocation(line: 0, scope: !17243)
!17248 = !DILocation(line: 1202, column: 17, scope: !17243)
!17249 = !DILocation(line: 1202, column: 37, scope: !17243)
!17250 = !DILocation(line: 1202, column: 2, scope: !17243)
!17251 = !DILocation(line: 1204, column: 16, scope: !17252)
!17252 = distinct !DILexicalBlock(scope: !17243, file: !2779, line: 1204, column: 6)
!17253 = !DILocation(line: 1204, column: 7, scope: !17252)
!17254 = !DILocation(line: 1204, column: 6, scope: !17243)
!17255 = !DILocation(line: 1205, column: 7, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17252, file: !2779, line: 1204, column: 22)
!17257 = !DILocation(line: 1205, column: 22, scope: !17256)
!17258 = !DILocation(line: 1206, column: 2, scope: !17256)
!17259 = !DILocation(line: 1207, column: 1, scope: !17243)
!17260 = !DISubprogram(name: "rb_remove", scope: !557, file: !557, line: 110, type: !17241, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17261 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2779, file: !2779, line: 1209, type: !17262, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17264)
!17262 = !DISubroutineType(types: !17263)
!17263 = !{!2674, !17183}
!17264 = !{!17265, !17266, !17267}
!17265 = !DILocalVariable(name: "pq", arg: 1, scope: !17261, file: !2779, line: 1209, type: !17183)
!17266 = !DILocalVariable(name: "thread", scope: !17261, file: !2779, line: 1211, type: !2674)
!17267 = !DILocalVariable(name: "n", scope: !17261, file: !2779, line: 1212, type: !2703)
!17268 = !DILocation(line: 0, scope: !17261)
!17269 = !DILocation(line: 1212, column: 37, scope: !17261)
!17270 = !DILocation(line: 1212, column: 21, scope: !17261)
!17271 = !DILocation(line: 1217, column: 2, scope: !17261)
!17272 = distinct !DISubprogram(name: "rb_get_min", scope: !557, file: !557, line: 115, type: !17273, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17275)
!17273 = !DISubroutineType(types: !17274)
!17274 = !{!2703, !17238}
!17275 = !{!17276}
!17276 = !DILocalVariable(name: "tree", arg: 1, scope: !17272, file: !557, line: 115, type: !17238)
!17277 = !DILocation(line: 0, scope: !17272)
!17278 = !DILocation(line: 117, column: 9, scope: !17272)
!17279 = !DILocation(line: 117, column: 2, scope: !17272)
!17280 = !DISubprogram(name: "z_rb_get_minmax", scope: !557, file: !557, line: 100, type: !17281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17281 = !DISubroutineType(types: !17282)
!17282 = !{!2703, !17238, !150}
!17283 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2779, file: !2779, line: 1246, type: !17284, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17294)
!17284 = !DISubroutineType(types: !17285)
!17285 = !{!2674, !17286}
!17286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17287, size: 32)
!17287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17185, line: 53, size: 2080, elements: !17288)
!17288 = !{!17289, !17293}
!17289 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17287, file: !17185, line: 54, baseType: !17290, size: 2048)
!17290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2710, size: 2048, elements: !17291)
!17291 = !{!17292}
!17292 = !DISubrange(count: 32)
!17293 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17287, file: !17185, line: 55, baseType: !32, size: 32, offset: 2048)
!17294 = !{!17295, !17296, !17297, !17298}
!17295 = !DILocalVariable(name: "pq", arg: 1, scope: !17283, file: !2779, line: 1246, type: !17286)
!17296 = !DILocalVariable(name: "thread", scope: !17283, file: !2779, line: 1252, type: !2674)
!17297 = !DILocalVariable(name: "l", scope: !17283, file: !2779, line: 1253, type: !16093)
!17298 = !DILocalVariable(name: "n", scope: !17283, file: !2779, line: 1254, type: !2775)
!17299 = !DILocation(line: 0, scope: !17283)
!17300 = !DILocation(line: 1248, column: 11, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17283, file: !2779, line: 1248, column: 6)
!17302 = !DILocation(line: 1248, column: 7, scope: !17301)
!17303 = !DILocation(line: 1248, column: 6, scope: !17283)
!17304 = !DILocation(line: 1253, column: 31, scope: !17283)
!17305 = !DILocation(line: 1253, column: 20, scope: !17283)
!17306 = !DILocation(line: 1254, column: 19, scope: !17283)
!17307 = !DILocation(line: 1260, column: 1, scope: !17283)
!17308 = distinct !DISubprogram(name: "z_unpend_all", scope: !2779, file: !2779, line: 1262, type: !17309, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17311)
!17309 = !DISubroutineType(types: !17310)
!17310 = !{!125, !2705}
!17311 = !{!17312, !17313, !17314}
!17312 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17308, file: !2779, line: 1262, type: !2705)
!17313 = !DILocalVariable(name: "need_sched", scope: !17308, file: !2779, line: 1264, type: !125)
!17314 = !DILocalVariable(name: "thread", scope: !17308, file: !2779, line: 1265, type: !2674)
!17315 = !DILocation(line: 0, scope: !17308)
!17316 = !DILocation(line: 1267, column: 19, scope: !17308)
!17317 = !DILocation(line: 1267, column: 41, scope: !17308)
!17318 = !DILocation(line: 1267, column: 2, scope: !17308)
!17319 = !DILocation(line: 1268, column: 3, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17308, file: !2779, line: 1267, column: 50)
!17321 = !DILocation(line: 1269, column: 3, scope: !17320)
!17322 = distinct !{!17322, !17318, !17323}
!17323 = !DILocation(line: 1271, column: 2, scope: !17308)
!17324 = !DILocation(line: 1273, column: 2, scope: !17308)
!17325 = distinct !DISubprogram(name: "z_waitq_head", scope: !15488, file: !15488, line: 52, type: !16941, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17326)
!17326 = !{!17327}
!17327 = !DILocalVariable(name: "w", arg: 1, scope: !17325, file: !15488, line: 52, type: !2705)
!17328 = !DILocation(line: 0, scope: !17325)
!17329 = !DILocation(line: 54, column: 52, scope: !17325)
!17330 = !DILocation(line: 54, column: 28, scope: !17325)
!17331 = !DILocation(line: 54, column: 9, scope: !17325)
!17332 = !DILocation(line: 54, column: 2, scope: !17325)
!17333 = distinct !DISubprogram(name: "init_ready_q", scope: !2779, file: !2779, line: 1276, type: !17334, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17341)
!17334 = !DISubroutineType(types: !17335)
!17335 = !{null, !17336}
!17336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17337, size: 32)
!17337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !17338)
!17338 = !{!17339, !17340}
!17339 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17337, file: !567, line: 86, baseType: !2674, size: 32)
!17340 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17337, file: !567, line: 90, baseType: !2710, size: 64, offset: 32)
!17341 = !{!17342}
!17342 = !DILocalVariable(name: "rq", arg: 1, scope: !17333, file: !2779, line: 1276, type: !17336)
!17343 = !DILocation(line: 0, scope: !17333)
!17344 = !DILocation(line: 1289, column: 22, scope: !17333)
!17345 = !DILocation(line: 1289, column: 2, scope: !17333)
!17346 = !DILocation(line: 1291, column: 1, scope: !17333)
!17347 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !17348, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17350)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{null, !16093}
!17350 = !{!17351}
!17351 = !DILocalVariable(name: "list", arg: 1, scope: !17347, file: !541, line: 197, type: !16093)
!17352 = !DILocation(line: 0, scope: !17347)
!17353 = !DILocation(line: 199, column: 8, scope: !17347)
!17354 = !DILocation(line: 199, column: 13, scope: !17347)
!17355 = !DILocation(line: 200, column: 8, scope: !17347)
!17356 = !DILocation(line: 200, column: 13, scope: !17347)
!17357 = !DILocation(line: 201, column: 1, scope: !17347)
!17358 = distinct !DISubprogram(name: "z_sched_init", scope: !2779, file: !2779, line: 1293, type: !3440, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17359 = !DILocation(line: 1302, column: 2, scope: !17358)
!17360 = !DILocation(line: 1306, column: 2, scope: !17358)
!17361 = !DILocation(line: 1309, column: 1, scope: !17358)
!17362 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2779, file: !2779, line: 1311, type: !17363, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17366)
!17363 = !DISubroutineType(types: !17364)
!17364 = !{!125, !17365}
!17365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2674)
!17366 = !{!17367}
!17367 = !DILocalVariable(name: "thread", arg: 1, scope: !17362, file: !2779, line: 1311, type: !17365)
!17368 = !DILocation(line: 0, scope: !17362)
!17369 = !DILocation(line: 1313, column: 22, scope: !17362)
!17370 = !DILocation(line: 1313, column: 9, scope: !17362)
!17371 = !DILocation(line: 1313, column: 2, scope: !17362)
!17372 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2779, file: !2779, line: 1325, type: !17373, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17375)
!17373 = !DISubroutineType(types: !17374)
!17374 = !{null, !17365, !125}
!17375 = !{!17376, !17377, !17378}
!17376 = !DILocalVariable(name: "thread", arg: 1, scope: !17372, file: !2779, line: 1325, type: !17365)
!17377 = !DILocalVariable(name: "prio", arg: 2, scope: !17372, file: !2779, line: 1325, type: !125)
!17378 = !DILocalVariable(name: "th", scope: !17372, file: !2779, line: 1334, type: !2674)
!17379 = !DILocation(line: 0, scope: !17372)
!17380 = !DILocation(line: 1336, column: 2, scope: !17372)
!17381 = !DILocation(line: 1337, column: 1, scope: !17372)
!17382 = distinct !DISubprogram(name: "k_can_yield", scope: !2779, file: !2779, line: 1384, type: !9464, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17383 = !DILocation(line: 1386, column: 11, scope: !17382)
!17384 = !DILocation(line: 1386, column: 29, scope: !17382)
!17385 = !DILocation(line: 1386, column: 32, scope: !17382)
!17386 = !DILocation(line: 1386, column: 46, scope: !17382)
!17387 = !DILocation(line: 1387, column: 28, scope: !17382)
!17388 = !DILocation(line: 1387, column: 4, scope: !17382)
!17389 = !DILocation(line: 1386, column: 2, scope: !17382)
!17390 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !624, file: !624, line: 989, type: !9464, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17391 = !DILocation(line: 993, column: 10, scope: !17390)
!17392 = !DILocation(line: 993, column: 2, scope: !17390)
!17393 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2779, file: !2779, line: 1390, type: !3440, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17394)
!17394 = !{!17395}
!17395 = !DILocalVariable(name: "key", scope: !17393, file: !2779, line: 1396, type: !15882)
!17396 = !DILocation(line: 0, scope: !15890, inlinedAt: !17397)
!17397 = distinct !DILocation(line: 1396, column: 25, scope: !17393)
!17398 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17399)
!17399 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17397)
!17400 = !DILocation(line: 0, scope: !15899, inlinedAt: !17399)
!17401 = !DILocation(line: 0, scope: !17393)
!17402 = !DILocation(line: 1400, column: 18, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17404, file: !2779, line: 1399, column: 36)
!17404 = distinct !DILexicalBlock(scope: !17393, file: !2779, line: 1398, column: 6)
!17405 = !DILocation(line: 0, scope: !16059, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 1400, column: 3, scope: !17403)
!17407 = !DILocation(line: 266, column: 15, scope: !16059, inlinedAt: !17406)
!17408 = !DILocation(line: 266, column: 28, scope: !16059, inlinedAt: !17406)
!17409 = !DILocation(line: 0, scope: !16067, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 268, column: 3, scope: !16071, inlinedAt: !17406)
!17411 = !DILocation(line: 234, column: 2, scope: !16067, inlinedAt: !17410)
!17412 = !DILocation(line: 1402, column: 15, scope: !17393)
!17413 = !DILocation(line: 0, scope: !16076, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 1402, column: 2, scope: !17393)
!17415 = !DILocation(line: 252, column: 15, scope: !16076, inlinedAt: !17414)
!17416 = !DILocation(line: 252, column: 28, scope: !16076, inlinedAt: !17414)
!17417 = !DILocation(line: 0, scope: !16083, inlinedAt: !17418)
!17418 = distinct !DILocation(line: 254, column: 3, scope: !16087, inlinedAt: !17414)
!17419 = !DILocation(line: 0, scope: !16090, inlinedAt: !17420)
!17420 = distinct !DILocation(line: 229, column: 2, scope: !16083, inlinedAt: !17418)
!17421 = !DILocation(line: 188, column: 2, scope: !16100, inlinedAt: !17420)
!17422 = !DILocation(line: 188, column: 2, scope: !16102, inlinedAt: !17420)
!17423 = !DILocation(line: 0, scope: !16100, inlinedAt: !17420)
!17424 = !DILocation(line: 189, column: 7, scope: !16105, inlinedAt: !17420)
!17425 = !DILocation(line: 189, column: 35, scope: !16105, inlinedAt: !17420)
!17426 = !DILocation(line: 189, column: 7, scope: !16106, inlinedAt: !17420)
!17427 = !DILocation(line: 191, column: 21, scope: !16110, inlinedAt: !17420)
!17428 = !DILocation(line: 190, column: 4, scope: !16110, inlinedAt: !17420)
!17429 = !DILocation(line: 192, column: 4, scope: !16110, inlinedAt: !17420)
!17430 = distinct !{!17430, !17421, !17431}
!17431 = !DILocation(line: 194, column: 2, scope: !16100, inlinedAt: !17420)
!17432 = !DILocation(line: 196, column: 37, scope: !16090, inlinedAt: !17420)
!17433 = !DILocation(line: 196, column: 2, scope: !16090, inlinedAt: !17420)
!17434 = !DILocation(line: 197, column: 1, scope: !16090, inlinedAt: !17420)
!17435 = !DILocation(line: 1403, column: 2, scope: !17393)
!17436 = !DILocation(line: 0, scope: !16501, inlinedAt: !17437)
!17437 = distinct !DILocation(line: 1404, column: 2, scope: !17393)
!17438 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17437)
!17439 = !DILocation(line: 1405, column: 1, scope: !17393)
!17440 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2779, file: !2779, line: 1459, type: !17441, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17443)
!17441 = !DISubroutineType(types: !17442)
!17442 = !{!919, !16681}
!17443 = !{!17444, !17445, !17446}
!17444 = !DILocalVariable(name: "timeout", arg: 1, scope: !17440, file: !2779, line: 1459, type: !16681)
!17445 = !DILocalVariable(name: "ticks", scope: !17440, file: !2779, line: 1461, type: !2026)
!17446 = !DILocalVariable(name: "ret", scope: !17440, file: !2779, line: 1480, type: !919)
!17447 = !DILocation(line: 0, scope: !17440)
!17448 = !DILocation(line: 1468, column: 6, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17440, file: !2779, line: 1468, column: 6)
!17450 = !DILocation(line: 1468, column: 6, scope: !17440)
!17451 = !DILocation(line: 1469, column: 20, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17449, file: !2779, line: 1468, column: 40)
!17453 = !DILocation(line: 1469, column: 3, scope: !17452)
!17454 = !DILocation(line: 1473, column: 3, scope: !17452)
!17455 = !DILocation(line: 1478, column: 10, scope: !17440)
!17456 = !DILocation(line: 1480, column: 16, scope: !17440)
!17457 = !DILocation(line: 1485, column: 1, scope: !17440)
!17458 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5512, file: !5512, line: 310, type: !17459, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17461)
!17459 = !DISubroutineType(types: !17460)
!17460 = !{null, !17365}
!17461 = !{!17462}
!17462 = !DILocalVariable(name: "thread", arg: 1, scope: !17458, file: !5512, line: 310, type: !17365)
!17463 = !DILocation(line: 0, scope: !17458)
!17464 = !DILocation(line: 319, column: 2, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17458, file: !5512, line: 319, column: 2)
!17466 = !{i64 2155483075}
!17467 = !DILocation(line: 320, column: 2, scope: !17458)
!17468 = !DILocation(line: 321, column: 1, scope: !17458)
!17469 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2779, file: !2779, line: 1415, type: !17470, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17472)
!17470 = !DISubroutineType(types: !17471)
!17471 = !{!919, !2026}
!17472 = !{!17473, !17474, !17475, !17476}
!17473 = !DILocalVariable(name: "ticks", arg: 1, scope: !17469, file: !2779, line: 1415, type: !2026)
!17474 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17469, file: !2779, line: 1418, type: !208)
!17475 = !DILocalVariable(name: "timeout", scope: !17469, file: !2779, line: 1430, type: !16681)
!17476 = !DILocalVariable(name: "key", scope: !17469, file: !2779, line: 1437, type: !15882)
!17477 = !DILocation(line: 0, scope: !17469)
!17478 = !DILocation(line: 1425, column: 12, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17469, file: !2779, line: 1425, column: 6)
!17480 = !DILocation(line: 1425, column: 6, scope: !17469)
!17481 = !DILocation(line: 1426, column: 3, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17479, file: !2779, line: 1425, column: 18)
!17483 = !DILocation(line: 1427, column: 3, scope: !17482)
!17484 = !DILocation(line: 1431, column: 24, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17469, file: !2779, line: 1431, column: 6)
!17486 = !DILocation(line: 1431, column: 6, scope: !17469)
!17487 = !DILocation(line: 1432, column: 35, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17485, file: !2779, line: 1431, column: 30)
!17489 = !DILocation(line: 1432, column: 27, scope: !17488)
!17490 = !DILocation(line: 1433, column: 2, scope: !17488)
!17491 = !DILocation(line: 1434, column: 27, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17485, file: !2779, line: 1433, column: 9)
!17493 = !DILocation(line: 0, scope: !17485)
!17494 = !DILocation(line: 0, scope: !15890, inlinedAt: !17495)
!17495 = distinct !DILocation(line: 1437, column: 25, scope: !17469)
!17496 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17497)
!17497 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17495)
!17498 = !DILocation(line: 0, scope: !15899, inlinedAt: !17497)
!17499 = !DILocation(line: 1440, column: 20, scope: !17469)
!17500 = !DILocation(line: 1440, column: 18, scope: !17469)
!17501 = !DILocation(line: 1442, column: 2, scope: !17469)
!17502 = !DILocation(line: 1443, column: 23, scope: !17469)
!17503 = !DILocation(line: 1443, column: 2, scope: !17469)
!17504 = !DILocation(line: 1444, column: 29, scope: !17469)
!17505 = !DILocation(line: 1444, column: 2, scope: !17469)
!17506 = !DILocation(line: 0, scope: !16501, inlinedAt: !17507)
!17507 = distinct !DILocation(line: 1446, column: 8, scope: !17469)
!17508 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17507)
!17509 = !DILocation(line: 1450, column: 10, scope: !17469)
!17510 = !DILocation(line: 1450, column: 45, scope: !17469)
!17511 = !DILocation(line: 1450, column: 43, scope: !17469)
!17512 = !DILocation(line: 1451, column: 6, scope: !17469)
!17513 = !DILocation(line: 1457, column: 1, scope: !17469)
!17514 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15723, file: !15723, line: 1103, type: !15724, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17515)
!17515 = !{!17516}
!17516 = !DILocalVariable(name: "t", arg: 1, scope: !17514, file: !15723, line: 1103, type: !1853)
!17517 = !DILocation(line: 0, scope: !17514)
!17518 = !DILocation(line: 0, scope: !15937, inlinedAt: !17519)
!17519 = distinct !DILocation(line: 1106, column: 9, scope: !17514)
!17520 = !DILocation(line: 139, column: 13, scope: !17521, inlinedAt: !17519)
!17521 = distinct !DILexicalBlock(scope: !17522, file: !15723, line: 138, column: 10)
!17522 = distinct !DILexicalBlock(scope: !17523, file: !15723, line: 136, column: 7)
!17523 = distinct !DILexicalBlock(scope: !15958, file: !15723, line: 134, column: 17)
!17524 = !DILocation(line: 1106, column: 2, scope: !17514)
!17525 = distinct !DISubprogram(name: "k_yield", scope: !5512, file: !5512, line: 140, type: !3440, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17526 = !DILocation(line: 148, column: 2, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17525, file: !5512, line: 148, column: 2)
!17528 = !{i64 2155482395}
!17529 = !DILocation(line: 149, column: 2, scope: !17525)
!17530 = !DILocation(line: 150, column: 1, scope: !17525)
!17531 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2779, file: !2779, line: 1495, type: !17532, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17534)
!17532 = !DISubroutineType(types: !17533)
!17533 = !{!919, !125}
!17534 = !{!17535, !17536}
!17535 = !DILocalVariable(name: "us", arg: 1, scope: !17531, file: !2779, line: 1495, type: !125)
!17536 = !DILocalVariable(name: "ticks", scope: !17531, file: !2779, line: 1497, type: !919)
!17537 = !DILocation(line: 0, scope: !17531)
!17538 = !DILocation(line: 1501, column: 31, scope: !17531)
!17539 = !DILocation(line: 1501, column: 10, scope: !17531)
!17540 = !DILocation(line: 1502, column: 23, scope: !17531)
!17541 = !DILocation(line: 1502, column: 10, scope: !17531)
!17542 = !DILocation(line: 1506, column: 31, scope: !17531)
!17543 = !DILocation(line: 1506, column: 9, scope: !17531)
!17544 = !DILocation(line: 1506, column: 2, scope: !17531)
!17545 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15723, file: !15723, line: 571, type: !15724, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17546)
!17546 = !{!17547}
!17547 = !DILocalVariable(name: "t", arg: 1, scope: !17545, file: !15723, line: 571, type: !1853)
!17548 = !DILocation(line: 0, scope: !17545)
!17549 = !DILocation(line: 0, scope: !15937, inlinedAt: !17550)
!17550 = distinct !DILocation(line: 574, column: 9, scope: !17545)
!17551 = !DILocation(line: 135, column: 5, scope: !17523, inlinedAt: !17550)
!17552 = !DILocation(line: 139, column: 13, scope: !17521, inlinedAt: !17550)
!17553 = !DILocation(line: 574, column: 2, scope: !17545)
!17554 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15723, file: !15723, line: 1187, type: !15724, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17555)
!17555 = !{!17556}
!17556 = !DILocalVariable(name: "t", arg: 1, scope: !17554, file: !15723, line: 1187, type: !1853)
!17557 = !DILocation(line: 0, scope: !17554)
!17558 = !DILocation(line: 0, scope: !15937, inlinedAt: !17559)
!17559 = distinct !DILocation(line: 1190, column: 9, scope: !17554)
!17560 = !DILocation(line: 145, column: 13, scope: !17561, inlinedAt: !17559)
!17561 = distinct !DILexicalBlock(scope: !15955, file: !15723, line: 144, column: 10)
!17562 = !DILocation(line: 1190, column: 2, scope: !17554)
!17563 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2779, file: !2779, line: 1517, type: !17459, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17564)
!17564 = !{!17565}
!17565 = !DILocalVariable(name: "thread", arg: 1, scope: !17563, file: !2779, line: 1517, type: !17365)
!17566 = !DILocation(line: 0, scope: !17563)
!17567 = !DILocation(line: 1521, column: 6, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17563, file: !2779, line: 1521, column: 6)
!17569 = !DILocation(line: 1521, column: 6, scope: !17563)
!17570 = !DILocation(line: 1525, column: 6, scope: !17571)
!17571 = distinct !DILexicalBlock(scope: !17563, file: !2779, line: 1525, column: 6)
!17572 = !DILocation(line: 1525, column: 37, scope: !17571)
!17573 = !DILocation(line: 1525, column: 6, scope: !17563)
!17574 = !DILocation(line: 1527, column: 20, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17576, file: !2779, line: 1527, column: 7)
!17576 = distinct !DILexicalBlock(scope: !17571, file: !2779, line: 1525, column: 42)
!17577 = !DILocation(line: 1527, column: 33, scope: !17575)
!17578 = !DILocation(line: 1527, column: 7, scope: !17576)
!17579 = !DILocation(line: 1532, column: 2, scope: !17563)
!17580 = !DILocation(line: 1533, column: 2, scope: !17563)
!17581 = !DILocation(line: 1031, column: 3, scope: !16534, inlinedAt: !17582)
!17582 = distinct !DILocation(line: 48, column: 10, scope: !16538, inlinedAt: !17583)
!17583 = distinct !DILocation(line: 1537, column: 7, scope: !17584)
!17584 = distinct !DILexicalBlock(scope: !17563, file: !2779, line: 1537, column: 6)
!17585 = !DILocation(line: 0, scope: !16534, inlinedAt: !17582)
!17586 = !DILocation(line: 48, column: 9, scope: !16538, inlinedAt: !17583)
!17587 = !DILocation(line: 1537, column: 6, scope: !17563)
!17588 = !DILocation(line: 1538, column: 3, scope: !17589)
!17589 = distinct !DILexicalBlock(scope: !17584, file: !2779, line: 1537, column: 25)
!17590 = !DILocation(line: 1539, column: 2, scope: !17589)
!17591 = !DILocation(line: 1540, column: 1, scope: !17563)
!17592 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15162, file: !15162, line: 101, type: !16008, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17593)
!17593 = !{!17594}
!17594 = !DILocalVariable(name: "thread", arg: 1, scope: !17592, file: !15162, line: 101, type: !2674)
!17595 = !DILocation(line: 0, scope: !17592)
!17596 = !DILocation(line: 103, column: 23, scope: !17592)
!17597 = !DILocation(line: 103, column: 36, scope: !17592)
!17598 = !DILocation(line: 103, column: 55, scope: !17592)
!17599 = !DILocation(line: 103, column: 2, scope: !17592)
!17600 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2779, file: !2779, line: 1567, type: !17601, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17603)
!17601 = !DISubroutineType(types: !17602)
!17602 = !{!17365}
!17603 = !{!17604}
!17604 = !DILocalVariable(name: "ret", scope: !17600, file: !2779, line: 1577, type: !17365)
!17605 = !DILocation(line: 1577, column: 30, scope: !17600)
!17606 = !DILocation(line: 0, scope: !17600)
!17607 = !DILocation(line: 1582, column: 2, scope: !17600)
!17608 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2779, file: !2779, line: 1593, type: !9753, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !639)
!17609 = !DILocation(line: 1031, column: 3, scope: !16534, inlinedAt: !17610)
!17610 = distinct !DILocation(line: 48, column: 10, scope: !16538, inlinedAt: !17611)
!17611 = distinct !DILocation(line: 1595, column: 10, scope: !17608)
!17612 = !DILocation(line: 0, scope: !16534, inlinedAt: !17610)
!17613 = !DILocation(line: 48, column: 9, scope: !16538, inlinedAt: !17611)
!17614 = !DILocation(line: 1595, column: 27, scope: !17608)
!17615 = !DILocation(line: 1595, column: 41, scope: !17608)
!17616 = !DILocation(line: 1595, column: 30, scope: !17608)
!17617 = !DILocation(line: 1595, column: 2, scope: !17608)
!17618 = distinct !DISubprogram(name: "z_thread_abort", scope: !2779, file: !2779, line: 1725, type: !15848, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17619)
!17619 = !{!17620, !17621}
!17620 = !DILocalVariable(name: "thread", arg: 1, scope: !17618, file: !2779, line: 1725, type: !2674)
!17621 = !DILocalVariable(name: "key", scope: !17618, file: !2779, line: 1727, type: !15882)
!17622 = !DILocation(line: 0, scope: !17618)
!17623 = !DILocation(line: 0, scope: !15890, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 1727, column: 25, scope: !17618)
!17625 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17626)
!17626 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17624)
!17627 = !DILocation(line: 0, scope: !15899, inlinedAt: !17626)
!17628 = !DILocation(line: 1729, column: 20, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17618, file: !2779, line: 1729, column: 6)
!17630 = !DILocation(line: 1729, column: 33, scope: !17629)
!17631 = !DILocation(line: 1729, column: 48, scope: !17629)
!17632 = !DILocation(line: 1729, column: 6, scope: !17618)
!17633 = !DILocation(line: 0, scope: !15917, inlinedAt: !17634)
!17634 = distinct !DILocation(line: 1730, column: 3, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17629, file: !2779, line: 1729, column: 54)
!17636 = !DILocation(line: 0, scope: !15925, inlinedAt: !17637)
!17637 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17634)
!17638 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17637)
!17639 = !DILocation(line: 1732, column: 3, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17635, file: !2779, line: 1732, column: 3)
!17641 = !{i64 2156218400, i64 2156218416, i64 2156218442, i64 2156218470, i64 2156218490}
!17642 = !DILocation(line: 1733, column: 3, scope: !17635)
!17643 = !DILocation(line: 1736, column: 20, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17618, file: !2779, line: 1736, column: 6)
!17645 = !DILocation(line: 1736, column: 33, scope: !17644)
!17646 = !DILocation(line: 1736, column: 49, scope: !17644)
!17647 = !DILocation(line: 1736, column: 6, scope: !17618)
!17648 = !DILocation(line: 0, scope: !15917, inlinedAt: !17649)
!17649 = distinct !DILocation(line: 1737, column: 3, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17644, file: !2779, line: 1736, column: 56)
!17651 = !DILocation(line: 0, scope: !15925, inlinedAt: !17652)
!17652 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17649)
!17653 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17652)
!17654 = !DILocation(line: 1738, column: 3, scope: !17650)
!17655 = !DILocation(line: 1775, column: 2, scope: !17618)
!17656 = !DILocation(line: 1776, column: 16, scope: !17657)
!17657 = distinct !DILexicalBlock(scope: !17618, file: !2779, line: 1776, column: 6)
!17658 = !DILocation(line: 1776, column: 13, scope: !17657)
!17659 = !DILocation(line: 1776, column: 25, scope: !17657)
!17660 = !DILocation(line: 1031, column: 3, scope: !16534, inlinedAt: !17661)
!17661 = distinct !DILocation(line: 48, column: 10, scope: !16538, inlinedAt: !17662)
!17662 = distinct !DILocation(line: 1776, column: 29, scope: !17657)
!17663 = !DILocation(line: 0, scope: !16534, inlinedAt: !17661)
!17664 = !DILocation(line: 48, column: 9, scope: !16538, inlinedAt: !17662)
!17665 = !DILocation(line: 1776, column: 6, scope: !17618)
!17666 = !DILocation(line: 0, scope: !16501, inlinedAt: !17667)
!17667 = distinct !DILocation(line: 1777, column: 3, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17657, file: !2779, line: 1776, column: 47)
!17669 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17667)
!17670 = !DILocation(line: 1779, column: 2, scope: !17668)
!17671 = !DILocation(line: 0, scope: !15917, inlinedAt: !17672)
!17672 = distinct !DILocation(line: 1780, column: 2, scope: !17618)
!17673 = !DILocation(line: 0, scope: !15925, inlinedAt: !17674)
!17674 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17672)
!17675 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17674)
!17676 = !DILocation(line: 1781, column: 1, scope: !17618)
!17677 = distinct !DISubprogram(name: "end_thread", scope: !2779, file: !2779, line: 1690, type: !15848, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17678)
!17678 = !{!17679}
!17679 = !DILocalVariable(name: "thread", arg: 1, scope: !17677, file: !2779, line: 1690, type: !2674)
!17680 = !DILocation(line: 0, scope: !17677)
!17681 = !DILocation(line: 1695, column: 20, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17677, file: !2779, line: 1695, column: 6)
!17683 = !DILocation(line: 1695, column: 33, scope: !17682)
!17684 = !DILocation(line: 1695, column: 49, scope: !17682)
!17685 = !DILocation(line: 1695, column: 6, scope: !17677)
!17686 = !DILocation(line: 1697, column: 29, scope: !17687)
!17687 = distinct !DILexicalBlock(scope: !17682, file: !2779, line: 1695, column: 56)
!17688 = !DILocation(line: 1698, column: 7, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17687, file: !2779, line: 1698, column: 7)
!17690 = !DILocation(line: 1698, column: 7, scope: !17687)
!17691 = !DILocation(line: 0, scope: !16059, inlinedAt: !17692)
!17692 = distinct !DILocation(line: 1699, column: 4, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17689, file: !2779, line: 1698, column: 35)
!17694 = !DILocation(line: 266, column: 28, scope: !16059, inlinedAt: !17692)
!17695 = !DILocation(line: 0, scope: !16067, inlinedAt: !17696)
!17696 = distinct !DILocation(line: 268, column: 3, scope: !16071, inlinedAt: !17692)
!17697 = !DILocation(line: 234, column: 2, scope: !16067, inlinedAt: !17696)
!17698 = !DILocation(line: 1700, column: 3, scope: !17693)
!17699 = !DILocation(line: 1701, column: 20, scope: !17700)
!17700 = distinct !DILexicalBlock(scope: !17687, file: !2779, line: 1701, column: 7)
!17701 = !DILocation(line: 1701, column: 30, scope: !17700)
!17702 = !DILocation(line: 1701, column: 7, scope: !17687)
!17703 = !DILocation(line: 1702, column: 4, scope: !17704)
!17704 = distinct !DILexicalBlock(scope: !17700, file: !2779, line: 1701, column: 39)
!17705 = !DILocation(line: 1703, column: 3, scope: !17704)
!17706 = !DILocation(line: 1704, column: 9, scope: !17687)
!17707 = !DILocation(line: 1705, column: 23, scope: !17687)
!17708 = !DILocation(line: 1705, column: 3, scope: !17687)
!17709 = !DILocation(line: 1706, column: 3, scope: !17687)
!17710 = !DILocation(line: 1722, column: 2, scope: !17687)
!17711 = !DILocation(line: 1723, column: 1, scope: !17677)
!17712 = distinct !DISubprogram(name: "unpend_all", scope: !2779, file: !2779, line: 1674, type: !17713, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17715)
!17713 = !DISubroutineType(types: !17714)
!17714 = !{null, !2705}
!17715 = !{!17716, !17717}
!17716 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17712, file: !2779, line: 1674, type: !2705)
!17717 = !DILocalVariable(name: "thread", scope: !17712, file: !2779, line: 1676, type: !2674)
!17718 = !DILocation(line: 0, scope: !17712)
!17719 = !DILocation(line: 1678, column: 19, scope: !17712)
!17720 = !DILocation(line: 1678, column: 41, scope: !17712)
!17721 = !DILocation(line: 1678, column: 2, scope: !17712)
!17722 = !DILocation(line: 1679, column: 3, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17712, file: !2779, line: 1678, column: 50)
!17724 = !DILocation(line: 1680, column: 9, scope: !17723)
!17725 = !DILocalVariable(name: "thread", arg: 1, scope: !17726, file: !15182, line: 65, type: !2674)
!17726 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15182, file: !15182, line: 65, type: !17727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17729)
!17727 = !DISubroutineType(types: !17728)
!17728 = !{null, !2674, !32}
!17729 = !{!17725, !17730}
!17730 = !DILocalVariable(name: "value", arg: 2, scope: !17726, file: !15182, line: 65, type: !32)
!17731 = !DILocation(line: 0, scope: !17726, inlinedAt: !17732)
!17732 = distinct !DILocation(line: 1681, column: 3, scope: !17723)
!17733 = !DILocation(line: 67, column: 15, scope: !17726, inlinedAt: !17732)
!17734 = !DILocation(line: 67, column: 33, scope: !17726, inlinedAt: !17732)
!17735 = !DILocation(line: 1682, column: 3, scope: !17723)
!17736 = distinct !{!17736, !17721, !17737}
!17737 = !DILocation(line: 1683, column: 2, scope: !17712)
!17738 = !DILocation(line: 1684, column: 1, scope: !17712)
!17739 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2779, file: !2779, line: 1794, type: !17740, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17742)
!17740 = !DISubroutineType(types: !17741)
!17741 = !{!125, !2674, !16681}
!17742 = !{!17743, !17744, !17745, !17746}
!17743 = !DILocalVariable(name: "thread", arg: 1, scope: !17739, file: !2779, line: 1794, type: !2674)
!17744 = !DILocalVariable(name: "timeout", arg: 2, scope: !17739, file: !2779, line: 1794, type: !16681)
!17745 = !DILocalVariable(name: "key", scope: !17739, file: !2779, line: 1796, type: !15882)
!17746 = !DILocalVariable(name: "ret", scope: !17739, file: !2779, line: 1797, type: !125)
!17747 = !DILocation(line: 0, scope: !17739)
!17748 = !DILocation(line: 0, scope: !15890, inlinedAt: !17749)
!17749 = distinct !DILocation(line: 1796, column: 25, scope: !17739)
!17750 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17751)
!17751 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17749)
!17752 = !DILocation(line: 0, scope: !15899, inlinedAt: !17751)
!17753 = !DILocation(line: 1801, column: 20, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17739, file: !2779, line: 1801, column: 6)
!17755 = !DILocation(line: 1801, column: 33, scope: !17754)
!17756 = !DILocation(line: 1801, column: 49, scope: !17754)
!17757 = !DILocation(line: 1801, column: 6, scope: !17739)
!17758 = !DILocation(line: 1803, column: 13, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17754, file: !2779, line: 1803, column: 13)
!17760 = !DILocation(line: 1803, column: 13, scope: !17754)
!17761 = !DILocation(line: 1805, column: 24, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17759, file: !2779, line: 1805, column: 13)
!17763 = !DILocation(line: 1805, column: 21, scope: !17762)
!17764 = !DILocation(line: 1805, column: 34, scope: !17762)
!17765 = !DILocation(line: 1806, column: 20, scope: !17762)
!17766 = !DILocation(line: 1806, column: 44, scope: !17762)
!17767 = !DILocation(line: 1806, column: 30, scope: !17762)
!17768 = !DILocation(line: 1805, column: 13, scope: !17759)
!17769 = !DILocation(line: 1810, column: 42, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17762, file: !2779, line: 1808, column: 9)
!17771 = !DILocation(line: 1810, column: 3, scope: !17770)
!17772 = !DILocation(line: 1811, column: 22, scope: !17770)
!17773 = !DILocation(line: 1811, column: 3, scope: !17770)
!17774 = !DILocation(line: 0, scope: !16501, inlinedAt: !17775)
!17775 = distinct !DILocation(line: 1814, column: 9, scope: !17770)
!17776 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17775)
!17777 = !DILocation(line: 1817, column: 3, scope: !17770)
!17778 = !DILocation(line: 0, scope: !17754)
!17779 = !DILocation(line: 0, scope: !15917, inlinedAt: !17780)
!17780 = distinct !DILocation(line: 1822, column: 2, scope: !17739)
!17781 = !DILocation(line: 0, scope: !15925, inlinedAt: !17782)
!17782 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17780)
!17783 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17782)
!17784 = !DILocation(line: 1823, column: 2, scope: !17739)
!17785 = !DILocation(line: 1824, column: 1, scope: !17739)
!17786 = distinct !DISubprogram(name: "z_sched_wake", scope: !2779, file: !2779, line: 1882, type: !17787, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17789)
!17787 = !DISubroutineType(types: !17788)
!17788 = !{!153, !2705, !125, !124}
!17789 = !{!17790, !17791, !17792, !17793, !17794, !17795, !17797}
!17790 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17786, file: !2779, line: 1882, type: !2705)
!17791 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17786, file: !2779, line: 1882, type: !125)
!17792 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17786, file: !2779, line: 1882, type: !124)
!17793 = !DILocalVariable(name: "thread", scope: !17786, file: !2779, line: 1884, type: !2674)
!17794 = !DILocalVariable(name: "ret", scope: !17786, file: !2779, line: 1885, type: !153)
!17795 = !DILocalVariable(name: "__i", scope: !17796, file: !2779, line: 1887, type: !15882)
!17796 = distinct !DILexicalBlock(scope: !17786, file: !2779, line: 1887, column: 2)
!17797 = !DILocalVariable(name: "__key", scope: !17796, file: !2779, line: 1887, type: !15882)
!17798 = !DILocation(line: 0, scope: !17786)
!17799 = !DILocation(line: 0, scope: !17796)
!17800 = !DILocation(line: 0, scope: !15890, inlinedAt: !17801)
!17801 = distinct !DILocation(line: 1887, column: 2, scope: !17796)
!17802 = !DILocation(line: 55, column: 2, scope: !15899, inlinedAt: !17803)
!17803 = distinct !DILocation(line: 145, column: 10, scope: !15890, inlinedAt: !17801)
!17804 = !DILocation(line: 0, scope: !15899, inlinedAt: !17803)
!17805 = !DILocation(line: 1888, column: 12, scope: !17806)
!17806 = distinct !DILexicalBlock(scope: !17807, file: !2779, line: 1887, column: 26)
!17807 = distinct !DILexicalBlock(scope: !17796, file: !2779, line: 1887, column: 2)
!17808 = !DILocation(line: 1890, column: 14, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17806, file: !2779, line: 1890, column: 7)
!17810 = !DILocation(line: 1890, column: 7, scope: !17806)
!17811 = !DILocalVariable(name: "thread", arg: 1, scope: !17812, file: !17813, line: 134, type: !2674)
!17812 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17813, file: !17813, line: 134, type: !17814, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17816)
!17813 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17814 = !DISubroutineType(types: !17815)
!17815 = !{null, !2674, !32, !124}
!17816 = !{!17811, !17817, !17818}
!17817 = !DILocalVariable(name: "value", arg: 2, scope: !17812, file: !17813, line: 135, type: !32)
!17818 = !DILocalVariable(name: "data", arg: 3, scope: !17812, file: !17813, line: 136, type: !124)
!17819 = !DILocation(line: 0, scope: !17812, inlinedAt: !17820)
!17820 = distinct !DILocation(line: 1891, column: 4, scope: !17821)
!17821 = distinct !DILexicalBlock(scope: !17809, file: !2779, line: 1890, column: 23)
!17822 = !DILocation(line: 0, scope: !17726, inlinedAt: !17823)
!17823 = distinct !DILocation(line: 138, column: 2, scope: !17812, inlinedAt: !17820)
!17824 = !DILocation(line: 67, column: 15, scope: !17726, inlinedAt: !17823)
!17825 = !DILocation(line: 67, column: 33, scope: !17726, inlinedAt: !17823)
!17826 = !DILocation(line: 139, column: 15, scope: !17812, inlinedAt: !17820)
!17827 = !DILocation(line: 139, column: 25, scope: !17812, inlinedAt: !17820)
!17828 = !DILocation(line: 1894, column: 4, scope: !17821)
!17829 = !DILocation(line: 1895, column: 10, scope: !17821)
!17830 = !DILocation(line: 1896, column: 4, scope: !17821)
!17831 = !DILocation(line: 1898, column: 3, scope: !17821)
!17832 = !DILocation(line: 0, scope: !15917, inlinedAt: !17833)
!17833 = distinct !DILocation(line: 1887, column: 2, scope: !17807)
!17834 = !DILocation(line: 0, scope: !15925, inlinedAt: !17835)
!17835 = distinct !DILocation(line: 215, column: 2, scope: !15917, inlinedAt: !17833)
!17836 = !DILocation(line: 95, column: 2, scope: !15925, inlinedAt: !17835)
!17837 = !DILocation(line: 1901, column: 2, scope: !17786)
!17838 = distinct !DISubprogram(name: "z_sched_wait", scope: !2779, file: !2779, line: 1904, type: !17839, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17842)
!17839 = !DISubroutineType(types: !17840)
!17840 = !{!125, !15893, !15882, !2705, !16681, !17841}
!17841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!17842 = !{!17843, !17844, !17845, !17846, !17847, !17848}
!17843 = !DILocalVariable(name: "lock", arg: 1, scope: !17838, file: !2779, line: 1904, type: !15893)
!17844 = !DILocalVariable(name: "key", arg: 2, scope: !17838, file: !2779, line: 1904, type: !15882)
!17845 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17838, file: !2779, line: 1905, type: !2705)
!17846 = !DILocalVariable(name: "timeout", arg: 4, scope: !17838, file: !2779, line: 1905, type: !16681)
!17847 = !DILocalVariable(name: "data", arg: 5, scope: !17838, file: !2779, line: 1905, type: !17841)
!17848 = !DILocalVariable(name: "ret", scope: !17838, file: !2779, line: 1907, type: !125)
!17849 = !DILocation(line: 0, scope: !17838)
!17850 = !DILocation(line: 1907, column: 12, scope: !17838)
!17851 = !DILocation(line: 1909, column: 11, scope: !17852)
!17852 = distinct !DILexicalBlock(scope: !17838, file: !2779, line: 1909, column: 6)
!17853 = !DILocation(line: 1909, column: 6, scope: !17838)
!17854 = !DILocation(line: 1910, column: 11, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17852, file: !2779, line: 1909, column: 20)
!17856 = !DILocation(line: 1910, column: 26, scope: !17855)
!17857 = !DILocation(line: 1910, column: 9, scope: !17855)
!17858 = !DILocation(line: 1911, column: 2, scope: !17855)
!17859 = !DILocation(line: 1912, column: 2, scope: !17838)
!17860 = distinct !DISubprogram(name: "z_data_copy", scope: !17861, file: !17861, line: 22, type: !3440, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3423, retainedNodes: !639)
!17861 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17862 = !DILocation(line: 24, column: 2, scope: !17860)
!17863 = !DILocation(line: 27, column: 2, scope: !17860)
!17864 = !DILocation(line: 31, column: 2, scope: !17860)
!17865 = !DILocation(line: 71, column: 1, scope: !17860)
!17866 = distinct !DISubprogram(name: "z_add_timeout", scope: !2816, file: !2816, line: 88, type: !17867, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !17873)
!17867 = !DISubroutineType(types: !17868)
!17868 = !{null, !2789, !2808, !17869}
!17869 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2027, line: 67, baseType: !17870)
!17870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2027, line: 65, size: 64, elements: !17871)
!17871 = !{!17872}
!17872 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17870, file: !2027, line: 66, baseType: !2026, size: 64)
!17873 = !{!17874, !17875, !17876, !17877, !17883, !17884, !17887, !17890}
!17874 = !DILocalVariable(name: "to", arg: 1, scope: !17866, file: !2816, line: 88, type: !2789)
!17875 = !DILocalVariable(name: "fn", arg: 2, scope: !17866, file: !2816, line: 88, type: !2808)
!17876 = !DILocalVariable(name: "timeout", arg: 3, scope: !17866, file: !2816, line: 89, type: !17869)
!17877 = !DILocalVariable(name: "__i", scope: !17878, file: !2816, line: 102, type: !17879)
!17878 = distinct !DILexicalBlock(scope: !17866, file: !2816, line: 102, column: 2)
!17879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !17880)
!17880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !17881)
!17881 = !{!17882}
!17882 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17880, file: !638, line: 33, baseType: !125, size: 32)
!17883 = !DILocalVariable(name: "__key", scope: !17878, file: !2816, line: 102, type: !17879)
!17884 = !DILocalVariable(name: "t", scope: !17885, file: !2816, line: 103, type: !2789)
!17885 = distinct !DILexicalBlock(scope: !17886, file: !2816, line: 102, column: 24)
!17886 = distinct !DILexicalBlock(scope: !17878, file: !2816, line: 102, column: 2)
!17887 = !DILocalVariable(name: "ticks", scope: !17888, file: !2816, line: 107, type: !2026)
!17888 = distinct !DILexicalBlock(scope: !17889, file: !2816, line: 106, column: 39)
!17889 = distinct !DILexicalBlock(scope: !17885, file: !2816, line: 105, column: 7)
!17890 = !DILocalVariable(name: "next_time", scope: !17891, file: !2816, line: 137, type: !919)
!17891 = distinct !DILexicalBlock(scope: !17892, file: !2816, line: 127, column: 22)
!17892 = distinct !DILexicalBlock(scope: !17885, file: !2816, line: 127, column: 7)
!17893 = !DILocation(line: 0, scope: !17866)
!17894 = !DILocation(line: 91, column: 6, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17866, file: !2816, line: 91, column: 6)
!17896 = !DILocation(line: 91, column: 6, scope: !17866)
!17897 = !DILocation(line: 100, column: 6, scope: !17866)
!17898 = !DILocation(line: 100, column: 9, scope: !17866)
!17899 = !DILocation(line: 0, scope: !17878)
!17900 = !DILocalVariable(name: "l", arg: 1, scope: !17901, file: !638, line: 136, type: !17904)
!17901 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !17902, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !17905)
!17902 = !DISubroutineType(types: !17903)
!17903 = !{!17879, !17904}
!17904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!17905 = !{!17900, !17906}
!17906 = !DILocalVariable(name: "k", scope: !17901, file: !638, line: 139, type: !17879)
!17907 = !DILocation(line: 0, scope: !17901, inlinedAt: !17908)
!17908 = distinct !DILocation(line: 102, column: 2, scope: !17878)
!17909 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !17914)
!17910 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6978, file: !6978, line: 42, type: !6979, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !17911)
!17911 = !{!17912, !17913}
!17912 = !DILocalVariable(name: "key", scope: !17910, file: !6978, line: 44, type: !32)
!17913 = !DILocalVariable(name: "tmp", scope: !17910, file: !6978, line: 53, type: !32)
!17914 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !17908)
!17915 = !{i64 2600497}
!17916 = !DILocation(line: 0, scope: !17910, inlinedAt: !17914)
!17917 = !DILocation(line: 106, column: 33, scope: !17889)
!17918 = !DILocation(line: 105, column: 7, scope: !17885)
!17919 = !DILocation(line: 107, column: 50, scope: !17888)
!17920 = !DILocation(line: 107, column: 48, scope: !17888)
!17921 = !DILocation(line: 0, scope: !17888)
!17922 = !DILocation(line: 109, column: 17, scope: !17888)
!17923 = !DILocation(line: 110, column: 3, scope: !17888)
!17924 = !DILocation(line: 111, column: 31, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17889, file: !2816, line: 110, column: 10)
!17926 = !DILocation(line: 111, column: 37, scope: !17925)
!17927 = !DILocation(line: 111, column: 35, scope: !17925)
!17928 = !DILocation(line: 0, scope: !17889)
!17929 = !DILocation(line: 109, column: 8, scope: !17888)
!17930 = !DILocation(line: 109, column: 15, scope: !17888)
!17931 = !DILocation(line: 114, column: 12, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17885, file: !2816, line: 114, column: 3)
!17933 = !DILocation(line: 0, scope: !17885)
!17934 = !DILocation(line: 114, column: 3, scope: !17932)
!17935 = !DILocation(line: 115, column: 24, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17937, file: !2816, line: 115, column: 8)
!17937 = distinct !DILexicalBlock(scope: !17938, file: !2816, line: 114, column: 45)
!17938 = distinct !DILexicalBlock(scope: !17932, file: !2816, line: 114, column: 3)
!17939 = !DILocation(line: 115, column: 11, scope: !17936)
!17940 = !DILocation(line: 115, column: 18, scope: !17936)
!17941 = !DILocation(line: 115, column: 8, scope: !17937)
!17942 = !DILocation(line: 116, column: 15, scope: !17943)
!17943 = distinct !DILexicalBlock(scope: !17936, file: !2816, line: 115, column: 32)
!17944 = !DILocation(line: 117, column: 26, scope: !17943)
!17945 = !DILocation(line: 117, column: 37, scope: !17943)
!17946 = !DILocation(line: 117, column: 5, scope: !17943)
!17947 = !DILocation(line: 123, column: 7, scope: !17885)
!17948 = !DILocation(line: 120, column: 15, scope: !17937)
!17949 = !DILocation(line: 114, column: 36, scope: !17938)
!17950 = distinct !{!17950, !17934, !17951}
!17951 = !DILocation(line: 121, column: 3, scope: !17932)
!17952 = !DILocation(line: 124, column: 41, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17954, file: !2816, line: 123, column: 18)
!17954 = distinct !DILexicalBlock(scope: !17885, file: !2816, line: 123, column: 7)
!17955 = !DILocation(line: 124, column: 4, scope: !17953)
!17956 = !DILocation(line: 125, column: 3, scope: !17953)
!17957 = !DILocation(line: 127, column: 13, scope: !17892)
!17958 = !DILocation(line: 127, column: 10, scope: !17892)
!17959 = !DILocation(line: 127, column: 7, scope: !17885)
!17960 = !DILocation(line: 137, column: 24, scope: !17891)
!17961 = !DILocation(line: 0, scope: !17891)
!17962 = !DILocation(line: 139, column: 18, scope: !17963)
!17963 = distinct !DILexicalBlock(scope: !17891, file: !2816, line: 139, column: 8)
!17964 = !DILocation(line: 139, column: 23, scope: !17963)
!17965 = !DILocation(line: 141, column: 5, scope: !17966)
!17966 = distinct !DILexicalBlock(scope: !17963, file: !2816, line: 140, column: 48)
!17967 = !DILocation(line: 142, column: 4, scope: !17966)
!17968 = !DILocalVariable(name: "key", arg: 2, scope: !17969, file: !638, line: 190, type: !17879)
!17969 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !17970, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !17972)
!17970 = !DISubroutineType(types: !17971)
!17971 = !{null, !17904, !17879}
!17972 = !{!17973, !17968}
!17973 = !DILocalVariable(name: "l", arg: 1, scope: !17969, file: !638, line: 189, type: !17904)
!17974 = !DILocation(line: 0, scope: !17969, inlinedAt: !17975)
!17975 = distinct !DILocation(line: 102, column: 2, scope: !17886)
!17976 = !DILocalVariable(name: "key", arg: 1, scope: !17977, file: !6978, line: 84, type: !32)
!17977 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6978, file: !6978, line: 84, type: !6989, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !17978)
!17978 = !{!17976}
!17979 = !DILocation(line: 0, scope: !17977, inlinedAt: !17980)
!17980 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !17975)
!17981 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !17980)
!17982 = !{i64 2601314}
!17983 = !DILocation(line: 148, column: 1, scope: !17866)
!17984 = distinct !DISubprogram(name: "elapsed", scope: !2816, file: !2816, line: 62, type: !17985, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !639)
!17985 = !DISubroutineType(types: !17986)
!17986 = !{!919}
!17987 = !DILocation(line: 64, column: 9, scope: !17984)
!17988 = !DILocation(line: 64, column: 28, scope: !17984)
!17989 = !DILocation(line: 64, column: 35, scope: !17984)
!17990 = !DILocation(line: 64, column: 2, scope: !17984)
!17991 = distinct !DISubprogram(name: "first", scope: !2816, file: !2816, line: 39, type: !17992, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !17994)
!17992 = !DISubroutineType(types: !17993)
!17993 = !{!2789}
!17994 = !{!17995}
!17995 = !DILocalVariable(name: "t", scope: !17991, file: !2816, line: 41, type: !17996)
!17996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!17997 = !DILocation(line: 41, column: 19, scope: !17991)
!17998 = !DILocation(line: 0, scope: !17991)
!17999 = !DILocation(line: 43, column: 9, scope: !17991)
!18000 = !DILocation(line: 43, column: 2, scope: !17991)
!18001 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !18002, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18004)
!18002 = !DISubroutineType(types: !18003)
!18003 = !{null, !17996, !17996}
!18004 = !{!18005, !18006, !18007}
!18005 = !DILocalVariable(name: "successor", arg: 1, scope: !18001, file: !541, line: 443, type: !17996)
!18006 = !DILocalVariable(name: "node", arg: 2, scope: !18001, file: !541, line: 443, type: !17996)
!18007 = !DILocalVariable(name: "prev", scope: !18001, file: !541, line: 445, type: !18008)
!18008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17996)
!18009 = !DILocation(line: 0, scope: !18001)
!18010 = !DILocation(line: 445, column: 39, scope: !18001)
!18011 = !DILocation(line: 447, column: 8, scope: !18001)
!18012 = !DILocation(line: 447, column: 13, scope: !18001)
!18013 = !DILocation(line: 448, column: 8, scope: !18001)
!18014 = !DILocation(line: 448, column: 13, scope: !18001)
!18015 = !DILocation(line: 449, column: 8, scope: !18001)
!18016 = !DILocation(line: 449, column: 13, scope: !18001)
!18017 = !DILocation(line: 450, column: 18, scope: !18001)
!18018 = !DILocation(line: 451, column: 1, scope: !18001)
!18019 = distinct !DISubprogram(name: "next", scope: !2816, file: !2816, line: 46, type: !18020, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18022)
!18020 = !DISubroutineType(types: !18021)
!18021 = !{!2789, !2789}
!18022 = !{!18023, !18024}
!18023 = !DILocalVariable(name: "t", arg: 1, scope: !18019, file: !2816, line: 46, type: !2789)
!18024 = !DILocalVariable(name: "n", scope: !18019, file: !2816, line: 48, type: !17996)
!18025 = !DILocation(line: 0, scope: !18019)
!18026 = !DILocation(line: 48, column: 58, scope: !18019)
!18027 = !DILocation(line: 48, column: 19, scope: !18019)
!18028 = !DILocation(line: 50, column: 9, scope: !18019)
!18029 = !DILocation(line: 50, column: 2, scope: !18019)
!18030 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !18031, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18034)
!18031 = !DISubroutineType(types: !18032)
!18032 = !{null, !18033, !17996}
!18033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 32)
!18034 = !{!18035, !18036, !18037}
!18035 = !DILocalVariable(name: "list", arg: 1, scope: !18030, file: !541, line: 404, type: !18033)
!18036 = !DILocalVariable(name: "node", arg: 2, scope: !18030, file: !541, line: 404, type: !17996)
!18037 = !DILocalVariable(name: "tail", scope: !18030, file: !541, line: 406, type: !18008)
!18038 = !DILocation(line: 0, scope: !18030)
!18039 = !DILocation(line: 406, column: 34, scope: !18030)
!18040 = !DILocation(line: 408, column: 8, scope: !18030)
!18041 = !DILocation(line: 408, column: 13, scope: !18030)
!18042 = !DILocation(line: 409, column: 8, scope: !18030)
!18043 = !DILocation(line: 409, column: 13, scope: !18030)
!18044 = !DILocation(line: 411, column: 8, scope: !18030)
!18045 = !DILocation(line: 411, column: 13, scope: !18030)
!18046 = !DILocation(line: 412, column: 13, scope: !18030)
!18047 = !DILocation(line: 413, column: 1, scope: !18030)
!18048 = distinct !DISubprogram(name: "next_timeout", scope: !2816, file: !2816, line: 67, type: !17985, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18049)
!18049 = !{!18050, !18051, !18052}
!18050 = !DILocalVariable(name: "to", scope: !18048, file: !2816, line: 69, type: !2789)
!18051 = !DILocalVariable(name: "ticks_elapsed", scope: !18048, file: !2816, line: 70, type: !919)
!18052 = !DILocalVariable(name: "ret", scope: !18048, file: !2816, line: 71, type: !919)
!18053 = !DILocation(line: 69, column: 24, scope: !18048)
!18054 = !DILocation(line: 0, scope: !18048)
!18055 = !DILocation(line: 70, column: 26, scope: !18048)
!18056 = !DILocation(line: 73, column: 10, scope: !18057)
!18057 = distinct !DILexicalBlock(scope: !18048, file: !2816, line: 73, column: 6)
!18058 = !DILocation(line: 73, column: 19, scope: !18057)
!18059 = !DILocation(line: 74, column: 21, scope: !18057)
!18060 = !DILocation(line: 74, column: 30, scope: !18057)
!18061 = !DILocation(line: 74, column: 28, scope: !18057)
!18062 = !DILocation(line: 74, column: 45, scope: !18057)
!18063 = !DILocation(line: 73, column: 6, scope: !18048)
!18064 = !DILocation(line: 77, column: 9, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18057, file: !2816, line: 76, column: 9)
!18066 = !DILocation(line: 0, scope: !18057)
!18067 = !DILocation(line: 81, column: 20, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18048, file: !2816, line: 81, column: 6)
!18069 = !DILocation(line: 81, column: 6, scope: !18068)
!18070 = !DILocation(line: 81, column: 32, scope: !18068)
!18071 = !DILocation(line: 85, column: 2, scope: !18048)
!18072 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !18073, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18075)
!18073 = !DISubroutineType(types: !18074)
!18074 = !{!17996, !18033, !17996}
!18075 = !{!18076, !18077}
!18076 = !DILocalVariable(name: "list", arg: 1, scope: !18072, file: !541, line: 341, type: !18033)
!18077 = !DILocalVariable(name: "node", arg: 2, scope: !18072, file: !541, line: 342, type: !17996)
!18078 = !DILocation(line: 0, scope: !18072)
!18079 = !DILocation(line: 344, column: 15, scope: !18072)
!18080 = !DILocation(line: 344, column: 9, scope: !18072)
!18081 = !DILocation(line: 344, column: 26, scope: !18072)
!18082 = !DILocation(line: 344, column: 2, scope: !18072)
!18083 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !18073, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18084)
!18084 = !{!18085, !18086}
!18085 = !DILocalVariable(name: "list", arg: 1, scope: !18083, file: !541, line: 325, type: !18033)
!18086 = !DILocalVariable(name: "node", arg: 2, scope: !18083, file: !541, line: 326, type: !17996)
!18087 = !DILocation(line: 0, scope: !18083)
!18088 = !DILocation(line: 328, column: 24, scope: !18083)
!18089 = !DILocation(line: 328, column: 15, scope: !18083)
!18090 = !DILocation(line: 328, column: 9, scope: !18083)
!18091 = !DILocation(line: 328, column: 45, scope: !18083)
!18092 = !DILocation(line: 328, column: 2, scope: !18083)
!18093 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !18094, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18096)
!18094 = !DISubroutineType(types: !18095)
!18095 = !{!17996, !18033}
!18096 = !{!18097}
!18097 = !DILocalVariable(name: "list", arg: 1, scope: !18093, file: !541, line: 294, type: !18033)
!18098 = !DILocation(line: 0, scope: !18093)
!18099 = !DILocation(line: 296, column: 9, scope: !18093)
!18100 = !DILocation(line: 296, column: 2, scope: !18093)
!18101 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !18102, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18104)
!18102 = !DISubroutineType(types: !18103)
!18103 = !{!153, !18033}
!18104 = !{!18105}
!18105 = !DILocalVariable(name: "list", arg: 1, scope: !18101, file: !541, line: 266, type: !18033)
!18106 = !DILocation(line: 0, scope: !18101)
!18107 = !DILocation(line: 268, column: 15, scope: !18101)
!18108 = !DILocation(line: 268, column: 20, scope: !18101)
!18109 = !DILocation(line: 268, column: 2, scope: !18101)
!18110 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2816, file: !2816, line: 150, type: !18111, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18113)
!18111 = !DISubroutineType(types: !18112)
!18112 = !{!125, !2789}
!18113 = !{!18114, !18115, !18116, !18118}
!18114 = !DILocalVariable(name: "to", arg: 1, scope: !18110, file: !2816, line: 150, type: !2789)
!18115 = !DILocalVariable(name: "ret", scope: !18110, file: !2816, line: 152, type: !125)
!18116 = !DILocalVariable(name: "__i", scope: !18117, file: !2816, line: 154, type: !17879)
!18117 = distinct !DILexicalBlock(scope: !18110, file: !2816, line: 154, column: 2)
!18118 = !DILocalVariable(name: "__key", scope: !18117, file: !2816, line: 154, type: !17879)
!18119 = !DILocation(line: 0, scope: !18110)
!18120 = !DILocation(line: 0, scope: !18117)
!18121 = !DILocation(line: 0, scope: !17901, inlinedAt: !18122)
!18122 = distinct !DILocation(line: 154, column: 2, scope: !18117)
!18123 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18124)
!18124 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18122)
!18125 = !DILocation(line: 0, scope: !17910, inlinedAt: !18124)
!18126 = !DILocation(line: 155, column: 7, scope: !18127)
!18127 = distinct !DILexicalBlock(scope: !18128, file: !2816, line: 155, column: 7)
!18128 = distinct !DILexicalBlock(scope: !18129, file: !2816, line: 154, column: 24)
!18129 = distinct !DILexicalBlock(scope: !18117, file: !2816, line: 154, column: 2)
!18130 = !DILocation(line: 155, column: 7, scope: !18128)
!18131 = !DILocation(line: 156, column: 4, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18127, file: !2816, line: 155, column: 39)
!18133 = !DILocation(line: 158, column: 3, scope: !18132)
!18134 = !DILocation(line: 0, scope: !17969, inlinedAt: !18135)
!18135 = distinct !DILocation(line: 154, column: 2, scope: !18129)
!18136 = !DILocation(line: 0, scope: !17977, inlinedAt: !18137)
!18137 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18135)
!18138 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18137)
!18139 = !DILocation(line: 161, column: 2, scope: !18110)
!18140 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !18141, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18145)
!18141 = !DISubroutineType(types: !18142)
!18142 = !{!153, !18143}
!18143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18144, size: 32)
!18144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2793)
!18145 = !{!18146}
!18146 = !DILocalVariable(name: "node", arg: 1, scope: !18140, file: !541, line: 225, type: !18143)
!18147 = !DILocation(line: 0, scope: !18140)
!18148 = !DILocation(line: 227, column: 15, scope: !18140)
!18149 = !DILocation(line: 227, column: 20, scope: !18140)
!18150 = !DILocation(line: 227, column: 2, scope: !18140)
!18151 = distinct !DISubprogram(name: "remove_timeout", scope: !2816, file: !2816, line: 53, type: !2810, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18152)
!18152 = !{!18153}
!18153 = !DILocalVariable(name: "t", arg: 1, scope: !18151, file: !2816, line: 53, type: !2789)
!18154 = !DILocation(line: 0, scope: !18151)
!18155 = !DILocation(line: 55, column: 6, scope: !18156)
!18156 = distinct !DILexicalBlock(scope: !18151, file: !2816, line: 55, column: 6)
!18157 = !DILocation(line: 55, column: 14, scope: !18156)
!18158 = !DILocation(line: 55, column: 6, scope: !18151)
!18159 = !DILocation(line: 56, column: 25, scope: !18160)
!18160 = distinct !DILexicalBlock(scope: !18156, file: !2816, line: 55, column: 23)
!18161 = !DILocation(line: 56, column: 12, scope: !18160)
!18162 = !DILocation(line: 56, column: 19, scope: !18160)
!18163 = !DILocation(line: 57, column: 2, scope: !18160)
!18164 = !DILocation(line: 59, column: 23, scope: !18151)
!18165 = !DILocation(line: 59, column: 2, scope: !18151)
!18166 = !DILocation(line: 60, column: 1, scope: !18151)
!18167 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !18168, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18170)
!18168 = !DISubroutineType(types: !18169)
!18169 = !{null, !17996}
!18170 = !{!18171, !18172, !18173}
!18171 = !DILocalVariable(name: "node", arg: 1, scope: !18167, file: !541, line: 496, type: !17996)
!18172 = !DILocalVariable(name: "prev", scope: !18167, file: !541, line: 498, type: !18008)
!18173 = !DILocalVariable(name: "next", scope: !18167, file: !541, line: 499, type: !18008)
!18174 = !DILocation(line: 0, scope: !18167)
!18175 = !DILocation(line: 498, column: 34, scope: !18167)
!18176 = !DILocation(line: 499, column: 34, scope: !18167)
!18177 = !DILocation(line: 501, column: 8, scope: !18167)
!18178 = !DILocation(line: 501, column: 13, scope: !18167)
!18179 = !DILocation(line: 502, column: 8, scope: !18167)
!18180 = !DILocation(line: 502, column: 13, scope: !18167)
!18181 = !DILocation(line: 503, column: 2, scope: !18167)
!18182 = !DILocation(line: 504, column: 1, scope: !18167)
!18183 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !18168, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18184)
!18184 = !{!18185}
!18185 = !DILocalVariable(name: "node", arg: 1, scope: !18183, file: !541, line: 211, type: !17996)
!18186 = !DILocation(line: 0, scope: !18183)
!18187 = !DILocation(line: 213, column: 8, scope: !18183)
!18188 = !DILocation(line: 213, column: 13, scope: !18183)
!18189 = !DILocation(line: 214, column: 8, scope: !18183)
!18190 = !DILocation(line: 214, column: 13, scope: !18183)
!18191 = !DILocation(line: 215, column: 1, scope: !18183)
!18192 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2816, file: !2816, line: 183, type: !18193, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18197)
!18193 = !DISubroutineType(types: !18194)
!18194 = !{!2026, !18195}
!18195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18196, size: 32)
!18196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2790)
!18197 = !{!18198, !18199, !18200, !18202}
!18198 = !DILocalVariable(name: "timeout", arg: 1, scope: !18192, file: !2816, line: 183, type: !18195)
!18199 = !DILocalVariable(name: "ticks", scope: !18192, file: !2816, line: 185, type: !2026)
!18200 = !DILocalVariable(name: "__i", scope: !18201, file: !2816, line: 187, type: !17879)
!18201 = distinct !DILexicalBlock(scope: !18192, file: !2816, line: 187, column: 2)
!18202 = !DILocalVariable(name: "__key", scope: !18201, file: !2816, line: 187, type: !17879)
!18203 = !DILocation(line: 0, scope: !18192)
!18204 = !DILocation(line: 0, scope: !18201)
!18205 = !DILocation(line: 0, scope: !17901, inlinedAt: !18206)
!18206 = distinct !DILocation(line: 187, column: 2, scope: !18201)
!18207 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18208)
!18208 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18206)
!18209 = !DILocation(line: 0, scope: !17910, inlinedAt: !18208)
!18210 = !DILocation(line: 188, column: 11, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18212, file: !2816, line: 187, column: 24)
!18212 = distinct !DILexicalBlock(scope: !18201, file: !2816, line: 187, column: 2)
!18213 = !DILocation(line: 0, scope: !17969, inlinedAt: !18214)
!18214 = distinct !DILocation(line: 187, column: 2, scope: !18212)
!18215 = !DILocation(line: 0, scope: !17977, inlinedAt: !18216)
!18216 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18214)
!18217 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18216)
!18218 = !DILocation(line: 191, column: 2, scope: !18192)
!18219 = distinct !DISubprogram(name: "timeout_rem", scope: !2816, file: !2816, line: 165, type: !18193, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18220)
!18220 = !{!18221, !18222, !18223}
!18221 = !DILocalVariable(name: "timeout", arg: 1, scope: !18219, file: !2816, line: 165, type: !18195)
!18222 = !DILocalVariable(name: "ticks", scope: !18219, file: !2816, line: 167, type: !2026)
!18223 = !DILocalVariable(name: "t", scope: !18224, file: !2816, line: 173, type: !2789)
!18224 = distinct !DILexicalBlock(scope: !18219, file: !2816, line: 173, column: 2)
!18225 = !DILocation(line: 0, scope: !18219)
!18226 = !DILocation(line: 169, column: 6, scope: !18227)
!18227 = distinct !DILexicalBlock(scope: !18219, file: !2816, line: 169, column: 6)
!18228 = !DILocation(line: 169, column: 6, scope: !18219)
!18229 = !DILocation(line: 173, column: 28, scope: !18224)
!18230 = !DILocation(line: 0, scope: !18224)
!18231 = !DILocation(line: 173, column: 39, scope: !18232)
!18232 = distinct !DILexicalBlock(scope: !18224, file: !2816, line: 173, column: 2)
!18233 = !DILocation(line: 173, column: 2, scope: !18224)
!18234 = !DILocation(line: 174, column: 15, scope: !18235)
!18235 = distinct !DILexicalBlock(scope: !18232, file: !2816, line: 173, column: 61)
!18236 = !DILocation(line: 174, column: 9, scope: !18235)
!18237 = !DILocation(line: 175, column: 15, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18235, file: !2816, line: 175, column: 7)
!18239 = !DILocation(line: 175, column: 7, scope: !18235)
!18240 = !DILocation(line: 173, column: 52, scope: !18232)
!18241 = distinct !{!18241, !18233, !18242}
!18242 = !DILocation(line: 178, column: 2, scope: !18224)
!18243 = !DILocation(line: 180, column: 17, scope: !18219)
!18244 = !DILocation(line: 180, column: 15, scope: !18219)
!18245 = !DILocation(line: 180, column: 2, scope: !18219)
!18246 = !DILocation(line: 181, column: 1, scope: !18219)
!18247 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15556, file: !15556, line: 35, type: !18248, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18250)
!18248 = !DISubroutineType(types: !18249)
!18249 = !{!153, !18195}
!18250 = !{!18251}
!18251 = !DILocalVariable(name: "to", arg: 1, scope: !18247, file: !15556, line: 35, type: !18195)
!18252 = !DILocation(line: 0, scope: !18247)
!18253 = !DILocation(line: 37, column: 35, scope: !18247)
!18254 = !DILocation(line: 37, column: 10, scope: !18247)
!18255 = !DILocation(line: 37, column: 9, scope: !18247)
!18256 = !DILocation(line: 37, column: 2, scope: !18247)
!18257 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2816, file: !2816, line: 194, type: !18193, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18258)
!18258 = !{!18259, !18260, !18261, !18263}
!18259 = !DILocalVariable(name: "timeout", arg: 1, scope: !18257, file: !2816, line: 194, type: !18195)
!18260 = !DILocalVariable(name: "ticks", scope: !18257, file: !2816, line: 196, type: !2026)
!18261 = !DILocalVariable(name: "__i", scope: !18262, file: !2816, line: 198, type: !17879)
!18262 = distinct !DILexicalBlock(scope: !18257, file: !2816, line: 198, column: 2)
!18263 = !DILocalVariable(name: "__key", scope: !18262, file: !2816, line: 198, type: !17879)
!18264 = !DILocation(line: 0, scope: !18257)
!18265 = !DILocation(line: 0, scope: !18262)
!18266 = !DILocation(line: 0, scope: !17901, inlinedAt: !18267)
!18267 = distinct !DILocation(line: 198, column: 2, scope: !18262)
!18268 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18269)
!18269 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18267)
!18270 = !DILocation(line: 0, scope: !17910, inlinedAt: !18269)
!18271 = !DILocation(line: 199, column: 11, scope: !18272)
!18272 = distinct !DILexicalBlock(scope: !18273, file: !2816, line: 198, column: 24)
!18273 = distinct !DILexicalBlock(scope: !18262, file: !2816, line: 198, column: 2)
!18274 = !DILocation(line: 199, column: 23, scope: !18272)
!18275 = !DILocation(line: 0, scope: !17969, inlinedAt: !18276)
!18276 = distinct !DILocation(line: 198, column: 2, scope: !18273)
!18277 = !DILocation(line: 0, scope: !17977, inlinedAt: !18278)
!18278 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18276)
!18279 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18278)
!18280 = !DILocation(line: 199, column: 21, scope: !18272)
!18281 = !DILocation(line: 202, column: 2, scope: !18257)
!18282 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2816, file: !2816, line: 205, type: !17985, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18283)
!18283 = !{!18284, !18285, !18287}
!18284 = !DILocalVariable(name: "ret", scope: !18282, file: !2816, line: 207, type: !919)
!18285 = !DILocalVariable(name: "__i", scope: !18286, file: !2816, line: 209, type: !17879)
!18286 = distinct !DILexicalBlock(scope: !18282, file: !2816, line: 209, column: 2)
!18287 = !DILocalVariable(name: "__key", scope: !18286, file: !2816, line: 209, type: !17879)
!18288 = !DILocation(line: 0, scope: !18282)
!18289 = !DILocation(line: 0, scope: !18286)
!18290 = !DILocation(line: 0, scope: !17901, inlinedAt: !18291)
!18291 = distinct !DILocation(line: 209, column: 2, scope: !18286)
!18292 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18293)
!18293 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18291)
!18294 = !DILocation(line: 0, scope: !17910, inlinedAt: !18293)
!18295 = !DILocation(line: 210, column: 9, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18297, file: !2816, line: 209, column: 24)
!18297 = distinct !DILexicalBlock(scope: !18286, file: !2816, line: 209, column: 2)
!18298 = !DILocation(line: 0, scope: !17969, inlinedAt: !18299)
!18299 = distinct !DILocation(line: 209, column: 2, scope: !18297)
!18300 = !DILocation(line: 0, scope: !17977, inlinedAt: !18301)
!18301 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18299)
!18302 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18301)
!18303 = !DILocation(line: 212, column: 2, scope: !18282)
!18304 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2816, file: !2816, line: 215, type: !13089, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18305)
!18305 = !{!18306, !18307, !18308, !18310, !18311, !18314, !18315}
!18306 = !DILocalVariable(name: "ticks", arg: 1, scope: !18304, file: !2816, line: 215, type: !919)
!18307 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18304, file: !2816, line: 215, type: !153)
!18308 = !DILocalVariable(name: "__i", scope: !18309, file: !2816, line: 217, type: !17879)
!18309 = distinct !DILexicalBlock(scope: !18304, file: !2816, line: 217, column: 2)
!18310 = !DILocalVariable(name: "__key", scope: !18309, file: !2816, line: 217, type: !17879)
!18311 = !DILocalVariable(name: "next_to", scope: !18312, file: !2816, line: 218, type: !125)
!18312 = distinct !DILexicalBlock(scope: !18313, file: !2816, line: 217, column: 24)
!18313 = distinct !DILexicalBlock(scope: !18309, file: !2816, line: 217, column: 2)
!18314 = !DILocalVariable(name: "sooner", scope: !18312, file: !2816, line: 219, type: !153)
!18315 = !DILocalVariable(name: "imminent", scope: !18312, file: !2816, line: 221, type: !153)
!18316 = !DILocation(line: 0, scope: !18304)
!18317 = !DILocation(line: 0, scope: !18309)
!18318 = !DILocation(line: 0, scope: !17901, inlinedAt: !18319)
!18319 = distinct !DILocation(line: 217, column: 2, scope: !18309)
!18320 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18321)
!18321 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18319)
!18322 = !DILocation(line: 0, scope: !17910, inlinedAt: !18321)
!18323 = !DILocation(line: 218, column: 17, scope: !18312)
!18324 = !DILocation(line: 0, scope: !18312)
!18325 = !DILocation(line: 221, column: 27, scope: !18312)
!18326 = !DILocation(line: 233, column: 17, scope: !18327)
!18327 = distinct !DILexicalBlock(scope: !18312, file: !2816, line: 233, column: 7)
!18328 = !DILocation(line: 234, column: 26, scope: !18329)
!18329 = distinct !DILexicalBlock(scope: !18327, file: !2816, line: 233, column: 56)
!18330 = !DILocation(line: 234, column: 4, scope: !18329)
!18331 = !DILocation(line: 235, column: 3, scope: !18329)
!18332 = !DILocation(line: 0, scope: !17969, inlinedAt: !18333)
!18333 = distinct !DILocation(line: 217, column: 2, scope: !18313)
!18334 = !DILocation(line: 0, scope: !17977, inlinedAt: !18335)
!18335 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18333)
!18336 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18335)
!18337 = !DILocation(line: 237, column: 1, scope: !18304)
!18338 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2816, file: !2816, line: 239, type: !18339, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18341)
!18339 = !DISubroutineType(types: !18340)
!18340 = !{null, !919}
!18341 = !{!18342, !18343, !18344, !18346}
!18342 = !DILocalVariable(name: "ticks", arg: 1, scope: !18338, file: !2816, line: 239, type: !919)
!18343 = !DILocalVariable(name: "key", scope: !18338, file: !2816, line: 245, type: !17879)
!18344 = !DILocalVariable(name: "t", scope: !18345, file: !2816, line: 262, type: !2789)
!18345 = distinct !DILexicalBlock(scope: !18338, file: !2816, line: 261, column: 67)
!18346 = !DILocalVariable(name: "dt", scope: !18345, file: !2816, line: 263, type: !125)
!18347 = !DILocation(line: 0, scope: !18338)
!18348 = !DILocation(line: 242, column: 2, scope: !18338)
!18349 = !DILocation(line: 0, scope: !17901, inlinedAt: !18350)
!18350 = distinct !DILocation(line: 245, column: 25, scope: !18338)
!18351 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18352)
!18352 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18350)
!18353 = !DILocation(line: 0, scope: !17910, inlinedAt: !18352)
!18354 = !DILocation(line: 261, column: 9, scope: !18338)
!18355 = !DILocation(line: 261, column: 17, scope: !18338)
!18356 = !DILocation(line: 261, column: 25, scope: !18338)
!18357 = !DILocation(line: 261, column: 37, scope: !18338)
!18358 = !DILocation(line: 261, column: 47, scope: !18338)
!18359 = !DILocation(line: 261, column: 44, scope: !18338)
!18360 = !DILocation(line: 261, column: 2, scope: !18338)
!18361 = !DILocation(line: 0, scope: !18345)
!18362 = !DILocation(line: 263, column: 12, scope: !18345)
!18363 = !DILocation(line: 265, column: 16, scope: !18345)
!18364 = !DILocation(line: 265, column: 13, scope: !18345)
!18365 = !DILocation(line: 266, column: 13, scope: !18345)
!18366 = !DILocation(line: 267, column: 3, scope: !18345)
!18367 = !DILocation(line: 0, scope: !17969, inlinedAt: !18368)
!18368 = distinct !DILocation(line: 269, column: 3, scope: !18345)
!18369 = !DILocation(line: 0, scope: !17977, inlinedAt: !18370)
!18370 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18368)
!18371 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18370)
!18372 = !DILocation(line: 270, column: 6, scope: !18345)
!18373 = !DILocation(line: 270, column: 3, scope: !18345)
!18374 = !DILocation(line: 0, scope: !17901, inlinedAt: !18375)
!18375 = distinct !DILocation(line: 271, column: 9, scope: !18345)
!18376 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18377)
!18377 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18375)
!18378 = !DILocation(line: 0, scope: !17910, inlinedAt: !18377)
!18379 = !DILocation(line: 272, column: 22, scope: !18345)
!18380 = distinct !{!18380, !18360, !18381}
!18381 = !DILocation(line: 273, column: 2, scope: !18338)
!18382 = !DILocation(line: 276, column: 19, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18384, file: !2816, line: 275, column: 23)
!18384 = distinct !DILexicalBlock(scope: !18338, file: !2816, line: 275, column: 6)
!18385 = !DILocation(line: 277, column: 2, scope: !18383)
!18386 = !DILocation(line: 279, column: 15, scope: !18338)
!18387 = !DILocation(line: 279, column: 12, scope: !18338)
!18388 = !DILocation(line: 280, column: 21, scope: !18338)
!18389 = !DILocation(line: 282, column: 24, scope: !18338)
!18390 = !DILocation(line: 282, column: 2, scope: !18338)
!18391 = !DILocation(line: 0, scope: !17969, inlinedAt: !18392)
!18392 = distinct !DILocation(line: 284, column: 2, scope: !18338)
!18393 = !DILocation(line: 0, scope: !17977, inlinedAt: !18394)
!18394 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18392)
!18395 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18394)
!18396 = !DILocation(line: 285, column: 1, scope: !18338)
!18397 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2816, file: !2816, line: 287, type: !18398, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18400)
!18398 = !DISubroutineType(types: !18399)
!18399 = !{!598}
!18400 = !{!18401, !18402, !18404}
!18401 = !DILocalVariable(name: "t", scope: !18397, file: !2816, line: 289, type: !1853)
!18402 = !DILocalVariable(name: "__i", scope: !18403, file: !2816, line: 291, type: !17879)
!18403 = distinct !DILexicalBlock(scope: !18397, file: !2816, line: 291, column: 2)
!18404 = !DILocalVariable(name: "__key", scope: !18403, file: !2816, line: 291, type: !17879)
!18405 = !DILocation(line: 0, scope: !18397)
!18406 = !DILocation(line: 0, scope: !18403)
!18407 = !DILocation(line: 0, scope: !17901, inlinedAt: !18408)
!18408 = distinct !DILocation(line: 291, column: 2, scope: !18403)
!18409 = !DILocation(line: 55, column: 2, scope: !17910, inlinedAt: !18410)
!18410 = distinct !DILocation(line: 145, column: 10, scope: !17901, inlinedAt: !18408)
!18411 = !DILocation(line: 0, scope: !17910, inlinedAt: !18410)
!18412 = !DILocation(line: 292, column: 7, scope: !18413)
!18413 = distinct !DILexicalBlock(scope: !18414, file: !2816, line: 291, column: 24)
!18414 = distinct !DILexicalBlock(scope: !18403, file: !2816, line: 291, column: 2)
!18415 = !DILocation(line: 292, column: 19, scope: !18413)
!18416 = !DILocation(line: 0, scope: !17969, inlinedAt: !18417)
!18417 = distinct !DILocation(line: 291, column: 2, scope: !18414)
!18418 = !DILocation(line: 0, scope: !17977, inlinedAt: !18419)
!18419 = distinct !DILocation(line: 215, column: 2, scope: !17969, inlinedAt: !18417)
!18420 = !DILocation(line: 95, column: 2, scope: !17977, inlinedAt: !18419)
!18421 = !DILocation(line: 292, column: 17, scope: !18413)
!18422 = !DILocation(line: 294, column: 2, scope: !18397)
!18423 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2816, file: !2816, line: 297, type: !8526, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !639)
!18424 = !DILocation(line: 300, column: 19, scope: !18423)
!18425 = !DILocation(line: 300, column: 9, scope: !18423)
!18426 = !DILocation(line: 300, column: 2, scope: !18423)
!18427 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2816, file: !2816, line: 306, type: !18398, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !639)
!18428 = !DILocation(line: 308, column: 9, scope: !18427)
!18429 = !DILocation(line: 308, column: 2, scope: !18427)
!18430 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2816, file: !2816, line: 319, type: !8536, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18431)
!18431 = !{!18432, !18433, !18434, !18435}
!18432 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18430, file: !2816, line: 319, type: !208)
!18433 = !DILocalVariable(name: "start_cycles", scope: !18430, file: !2816, line: 328, type: !208)
!18434 = !DILocalVariable(name: "cycles_to_wait", scope: !18430, file: !2816, line: 331, type: !208)
!18435 = !DILocalVariable(name: "current_cycles", scope: !18436, file: !2816, line: 338, type: !208)
!18436 = distinct !DILexicalBlock(scope: !18437, file: !2816, line: 337, column: 11)
!18437 = distinct !DILexicalBlock(scope: !18438, file: !2816, line: 337, column: 2)
!18438 = distinct !DILexicalBlock(scope: !18430, file: !2816, line: 337, column: 2)
!18439 = !DILocation(line: 0, scope: !18430)
!18440 = !DILocation(line: 322, column: 19, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18430, file: !2816, line: 322, column: 6)
!18442 = !DILocation(line: 322, column: 6, scope: !18430)
!18443 = !DILocation(line: 328, column: 26, scope: !18430)
!18444 = !DILocation(line: 333, column: 43, scope: !18430)
!18445 = !DILocation(line: 337, column: 2, scope: !18430)
!18446 = !DILocation(line: 338, column: 29, scope: !18436)
!18447 = !DILocation(line: 0, scope: !18436)
!18448 = !DILocation(line: 341, column: 23, scope: !18449)
!18449 = distinct !DILexicalBlock(scope: !18436, file: !2816, line: 341, column: 7)
!18450 = !DILocation(line: 341, column: 39, scope: !18449)
!18451 = !DILocation(line: 349, column: 1, scope: !18430)
!18452 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !624, file: !624, line: 1675, type: !8526, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !639)
!18453 = !DILocation(line: 1677, column: 9, scope: !18452)
!18454 = !DILocation(line: 1677, column: 2, scope: !18452)
!18455 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18456, file: !18456, line: 24, type: !8526, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !639)
!18456 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18457 = !DILocation(line: 26, column: 9, scope: !18455)
!18458 = !DILocation(line: 26, column: 2, scope: !18455)
!18459 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2816, file: !2816, line: 364, type: !18460, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !18462)
!18460 = !DISubroutineType(types: !18461)
!18461 = !{!1853, !17869}
!18462 = !{!18463, !18464}
!18463 = !DILocalVariable(name: "timeout", arg: 1, scope: !18459, file: !2816, line: 364, type: !17869)
!18464 = !DILocalVariable(name: "dt", scope: !18459, file: !2816, line: 366, type: !2026)
!18465 = !DILocation(line: 0, scope: !18459)
!18466 = !DILocation(line: 368, column: 6, scope: !18459)
!18467 = !DILocation(line: 371, column: 10, scope: !18468)
!18468 = distinct !DILexicalBlock(scope: !18469, file: !2816, line: 370, column: 47)
!18469 = distinct !DILexicalBlock(scope: !18470, file: !2816, line: 370, column: 13)
!18470 = distinct !DILexicalBlock(scope: !18459, file: !2816, line: 368, column: 6)
!18471 = !DILocation(line: 371, column: 3, scope: !18468)
!18472 = !DILocation(line: 376, column: 58, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18474, file: !2816, line: 376, column: 7)
!18474 = distinct !DILexicalBlock(scope: !18469, file: !2816, line: 372, column: 9)
!18475 = !DILocation(line: 376, column: 7, scope: !18474)
!18476 = !DILocation(line: 376, column: 43, scope: !18473)
!18477 = !DILocation(line: 377, column: 4, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18473, file: !2816, line: 376, column: 64)
!18479 = !DILocation(line: 379, column: 10, scope: !18474)
!18480 = !DILocation(line: 379, column: 33, scope: !18474)
!18481 = !DILocation(line: 379, column: 31, scope: !18474)
!18482 = !DILocation(line: 379, column: 3, scope: !18474)
!18483 = !DILocation(line: 0, scope: !18470)
!18484 = !DILocation(line: 381, column: 1, scope: !18459)
!18485 = distinct !DISubprogram(name: "boot_banner", scope: !18486, file: !18486, line: 26, type: !3440, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3426, retainedNodes: !639)
!18486 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18487 = !DILocation(line: 34, column: 2, scope: !18485)
!18488 = !DILocation(line: 36, column: 1, scope: !18485)
