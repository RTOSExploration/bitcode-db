; ModuleID = 'build/96b_aerocore2/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [91 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [91 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229723 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229703 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229693 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229793 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229783 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229773 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229763 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229753 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229743 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229733 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231624 to i8*), void (i8*)* inttoptr (i32 134229713 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [51 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_100 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_101 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_102 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_103 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_104 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_105 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_106 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_97 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_98 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_99 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_100 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_101 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_102 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_103 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_104 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_105 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_106 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_97 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_98 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_99 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_49 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_60 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !220
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !249
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !255
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !395
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !431
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571624 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !441
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !446
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !466
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !670
@.str.53 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !631
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !614
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !587
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !603
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !633
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !647
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !649
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !651
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !653
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !655
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !657
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !659
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !661
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !663
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !665
@__devicehdl_dts_ord_8 = dso_local constant [19 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 32767], section ".__device_handles_pass2", align 2, !dbg !675
@.str.55 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !716
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !811
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !800
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 -134, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !852
@__devicehdl_dts_ord_97 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !701
@.str.64 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !918
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1225
@__devstate_dts_ord_97 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1183
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1169
@__init___device_dts_ord_97 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_97 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1096
@__devicehdl_dts_ord_98 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !699
@.str.1.65 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1227
@__devstate_dts_ord_98 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1187
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1185
@__init___device_dts_ord_98 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_98 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1110
@__devicehdl_dts_ord_99 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !697
@.str.2.66 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1240
@__devstate_dts_ord_99 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1191
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1189
@__init___device_dts_ord_99 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_99 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1116
@__devicehdl_dts_ord_100 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !695
@.str.3.67 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1242
@__devstate_dts_ord_100 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1195
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1193
@__init___device_dts_ord_100 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_100 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1122
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !693
@.str.4.68 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1244
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1199
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1197
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1131
@__devicehdl_dts_ord_101 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !691
@.str.5.69 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1246
@__devstate_dts_ord_101 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1203
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1201
@__init___device_dts_ord_101 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_101 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1137
@__devicehdl_dts_ord_102 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !689
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1248
@__devstate_dts_ord_102 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1207
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1205
@__init___device_dts_ord_102 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_102 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1143
@__devicehdl_dts_ord_103 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !687
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1250
@__devstate_dts_ord_103 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1211
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1209
@__init___device_dts_ord_103 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_103 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1149
@__devicehdl_dts_ord_104 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !685
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1252
@__devstate_dts_ord_104 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1215
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1213
@__init___device_dts_ord_104 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_104 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1155
@__devicehdl_dts_ord_105 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !683
@.str.9 = private unnamed_addr constant [14 x i8] c"gpio@40022400\00", align 1
@gpio_stm32_cfg_j = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073882112 to i32*), i32 9, %struct._thread_arch { i32 48, i32 512 } }, align 4, !dbg !1254
@__devstate_dts_ord_105 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1219
@gpio_stm32_data_j = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1217
@__init___device_dts_ord_105 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_105 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1161
@__devicehdl_dts_ord_106 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !681
@.str.10 = private unnamed_addr constant [14 x i8] c"gpio@40022800\00", align 1
@gpio_stm32_cfg_k = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073883136 to i32*), i32 10, %struct._thread_arch { i32 48, i32 1024 } }, align 4, !dbg !1256
@__devstate_dts_ord_106 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1223
@gpio_stm32_data_k = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1221
@__init___device_dts_ord_106 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_106 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1167
@__devicehdl_dts_ord_63 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !711
@.str.73 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_63 }, align 4, !dbg !1258
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1481
@__devstate_dts_ord_63 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1483
@__device_dts_ord_63 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_63, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_63, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1401
@__init___device_dts_ord_63 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_63 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1403
@__devicehdl_dts_ord_49 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !709
@.str.1.74 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_49 }, align 4, !dbg !1490
@__devstate_dts_ord_49 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1436
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1515
@__device_dts_ord_49 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.74, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_49, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_49, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1412
@__init___device_dts_ord_49 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_49 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1414
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !707
@.str.2.75 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1517
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1527
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1418
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1420
@__devicehdl_dts_ord_57 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !705
@.str.3.78 = private unnamed_addr constant [16 x i8] c"serial@40007800\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073772544 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_57 }, align 4, !dbg !1529
@__devstate_dts_ord_57 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1440
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1539
@__device_dts_ord_57 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.78, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_57, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1424
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1426
@__devicehdl_dts_ord_60 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !703
@.str.4.79 = private unnamed_addr constant [16 x i8] c"serial@40007c00\00", align 1
@uart_stm32_cfg_4 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073773568 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_4, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_60 }, align 4, !dbg !1541
@__devstate_dts_ord_60 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@uart_stm32_data_4 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1551
@__device_dts_ord_60 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.79, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_4 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_60, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_4 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_60, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1430
@__init___device_dts_ord_60 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_60 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1432
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1444
@__pinctrl_dev_config__device_dts_ord_63 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_63, i32 0, i32 0), i8 1 }, align 4, !dbg !1452
@__pinctrl_states__device_dts_ord_63 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_63, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1475
@__pinctrl_state_pins_0__device_dts_ord_63 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 711, i32 512 }, %struct._thread_arch { i32 743, i32 0 }], align 4, !dbg !1478
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !784
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1507
@__pinctrl_dev_config__device_dts_ord_49 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_49, i32 0, i32 0), i8 1 }, align 4, !dbg !1509
@__pinctrl_states__device_dts_ord_49 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_49, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1511
@__pinctrl_state_pins_0__device_dts_ord_49 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1513
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1519
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1521
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1523
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1525
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 1073741824 }], align 4, !dbg !1531
@__pinctrl_dev_config__device_dts_ord_57 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_57, i32 0, i32 0), i8 1 }, align 4, !dbg !1533
@__pinctrl_states__device_dts_ord_57 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_57, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1535
@__pinctrl_state_pins_0__device_dts_ord_57 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2312, i32 512 }, %struct._thread_arch { i32 2280, i32 0 }], align 4, !dbg !1537
@pclken_4 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 -2147483648 }], align 4, !dbg !1543
@__pinctrl_dev_config__device_dts_ord_60 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_60, i32 0, i32 0), i8 1 }, align 4, !dbg !1545
@__pinctrl_states__device_dts_ord_60 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_60, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1547
@__pinctrl_state_pins_0__device_dts_ord_60 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2088, i32 512 }, %struct._thread_arch { i32 2056, i32 0 }], align 4, !dbg !1549
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1553
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1664
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1666
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1662
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1633
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_97, %struct.device* @__device_dts_ord_98, %struct.device* @__device_dts_ord_99, %struct.device* @__device_dts_ord_100, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_101, %struct.device* @__device_dts_ord_102, %struct.device* @__device_dts_ord_103, %struct.device* @__device_dts_ord_104, %struct.device* @__device_dts_ord_105, %struct.device* @__device_dts_ord_106], align 4, !dbg !1668
@__device_dts_ord_97 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_97, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_97, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1094
@__device_dts_ord_98 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_98, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_98, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1108
@__device_dts_ord_99 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_99, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_99, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1114
@__device_dts_ord_100 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_100, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_100, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1120
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1129
@__device_dts_ord_101 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_101, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_101, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1135
@__device_dts_ord_102 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_102, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_102, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1141
@__device_dts_ord_103 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_103, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_103, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1147
@__device_dts_ord_104 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_104, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_104, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1153
@__device_dts_ord_105 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_j to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_105, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_j to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_105, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1159
@__device_dts_ord_106 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_k to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_106, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_k to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_106, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1165
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1758
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1800
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1803
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1810
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1817
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2027
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2036
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2043
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2048
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.129 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.136, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.137, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.138, i32 0, i32 0)], align 4, !dbg !2076
@.str.132 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.133 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.134 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.135 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.136 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.137 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.131 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.138 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2188
@.str.8.130 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2201
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2309
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2312
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2314
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2041
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2038
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2316
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2352
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1905
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2350
@.str.191 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2962 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3020, !srcloc !3023
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3036, !srcloc !3037
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3038, !srcloc !3039
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3040, !srcloc !3041
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3042, !srcloc !3043
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3044, !srcloc !3045
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3046, !srcloc !3047
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3048, !srcloc !3049
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3050, !srcloc !3051
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3052, !srcloc !3053
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3054, !srcloc !3055
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3056, !srcloc !3057
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3058, !srcloc !3059
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3060, !srcloc !3061
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3062, !srcloc !3063
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3066, !srcloc !3067
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3068, !srcloc !3069
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3070, !srcloc !3071
  ret void, !dbg !3072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3075 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3078
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !3079
  tail call void @print_sys_memory_stats() #26, !dbg !3080
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !3081
  call void @llvm.dbg.value(metadata i8* %1, metadata !3077, metadata !DIExpression()), !dbg !3082
  tail call void @print_sys_memory_stats() #26, !dbg !3083
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !3084
  call void @llvm.dbg.value(metadata i8* %2, metadata !3077, metadata !DIExpression()), !dbg !3082
  tail call void @print_sys_memory_stats() #26, !dbg !3085
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !3086
  tail call void @print_sys_memory_stats() #26, !dbg !3087
  ret void, !dbg !3088
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !3089 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !3098
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !3098
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !3091, metadata !DIExpression()), !dbg !3099
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !3100
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !3101
  %5 = load i32, i32* %4, align 4, !dbg !3101
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !3102
  %7 = load i32, i32* %6, align 4, !dbg !3102
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !3103
  %9 = load i32, i32* %8, align 4, !dbg !3103
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !3104
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !3105
  ret void, !dbg !3105
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3108, metadata !DIExpression()), !dbg !3109
  ret i32 0, !dbg !3110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3111 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3115, metadata !DIExpression()), !dbg !3116
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3117
  ret void, !dbg !3118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3119 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3122
  ret i8* %1, !dbg !3123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3124 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3136, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i8* %0, metadata !3135, metadata !DIExpression()), !dbg !3145
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3146
  ret void, !dbg !3148
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3153, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.value(metadata i8* %1, metadata !3154, metadata !DIExpression()), !dbg !3155
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3156
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3156
  ret i32 %4, !dbg !3157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3158 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3170, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3167, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i8* %1, metadata !3168, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata i8* %2, metadata !3169, metadata !DIExpression()), !dbg !3171
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3172
  ret void, !dbg !3173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3174 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3178, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i32 %1, metadata !3179, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i32 0, metadata !3180, metadata !DIExpression()), !dbg !3181
  %3 = icmp eq i32 %1, 0, !dbg !3182
  br i1 %3, label %13, label %4, !dbg !3185

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3180, metadata !DIExpression()), !dbg !3181
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3186
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3188
  %8 = load i8, i8* %7, align 1, !dbg !3188
  %9 = zext i8 %8 to i32, !dbg !3188
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3186
  %11 = add nuw i32 %5, 1, !dbg !3189
  call void @llvm.dbg.value(metadata i32 %11, metadata !3180, metadata !DIExpression()), !dbg !3181
  %12 = icmp eq i32 %11, %1, !dbg !3182
  br i1 %12, label %13, label %4, !dbg !3185, !llvm.loop !3190

13:                                               ; preds = %4, %2
  ret void, !dbg !3192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3193 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3197, metadata !DIExpression()), !dbg !3199
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3200
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3198, metadata !DIExpression()), !dbg !3201
  call void @llvm.va_start(i8* nonnull %3), !dbg !3202
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3203
  %5 = load i32, i32* %4, align 4, !dbg !3203
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3203
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3203
  call void @llvm.va_end(i8* nonnull %3), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3205
  ret void, !dbg !3205
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3206 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3210, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.value(metadata i32 %1, metadata !3211, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.value(metadata i8* %2, metadata !3212, metadata !DIExpression()), !dbg !3215
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3216
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3213, metadata !DIExpression()), !dbg !3217
  call void @llvm.va_start(i8* nonnull %5), !dbg !3218
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3219
  %7 = load i32, i32* %6, align 4, !dbg !3219
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3219
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3219
  call void @llvm.dbg.value(metadata i32 %9, metadata !3214, metadata !DIExpression()), !dbg !3215
  call void @llvm.va_end(i8* nonnull %5), !dbg !3220
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3221
  ret i32 %9, !dbg !3222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3223 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3230, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i8* %0, metadata !3227, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i32 %1, metadata !3228, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i8* %2, metadata !3229, metadata !DIExpression()), !dbg !3237
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3238
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3238
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3231, metadata !DIExpression()), !dbg !3239
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3240
  store i8* %0, i8** %7, align 4, !dbg !3240
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3240
  store i32 %1, i32* %8, align 4, !dbg !3240
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3240
  store i32 0, i32* %9, align 4, !dbg !3240
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3241
  %10 = load i32, i32* %9, align 4, !dbg !3242
  %11 = load i32, i32* %8, align 4, !dbg !3244
  %12 = icmp slt i32 %10, %11, !dbg !3245
  br i1 %12, label %13, label %15, !dbg !3246

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3247
  store i8 0, i8* %14, align 1, !dbg !3249
  br label %15, !dbg !3250

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3251
  ret i32 %10, !dbg !3252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3258, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3259, metadata !DIExpression()), !dbg !3260
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3261
  %4 = load i8*, i8** %3, align 4, !dbg !3261
  %5 = icmp eq i8* %4, null, !dbg !3263
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3264
  br i1 %5, label %12, label %8, !dbg !3265

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3266
  %10 = load i32, i32* %9, align 4, !dbg !3266
  %11 = icmp slt i32 %7, %10, !dbg !3267
  br i1 %11, label %15, label %12, !dbg !3268

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3269
  %14 = add nsw i32 %7, 1, !dbg !3271
  store i32 %14, i32* %13, align 4, !dbg !3271
  br label %25, !dbg !3272

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3273
  %17 = icmp eq i32 %7, %16, !dbg !3275
  br i1 %17, label %18, label %21, !dbg !3276

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3277
  store i32 %19, i32* %6, align 4, !dbg !3277
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3279
  store i8 0, i8* %20, align 1, !dbg !3280
  br label %25, !dbg !3281

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3282
  %23 = add nsw i32 %7, 1, !dbg !3284
  store i32 %23, i32* %6, align 4, !dbg !3284
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3285
  store i8 %22, i8* %24, align 1, !dbg !3286
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3287
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3288 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3298, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8* %1, metadata !3299, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8* %2, metadata !3300, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8* %3, metadata !3301, metadata !DIExpression()), !dbg !3302
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3303
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3304
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3305
  unreachable, !dbg !3306
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3307 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3411
  ret %struct.k_thread* %1, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3418, metadata !DIExpression()), !dbg !3419
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3420, !srcloc !3422
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3423
  ret void, !dbg !3424
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3425 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3426, !srcloc !3428
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3429
  ret %struct.k_thread* %1, !dbg !3430
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3431 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3442, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %1, metadata !3443, metadata !DIExpression()), !dbg !3446
  %3 = icmp eq i8* %1, null, !dbg !3447
  br i1 %3, label %13, label %4, !dbg !3449

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3450
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3450
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3444, metadata !DIExpression()), !dbg !3446
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3451, !range !3452
  call void @llvm.dbg.value(metadata i32 %7, metadata !3445, metadata !DIExpression()), !dbg !3446
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3453
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3454, !range !3455
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3456
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3457
  %11 = load i32, i32* %10, align 4, !dbg !3458
  %12 = sub i32 %11, %9, !dbg !3458
  store i32 %12, i32* %10, align 4, !dbg !3458
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3459
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3461 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3465, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i8* %1, metadata !3466, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i8* %1, metadata !3467, metadata !DIExpression()), !dbg !3469
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3470
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3468, metadata !DIExpression()), !dbg !3469
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3471
  %5 = ptrtoint i8* %4 to i32, !dbg !3472
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3472
  %7 = sub i32 %5, %6, !dbg !3472
  %8 = lshr i32 %7, 3, !dbg !3473
  ret i32 %8, !dbg !3474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3475 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3479, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i32 %1, metadata !3480, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i1 %2, metadata !3481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3484
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3485
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3482, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3483, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3484
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3486
  %6 = bitcast i8* %5 to i16*, !dbg !3486
  %7 = load i16, i16* %6, align 2, !dbg !3486
  %8 = and i16 %7, -2, !dbg !3490
  %9 = zext i1 %2 to i16, !dbg !3490
  %10 = or i16 %8, %9, !dbg !3490
  store i16 %10, i16* %6, align 2, !dbg !3486
  ret void, !dbg !3491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3492 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3497, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 %1, metadata !3498, metadata !DIExpression()), !dbg !3499
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3500
  %4 = lshr i32 %3, 1, !dbg !3501
  ret i32 %4, !dbg !3502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3503 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3507, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 %1, metadata !3508, metadata !DIExpression()), !dbg !3509
  %3 = shl i32 %1, 3, !dbg !3510
  %4 = add i32 %3, -4, !dbg !3511
  ret i32 %4, !dbg !3512
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3513 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3517, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i32 %1, metadata !3518, metadata !DIExpression()), !dbg !3519
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3520
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3522
  br i1 %4, label %7, label %5, !dbg !3523

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3524
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3526
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3527
  br label %7, !dbg !3528

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3529, !range !3531
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3532
  br i1 %9, label %13, label %10, !dbg !3533

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3534
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3536, !range !3531
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3537
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3538
  call void @llvm.dbg.value(metadata i32 %12, metadata !3518, metadata !DIExpression()), !dbg !3519
  br label %13, !dbg !3539

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3518, metadata !DIExpression()), !dbg !3519
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3540
  ret void, !dbg !3541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3546, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %1, metadata !3547, metadata !DIExpression()), !dbg !3548
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3549
  %4 = add i32 %3, %1, !dbg !3550
  ret i32 %4, !dbg !3551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3552 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3556, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i32 %1, metadata !3557, metadata !DIExpression()), !dbg !3558
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3559
  %4 = and i32 %3, 1, !dbg !3560
  %5 = icmp ne i32 %4, 0, !dbg !3559
  ret i1 %5, !dbg !3561
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3562 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3564, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 %1, metadata !3565, metadata !DIExpression()), !dbg !3569
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3570, !range !3455
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %4, metadata !3566, metadata !DIExpression()), !dbg !3572
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3573
  ret void, !dbg !3574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3575 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3579, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 %1, metadata !3580, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 %2, metadata !3581, metadata !DIExpression()), !dbg !3583
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3584
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3585
  %6 = add i32 %5, %4, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %6, metadata !3582, metadata !DIExpression()), !dbg !3583
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3587
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3588
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3589
  ret void, !dbg !3590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3591 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3593, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i32 %1, metadata !3594, metadata !DIExpression()), !dbg !3595
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3596
  %4 = sub i32 %1, %3, !dbg !3597
  ret i32 %4, !dbg !3598
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3599 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3601, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata i32 %1, metadata !3602, metadata !DIExpression()), !dbg !3606
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3607, !range !3455
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %4, metadata !3603, metadata !DIExpression()), !dbg !3609
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3610
  ret void, !dbg !3611
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3612 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3616, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.value(metadata i32 %1, metadata !3617, metadata !DIExpression()), !dbg !3619
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3620
  %4 = add i32 %1, 1, !dbg !3621
  %5 = sub i32 %4, %3, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %5, metadata !3618, metadata !DIExpression()), !dbg !3619
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3623, !range !3624
  %7 = sub nsw i32 31, %6, !dbg !3625
  ret i32 %7, !dbg !3626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3627 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3631, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %1, metadata !3632, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %2, metadata !3633, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3640
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3641
  %5 = load i32, i32* %4, align 4, !dbg !3641
  %6 = icmp eq i32 %5, 0, !dbg !3642
  br i1 %6, label %7, label %12, !dbg !3643

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3644
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3646
  %10 = load i32, i32* %9, align 4, !dbg !3647
  %11 = or i32 %10, %8, !dbg !3647
  store i32 %11, i32* %9, align 4, !dbg !3647
  store i32 %1, i32* %4, align 4, !dbg !3648
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3649
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3650
  br label %14, !dbg !3651

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3636, metadata !DIExpression()), !dbg !3652
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3653, !range !3654
  call void @llvm.dbg.value(metadata i32 %13, metadata !3639, metadata !DIExpression()), !dbg !3652
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3655
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3656
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3657
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3658
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3659, !range !3455
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3660
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3661
  %18 = load i32, i32* %17, align 4, !dbg !3662
  %19 = add i32 %18, %16, !dbg !3662
  store i32 %19, i32* %17, align 4, !dbg !3662
  ret void, !dbg !3663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3664 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3666, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.value(metadata i32 %1, metadata !3667, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.value(metadata i32 %2, metadata !3668, metadata !DIExpression()), !dbg !3669
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3670
  ret void, !dbg !3671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3672 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3674, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata i32 %1, metadata !3675, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata i32 %2, metadata !3676, metadata !DIExpression()), !dbg !3677
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3678
  ret void, !dbg !3679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3680 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3682, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata i32 %1, metadata !3683, metadata !DIExpression()), !dbg !3684
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3685
  ret i32 %3, !dbg !3686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3687 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3691, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %1, metadata !3692, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %2, metadata !3693, metadata !DIExpression()), !dbg !3696
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3697
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3694, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3695, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3698
  call void @llvm.dbg.value(metadata i8* %5, metadata !3695, metadata !DIExpression()), !dbg !3696
  %6 = bitcast i8* %5 to i16*, !dbg !3699
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3702
  %8 = load i16, i16* %7, align 2, !dbg !3702
  %9 = zext i16 %8 to i32, !dbg !3702
  ret i32 %9, !dbg !3703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3704 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3708, metadata !DIExpression()), !dbg !3709
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3710
  ret %struct.chunk_unit_t* %2, !dbg !3711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3712 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3716, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %1, metadata !3717, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %2, metadata !3718, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %3, metadata !3719, metadata !DIExpression()), !dbg !3722
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3723
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3720, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3722
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3724
  call void @llvm.dbg.value(metadata i8* %6, metadata !3721, metadata !DIExpression()), !dbg !3722
  %7 = trunc i32 %3 to i16, !dbg !3725
  %8 = bitcast i8* %6 to i16*, !dbg !3728
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3729
  store i16 %7, i16* %9, align 2, !dbg !3730
  ret void, !dbg !3731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3732 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3736, metadata !DIExpression()), !dbg !3737
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3738
  ret i32 %2, !dbg !3739
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3740 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3744, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %1, metadata !3745, metadata !DIExpression()), !dbg !3746
  %3 = add i32 %1, 4, !dbg !3747
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3748
  ret i32 %4, !dbg !3749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3754, metadata !DIExpression()), !dbg !3755
  %2 = add i32 %0, 7, !dbg !3756
  %3 = lshr i32 %2, 3, !dbg !3757
  ret i32 %3, !dbg !3758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3759 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3763, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i32 %1, metadata !3764, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i32 %2, metadata !3765, metadata !DIExpression()), !dbg !3766
  %4 = shl i32 %2, 1, !dbg !3767
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3768
  ret void, !dbg !3769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3770 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3772, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i32 %1, metadata !3773, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i32 %2, metadata !3774, metadata !DIExpression()), !dbg !3775
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3776
  ret void, !dbg !3777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3778 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3780, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %1, metadata !3781, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %2, metadata !3782, metadata !DIExpression()), !dbg !3788
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3789
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3783, metadata !DIExpression()), !dbg !3788
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3790
  %6 = icmp eq i32 %5, %1, !dbg !3791
  br i1 %6, label %7, label %14, !dbg !3792

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3793
  %9 = xor i32 %8, -1, !dbg !3795
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3796
  %11 = load i32, i32* %10, align 4, !dbg !3797
  %12 = and i32 %11, %9, !dbg !3797
  store i32 %12, i32* %10, align 4, !dbg !3797
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3798
  store i32 0, i32* %13, align 4, !dbg !3799
  br label %17, !dbg !3800

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %15, metadata !3784, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %5, metadata !3787, metadata !DIExpression()), !dbg !3802
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3803
  store i32 %5, i32* %16, align 4, !dbg !3804
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3805
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3806
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3807, !range !3455
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3808
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3809
  %21 = load i32, i32* %20, align 4, !dbg !3810
  %22 = sub i32 %21, %19, !dbg !3810
  store i32 %22, i32* %20, align 4, !dbg !3810
  ret void, !dbg !3811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3812 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3814, metadata !DIExpression()), !dbg !3816
  call void @llvm.dbg.value(metadata i32 %1, metadata !3815, metadata !DIExpression()), !dbg !3816
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3817
  ret i32 %3, !dbg !3818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3819 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3823, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i8* %1, metadata !3824, metadata !DIExpression()), !dbg !3830
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3831
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3831
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3825, metadata !DIExpression()), !dbg !3830
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %5, metadata !3826, metadata !DIExpression()), !dbg !3830
  %6 = ptrtoint i8* %1 to i32, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %6, metadata !3827, metadata !DIExpression()), !dbg !3830
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3834
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3834
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %9, metadata !3828, metadata !DIExpression()), !dbg !3830
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3836
  %11 = shl i32 %10, 3, !dbg !3837
  call void @llvm.dbg.value(metadata i32 %11, metadata !3829, metadata !DIExpression()), !dbg !3830
  %12 = sub i32 %9, %6, !dbg !3838
  %13 = add i32 %12, %11, !dbg !3839
  ret i32 %13, !dbg !3840
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3841 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3845, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %1, metadata !3846, metadata !DIExpression()), !dbg !3851
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3852
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3852
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3847, metadata !DIExpression()), !dbg !3851
  %5 = icmp eq i32 %1, 0, !dbg !3853
  br i1 %5, label %21, label %6, !dbg !3855

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3856
  br i1 %7, label %21, label %8, !dbg !3857

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3858, !range !3452
  call void @llvm.dbg.value(metadata i32 %9, metadata !3849, metadata !DIExpression()), !dbg !3851
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %10, metadata !3850, metadata !DIExpression()), !dbg !3851
  %11 = icmp eq i32 %10, 0, !dbg !3860
  br i1 %11, label %21, label %12, !dbg !3862

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3863
  %14 = icmp ugt i32 %13, %9, !dbg !3865
  br i1 %14, label %15, label %17, !dbg !3866

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3867
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3869
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3870
  br label %17, !dbg !3871

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3872
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3873
  call void @llvm.dbg.value(metadata i8* %18, metadata !3848, metadata !DIExpression()), !dbg !3851
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3874, !range !3455
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3875, !range !3876
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3877
  br label %21, !dbg !3878

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3851
  ret i8* %22, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3886
  %3 = lshr i32 %1, 3, !dbg !3887
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3888
  %5 = load i32, i32* %4, align 4, !dbg !3888
  %6 = icmp uge i32 %3, %5, !dbg !3889
  ret i1 %6, !dbg !3890
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3891 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3895, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %1, metadata !3896, metadata !DIExpression()), !dbg !3910
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %3, metadata !3897, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3910
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3912
  %5 = load i32, i32* %4, align 4, !dbg !3912
  %6 = icmp eq i32 %5, 0, !dbg !3913
  br i1 %6, label %19, label %7, !dbg !3914

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3915
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3916
  call void @llvm.dbg.value(metadata i32 %9, metadata !3902, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata i32 %8, metadata !3903, metadata !DIExpression()), !dbg !3917
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3918
  %11 = icmp ult i32 %10, %1, !dbg !3920
  br i1 %11, label %13, label %12, !dbg !3921

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3922
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3924
  store i32 %14, i32* %4, align 4, !dbg !3925
  %15 = add nsw i32 %9, -1, !dbg !3926
  call void @llvm.dbg.value(metadata i32 %15, metadata !3902, metadata !DIExpression()), !dbg !3916
  %16 = icmp eq i32 %15, 0, !dbg !3926
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3927
  br i1 %18, label %19, label %7, !dbg !3927, !llvm.loop !3928

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3931
  %21 = load i32, i32* %20, align 4, !dbg !3931
  %22 = add nsw i32 %3, 1, !dbg !3932
  %23 = shl nsw i32 -1, %22, !dbg !3932
  %24 = and i32 %21, %23, !dbg !3933
  call void @llvm.dbg.value(metadata i32 %24, metadata !3905, metadata !DIExpression()), !dbg !3910
  %25 = icmp eq i32 %24, 0, !dbg !3934
  br i1 %25, label %30, label %26, !dbg !3935

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3936, !range !3624
  call void @llvm.dbg.value(metadata i32 %27, metadata !3906, metadata !DIExpression()), !dbg !3937
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3938
  %29 = load i32, i32* %28, align 4, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %29, metadata !3909, metadata !DIExpression()), !dbg !3937
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3939
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3910
  ret i32 %31, !dbg !3940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3941 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3943, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %1, metadata !3944, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %2, metadata !3945, metadata !DIExpression()), !dbg !3949
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3950
  call void @llvm.dbg.value(metadata i32 %4, metadata !3946, metadata !DIExpression()), !dbg !3949
  %5 = sub i32 %2, %1, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %5, metadata !3947, metadata !DIExpression()), !dbg !3949
  %6 = sub i32 %4, %5, !dbg !3952
  call void @llvm.dbg.value(metadata i32 %6, metadata !3948, metadata !DIExpression()), !dbg !3949
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3953
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3954
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3955
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3956
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3957
  ret void, !dbg !3958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3959 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3963, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %1, metadata !3964, metadata !DIExpression()), !dbg !3967
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3968
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3965, metadata !DIExpression()), !dbg !3967
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %4, metadata !3966, metadata !DIExpression()), !dbg !3967
  ret i8* %4, !dbg !3970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3971 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3975, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %1, metadata !3976, metadata !DIExpression()), !dbg !3977
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3978
  %4 = load i32, i32* %3, align 4, !dbg !3979
  %5 = add i32 %4, %1, !dbg !3979
  store i32 %5, i32* %3, align 4, !dbg !3979
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3980
  %7 = load i32, i32* %6, align 4, !dbg !3980
  %8 = icmp ugt i32 %7, %5, !dbg !3980
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3980
  store i32 %9, i32* %6, align 4, !dbg !3981
  ret void, !dbg !3982
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3983 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3987, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %1, metadata !3988, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %2, metadata !3989, metadata !DIExpression()), !dbg !3999
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4000
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4000
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3990, metadata !DIExpression()), !dbg !3999
  %6 = sub i32 0, %1, !dbg !4001
  %7 = and i32 %6, %1, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %7, metadata !3992, metadata !DIExpression()), !dbg !3999
  %8 = icmp eq i32 %7, %1, !dbg !4003
  br i1 %8, label %13, label %9, !dbg !4005

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %10, metadata !3988, metadata !DIExpression()), !dbg !3999
  %11 = icmp ult i32 %7, 4, !dbg !4008
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4008
  br label %17, !dbg !4008

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4009
  br i1 %14, label %15, label %17, !dbg !4012

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4013
  br label %59, !dbg !4015

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3999
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4016
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3988, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %19, metadata !3991, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %18, metadata !3992, metadata !DIExpression()), !dbg !3999
  %21 = icmp eq i32 %2, 0, !dbg !4017
  br i1 %21, label %59, label %22, !dbg !4019

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4020
  br i1 %23, label %59, label %24, !dbg !4021

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4022
  %26 = add i32 %25, %20, !dbg !4023
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4024, !range !3452
  call void @llvm.dbg.value(metadata i32 %27, metadata !3993, metadata !DIExpression()), !dbg !3999
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %28, metadata !3994, metadata !DIExpression()), !dbg !3999
  %29 = icmp eq i32 %28, 0, !dbg !4026
  br i1 %29, label %59, label %30, !dbg !4028

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4029
  call void @llvm.dbg.value(metadata i8* %31, metadata !3995, metadata !DIExpression()), !dbg !3999
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4030
  %33 = ptrtoint i8* %32 to i32, !dbg !4030
  %34 = add i32 %20, -1, !dbg !4030
  %35 = add i32 %34, %33, !dbg !4030
  %36 = sub i32 0, %20, !dbg !4030
  %37 = and i32 %35, %36, !dbg !4030
  %38 = inttoptr i32 %37 to i8*, !dbg !4031
  %39 = sub i32 0, %18, !dbg !4032
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %40, metadata !3995, metadata !DIExpression()), !dbg !3999
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4033
  %42 = ptrtoint i8* %41 to i32, !dbg !4033
  %43 = add i32 %42, 7, !dbg !4033
  %44 = and i32 %43, -8, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %44, metadata !3996, metadata !DIExpression()), !dbg !3999
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %45, metadata !3997, metadata !DIExpression()), !dbg !3999
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4035
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4036
  %48 = sub i32 %44, %47, !dbg !4036
  %49 = ashr exact i32 %48, 3, !dbg !4036
  call void @llvm.dbg.value(metadata i32 %49, metadata !3998, metadata !DIExpression()), !dbg !3999
  %50 = icmp ugt i32 %45, %28, !dbg !4037
  br i1 %50, label %51, label %52, !dbg !4039

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4040
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4042
  br label %52, !dbg !4043

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4044
  %54 = icmp ugt i32 %53, %49, !dbg !4046
  br i1 %54, label %55, label %56, !dbg !4047

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4048
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4050
  br label %56, !dbg !4051

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4052
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4053, !range !3455
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !4054, !range !3876
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !4055
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3999
  ret i8* %60, !dbg !4056
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4057 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4061, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8* %1, metadata !4062, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i32 %2, metadata !4063, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i32 %3, metadata !4064, metadata !DIExpression()), !dbg !4080
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4081
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4081
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4065, metadata !DIExpression()), !dbg !4080
  %7 = icmp eq i8* %1, null, !dbg !4082
  br i1 %7, label %8, label %10, !dbg !4084

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4085
  br label %65, !dbg !4087

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4088
  br i1 %11, label %12, label %13, !dbg !4090

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4091
  br label %65, !dbg !4093

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4094
  br i1 %14, label %65, label %15, !dbg !4096

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4097, !range !3452
  call void @llvm.dbg.value(metadata i32 %16, metadata !4066, metadata !DIExpression()), !dbg !4080
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %17, metadata !4067, metadata !DIExpression()), !dbg !4080
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4099
  %19 = ptrtoint i8* %1 to i32, !dbg !4100
  %20 = ptrtoint i8* %18 to i32, !dbg !4100
  %21 = sub i32 %19, %20, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %21, metadata !4068, metadata !DIExpression()), !dbg !4080
  %22 = add i32 %21, %3, !dbg !4101
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4102
  call void @llvm.dbg.value(metadata i32 %23, metadata !4069, metadata !DIExpression()), !dbg !4080
  %24 = icmp eq i32 %2, 0, !dbg !4103
  br i1 %24, label %29, label %25, !dbg !4104

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4105
  %27 = and i32 %26, %19, !dbg !4106
  %28 = icmp eq i32 %27, 0, !dbg !4106
  br i1 %28, label %29, label %55, !dbg !4107

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4108
  %31 = icmp eq i32 %23, %30, !dbg !4109
  br i1 %31, label %65, label %32, !dbg !4110

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4111
  br i1 %33, label %34, label %41, !dbg !4112

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !4113
  %36 = shl i32 %35, 3, !dbg !4115
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !4116
  %38 = load i32, i32* %37, align 4, !dbg !4117
  %39 = add i32 %38, %36, !dbg !4117
  store i32 %39, i32* %37, align 4, !dbg !4117
  %40 = add i32 %23, %16, !dbg !4118
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !4119
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4120
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !4121
  br label %65, !dbg !4122

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4123
  br i1 %42, label %55, label %43, !dbg !4124

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4125
  %45 = add i32 %44, %30, !dbg !4126
  %46 = icmp ult i32 %45, %23, !dbg !4127
  br i1 %46, label %55, label %47, !dbg !4128

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %48, metadata !4070, metadata !DIExpression()), !dbg !4130
  %49 = shl i32 %48, 3, !dbg !4131
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !4132
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4133
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4134
  %51 = icmp ult i32 %48, %50, !dbg !4136
  br i1 %51, label %52, label %54, !dbg !4137

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !4138
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !4140
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4141
  br label %54, !dbg !4142

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4143
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4144
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4145
  call void @llvm.dbg.value(metadata i8* %56, metadata !4076, metadata !DIExpression()), !dbg !4080
  %57 = icmp eq i8* %56, null, !dbg !4146
  br i1 %57, label %65, label %58, !dbg !4147

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4148, !range !3455
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !4149
  %61 = sub i32 %60, %21, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %61, metadata !4077, metadata !DIExpression()), !dbg !4151
  %62 = icmp ult i32 %61, %3, !dbg !4152
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !4152
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !4153
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4154
  br label %65, !dbg !4155

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !4080
  ret i8* %66, !dbg !4156
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4157 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4161, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8* %1, metadata !4162, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 %2, metadata !4163, metadata !DIExpression()), !dbg !4172
  %4 = add i32 %2, -4, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %4, metadata !4163, metadata !DIExpression()), !dbg !4172
  %5 = ptrtoint i8* %1 to i32, !dbg !4174
  %6 = add i32 %5, 7, !dbg !4174
  %7 = and i32 %6, -8, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %7, metadata !4164, metadata !DIExpression()), !dbg !4172
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4175
  %9 = ptrtoint i8* %8 to i32, !dbg !4175
  %10 = and i32 %9, -8, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %10, metadata !4165, metadata !DIExpression()), !dbg !4172
  %11 = sub i32 %10, %7, !dbg !4176
  %12 = lshr exact i32 %11, 3, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %12, metadata !4166, metadata !DIExpression()), !dbg !4172
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4178
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4167, metadata !DIExpression()), !dbg !4172
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4179
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4180
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4181
  store i32 %12, i32* %15, align 8, !dbg !4182
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4183
  store i32 0, i32* %16, align 4, !dbg !4184
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4185
  store i32 0, i32* %17, align 8, !dbg !4186
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4187
  store i32 0, i32* %18, align 4, !dbg !4188
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4189
  store i32 0, i32* %19, align 8, !dbg !4190
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %20, metadata !4168, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4172
  %21 = shl i32 %20, 2, !dbg !4192
  %22 = add i32 %21, 32, !dbg !4193
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %23, metadata !4169, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 0, metadata !4170, metadata !DIExpression()), !dbg !4195
  %24 = icmp slt i32 %20, 0, !dbg !4196
  br i1 %24, label %25, label %27, !dbg !4198

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4199
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4200
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4201
  %26 = sub i32 %12, %23, !dbg !4202
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4203
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4204
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4205
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4206
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4207
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4208
  ret void, !dbg !4209

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4170, metadata !DIExpression()), !dbg !4195
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4210
  store i32 0, i32* %29, align 4, !dbg !4212
  %30 = add nuw i32 %28, 1, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %30, metadata !4170, metadata !DIExpression()), !dbg !4195
  %31 = icmp eq i32 %28, %20, !dbg !4196
  br i1 %31, label %25, label %27, !dbg !4198, !llvm.loop !4214
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4216 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4240, metadata !DIExpression()), !dbg !4266
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4267
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4267
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4241, metadata !DIExpression()), !dbg !4266
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %7, metadata !4242, metadata !DIExpression()), !dbg !4266
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4242, metadata !DIExpression()), !dbg !4266
  %10 = icmp ult i32 %7, %9, !dbg !4270
  br i1 %10, label %11, label %17, !dbg !4272

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4242, metadata !DIExpression()), !dbg !4266
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4273
  br i1 %13, label %14, label %138, !dbg !4276

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %15, metadata !4242, metadata !DIExpression()), !dbg !4266
  %16 = icmp ult i32 %15, %9, !dbg !4270
  br i1 %16, label %11, label %17, !dbg !4272, !llvm.loop !4278

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4280
  %19 = icmp eq i32 %18, %9, !dbg !4281
  br i1 %19, label %20, label %138, !dbg !4283

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4284
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4284
  %22 = bitcast i32* %3 to i8*, !dbg !4284
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4284
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4285
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4285
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4245, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i32* %2, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4266
  call void @llvm.dbg.value(metadata i32* %3, metadata !4244, metadata !DIExpression(DW_OP_deref)), !dbg !4266
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4287
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4288
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4289
  %26 = load i32, i32* %25, align 4, !dbg !4289
  %27 = load i32, i32* %2, align 4, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %27, metadata !4243, metadata !DIExpression()), !dbg !4266
  %28 = icmp eq i32 %26, %27, !dbg !4292
  br i1 %28, label %29, label %136, !dbg !4293

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4294
  %31 = load i32, i32* %30, align 4, !dbg !4294
  %32 = load i32, i32* %3, align 4, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %32, metadata !4244, metadata !DIExpression()), !dbg !4266
  %33 = icmp eq i32 %31, %32, !dbg !4296
  br i1 %33, label %34, label %136, !dbg !4297

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4251, metadata !DIExpression()), !dbg !4298
  %35 = load i32, i32* %8, align 4, !dbg !4299
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4300
  %37 = icmp slt i32 %36, 0, !dbg !4301
  br i1 %37, label %84, label %38, !dbg !4302

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4302

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4251, metadata !DIExpression()), !dbg !4298
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4303
  %43 = load i32, i32* %42, align 4, !dbg !4303
  call void @llvm.dbg.value(metadata i32 %43, metadata !4253, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i32 0, metadata !4256, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i32 %43, metadata !4242, metadata !DIExpression()), !dbg !4266
  %44 = icmp eq i32 %43, 0, !dbg !4305
  br i1 %44, label %45, label %50, !dbg !4308

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4309
  %47 = shl nuw i32 1, %41, !dbg !4310
  %48 = and i32 %46, %47, !dbg !4311
  %49 = icmp eq i32 %48, 0, !dbg !4312
  call void @llvm.dbg.value(metadata i1 %71, metadata !4257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  call void @llvm.dbg.value(metadata i1 %72, metadata !4258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  br i1 %49, label %76, label %136, !dbg !4313

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4242, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i32 %52, metadata !4256, metadata !DIExpression()), !dbg !4304
  %53 = icmp eq i32 %52, 0, !dbg !4314
  %54 = icmp ne i32 %51, %43, !dbg !4315
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4315
  br i1 %55, label %61, label %56, !dbg !4316

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4309
  %58 = shl nuw i32 1, %41, !dbg !4310
  %59 = and i32 %57, %58, !dbg !4311
  %60 = icmp eq i32 %59, 0, !dbg !4312
  call void @llvm.dbg.value(metadata i1 %71, metadata !4257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  call void @llvm.dbg.value(metadata i1 %72, metadata !4258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  br i1 %60, label %136, label %74, !dbg !4313

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4317
  br i1 %62, label %63, label %136, !dbg !4320

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4321
  %64 = add i32 %52, 1, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %64, metadata !4256, metadata !DIExpression()), !dbg !4304
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %65, metadata !4242, metadata !DIExpression()), !dbg !4266
  %66 = icmp eq i32 %65, 0, !dbg !4305
  br i1 %66, label %67, label %50, !dbg !4308, !llvm.loop !4324

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4309
  %69 = shl nuw i32 1, %41, !dbg !4310
  %70 = and i32 %68, %69, !dbg !4311
  %71 = icmp eq i32 %70, 0, !dbg !4312
  call void @llvm.dbg.value(metadata i1 %71, metadata !4257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  %72 = icmp ne i32 %64, 0, !dbg !4326
  call void @llvm.dbg.value(metadata i1 %72, metadata !4258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  %73 = xor i1 %72, %71, !dbg !4327
  br i1 %73, label %74, label %136, !dbg !4313

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4329

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4331
  %78 = icmp eq i32 %77, 0, !dbg !4332
  br i1 %78, label %79, label %136, !dbg !4333

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %80, metadata !4251, metadata !DIExpression()), !dbg !4298
  %81 = load i32, i32* %8, align 4, !dbg !4299
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4300
  %83 = icmp slt i32 %41, %82, !dbg !4301
  br i1 %83, label %40, label %84, !dbg !4302, !llvm.loop !4335

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4337
  call void @llvm.dbg.value(metadata i32 0, metadata !4259, metadata !DIExpression()), !dbg !4266
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %86, metadata !4242, metadata !DIExpression()), !dbg !4266
  %87 = icmp ult i32 %86, %85, !dbg !4341
  br i1 %87, label %88, label %99, !dbg !4342

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4259, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i32 %90, metadata !4242, metadata !DIExpression()), !dbg !4266
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4343
  br i1 %91, label %92, label %136, !dbg !4346

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4347
  %94 = icmp eq i32 %93, %89, !dbg !4349
  br i1 %94, label %95, label %136, !dbg !4350

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4259, metadata !DIExpression()), !dbg !4266
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4351
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %96, metadata !4242, metadata !DIExpression()), !dbg !4266
  %97 = load i32, i32* %8, align 4, !dbg !4337
  %98 = icmp ult i32 %96, %97, !dbg !4341
  br i1 %98, label %88, label %99, !dbg !4342, !llvm.loop !4353

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4355
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4337
  %102 = icmp eq i32 %100, %101, !dbg !4356
  br i1 %102, label %103, label %136, !dbg !4358

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4260, metadata !DIExpression()), !dbg !4359
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4360
  %105 = icmp slt i32 %104, 0, !dbg !4361
  br i1 %105, label %125, label %106, !dbg !4362

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4260, metadata !DIExpression()), !dbg !4359
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4363
  %110 = load i32, i32* %109, align 4, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %110, metadata !4262, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i32 0, metadata !4265, metadata !DIExpression()), !dbg !4364
  %111 = icmp eq i32 %110, 0, !dbg !4365
  br i1 %111, label %120, label %112, !dbg !4367

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4265, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i32 %113, metadata !4242, metadata !DIExpression()), !dbg !4266
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4368
  br i1 %114, label %136, label %115, !dbg !4373

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4374
  call void @llvm.dbg.value(metadata i32 poison, metadata !4265, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4364
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %116, metadata !4242, metadata !DIExpression()), !dbg !4266
  %117 = icmp eq i32 %116, %110, !dbg !4376
  br i1 %117, label %118, label %112, !dbg !4377, !llvm.loop !4378

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4380
  br label %120, !dbg !4381

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4380
  %122 = add nuw nsw i32 %108, 1, !dbg !4381
  call void @llvm.dbg.value(metadata i32 %122, metadata !4260, metadata !DIExpression()), !dbg !4359
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4360
  %124 = icmp slt i32 %108, %123, !dbg !4361
  br i1 %124, label %106, label %125, !dbg !4362, !llvm.loop !4382

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4384
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %127, metadata !4242, metadata !DIExpression()), !dbg !4266
  %128 = icmp ult i32 %127, %126, !dbg !4388
  br i1 %128, label %129, label %136, !dbg !4389

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4242, metadata !DIExpression()), !dbg !4266
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4390
  %132 = xor i1 %131, true, !dbg !4392
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4393
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %133, metadata !4242, metadata !DIExpression()), !dbg !4266
  %134 = load i32, i32* %8, align 4, !dbg !4384
  %135 = icmp ult i32 %133, %134, !dbg !4388
  br i1 %135, label %129, label %136, !dbg !4389, !llvm.loop !4395

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4266
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4397
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4266
  ret i1 %139, !dbg !4397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4398 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4402, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i32 %1, metadata !4403, metadata !DIExpression()), !dbg !4404
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4405
  %4 = add i32 %3, %1, !dbg !4406
  ret i32 %4, !dbg !4407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4408 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4412, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.value(metadata i32 %1, metadata !4413, metadata !DIExpression()), !dbg !4414
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4415
  %4 = icmp eq i32 %3, 0, !dbg !4415
  br i1 %4, label %33, label %5, !dbg !4418

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4419
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4419
  %8 = load i32, i32* %7, align 4, !dbg !4419
  %9 = icmp ugt i32 %6, %8, !dbg !4419
  br i1 %9, label %33, label %10, !dbg !4422

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4423
  br i1 %11, label %12, label %33, !dbg !4426

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4427
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4427
  %15 = icmp eq i32 %14, %1, !dbg !4427
  br i1 %15, label %16, label %33, !dbg !4430

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4431
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4431
  %19 = icmp eq i32 %18, %1, !dbg !4431
  br i1 %19, label %20, label %33, !dbg !4434

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4435
  br i1 %21, label %32, label %22, !dbg !4437

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4438
  br i1 %23, label %24, label %33, !dbg !4442

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4443
  br i1 %25, label %26, label %33, !dbg !4446

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4447, !range !3654
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4447
  br i1 %28, label %29, label %33, !dbg !4452

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4453, !range !3654
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4453
  br i1 %31, label %32, label %33, !dbg !4456

32:                                               ; preds = %20, %29
  br label %33, !dbg !4457

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4414
  ret i1 %34, !dbg !4458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4459 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4463, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i32* %1, metadata !4464, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i32* %2, metadata !4465, metadata !DIExpression()), !dbg !4467
  store i32 0, i32* %1, align 4, !dbg !4468
  store i32 0, i32* %2, align 4, !dbg !4469
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %4, metadata !4466, metadata !DIExpression()), !dbg !4467
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4466, metadata !DIExpression()), !dbg !4467
  %6 = load i32, i32* %5, align 4, !dbg !4472
  %7 = icmp ult i32 %4, %6, !dbg !4474
  br i1 %7, label %8, label %19, !dbg !4475

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4466, metadata !DIExpression()), !dbg !4467
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4476
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4479, !range !3455
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4479
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4479
  %14 = load i32, i32* %13, align 4, !dbg !4479
  %15 = add i32 %14, %12, !dbg !4479
  store i32 %15, i32* %13, align 4, !dbg !4479
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %16, metadata !4466, metadata !DIExpression()), !dbg !4467
  %17 = load i32, i32* %5, align 4, !dbg !4472
  %18 = icmp ult i32 %16, %17, !dbg !4474
  br i1 %18, label %8, label %19, !dbg !4475, !llvm.loop !4481

19:                                               ; preds = %8, %3
  ret void, !dbg !4483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4484 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4489, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4490, metadata !DIExpression()), !dbg !4491
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4492
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4494
  br i1 %5, label %20, label %6, !dbg !4494

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4495
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4495
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4496
  %10 = load i32, i32* %9, align 4, !dbg !4496
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4497
  store i32 %10, i32* %11, align 4, !dbg !4498
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4499
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4500
  %14 = load i32, i32* %13, align 4, !dbg !4500
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4501
  store i32 %14, i32* %15, align 4, !dbg !4502
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4503
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4504
  %18 = load i32, i32* %17, align 4, !dbg !4504
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4505
  store i32 %18, i32* %19, align 4, !dbg !4506
  br label %20, !dbg !4507

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4491
  ret i32 %21, !dbg !4508
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4509 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4513, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.value(metadata i32 %1, metadata !4514, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.value(metadata i32 %1, metadata !4515, metadata !DIExpression()), !dbg !4516
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4517, !range !3624
  %4 = sub nsw i32 31, %3, !dbg !4518
  ret i32 %4, !dbg !4519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4520 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4524, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i32 %1, metadata !4525, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i1 %2, metadata !4526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4529
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4530
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4527, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4528, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4529
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4531
  %6 = bitcast i8* %5 to i16*, !dbg !4531
  %7 = load i16, i16* %6, align 2, !dbg !4531
  %8 = and i16 %7, -2, !dbg !4535
  %9 = zext i1 %2 to i16, !dbg !4535
  %10 = or i16 %8, %9, !dbg !4535
  store i16 %10, i16* %6, align 2, !dbg !4531
  ret void, !dbg !4536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4537 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 %1, metadata !4540, metadata !DIExpression()), !dbg !4541
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4542
  ret i32 %3, !dbg !4543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4544 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4546, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %1, metadata !4547, metadata !DIExpression()), !dbg !4548
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4549
  %4 = and i32 %3, 1, !dbg !4550
  %5 = icmp ne i32 %4, 0, !dbg !4549
  ret i1 %5, !dbg !4551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4552 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4554, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %1, metadata !4555, metadata !DIExpression()), !dbg !4556
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4557
  %4 = sub i32 %1, %3, !dbg !4558
  ret i32 %4, !dbg !4559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4560 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4564, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %1, metadata !4565, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %2, metadata !4566, metadata !DIExpression()), !dbg !4569
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4570
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4567, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4568, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4569
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4568, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4569
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %5, metadata !4568, metadata !DIExpression()), !dbg !4569
  %6 = bitcast i8* %5 to i16*, !dbg !4572
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4575
  %8 = load i16, i16* %7, align 2, !dbg !4575
  %9 = zext i16 %8 to i32, !dbg !4575
  ret i32 %9, !dbg !4576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4577 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4581, metadata !DIExpression()), !dbg !4582
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4583
  ret %struct.chunk_unit_t* %2, !dbg !4584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4585 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4589, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %1, metadata !4590, metadata !DIExpression()), !dbg !4591
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4592
  %4 = lshr i32 %3, 1, !dbg !4593
  ret i32 %4, !dbg !4594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4595 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4599, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i32 %1, metadata !4600, metadata !DIExpression()), !dbg !4601
  %3 = shl i32 %1, 3, !dbg !4602
  %4 = add i32 %3, -4, !dbg !4603
  ret i32 %4, !dbg !4604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4605 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4607, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 %1, metadata !4608, metadata !DIExpression()), !dbg !4609
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4610
  %4 = icmp ugt i32 %3, %1, !dbg !4610
  br i1 %4, label %12, label %5, !dbg !4613

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4614
  %7 = load i32, i32* %6, align 4, !dbg !4614
  %8 = icmp ugt i32 %7, %1, !dbg !4614
  br i1 %8, label %9, label %12, !dbg !4617

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4618
  %11 = icmp ult i32 %10, %7, !dbg !4618
  br label %12, !dbg !4609

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4609
  ret i1 %13, !dbg !4621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4622 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i32 %1, metadata !4625, metadata !DIExpression()), !dbg !4626
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4627
  ret i32 %3, !dbg !4628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4629 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4646, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4647, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i8* %2, metadata !4648, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %3, metadata !4649, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %4, metadata !4650, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i8* %5, metadata !4651, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %6, metadata !4652, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %7, metadata !4653, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4654, metadata !DIExpression()), !dbg !4684
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4685
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4685
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4655, metadata !DIExpression()), !dbg !4686
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4687
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4687
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4687
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4687
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4687
  store i8* %2, i8** %14, align 4, !dbg !4687
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4687
  store i32 %3, i32* %15, align 4, !dbg !4687
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4687
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4687
  store i8* %5, i8** %17, align 4, !dbg !4687
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4687
  %19 = lshr i32 %6, 3, !dbg !4688
  store i32 %19, i32* %18, align 4, !dbg !4687
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4687
  store i32 0, i32* %20, align 4, !dbg !4687
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4687
  store i32 0, i32* %21, align 4, !dbg !4687
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4687
  store i32 %7, i32* %22, align 4, !dbg !4687
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4689
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4689
  call void @llvm.dbg.value(metadata i32 0, metadata !4672, metadata !DIExpression()), !dbg !4690
  %24 = icmp eq i32 %4, 0, !dbg !4691
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4692
  br i1 %24, label %31, label %26, !dbg !4692

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4692

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4693
  ret void, !dbg !4693

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4672, metadata !DIExpression()), !dbg !4690
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4694
  br i1 %36, label %37, label %50, !dbg !4695

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %38, metadata !4674, metadata !DIExpression()), !dbg !4697
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4698
  call void @llvm.dbg.value(metadata i8* %39, metadata !4679, metadata !DIExpression()), !dbg !4697
  %40 = load i32, i32* %28, align 8, !dbg !4699
  %41 = add i32 %40, 1, !dbg !4699
  store i32 %41, i32* %28, align 8, !dbg !4699
  %42 = icmp eq i8* %39, null, !dbg !4700
  br i1 %42, label %65, label %43, !dbg !4702

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4703
  %45 = add i32 %44, 1, !dbg !4703
  store i32 %45, i32* %29, align 4, !dbg !4703
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4705
  store i8* %39, i8** %46, align 4, !dbg !4706
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4707
  store i32 %38, i32* %47, align 4, !dbg !4708
  %48 = add i32 %34, 1, !dbg !4709
  store i32 %48, i32* %20, align 4, !dbg !4709
  %49 = add i32 %33, %38, !dbg !4710
  store i32 %49, i32* %21, align 4, !dbg !4710
  br label %65, !dbg !4711

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %51, metadata !4680, metadata !DIExpression()), !dbg !4713
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4714
  %53 = load i8*, i8** %52, align 4, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %53, metadata !4682, metadata !DIExpression()), !dbg !4713
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4715
  %55 = load i32, i32* %54, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %55, metadata !4683, metadata !DIExpression()), !dbg !4713
  %56 = load i32, i32* %27, align 8, !dbg !4716
  %57 = add i32 %56, 1, !dbg !4716
  store i32 %57, i32* %27, align 8, !dbg !4716
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4717
  %59 = add i32 %34, -1, !dbg !4718
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4719
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4719
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4719
  %63 = load i64, i64* %61, align 4, !dbg !4719
  store i64 %63, i64* %62, align 4, !dbg !4719
  store i32 %59, i32* %20, align 4, !dbg !4720
  %64 = sub i32 %33, %55, !dbg !4721
  store i32 %64, i32* %21, align 4, !dbg !4721
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4722
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4723
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4724
  %69 = load i64, i64* %30, align 8, !dbg !4725
  %70 = add i64 %69, %68, !dbg !4725
  store i64 %70, i64* %30, align 8, !dbg !4725
  %71 = add nuw i32 %35, 1, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %71, metadata !4672, metadata !DIExpression()), !dbg !4690
  %72 = icmp eq i32 %71, %4, !dbg !4691
  br i1 %72, label %31, label %32, !dbg !4692, !llvm.loop !4727
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4729 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4734, metadata !DIExpression()), !dbg !4741
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4742
  %3 = load i32, i32* %2, align 4, !dbg !4742
  %4 = icmp eq i32 %3, 0, !dbg !4743
  br i1 %4, label %26, label %5, !dbg !4744

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4745
  %7 = load i32, i32* %6, align 4, !dbg !4745
  %8 = icmp ult i32 %3, %7, !dbg !4746
  br i1 %8, label %9, label %26, !dbg !4747

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4748
  %11 = load i32, i32* %10, align 4, !dbg !4748
  %12 = mul i32 %11, 100, !dbg !4749
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4750
  %14 = load i32, i32* %13, align 4, !dbg !4750
  %15 = udiv i32 %12, %14, !dbg !4751
  call void @llvm.dbg.value(metadata i32 %15, metadata !4735, metadata !DIExpression()), !dbg !4752
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4753
  %17 = load i32, i32* %16, align 4, !dbg !4753
  call void @llvm.dbg.value(metadata i32 undef, metadata !4739, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i32 -1, metadata !4740, metadata !DIExpression()), !dbg !4752
  %18 = icmp ult i32 %15, %17, !dbg !4754
  br i1 %18, label %19, label %22, !dbg !4756

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4739, metadata !DIExpression()), !dbg !4752
  %20 = udiv i32 -2147483648, %17, !dbg !4757
  %21 = mul i32 %20, %15, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %21, metadata !4740, metadata !DIExpression()), !dbg !4752
  br label %22, !dbg !4760

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4752
  call void @llvm.dbg.value(metadata i32 %23, metadata !4740, metadata !DIExpression()), !dbg !4752
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4761
  %25 = icmp ugt i32 %24, %23, !dbg !4762
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4763
  ret i1 %27, !dbg !4764
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4765 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4769, metadata !DIExpression()), !dbg !4771
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4772
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4773, !range !3624
  call void @llvm.dbg.value(metadata i32 %2, metadata !4770, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4771
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4774
  %4 = shl i32 16, %2, !dbg !4775
  %5 = add i32 %4, -1, !dbg !4775
  %6 = and i32 %5, %3, !dbg !4776
  ret i32 %6, !dbg !4777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4778 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4780, metadata !DIExpression()), !dbg !4781
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4782
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4783
  %4 = load i32, i32* %3, align 4, !dbg !4783
  %5 = urem i32 %2, %4, !dbg !4784
  ret i32 %5, !dbg !4785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4786
  %2 = mul i64 %1, 2862933555777941757, !dbg !4787
  %3 = add i64 %2, 3037000493, !dbg !4788
  store i64 %3, i64* @rand32.state, align 8, !dbg !4789
  %4 = lshr i64 %3, 32, !dbg !4790
  %5 = trunc i64 %4 to i32, !dbg !4791
  ret i32 %5, !dbg !4792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4793 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4797, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i1 %1, metadata !4798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4818
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4819
  %6 = load i32, i32* %5, align 4, !dbg !4819
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4820
  %8 = add i32 %7, 1, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %8, metadata !4800, metadata !DIExpression()), !dbg !4818
  %9 = bitcast i32* %3 to i8*, !dbg !4822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4822
  %10 = bitcast i32* %4 to i8*, !dbg !4822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4822
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4823
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4824
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4825
  call void @llvm.dbg.value(metadata i32 0, metadata !4799, metadata !DIExpression()), !dbg !4818
  %12 = icmp slt i32 %7, 0, !dbg !4826
  br i1 %12, label %34, label %13, !dbg !4827

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4799, metadata !DIExpression()), !dbg !4818
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4828
  %16 = load i32, i32* %15, align 4, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %16, metadata !4805, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i32 0, metadata !4809, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i32 0, metadata !4810, metadata !DIExpression()), !dbg !4829
  %17 = icmp eq i32 %16, 0, !dbg !4830
  br i1 %17, label %31, label %18, !dbg !4831

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4829
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4829
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4832
  call void @llvm.dbg.value(metadata i32 %21, metadata !4811, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.value(metadata i32 %20, metadata !4810, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i32 %19, metadata !4809, metadata !DIExpression()), !dbg !4829
  %22 = add nuw nsw i32 %20, 1, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %22, metadata !4810, metadata !DIExpression()), !dbg !4829
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4835
  %24 = icmp ugt i32 %19, %23, !dbg !4835
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %25, metadata !4809, metadata !DIExpression()), !dbg !4829
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %26, metadata !4811, metadata !DIExpression()), !dbg !4832
  %27 = icmp eq i32 %26, %16, !dbg !4837
  br i1 %27, label %28, label %18, !dbg !4838, !llvm.loop !4839

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4810, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i32 %25, metadata !4809, metadata !DIExpression()), !dbg !4829
  %29 = shl nuw i32 1, %14, !dbg !4842
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4845, !range !3876
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4846
  br label %31, !dbg !4847

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %32, metadata !4799, metadata !DIExpression()), !dbg !4818
  %33 = icmp eq i32 %14, %7, !dbg !4826
  br i1 %33, label %34, label %13, !dbg !4827, !llvm.loop !4849

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4851

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4852
  call void @llvm.dbg.value(metadata i32 0, metadata !4814, metadata !DIExpression()), !dbg !4853
  br label %36, !dbg !4854

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4853
  call void @llvm.dbg.value(metadata i32 %37, metadata !4814, metadata !DIExpression()), !dbg !4853
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4855
  %39 = select i1 %38, i32 42, i32 45, !dbg !4855
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4858
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4859
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4860
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4861
  %43 = load i32, i32* %5, align 4, !dbg !4862
  %44 = icmp eq i32 %37, %43, !dbg !4864
  br i1 %44, label %47, label %45, !dbg !4865

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %46, metadata !4814, metadata !DIExpression()), !dbg !4853
  br label %36, !dbg !4867, !llvm.loop !4868

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4801, metadata !DIExpression(DW_OP_deref)), !dbg !4818
  call void @llvm.dbg.value(metadata i32* %4, metadata !4802, metadata !DIExpression(DW_OP_deref)), !dbg !4818
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4871
  %48 = load i32, i32* %5, align 4, !dbg !4872
  %49 = shl i32 %48, 3, !dbg !4873
  %50 = or i32 %49, 4, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %50, metadata !4803, metadata !DIExpression()), !dbg !4818
  %51 = load i32, i32* %3, align 4, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %51, metadata !4801, metadata !DIExpression()), !dbg !4818
  %52 = load i32, i32* %4, align 4, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %52, metadata !4802, metadata !DIExpression()), !dbg !4818
  %53 = add i32 %52, %51, !dbg !4877
  %54 = sub i32 %50, %53, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %54, metadata !4804, metadata !DIExpression()), !dbg !4818
  %55 = mul i32 %54, 1000, !dbg !4878
  %56 = lshr exact i32 %50, 1, !dbg !4879
  %57 = add i32 %55, %56, !dbg !4880
  %58 = udiv i32 %57, %50, !dbg !4881
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4882
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4883
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4884
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4884
  ret void, !dbg !4884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4885 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4889, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i1 %1, metadata !4890, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4891
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4892
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4892
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4893
  ret void, !dbg !4894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4895 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4899, metadata !DIExpression()), !dbg !4900
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4901
  br i1 %2, label %9, label %3, !dbg !4903

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4904
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4904
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4905
  %7 = load i32, i32* %6, align 4, !dbg !4905
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4906
  store i32 %7, i32* %8, align 4, !dbg !4907
  br label %9, !dbg !4908

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4900
  ret i32 %10, !dbg !4909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4910 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4923, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4920, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %1, metadata !4921, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %2, metadata !4922, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %4, metadata !4924, metadata !DIExpression()), !dbg !5051
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5052
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5052
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4925, metadata !DIExpression()), !dbg !5053
  call void @llvm.dbg.value(metadata i32 0, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i1 undef, metadata !4931, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5051
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5054

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5054

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5055
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4923, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %30, metadata !4922, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %29, metadata !4929, metadata !DIExpression()), !dbg !5051
  %31 = load i8, i8* %30, align 1, !dbg !5056
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5054

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5056
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %34, metadata !4922, metadata !DIExpression()), !dbg !5051
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %35, metadata !4933, metadata !DIExpression()), !dbg !5058
  %36 = icmp slt i32 %35, 0, !dbg !5059
  %37 = add i32 %29, 1, !dbg !5057
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %36, label %365, label %28, !llvm.loop !5061

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5063
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4938, metadata !DIExpression()), !dbg !5064
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5064
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4983, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4986, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8* %30, metadata !4989, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i32 -1, metadata !4990, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i32 -1, metadata !4991, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8* null, metadata !4992, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8* %14, metadata !4993, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8 0, metadata !4994, metadata !DIExpression()), !dbg !5065
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %39, metadata !4922, metadata !DIExpression()), !dbg !5051
  %40 = load i24, i24* %15, align 8, !dbg !5067
  %41 = and i24 %40, 256, !dbg !5067
  %42 = icmp eq i24 %41, 0, !dbg !5067
  br i1 %42, label %51, label %43, !dbg !5069

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %44, metadata !4923, metadata !DIExpression()), !dbg !5051
  %45 = bitcast i8* %27 to i32*, !dbg !5070
  %46 = load i32, i32* %45, align 4, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %46, metadata !4990, metadata !DIExpression()), !dbg !5065
  %47 = icmp slt i32 %46, 0, !dbg !5072
  br i1 %47, label %48, label %56, !dbg !5074

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5075
  store i24 %49, i24* %15, align 8, !dbg !5075
  %50 = sub nsw i32 0, %46, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %50, metadata !4990, metadata !DIExpression()), !dbg !5065
  br label %56, !dbg !5078

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5079
  %53 = icmp eq i24 %52, 0, !dbg !5079
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5081
  br label %56, !dbg !5081

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5082
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5065
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4923, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %58, metadata !4990, metadata !DIExpression()), !dbg !5065
  %60 = and i24 %57, 1024, !dbg !5082
  %61 = icmp eq i24 %60, 0, !dbg !5082
  br i1 %61, label %69, label %62, !dbg !5083

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5084
  call void @llvm.dbg.value(metadata i8* %63, metadata !4923, metadata !DIExpression()), !dbg !5051
  %64 = bitcast i8* %59 to i32*, !dbg !5084
  %65 = load i32, i32* %64, align 4, !dbg !5084
  call void @llvm.dbg.value(metadata i32 %65, metadata !4995, metadata !DIExpression()), !dbg !5085
  %66 = icmp slt i32 %65, 0, !dbg !5086
  br i1 %66, label %67, label %74, !dbg !5088

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5089
  store i24 %68, i24* %15, align 8, !dbg !5089
  br label %74, !dbg !5091

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5092
  %71 = icmp eq i24 %70, 0, !dbg !5092
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5094
  br label %74, !dbg !5094

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5095
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5065
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5065
  call void @llvm.dbg.value(metadata i8* %77, metadata !4923, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %76, metadata !4991, metadata !DIExpression()), !dbg !5065
  store i32 0, i32* %16, align 4, !dbg !5096
  store i32 0, i32* %17, align 8, !dbg !5097
  %78 = lshr i24 %75, 16, !dbg !5095
  call void @llvm.dbg.value(metadata i24 %78, metadata !4998, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5065
  %79 = lshr i24 %75, 11, !dbg !5098
  %80 = and i24 %79, 15, !dbg !5098
  %81 = zext i24 %80 to i32, !dbg !5098
  call void @llvm.dbg.value(metadata i32 %81, metadata !4999, metadata !DIExpression()), !dbg !5065
  %82 = trunc i24 %78 to i3, !dbg !5099
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5099

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5100

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %85, metadata !4923, metadata !DIExpression()), !dbg !5051
  %86 = bitcast i8* %77 to i32*, !dbg !5103
  %87 = load i32, i32* %86, align 4, !dbg !5103
  %88 = sext i32 %87 to i64, !dbg !5103
  store i64 %88, i64* %20, align 8, !dbg !5105
  br label %115, !dbg !5106

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %90, metadata !4923, metadata !DIExpression()), !dbg !5051
  %91 = bitcast i8* %77 to i32*, !dbg !5107
  %92 = load i32, i32* %91, align 4, !dbg !5107
  %93 = sext i32 %92 to i64, !dbg !5107
  store i64 %93, i64* %20, align 8, !dbg !5110
  br label %115, !dbg !5111

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5112
  %96 = add i32 %95, 7, !dbg !5112
  %97 = and i32 %96, -8, !dbg !5112
  %98 = inttoptr i32 %97 to i8*, !dbg !5112
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %99, metadata !4923, metadata !DIExpression()), !dbg !5051
  %100 = inttoptr i32 %97 to i64*, !dbg !5112
  %101 = load i64, i64* %100, align 8, !dbg !5112
  store i64 %101, i64* %20, align 8, !dbg !5113
  br label %115, !dbg !5114

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5115
  %104 = add i32 %103, 7, !dbg !5115
  %105 = and i32 %104, -8, !dbg !5115
  %106 = inttoptr i32 %105 to i8*, !dbg !5115
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5115
  call void @llvm.dbg.value(metadata i8* %107, metadata !4923, metadata !DIExpression()), !dbg !5051
  %108 = inttoptr i32 %105 to i64*, !dbg !5115
  %109 = load i64, i64* %108, align 8, !dbg !5115
  store i64 %109, i64* %20, align 8, !dbg !5116
  br label %115, !dbg !5117

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5118
  call void @llvm.dbg.value(metadata i8* %111, metadata !4923, metadata !DIExpression()), !dbg !5051
  %112 = bitcast i8* %77 to i32*, !dbg !5118
  %113 = load i32, i32* %112, align 4, !dbg !5118
  %114 = sext i32 %113 to i64, !dbg !5119
  store i64 %114, i64* %20, align 8, !dbg !5120
  br label %115, !dbg !5121

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5122
  call void @llvm.dbg.value(metadata i8* %117, metadata !4923, metadata !DIExpression()), !dbg !5051
  %118 = trunc i24 %79 to i4, !dbg !5123
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5123

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5124
  %121 = ashr exact i64 %120, 56, !dbg !5124
  store i64 %121, i64* %20, align 8, !dbg !5127
  br label %177, !dbg !5128

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5129
  %124 = ashr exact i64 %123, 48, !dbg !5129
  store i64 %124, i64* %20, align 8, !dbg !5132
  br label %177, !dbg !5133

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5134

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5137
  call void @llvm.dbg.value(metadata i8* %127, metadata !4923, metadata !DIExpression()), !dbg !5051
  %128 = bitcast i8* %77 to i32*, !dbg !5137
  %129 = load i32, i32* %128, align 4, !dbg !5137
  %130 = zext i32 %129 to i64, !dbg !5137
  store i64 %130, i64* %20, align 8, !dbg !5139
  br label %157, !dbg !5140

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5141
  call void @llvm.dbg.value(metadata i8* %132, metadata !4923, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %132, metadata !4923, metadata !DIExpression()), !dbg !5051
  %133 = bitcast i8* %77 to i32*, !dbg !5141
  %134 = load i32, i32* %133, align 4, !dbg !5141
  %135 = zext i32 %134 to i64, !dbg !5141
  store i64 %135, i64* %20, align 8, !dbg !5141
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5143
  %138 = add i32 %137, 7, !dbg !5143
  %139 = and i32 %138, -8, !dbg !5143
  %140 = inttoptr i32 %139 to i8*, !dbg !5143
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5143
  call void @llvm.dbg.value(metadata i8* %141, metadata !4923, metadata !DIExpression()), !dbg !5051
  %142 = inttoptr i32 %139 to i64*, !dbg !5143
  %143 = load i64, i64* %142, align 8, !dbg !5143
  store i64 %143, i64* %20, align 8, !dbg !5144
  br label %157, !dbg !5145

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5146
  %146 = add i32 %145, 7, !dbg !5146
  %147 = and i32 %146, -8, !dbg !5146
  %148 = inttoptr i32 %147 to i8*, !dbg !5146
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %149, metadata !4923, metadata !DIExpression()), !dbg !5051
  %150 = inttoptr i32 %147 to i64*, !dbg !5146
  %151 = load i64, i64* %150, align 8, !dbg !5146
  store i64 %151, i64* %20, align 8, !dbg !5147
  br label %157, !dbg !5148

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5149
  call void @llvm.dbg.value(metadata i8* %153, metadata !4923, metadata !DIExpression()), !dbg !5051
  %154 = bitcast i8* %77 to i32*, !dbg !5149
  %155 = load i32, i32* %154, align 4, !dbg !5149
  %156 = zext i32 %155 to i64, !dbg !5150
  store i64 %156, i64* %20, align 8, !dbg !5151
  br label %157, !dbg !5152

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5153
  call void @llvm.dbg.value(metadata i8* %159, metadata !4923, metadata !DIExpression()), !dbg !5051
  %160 = trunc i24 %79 to i4, !dbg !5154
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5154

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5155
  store i64 %162, i64* %20, align 8, !dbg !5158
  br label %177, !dbg !5159

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5160
  store i64 %164, i64* %20, align 8, !dbg !5163
  br label %177, !dbg !5164

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5165
  %167 = add i32 %166, 7, !dbg !5165
  %168 = and i32 %167, -8, !dbg !5165
  %169 = inttoptr i32 %168 to i8*, !dbg !5165
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %170, metadata !4923, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %170, metadata !4923, metadata !DIExpression()), !dbg !5051
  %171 = inttoptr i32 %168 to double*, !dbg !5165
  %172 = load double, double* %171, align 8, !dbg !5165
  store double %172, double* %19, align 8, !dbg !5165
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5169
  call void @llvm.dbg.value(metadata i8* %174, metadata !4923, metadata !DIExpression()), !dbg !5051
  %175 = bitcast i8* %77 to i8**, !dbg !5169
  %176 = load i8*, i8** %175, align 4, !dbg !5169
  store i8* %176, i8** %18, align 8, !dbg !5172
  br label %177, !dbg !5173

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5065
  call void @llvm.dbg.value(metadata i8* %178, metadata !4923, metadata !DIExpression()), !dbg !5051
  %179 = and i24 %75, 3, !dbg !5174
  %180 = icmp eq i24 %179, 0, !dbg !5174
  br i1 %180, label %185, label %181, !dbg !5174

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %182, metadata !5000, metadata !DIExpression()), !dbg !5176
  %183 = icmp slt i32 %182, 0, !dbg !5177
  %184 = add i32 %182, %29, !dbg !5175
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5179
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5180

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5181
  call void @llvm.dbg.value(metadata i32 %188, metadata !5004, metadata !DIExpression()), !dbg !5182
  %189 = icmp slt i32 %188, 0, !dbg !5183
  %190 = add i32 %29, 1, !dbg !5181
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %192, metadata !4992, metadata !DIExpression()), !dbg !5065
  %193 = icmp sgt i32 %76, -1, !dbg !5186
  br i1 %193, label %194, label %196, !dbg !5188

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5189
  call void @llvm.dbg.value(metadata i32 %195, metadata !5007, metadata !DIExpression()), !dbg !5191
  br label %241, !dbg !5192

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %197, metadata !5007, metadata !DIExpression()), !dbg !5191
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4992, metadata !DIExpression()), !dbg !5065
  %199 = load i64, i64* %20, align 8, !dbg !5195
  %200 = trunc i64 %199 to i8, !dbg !5196
  store i8 %200, i8* %10, align 1, !dbg !5197
  call void @llvm.dbg.value(metadata i8* %23, metadata !4993, metadata !DIExpression()), !dbg !5065
  br label %245, !dbg !5198

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5199
  %203 = icmp eq i24 %202, 0, !dbg !5199
  %204 = trunc i24 %75 to i8, !dbg !5201
  %205 = shl i8 %204, 1, !dbg !5201
  %206 = and i8 %205, 32, !dbg !5201
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5201
  call void @llvm.dbg.value(metadata i8 %207, metadata !4994, metadata !DIExpression()), !dbg !5065
  %208 = load i64, i64* %20, align 8, !dbg !5202
  call void @llvm.dbg.value(metadata i64 %208, metadata !4930, metadata !DIExpression()), !dbg !5051
  %209 = icmp slt i64 %208, 0, !dbg !5203
  br i1 %209, label %210, label %212, !dbg !5205

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4994, metadata !DIExpression()), !dbg !5065
  %211 = sub nsw i64 0, %208, !dbg !5206
  store i64 %211, i64* %20, align 8, !dbg !5208
  br label %212, !dbg !5209

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5065
  call void @llvm.dbg.value(metadata i8 %213, metadata !4994, metadata !DIExpression()), !dbg !5065
  %214 = load i64, i64* %20, align 8, !dbg !5210
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %215, metadata !4992, metadata !DIExpression()), !dbg !5065
  br label %216, !dbg !5212

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5213
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5214
  call void @llvm.dbg.value(metadata i8* %218, metadata !4992, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8 %217, metadata !4994, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.label(metadata !5050), !dbg !5215
  %219 = icmp sgt i32 %76, -1, !dbg !5216
  br i1 %219, label %222, label %220, !dbg !5217

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5218
  br label %245, !dbg !5217

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5220
  %224 = sub i32 %22, %223, !dbg !5220
  call void @llvm.dbg.value(metadata i32 %224, metadata !5009, metadata !DIExpression()), !dbg !5221
  %225 = load i24, i24* %15, align 8, !dbg !5222
  %226 = and i24 %225, -65, !dbg !5222
  store i24 %226, i24* %15, align 8, !dbg !5222
  %227 = icmp ugt i32 %76, %224, !dbg !5223
  br i1 %227, label %228, label %245, !dbg !5225

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5226
  store i32 %229, i32* %16, align 4, !dbg !5228
  br label %245, !dbg !5229

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5230
  %232 = icmp eq i8* %231, null, !dbg !5232
  br i1 %232, label %245, label %233, !dbg !5233

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5234
  %235 = zext i32 %234 to i64, !dbg !5234
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5236
  call void @llvm.dbg.value(metadata i8* %236, metadata !4992, metadata !DIExpression()), !dbg !5065
  %237 = load i24, i24* %15, align 8, !dbg !5237
  %238 = or i24 %237, 1048576, !dbg !5237
  store i24 %238, i24* %15, align 8, !dbg !5237
  store i8 120, i8* %21, align 1, !dbg !5238
  br label %216, !dbg !5239

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5240
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5243
  br label %363, !dbg !5244

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5245
  call void @llvm.dbg.value(metadata i32 %242, metadata !5007, metadata !DIExpression()), !dbg !5191
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5246
  call void @llvm.dbg.value(metadata i32 -1, metadata !4991, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i32 %29, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %192, metadata !4992, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8* %243, metadata !4993, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8 0, metadata !4994, metadata !DIExpression()), !dbg !5065
  %244 = icmp eq i8* %192, null, !dbg !5247
  br i1 %244, label %363, label %245, !dbg !5249, !llvm.loop !5061

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5218
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5065
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5065
  %250 = zext i8 %249 to i32, !dbg !5250
  %251 = icmp eq i8 %249, 0, !dbg !5252
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  call void @llvm.dbg.value(metadata i32 undef, metadata !5012, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  call void @llvm.dbg.value(metadata i32 undef, metadata !5012, metadata !DIExpression()), !dbg !5065
  %252 = icmp sgt i32 %58, 0, !dbg !5253
  br i1 %252, label %253, label %302, !dbg !5254

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5218
  %255 = icmp eq i24 %254, 0, !dbg !5218
  %256 = ptrtoint i8* %248 to i32, !dbg !5255
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  %257 = ptrtoint i8* %247 to i32, !dbg !5255
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  %258 = xor i1 %251, true, !dbg !5256
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  %259 = sext i1 %258 to i32, !dbg !5256
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  %260 = lshr i24 %246, 19, !dbg !5257
  %261 = and i24 %260, 1, !dbg !5257
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5257
  %263 = zext i24 %262 to i32, !dbg !5257
  %264 = add i32 %257, %259, !dbg !5257
  %265 = add i32 %256, %263, !dbg !5257
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  %266 = and i24 %246, 4194304, !dbg !5258
  %267 = icmp eq i24 %266, 0, !dbg !5258
  %268 = load i32, i32* %16, align 4, !dbg !5260
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5065
  call void @llvm.dbg.value(metadata i32 undef, metadata !5012, metadata !DIExpression()), !dbg !5065
  %269 = load i32, i32* %17, align 8, !dbg !5261
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5261
  call void @llvm.dbg.value(metadata i32 undef, metadata !5012, metadata !DIExpression()), !dbg !5065
  %271 = add i32 %264, %58, !dbg !5261
  %272 = add i32 %265, %268, !dbg !5261
  %273 = add i32 %272, %270, !dbg !5262
  %274 = sub i32 %271, %273, !dbg !5262
  call void @llvm.dbg.value(metadata i32 %274, metadata !4990, metadata !DIExpression()), !dbg !5065
  %275 = and i24 %246, 4, !dbg !5263
  %276 = icmp eq i24 %275, 0, !dbg !5263
  br i1 %276, label %277, label %302, !dbg !5264

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5014, metadata !DIExpression()), !dbg !5265
  %278 = and i24 %246, 64, !dbg !5266
  %279 = icmp eq i24 %278, 0, !dbg !5266
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5267
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5267
  %282 = select i1 %279, i32 32, i32 48, !dbg !5267
  br i1 %280, label %287, label %283, !dbg !5267

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5268
  call void @llvm.dbg.value(metadata i32 %284, metadata !5019, metadata !DIExpression()), !dbg !5269
  %285 = icmp slt i32 %284, 0, !dbg !5270
  %286 = add i32 %29, 1, !dbg !5268
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5065
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %290, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8 undef, metadata !5014, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8 %288, metadata !4994, metadata !DIExpression()), !dbg !5065
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5272
  %292 = add i32 %291, -1, !dbg !5272
  br label %293, !dbg !5272

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5273
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %295, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %294, metadata !4990, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i32 %294, metadata !4990, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5065
  %296 = icmp sgt i32 %294, 0, !dbg !5274
  br i1 %296, label %297, label %302, !dbg !5272

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5275
  call void @llvm.dbg.value(metadata i32 %298, metadata !4990, metadata !DIExpression()), !dbg !5065
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %299, metadata !5025, metadata !DIExpression()), !dbg !5277
  %300 = icmp slt i32 %299, 0, !dbg !5278
  %301 = add i32 %295, 1, !dbg !5276
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %300, label %361, label %293, !llvm.loop !5280

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5065
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5065
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %305, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %304, metadata !4990, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.value(metadata i8 %303, metadata !4994, metadata !DIExpression()), !dbg !5065
  %306 = icmp eq i8 %303, 0, !dbg !5282
  br i1 %306, label %312, label %307, !dbg !5283

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5284
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5285
  call void @llvm.dbg.value(metadata i32 %309, metadata !5028, metadata !DIExpression()), !dbg !5286
  %310 = icmp slt i32 %309, 0, !dbg !5287
  %311 = add i32 %305, 1, !dbg !5285
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %313, metadata !4929, metadata !DIExpression()), !dbg !5051
  %314 = lshr i24 %246, 20, !dbg !5289
  %315 = lshr i24 %246, 19, !dbg !5290
  %316 = or i24 %314, %315, !dbg !5291
  %317 = and i24 %316, 1, !dbg !5291
  %318 = icmp eq i24 %317, 0, !dbg !5291
  br i1 %318, label %323, label %319, !dbg !5292

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %320, metadata !5032, metadata !DIExpression()), !dbg !5294
  %321 = icmp slt i32 %320, 0, !dbg !5295
  %322 = add i32 %313, 1, !dbg !5293
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %324, metadata !4929, metadata !DIExpression()), !dbg !5051
  %325 = and i24 %246, 1048576, !dbg !5297
  %326 = icmp eq i24 %325, 0, !dbg !5297
  br i1 %326, label %333, label %327, !dbg !5298

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5299
  %329 = zext i8 %328 to i32, !dbg !5299
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5299
  call void @llvm.dbg.value(metadata i32 %330, metadata !5038, metadata !DIExpression()), !dbg !5300
  %331 = icmp slt i32 %330, 0, !dbg !5301
  %332 = add i32 %324, 1, !dbg !5299
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %334, metadata !4929, metadata !DIExpression()), !dbg !5051
  %335 = load i32, i32* %16, align 4, !dbg !5303
  call void @llvm.dbg.value(metadata i32 %335, metadata !5013, metadata !DIExpression()), !dbg !5065
  br label %336, !dbg !5304

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5305
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %338, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %337, metadata !5013, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5065
  %339 = icmp sgt i32 %337, 0, !dbg !5306
  br i1 %339, label %340, label %345, !dbg !5304

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5307
  call void @llvm.dbg.value(metadata i32 %341, metadata !5013, metadata !DIExpression()), !dbg !5065
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5308
  call void @llvm.dbg.value(metadata i32 %342, metadata !5042, metadata !DIExpression()), !dbg !5309
  %343 = icmp slt i32 %342, 0, !dbg !5310
  %344 = add i32 %338, 1, !dbg !5308
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %343, label %361, label %336, !llvm.loop !5312

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %346, metadata !5045, metadata !DIExpression()), !dbg !5315
  %347 = icmp slt i32 %346, 0, !dbg !5316
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %349, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %304, metadata !4990, metadata !DIExpression()), !dbg !5065
  %350 = icmp sgt i32 %304, 0, !dbg !5318
  br i1 %350, label %351, label %363, !dbg !5319

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5319
  %353 = add i32 %352, %338, !dbg !5319
  br label %354, !dbg !5319

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %355, metadata !4990, metadata !DIExpression()), !dbg !5065
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5320
  call void @llvm.dbg.value(metadata i32 %356, metadata !5047, metadata !DIExpression()), !dbg !5321
  %357 = icmp slt i32 %356, 0, !dbg !5322
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5324
  call void @llvm.dbg.value(metadata i32 undef, metadata !4929, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %359, metadata !4990, metadata !DIExpression()), !dbg !5065
  %360 = icmp sgt i32 %355, 1, !dbg !5318
  br i1 %360, label %354, label %363, !dbg !5319, !llvm.loop !5325

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5062
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %364, metadata !4929, metadata !DIExpression()), !dbg !5051
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5062
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5051
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5327
  ret i32 %366, !dbg !5327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5328 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5332, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i8* %1, metadata !5333, metadata !DIExpression()), !dbg !5334
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5335
  store i24 0, i24* %3, align 4, !dbg !5335
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5335
  store i8 0, i8* %4, align 1, !dbg !5335
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5335
  store i32 0, i32* %5, align 4, !dbg !5335
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5335
  store i32 0, i32* %6, align 4, !dbg !5335
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5336
  call void @llvm.dbg.value(metadata i8* %7, metadata !5333, metadata !DIExpression()), !dbg !5334
  %8 = load i8, i8* %7, align 1, !dbg !5337
  %9 = icmp eq i8 %8, 37, !dbg !5339
  br i1 %9, label %10, label %12, !dbg !5340

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5341
  call void @llvm.dbg.value(metadata i8* %11, metadata !5333, metadata !DIExpression()), !dbg !5334
  store i8 37, i8* %4, align 1, !dbg !5343
  br label %18, !dbg !5344

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5345
  call void @llvm.dbg.value(metadata i8* %13, metadata !5333, metadata !DIExpression()), !dbg !5334
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5346
  call void @llvm.dbg.value(metadata i8* %14, metadata !5333, metadata !DIExpression()), !dbg !5334
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5347
  call void @llvm.dbg.value(metadata i8* %15, metadata !5333, metadata !DIExpression()), !dbg !5334
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5348
  call void @llvm.dbg.value(metadata i8* %16, metadata !5333, metadata !DIExpression()), !dbg !5334
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5349
  call void @llvm.dbg.value(metadata i8* %17, metadata !5333, metadata !DIExpression()), !dbg !5334
  br label %18, !dbg !5350

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5334
  ret i8* %19, !dbg !5351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5352 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5356, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i8* %1, metadata !5357, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i8* %2, metadata !5358, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i8* %3, metadata !5359, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i32 0, metadata !5360, metadata !DIExpression()), !dbg !5363
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5364

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5365
  call void @llvm.dbg.value(metadata i32 %9, metadata !5360, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i8* %8, metadata !5358, metadata !DIExpression()), !dbg !5363
  %10 = icmp ult i8* %8, %3, !dbg !5366
  br i1 %10, label %11, label %13, !dbg !5367

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5368
  br label %17, !dbg !5367

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5369

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5370
  %16 = icmp eq i8 %15, 0, !dbg !5369
  br i1 %16, label %24, label %17, !dbg !5364

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5368
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5371
  call void @llvm.dbg.value(metadata i8* %19, metadata !5358, metadata !DIExpression()), !dbg !5363
  %20 = zext i8 %18 to i32, !dbg !5372
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %21, metadata !5361, metadata !DIExpression()), !dbg !5374
  %22 = icmp slt i32 %21, 0, !dbg !5375
  %23 = add i32 %9, 1, !dbg !5377
  call void @llvm.dbg.value(metadata i32 undef, metadata !5360, metadata !DIExpression()), !dbg !5363
  br i1 %22, label %24, label %7, !llvm.loop !5378

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5363
  ret i32 %25, !dbg !5380
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5381 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5385, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5386, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8* %2, metadata !5387, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8* %3, metadata !5388, metadata !DIExpression()), !dbg !5395
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5396
  %6 = load i8, i8* %5, align 1, !dbg !5396
  %7 = zext i8 %6 to i32, !dbg !5397
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5398
  %9 = icmp eq i32 %8, 0, !dbg !5398
  call void @llvm.dbg.value(metadata i1 %9, metadata !5389, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5395
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %10, metadata !5390, metadata !DIExpression()), !dbg !5395
  %11 = ptrtoint i8* %3 to i32, !dbg !5400
  %12 = ptrtoint i8* %2 to i32, !dbg !5400
  %13 = sub i32 %11, %12, !dbg !5400
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5401
  call void @llvm.dbg.value(metadata i8* %14, metadata !5392, metadata !DIExpression()), !dbg !5395
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5402

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5395
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5385, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8* %18, metadata !5392, metadata !DIExpression()), !dbg !5395
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5403
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5404
  call void @llvm.dbg.value(metadata i32 %25, metadata !5393, metadata !DIExpression()), !dbg !5405
  %26 = icmp ult i32 %25, 10, !dbg !5406
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5407
  %28 = add i32 %27, %25, !dbg !5405
  %29 = trunc i32 %28 to i8, !dbg !5407
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5408
  call void @llvm.dbg.value(metadata i8* %30, metadata !5392, metadata !DIExpression()), !dbg !5395
  store i8 %29, i8* %30, align 1, !dbg !5409
  call void @llvm.dbg.value(metadata i64 %22, metadata !5385, metadata !DIExpression()), !dbg !5395
  %31 = icmp uge i64 %19, %15, !dbg !5410
  %32 = icmp ugt i8* %30, %2, !dbg !5411
  %33 = and i1 %31, %32, !dbg !5411
  br i1 %33, label %17, label %34, !dbg !5412, !llvm.loop !5413

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5415
  %36 = load i24, i24* %35, align 4, !dbg !5415
  %37 = and i24 %36, 32, !dbg !5415
  %38 = icmp eq i24 %37, 0, !dbg !5415
  br i1 %38, label %44, label %39, !dbg !5417

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5418

40:                                               ; preds = %39
  br label %41, !dbg !5420

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5424
  store i24 %43, i24* %35, align 4, !dbg !5424
  br label %44, !dbg !5425

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5425
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5426 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5432, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i8* %1, metadata !5433, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i32 %2, metadata !5434, metadata !DIExpression()), !dbg !5435
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5436
  %5 = load i24, i24* %4, align 4, !dbg !5436
  %6 = lshr i24 %5, 11, !dbg !5436
  %7 = and i24 %6, 15, !dbg !5436
  %8 = zext i24 %7 to i32, !dbg !5436
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5437

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5438
  store i32 %2, i32* %10, align 4, !dbg !5440
  br label %28, !dbg !5441

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5442
  store i8 %12, i8* %1, align 1, !dbg !5443
  br label %28, !dbg !5444

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5445
  %15 = bitcast i8* %1 to i16*, !dbg !5446
  store i16 %14, i16* %15, align 2, !dbg !5447
  br label %28, !dbg !5448

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5449
  store i32 %2, i32* %17, align 4, !dbg !5450
  br label %28, !dbg !5451

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5452
  %20 = bitcast i8* %1 to i64*, !dbg !5453
  store i64 %19, i64* %20, align 8, !dbg !5454
  br label %28, !dbg !5455

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5456
  %23 = bitcast i8* %1 to i64*, !dbg !5457
  store i64 %22, i64* %23, align 8, !dbg !5458
  br label %28, !dbg !5459

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5460
  store i32 %2, i32* %25, align 4, !dbg !5461
  br label %28, !dbg !5462

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5463
  store i32 %2, i32* %27, align 4, !dbg !5464
  br label %28, !dbg !5465

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5466
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5470, metadata !DIExpression()), !dbg !5471
  %2 = add i32 %0, -65, !dbg !5472
  %3 = icmp ult i32 %2, 26, !dbg !5473
  %4 = zext i1 %3 to i32, !dbg !5473
  ret i32 %4, !dbg !5474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5475 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5479, metadata !DIExpression()), !dbg !5480
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5481

2:                                                ; preds = %1
  br label %4, !dbg !5482

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5484

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5485
  ret i32 %5, !dbg !5486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5487 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5489, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %1, metadata !5490, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5492
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5493

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5491, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %5, metadata !5490, metadata !DIExpression()), !dbg !5492
  %6 = load i8, i8* %5, align 1, !dbg !5494
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5496

7:                                                ; preds = %4
  br label %11, !dbg !5497

8:                                                ; preds = %4
  br label %11, !dbg !5499

9:                                                ; preds = %4
  br label %11, !dbg !5500

10:                                               ; preds = %4
  br label %11, !dbg !5501

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5502
  %14 = or i24 %13, %12, !dbg !5502
  store i24 %14, i24* %3, align 4, !dbg !5502
  call void @llvm.dbg.value(metadata i8 poison, metadata !5491, metadata !DIExpression()), !dbg !5492
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5490, metadata !DIExpression()), !dbg !5492
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5491, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %15, metadata !5490, metadata !DIExpression()), !dbg !5492
  %17 = load i24, i24* %3, align 4, !dbg !5503
  %18 = and i24 %17, 68, !dbg !5505
  %19 = icmp eq i24 %18, 68, !dbg !5505
  br i1 %19, label %20, label %22, !dbg !5505

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5506
  store i24 %21, i24* %3, align 4, !dbg !5506
  br label %22, !dbg !5508

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5509
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5510 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5512, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8* %1, metadata !5513, metadata !DIExpression()), !dbg !5516
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5517
  %5 = load i24, i24* %4, align 4, !dbg !5518
  %6 = or i24 %5, 128, !dbg !5518
  store i24 %6, i24* %4, align 4, !dbg !5518
  call void @llvm.dbg.value(metadata i8* %1, metadata !5513, metadata !DIExpression()), !dbg !5516
  %7 = load i8, i8* %1, align 1, !dbg !5519
  %8 = icmp eq i8 %7, 42, !dbg !5521
  br i1 %8, label %9, label %12, !dbg !5522

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5523
  store i24 %10, i24* %4, align 4, !dbg !5523
  call void @llvm.dbg.value(metadata i8* %1, metadata !5513, metadata !DIExpression()), !dbg !5516
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5525
  call void @llvm.dbg.value(metadata i8* %11, metadata !5513, metadata !DIExpression()), !dbg !5516
  store i8* %11, i8** %3, align 4, !dbg !5525
  br label %29, !dbg !5526

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5514, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8** %3, metadata !5513, metadata !DIExpression(DW_OP_deref)), !dbg !5516
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5527
  call void @llvm.dbg.value(metadata i32 %13, metadata !5515, metadata !DIExpression()), !dbg !5516
  %14 = load i8*, i8** %3, align 4, !dbg !5528
  call void @llvm.dbg.value(metadata i8* %14, metadata !5513, metadata !DIExpression()), !dbg !5516
  %15 = icmp eq i8* %14, %1, !dbg !5530
  br i1 %15, label %29, label %16, !dbg !5531

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5532
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5534
  store i32 %13, i32* %18, align 4, !dbg !5535
  %19 = lshr i32 %13, 31, !dbg !5536
  %20 = lshr i24 %17, 1, !dbg !5537
  %21 = and i24 %20, 1, !dbg !5537
  %22 = zext i24 %21 to i32, !dbg !5537
  %23 = or i32 %19, %22, !dbg !5537
  %24 = trunc i32 %23 to i24, !dbg !5537
  %25 = shl nuw nsw i24 %24, 1, !dbg !5537
  %26 = and i24 %17, -131, !dbg !5537
  %27 = or i24 %26, 128, !dbg !5537
  %28 = or i24 %25, %27, !dbg !5537
  store i24 %28, i24* %4, align 4, !dbg !5537
  br label %29, !dbg !5538

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5516
  ret i8* %30, !dbg !5539
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5540 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5542, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i8* %1, metadata !5543, metadata !DIExpression()), !dbg !5545
  %4 = load i8, i8* %1, align 1, !dbg !5546
  %5 = icmp eq i8 %4, 46, !dbg !5547
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5548
  %7 = load i24, i24* %6, align 4, !dbg !5549
  %8 = select i1 %5, i24 512, i24 0, !dbg !5549
  %9 = and i24 %7, -513, !dbg !5549
  %10 = or i24 %9, %8, !dbg !5549
  store i24 %10, i24* %6, align 4, !dbg !5549
  br i1 %5, label %11, label %32, !dbg !5550

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5543, metadata !DIExpression()), !dbg !5545
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5551
  call void @llvm.dbg.value(metadata i8* %12, metadata !5543, metadata !DIExpression()), !dbg !5545
  store i8* %12, i8** %3, align 4, !dbg !5551
  %13 = load i8, i8* %12, align 1, !dbg !5552
  %14 = icmp eq i8 %13, 42, !dbg !5554
  br i1 %14, label %15, label %18, !dbg !5555

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5556
  store i24 %16, i24* %6, align 4, !dbg !5556
  call void @llvm.dbg.value(metadata i8* %12, metadata !5543, metadata !DIExpression()), !dbg !5545
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %17, metadata !5543, metadata !DIExpression()), !dbg !5545
  store i8* %17, i8** %3, align 4, !dbg !5558
  br label %32, !dbg !5559

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5543, metadata !DIExpression(DW_OP_deref)), !dbg !5545
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5560
  call void @llvm.dbg.value(metadata i32 %19, metadata !5544, metadata !DIExpression()), !dbg !5545
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5561
  store i32 %19, i32* %20, align 4, !dbg !5562
  %21 = lshr i32 %19, 31, !dbg !5563
  %22 = load i24, i24* %6, align 4, !dbg !5564
  %23 = lshr i24 %22, 1, !dbg !5564
  %24 = and i24 %23, 1, !dbg !5564
  %25 = zext i24 %24 to i32, !dbg !5564
  %26 = or i32 %21, %25, !dbg !5564
  %27 = trunc i32 %26 to i24, !dbg !5564
  %28 = shl nuw nsw i24 %27, 1, !dbg !5564
  %29 = and i24 %22, -3, !dbg !5564
  %30 = or i24 %28, %29, !dbg !5564
  store i24 %30, i24* %6, align 4, !dbg !5564
  %31 = load i8*, i8** %3, align 4, !dbg !5565
  call void @llvm.dbg.value(metadata i8* %31, metadata !5543, metadata !DIExpression()), !dbg !5545
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5545
  ret i8* %33, !dbg !5566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5567 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5569, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.value(metadata i8* %1, metadata !5570, metadata !DIExpression()), !dbg !5571
  %3 = load i8, i8* %1, align 1, !dbg !5572
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5573

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5574
  call void @llvm.dbg.value(metadata i8* %5, metadata !5570, metadata !DIExpression()), !dbg !5571
  %6 = load i8, i8* %5, align 1, !dbg !5577
  %7 = icmp eq i8 %6, 104, !dbg !5578
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5579
  %9 = load i24, i24* %8, align 4, !dbg !5579
  %10 = and i24 %9, -30721, !dbg !5579
  br i1 %7, label %11, label %14, !dbg !5580

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5581
  store i24 %12, i24* %8, align 4, !dbg !5581
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5583
  call void @llvm.dbg.value(metadata i8* %13, metadata !5570, metadata !DIExpression()), !dbg !5571
  br label %56, !dbg !5584

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5585
  store i24 %15, i24* %8, align 4, !dbg !5585
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5587
  call void @llvm.dbg.value(metadata i8* %17, metadata !5570, metadata !DIExpression()), !dbg !5571
  %18 = load i8, i8* %17, align 1, !dbg !5589
  %19 = icmp eq i8 %18, 108, !dbg !5590
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5591
  %21 = load i24, i24* %20, align 4, !dbg !5591
  %22 = and i24 %21, -30721, !dbg !5591
  br i1 %19, label %23, label %26, !dbg !5592

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5593
  store i24 %24, i24* %20, align 4, !dbg !5593
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5595
  call void @llvm.dbg.value(metadata i8* %25, metadata !5570, metadata !DIExpression()), !dbg !5571
  br label %56, !dbg !5596

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5597
  store i24 %27, i24* %20, align 4, !dbg !5597
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5599
  %30 = load i24, i24* %29, align 4, !dbg !5600
  %31 = and i24 %30, -30721, !dbg !5600
  %32 = or i24 %31, 10240, !dbg !5600
  store i24 %32, i24* %29, align 4, !dbg !5600
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5601
  call void @llvm.dbg.value(metadata i8* %33, metadata !5570, metadata !DIExpression()), !dbg !5571
  br label %56, !dbg !5602

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5603
  %36 = load i24, i24* %35, align 4, !dbg !5604
  %37 = and i24 %36, -30721, !dbg !5604
  %38 = or i24 %37, 12288, !dbg !5604
  store i24 %38, i24* %35, align 4, !dbg !5604
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5605
  call void @llvm.dbg.value(metadata i8* %39, metadata !5570, metadata !DIExpression()), !dbg !5571
  br label %56, !dbg !5606

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5607
  %42 = load i24, i24* %41, align 4, !dbg !5608
  %43 = and i24 %42, -30721, !dbg !5608
  %44 = or i24 %43, 14336, !dbg !5608
  store i24 %44, i24* %41, align 4, !dbg !5608
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5609
  call void @llvm.dbg.value(metadata i8* %45, metadata !5570, metadata !DIExpression()), !dbg !5571
  br label %56, !dbg !5610

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5611
  %48 = load i24, i24* %47, align 4, !dbg !5612
  %49 = and i24 %48, -30723, !dbg !5612
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5613
  call void @llvm.dbg.value(metadata i8* %50, metadata !5570, metadata !DIExpression()), !dbg !5571
  %51 = or i24 %49, 16386, !dbg !5614
  store i24 %51, i24* %47, align 4, !dbg !5614
  br label %56, !dbg !5615

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5616
  %54 = load i24, i24* %53, align 4, !dbg !5617
  %55 = and i24 %54, -30721, !dbg !5617
  store i24 %55, i24* %53, align 4, !dbg !5617
  br label %56, !dbg !5618

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5570, metadata !DIExpression()), !dbg !5571
  ret i8* %57, !dbg !5619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5620 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5622, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata i8* %1, metadata !5623, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata i8 0, metadata !5624, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata i8* %1, metadata !5623, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5627
  %3 = load i8, i8* %1, align 1, !dbg !5628
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5629
  store i8 %3, i8* %4, align 1, !dbg !5630
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5631

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5632

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5633
  %9 = load i24, i24* %8, align 4, !dbg !5633
  %10 = and i24 %9, -458753, !dbg !5633
  %11 = or i24 %10, %7, !dbg !5633
  call void @llvm.dbg.label(metadata !5625), !dbg !5634
  %12 = and i24 %9, 30720, !dbg !5635
  %13 = icmp eq i24 %12, 16384, !dbg !5635
  %14 = zext i1 %13 to i24, !dbg !5637
  %15 = or i24 %11, %14, !dbg !5637
  %16 = icmp eq i8 %3, 99, !dbg !5638
  br i1 %16, label %17, label %43, !dbg !5640

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5641
  %19 = icmp ne i24 %18, 0, !dbg !5641
  call void @llvm.dbg.value(metadata i1 %19, metadata !5624, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5627
  br label %43, !dbg !5643

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5644
  %22 = load i24, i24* %21, align 4, !dbg !5645
  %23 = and i24 %22, -458753, !dbg !5645
  %24 = or i24 %23, 262144, !dbg !5645
  call void @llvm.dbg.value(metadata i8 1, metadata !5624, metadata !DIExpression()), !dbg !5627
  br label %43, !dbg !5646

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5649
  %27 = load i24, i24* %26, align 4, !dbg !5650
  %28 = and i24 %27, -458753, !dbg !5650
  %29 = or i24 %28, 196608, !dbg !5650
  %30 = and i24 %27, 30720, !dbg !5651
  %31 = icmp eq i24 %30, 16384, !dbg !5651
  br label %43, !dbg !5653

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5654
  %34 = load i24, i24* %33, align 4, !dbg !5655
  %35 = and i24 %34, -458753, !dbg !5655
  %36 = or i24 %35, 196608, !dbg !5655
  %37 = and i24 %34, 30720, !dbg !5656
  %38 = icmp ne i24 %37, 0, !dbg !5656
  br label %43, !dbg !5658

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5659
  %41 = load i24, i24* %40, align 4, !dbg !5660
  %42 = or i24 %41, 1, !dbg !5660
  br label %43, !dbg !5661

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5662
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5663
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5664
  call void @llvm.dbg.value(metadata i8* %48, metadata !5623, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata i8 poison, metadata !5624, metadata !DIExpression()), !dbg !5627
  %49 = lshr i24 %44, 1, !dbg !5662
  %50 = and i24 %49, 1, !dbg !5662
  %51 = zext i24 %50 to i32, !dbg !5662
  %52 = or i32 %51, %47, !dbg !5662
  %53 = trunc i32 %52 to i24, !dbg !5662
  %54 = shl nuw nsw i24 %53, 1, !dbg !5662
  %55 = and i24 %44, -3, !dbg !5662
  %56 = or i24 %54, %55, !dbg !5662
  store i24 %56, i24* %46, align 4, !dbg !5662
  ret i8* %48, !dbg !5665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5666 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5671, metadata !DIExpression()), !dbg !5674
  %2 = load i8*, i8** %0, align 4, !dbg !5675
  call void @llvm.dbg.value(metadata i8* %2, metadata !5672, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 0, metadata !5673, metadata !DIExpression()), !dbg !5674
  %3 = load i8, i8* %2, align 1, !dbg !5676
  %4 = zext i8 %3 to i32, !dbg !5677
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5678
  %6 = icmp eq i32 %5, 0, !dbg !5679
  br i1 %6, label %19, label %7, !dbg !5679

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5673, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i8* %10, metadata !5672, metadata !DIExpression()), !dbg !5674
  %11 = mul i32 %9, 10, !dbg !5680
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5682
  call void @llvm.dbg.value(metadata i8* %12, metadata !5672, metadata !DIExpression()), !dbg !5674
  %13 = add i32 %11, -48, !dbg !5683
  %14 = add i32 %13, %8, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %14, metadata !5673, metadata !DIExpression()), !dbg !5674
  %15 = load i8, i8* %12, align 1, !dbg !5676
  %16 = zext i8 %15 to i32, !dbg !5677
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5678
  %18 = icmp eq i32 %17, 0, !dbg !5679
  br i1 %18, label %19, label %7, !dbg !5679, !llvm.loop !5685

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5674
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5674
  store i8* %20, i8** %0, align 4, !dbg !5687
  ret i32 %21, !dbg !5688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5691, metadata !DIExpression()), !dbg !5692
  %2 = add i32 %0, -48, !dbg !5693
  %3 = icmp ult i32 %2, 10, !dbg !5694
  %4 = zext i1 %3 to i32, !dbg !5694
  ret i32 %4, !dbg !5695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5696 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,91\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,2048\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_AEROCORE2\0A\09.equ\09CONFIG_BOARD_96B_AEROCORE2,1\0A\09.type\09CONFIG_BOARD_96B_AEROCORE2,%object", ""() #24, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #24, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F427XX\0A\09.equ\09CONFIG_SOC_STM32F427XX,1\0A\09.type\09CONFIG_SOC_STM32F427XX,%object", ""() #24, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,24000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6254, !srcloc !6255
  ret void, !dbg !6256
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6257 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6259, metadata !DIExpression()), !dbg !6261
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6262
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6263
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6264, !srcloc !6273
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6264
  call void @llvm.dbg.value(metadata i32 %3, metadata !6270, metadata !DIExpression()) #24, !dbg !6274
  call void @llvm.dbg.value(metadata i32 undef, metadata !6271, metadata !DIExpression()) #24, !dbg !6274
  call void @llvm.dbg.value(metadata i32 %3, metadata !6260, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i32 %3, metadata !6275, metadata !DIExpression()) #24, !dbg !6280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6282, !srcloc !6283
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6284
  ret i32 0, !dbg !6285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6286 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6288
  %2 = or i32 %1, 512, !dbg !6288
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6288
  ret void, !dbg !6289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6291
  %2 = or i32 %1, 1024, !dbg !6291
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6291
  ret void, !dbg !6292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6295, metadata !DIExpression()), !dbg !6296
  ret i32 0, !dbg !6297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6347, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6348, metadata !DIExpression()), !dbg !6349
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6352 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6369, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6370, metadata !DIExpression()), !dbg !6372
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6373
  %4 = load i32, i32* %3, align 4, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %4, metadata !6371, metadata !DIExpression()), !dbg !6372
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6374
  ret void, !dbg !6375
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6376 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6380, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.value(metadata i8* %0, metadata !6381, metadata !DIExpression()), !dbg !6383
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6384
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6384
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6382, metadata !DIExpression()), !dbg !6385
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6385
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6386
  %5 = bitcast i8* %4 to i32*, !dbg !6386
  %6 = load i32, i32* %5, align 4, !dbg !6386
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6387
  store i32 %6, i32* %7, align 4, !dbg !6388
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6389
  unreachable, !dbg !6390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6394, metadata !DIExpression()), !dbg !6395
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6396
  ret void, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6402, metadata !DIExpression()), !dbg !6403
  %2 = icmp sgt i32 %0, -1, !dbg !6404
  br i1 %2, label %3, label %8, !dbg !6406

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6407, !srcloc !6409
  %4 = and i32 %0, 31, !dbg !6410
  %5 = shl nuw i32 1, %4, !dbg !6411
  %6 = lshr i32 %0, 5, !dbg !6412
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6413
  store volatile i32 %5, i32* %7, align 4, !dbg !6414
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6415, !srcloc !6416
  br label %8, !dbg !6417

8:                                                ; preds = %3, %1
  ret void, !dbg !6418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6421, metadata !DIExpression()), !dbg !6422
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6423
  ret void, !dbg !6424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6427, metadata !DIExpression()), !dbg !6428
  %2 = icmp sgt i32 %0, -1, !dbg !6429
  br i1 %2, label %3, label %8, !dbg !6431

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6432
  %5 = shl nuw i32 1, %4, !dbg !6434
  %6 = lshr i32 %0, 5, !dbg !6435
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6436
  store volatile i32 %5, i32* %7, align 4, !dbg !6437
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6438, !srcloc !6442
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6443, !srcloc !6446
  br label %8, !dbg !6447

8:                                                ; preds = %3, %1
  ret void, !dbg !6448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6453, metadata !DIExpression()), !dbg !6454
  %2 = lshr i32 %0, 5, !dbg !6455
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6456
  %4 = load volatile i32, i32* %3, align 4, !dbg !6456
  %5 = and i32 %0, 31, !dbg !6457
  %6 = shl nuw i32 1, %5, !dbg !6457
  %7 = and i32 %4, %6, !dbg !6458
  ret i32 %7, !dbg !6459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6464, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %1, metadata !6465, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %2, metadata !6466, metadata !DIExpression()), !dbg !6467
  %4 = add i32 %1, 1, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %4, metadata !6465, metadata !DIExpression()), !dbg !6467
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6471
  ret void, !dbg !6472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6477, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %1, metadata !6478, metadata !DIExpression()), !dbg !6479
  %3 = trunc i32 %1 to i8, !dbg !6480
  %4 = shl i8 %3, 4, !dbg !6480
  %5 = and i32 %0, 15, !dbg !6482
  %6 = add nsw i32 %5, -4, !dbg !6482
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6482
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6482
  %9 = icmp slt i32 %0, 0, !dbg !6482
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6482
  store volatile i8 %4, i8* %10, align 1, !dbg !6480
  ret void, !dbg !6483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6484 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6486, metadata !DIExpression()), !dbg !6487
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6490 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6492
  tail call void @z_arm_int_exit() #25, !dbg !6493
  ret void, !dbg !6494
}

; Function Attrs: optsize
declare !dbg !6495 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6496 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6498 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6500
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6501
  tail call void @z_bss_zero() #25, !dbg !6502
  tail call void @z_data_copy() #25, !dbg !6503
  tail call void @z_arm_interrupt_init() #25, !dbg !6504
  tail call void @z_cstart() #28, !dbg !6505
  unreachable, !dbg !6505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6506 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6507
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6508, !srcloc !6511
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6512, !srcloc !6515
  ret void, !dbg !6516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6517 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6518
  %2 = and i32 %1, -15728641, !dbg !6518
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6518
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6519, !srcloc !6524
  call void @llvm.dbg.value(metadata i32 %3, metadata !6522, metadata !DIExpression()) #24, !dbg !6525
  %4 = and i32 %3, -5, !dbg !6526
  call void @llvm.dbg.value(metadata i32 %4, metadata !6527, metadata !DIExpression()) #24, !dbg !6532
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6536, !srcloc !6515
  ret void, !dbg !6538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6542, metadata !DIExpression()), !dbg !6543
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6544
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6545
  store i32 %0, i32* %3, align 4, !dbg !6546
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6547
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6548
  store i32 %4, i32* %5, align 4, !dbg !6549
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6550
  %7 = or i32 %6, 268435456, !dbg !6550
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6550
  call void @llvm.dbg.value(metadata i32 0, metadata !6551, metadata !DIExpression()) #24, !dbg !6554
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6556, !srcloc !6557
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6558
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6559
  %10 = load i32, i32* %9, align 4, !dbg !6559
  ret i32 %10, !dbg !6560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6561 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6671, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6672, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i8* %2, metadata !6673, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6674, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i8* %4, metadata !6675, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i8* %5, metadata !6676, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i8* %6, metadata !6677, metadata !DIExpression()), !dbg !6679
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6680
  call void @llvm.dbg.value(metadata i8* %8, metadata !6678, metadata !DIExpression()), !dbg !6679
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6681
  %10 = bitcast i8* %9 to i32*, !dbg !6681
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6682
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6683
  %12 = bitcast i8* %8 to i32*, !dbg !6684
  store i32 %11, i32* %12, align 4, !dbg !6685
  %13 = ptrtoint i8* %4 to i32, !dbg !6686
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6687
  %15 = bitcast i8* %14 to i32*, !dbg !6687
  store i32 %13, i32* %15, align 4, !dbg !6688
  %16 = ptrtoint i8* %5 to i32, !dbg !6689
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6690
  %18 = bitcast i8* %17 to i32*, !dbg !6690
  store i32 %16, i32* %18, align 4, !dbg !6691
  %19 = ptrtoint i8* %6 to i32, !dbg !6692
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6693
  %21 = bitcast i8* %20 to i32*, !dbg !6693
  store i32 %19, i32* %21, align 4, !dbg !6694
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6695
  %23 = bitcast i8* %22 to i32*, !dbg !6695
  store i32 16777216, i32* %23, align 4, !dbg !6696
  %24 = ptrtoint i8* %8 to i32, !dbg !6697
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6698
  store i32 %24, i32* %25, align 8, !dbg !6699
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6700
  store i32 0, i32* %26, align 4, !dbg !6701
  ret void, !dbg !6702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6708, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i32 %1, metadata !6709, metadata !DIExpression()), !dbg !6714
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6715
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6710, metadata !DIExpression()), !dbg !6714
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6716
  br i1 %4, label %19, label %5, !dbg !6718

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6713, metadata !DIExpression()), !dbg !6714
  %6 = icmp eq i32 %0, -22, !dbg !6719
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6719
  %8 = load i32, i32* %7, align 4, !dbg !6719
  br i1 %6, label %16, label %9, !dbg !6721

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6719
  %11 = icmp ule i32 %10, %0, !dbg !6719
  %12 = icmp ugt i32 %8, %0, !dbg !6719
  %13 = and i1 %12, %11, !dbg !6719
  %14 = icmp ugt i32 %8, %1, !dbg !6719
  %15 = and i1 %14, %13, !dbg !6719
  br i1 %15, label %18, label %19, !dbg !6719

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6719
  br i1 %17, label %18, label %19, !dbg !6721

18:                                               ; preds = %9, %16
  br label %19, !dbg !6722

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6714
  ret i32 %20, !dbg !6724
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %1, metadata !6730, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6731, metadata !DIExpression()), !dbg !6732
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6733
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6734
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6735, !srcloc !6736
  unreachable, !dbg !6737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6738 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6756, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %1, metadata !6757, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %2, metadata !6758, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6759, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6760, metadata !DIExpression()), !dbg !6766
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6767
  %9 = and i32 %8, 511, !dbg !6768
  call void @llvm.dbg.value(metadata i32 %9, metadata !6761, metadata !DIExpression()), !dbg !6766
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6769
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6769
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6770
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6770
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6765, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 0, metadata !6772, metadata !DIExpression()) #24, !dbg !6775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6777, !srcloc !6778
  call void @llvm.dbg.value(metadata i8* %6, metadata !6763, metadata !DIExpression(DW_OP_deref)), !dbg !6766
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6779
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %5, metadata !6762, metadata !DIExpression(DW_OP_deref)), !dbg !6766
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %12, metadata !6760, metadata !DIExpression()), !dbg !6766
  %13 = load i8, i8* %5, align 1, !dbg !6781, !range !6783
  call void @llvm.dbg.value(metadata i8 %13, metadata !6762, metadata !DIExpression()), !dbg !6766
  %14 = icmp eq i8 %13, 0, !dbg !6781
  br i1 %14, label %15, label %32, !dbg !6784

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6785
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6786
  %18 = load i8, i8* %6, align 1, !dbg !6787, !range !6783
  call void @llvm.dbg.value(metadata i8 %18, metadata !6763, metadata !DIExpression()), !dbg !6766
  %19 = icmp eq i8 %18, 0, !dbg !6787
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6789
  %21 = load i32, i32* %20, align 4, !dbg !6789
  br i1 %19, label %27, label %22, !dbg !6790

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6791
  %24 = icmp eq i32 %23, 0, !dbg !6794
  br i1 %24, label %25, label %31, !dbg !6795

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6796
  br label %29, !dbg !6798

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6799
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6789
  br label %31, !dbg !6801

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6801
  br label %32, !dbg !6802

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6802
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6802
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6802
  ret void, !dbg !6802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6808, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32 %1, metadata !6809, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32 %2, metadata !6810, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i8* %3, metadata !6811, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i8 0, metadata !6812, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6813, metadata !DIExpression()), !dbg !6814
  store i8 0, i8* %3, align 1, !dbg !6815
  %5 = icmp ult i32 %2, -16777216, !dbg !6816
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6818
  br i1 %8, label %16, label %9, !dbg !6818

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6819
  %11 = icmp eq i32 %10, 0, !dbg !6819
  br i1 %11, label %12, label %13, !dbg !6821

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6813, metadata !DIExpression()), !dbg !6814
  store i8 1, i8* %3, align 1, !dbg !6824
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6814
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6813, metadata !DIExpression()), !dbg !6814
  br label %16, !dbg !6827

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6814
  ret %struct.__esf* %17, !dbg !6828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6829 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6833, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %1, metadata !6834, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i8* %2, metadata !6835, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 0, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i8 0, i8* %2, align 1, !dbg !6838
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6839

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6840
  call void @llvm.dbg.value(metadata i32 %5, metadata !6836, metadata !DIExpression()), !dbg !6837
  br label %11, !dbg !6842

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %7, metadata !6836, metadata !DIExpression()), !dbg !6837
  br label %11, !dbg !6844

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6845
  call void @llvm.dbg.value(metadata i32 0, metadata !6836, metadata !DIExpression()), !dbg !6837
  br label %11, !dbg !6846

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6847
  call void @llvm.dbg.value(metadata i32 0, metadata !6836, metadata !DIExpression()), !dbg !6837
  br label %11, !dbg !6848

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6849
  br label %11, !dbg !6850

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6852 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6856, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %1, metadata !6857, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 0, metadata !6858, metadata !DIExpression()), !dbg !6859
  store i8 0, i8* %1, align 1, !dbg !6860
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6861
  %4 = and i32 %3, 2, !dbg !6863
  %5 = icmp eq i32 %4, 0, !dbg !6864
  br i1 %5, label %6, label %33, !dbg !6865

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6866
  %8 = icmp sgt i32 %7, -1, !dbg !6868
  br i1 %8, label %9, label %33, !dbg !6869

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6870
  %11 = and i32 %10, 1073741824, !dbg !6872
  %12 = icmp eq i32 %11, 0, !dbg !6873
  br i1 %12, label %33, label %13, !dbg !6874

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6875
  br i1 %14, label %15, label %18, !dbg !6878

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6879
  %17 = load i32, i32* %16, align 4, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %17, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %33, !dbg !6881

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %20 = and i32 %19, 255, !dbg !6884
  %21 = icmp eq i32 %20, 0, !dbg !6885
  br i1 %21, label %24, label %22, !dbg !6886

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6887
  call void @llvm.dbg.value(metadata i32 %23, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %33, !dbg !6889

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6890
  %26 = and i32 %25, 65280, !dbg !6892
  %27 = icmp eq i32 %26, 0, !dbg !6893
  br i1 %27, label %29, label %28, !dbg !6894

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6895
  call void @llvm.dbg.value(metadata i32 0, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %33, !dbg !6897

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6898
  %31 = icmp ult i32 %30, 65536, !dbg !6900
  br i1 %31, label %33, label %32, !dbg !6901

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6902
  call void @llvm.dbg.value(metadata i32 0, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %33, !dbg !6904

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6859
  call void @llvm.dbg.value(metadata i32 %34, metadata !6858, metadata !DIExpression()), !dbg !6859
  ret i32 %34, !dbg !6905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6906 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6908, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i32 %1, metadata !6909, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i8* %2, metadata !6910, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i32 0, metadata !6911, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i32 -22, metadata !6912, metadata !DIExpression()), !dbg !6921
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6924
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6926
  %7 = and i32 %6, 2, !dbg !6927
  %8 = icmp eq i32 %7, 0, !dbg !6928
  br i1 %8, label %19, label %9, !dbg !6929

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6930
  call void @llvm.dbg.value(metadata i32 %10, metadata !6913, metadata !DIExpression()), !dbg !6931
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6932
  %12 = and i32 %11, 128, !dbg !6934
  %13 = icmp eq i32 %12, 0, !dbg !6935
  br i1 %13, label %19, label %14, !dbg !6936

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6912, metadata !DIExpression()), !dbg !6921
  %15 = icmp eq i32 %1, 0, !dbg !6937
  br i1 %15, label %19, label %16, !dbg !6940

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %18 = and i32 %17, -129, !dbg !6941
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  br label %19, !dbg !6943

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6921
  call void @llvm.dbg.value(metadata i32 %20, metadata !6912, metadata !DIExpression()), !dbg !6921
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6944
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6946
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6948
  %24 = and i32 %23, 16, !dbg !6949
  %25 = icmp eq i32 %24, 0, !dbg !6949
  br i1 %25, label %26, label %30, !dbg !6950

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6951
  %28 = and i32 %27, 2, !dbg !6952
  %29 = icmp eq i32 %28, 0, !dbg !6952
  br i1 %29, label %39, label %30, !dbg !6953

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6954
  %32 = and i32 %31, 2048, !dbg !6955
  %33 = icmp eq i32 %32, 0, !dbg !6955
  br i1 %33, label %39, label %34, !dbg !6956

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6957
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !6958
  call void @llvm.dbg.value(metadata i32 %36, metadata !6916, metadata !DIExpression()), !dbg !6959
  %37 = icmp eq i32 %36, 0, !dbg !6960
  br i1 %37, label %39, label %38, !dbg !6962

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6963, metadata !DIExpression()) #24, !dbg !6966
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !6969, !srcloc !6970
  call void @llvm.dbg.value(metadata i32 2, metadata !6911, metadata !DIExpression()), !dbg !6921
  br label %39, !dbg !6971

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6921
  call void @llvm.dbg.value(metadata i32 %40, metadata !6911, metadata !DIExpression()), !dbg !6921
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6972
  %42 = and i32 %41, 32, !dbg !6974
  %43 = icmp eq i32 %42, 0, !dbg !6975
  br i1 %43, label %47, label %44, !dbg !6976

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6977
  %46 = and i32 %45, -8193, !dbg !6977
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6977
  br label %47, !dbg !6979

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  %49 = or i32 %48, 255, !dbg !6980
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  store i8 0, i8* %2, align 1, !dbg !6981
  ret i32 %40, !dbg !6982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6983 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6987, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata i32 %0, metadata !6988, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata i8* %1, metadata !6989, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata i32 0, metadata !6990, metadata !DIExpression()), !dbg !6994
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6995
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6997
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %6 = and i32 %5, 512, !dbg !7000
  %7 = icmp eq i32 %6, 0, !dbg !7000
  br i1 %7, label %18, label %8, !dbg !7001

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7002
  call void @llvm.dbg.value(metadata i32 %9, metadata !6991, metadata !DIExpression()), !dbg !7003
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7004
  %11 = and i32 %10, 32768, !dbg !7006
  %12 = icmp ne i32 %11, 0, !dbg !7007
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7008
  br i1 %14, label %15, label %18, !dbg !7008

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  %17 = and i32 %16, -32769, !dbg !7009
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  br label %18, !dbg !7013

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7016
  %21 = and i32 %20, 256, !dbg !7018
  %22 = icmp eq i32 %21, 0, !dbg !7019
  br i1 %22, label %23, label %25, !dbg !7020

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7021
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  %27 = or i32 %26, 65280, !dbg !7023
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  store i8 0, i8* %1, align 1, !dbg !7024
  ret void, !dbg !7025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7026 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7032, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i32 0, metadata !7033, metadata !DIExpression()), !dbg !7034
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7035
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7039
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7041
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7043
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7045
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7047
  %8 = or i32 %7, -65536, !dbg !7047
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7047
  ret void, !dbg !7048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7049 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7053, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.value(metadata i8* %0, metadata !7054, metadata !DIExpression()), !dbg !7055
  store i8 0, i8* %0, align 1, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7058 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7062, metadata !DIExpression()), !dbg !7065
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7066
  %3 = load i32, i32* %2, align 4, !dbg !7066
  %4 = inttoptr i32 %3 to i16*, !dbg !7067
  call void @llvm.dbg.value(metadata i16* %4, metadata !7063, metadata !DIExpression()), !dbg !7065
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7068
  %6 = or i32 %5, 256, !dbg !7068
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7068
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7069, !srcloc !7072
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7073, !srcloc !7076
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7077
  %8 = load i16, i16* %7, align 2, !dbg !7078
  call void @llvm.dbg.value(metadata i16 %8, metadata !7064, metadata !DIExpression()), !dbg !7065
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7079
  %10 = and i32 %9, -257, !dbg !7079
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7079
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7080, !srcloc !7072
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7082, !srcloc !7076
  %11 = icmp eq i16 %8, -8446, !dbg !7084
  ret i1 %11, !dbg !7086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7087 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7088
  %2 = or i32 %1, 16, !dbg !7088
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7088
  ret void, !dbg !7089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7090 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7093, metadata !DIExpression()), !dbg !7094
  br label %1, !dbg !7095

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7093, metadata !DIExpression()), !dbg !7094
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !7097
  %3 = add nuw nsw i32 %2, 1, !dbg !7100
  call void @llvm.dbg.value(metadata i32 %3, metadata !7093, metadata !DIExpression()), !dbg !7094
  %4 = icmp eq i32 %3, 91, !dbg !7101
  br i1 %4, label %5, label %1, !dbg !7095, !llvm.loop !7102

5:                                                ; preds = %1
  ret void, !dbg !7104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #15 !dbg !7105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7107, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 1, metadata !7108, metadata !DIExpression()), !dbg !7109
  %2 = and i32 %0, 15, !dbg !7110
  %3 = add nsw i32 %2, -4, !dbg !7110
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7110
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7110
  %6 = icmp slt i32 %0, 0, !dbg !7110
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7110
  store volatile i8 16, i8* %7, align 1, !dbg !7111
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7220, metadata !DIExpression()), !dbg !7221
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7222
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7224
  br i1 %3, label %4, label %12, !dbg !7225

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7226, !srcloc !7238
  call void @llvm.dbg.value(metadata i32 %5, metadata !7229, metadata !DIExpression()) #24, !dbg !7239
  %6 = icmp eq i32 %5, 0, !dbg !7240
  br i1 %6, label %12, label %7, !dbg !7241

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7242
  %9 = or i32 %8, 268435456, !dbg !7242
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7242
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7244
  %11 = and i32 %10, -32769, !dbg !7244
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7244
  br label %12, !dbg !7245

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7246
  ret void, !dbg !7247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7248 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !375, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata i8 0, metadata !376, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata i32 64, metadata !378, metadata !DIExpression()), !dbg !7251
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7252
  %3 = load i32, i32* %2, align 4, !dbg !7252
  %4 = add i32 %3, -64, !dbg !7254
  call void @llvm.dbg.value(metadata i32 %4, metadata !377, metadata !DIExpression()), !dbg !7251
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7255
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7256
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7257
  call void @llvm.dbg.value(metadata i8 1, metadata !376, metadata !DIExpression()), !dbg !7251
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7258
  ret void, !dbg !7259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7260 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7261
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7262, !srcloc !7265
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7266, !srcloc !7269
  ret void, !dbg !7270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7271 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7272, !srcloc !7275
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7276
  ret void, !dbg !7277
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7278 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7293, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i8 %1, metadata !7294, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i32 %2, metadata !7295, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i32 %3, metadata !7296, metadata !DIExpression()), !dbg !7297
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7298
  ret void, !dbg !7300
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7301 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7306, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i8 %1, metadata !7307, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i32 undef, metadata !7308, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i32 undef, metadata !7309, metadata !DIExpression()), !dbg !7311
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7312
  call void @llvm.dbg.value(metadata i8 %3, metadata !7310, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7311
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %4, metadata !7310, metadata !DIExpression()), !dbg !7311
  %5 = trunc i32 %4 to i8, !dbg !7314
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7315
  ret void, !dbg !7316
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7317 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7321, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8 %1, metadata !7322, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8 %2, metadata !7323, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i1 %3, metadata !7324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7327
  %5 = zext i8 %2 to i32, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %5, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 0, metadata !7325, metadata !DIExpression()), !dbg !7327
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 0, metadata !7325, metadata !DIExpression()), !dbg !7327
  %7 = icmp eq i8 %1, 0, !dbg !7329
  br i1 %7, label %29, label %8, !dbg !7332

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 %10, metadata !7325, metadata !DIExpression()), !dbg !7327
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7333
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7336
  %13 = load i32, i32* %12, align 4, !dbg !7336
  %14 = icmp eq i32 %13, 0, !dbg !7337
  br i1 %14, label %25, label %15, !dbg !7338

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7339

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7341
  %18 = icmp eq i32 %17, 0, !dbg !7341
  br i1 %18, label %29, label %19, !dbg !7342

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7343
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7344
  call void @llvm.dbg.value(metadata i32 %21, metadata !7326, metadata !DIExpression()), !dbg !7327
  %22 = icmp eq i32 %21, -22, !dbg !7345
  br i1 %22, label %29, label %23, !dbg !7347

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %24, metadata !7326, metadata !DIExpression()), !dbg !7327
  br label %25, !dbg !7349

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7327
  call void @llvm.dbg.value(metadata i32 %26, metadata !7326, metadata !DIExpression()), !dbg !7327
  %27 = add nuw nsw i32 %10, 1, !dbg !7350
  call void @llvm.dbg.value(metadata i32 %27, metadata !7325, metadata !DIExpression()), !dbg !7327
  %28 = icmp eq i32 %27, %6, !dbg !7329
  br i1 %28, label %29, label %8, !dbg !7332, !llvm.loop !7351

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7327
  ret i32 %30, !dbg !7353
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7354 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7358, metadata !DIExpression()), !dbg !7360
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7361
  %3 = load i32, i32* %2, align 4, !dbg !7361
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7362, !range !3624
  %5 = icmp ult i32 %4, 2, !dbg !7362
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7363
  br i1 %7, label %8, label %15, !dbg !7363

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7364
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7365
  %11 = load i32, i32* %10, align 4, !dbg !7365
  %12 = and i32 %11, %9, !dbg !7366
  %13 = icmp eq i32 %12, 0, !dbg !7367
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7359, metadata !DIExpression()), !dbg !7360
  ret i32 %16, !dbg !7368
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7369 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7373, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7374, metadata !DIExpression()), !dbg !7376
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7377
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7377
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7375, metadata !DIExpression()), !dbg !7378
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7379
  %6 = load i32, i32* %5, align 4, !dbg !7379
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7380
  store i32 %6, i32* %7, align 4, !dbg !7381
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7382
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7383
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7384
  %11 = load i32, i32* %10, align 4, !dbg !7384
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7385
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7386
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7387
  ret i32 %12, !dbg !7388
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7389 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7396, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 undef, metadata !7398, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %2, metadata !7399, metadata !DIExpression()), !dbg !7400
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7401
  %5 = load i32, i32* %4, align 4, !dbg !7401
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7402
  %7 = or i32 %6, %5, !dbg !7403
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7404
  store i32 %7, i32* %8, align 4, !dbg !7405
  ret void, !dbg !7406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7407 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7411, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7412, metadata !DIExpression()), !dbg !7413
  %3 = zext i8 %0 to i32, !dbg !7414
  %4 = icmp ugt i8 %0, 7, !dbg !7416
  br i1 %4, label %6, label %5, !dbg !7417

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7418
  br label %6, !dbg !7419

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7413
  ret i32 %7, !dbg !7420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7426, metadata !DIExpression()), !dbg !7427
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7428
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7429
  %4 = load i32, i32* %3, align 4, !dbg !7429
  %5 = and i32 %4, -32, !dbg !7430
  %6 = or i32 %5, %0, !dbg !7431
  %7 = or i32 %6, 16, !dbg !7431
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7432
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7433
  %9 = load i32, i32* %8, align 4, !dbg !7433
  %10 = or i32 %9, 1, !dbg !7434
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7435
  ret void, !dbg !7436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7440, metadata !DIExpression()), !dbg !7441
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7442
  ret void, !dbg !7443
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7448, metadata !DIExpression()), !dbg !7449
  %2 = icmp ult i32 %0, 33, !dbg !7450
  br i1 %2, label %11, label %3, !dbg !7452

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7453
  br i1 %4, label %11, label %5, !dbg !7455

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7456
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7457, !range !3624
  %8 = mul nsw i32 %7, -2, !dbg !7458
  %9 = add nsw i32 %8, 62, !dbg !7458
  %10 = and i32 %9, 62, !dbg !7459
  br label %11, !dbg !7460

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7449
  ret i32 %12, !dbg !7461
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7462 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i8 %1, metadata !7467, metadata !DIExpression()), !dbg !7468
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7469
  ret void, !dbg !7471
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7472 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7476, metadata !DIExpression()), !dbg !7483
  call void @llvm.dbg.value(metadata i8 %1, metadata !7477, metadata !DIExpression()), !dbg !7483
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7484
  call void @llvm.dbg.value(metadata i8 %3, metadata !7478, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7483
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %4, metadata !7478, metadata !DIExpression()), !dbg !7483
  %5 = icmp ne i32 %4, -22, !dbg !7486
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7487
  call void @llvm.dbg.value(metadata i32 %4, metadata !7479, metadata !DIExpression()), !dbg !7488
  br i1 %7, label %8, label %12, !dbg !7487

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7479, metadata !DIExpression()), !dbg !7488
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7489
  %10 = add i32 %9, 1, !dbg !7492
  call void @llvm.dbg.value(metadata i32 %10, metadata !7479, metadata !DIExpression()), !dbg !7488
  %11 = icmp eq i32 %10, 8, !dbg !7493
  br i1 %11, label %12, label %8, !dbg !7494, !llvm.loop !7495

12:                                               ; preds = %8, %2
  ret void, !dbg !7497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7501, metadata !DIExpression()), !dbg !7502
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7503
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7504
  ret void, !dbg !7505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7506 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7511
  %2 = icmp ugt i32 %1, 8, !dbg !7513
  br i1 %2, label %14, label %3, !dbg !7514

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7515
  call void @llvm.dbg.value(metadata i32 0, metadata !7510, metadata !DIExpression()), !dbg !7516
  %4 = icmp eq i32 %1, 0, !dbg !7517
  br i1 %4, label %12, label %5, !dbg !7520

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7520

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7510, metadata !DIExpression()), !dbg !7516
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7521
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7523
  %10 = add nuw i32 %8, 1, !dbg !7524
  call void @llvm.dbg.value(metadata i32 %10, metadata !7510, metadata !DIExpression()), !dbg !7516
  %11 = icmp eq i32 %10, %1, !dbg !7517
  br i1 %11, label %12, label %7, !dbg !7520, !llvm.loop !7525

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7527
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7528
  tail call void @arm_core_mpu_enable() #26, !dbg !7529
  br label %14, !dbg !7530

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7516
  ret i32 %15, !dbg !7531
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7539, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata i8* %1, metadata !7540, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata i8* %0, metadata !7541, metadata !DIExpression()), !dbg !7542
  %3 = load i8, i8* %1, align 1, !dbg !7543
  %4 = icmp eq i8 %3, 0, !dbg !7544
  br i1 %4, label %13, label %5, !dbg !7545

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7539, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata i8* %8, metadata !7540, metadata !DIExpression()), !dbg !7542
  store i8 %6, i8* %7, align 1, !dbg !7546
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7548
  call void @llvm.dbg.value(metadata i8* %9, metadata !7539, metadata !DIExpression()), !dbg !7542
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7549
  call void @llvm.dbg.value(metadata i8* %10, metadata !7540, metadata !DIExpression()), !dbg !7542
  %11 = load i8, i8* %10, align 1, !dbg !7543
  %12 = icmp eq i8 %11, 0, !dbg !7544
  br i1 %12, label %13, label %5, !dbg !7545, !llvm.loop !7550

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7552
  ret i8* %0, !dbg !7553
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7554 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7558, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i8* %1, metadata !7559, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i32 %2, metadata !7560, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i8* %0, metadata !7561, metadata !DIExpression()), !dbg !7562
  %4 = icmp eq i32 %2, 0, !dbg !7563
  br i1 %4, label %22, label %5, !dbg !7564

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7558, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i32 %7, metadata !7560, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i8* %8, metadata !7559, metadata !DIExpression()), !dbg !7562
  %9 = load i8, i8* %8, align 1, !dbg !7565
  %10 = icmp eq i8 %9, 0, !dbg !7566
  br i1 %10, label %16, label %11, !dbg !7567

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7568
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7570
  call void @llvm.dbg.value(metadata i8* %12, metadata !7559, metadata !DIExpression()), !dbg !7562
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7571
  call void @llvm.dbg.value(metadata i8* %13, metadata !7558, metadata !DIExpression()), !dbg !7562
  %14 = add i32 %7, -1, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %14, metadata !7560, metadata !DIExpression()), !dbg !7562
  %15 = icmp eq i32 %14, 0, !dbg !7563
  br i1 %15, label %22, label %5, !dbg !7564, !llvm.loop !7573

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7558, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata i32 %18, metadata !7560, metadata !DIExpression()), !dbg !7562
  store i8 0, i8* %17, align 1, !dbg !7575
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7577
  call void @llvm.dbg.value(metadata i8* %19, metadata !7558, metadata !DIExpression()), !dbg !7562
  %20 = add i32 %18, -1, !dbg !7578
  call void @llvm.dbg.value(metadata i32 %20, metadata !7560, metadata !DIExpression()), !dbg !7562
  %21 = icmp eq i32 %20, 0, !dbg !7579
  br i1 %21, label %22, label %16, !dbg !7580, !llvm.loop !7581

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7583
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7588, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %1, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %1, metadata !7590, metadata !DIExpression()), !dbg !7591
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7592

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7588, metadata !DIExpression()), !dbg !7591
  %6 = load i8, i8* %5, align 1, !dbg !7593
  %7 = icmp eq i8 %6, %3, !dbg !7594
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7595
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7596
  call void @llvm.dbg.value(metadata i8* %10, metadata !7588, metadata !DIExpression()), !dbg !7591
  br i1 %9, label %11, label %4, !dbg !7595, !llvm.loop !7598

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7600
  ret i8* %12, !dbg !7601
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7604, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i32 %1, metadata !7605, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i8* null, metadata !7606, metadata !DIExpression()), !dbg !7607
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7608

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7607
  call void @llvm.dbg.value(metadata i8* %6, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i8* %5, metadata !7604, metadata !DIExpression()), !dbg !7607
  %7 = load i8, i8* %5, align 1, !dbg !7609
  %8 = icmp eq i8 %7, %3, !dbg !7612
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7613
  call void @llvm.dbg.value(metadata i8* %9, metadata !7606, metadata !DIExpression()), !dbg !7607
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7614
  call void @llvm.dbg.value(metadata i8* %10, metadata !7604, metadata !DIExpression()), !dbg !7607
  %11 = icmp eq i8 %7, 0, !dbg !7615
  br i1 %11, label %12, label %4, !dbg !7615, !llvm.loop !7616

12:                                               ; preds = %4
  ret i8* %9, !dbg !7618
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7623, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i32 0, metadata !7624, metadata !DIExpression()), !dbg !7625
  %2 = load i8, i8* %0, align 1, !dbg !7626
  %3 = icmp eq i8 %2, 0, !dbg !7627
  br i1 %3, label %11, label %4, !dbg !7628

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7624, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %6, metadata !7623, metadata !DIExpression()), !dbg !7625
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7629
  call void @llvm.dbg.value(metadata i8* %7, metadata !7623, metadata !DIExpression()), !dbg !7625
  %8 = add i32 %5, 1, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %8, metadata !7624, metadata !DIExpression()), !dbg !7625
  %9 = load i8, i8* %7, align 1, !dbg !7626
  %10 = icmp eq i8 %9, 0, !dbg !7627
  br i1 %10, label %11, label %4, !dbg !7628, !llvm.loop !7632

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7625
  ret i32 %12, !dbg !7634
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata i32 %1, metadata !7640, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata i32 0, metadata !7641, metadata !DIExpression()), !dbg !7642
  %3 = load i8, i8* %0, align 1, !dbg !7643
  %4 = icmp ne i8 %3, 0, !dbg !7644
  %5 = icmp ne i32 %1, 0, !dbg !7645
  %6 = and i1 %4, %5, !dbg !7645
  br i1 %6, label %7, label %16, !dbg !7646

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7641, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata i8* %9, metadata !7639, metadata !DIExpression()), !dbg !7642
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7647
  call void @llvm.dbg.value(metadata i8* %10, metadata !7639, metadata !DIExpression()), !dbg !7642
  %11 = add nuw i32 %8, 1, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %11, metadata !7641, metadata !DIExpression()), !dbg !7642
  %12 = load i8, i8* %10, align 1, !dbg !7643
  %13 = icmp ne i8 %12, 0, !dbg !7644
  %14 = icmp ult i32 %11, %1, !dbg !7645
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7645
  br i1 %15, label %7, label %16, !dbg !7646, !llvm.loop !7650

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7642
  ret i32 %17, !dbg !7652
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7653 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7657, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %1, metadata !7658, metadata !DIExpression()), !dbg !7659
  %3 = load i8, i8* %0, align 1, !dbg !7660
  %4 = load i8, i8* %1, align 1, !dbg !7661
  %5 = icmp ne i8 %3, %4, !dbg !7662
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7663
  br i1 %7, label %18, label %8, !dbg !7663

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %10, metadata !7657, metadata !DIExpression()), !dbg !7659
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %11, metadata !7657, metadata !DIExpression()), !dbg !7659
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7666
  call void @llvm.dbg.value(metadata i8* %12, metadata !7658, metadata !DIExpression()), !dbg !7659
  %13 = load i8, i8* %11, align 1, !dbg !7660
  %14 = load i8, i8* %12, align 1, !dbg !7661
  %15 = icmp ne i8 %13, %14, !dbg !7662
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7663
  br i1 %17, label %18, label %8, !dbg !7663, !llvm.loop !7667

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7660
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7661
  %21 = zext i8 %19 to i32, !dbg !7670
  %22 = zext i8 %20 to i32, !dbg !7671
  %23 = sub nsw i32 %21, %22, !dbg !7672
  ret i32 %23, !dbg !7673
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7674 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7678, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i8* %1, metadata !7679, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i32 %2, metadata !7680, metadata !DIExpression()), !dbg !7681
  %4 = icmp eq i32 %2, 0, !dbg !7682
  br i1 %4, label %23, label %5, !dbg !7682

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7680, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i8* %7, metadata !7679, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i8* %8, metadata !7678, metadata !DIExpression()), !dbg !7681
  %9 = load i8, i8* %8, align 1, !dbg !7683
  %10 = load i8, i8* %7, align 1, !dbg !7684
  %11 = icmp ne i8 %9, %10, !dbg !7685
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7686
  br i1 %13, label %19, label %14, !dbg !7686

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7687
  call void @llvm.dbg.value(metadata i8* %15, metadata !7678, metadata !DIExpression()), !dbg !7681
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7689
  call void @llvm.dbg.value(metadata i8* %16, metadata !7679, metadata !DIExpression()), !dbg !7681
  %17 = add i32 %6, -1, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %17, metadata !7680, metadata !DIExpression()), !dbg !7681
  %18 = icmp eq i32 %17, 0, !dbg !7682
  br i1 %18, label %23, label %5, !dbg !7682, !llvm.loop !7691

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7694
  %21 = zext i8 %10 to i32, !dbg !7695
  %22 = sub nsw i32 %20, %21, !dbg !7696
  br label %23, !dbg !7697

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7697
  ret i32 %24, !dbg !7698
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7704, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8* %1, metadata !7705, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8** %2, metadata !7706, metadata !DIExpression()), !dbg !7709
  %4 = icmp eq i8* %0, null, !dbg !7710
  br i1 %4, label %5, label %7, !dbg !7710

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7711
  br label %7, !dbg !7710

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7710
  call void @llvm.dbg.value(metadata i8* %8, metadata !7707, metadata !DIExpression()), !dbg !7709
  %9 = load i8, i8* %8, align 1, !dbg !7712
  %10 = icmp eq i8 %9, 0, !dbg !7712
  br i1 %10, label %33, label %11, !dbg !7713

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7707, metadata !DIExpression()), !dbg !7709
  %14 = zext i8 %12 to i32, !dbg !7712
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7714
  %16 = icmp eq i8* %15, null, !dbg !7713
  br i1 %16, label %21, label %17, !dbg !7715

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7716
  call void @llvm.dbg.value(metadata i8* %18, metadata !7707, metadata !DIExpression()), !dbg !7709
  %19 = load i8, i8* %18, align 1, !dbg !7712
  %20 = icmp eq i8 %19, 0, !dbg !7712
  br i1 %20, label %33, label %11, !dbg !7713, !llvm.loop !7718

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7708, metadata !DIExpression()), !dbg !7709
  %24 = zext i8 %22 to i32, !dbg !7720
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7721
  %26 = icmp eq i8* %25, null, !dbg !7722
  br i1 %26, label %27, label %31, !dbg !7723

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7724
  call void @llvm.dbg.value(metadata i8* %28, metadata !7708, metadata !DIExpression()), !dbg !7709
  %29 = load i8, i8* %28, align 1, !dbg !7720
  %30 = icmp eq i8 %29, 0, !dbg !7720
  br i1 %30, label %33, label %21, !dbg !7726, !llvm.loop !7727

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7729
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7732
  br label %33, !dbg !7733

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7709
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7709
  store i8* %34, i8** %2, align 4, !dbg !7709
  ret i8* %35, !dbg !7734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7737, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* %1, metadata !7738, metadata !DIExpression()), !dbg !7739
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7740
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7741
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7742
  ret i8* %0, !dbg !7743
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7744 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7746, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %1, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %0, metadata !7749, metadata !DIExpression()), !dbg !7751
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %4, metadata !7750, metadata !DIExpression()), !dbg !7751
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7753
  call void @llvm.dbg.value(metadata i8* %5, metadata !7746, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %1, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7748, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7751
  %6 = icmp eq i32 %2, 0, !dbg !7754
  br i1 %6, label %18, label %7, !dbg !7755

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7756
  call void @llvm.dbg.value(metadata i8* %9, metadata !7746, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %10, metadata !7747, metadata !DIExpression()), !dbg !7751
  %12 = load i8, i8* %10, align 1, !dbg !7757
  %13 = icmp eq i8 %12, 0, !dbg !7758
  br i1 %13, label %18, label %14, !dbg !7759

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7760
  call void @llvm.dbg.value(metadata i8* %15, metadata !7747, metadata !DIExpression()), !dbg !7751
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7762
  call void @llvm.dbg.value(metadata i8* %16, metadata !7746, metadata !DIExpression()), !dbg !7751
  store i8 %12, i8* %9, align 1, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %11, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %11, metadata !7748, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7751
  %17 = icmp eq i32 %11, 0, !dbg !7754
  br i1 %17, label %18, label %7, !dbg !7755, !llvm.loop !7764

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7751
  store i8 0, i8* %19, align 1, !dbg !7766
  ret i8* %0, !dbg !7767
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7772, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %1, metadata !7773, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 %2, metadata !7774, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %0, metadata !7775, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %1, metadata !7776, metadata !DIExpression()), !dbg !7777
  %4 = icmp eq i32 %2, 0, !dbg !7778
  br i1 %4, label %31, label %5, !dbg !7780

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %0, metadata !7775, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 %2, metadata !7774, metadata !DIExpression()), !dbg !7777
  %6 = add i32 %2, -1, !dbg !7781
  call void @llvm.dbg.value(metadata i32 %6, metadata !7774, metadata !DIExpression()), !dbg !7777
  %7 = icmp eq i32 %6, 0, !dbg !7782
  br i1 %7, label %23, label %8, !dbg !7783

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7784
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7784
  br label %11, !dbg !7784

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %14, metadata !7775, metadata !DIExpression()), !dbg !7777
  %15 = load i8, i8* %14, align 1, !dbg !7785
  %16 = load i8, i8* %13, align 1, !dbg !7786
  %17 = icmp eq i8 %15, %16, !dbg !7787
  br i1 %17, label %18, label %23, !dbg !7784

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7788
  call void @llvm.dbg.value(metadata i8* %19, metadata !7775, metadata !DIExpression()), !dbg !7777
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7790
  call void @llvm.dbg.value(metadata i8* %20, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 %12, metadata !7774, metadata !DIExpression()), !dbg !7777
  %21 = add i32 %12, -1, !dbg !7781
  call void @llvm.dbg.value(metadata i32 %21, metadata !7774, metadata !DIExpression()), !dbg !7777
  %22 = icmp eq i32 %21, 0, !dbg !7782
  br i1 %22, label %23, label %11, !dbg !7783, !llvm.loop !7791

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7777
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7777
  %26 = load i8, i8* %24, align 1, !dbg !7793
  %27 = zext i8 %26 to i32, !dbg !7793
  %28 = load i8, i8* %25, align 1, !dbg !7794
  %29 = zext i8 %28 to i32, !dbg !7794
  %30 = sub nsw i32 %27, %29, !dbg !7795
  br label %31, !dbg !7796

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7777
  ret i32 %32, !dbg !7797
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7798 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7802, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i8* %1, metadata !7803, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7804, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i8* %0, metadata !7805, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i8* %1, metadata !7806, metadata !DIExpression()), !dbg !7807
  %4 = ptrtoint i8* %0 to i32, !dbg !7808
  %5 = ptrtoint i8* %1 to i32, !dbg !7808
  %6 = sub i32 %4, %5, !dbg !7808
  %7 = icmp ult i32 %6, %2, !dbg !7810
  br i1 %7, label %10, label %8, !dbg !7811

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7806, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i8* %0, metadata !7805, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7804, metadata !DIExpression()), !dbg !7807
  %9 = icmp eq i32 %2, 0, !dbg !7812
  br i1 %9, label %26, label %17, !dbg !7814

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7804, metadata !DIExpression()), !dbg !7807
  %12 = add i32 %11, -1, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %12, metadata !7804, metadata !DIExpression()), !dbg !7807
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7818
  %14 = load i8, i8* %13, align 1, !dbg !7818
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7819
  store i8 %14, i8* %15, align 1, !dbg !7820
  %16 = icmp eq i32 %12, 0, !dbg !7821
  br i1 %16, label %26, label %10, !dbg !7822, !llvm.loop !7823

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7806, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i8* %19, metadata !7805, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %20, metadata !7804, metadata !DIExpression()), !dbg !7807
  %21 = load i8, i8* %18, align 1, !dbg !7825
  store i8 %21, i8* %19, align 1, !dbg !7827
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7828
  call void @llvm.dbg.value(metadata i8* %22, metadata !7805, metadata !DIExpression()), !dbg !7807
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7829
  call void @llvm.dbg.value(metadata i8* %23, metadata !7806, metadata !DIExpression()), !dbg !7807
  %24 = add i32 %20, -1, !dbg !7830
  call void @llvm.dbg.value(metadata i32 %24, metadata !7804, metadata !DIExpression()), !dbg !7807
  %25 = icmp eq i32 %24, 0, !dbg !7812
  br i1 %25, label %26, label %17, !dbg !7814, !llvm.loop !7831

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7834 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7840, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %1, metadata !7841, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %2, metadata !7842, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %0, metadata !7843, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %1, metadata !7844, metadata !DIExpression()), !dbg !7845
  %4 = icmp eq i32 %2, 0, !dbg !7846
  br i1 %4, label %14, label %5, !dbg !7847

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7844, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %7, metadata !7843, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %8, metadata !7842, metadata !DIExpression()), !dbg !7845
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7848
  call void @llvm.dbg.value(metadata i8* %9, metadata !7844, metadata !DIExpression()), !dbg !7845
  %10 = load i8, i8* %6, align 1, !dbg !7850
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7851
  call void @llvm.dbg.value(metadata i8* %11, metadata !7843, metadata !DIExpression()), !dbg !7845
  store i8 %10, i8* %7, align 1, !dbg !7852
  %12 = add i32 %8, -1, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %12, metadata !7842, metadata !DIExpression()), !dbg !7845
  %13 = icmp eq i32 %12, 0, !dbg !7846
  br i1 %13, label %14, label %5, !dbg !7847, !llvm.loop !7854

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7861, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %1, metadata !7862, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %2, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %0, metadata !7864, metadata !DIExpression()), !dbg !7866
  %4 = trunc i32 %1 to i8, !dbg !7867
  call void @llvm.dbg.value(metadata i8 %4, metadata !7865, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %2, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %0, metadata !7864, metadata !DIExpression()), !dbg !7866
  %5 = icmp eq i32 %2, 0, !dbg !7868
  br i1 %5, label %12, label %6, !dbg !7869

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %8, metadata !7864, metadata !DIExpression()), !dbg !7866
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7870
  call void @llvm.dbg.value(metadata i8* %9, metadata !7864, metadata !DIExpression()), !dbg !7866
  store i8 %4, i8* %8, align 1, !dbg !7872
  %10 = add i32 %7, -1, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %10, metadata !7863, metadata !DIExpression()), !dbg !7866
  %11 = icmp eq i32 %10, 0, !dbg !7868
  br i1 %11, label %12, label %6, !dbg !7869, !llvm.loop !7874

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7877 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7881, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %1, metadata !7882, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7883, metadata !DIExpression()), !dbg !7887
  %4 = icmp eq i32 %2, 0, !dbg !7888
  br i1 %4, label %17, label %5, !dbg !7889

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7890

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7891
  call void @llvm.dbg.value(metadata i8* %9, metadata !7884, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %8, metadata !7883, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %9, metadata !7884, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7891
  %10 = load i8, i8* %9, align 1, !dbg !7892
  %11 = icmp eq i8 %10, %6, !dbg !7895
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7896
  call void @llvm.dbg.value(metadata i8* %12, metadata !7884, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %13, metadata !7883, metadata !DIExpression()), !dbg !7887
  br i1 %15, label %16, label %7, !dbg !7896, !llvm.loop !7897

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7899

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7887
  ret i8* %19, !dbg !7900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7901 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7903, metadata !DIExpression()), !dbg !7904
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7905
  ret void, !dbg !7906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7909, metadata !DIExpression()), !dbg !7910
  ret i32 -1, !dbg !7911
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32* %1, metadata !7917, metadata !DIExpression()), !dbg !7918
  %3 = ptrtoint i32* %1 to i32, !dbg !7919
  %4 = and i32 %3, -2, !dbg !7919
  %5 = icmp eq i32 %4, 2, !dbg !7919
  br i1 %5, label %6, label %9, !dbg !7919

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7920
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7920
  br label %9, !dbg !7921

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7921
  ret i32 %10, !dbg !7922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32* %1, metadata !7926, metadata !DIExpression()), !dbg !7927
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7928
  ret i32 %3, !dbg !7929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7933, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.value(metadata i32* %1, metadata !7934, metadata !DIExpression()), !dbg !7935
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7936, !srcloc !7938
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7939
  ret i32 %3, !dbg !7940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7946, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata i32* %1, metadata !7947, metadata !DIExpression()), !dbg !7950
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %3, metadata !7948, metadata !DIExpression()), !dbg !7950
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %4, metadata !7949, metadata !DIExpression()), !dbg !7950
  %5 = icmp ne i32 %3, %4, !dbg !7953
  %6 = sext i1 %5 to i32, !dbg !7954
  ret i32 %6, !dbg !7955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7960, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %1, metadata !7961, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %2, metadata !7962, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32* %3, metadata !7963, metadata !DIExpression()), !dbg !7964
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7965
  ret i32 %5, !dbg !7966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %1, metadata !7970, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %2, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32* %3, metadata !7972, metadata !DIExpression()), !dbg !7973
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7974, !srcloc !7976
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7977
  ret i32 %5, !dbg !7978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7981, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32 %1, metadata !7982, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32* %3, metadata !7984, metadata !DIExpression()), !dbg !7989
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7990
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7992
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7992
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7992
  br i1 %11, label %33, label %12, !dbg !7992

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7989
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7989
  call void @llvm.dbg.value(metadata i8* %14, metadata !7987, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32 %13, metadata !7985, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32 %1, metadata !7986, metadata !DIExpression()), !dbg !7989
  br label %15, !dbg !7993

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7995
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7989
  call void @llvm.dbg.value(metadata i8* %17, metadata !7987, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32 %16, metadata !7986, metadata !DIExpression()), !dbg !7989
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7996
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %19, metadata !7987, metadata !DIExpression()), !dbg !7989
  %20 = load i8, i8* %17, align 1, !dbg !8000
  %21 = zext i8 %20 to i32, !dbg !8001
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7996
  %23 = icmp eq i32 %22, -1, !dbg !8002
  br i1 %23, label %30, label %24, !dbg !8003

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %25, metadata !7986, metadata !DIExpression()), !dbg !7989
  %26 = icmp eq i32 %25, 0, !dbg !8005
  br i1 %26, label %27, label %15, !dbg !8006, !llvm.loop !8007

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8009
  call void @llvm.dbg.value(metadata i32 %28, metadata !7985, metadata !DIExpression()), !dbg !7989
  %29 = icmp eq i32 %28, 0, !dbg !8010
  br i1 %29, label %30, label %12, !dbg !8011, !llvm.loop !8012

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7989
  call void @llvm.dbg.value(metadata i32 %31, metadata !7985, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.label(metadata !7988), !dbg !8015
  %32 = sub i32 %2, %31, !dbg !8016
  br label %33, !dbg !8017

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7989
  ret i32 %34, !dbg !8018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8023, metadata !DIExpression()), !dbg !8024
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8025
  %3 = icmp eq i32 %2, -1, !dbg !8027
  br i1 %3, label %8, label %4, !dbg !8028

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8029
  %6 = icmp eq i32 %5, -1, !dbg !8030
  %7 = sext i1 %6 to i32, !dbg !8029
  br label %8, !dbg !8031

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8024
  ret i32 %9, !dbg !8032
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8035, metadata !DIExpression()), !dbg !8036
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8037
  ret void, !dbg !8038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8043, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i32 %1, metadata !8044, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8045, metadata !DIExpression()), !dbg !8049
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8050
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8050
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8050
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8046, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i32 %0, metadata !8048, metadata !DIExpression()), !dbg !8049
  %7 = icmp slt i32 %0, %1, !dbg !8051
  br i1 %7, label %8, label %22, !dbg !8054

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8048, metadata !DIExpression()), !dbg !8049
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8055
  %11 = icmp eq i32 %10, 0, !dbg !8055
  br i1 %11, label %19, label %12, !dbg !8058

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8059
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8061
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8061
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8063
  br i1 %15, label %19, label %16, !dbg !8064

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8065
  %18 = load i8*, i8** %17, align 4, !dbg !8065
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8066
  br label %19, !dbg !8067

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8068
  call void @llvm.dbg.value(metadata i32 %20, metadata !8048, metadata !DIExpression()), !dbg !8049
  %21 = icmp eq i32 %20, %1, !dbg !8051
  br i1 %21, label %22, label %8, !dbg !8054, !llvm.loop !8069

22:                                               ; preds = %19, %3
  ret void, !dbg !8071
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8074, metadata !DIExpression()), !dbg !8075
  %2 = shl nuw i32 1, %0, !dbg !8076
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8079
  ret i32 %3, !dbg !8080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8085, metadata !DIExpression()), !dbg !8086
  %2 = shl nuw i32 1, %0, !dbg !8087
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8090
  ret void, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8095, metadata !DIExpression()), !dbg !8096
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8097
  ret void, !dbg !8098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8101, metadata !DIExpression()), !dbg !8102
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8103
  %3 = and i32 %2, %0, !dbg !8103
  %4 = icmp eq i32 %3, %0, !dbg !8104
  %5 = zext i1 %4 to i32, !dbg !8104
  ret i32 %5, !dbg !8105
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8108, metadata !DIExpression()), !dbg !8109
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8114, metadata !DIExpression()), !dbg !8115
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8116
  ret void, !dbg !8117
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8118 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8120, metadata !DIExpression()), !dbg !8121
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8122
  ret void, !dbg !8123
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8126, metadata !DIExpression()), !dbg !8127
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8128
  ret void, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8132, metadata !DIExpression()), !dbg !8133
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8134
  ret void, !dbg !8135
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8138, metadata !DIExpression()), !dbg !8139
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8140
  ret void, !dbg !8141
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8144, metadata !DIExpression()), !dbg !8145
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8146
  ret void, !dbg !8147
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8148 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8150, metadata !DIExpression()), !dbg !8151
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8152
  ret void, !dbg !8153
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8156, metadata !DIExpression()), !dbg !8157
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8158
  ret void, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8162, metadata !DIExpression()), !dbg !8163
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8164
  ret void, !dbg !8165
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8168, metadata !DIExpression()), !dbg !8169
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8170
  ret i32 0, !dbg !8171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !635 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !639, metadata !DIExpression()), !dbg !8172
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8173
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8175
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8177
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8179
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8181
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8183
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8185
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8187
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8189
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8191
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8193
  ret void, !dbg !8195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8198, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i32 0, metadata !8199, metadata !DIExpression()), !dbg !8200
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8201
  %3 = load i32, i32* %2, align 4, !dbg !8201
  call void @llvm.dbg.value(metadata i32 %3, metadata !8199, metadata !DIExpression()), !dbg !8200
  %4 = shl nuw i32 1, %0, !dbg !8202
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8203
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8204
  ret void, !dbg !8205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8208, metadata !DIExpression()), !dbg !8209
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8210
  %3 = or i32 %2, %0, !dbg !8210
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8210
  ret void, !dbg !8211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8214, metadata !DIExpression()), !dbg !8215
  %2 = icmp slt i32 %0, 32, !dbg !8216
  br i1 %2, label %3, label %5, !dbg !8218

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8219
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8221
  br label %5, !dbg !8222

5:                                                ; preds = %1, %3
  ret void, !dbg !8223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8226, metadata !DIExpression()), !dbg !8227
  %2 = xor i32 %0, -1, !dbg !8228
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8228
  %4 = and i32 %3, %2, !dbg !8228
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8234, metadata !DIExpression()), !dbg !8236
  call void @llvm.dbg.value(metadata i32 %1, metadata !8235, metadata !DIExpression()), !dbg !8236
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8237

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8238
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8240
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8241
  br label %11, !dbg !8242

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8243
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8244
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8245
  br label %11, !dbg !8246

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8247
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8248
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8249
  br label %11, !dbg !8250

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8251
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8252
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8253
  br label %11, !dbg !8254

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8258, metadata !DIExpression()), !dbg !8259
  %2 = xor i32 %0, -1, !dbg !8260
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8260
  %4 = and i32 %3, %2, !dbg !8260
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8260
  ret void, !dbg !8261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8264, metadata !DIExpression()), !dbg !8265
  %2 = xor i32 %0, -1, !dbg !8266
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8266
  %4 = and i32 %3, %2, !dbg !8266
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8270, metadata !DIExpression()), !dbg !8271
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8272
  %3 = or i32 %2, %0, !dbg !8272
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8272
  ret void, !dbg !8273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8276, metadata !DIExpression()), !dbg !8277
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8278
  %3 = or i32 %2, %0, !dbg !8278
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8284, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8285, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i8* %2, metadata !8286, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8287, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8289, metadata !DIExpression()), !dbg !8290
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8291
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8291
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8293
  br i1 %6, label %7, label %9, !dbg !8294

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8295
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8296
  store i8* %2, i8** %8, align 4, !dbg !8297
  br label %9, !dbg !8298

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8290
  ret i32 %10, !dbg !8299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8302, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8304, metadata !DIExpression()), !dbg !8305
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8306
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8307
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8308
  store i8* null, i8** %3, align 4, !dbg !8309
  ret void, !dbg !8310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8311 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8313, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.value(metadata i8* %1, metadata !8314, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.value(metadata i8* %1, metadata !8315, metadata !DIExpression()), !dbg !8318
  %3 = bitcast i8* %1 to i32*, !dbg !8319
  %4 = load i32, i32* %3, align 4, !dbg !8319
  %5 = add i32 %4, -169, !dbg !8319
  %6 = icmp ult i32 %5, -121, !dbg !8319
  br i1 %6, label %15, label %7, !dbg !8321

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8322
  %9 = inttoptr i32 %8 to i32*, !dbg !8323
  call void @llvm.dbg.value(metadata i32* %9, metadata !8316, metadata !DIExpression()), !dbg !8318
  %10 = load volatile i32, i32* %9, align 4, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %10, metadata !8317, metadata !DIExpression()), !dbg !8318
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8325
  %12 = bitcast i8* %11 to i32*, !dbg !8325
  %13 = load i32, i32* %12, align 4, !dbg !8325
  %14 = or i32 %13, %10, !dbg !8326
  call void @llvm.dbg.value(metadata i32 %14, metadata !8317, metadata !DIExpression()), !dbg !8318
  store volatile i32 %14, i32* %9, align 4, !dbg !8327
  br label %15, !dbg !8328

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8318
  ret i32 %16, !dbg !8329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8330 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8332, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8* %1, metadata !8333, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8* %1, metadata !8334, metadata !DIExpression()), !dbg !8337
  %3 = bitcast i8* %1 to i32*, !dbg !8338
  %4 = load i32, i32* %3, align 4, !dbg !8338
  %5 = add i32 %4, -169, !dbg !8338
  %6 = icmp ult i32 %5, -121, !dbg !8338
  br i1 %6, label %16, label %7, !dbg !8340

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8341
  %9 = inttoptr i32 %8 to i32*, !dbg !8342
  call void @llvm.dbg.value(metadata i32* %9, metadata !8335, metadata !DIExpression()), !dbg !8337
  %10 = load volatile i32, i32* %9, align 4, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %10, metadata !8336, metadata !DIExpression()), !dbg !8337
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8344
  %12 = bitcast i8* %11 to i32*, !dbg !8344
  %13 = load i32, i32* %12, align 4, !dbg !8344
  %14 = xor i32 %13, -1, !dbg !8345
  %15 = and i32 %10, %14, !dbg !8346
  call void @llvm.dbg.value(metadata i32 %15, metadata !8336, metadata !DIExpression()), !dbg !8337
  store volatile i32 %15, i32* %9, align 4, !dbg !8347
  br label %16, !dbg !8348

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8337
  ret i32 %17, !dbg !8349
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8352, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i8* %1, metadata !8353, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32* %2, metadata !8354, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i8* %1, metadata !8355, metadata !DIExpression()), !dbg !8360
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8361
  call void @llvm.dbg.value(metadata i32 %4, metadata !8356, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32 undef, metadata !8357, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32 undef, metadata !8358, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32 %4, metadata !8359, metadata !DIExpression()), !dbg !8360
  %5 = bitcast i8* %1 to i32*, !dbg !8362
  %6 = load i32, i32* %5, align 4, !dbg !8362
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8363

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %8, metadata !8357, metadata !DIExpression()), !dbg !8360
  br label %19, !dbg !8365

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %10, metadata !8358, metadata !DIExpression()), !dbg !8360
  br label %19, !dbg !8368

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8369
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8370
  br label %19, !dbg !8371

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8372
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8373
  br label %19, !dbg !8374

17:                                               ; preds = %3
  br label %19, !dbg !8375

18:                                               ; preds = %3
  br label %19, !dbg !8376

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 0, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8377
  br label %21, !dbg !8378

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8360
  ret i32 %22, !dbg !8378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8381, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.value(metadata i8* %1, metadata !8382, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.value(metadata i8* %2, metadata !8383, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.value(metadata i8* %1, metadata !8384, metadata !DIExpression()), !dbg !8389
  %4 = bitcast i8* %1 to i32*, !dbg !8390
  %5 = load i32, i32* %4, align 4, !dbg !8390
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8391
  call void @llvm.dbg.value(metadata i32 %6, metadata !8388, metadata !DIExpression()), !dbg !8389
  %7 = icmp slt i32 %6, 0, !dbg !8392
  br i1 %7, label %22, label %8, !dbg !8394

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8384, metadata !DIExpression()), !dbg !8389
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8395
  %10 = bitcast i8* %9 to i32*, !dbg !8395
  %11 = load i32, i32* %10, align 4, !dbg !8395
  %12 = lshr i32 %11, 16, !dbg !8395
  %13 = and i32 %12, 7, !dbg !8395
  %14 = lshr i32 %11, 8, !dbg !8396
  %15 = and i32 %14, 31, !dbg !8396
  %16 = shl i32 %13, %15, !dbg !8397
  call void @llvm.dbg.value(metadata i32 %16, metadata !8387, metadata !DIExpression()), !dbg !8389
  %17 = and i32 %11, 255, !dbg !8398
  %18 = or i32 %17, 1073887232, !dbg !8399
  %19 = inttoptr i32 %18 to i32*, !dbg !8400
  call void @llvm.dbg.value(metadata i32* %19, metadata !8385, metadata !DIExpression()), !dbg !8389
  %20 = load volatile i32, i32* %19, align 4, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %20, metadata !8386, metadata !DIExpression()), !dbg !8389
  %21 = or i32 %16, %20, !dbg !8402
  call void @llvm.dbg.value(metadata i32 %21, metadata !8386, metadata !DIExpression()), !dbg !8389
  store volatile i32 %21, i32* %19, align 4, !dbg !8403
  br label %22, !dbg !8404

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8389
  ret i32 %23, !dbg !8405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8410, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i32 0, metadata !8411, metadata !DIExpression()), !dbg !8412
  %2 = add i32 %0, -1, !dbg !8413
  %3 = icmp ult i32 %2, 6, !dbg !8413
  br i1 %3, label %4, label %7, !dbg !8413

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8413
  %6 = load i32, i32* %5, align 4, !dbg !8413
  call void @llvm.dbg.value(metadata i32 %6, metadata !8411, metadata !DIExpression()), !dbg !8412
  br label %7, !dbg !8414

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8412
  ret i32 %8, !dbg !8415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8420, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.value(metadata i32 %1, metadata !8421, metadata !DIExpression()), !dbg !8422
  %3 = udiv i32 %0, %1, !dbg !8423
  ret i32 %3, !dbg !8424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8429, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 24, metadata !8430, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 336, metadata !8431, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %1, metadata !8432, metadata !DIExpression()), !dbg !8433
  %3 = mul i32 %0, 336, !dbg !8434
  %4 = mul nsw i32 %1, 24, !dbg !8435
  %5 = udiv i32 %3, %4, !dbg !8436
  ret i32 %5, !dbg !8437
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8438 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8440, metadata !DIExpression()), !dbg !8443
  tail call void @config_enable_default_clocks() #25, !dbg !8444
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8445
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8445
  %4 = lshr i32 %3, 4, !dbg !8445
  %5 = and i32 %4, 15, !dbg !8445
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8445
  %7 = load i8, i8* %6, align 1, !dbg !8445
  %8 = zext i8 %7 to i32, !dbg !8445
  %9 = lshr i32 %2, %8, !dbg !8445
  call void @llvm.dbg.value(metadata i32 %9, metadata !8441, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8442, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8443
  %10 = icmp ult i32 %9, 168000000, !dbg !8446
  br i1 %10, label %11, label %13, !dbg !8448

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8449
  br label %13, !dbg !8451

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8452
  tail call fastcc void @set_up_plls() #26, !dbg !8453
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8454
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8457
  br label %14, !dbg !8458

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8459
  %16 = icmp eq i32 %15, 8, !dbg !8460
  br i1 %16, label %17, label %14, !dbg !8458, !llvm.loop !8461

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8463
  br i1 %18, label %19, label %21, !dbg !8465

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8466
  br label %21, !dbg !8468

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8469
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8470
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8471
  ret i32 0, !dbg !8472
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8473 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8475
  %2 = and i32 %1, 240, !dbg !8475
  ret i32 %2, !dbg !8476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8477 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8478
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8483
  br label %1, !dbg !8484

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8485
  %3 = icmp eq i32 %2, 1, !dbg !8486
  br i1 %3, label %4, label %1, !dbg !8484, !llvm.loop !8487

4:                                                ; preds = %1
  ret void, !dbg !8489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8490 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8491
  %2 = icmp eq i32 %1, 8, !dbg !8493
  br i1 %2, label %3, label %4, !dbg !8494

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8495
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8497
  br label %4, !dbg !8498

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8499
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8500
  %6 = and i32 %5, -196609, !dbg !8500
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8500
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8501
  %8 = and i32 %7, -251658241, !dbg !8501
  %9 = or i32 %8, 117440512, !dbg !8501
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8501
  tail call void @config_pll_sysclock() #25, !dbg !8502
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8503
  br label %10, !dbg !8504

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8505
  %12 = icmp eq i32 %11, 1, !dbg !8506
  br i1 %12, label %13, label %10, !dbg !8504, !llvm.loop !8507

13:                                               ; preds = %10
  ret void, !dbg !8509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8510 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8512, metadata !DIExpression()), !dbg !8513
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8514
  %2 = and i32 %1, -241, !dbg !8514
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8514
  ret void, !dbg !8515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8518, metadata !DIExpression()), !dbg !8519
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8520
  %3 = and i32 %2, -4, !dbg !8520
  %4 = or i32 %3, %0, !dbg !8520
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8520
  ret void, !dbg !8521
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8522 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8523
  %2 = and i32 %1, 12, !dbg !8523
  ret i32 %2, !dbg !8524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8525 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8527, metadata !DIExpression()), !dbg !8528
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8529
  %2 = and i32 %1, -7169, !dbg !8529
  %3 = or i32 %2, 5120, !dbg !8529
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8529
  ret void, !dbg !8530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8531 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8533, metadata !DIExpression()), !dbg !8534
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8535
  %2 = and i32 %1, -57345, !dbg !8535
  %3 = or i32 %2, 32768, !dbg !8535
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8535
  ret void, !dbg !8536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8537 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8538
  %2 = icmp eq i32 %1, 1, !dbg !8540
  br i1 %2, label %7, label %3, !dbg !8541

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8542
  br label %4, !dbg !8544

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8545
  %6 = icmp eq i32 %5, 1, !dbg !8546
  br i1 %6, label %7, label %4, !dbg !8544, !llvm.loop !8547

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8549
  br label %8, !dbg !8550

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8551
  %10 = icmp eq i32 %9, 0, !dbg !8552
  br i1 %10, label %11, label %8, !dbg !8550, !llvm.loop !8553

11:                                               ; preds = %8
  ret void, !dbg !8555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8556 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8557
  %2 = and i32 %1, -16777217, !dbg !8557
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8557
  ret void, !dbg !8558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8559 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8560
  %2 = or i32 %1, 16777216, !dbg !8560
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8562 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8563
  %2 = lshr i32 %1, 25, !dbg !8564
  %3 = and i32 %2, 1, !dbg !8564
  ret i32 %3, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8566 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8567
  %2 = lshr i32 %1, 1, !dbg !8568
  %3 = and i32 %2, 1, !dbg !8568
  ret i32 %3, !dbg !8569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8570 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8571
  %2 = or i32 %1, 1, !dbg !8571
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8571
  ret void, !dbg !8572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8573 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8574
  %2 = and i32 %1, -262145, !dbg !8574
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8576 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8577
  %2 = or i32 %1, 65536, !dbg !8577
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8579 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8580
  %2 = lshr i32 %1, 17, !dbg !8581
  %3 = and i32 %2, 1, !dbg !8581
  ret i32 %3, !dbg !8582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8583 {
  ret i32 24000000, !dbg !8585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8589 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8590
  ret void, !dbg !8591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8592 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8596, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i32 24, metadata !8597, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i32 336, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i32 0, metadata !8599, metadata !DIExpression()), !dbg !8600
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8601
  %2 = and i32 %1, -4227072, !dbg !8601
  %3 = or i32 %2, 4215832, !dbg !8601
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8601
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8602
  %5 = and i32 %4, -196609, !dbg !8602
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8602
  ret void, !dbg !8603
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8604 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8605
  ret void, !dbg !8606
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8607 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8610, metadata !DIExpression()), !dbg !8612
  %2 = bitcast i32* %1 to i8*, !dbg !8613
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8613
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8611, metadata !DIExpression()), !dbg !8614
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8615
  %4 = or i32 %3, 268435456, !dbg !8615
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8615
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8616
  %6 = and i32 %5, 268435456, !dbg !8616
  store volatile i32 %6, i32* %1, align 4, !dbg !8617
  %7 = load volatile i32, i32* %1, align 4, !dbg !8618
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8619
  ret void, !dbg !8619
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8620 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8622, metadata !DIExpression()), !dbg !8623
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !8624
  br i1 %2, label %3, label %4, !dbg !8626

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8627
  br label %4, !dbg !8628

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8623
  ret i32 %5, !dbg !8629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8630 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8635, metadata !DIExpression()), !dbg !8636
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8637, !srcloc !8639
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !8640
  ret i1 %1, !dbg !8641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8642 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8643
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8644
  ret void, !dbg !8645
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8648, metadata !DIExpression()), !dbg !8649
  %2 = icmp eq i32 %0, 10, !dbg !8650
  br i1 %2, label %3, label %4, !dbg !8652

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8653
  br label %4, !dbg !8655

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8656
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8657
  ret i32 %0, !dbg !8658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8659 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8662, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.value(metadata i8 %0, metadata !8663, metadata !DIExpression()), !dbg !8664
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8665, !srcloc !8667
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8670 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8672, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8 %0, metadata !8673, metadata !DIExpression()), !dbg !8675
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8676
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8674, metadata !DIExpression()), !dbg !8675
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8677
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8677
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_57, i8 noundef zeroext %0) #25, !dbg !8678
  ret void, !dbg !8679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8680 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8682, metadata !DIExpression()), !dbg !8683
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_57) #25, !dbg !8684
  ret i1 %1, !dbg !8685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8686 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8733, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8735, metadata !DIExpression()), !dbg !8736
  ret void, !dbg !8737
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8738 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8740, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i8 %1, metadata !8741, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32 %2, metadata !8742, metadata !DIExpression()), !dbg !8745
  %5 = bitcast i32* %4 to i8*, !dbg !8746
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8746
  call void @llvm.dbg.value(metadata i32* %4, metadata !8744, metadata !DIExpression(DW_OP_deref)), !dbg !8745
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()), !dbg !8745
  %7 = icmp eq i32 %6, 0, !dbg !8748
  br i1 %7, label %8, label %31, !dbg !8750

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8743, metadata !DIExpression()), !dbg !8745
  %9 = and i32 %2, 131072, !dbg !8751
  %10 = icmp eq i32 %9, 0, !dbg !8753
  br i1 %10, label %28, label %11, !dbg !8754

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8755
  %13 = icmp eq i32 %12, 0, !dbg !8758
  br i1 %13, label %18, label %14, !dbg !8759

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8760
  %16 = shl nuw i32 1, %15, !dbg !8760
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8762
  br label %25, !dbg !8763

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8764
  %20 = icmp eq i32 %19, 0, !dbg !8766
  %21 = zext i8 %1 to i32, !dbg !8745
  br i1 %20, label %25, label %22, !dbg !8767

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8768
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8770
  br label %25, !dbg !8771

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8772
  %27 = load i32, i32* %4, align 4, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %30, metadata !8744, metadata !DIExpression()), !dbg !8745
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8774
  br label %31, !dbg !8775

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8772
  %30 = load i32, i32* %4, align 4, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %30, metadata !8744, metadata !DIExpression()), !dbg !8745
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8774
  call void @llvm.dbg.value(metadata i32 0, metadata !8743, metadata !DIExpression()), !dbg !8745
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8776
  ret i32 %6, !dbg !8776
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8777 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8781, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32* %1, metadata !8782, metadata !DIExpression()), !dbg !8786
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8787
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8787
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8783, metadata !DIExpression()), !dbg !8786
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8788
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8788
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8788
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8785, metadata !DIExpression()), !dbg !8786
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8789
  store i32 %9, i32* %1, align 4, !dbg !8790
  ret i32 0, !dbg !8791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8794, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 %1, metadata !8795, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 %2, metadata !8796, metadata !DIExpression()), !dbg !8800
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8801
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8801
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8801
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8797, metadata !DIExpression()), !dbg !8800
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8802
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8802
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8802
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8798, metadata !DIExpression()), !dbg !8800
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8803
  call void @llvm.dbg.value(metadata i32 %10, metadata !8799, metadata !DIExpression()), !dbg !8800
  %11 = xor i32 %1, -1, !dbg !8804
  %12 = and i32 %10, %11, !dbg !8805
  %13 = and i32 %2, %1, !dbg !8806
  %14 = or i32 %12, %13, !dbg !8807
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8808
  ret i32 0, !dbg !8809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8812, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 %1, metadata !8813, metadata !DIExpression()), !dbg !8816
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8817
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8817
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8817
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8814, metadata !DIExpression()), !dbg !8816
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8818
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8818
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8818
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8815, metadata !DIExpression()), !dbg !8816
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8819
  store volatile i32 %1, i32* %9, align 4, !dbg !8819
  ret i32 0, !dbg !8820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8823, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32 %1, metadata !8824, metadata !DIExpression()), !dbg !8827
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8828
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8828
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8828
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8825, metadata !DIExpression()), !dbg !8827
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8829
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8829
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8829
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8826, metadata !DIExpression()), !dbg !8827
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8830
  ret i32 0, !dbg !8831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8834, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.value(metadata i32 %1, metadata !8835, metadata !DIExpression()), !dbg !8838
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8839
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8839
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8839
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8836, metadata !DIExpression()), !dbg !8838
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8840
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8840
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8840
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8837, metadata !DIExpression()), !dbg !8838
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8841
  %10 = load volatile i32, i32* %9, align 4, !dbg !8841
  %11 = xor i32 %10, %1, !dbg !8841
  store volatile i32 %11, i32* %9, align 4, !dbg !8841
  ret i32 0, !dbg !8842
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8845, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i8 %1, metadata !8846, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %2, metadata !8847, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %3, metadata !8848, metadata !DIExpression()), !dbg !8855
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8856
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8856
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8849, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i8* undef, metadata !8850, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 0, metadata !8852, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 0, metadata !8853, metadata !DIExpression()), !dbg !8855
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8857

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8858
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8862
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8863
  %12 = load i32, i32* %11, align 4, !dbg !8863
  %13 = icmp eq i32 %10, %12, !dbg !8864
  br i1 %13, label %14, label %29, !dbg !8865

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8866
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8868
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8869
  br label %29, !dbg !8870

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8871
  %17 = load i8*, i8** %16, align 4, !dbg !8871
  call void @llvm.dbg.value(metadata i8* %17, metadata !8850, metadata !DIExpression()), !dbg !8855
  %18 = zext i8 %1 to i32, !dbg !8872
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8874
  %20 = icmp eq i32 %19, 0, !dbg !8875
  br i1 %20, label %21, label %29, !dbg !8876

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8877
  %23 = load i32, i32* %22, align 4, !dbg !8877
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8878
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8879

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8852, metadata !DIExpression()), !dbg !8855
  br label %27, !dbg !8880

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8852, metadata !DIExpression()), !dbg !8855
  br label %27, !dbg !8882

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8852, metadata !DIExpression()), !dbg !8855
  br label %27, !dbg !8883

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8855
  call void @llvm.dbg.value(metadata i32 %28, metadata !8852, metadata !DIExpression()), !dbg !8855
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8884
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8885
  br label %29, !dbg !8885

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8855
  call void @llvm.dbg.value(metadata i32 %30, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.label(metadata !8854), !dbg !8886
  ret i32 %30, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8890, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8891, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i1 %2, metadata !8892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8894
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8895
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8895
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8895
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8893, metadata !DIExpression()), !dbg !8894
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8896
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8897
  ret i32 %8, !dbg !8898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8899 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8905, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8906, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i1 %2, metadata !8907, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8908
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8909
  br i1 %4, label %10, label %5, !dbg !8911

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8912
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8915
  %8 = or i1 %7, %2, !dbg !8916
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8916
  br i1 %2, label %11, label %13, !dbg !8916

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8917

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8918
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8921
  br label %13, !dbg !8922

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8908
  ret i32 %14, !dbg !8923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8928, metadata !DIExpression()), !dbg !8929
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8930
  %3 = icmp eq %struct._snode* %2, null, !dbg !8930
  ret i1 %3, !dbg !8930
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8931 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8935, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8936, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8937, metadata !DIExpression()), !dbg !8939
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8940
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8937, metadata !DIExpression()), !dbg !8939
  %4 = icmp eq %struct._snode* %3, null, !dbg !8942
  br i1 %4, label %15, label %5, !dbg !8940

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8937, metadata !DIExpression()), !dbg !8939
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8944
  br i1 %6, label %9, label %11, !dbg !8947

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8937, metadata !DIExpression()), !dbg !8939
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8944
  br i1 %8, label %9, label %11, !dbg !8947, !llvm.loop !8948

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8949
  br label %15, !dbg !8949

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8937, metadata !DIExpression()), !dbg !8939
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8942
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8938, metadata !DIExpression()), !dbg !8939
  %14 = icmp eq %struct._snode* %13, null, !dbg !8942
  br i1 %14, label %15, label %7, !dbg !8940, !llvm.loop !8948

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8952 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8956, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8957, metadata !DIExpression()), !dbg !8958
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8959
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8959
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8959
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8960
  %5 = icmp eq %struct._snode* %4, null, !dbg !8960
  br i1 %5, label %6, label %8, !dbg !8959

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8962
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8962
  br label %8, !dbg !8962

8:                                                ; preds = %6, %2
  ret void, !dbg !8959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8964 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8968, metadata !DIExpression()), !dbg !8969
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8970
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8970
  ret %struct._snode* %3, !dbg !8971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8976, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8977, metadata !DIExpression()), !dbg !8978
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8979
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8980
  ret void, !dbg !8981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8982 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8984, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8985, metadata !DIExpression()), !dbg !8986
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8987
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8988
  ret void, !dbg !8989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8990 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8992, metadata !DIExpression()), !dbg !8993
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8994
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8994
  ret %struct._snode* %3, !dbg !8995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8996 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8998, metadata !DIExpression()), !dbg !9000
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8999, metadata !DIExpression()), !dbg !9000
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9001
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9002
  ret void, !dbg !9003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !9004 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9008, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9009, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9010, metadata !DIExpression()), !dbg !9011
  %4 = icmp eq %struct._snode* %1, null, !dbg !9012
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9014
  br i1 %4, label %6, label %11, !dbg !9015

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9016
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9018
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9018
  br i1 %8, label %9, label %15, !dbg !9016

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9020
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9020
  br label %15, !dbg !9020

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9022
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9024
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9024
  br i1 %13, label %14, label %15, !dbg !9022

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9026
  br label %15, !dbg !9026

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9015
  ret void, !dbg !9015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9028 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9032, metadata !DIExpression()), !dbg !9033
  %2 = icmp eq %struct._snode* %0, null, !dbg !9034
  br i1 %2, label %5, label %3, !dbg !9034

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9034
  br label %5, !dbg !9034

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9034
  ret %struct._snode* %6, !dbg !9034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9035 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9037, metadata !DIExpression()), !dbg !9038
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9039
  ret %struct._snode* %2, !dbg !9039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9040 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9042, metadata !DIExpression()), !dbg !9043
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9044
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9044
  ret %struct._snode* %3, !dbg !9045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9048, metadata !DIExpression()), !dbg !9051
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !9052, !range !9053
  call void @llvm.dbg.value(metadata i32 %2, metadata !9049, metadata !DIExpression()), !dbg !9051
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !9054
  call void @llvm.dbg.value(metadata i32 %3, metadata !9050, metadata !DIExpression()), !dbg !9051
  ret i32 %3, !dbg !9055
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9058, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i8* %1, metadata !9059, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i8* %1, metadata !9060, metadata !DIExpression()), !dbg !9061
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9062
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9062
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9063
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9063
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9063
  %8 = shl nuw i32 1, %0, !dbg !9064
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !9065
  ret void, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9067 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9071, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i32 %1, metadata !9072, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9073, metadata !DIExpression()), !dbg !9077
  %4 = bitcast i64* %3 to i8*, !dbg !9078
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !9078
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9075, metadata !DIExpression()), !dbg !9077
  store i64 70368744177732, i64* %3, align 8, !dbg !9079
  call void @llvm.dbg.value(metadata i64* %3, metadata !9075, metadata !DIExpression(DW_OP_deref)), !dbg !9077
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !9080
  call void @llvm.dbg.value(metadata i32 %5, metadata !9076, metadata !DIExpression()), !dbg !9077
  %6 = icmp eq i32 %5, 0, !dbg !9081
  br i1 %6, label %7, label %8, !dbg !9083

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !9084
  br label %8, !dbg !9085

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !9086
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9087 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9089, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.value(metadata i8* %0, metadata !9090, metadata !DIExpression()), !dbg !9092
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9093
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9091, metadata !DIExpression()), !dbg !9092
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9094
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9094
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9095
  ret i32 %5, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i32 %1, metadata !9100, metadata !DIExpression()), !dbg !9102
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %3, metadata !9101, metadata !DIExpression()), !dbg !9102
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9104
  ret void, !dbg !9105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9110, metadata !DIExpression()), !dbg !9111
  %2 = sdiv i32 %0, 4, !dbg !9112
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9113
  %6 = add nsw i32 %5, 16, !dbg !9114
  %7 = shl i32 15, %6, !dbg !9115
  %8 = or i32 %7, %2, !dbg !9116
  ret i32 %8, !dbg !9117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9122, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()), !dbg !9124
  %3 = and i32 %1, 255, !dbg !9125
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9125
  %5 = load volatile i32, i32* %4, align 4, !dbg !9125
  %6 = lshr i32 %1, 16, !dbg !9125
  %7 = xor i32 %6, -1, !dbg !9125
  %8 = and i32 %5, %7, !dbg !9125
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #24, !dbg !9130
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9132, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %9, metadata !9129, metadata !DIExpression()) #24, !dbg !9130
  call void @llvm.dbg.value(metadata i32 %9, metadata !9134, metadata !DIExpression()) #24, !dbg !9139
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !9141, !range !3624
  %11 = shl i32 %0, %10, !dbg !9125
  %12 = or i32 %11, %8, !dbg !9125
  store volatile i32 %12, i32* %4, align 4, !dbg !9125
  ret void, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9147, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9148, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata i32 %2, metadata !9149, metadata !DIExpression()), !dbg !9152
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9153
  %5 = icmp eq %struct._snode* %4, null, !dbg !9153
  br i1 %5, label %21, label %6, !dbg !9153

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9155
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9151, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9150, metadata !DIExpression()), !dbg !9152
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9156
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9156
  %11 = load i32, i32* %10, align 4, !dbg !9156
  %12 = and i32 %11, %2, !dbg !9160
  %13 = icmp eq i32 %12, 0, !dbg !9160
  br i1 %13, label %19, label %14, !dbg !9161

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9150, metadata !DIExpression()), !dbg !9152
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9162
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9162
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9162
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9164
  br label %19, !dbg !9165

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9150, metadata !DIExpression()), !dbg !9152
  %20 = icmp eq %struct._snode* %8, null, !dbg !9166
  br i1 %20, label %21, label %6, !dbg !9166

21:                                               ; preds = %19, %3
  ret void, !dbg !9167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9170, metadata !DIExpression()), !dbg !9171
  %2 = and i32 %0, 255, !dbg !9172
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9172
  %4 = load volatile i32, i32* %3, align 4, !dbg !9172
  %5 = lshr i32 %0, 16, !dbg !9172
  %6 = and i32 %4, %5, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %5, metadata !9126, metadata !DIExpression()) #24, !dbg !9173
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9175, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %7, metadata !9129, metadata !DIExpression()) #24, !dbg !9173
  call void @llvm.dbg.value(metadata i32 %7, metadata !9134, metadata !DIExpression()) #24, !dbg !9176
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9178, !range !3624
  %9 = lshr i32 %6, %8, !dbg !9179
  ret i32 %9, !dbg !9180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9181 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9186, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i32 %1, metadata !9187, metadata !DIExpression()), !dbg !9188
  %3 = shl i32 %1, 16, !dbg !9189
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9189
  store volatile i32 %3, i32* %4, align 4, !dbg !9189
  ret void, !dbg !9190
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9195, metadata !DIExpression()), !dbg !9196
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9197
  %3 = load volatile i32, i32* %2, align 4, !dbg !9197
  ret i32 %3, !dbg !9198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9201, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata i32 %1, metadata !9202, metadata !DIExpression()), !dbg !9203
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9204
  store volatile i32 %1, i32* %3, align 4, !dbg !9204
  ret void, !dbg !9205
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9206 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9208, metadata !DIExpression()), !dbg !9209
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9210
  %3 = load volatile i32, i32* %2, align 4, !dbg !9210
  ret i32 %3, !dbg !9211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9216, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32* %1, metadata !9217, metadata !DIExpression()), !dbg !9218
  %3 = and i32 %0, 131072, !dbg !9219
  %4 = icmp eq i32 %3, 0, !dbg !9221
  br i1 %4, label %22, label %5, !dbg !9222

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9223
  %6 = and i32 %0, 2, !dbg !9225
  %7 = icmp eq i32 %6, 0, !dbg !9227
  br i1 %7, label %11, label %8, !dbg !9228

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9229
  %10 = icmp eq i32 %9, 0, !dbg !9229
  br i1 %10, label %33, label %11, !dbg !9232

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9233
  store i32 %12, i32* %1, align 4, !dbg !9233
  %13 = and i32 %0, 16, !dbg !9234
  %14 = icmp eq i32 %13, 0, !dbg !9236
  br i1 %14, label %17, label %15, !dbg !9237

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9238
  br label %31, !dbg !9240

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9241
  %19 = icmp eq i32 %18, 0, !dbg !9243
  br i1 %19, label %33, label %20, !dbg !9244

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9245
  br label %31, !dbg !9247

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9248
  %24 = icmp eq i32 %23, 0, !dbg !9250
  br i1 %24, label %31, label %25, !dbg !9251

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9252
  %27 = icmp eq i32 %26, 0, !dbg !9255
  br i1 %27, label %28, label %31, !dbg !9256

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9257
  br label %33, !dbg !9258

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9218
  ret i32 %34, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9263, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %1, metadata !9264, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %2, metadata !9265, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %3, metadata !9266, metadata !DIExpression()), !dbg !9274
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9275
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9275
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9275
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9267, metadata !DIExpression()), !dbg !9274
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9276
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9276
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9276
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9268, metadata !DIExpression()), !dbg !9274
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9277
  call void @llvm.dbg.value(metadata i32 %11, metadata !9269, metadata !DIExpression()), !dbg !9274
  %12 = and i32 %2, 48, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %12, metadata !9270, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %2, metadata !9271, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %2, metadata !9272, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %2, metadata !9273, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9274
  %13 = lshr i32 %2, 6, !dbg !9279
  %14 = and i32 %13, 1, !dbg !9279
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9280
  %15 = lshr i32 %2, 7, !dbg !9281
  %16 = and i32 %15, 3, !dbg !9281
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9282
  %17 = lshr i32 %2, 9, !dbg !9283
  %18 = and i32 %17, 3, !dbg !9283
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9284
  %19 = icmp eq i32 %12, 32, !dbg !9285
  br i1 %19, label %20, label %24, !dbg !9287

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9288
  br i1 %21, label %22, label %23, !dbg !9291

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9292
  br label %24, !dbg !9294

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9295
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9297
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9298
  ret void, !dbg !9299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  %2 = shl nuw i32 1, %0, !dbg !9305
  call void @llvm.dbg.value(metadata i32 %2, metadata !9303, metadata !DIExpression()), !dbg !9304
  ret i32 %2, !dbg !9306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9311, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata i32 %1, metadata !9312, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata i32 %2, metadata !9313, metadata !DIExpression()), !dbg !9314
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9315
  %5 = load volatile i32, i32* %4, align 4, !dbg !9315
  %6 = xor i32 %1, -1, !dbg !9315
  %7 = and i32 %5, %6, !dbg !9315
  %8 = mul i32 %2, %1, !dbg !9315
  %9 = or i32 %7, %8, !dbg !9315
  store volatile i32 %9, i32* %4, align 4, !dbg !9315
  ret void, !dbg !9316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9317 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9319, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata i32 %1, metadata !9320, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata i32 %2, metadata !9321, metadata !DIExpression()), !dbg !9322
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9323
  %5 = load volatile i32, i32* %4, align 4, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9324
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9326, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9327
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9329, !range !3624
  %8 = shl nuw nsw i32 %7, 1, !dbg !9323
  %9 = shl i32 3, %8, !dbg !9323
  %10 = xor i32 %9, -1, !dbg !9323
  %11 = and i32 %5, %10, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9330
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9330
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9332
  %12 = shl i32 %2, %8, !dbg !9323
  %13 = or i32 %11, %12, !dbg !9323
  store volatile i32 %13, i32* %4, align 4, !dbg !9323
  ret void, !dbg !9334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9335 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9337, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.value(metadata i32 %1, metadata !9338, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.value(metadata i32 %2, metadata !9339, metadata !DIExpression()), !dbg !9340
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9341
  %5 = load volatile i32, i32* %4, align 4, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9342
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9344, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9342
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9345
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9347, !range !3624
  %8 = shl nuw nsw i32 %7, 1, !dbg !9341
  %9 = shl i32 3, %8, !dbg !9341
  %10 = xor i32 %9, -1, !dbg !9341
  %11 = and i32 %5, %10, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9350
  %12 = shl i32 %2, %8, !dbg !9341
  %13 = or i32 %11, %12, !dbg !9341
  store volatile i32 %13, i32* %4, align 4, !dbg !9341
  ret void, !dbg !9352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9353 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9355, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata i32 %1, metadata !9356, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata i32 %2, metadata !9357, metadata !DIExpression()), !dbg !9358
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9359
  %5 = load volatile i32, i32* %4, align 4, !dbg !9359
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9360
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9362, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9360
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9363
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9365, !range !3624
  %8 = shl nuw nsw i32 %7, 2, !dbg !9359
  %9 = shl i32 15, %8, !dbg !9359
  %10 = xor i32 %9, -1, !dbg !9359
  %11 = and i32 %5, %10, !dbg !9359
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9368
  %12 = shl i32 %2, %8, !dbg !9359
  %13 = or i32 %11, %12, !dbg !9359
  store volatile i32 %13, i32* %4, align 4, !dbg !9359
  ret void, !dbg !9370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9371 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9373, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata i32 %1, metadata !9374, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata i32 %2, metadata !9375, metadata !DIExpression()), !dbg !9376
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9377
  %5 = load volatile i32, i32* %4, align 4, !dbg !9377
  %6 = lshr i32 %1, 8, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #24, !dbg !9378
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9380, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %7, metadata !9129, metadata !DIExpression()) #24, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %7, metadata !9134, metadata !DIExpression()) #24, !dbg !9381
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9383, !range !3624
  %9 = shl nuw nsw i32 %8, 2, !dbg !9377
  %10 = shl i32 15, %9, !dbg !9377
  %11 = xor i32 %10, -1, !dbg !9377
  %12 = and i32 %5, %11, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #24, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %7, metadata !9129, metadata !DIExpression()) #24, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %7, metadata !9134, metadata !DIExpression()) #24, !dbg !9386
  %13 = shl i32 %2, %9, !dbg !9377
  %14 = or i32 %12, %13, !dbg !9377
  store volatile i32 %14, i32* %4, align 4, !dbg !9377
  ret void, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9391, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i32 %1, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i32 %2, metadata !9393, metadata !DIExpression()), !dbg !9394
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9395
  %5 = load volatile i32, i32* %4, align 4, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9396
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9398, !srcloc !9133
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9396
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9399
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9401, !range !3624
  %8 = shl nuw nsw i32 %7, 1, !dbg !9395
  %9 = shl i32 3, %8, !dbg !9395
  %10 = xor i32 %9, -1, !dbg !9395
  %11 = and i32 %5, %10, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %1, metadata !9126, metadata !DIExpression()) #24, !dbg !9402
  call void @llvm.dbg.value(metadata i32 %6, metadata !9129, metadata !DIExpression()) #24, !dbg !9402
  call void @llvm.dbg.value(metadata i32 %6, metadata !9134, metadata !DIExpression()) #24, !dbg !9404
  %12 = shl i32 %2, %8, !dbg !9395
  %13 = or i32 %11, %12, !dbg !9395
  store volatile i32 %13, i32* %4, align 4, !dbg !9395
  ret void, !dbg !9406
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9409, metadata !DIExpression()), !dbg !9412
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9413
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9413
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9413
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9410, metadata !DIExpression()), !dbg !9412
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9414
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9415
  %6 = tail call fastcc zeroext i1 @device_is_ready.71() #26, !dbg !9416
  br i1 %6, label %7, label %11, !dbg !9418

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %8, metadata !9411, metadata !DIExpression()), !dbg !9412
  %9 = icmp slt i32 %8, 0, !dbg !9420
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9422
  br label %11, !dbg !9422

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9412
  ret i32 %12, !dbg !9423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71() unnamed_addr #1 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9428, metadata !DIExpression()), !dbg !9429
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9430, !srcloc !9432
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72() #26, !dbg !9433
  ret i1 %1, !dbg !9434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9439, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8 1, metadata !9440, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 0, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9443, metadata !DIExpression()), !dbg !9444
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9445
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9445
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9445
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9441, metadata !DIExpression()), !dbg !9444
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9446
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9449
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9450
  call void @llvm.dbg.value(metadata i32 %7, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %7, metadata !9442, metadata !DIExpression()), !dbg !9444
  ret i32 %7, !dbg !9451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72() unnamed_addr #1 !dbg !9452 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9454, metadata !DIExpression()), !dbg !9455
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9456
  ret i1 %1, !dbg !9457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9462, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i32 %1, metadata !9463, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i32 %2, metadata !9464, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i32 %3, metadata !9465, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i32 0, metadata !9466, metadata !DIExpression()), !dbg !9470
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9471
  %5 = icmp eq i32 %3, 17, !dbg !9472
  br i1 %5, label %6, label %14, !dbg !9473

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9474
  call void @llvm.dbg.value(metadata i32 %7, metadata !9467, metadata !DIExpression()), !dbg !9475
  %8 = icmp eq i32 %7, 0, !dbg !9476
  %9 = shl nuw i32 1, %1, !dbg !9478
  br i1 %8, label %12, label %10, !dbg !9479

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9480
  br label %14, !dbg !9482

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9483
  br label %14, !dbg !9486

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9487
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9490, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata i8* %1, metadata !9491, metadata !DIExpression()), !dbg !9494
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9495
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9495
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9495
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9492, metadata !DIExpression()), !dbg !9494
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9496
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9496
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9498
  %9 = icmp eq i32 %8, 0, !dbg !9498
  br i1 %9, label %12, label %10, !dbg !9499

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9500
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9502
  br label %12, !dbg !9503

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9504
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9506
  %15 = icmp eq i32 %14, 0, !dbg !9506
  br i1 %15, label %19, label %16, !dbg !9507

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9508
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9509
  store i8 %18, i8* %1, align 1, !dbg !9510
  br label %19, !dbg !9511

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9494
  ret i32 %20, !dbg !9512
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9515, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata i8 %1, metadata !9516, metadata !DIExpression()), !dbg !9519
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9520
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9520
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9520
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9517, metadata !DIExpression()), !dbg !9519
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9521

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9522
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9525
  %10 = icmp eq i32 %9, 0, !dbg !9525
  br i1 %10, label %18, label %11, !dbg !9526

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9527, !srcloc !9534
  call void @llvm.dbg.value(metadata i32 undef, metadata !9530, metadata !DIExpression()) #24, !dbg !9535
  call void @llvm.dbg.value(metadata i32 undef, metadata !9531, metadata !DIExpression()) #24, !dbg !9535
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()), !dbg !9519
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9536
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9538
  %15 = icmp eq i32 %14, 0, !dbg !9538
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9527
  br i1 %15, label %17, label %19, !dbg !9539

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9530, metadata !DIExpression()) #24, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %16, metadata !9518, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()) #24, !dbg !9543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9545, !srcloc !9546
  br label %18, !dbg !9547

18:                                               ; preds = %17, %7
  br label %7, !dbg !9522, !llvm.loop !9548

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9527
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9550
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %20, metadata !9540, metadata !DIExpression()) #24, !dbg !9552
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9554, !srcloc !9546
  ret void, !dbg !9555
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9558, metadata !DIExpression()), !dbg !9561
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9562
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9562
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9562
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9560, metadata !DIExpression()), !dbg !9561
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9563
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9563
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9565
  %8 = icmp ne i32 %7, 0, !dbg !9565
  %9 = zext i1 %8 to i32, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %9, metadata !9560, metadata !DIExpression()), !dbg !9561
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9567
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9569
  %12 = icmp eq i32 %11, 0, !dbg !9569
  %13 = or i32 %9, 2, !dbg !9570
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %14, metadata !9560, metadata !DIExpression()), !dbg !9561
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9571
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9573
  %17 = icmp eq i32 %16, 0, !dbg !9573
  %18 = or i32 %14, 4, !dbg !9574
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %19, metadata !9560, metadata !DIExpression()), !dbg !9561
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9575
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9577
  %22 = icmp eq i32 %21, 0, !dbg !9577
  %23 = or i32 %19, 8, !dbg !9578
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %24, metadata !9560, metadata !DIExpression()), !dbg !9561
  %25 = and i32 %24, 8, !dbg !9579
  %26 = icmp eq i32 %25, 0, !dbg !9579
  br i1 %26, label %29, label %27, !dbg !9581

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9582
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9584
  br label %29, !dbg !9585

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9586
  %31 = icmp eq i32 %30, 0, !dbg !9586
  br i1 %31, label %34, label %32, !dbg !9588

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9589
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9591
  br label %34, !dbg !9592

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9593
  %36 = icmp eq i32 %35, 0, !dbg !9593
  br i1 %36, label %39, label %37, !dbg !9595

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9596
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9598
  br label %39, !dbg !9599

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9600
  %41 = icmp eq i32 %40, 0, !dbg !9600
  br i1 %41, label %44, label %42, !dbg !9602

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9603
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9605
  br label %44, !dbg !9606

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9607
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9608
  ret i32 %24, !dbg !9609
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9612, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9613, metadata !DIExpression()), !dbg !9621
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9622
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9622
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9622
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9614, metadata !DIExpression()), !dbg !9621
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9623
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9623
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9623
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9615, metadata !DIExpression()), !dbg !9621
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9624
  %10 = load i8, i8* %9, align 4, !dbg !9624
  %11 = zext i8 %10 to i32, !dbg !9625
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %12, metadata !9617, metadata !DIExpression()), !dbg !9621
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9627
  %14 = load i8, i8* %13, align 1, !dbg !9627
  %15 = zext i8 %14 to i32, !dbg !9628
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9629
  call void @llvm.dbg.value(metadata i32 %16, metadata !9618, metadata !DIExpression()), !dbg !9621
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9630
  %18 = load i8, i8* %17, align 2, !dbg !9630
  %19 = zext i8 %18 to i32, !dbg !9631
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %20, metadata !9619, metadata !DIExpression()), !dbg !9621
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9633
  %22 = load i8, i8* %21, align 1, !dbg !9633
  %23 = zext i8 %22 to i32, !dbg !9634
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %24, metadata !9620, metadata !DIExpression()), !dbg !9621
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9636

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9638
  br i1 %26, label %69, label %27, !dbg !9640

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9641

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9642
  br i1 %29, label %65, label %30, !dbg !9642

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9644
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9621
  br i1 %31, label %38, label %34, !dbg !9646

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9647
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9647

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9650
  br i1 %37, label %38, label %69, !dbg !9651

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9652
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9653
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9654
  %41 = icmp eq i32 %12, %40, !dbg !9656
  br i1 %41, label %43, label %42, !dbg !9657

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9658
  br label %43, !dbg !9660

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9661
  %45 = icmp eq i32 %16, %44, !dbg !9663
  br i1 %45, label %47, label %46, !dbg !9664

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9665
  br label %47, !dbg !9667

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9668
  %49 = icmp eq i32 %20, %48, !dbg !9670
  br i1 %49, label %51, label %50, !dbg !9671

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9672
  br label %51, !dbg !9674

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9675
  %53 = icmp eq i32 %24, %52, !dbg !9677
  br i1 %53, label %55, label %54, !dbg !9678

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9679
  br label %55, !dbg !9681

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9682
  %57 = load i32, i32* %56, align 4, !dbg !9682
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9684
  %59 = load i32, i32* %58, align 4, !dbg !9684
  %60 = icmp eq i32 %57, %59, !dbg !9685
  br i1 %60, label %63, label %61, !dbg !9686

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9687
  %62 = load i32, i32* %56, align 4, !dbg !9689
  store i32 %62, i32* %58, align 4, !dbg !9690
  br label %63, !dbg !9691

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9692
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9693
  br label %69, !dbg !9694

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9642
  %67 = and i8 %66, 1, !dbg !9642
  %68 = icmp eq i8 %67, 0, !dbg !9642
  br i1 %68, label %30, label %69, !dbg !9642

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9621
  ret i32 %70, !dbg !9695
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9698, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9699, metadata !DIExpression()), !dbg !9701
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9702
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9702
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9702
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9700, metadata !DIExpression()), !dbg !9701
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9703
  %7 = load i32, i32* %6, align 4, !dbg !9703
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9704
  store i32 %7, i32* %8, align 4, !dbg !9705
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9706, !range !9707
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9708
  %11 = trunc i32 %10 to i8, !dbg !9708
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9709
  store i8 %11, i8* %12, align 4, !dbg !9710
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9711, !range !9712
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9713
  %15 = trunc i32 %14 to i8, !dbg !9713
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9714
  store i8 %15, i8* %16, align 1, !dbg !9715
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9716
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9717, !range !9707
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9718
  %20 = trunc i32 %19 to i8, !dbg !9718
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9719
  store i8 %20, i8* %21, align 2, !dbg !9720
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9721, !range !9722
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9723
  %24 = trunc i32 %23 to i8, !dbg !9723
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9724
  store i8 %24, i8* %25, align 1, !dbg !9725
  ret i32 0, !dbg !9726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9731, metadata !DIExpression()), !dbg !9733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9734
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9734
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9734
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9732, metadata !DIExpression()), !dbg !9733
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9735
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9735
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9736
  ret i32 %7, !dbg !9737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9742, metadata !DIExpression()), !dbg !9743
  %2 = icmp eq i32 %0, 1024, !dbg !9744
  %3 = select i1 %2, i32 2, i32 0, !dbg !9744
  %4 = icmp eq i32 %0, 1536, !dbg !9744
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9744
  ret i32 %5, !dbg !9745
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9746 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9748, metadata !DIExpression()), !dbg !9750
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9751
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9751
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9751
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9749, metadata !DIExpression()), !dbg !9750
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9752
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9752
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9753
  ret i32 %7, !dbg !9754
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9760
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9761
  %3 = icmp ult i32 %2, 4, !dbg !9761
  br i1 %3, label %4, label %7, !dbg !9761

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9761
  %6 = load i32, i32* %5, align 4, !dbg !9761
  br label %7, !dbg !9761

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9762
  ret i32 %8, !dbg !9764
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9767, metadata !DIExpression()), !dbg !9769
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9770
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9770
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9770
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9768, metadata !DIExpression()), !dbg !9769
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9771
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9771
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9772
  ret i32 %7, !dbg !9773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9778, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %1, metadata !9779, metadata !DIExpression()), !dbg !9780
  %3 = icmp eq i32 %0, 4096, !dbg !9781
  %4 = icmp eq i32 %1, 0, !dbg !9781
  %5 = select i1 %4, i32 4, i32 3, !dbg !9781
  %6 = select i1 %4, i32 3, i32 2, !dbg !9781
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9781
  ret i32 %7, !dbg !9782
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9785, metadata !DIExpression()), !dbg !9787
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9788
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9788
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9786, metadata !DIExpression()), !dbg !9787
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9789
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9789
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9790
  ret i32 %7, !dbg !9791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9796, metadata !DIExpression()), !dbg !9797
  %2 = icmp eq i32 %0, 768, !dbg !9798
  %3 = zext i1 %2 to i32, !dbg !9797
  ret i32 %3, !dbg !9800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9806, metadata !DIExpression()), !dbg !9807
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9808
  %3 = load volatile i32, i32* %2, align 4, !dbg !9808
  %4 = and i32 %3, 768, !dbg !9808
  ret i32 %4, !dbg !9809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9812, metadata !DIExpression()), !dbg !9813
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9814
  %3 = load volatile i32, i32* %2, align 4, !dbg !9814
  %4 = and i32 %3, 4096, !dbg !9814
  ret i32 %4, !dbg !9815
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9818, metadata !DIExpression()), !dbg !9819
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9820
  %3 = load volatile i32, i32* %2, align 4, !dbg !9820
  %4 = and i32 %3, 12288, !dbg !9820
  ret i32 %4, !dbg !9821
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9824, metadata !DIExpression()), !dbg !9825
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9826
  %3 = load volatile i32, i32* %2, align 4, !dbg !9826
  %4 = and i32 %3, 1536, !dbg !9826
  ret i32 %4, !dbg !9827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9832, metadata !DIExpression()), !dbg !9833
  %2 = icmp eq i32 %0, 2, !dbg !9834
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9834
  %4 = icmp eq i32 %0, 1, !dbg !9834
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9834
  ret i32 %5, !dbg !9835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9840, metadata !DIExpression()), !dbg !9841
  %2 = icmp ult i32 %0, 3, !dbg !9842
  br i1 %2, label %3, label %6, !dbg !9842

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9842
  %5 = load i32, i32* %4, align 4, !dbg !9842
  br label %6, !dbg !9842

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9843
  ret i32 %7, !dbg !9845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9850, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %1, metadata !9851, metadata !DIExpression()), !dbg !9852
  %3 = icmp eq i32 %0, 4, !dbg !9853
  %4 = icmp eq i32 %1, 0, !dbg !9853
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9853
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9853
  ret i32 %6, !dbg !9854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9859, metadata !DIExpression()), !dbg !9860
  %2 = icmp eq i32 %0, 1, !dbg !9861
  %3 = select i1 %2, i32 768, i32 0, !dbg !9860
  ret i32 %3, !dbg !9863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9864 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9868, metadata !DIExpression()), !dbg !9869
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9870
  %3 = load volatile i32, i32* %2, align 4, !dbg !9870
  %4 = and i32 %3, -8193, !dbg !9870
  store volatile i32 %4, i32* %2, align 4, !dbg !9870
  ret void, !dbg !9871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9876, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.value(metadata i32 %1, metadata !9877, metadata !DIExpression()), !dbg !9879
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9880
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9880
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9880
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9878, metadata !DIExpression()), !dbg !9879
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9881
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9881
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9882
  ret void, !dbg !9883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9886, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.value(metadata i32 %1, metadata !9887, metadata !DIExpression()), !dbg !9889
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9890
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9890
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9890
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9888, metadata !DIExpression()), !dbg !9889
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9891
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9891
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9892
  ret void, !dbg !9893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9896, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i32 %1, metadata !9897, metadata !DIExpression()), !dbg !9899
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9900
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9900
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9900
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9898, metadata !DIExpression()), !dbg !9899
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9901
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9901
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9902
  ret void, !dbg !9903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9906, metadata !DIExpression()), !dbg !9909
  call void @llvm.dbg.value(metadata i32 %1, metadata !9907, metadata !DIExpression()), !dbg !9909
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9910
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9910
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9910
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9908, metadata !DIExpression()), !dbg !9909
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9911
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9911
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9912
  ret void, !dbg !9913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9914 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9916, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32 %1, metadata !9917, metadata !DIExpression()), !dbg !9921
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9922
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9922
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9922
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9918, metadata !DIExpression()), !dbg !9921
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9923
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9923
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9923
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9919, metadata !DIExpression()), !dbg !9921
  %10 = bitcast i32* %3 to i8*, !dbg !9924
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9924
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9925
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9925
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9929
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9929
  %15 = load i8*, i8** %14, align 4, !dbg !9929
  call void @llvm.dbg.value(metadata i32* %3, metadata !9920, metadata !DIExpression(DW_OP_deref)), !dbg !9921
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9930
  %17 = icmp slt i32 %16, 0, !dbg !9931
  br i1 %17, label %23, label %18, !dbg !9932

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9933
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9933
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9934
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9935
  %22 = load i32, i32* %3, align 4, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %22, metadata !9920, metadata !DIExpression()), !dbg !9921
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9937
  br label %23, !dbg !9938

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9938
  ret void, !dbg !9938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9939 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9941, metadata !DIExpression()), !dbg !9942
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9943
  %3 = load volatile i32, i32* %2, align 4, !dbg !9943
  %4 = or i32 %3, 8192, !dbg !9943
  store volatile i32 %4, i32* %2, align 4, !dbg !9943
  ret void, !dbg !9944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9947, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i8* %1, metadata !9948, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32* %2, metadata !9949, metadata !DIExpression()), !dbg !9951
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9952
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9952
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9952
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9950, metadata !DIExpression()), !dbg !9951
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9953
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9953
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9955
  br i1 %9, label %12, label %10, !dbg !9956

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9957
  br label %12, !dbg !9958

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9951
  ret i32 %13, !dbg !9959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 0, metadata !9965, metadata !DIExpression()), !dbg !9966
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9967
  %3 = load volatile i32, i32* %2, align 4, !dbg !9967
  %4 = and i32 %3, -32769, !dbg !9967
  store volatile i32 %4, i32* %2, align 4, !dbg !9967
  ret void, !dbg !9968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9973, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 %1, metadata !9974, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 0, metadata !9975, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 %2, metadata !9976, metadata !DIExpression()), !dbg !9977
  %4 = zext i32 %1 to i64, !dbg !9978
  %5 = mul nuw nsw i64 %4, 25, !dbg !9978
  %6 = zext i32 %2 to i64, !dbg !9978
  %7 = shl nuw nsw i64 %6, 2, !dbg !9978
  %8 = udiv i64 %5, %7, !dbg !9978
  %9 = trunc i64 %8 to i32, !dbg !9978
  %10 = udiv i32 %9, 100, !dbg !9978
  %11 = shl nuw nsw i32 %10, 4, !dbg !9978
  %12 = mul i32 %10, -100, !dbg !9978
  %13 = add i32 %12, %9, !dbg !9978
  %14 = shl i32 %13, 4, !dbg !9978
  %15 = add i32 %14, 50, !dbg !9978
  %16 = udiv i32 %15, 100, !dbg !9978
  %17 = and i32 %16, 240, !dbg !9978
  %18 = add nuw nsw i32 %17, %11, !dbg !9978
  %19 = and i32 %16, 15, !dbg !9978
  %20 = and i32 %18, 65520, !dbg !9981
  %21 = or i32 %20, %19, !dbg !9981
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9982
  store volatile i32 %21, i32* %22, align 4, !dbg !9983
  ret void, !dbg !9984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9985 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9987, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32 %1, metadata !9988, metadata !DIExpression()), !dbg !9989
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9990
  %4 = load volatile i32, i32* %3, align 4, !dbg !9990
  %5 = and i32 %4, -769, !dbg !9990
  %6 = or i32 %5, %1, !dbg !9990
  store volatile i32 %6, i32* %3, align 4, !dbg !9990
  ret void, !dbg !9991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9994, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %1, metadata !9995, metadata !DIExpression()), !dbg !9996
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9997
  %4 = load volatile i32, i32* %3, align 4, !dbg !9997
  %5 = and i32 %4, -4097, !dbg !9997
  %6 = or i32 %5, %1, !dbg !9997
  store volatile i32 %6, i32* %3, align 4, !dbg !9997
  ret void, !dbg !9998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10001, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 %1, metadata !10002, metadata !DIExpression()), !dbg !10003
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10004
  %4 = load volatile i32, i32* %3, align 4, !dbg !10004
  %5 = and i32 %4, -12289, !dbg !10004
  %6 = or i32 %5, %1, !dbg !10004
  store volatile i32 %6, i32* %3, align 4, !dbg !10004
  ret void, !dbg !10005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10006 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10008, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.value(metadata i32 %1, metadata !10009, metadata !DIExpression()), !dbg !10010
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10011
  %4 = load volatile i32, i32* %3, align 4, !dbg !10011
  %5 = and i32 %4, -1537, !dbg !10011
  %6 = or i32 %5, %1, !dbg !10011
  store volatile i32 %6, i32* %3, align 4, !dbg !10011
  ret void, !dbg !10012
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10015, metadata !DIExpression()), !dbg !10016
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10017
  %3 = load volatile i32, i32* %2, align 4, !dbg !10017
  %4 = lshr i32 %3, 3, !dbg !10018
  %5 = and i32 %4, 1, !dbg !10018
  ret i32 %5, !dbg !10019
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10020 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10022, metadata !DIExpression()), !dbg !10023
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10024
  %3 = load volatile i32, i32* %2, align 4, !dbg !10024
  %4 = and i32 %3, 1, !dbg !10024
  ret i32 %4, !dbg !10025
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10026 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10028, metadata !DIExpression()), !dbg !10029
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10030
  %3 = load volatile i32, i32* %2, align 4, !dbg !10030
  %4 = lshr i32 %3, 1, !dbg !10031
  %5 = and i32 %4, 1, !dbg !10031
  ret i32 %5, !dbg !10032
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10033 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10035, metadata !DIExpression()), !dbg !10036
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10037
  %3 = load volatile i32, i32* %2, align 4, !dbg !10037
  %4 = lshr i32 %3, 8, !dbg !10038
  %5 = and i32 %4, 1, !dbg !10038
  ret i32 %5, !dbg !10039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10040 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10042, metadata !DIExpression()), !dbg !10043
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10044
  store volatile i32 -257, i32* %2, align 4, !dbg !10044
  ret void, !dbg !10045
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10046 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10048, metadata !DIExpression()), !dbg !10050
  %3 = bitcast i32* %2 to i8*, !dbg !10051
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10051
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10049, metadata !DIExpression()), !dbg !10052
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10053
  %5 = load volatile i32, i32* %4, align 4, !dbg !10053
  store volatile i32 %5, i32* %2, align 4, !dbg !10054
  %6 = load volatile i32, i32* %2, align 4, !dbg !10055
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10056
  %8 = load volatile i32, i32* %7, align 4, !dbg !10056
  store volatile i32 %8, i32* %2, align 4, !dbg !10057
  %9 = load volatile i32, i32* %2, align 4, !dbg !10058
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10059
  ret void, !dbg !10059
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10060 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10062, metadata !DIExpression()), !dbg !10064
  %3 = bitcast i32* %2 to i8*, !dbg !10065
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10065
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10063, metadata !DIExpression()), !dbg !10066
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10067
  %5 = load volatile i32, i32* %4, align 4, !dbg !10067
  store volatile i32 %5, i32* %2, align 4, !dbg !10068
  %6 = load volatile i32, i32* %2, align 4, !dbg !10069
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10070
  %8 = load volatile i32, i32* %7, align 4, !dbg !10070
  store volatile i32 %8, i32* %2, align 4, !dbg !10071
  %9 = load volatile i32, i32* %2, align 4, !dbg !10072
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10073
  ret void, !dbg !10073
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10074 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10076, metadata !DIExpression()), !dbg !10078
  %3 = bitcast i32* %2 to i8*, !dbg !10079
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10079
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10077, metadata !DIExpression()), !dbg !10080
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10081
  %5 = load volatile i32, i32* %4, align 4, !dbg !10081
  store volatile i32 %5, i32* %2, align 4, !dbg !10082
  %6 = load volatile i32, i32* %2, align 4, !dbg !10083
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10084
  %8 = load volatile i32, i32* %7, align 4, !dbg !10084
  store volatile i32 %8, i32* %2, align 4, !dbg !10085
  %9 = load volatile i32, i32* %2, align 4, !dbg !10086
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10087
  ret void, !dbg !10087
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10088 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10090, metadata !DIExpression()), !dbg !10092
  %3 = bitcast i32* %2 to i8*, !dbg !10093
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10093
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10091, metadata !DIExpression()), !dbg !10094
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10095
  %5 = load volatile i32, i32* %4, align 4, !dbg !10095
  store volatile i32 %5, i32* %2, align 4, !dbg !10096
  %6 = load volatile i32, i32* %2, align 4, !dbg !10097
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10098
  %8 = load volatile i32, i32* %7, align 4, !dbg !10098
  store volatile i32 %8, i32* %2, align 4, !dbg !10099
  %9 = load volatile i32, i32* %2, align 4, !dbg !10100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10101
  ret void, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10104, metadata !DIExpression()), !dbg !10105
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10106
  %3 = load volatile i32, i32* %2, align 4, !dbg !10106
  %4 = lshr i32 %3, 7, !dbg !10107
  %5 = and i32 %4, 1, !dbg !10107
  ret i32 %5, !dbg !10108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10113, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i8 %1, metadata !10114, metadata !DIExpression()), !dbg !10115
  %3 = zext i8 %1 to i32, !dbg !10116
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10117
  store volatile i32 %3, i32* %4, align 4, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10120 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10122, metadata !DIExpression()), !dbg !10123
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10124
  %3 = load volatile i32, i32* %2, align 4, !dbg !10124
  %4 = lshr i32 %3, 5, !dbg !10125
  %5 = and i32 %4, 1, !dbg !10125
  ret i32 %5, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10131, metadata !DIExpression()), !dbg !10132
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10133
  %3 = load volatile i32, i32* %2, align 4, !dbg !10133
  %4 = trunc i32 %3 to i8, !dbg !10134
  ret i8 %4, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10138, metadata !DIExpression()), !dbg !10144
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10145
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10145
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10145
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10139, metadata !DIExpression()), !dbg !10144
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10146
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10146
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10146
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10140, metadata !DIExpression()), !dbg !10144
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10147
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10148
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10148
  %10 = tail call fastcc zeroext i1 @device_is_ready.81(%struct.device* noundef %9) #26, !dbg !10150
  br i1 %10, label %11, label %49, !dbg !10151

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10152
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10153
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10153
  %15 = load i8*, i8** %14, align 4, !dbg !10153
  %16 = tail call fastcc i32 @clock_control_on.82(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10154
  call void @llvm.dbg.value(metadata i32 %16, metadata !10143, metadata !DIExpression()), !dbg !10144
  %17 = icmp eq i32 %16, 0, !dbg !10155
  br i1 %17, label %18, label %49, !dbg !10157

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10158
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10158
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %21, metadata !10143, metadata !DIExpression()), !dbg !10144
  %22 = icmp slt i32 %21, 0, !dbg !10160
  br i1 %22, label %49, label %23, !dbg !10162

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10163
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10163
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10164
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10165
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10166
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10167
  %28 = load i32, i32* %27, align 4, !dbg !10167
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10169

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10141, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 4096, metadata !10142, metadata !DIExpression()), !dbg !10144
  br label %31, !dbg !10170

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10141, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 0, metadata !10142, metadata !DIExpression()), !dbg !10144
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10173
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10173
  call void @llvm.dbg.value(metadata i32 %33, metadata !10142, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 %32, metadata !10141, metadata !DIExpression()), !dbg !10144
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10174
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10175
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10176
  %36 = load i8, i8* %35, align 4, !dbg !10176, !range !6783
  %37 = icmp eq i8 %36, 0, !dbg !10176
  br i1 %37, label %39, label %38, !dbg !10178

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10179
  br label %39, !dbg !10181

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10182
  %41 = load i32, i32* %40, align 4, !dbg !10182
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10183
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10184
  %43 = load i8, i8* %42, align 4, !dbg !10184, !range !6783
  %44 = icmp eq i8 %43, 0, !dbg !10184
  br i1 %44, label %47, label %45, !dbg !10186

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10187
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10189
  br label %47, !dbg !10190

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10191
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10192
  br label %49, !dbg !10193

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10144
  ret i32 %50, !dbg !10194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10199, metadata !DIExpression()), !dbg !10203
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10204
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10204
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10204
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10200, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10201, metadata !DIExpression()), !dbg !10203
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10205
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10206
  ret void, !dbg !10207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !10208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10212, metadata !DIExpression()), !dbg !10213
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10214, !srcloc !10216
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.83(%struct.device* noundef %0) #26, !dbg !10217
  ret i1 %2, !dbg !10218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.82(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10219 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10221, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.value(metadata i8* %1, metadata !10222, metadata !DIExpression()), !dbg !10224
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10225
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10225
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10225
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10223, metadata !DIExpression()), !dbg !10224
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10226
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10226
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10227
  ret i32 %8, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10229 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10233, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i8 0, metadata !10234, metadata !DIExpression()), !dbg !10237
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10238
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10238
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10236, metadata !DIExpression(DW_OP_deref)), !dbg !10237
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10239
  call void @llvm.dbg.value(metadata i32 %4, metadata !10235, metadata !DIExpression()), !dbg !10237
  %5 = icmp slt i32 %4, 0, !dbg !10240
  br i1 %5, label %9, label %6, !dbg !10242

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10243
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10236, metadata !DIExpression()), !dbg !10237
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10244
  br label %9, !dbg !10245

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10246
  ret i32 %10, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10249, metadata !DIExpression()), !dbg !10253
  call void @llvm.dbg.value(metadata i32 12, metadata !10250, metadata !DIExpression()), !dbg !10253
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10254

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10255, metadata !DIExpression()) #24, !dbg !10261
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10264, !srcloc !10265
  call void @llvm.dbg.value(metadata i32 %4, metadata !10260, metadata !DIExpression()) #24, !dbg !10261
  %5 = or i32 %4, 12, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %5, metadata !10251, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.value(metadata i32 %5, metadata !10268, metadata !DIExpression()) #24, !dbg !10275
  call void @llvm.dbg.value(metadata i32* %2, metadata !10273, metadata !DIExpression()) #24, !dbg !10275
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10277, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #24, !dbg !10275
  %7 = icmp eq i32 %6, 0, !dbg !10254
  br i1 %7, label %8, label %3, !dbg !10266, !llvm.loop !10279

8:                                                ; preds = %3
  ret void, !dbg !10280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10281 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10283, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 %1, metadata !10284, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 %2, metadata !10285, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 0, metadata !10286, metadata !DIExpression()), !dbg !10287
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10288
  %5 = load volatile i32, i32* %4, align 4, !dbg !10288
  %6 = and i32 %5, -5633, !dbg !10288
  %7 = or i32 %2, %1, !dbg !10288
  %8 = or i32 %7, %6, !dbg !10288
  store volatile i32 %8, i32* %4, align 4, !dbg !10288
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10289
  %10 = load volatile i32, i32* %9, align 4, !dbg !10289
  %11 = and i32 %10, -12289, !dbg !10289
  store volatile i32 %11, i32* %9, align 4, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10291 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10293, metadata !DIExpression()), !dbg !10294
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10295
  %3 = load volatile i32, i32* %2, align 4, !dbg !10295
  %4 = or i32 %3, 8, !dbg !10295
  store volatile i32 %4, i32* %2, align 4, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10297 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10301, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10302, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata i32 0, metadata !10303, metadata !DIExpression()), !dbg !10304
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10305
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10305
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10306
  %5 = load i8, i8* %4, align 4, !dbg !10306
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10307
  ret i32 %6, !dbg !10308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.83(%struct.device* noundef %0) unnamed_addr #1 !dbg !10309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10311, metadata !DIExpression()), !dbg !10312
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10313
  ret i1 %2, !dbg !10314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10317, metadata !DIExpression()), !dbg !10318
  tail call fastcc void @__NVIC_SetPriority.85() #26, !dbg !10319
  store i32 16799, i32* @last_load, align 4, !dbg !10320
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10321
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10322
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10323
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10324
  %3 = or i32 %2, 7, !dbg !10324
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10324
  ret i32 0, !dbg !10325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.85() unnamed_addr #15 !dbg !10326 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 1, metadata !10329, metadata !DIExpression()), !dbg !10330
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10331
  ret void, !dbg !10334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10335 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10337, metadata !DIExpression()), !dbg !10339
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10340
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10341
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10342
  %5 = add i32 %4, %3, !dbg !10342
  store i32 %5, i32* @cycle_count, align 4, !dbg !10342
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10343
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10344
  %7 = sub i32 %5, %6, !dbg !10347
  %8 = udiv i32 %7, 16800, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %8, metadata !10338, metadata !DIExpression()), !dbg !10339
  %9 = mul nuw i32 %8, 16800, !dbg !10349
  %10 = add i32 %9, %6, !dbg !10350
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10350
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10351
  tail call void @z_arm_int_exit() #25, !dbg !10352
  ret void, !dbg !10353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10354 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %1, metadata !10356, metadata !DIExpression()), !dbg !10360
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10357, metadata !DIExpression()), !dbg !10360
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %3, metadata !10358, metadata !DIExpression()), !dbg !10360
  %4 = and i32 %2, 65536, !dbg !10363
  %5 = icmp ne i32 %4, 0, !dbg !10363
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10365
  %8 = load i32, i32* @last_load, align 4, !dbg !10360
  br i1 %7, label %9, label %13, !dbg !10365

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10366
  %11 = add i32 %10, %8, !dbg !10366
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10366
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10368
  br label %13, !dbg !10369

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10370
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10371
  %16 = add i32 %14, %15, !dbg !10372
  ret i32 %16, !dbg !10373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10378, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i1 %1, metadata !10379, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10391
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10392
  br i1 %4, label %5, label %8, !dbg !10392

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10394
  %7 = and i32 %6, -2, !dbg !10394
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10394
  store i32 -16777216, i32* @last_load, align 4, !dbg !10396
  br label %54, !dbg !10397

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata i32 %9, metadata !10383, metadata !DIExpression()), !dbg !10391
  br i1 %3, label %18, label %10, !dbg !10399

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10399
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()), !dbg !10391
  %12 = icmp slt i32 %11, 1, !dbg !10400
  br i1 %12, label %18, label %13, !dbg !10400

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10400
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10400
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10400
  %17 = add nuw nsw i32 %16, 16799, !dbg !10400
  br label %18, !dbg !10400

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10401, metadata !DIExpression()) #24, !dbg !10408
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10410, !srcloc !10416
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %21, metadata !10413, metadata !DIExpression()) #24, !dbg !10417
  call void @llvm.dbg.value(metadata i32 undef, metadata !10414, metadata !DIExpression()) #24, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %21, metadata !10407, metadata !DIExpression()) #24, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %21, metadata !10384, metadata !DIExpression()), !dbg !10391
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %22, metadata !10389, metadata !DIExpression()), !dbg !10391
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %23, metadata !10381, metadata !DIExpression()), !dbg !10391
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10420
  %25 = add i32 %24, %22, !dbg !10420
  store i32 %25, i32* @cycle_count, align 4, !dbg !10420
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10421
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10422
  %27 = sub i32 %25, %26, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %27, metadata !10390, metadata !DIExpression()), !dbg !10391
  %28 = icmp slt i32 %27, 0, !dbg !10424
  br i1 %28, label %38, label %29, !dbg !10426

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10380, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i32 undef, metadata !10380, metadata !DIExpression()), !dbg !10391
  %30 = add nuw i32 %19, %27, !dbg !10427
  %31 = urem i32 %30, 16800, !dbg !10429
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10391
  %32 = sub nuw nsw i32 %19, %31, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %32, metadata !10380, metadata !DIExpression()), !dbg !10391
  %33 = icmp ugt i32 %32, 1050, !dbg !10431
  br i1 %33, label %34, label %36, !dbg !10431

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10380, metadata !DIExpression()), !dbg !10391
  %35 = icmp ugt i32 %32, 16749600, !dbg !10432
  br i1 %35, label %38, label %36, !dbg !10434

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10435
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %40, metadata !10382, metadata !DIExpression()), !dbg !10391
  %41 = add nsw i32 %39, -1, !dbg !10437
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10438
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10439
  %42 = icmp ult i32 %23, %40, !dbg !10440
  br i1 %42, label %43, label %48, !dbg !10442

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10443
  %45 = add i32 %23, %9, !dbg !10445
  %46 = sub i32 %45, %40, !dbg !10446
  %47 = add i32 %46, %44, !dbg !10443
  br label %52, !dbg !10447

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10448
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10450
  %51 = add i32 %49, %50, !dbg !10450
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10451
  store i32 %53, i32* @cycle_count, align 4, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %21, metadata !10452, metadata !DIExpression()) #24, !dbg !10458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10457, metadata !DIExpression()) #24, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %21, metadata !10460, metadata !DIExpression()) #24, !dbg !10463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10465, !srcloc !10466
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10468 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10401, metadata !DIExpression()) #24, !dbg !10472
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10474, !srcloc !10416
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %2, metadata !10413, metadata !DIExpression()) #24, !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10414, metadata !DIExpression()) #24, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %2, metadata !10407, metadata !DIExpression()) #24, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %2, metadata !10470, metadata !DIExpression()), !dbg !10477
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10478
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10479
  %5 = add i32 %4, %3, !dbg !10480
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10481
  %7 = sub i32 %5, %6, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %7, metadata !10471, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %2, metadata !10452, metadata !DIExpression()) #24, !dbg !10483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10457, metadata !DIExpression()) #24, !dbg !10483
  call void @llvm.dbg.value(metadata i32 %2, metadata !10460, metadata !DIExpression()) #24, !dbg !10485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10487, !srcloc !10466
  %8 = udiv i32 %7, 16800, !dbg !10488
  ret i32 %8, !dbg !10489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10490 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10401, metadata !DIExpression()) #24, !dbg !10494
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10496, !srcloc !10416
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %2, metadata !10413, metadata !DIExpression()) #24, !dbg !10498
  call void @llvm.dbg.value(metadata i32 undef, metadata !10414, metadata !DIExpression()) #24, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %2, metadata !10407, metadata !DIExpression()) #24, !dbg !10494
  call void @llvm.dbg.value(metadata i32 %2, metadata !10492, metadata !DIExpression()), !dbg !10499
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10500
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10501
  %5 = add i32 %4, %3, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %5, metadata !10493, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata i32 %2, metadata !10452, metadata !DIExpression()) #24, !dbg !10503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10457, metadata !DIExpression()) #24, !dbg !10503
  call void @llvm.dbg.value(metadata i32 %2, metadata !10460, metadata !DIExpression()) #24, !dbg !10505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10507, !srcloc !10466
  ret i32 %5, !dbg !10508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10509 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10510
  %2 = icmp eq i32 %1, -16777216, !dbg !10512
  br i1 %2, label %3, label %6, !dbg !10513

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10514
  %5 = or i32 %4, 1, !dbg !10514
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10514
  br label %6, !dbg !10516

6:                                                ; preds = %3, %0
  ret void, !dbg !10517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10518 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10519
  %2 = and i32 %1, -2, !dbg !10519
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10519
  ret void, !dbg !10520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10521 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10547, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i8 %1, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10549, metadata !DIExpression()), !dbg !10550
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10551
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10551
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10550
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10552
  %8 = load i8, i8* %6, align 4, !dbg !10553
  %9 = zext i8 %8 to i32, !dbg !10554
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10554
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10555
  br i1 %11, label %18, label %24, !dbg !10556

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10550
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10552
  %14 = load i8, i8* %6, align 4, !dbg !10553
  %15 = zext i8 %14 to i32, !dbg !10554
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10554
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10555
  br i1 %17, label %18, label %24, !dbg !10556, !llvm.loop !10557

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10559
  %21 = load i8, i8* %20, align 1, !dbg !10559
  %22 = icmp eq i8 %21, %1, !dbg !10562
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10563
  br i1 %22, label %24, label %12, !dbg !10564

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10550
  ret i32 %25, !dbg !10565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10577, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i8 %1, metadata !10578, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i32 %2, metadata !10579, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i32 0, metadata !10582, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i32 0, metadata !10583, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i8 0, metadata !10584, metadata !DIExpression()), !dbg !10594
  %4 = icmp eq i8 %1, 0, !dbg !10595
  br i1 %4, label %35, label %5, !dbg !10596

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10595
  br label %9, !dbg !10596

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10584, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %29, metadata !10582, metadata !DIExpression()), !dbg !10593
  %8 = icmp eq i32 %34, %6, !dbg !10595
  br i1 %8, label %35, label %9, !dbg !10596, !llvm.loop !10597

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10584, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %11, metadata !10582, metadata !DIExpression()), !dbg !10593
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10599
  %13 = load i32, i32* %12, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %13, metadata !10581, metadata !DIExpression()), !dbg !10593
  %14 = and i32 %13, 31, !dbg !10600
  %15 = icmp ult i32 %14, 16, !dbg !10601
  br i1 %15, label %16, label %20, !dbg !10602

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10603
  %18 = load i32, i32* %17, align 4, !dbg !10603
  %19 = or i32 %18, 32, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %19, metadata !10582, metadata !DIExpression()), !dbg !10593
  br label %28, !dbg !10606

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10607

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10608
  %23 = load i32, i32* %22, align 4, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %23, metadata !10586, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10609
  %24 = lshr i32 %23, 7, !dbg !10610
  %25 = and i32 %24, 16, !dbg !10610
  %26 = or i32 %25, %23, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %26, metadata !10582, metadata !DIExpression()), !dbg !10593
  br label %28, !dbg !10611

27:                                               ; preds = %20
  br label %28, !dbg !10612

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10593
  call void @llvm.dbg.value(metadata i32 %29, metadata !10582, metadata !DIExpression()), !dbg !10593
  %30 = lshr i32 %13, 5, !dbg !10612
  %31 = and i32 %30, 255, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %31, metadata !10580, metadata !DIExpression()), !dbg !10593
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %32, metadata !10583, metadata !DIExpression()), !dbg !10593
  %33 = icmp slt i32 %32, 0, !dbg !10614
  %34 = add nuw nsw i32 %10, 1, !dbg !10616
  call void @llvm.dbg.value(metadata i32 %34, metadata !10584, metadata !DIExpression()), !dbg !10594
  br i1 %33, label %35, label %7, !dbg !10617

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10623, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.value(metadata i32 %1, metadata !10624, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.value(metadata i32 %2, metadata !10625, metadata !DIExpression()), !dbg !10627
  %4 = icmp ugt i32 %0, 175, !dbg !10628
  br i1 %4, label %13, label %5, !dbg !10630

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10631
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10632
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10632
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10626, metadata !DIExpression()), !dbg !10627
  %9 = tail call fastcc zeroext i1 @device_is_ready.90(%struct.device* noundef %8) #26, !dbg !10633
  br i1 %9, label %10, label %13, !dbg !10635

10:                                               ; preds = %5
  %11 = and i32 %0, 15, !dbg !10636
  %12 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !10637
  br label %13, !dbg !10638

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -19, %5 ], !dbg !10627
  ret i32 %14, !dbg !10639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.90(%struct.device* noundef %0) unnamed_addr #1 !dbg !10640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10644, metadata !DIExpression()), !dbg !10645
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10646, !srcloc !10648
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.91(%struct.device* noundef %0) #26, !dbg !10649
  ret i1 %2, !dbg !10650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.91(%struct.device* noundef %0) unnamed_addr #1 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10653, metadata !DIExpression()), !dbg !10654
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10655
  ret i1 %2, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10657 {
  ret void, !dbg !10658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10659 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10661, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 0, metadata !10662, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 2, metadata !10663, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 0, metadata !10664, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 2, metadata !10665, metadata !DIExpression()), !dbg !10666
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10667
  %2 = and i32 %1, 12, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %2, metadata !10661, metadata !DIExpression()), !dbg !10666
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10669

3:                                                ; preds = %0
  br label %21, !dbg !10670

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %5, metadata !10664, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10666
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10673
  %7 = and i32 %6, 63, !dbg !10674
  call void @llvm.dbg.value(metadata i32 %7, metadata !10665, metadata !DIExpression()), !dbg !10666
  %8 = and i32 %5, 4194304, !dbg !10675
  %9 = icmp eq i32 %8, 0, !dbg !10675
  %10 = select i1 %9, i32 16000000, i32 24000000
  %11 = udiv i32 %10, %7, !dbg !10677
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10677
  %13 = lshr i32 %12, 6, !dbg !10677
  %14 = and i32 %13, 511, !dbg !10677
  %15 = mul i32 %14, %11, !dbg !10677
  call void @llvm.dbg.value(metadata i32 %15, metadata !10662, metadata !DIExpression()), !dbg !10666
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10678
  %17 = lshr i32 %16, 15, !dbg !10679
  %18 = and i32 %17, 6, !dbg !10679
  %19 = add nuw nsw i32 %18, 2, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %19, metadata !10663, metadata !DIExpression()), !dbg !10666
  %20 = udiv i32 %15, %19, !dbg !10680
  br label %21, !dbg !10681

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 24000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10682
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10683
  %24 = lshr i32 %23, 4, !dbg !10684
  %25 = and i32 %24, 15, !dbg !10684
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10685
  %27 = load i8, i8* %26, align 1, !dbg !10685
  %28 = zext i8 %27 to i32, !dbg !10685
  call void @llvm.dbg.value(metadata i32 %28, metadata !10661, metadata !DIExpression()), !dbg !10666
  %29 = lshr i32 %22, %28, !dbg !10686
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10686
  ret void, !dbg !10687
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10688 {
  ret i32 0, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10694 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10720, metadata !DIExpression()), !dbg !10731
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10732
  br i1 %3, label %311, label %4, !dbg !10734

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10735
  %6 = load i32, i32* %5, align 4, !dbg !10735
  %7 = and i32 %6, 1, !dbg !10737
  %8 = icmp eq i32 %7, 0, !dbg !10738
  br i1 %8, label %66, label %9, !dbg !10739

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10740
  %11 = and i32 %10, 12, !dbg !10740
  %12 = icmp eq i32 %11, 4, !dbg !10743
  br i1 %12, label %21, label %13, !dbg !10744

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10745
  %15 = and i32 %14, 12, !dbg !10745
  %16 = icmp eq i32 %15, 8, !dbg !10746
  br i1 %16, label %17, label %29, !dbg !10747

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10748
  %19 = and i32 %18, 4194304, !dbg !10749
  %20 = icmp eq i32 %19, 0, !dbg !10750
  br i1 %20, label %29, label %21, !dbg !10751

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10752
  %23 = and i32 %22, 131072, !dbg !10752
  %24 = icmp eq i32 %23, 0, !dbg !10752
  br i1 %24, label %66, label %25, !dbg !10755

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10756
  %27 = load i32, i32* %26, align 4, !dbg !10756
  %28 = icmp eq i32 %27, 0, !dbg !10757
  br i1 %28, label %311, label %66, !dbg !10758

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10759
  %31 = load i32, i32* %30, align 4, !dbg !10759
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10763

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10764
  %34 = or i32 %33, 65536, !dbg !10764
  br label %45, !dbg !10764

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  %37 = or i32 %36, 262144, !dbg !10766
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  %39 = or i32 %38, 65536, !dbg !10766
  br label %45, !dbg !10766

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10769
  %42 = and i32 %41, -65537, !dbg !10769
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10769
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10769
  %44 = and i32 %43, -262145, !dbg !10769
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10771
  %47 = load i32, i32* %30, align 4, !dbg !10772
  %48 = icmp eq i32 %47, 0, !dbg !10774
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !10775
  call void @llvm.dbg.value(metadata i32 %49, metadata !10721, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata i32 %49, metadata !10721, metadata !DIExpression()), !dbg !10731
  br i1 %48, label %58, label %50, !dbg !10776

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10777
  %52 = and i32 %51, 131072, !dbg !10779
  %53 = icmp eq i32 %52, 0, !dbg !10779
  br i1 %53, label %54, label %66, !dbg !10780

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !10781
  %56 = sub i32 %55, %49, !dbg !10784
  %57 = icmp ugt i32 %56, 100, !dbg !10785
  br i1 %57, label %311, label %50, !dbg !10786, !llvm.loop !10787

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10789
  %60 = and i32 %59, 131072, !dbg !10789
  %61 = icmp eq i32 %60, 0, !dbg !10789
  br i1 %61, label %66, label %62, !dbg !10791

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !10792
  %64 = sub i32 %63, %49, !dbg !10795
  %65 = icmp ugt i32 %64, 100, !dbg !10796
  br i1 %65, label %311, label %58, !dbg !10797, !llvm.loop !10798

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10800
  %68 = and i32 %67, 2, !dbg !10802
  %69 = icmp eq i32 %68, 0, !dbg !10803
  br i1 %69, label %121, label %70, !dbg !10804

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10805
  %72 = and i32 %71, 12, !dbg !10805
  %73 = icmp eq i32 %72, 0, !dbg !10808
  br i1 %73, label %82, label %74, !dbg !10809

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10810
  %76 = and i32 %75, 12, !dbg !10810
  %77 = icmp eq i32 %76, 8, !dbg !10811
  br i1 %77, label %78, label %90, !dbg !10812

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10813
  %80 = and i32 %79, 4194304, !dbg !10814
  %81 = icmp eq i32 %80, 0, !dbg !10815
  br i1 %81, label %82, label %90, !dbg !10816

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10817
  %84 = and i32 %83, 2, !dbg !10817
  %85 = icmp eq i32 %84, 0, !dbg !10817
  br i1 %85, label %114, label %86, !dbg !10820

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10821
  %88 = load i32, i32* %87, align 4, !dbg !10821
  %89 = icmp eq i32 %88, 1, !dbg !10822
  br i1 %89, label %114, label %311, !dbg !10823

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10824
  %92 = load i32, i32* %91, align 4, !dbg !10824
  %93 = icmp eq i32 %92, 0, !dbg !10827
  br i1 %93, label %104, label %94, !dbg !10828

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10829
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %95, metadata !10721, metadata !DIExpression()), !dbg !10731
  br label %96, !dbg !10832

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10833
  %98 = and i32 %97, 2, !dbg !10834
  %99 = icmp eq i32 %98, 0, !dbg !10834
  br i1 %99, label %100, label %114, !dbg !10832

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !10835
  %102 = sub i32 %101, %95, !dbg !10838
  %103 = icmp ugt i32 %102, 2, !dbg !10839
  br i1 %103, label %311, label %96, !dbg !10840, !llvm.loop !10841

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10843
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %105, metadata !10721, metadata !DIExpression()), !dbg !10731
  br label %106, !dbg !10846

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10847
  %108 = and i32 %107, 2, !dbg !10847
  %109 = icmp eq i32 %108, 0, !dbg !10847
  br i1 %109, label %121, label %110, !dbg !10846

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10848
  %112 = sub i32 %111, %105, !dbg !10851
  %113 = icmp ugt i32 %112, 2, !dbg !10852
  br i1 %113, label %311, label %106, !dbg !10853, !llvm.loop !10854

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10856
  %116 = and i32 %115, -249, !dbg !10856
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10856
  %118 = load i32, i32* %117, align 4, !dbg !10856
  %119 = shl i32 %118, 3, !dbg !10856
  %120 = or i32 %119, %116, !dbg !10856
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10856
  br label %121, !dbg !10857

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10857
  %123 = and i32 %122, 8, !dbg !10859
  %124 = icmp eq i32 %123, 0, !dbg !10860
  br i1 %124, label %149, label %125, !dbg !10861

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10862
  %127 = load i32, i32* %126, align 4, !dbg !10862
  %128 = icmp eq i32 %127, 0, !dbg !10865
  br i1 %128, label %139, label %129, !dbg !10866

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10867
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %130, metadata !10721, metadata !DIExpression()), !dbg !10731
  br label %131, !dbg !10870

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10871
  %133 = and i32 %132, 2, !dbg !10872
  %134 = icmp eq i32 %133, 0, !dbg !10872
  br i1 %134, label %135, label %149, !dbg !10870

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !10873
  %137 = sub i32 %136, %130, !dbg !10876
  %138 = icmp ugt i32 %137, 2, !dbg !10877
  br i1 %138, label %311, label %131, !dbg !10878, !llvm.loop !10879

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10881
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %140, metadata !10721, metadata !DIExpression()), !dbg !10731
  br label %141, !dbg !10884

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10885
  %143 = and i32 %142, 2, !dbg !10885
  %144 = icmp eq i32 %143, 0, !dbg !10885
  br i1 %144, label %149, label %145, !dbg !10884

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10886
  %147 = sub i32 %146, %140, !dbg !10889
  %148 = icmp ugt i32 %147, 2, !dbg !10890
  br i1 %148, label %311, label %141, !dbg !10891, !llvm.loop !10892

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10894
  %151 = and i32 %150, 4, !dbg !10895
  %152 = icmp eq i32 %151, 0, !dbg !10896
  br i1 %152, label %221, label %153, !dbg !10897

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10723, metadata !DIExpression()), !dbg !10898
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10899
  %155 = and i32 %154, 268435456, !dbg !10899
  %156 = icmp eq i32 %155, 0, !dbg !10899
  br i1 %156, label %157, label %164, !dbg !10900

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10901
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10901
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10727, metadata !DIExpression()), !dbg !10901
  store volatile i32 0, i32* %2, align 4, !dbg !10901
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10901
  %160 = or i32 %159, 268435456, !dbg !10901
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10901
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10901
  %162 = and i32 %161, 268435456, !dbg !10901
  store volatile i32 %162, i32* %2, align 4, !dbg !10901
  %163 = load volatile i32, i32* %2, align 4, !dbg !10901
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10902
  call void @llvm.dbg.value(metadata i32 1, metadata !10723, metadata !DIExpression()), !dbg !10898
  br label %164, !dbg !10903

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10723, metadata !DIExpression()), !dbg !10898
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10904
  %166 = and i32 %165, 256, !dbg !10904
  %167 = icmp eq i32 %166, 0, !dbg !10904
  br i1 %167, label %168, label %180, !dbg !10906

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10907
  %170 = or i32 %169, 256, !dbg !10907
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10907
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %171, metadata !10721, metadata !DIExpression()), !dbg !10731
  br label %172, !dbg !10910

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10911
  %174 = and i32 %173, 256, !dbg !10911
  %175 = icmp eq i32 %174, 0, !dbg !10911
  br i1 %175, label %176, label %180, !dbg !10910

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !10912
  %178 = sub i32 %177, %171, !dbg !10915
  %179 = icmp ugt i32 %178, 2, !dbg !10916
  br i1 %179, label %311, label %172, !dbg !10917, !llvm.loop !10918

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10920
  %182 = load i32, i32* %181, align 4, !dbg !10920
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10923

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10924
  %185 = or i32 %184, 1, !dbg !10924
  br label %196, !dbg !10924

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10926
  %188 = or i32 %187, 4, !dbg !10926
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10926
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10926
  %190 = or i32 %189, 1, !dbg !10926
  br label %196, !dbg !10926

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10929
  %193 = and i32 %192, -2, !dbg !10929
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10929
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10929
  %195 = and i32 %194, -5, !dbg !10929
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10931
  %198 = load i32, i32* %181, align 4, !dbg !10932
  %199 = icmp eq i32 %198, 0, !dbg !10934
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %200, metadata !10721, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata i32 %200, metadata !10721, metadata !DIExpression()), !dbg !10731
  br i1 %199, label %209, label %201, !dbg !10936

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10937
  %203 = and i32 %202, 2, !dbg !10939
  %204 = icmp eq i32 %203, 0, !dbg !10939
  br i1 %204, label %205, label %217, !dbg !10940

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10941
  %207 = sub i32 %206, %200, !dbg !10944
  %208 = icmp ugt i32 %207, 5000, !dbg !10945
  br i1 %208, label %311, label %201, !dbg !10946, !llvm.loop !10947

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10949
  %211 = and i32 %210, 2, !dbg !10949
  %212 = icmp eq i32 %211, 0, !dbg !10949
  br i1 %212, label %217, label %213, !dbg !10951

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !10952
  %215 = sub i32 %214, %200, !dbg !10955
  %216 = icmp ugt i32 %215, 5000, !dbg !10956
  br i1 %216, label %311, label %209, !dbg !10957, !llvm.loop !10958

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10960

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10961
  %220 = and i32 %219, -268435457, !dbg !10961
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10961
  br label %221, !dbg !10964

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10965
  %223 = load i32, i32* %222, align 4, !dbg !10965
  %224 = icmp eq i32 %223, 0, !dbg !10967
  br i1 %224, label %310, label %225, !dbg !10968

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10969
  %227 = and i32 %226, 12, !dbg !10969
  %228 = icmp eq i32 %227, 8, !dbg !10972
  br i1 %228, label %277, label %229, !dbg !10973

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10974
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10977
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %231, metadata !10721, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata i32 %231, metadata !10721, metadata !DIExpression()), !dbg !10731
  br i1 %230, label %232, label %269, !dbg !10978

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10979
  %234 = and i32 %233, 33554432, !dbg !10979
  %235 = icmp eq i32 %234, 0, !dbg !10979
  br i1 %235, label %240, label %236, !dbg !10981

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !10982
  %238 = sub i32 %237, %231, !dbg !10985
  %239 = icmp ugt i32 %238, 2, !dbg !10986
  br i1 %239, label %311, label %232, !dbg !10987, !llvm.loop !10988

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10990
  %242 = load i32, i32* %241, align 4, !dbg !10990
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10990
  %244 = load i32, i32* %243, align 4, !dbg !10990
  %245 = or i32 %244, %242, !dbg !10990
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10990
  %247 = load i32, i32* %246, align 4, !dbg !10990
  %248 = shl i32 %247, 6, !dbg !10990
  %249 = or i32 %245, %248, !dbg !10990
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10990
  %251 = load i32, i32* %250, align 4, !dbg !10990
  %252 = shl i32 %251, 15, !dbg !10990
  %253 = add i32 %252, -65536, !dbg !10990
  %254 = and i32 %253, -65536, !dbg !10990
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10990
  %256 = load i32, i32* %255, align 4, !dbg !10990
  %257 = shl i32 %256, 24, !dbg !10990
  %258 = or i32 %249, %257, !dbg !10990
  %259 = or i32 %258, %254, !dbg !10990
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10990
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10991
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !10992
  call void @llvm.dbg.value(metadata i32 %260, metadata !10721, metadata !DIExpression()), !dbg !10731
  br label %261, !dbg !10993

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10994
  %263 = and i32 %262, 33554432, !dbg !10995
  %264 = icmp eq i32 %263, 0, !dbg !10995
  br i1 %264, label %265, label %310, !dbg !10993

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !10996
  %267 = sub i32 %266, %260, !dbg !10999
  %268 = icmp ugt i32 %267, 2, !dbg !11000
  br i1 %268, label %311, label %261, !dbg !11001, !llvm.loop !11002

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11004
  %271 = and i32 %270, 33554432, !dbg !11004
  %272 = icmp eq i32 %271, 0, !dbg !11004
  br i1 %272, label %310, label %273, !dbg !11006

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11007
  %275 = sub i32 %274, %231, !dbg !11010
  %276 = icmp ugt i32 %275, 2, !dbg !11011
  br i1 %276, label %311, label %269, !dbg !11012, !llvm.loop !11013

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11015
  br i1 %278, label %311, label %279, !dbg !11018

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %280, metadata !10722, metadata !DIExpression()), !dbg !10731
  %281 = and i32 %280, 4194304, !dbg !11021
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11023
  %283 = load i32, i32* %282, align 4, !dbg !11023
  %284 = icmp eq i32 %281, %283, !dbg !11024
  br i1 %284, label %285, label %311, !dbg !11025

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11026
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11027
  %288 = load i32, i32* %287, align 4, !dbg !11027
  %289 = icmp eq i32 %286, %288, !dbg !11028
  br i1 %289, label %290, label %311, !dbg !11029

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11030
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11031
  %293 = load i32, i32* %292, align 4, !dbg !11031
  %294 = shl i32 %293, 6, !dbg !11032
  %295 = icmp eq i32 %291, %294, !dbg !11033
  br i1 %295, label %296, label %311, !dbg !11034

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11035
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11036
  %299 = load i32, i32* %298, align 4, !dbg !11036
  %300 = shl i32 %299, 15, !dbg !11037
  %301 = add i32 %300, -65536, !dbg !11037
  %302 = and i32 %301, -65536, !dbg !11037
  %303 = icmp eq i32 %297, %302, !dbg !11038
  br i1 %303, label %304, label %311, !dbg !11039

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11040
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11041
  %307 = load i32, i32* %306, align 4, !dbg !11041
  %308 = shl i32 %307, 24, !dbg !11042
  %309 = icmp eq i32 %305, %308, !dbg !11043
  br i1 %309, label %310, label %311, !dbg !11044

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11045

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10731
  ret i32 %312, !dbg !11046
}

; Function Attrs: optsize
declare !dbg !11047 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11062, metadata !DIExpression()), !dbg !11065
  call void @llvm.dbg.value(metadata i32 %1, metadata !11063, metadata !DIExpression()), !dbg !11065
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11066
  br i1 %3, label %115, label %4, !dbg !11068

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11069
  %6 = and i32 %5, 15, !dbg !11069
  %7 = icmp ult i32 %6, %1, !dbg !11071
  br i1 %7, label %8, label %13, !dbg !11072

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11073
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11073
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11075
  %11 = and i32 %10, 15, !dbg !11075
  %12 = icmp eq i32 %11, %1, !dbg !11077
  br i1 %12, label %13, label %115, !dbg !11078

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11079
  %15 = load i32, i32* %14, align 4, !dbg !11079
  %16 = and i32 %15, 2, !dbg !11081
  %17 = icmp eq i32 %16, 0, !dbg !11082
  br i1 %17, label %39, label %18, !dbg !11083

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11084
  %20 = icmp eq i32 %19, 0, !dbg !11087
  br i1 %20, label %25, label %21, !dbg !11088

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11089
  %23 = or i32 %22, 7168, !dbg !11089
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11089
  %24 = load i32, i32* %14, align 4, !dbg !11091
  br label %25, !dbg !11093

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11091
  %27 = and i32 %26, 8, !dbg !11094
  %28 = icmp eq i32 %27, 0, !dbg !11095
  br i1 %28, label %32, label %29, !dbg !11096

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11097
  %31 = or i32 %30, 57344, !dbg !11097
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11097
  br label %32, !dbg !11099

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11100
  %34 = and i32 %33, -241, !dbg !11100
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11100
  %36 = load i32, i32* %35, align 4, !dbg !11100
  %37 = or i32 %34, %36, !dbg !11100
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11100
  %38 = load i32, i32* %14, align 4, !dbg !11101
  br label %39, !dbg !11103

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11101
  %41 = and i32 %40, 1, !dbg !11104
  %42 = icmp eq i32 %41, 0, !dbg !11105
  br i1 %42, label %73, label %43, !dbg !11106

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11107
  %45 = load i32, i32* %44, align 4, !dbg !11107
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11110

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11111
  %48 = and i32 %47, 131072, !dbg !11114
  %49 = icmp eq i32 %48, 0, !dbg !11114
  br i1 %49, label %115, label %58, !dbg !11115

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11116
  %52 = and i32 %51, 33554432, !dbg !11120
  %53 = icmp eq i32 %52, 0, !dbg !11120
  br i1 %53, label %115, label %58, !dbg !11121

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11122
  %56 = and i32 %55, 2, !dbg !11125
  %57 = icmp eq i32 %56, 0, !dbg !11125
  br i1 %57, label %115, label %58, !dbg !11126

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11127
  %60 = and i32 %59, -4, !dbg !11127
  %61 = or i32 %60, %45, !dbg !11127
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11127
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %62, metadata !11064, metadata !DIExpression()), !dbg !11065
  br label %63, !dbg !11129

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11130
  %65 = and i32 %64, 12, !dbg !11130
  %66 = load i32, i32* %44, align 4, !dbg !11131
  %67 = shl i32 %66, 2, !dbg !11132
  %68 = icmp eq i32 %65, %67, !dbg !11133
  br i1 %68, label %73, label %69, !dbg !11129

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11134
  %71 = sub i32 %70, %62, !dbg !11137
  %72 = icmp ugt i32 %71, 5000, !dbg !11138
  br i1 %72, label %115, label %63, !dbg !11139, !llvm.loop !11140

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11142
  %75 = and i32 %74, 15, !dbg !11142
  %76 = icmp ugt i32 %75, %1, !dbg !11144
  br i1 %76, label %77, label %82, !dbg !11145

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11146
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11146
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11148
  %80 = and i32 %79, 15, !dbg !11148
  %81 = icmp eq i32 %80, %1, !dbg !11150
  br i1 %81, label %82, label %115, !dbg !11151

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11152
  %84 = and i32 %83, 4, !dbg !11154
  %85 = icmp eq i32 %84, 0, !dbg !11155
  br i1 %85, label %93, label %86, !dbg !11156

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11157
  %88 = and i32 %87, -7169, !dbg !11157
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11157
  %90 = load i32, i32* %89, align 4, !dbg !11157
  %91 = or i32 %88, %90, !dbg !11157
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11157
  %92 = load i32, i32* %14, align 4, !dbg !11159
  br label %93, !dbg !11161

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11159
  %95 = and i32 %94, 8, !dbg !11162
  %96 = icmp eq i32 %95, 0, !dbg !11163
  br i1 %96, label %104, label %97, !dbg !11164

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11165
  %99 = and i32 %98, -57345, !dbg !11165
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11165
  %101 = load i32, i32* %100, align 4, !dbg !11165
  %102 = shl i32 %101, 3, !dbg !11165
  %103 = or i32 %102, %99, !dbg !11165
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11165
  br label %104, !dbg !11167

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11168
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11169
  %107 = lshr i32 %106, 4, !dbg !11170
  %108 = and i32 %107, 15, !dbg !11170
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11171
  %110 = load i8, i8* %109, align 1, !dbg !11171
  %111 = zext i8 %110 to i32, !dbg !11171
  %112 = lshr i32 %105, %111, !dbg !11172
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11173
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11174
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11175
  br label %115, !dbg !11176

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11065
  ret i32 %116, !dbg !11177
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11178 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11180, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i32 0, metadata !11181, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i32 0, metadata !11182, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i32 0, metadata !11183, metadata !DIExpression()), !dbg !11184
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11185
  %2 = and i32 %1, 12, !dbg !11186
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11187

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 24000000, metadata !11183, metadata !DIExpression()), !dbg !11184
  br label %24, !dbg !11188

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11191
  %6 = and i32 %5, 63, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %6, metadata !11180, metadata !DIExpression()), !dbg !11184
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11194
  %8 = and i32 %7, 4194304, !dbg !11194
  %9 = icmp eq i32 %8, 0, !dbg !11196
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11197
  %11 = lshr i32 %10, 6, !dbg !11197
  %12 = and i32 %11, 511, !dbg !11197
  %13 = zext i32 %12 to i64, !dbg !11197
  %14 = select i1 %9, i64 16000000, i64 24000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11197
  %16 = zext i32 %6 to i64, !dbg !11197
  %17 = udiv i64 %15, %16, !dbg !11197
  %18 = trunc i64 %17 to i32, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %18, metadata !11181, metadata !DIExpression()), !dbg !11184
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11198
  %20 = lshr i32 %19, 15, !dbg !11199
  %21 = and i32 %20, 6, !dbg !11199
  %22 = add nuw nsw i32 %21, 2, !dbg !11199
  call void @llvm.dbg.value(metadata i32 %22, metadata !11182, metadata !DIExpression()), !dbg !11184
  %23 = udiv i32 %18, %22, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %23, metadata !11183, metadata !DIExpression()), !dbg !11184
  br label %24, !dbg !11201

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 24000000, %3 ], [ 16000000, %0 ], !dbg !11202
  call void @llvm.dbg.value(metadata i32 %25, metadata !11183, metadata !DIExpression()), !dbg !11184
  ret i32 %25, !dbg !11203
}

; Function Attrs: optsize
declare !dbg !11204 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11207 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11211, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i32 %1, metadata !11212, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i32 %2, metadata !11213, metadata !DIExpression()), !dbg !11231
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11232
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11232
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11214, metadata !DIExpression()), !dbg !11233
  %8 = icmp eq i32 %0, 0, !dbg !11234
  br i1 %8, label %9, label %23, !dbg !11235

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11236
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11224, metadata !DIExpression()), !dbg !11236
  store volatile i32 0, i32* %5, align 4, !dbg !11236
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11236
  %12 = or i32 %11, 1, !dbg !11236
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11236
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11236
  %14 = and i32 %13, 1, !dbg !11236
  store volatile i32 %14, i32* %5, align 4, !dbg !11236
  %15 = load volatile i32, i32* %5, align 4, !dbg !11236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11237
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11238
  store i32 256, i32* %16, align 4, !dbg !11239
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11240
  store i32 2, i32* %17, align 4, !dbg !11241
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11242
  store i32 3, i32* %18, align 4, !dbg !11243
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11244
  store i32 0, i32* %19, align 4, !dbg !11245
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11246
  store i32 0, i32* %20, align 4, !dbg !11247
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11248
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11249
  %22 = and i32 %21, -123731969, !dbg !11249
  br label %38, !dbg !11250

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11251
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11228, metadata !DIExpression()), !dbg !11251
  store volatile i32 0, i32* %6, align 4, !dbg !11251
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11251
  %26 = or i32 %25, 4, !dbg !11251
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11251
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11251
  %28 = and i32 %27, 4, !dbg !11251
  store volatile i32 %28, i32* %6, align 4, !dbg !11251
  %29 = load volatile i32, i32* %6, align 4, !dbg !11251
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11252
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11253
  store i32 512, i32* %30, align 4, !dbg !11254
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11255
  store i32 2, i32* %31, align 4, !dbg !11256
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11257
  store i32 3, i32* %32, align 4, !dbg !11258
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11259
  store i32 0, i32* %33, align 4, !dbg !11260
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11261
  store i32 0, i32* %34, align 4, !dbg !11262
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11263
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11264
  %36 = and i32 %35, 134217727, !dbg !11264
  %37 = shl i32 %2, 3, !dbg !11264
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11265
  %42 = or i32 %41, %40, !dbg !11265
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11265
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11266
  ret void, !dbg !11266
}

; Function Attrs: optsize
declare !dbg !11267 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11271 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11272
  ret void, !dbg !11273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11274 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11275
  ret void, !dbg !11276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11277 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11278
  ret i32 %1, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11280 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11281
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11282
  %3 = lshr i32 %2, 10, !dbg !11283
  %4 = and i32 %3, 7, !dbg !11283
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11284
  %6 = load i8, i8* %5, align 1, !dbg !11284
  %7 = zext i8 %6 to i32, !dbg !11284
  %8 = lshr i32 %1, %7, !dbg !11285
  ret i32 %8, !dbg !11286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11287 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11288
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11289
  %3 = lshr i32 %2, 13, !dbg !11290
  %4 = and i32 %3, 7, !dbg !11290
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11291
  %6 = load i8, i8* %5, align 1, !dbg !11291
  %7 = zext i8 %6 to i32, !dbg !11291
  %8 = lshr i32 %1, %7, !dbg !11292
  ret i32 %8, !dbg !11293
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11294 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11300
  store i32 15, i32* %2, align 4, !dbg !11301
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11302
  %4 = and i32 %3, 262144, !dbg !11304
  %5 = icmp eq i32 %4, 0, !dbg !11305
  br i1 %5, label %8, label %6, !dbg !11306

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11307
  store i32 327680, i32* %7, align 4, !dbg !11309
  br label %15, !dbg !11310

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11311
  %10 = and i32 %9, 65536, !dbg !11313
  %11 = icmp eq i32 %10, 0, !dbg !11314
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11315
  br i1 %11, label %14, label %13, !dbg !11316

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11317
  br label %15, !dbg !11319

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11320
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11322
  %17 = and i32 %16, 1, !dbg !11324
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11325
  store i32 %17, i32* %18, align 4, !dbg !11327
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11328
  %20 = lshr i32 %19, 3, !dbg !11329
  %21 = and i32 %20, 31, !dbg !11329
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11330
  store i32 %21, i32* %22, align 4, !dbg !11331
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11332
  %24 = and i32 %23, 4, !dbg !11334
  %25 = icmp eq i32 %24, 0, !dbg !11335
  br i1 %25, label %28, label %26, !dbg !11336

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11337
  store i32 5, i32* %27, align 4, !dbg !11339
  br label %35, !dbg !11340

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11341
  %30 = and i32 %29, 1, !dbg !11343
  %31 = icmp eq i32 %30, 0, !dbg !11344
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11345
  br i1 %31, label %34, label %33, !dbg !11346

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11347
  br label %35, !dbg !11349

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11350
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11352
  %37 = and i32 %36, 1, !dbg !11354
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11355
  store i32 %37, i32* %38, align 4, !dbg !11357
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11358
  %40 = and i32 %39, 16777216, !dbg !11360
  %41 = icmp eq i32 %40, 0, !dbg !11361
  %42 = select i1 %41, i32 1, i32 2, !dbg !11362
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11363
  store i32 %42, i32* %43, align 4, !dbg !11365
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11366
  %45 = and i32 %44, 4194304, !dbg !11367
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11368
  store i32 %45, i32* %46, align 4, !dbg !11369
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11370
  %48 = and i32 %47, 63, !dbg !11371
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11372
  store i32 %48, i32* %49, align 4, !dbg !11373
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11374
  %51 = lshr i32 %50, 6, !dbg !11375
  %52 = and i32 %51, 511, !dbg !11375
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11376
  store i32 %52, i32* %53, align 4, !dbg !11377
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11378
  %55 = shl i32 %54, 1, !dbg !11379
  %56 = and i32 %55, 393216, !dbg !11379
  %57 = add nuw nsw i32 %56, 131072, !dbg !11379
  %58 = lshr exact i32 %57, 16, !dbg !11380
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11381
  store i32 %58, i32* %59, align 4, !dbg !11382
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11383
  %61 = lshr i32 %60, 24, !dbg !11384
  %62 = and i32 %61, 15, !dbg !11384
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11385
  store i32 %62, i32* %63, align 4, !dbg !11386
  ret void, !dbg !11387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11392, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i32* %1, metadata !11393, metadata !DIExpression()), !dbg !11394
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11395
  store i32 15, i32* %3, align 4, !dbg !11396
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11397
  %5 = and i32 %4, 3, !dbg !11398
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11399
  store i32 %5, i32* %6, align 4, !dbg !11400
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11401
  %8 = and i32 %7, 240, !dbg !11402
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11403
  store i32 %8, i32* %9, align 4, !dbg !11404
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11405
  %11 = and i32 %10, 7168, !dbg !11406
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11407
  store i32 %11, i32* %12, align 4, !dbg !11408
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11409
  %14 = lshr i32 %13, 3, !dbg !11410
  %15 = and i32 %14, 7168, !dbg !11410
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11411
  store i32 %15, i32* %16, align 4, !dbg !11412
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11413
  %18 = and i32 %17, 15, !dbg !11414
  store i32 %18, i32* %1, align 4, !dbg !11415
  ret void, !dbg !11416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11417 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11418
  %2 = and i32 %1, 128, !dbg !11418
  %3 = icmp eq i32 %2, 0, !dbg !11418
  br i1 %3, label %5, label %4, !dbg !11420

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11421
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11423
  br label %5, !dbg !11424

5:                                                ; preds = %4, %0
  ret void, !dbg !11425
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11426 {
  ret void, !dbg !11427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11431, metadata !DIExpression()), !dbg !11432
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11433
  ret void, !dbg !11434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.value(metadata i32 1000, metadata !11439, metadata !DIExpression()), !dbg !11440
  %2 = udiv i32 %0, 1000, !dbg !11441
  %3 = add nsw i32 %2, -1, !dbg !11442
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11443
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11444
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11447 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11449, metadata !DIExpression()), !dbg !11451
  %3 = bitcast i32* %2 to i8*, !dbg !11452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11452
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11450, metadata !DIExpression()), !dbg !11453
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11454
  store volatile i32 %4, i32* %2, align 4, !dbg !11453
  %5 = load volatile i32, i32* %2, align 4, !dbg !11455
  %6 = icmp eq i32 %0, -1, !dbg !11456
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11449, metadata !DIExpression()), !dbg !11451
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %8, metadata !11449, metadata !DIExpression()), !dbg !11451
  br label %9, !dbg !11458

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11449, metadata !DIExpression()), !dbg !11451
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11459
  call void @llvm.dbg.value(metadata i32 undef, metadata !11449, metadata !DIExpression()), !dbg !11451
  %12 = shl i32 %11, 15, !dbg !11451
  %13 = ashr i32 %12, 31, !dbg !11451
  %14 = add i32 %13, %10, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %14, metadata !11449, metadata !DIExpression()), !dbg !11451
  %15 = icmp eq i32 %14, 0, !dbg !11458
  br i1 %15, label %16, label %9, !dbg !11458

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11462
  ret void, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11465, metadata !DIExpression()), !dbg !11466
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11474, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11478, metadata !DIExpression()), !dbg !11479
  %2 = icmp eq i32 %0, 0, !dbg !11480
  br i1 %2, label %72, label %3, !dbg !11482

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11483
  %5 = icmp eq i32 %4, 49152, !dbg !11486
  br i1 %5, label %6, label %21, !dbg !11487

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11488
  %8 = select i1 %7, i32 0, i32 5, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %8, metadata !11477, metadata !DIExpression()), !dbg !11479
  %9 = add i32 %0, -120000001, !dbg !11492
  %10 = icmp ult i32 %9, 30000000, !dbg !11492
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %11, metadata !11477, metadata !DIExpression()), !dbg !11479
  %12 = icmp ult i32 %9, -30000000, !dbg !11494
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %13, metadata !11477, metadata !DIExpression()), !dbg !11479
  %14 = icmp ugt i32 %0, 60000000, !dbg !11496
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11498
  br i1 %16, label %21, label %17, !dbg !11498

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11499
  %19 = and i1 %18, %15, !dbg !11502
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11502
  br label %21, !dbg !11502

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11479
  call void @llvm.dbg.value(metadata i32 %22, metadata !11477, metadata !DIExpression()), !dbg !11479
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11503
  %24 = icmp eq i32 %23, 32768, !dbg !11505
  br i1 %24, label %25, label %45, !dbg !11506

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !11507
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11510
  %29 = select i1 %28, i32 5, i32 %22, !dbg !11510
  call void @llvm.dbg.value(metadata i32 %29, metadata !11477, metadata !DIExpression()), !dbg !11479
  %30 = icmp ugt i32 %0, 12000000, !dbg !11511
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11513
  %33 = select i1 %32, i32 4, i32 %29, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %33, metadata !11477, metadata !DIExpression()), !dbg !11479
  %34 = icmp ugt i32 %0, 90000000, !dbg !11514
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11516
  %37 = select i1 %36, i32 3, i32 %33, !dbg !11516
  call void @llvm.dbg.value(metadata i32 %37, metadata !11477, metadata !DIExpression()), !dbg !11479
  %38 = icmp ugt i32 %0, 60000000, !dbg !11517
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !11519
  br i1 %40, label %45, label %41, !dbg !11519

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !11520
  %43 = select i1 %42, i1 %39, i1 false, !dbg !11523
  %44 = select i1 %43, i32 1, i32 %37, !dbg !11523
  br label %45, !dbg !11523

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !11524
  call void @llvm.dbg.value(metadata i32 %46, metadata !11477, metadata !DIExpression()), !dbg !11479
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11525
  %48 = icmp eq i32 %47, 16384, !dbg !11527
  br i1 %48, label %49, label %61, !dbg !11528

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !11529
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !11532
  %53 = select i1 %52, i32 3, i32 %46, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %53, metadata !11477, metadata !DIExpression()), !dbg !11479
  %54 = icmp ugt i32 %0, 60000000, !dbg !11533
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !11535
  br i1 %56, label %61, label %57, !dbg !11535

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !11536
  %59 = select i1 %58, i1 %55, i1 false, !dbg !11539
  %60 = select i1 %59, i32 1, i32 %53, !dbg !11539
  br label %61, !dbg !11539

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !11524
  call void @llvm.dbg.value(metadata i32 %62, metadata !11477, metadata !DIExpression()), !dbg !11479
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !11540
  call void @llvm.dbg.value(metadata i32 2, metadata !11475, metadata !DIExpression()), !dbg !11479
  br label %63, !dbg !11541

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !11524
  call void @llvm.dbg.value(metadata i32 %64, metadata !11475, metadata !DIExpression()), !dbg !11479
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11542
  call void @llvm.dbg.value(metadata i32 %65, metadata !11476, metadata !DIExpression()), !dbg !11479
  %66 = add nsw i32 %64, -1, !dbg !11544
  call void @llvm.dbg.value(metadata i32 %66, metadata !11475, metadata !DIExpression()), !dbg !11479
  %67 = icmp ne i32 %65, %62, !dbg !11545
  %68 = icmp ne i32 %66, 0, !dbg !11546
  %69 = select i1 %67, i1 %68, i1 false, !dbg !11546
  br i1 %69, label %63, label %70, !dbg !11547, !llvm.loop !11548

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !11550
  call void @llvm.dbg.value(metadata i32 %73, metadata !11478, metadata !DIExpression()), !dbg !11479
  ret i32 %73, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11552 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11554
  %2 = and i32 %1, 49152, !dbg !11554
  ret i32 %2, !dbg !11555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11558, metadata !DIExpression()), !dbg !11559
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11560
  %3 = and i32 %2, -16, !dbg !11560
  %4 = or i32 %3, %0, !dbg !11560
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11562 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11563
  %2 = and i32 %1, 15, !dbg !11563
  ret i32 %2, !dbg !11564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.sys_memory_stats* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11565 {
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %0, metadata !11583, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11584, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11585, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11586, metadata !DIExpression()), !dbg !11587
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11588
  %4 = icmp eq i32 %3, 0, !dbg !11590
  br i1 %4, label %5, label %21, !dbg !11591

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.sys_memory_stats* noundef %0) #26, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %6, metadata !11586, metadata !DIExpression()), !dbg !11587
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.100() #26, !dbg !11594
  %8 = icmp eq i32 %7, 1, !dbg !11596
  br i1 %8, label %13, label %9, !dbg !11597

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.101() #26, !dbg !11598
  br label %10, !dbg !11600

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.100() #26, !dbg !11601
  %12 = icmp eq i32 %11, 1, !dbg !11602
  br i1 %12, label %13, label %10, !dbg !11600, !llvm.loop !11603

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 0, !dbg !11605
  %15 = load i32, i32* %14, align 4, !dbg !11605
  %16 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 1, !dbg !11606
  %17 = load i32, i32* %16, align 4, !dbg !11606
  %18 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 2, !dbg !11607
  %19 = load i32, i32* %18, align 4, !dbg !11607
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.102(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11608
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %20, metadata !11585, metadata !DIExpression()), !dbg !11587
  br label %21, !dbg !11610

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11611
  call void @llvm.dbg.value(metadata i32 %22, metadata !11585, metadata !DIExpression()), !dbg !11587
  ret i32 %22, !dbg !11612
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11613 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11617, metadata !DIExpression()), !dbg !11618
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.104() #26, !dbg !11619
  %2 = icmp ne i32 %1, 0, !dbg !11621
  call void @llvm.dbg.value(metadata i1 %2, metadata !11617, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11618
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !11622
  %4 = icmp ne i32 %3, 0, !dbg !11624
  call void @llvm.dbg.value(metadata i1 undef, metadata !11617, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11618
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11625
  %6 = icmp ne i32 %5, 0, !dbg !11627
  %7 = select i1 %6, i1 true, i1 %4, !dbg !11628
  %8 = select i1 %7, i1 true, i1 %2, !dbg !11628
  %9 = zext i1 %8 to i32, !dbg !11628
  call void @llvm.dbg.value(metadata i32 %9, metadata !11617, metadata !DIExpression()), !dbg !11618
  ret i32 %9, !dbg !11629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11634, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11635, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 0, metadata !11636, metadata !DIExpression()), !dbg !11637
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11638
  %4 = load i32, i32* %3, align 4, !dbg !11638
  %5 = and i32 %4, 63, !dbg !11639
  %6 = udiv i32 %0, %5, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %6, metadata !11636, metadata !DIExpression()), !dbg !11637
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11641
  %8 = load i32, i32* %7, align 4, !dbg !11641
  %9 = and i32 %8, 511, !dbg !11642
  %10 = mul i32 %9, %6, !dbg !11643
  call void @llvm.dbg.value(metadata i32 %10, metadata !11636, metadata !DIExpression()), !dbg !11637
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11644
  %12 = load i32, i32* %11, align 4, !dbg !11644
  %13 = lshr i32 %12, 15, !dbg !11645
  %14 = and i32 %13, 131070, !dbg !11645
  %15 = add nuw nsw i32 %14, 2, !dbg !11645
  %16 = udiv i32 %10, %15, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %16, metadata !11636, metadata !DIExpression()), !dbg !11637
  ret i32 %16, !dbg !11647
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.100() unnamed_addr #16 !dbg !11648 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11649
  %2 = lshr i32 %1, 1, !dbg !11650
  %3 = and i32 %2, 1, !dbg !11650
  ret i32 %3, !dbg !11651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.101() unnamed_addr #15 !dbg !11652 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11653
  %2 = or i32 %1, 1, !dbg !11653
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11653
  ret void, !dbg !11654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.102(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11657, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %1, metadata !11658, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %2, metadata !11659, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %3, metadata !11660, metadata !DIExpression()), !dbg !11661
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11662
  %6 = and i32 %5, -4227072, !dbg !11662
  %7 = or i32 %1, %0, !dbg !11662
  %8 = shl i32 %2, 6, !dbg !11662
  %9 = or i32 %7, %8, !dbg !11662
  %10 = or i32 %9, %6, !dbg !11662
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11662
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11663
  %12 = and i32 %11, -196609, !dbg !11663
  %13 = or i32 %12, %3, !dbg !11663
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11663
  ret void, !dbg !11664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11674
  %4 = load i32, i32* %3, align 4, !dbg !11674
  %5 = lshr i32 %4, 4, !dbg !11674
  %6 = and i32 %5, 15, !dbg !11674
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11674
  %8 = load i8, i8* %7, align 1, !dbg !11674
  %9 = zext i8 %8 to i32, !dbg !11674
  %10 = lshr i32 %0, %9, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %10, metadata !11672, metadata !DIExpression()), !dbg !11673
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11675
  %12 = icmp ult i32 %11, %10, !dbg !11677
  br i1 %12, label %13, label %16, !dbg !11678

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %14, metadata !11671, metadata !DIExpression()), !dbg !11673
  %15 = icmp eq i32 %14, 0, !dbg !11681
  br i1 %15, label %16, label %30, !dbg !11683

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.103() #26, !dbg !11684
  br label %17, !dbg !11686

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.104() #26, !dbg !11687
  %19 = icmp eq i32 %18, 1, !dbg !11688
  br i1 %19, label %20, label %17, !dbg !11686, !llvm.loop !11689

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11691
  tail call fastcc void @LL_RCC_SetAHBPrescaler.105(i32 noundef %21) #26, !dbg !11692
  tail call fastcc void @LL_RCC_SetSysClkSource.106() #26, !dbg !11693
  br label %22, !dbg !11694

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.107() #26, !dbg !11695
  %24 = icmp eq i32 %23, 8, !dbg !11696
  br i1 %24, label %25, label %22, !dbg !11694, !llvm.loop !11697

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11699
  %27 = load i32, i32* %26, align 4, !dbg !11699
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.108(i32 noundef %27) #26, !dbg !11700
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11701
  %29 = load i32, i32* %28, align 4, !dbg !11701
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.109(i32 noundef %29) #26, !dbg !11702
  br label %30, !dbg !11703

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11704
  %33 = icmp ugt i32 %32, %10, !dbg !11706
  br i1 %33, label %34, label %36, !dbg !11707

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11708
  call void @llvm.dbg.value(metadata i32 %35, metadata !11671, metadata !DIExpression()), !dbg !11673
  br label %36, !dbg !11710

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11673
  call void @llvm.dbg.value(metadata i32 %37, metadata !11671, metadata !DIExpression()), !dbg !11673
  %38 = icmp eq i32 %37, 0, !dbg !11711
  br i1 %38, label %39, label %40, !dbg !11713

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11714
  br label %40, !dbg !11716

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.103() unnamed_addr #15 !dbg !11718 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11719
  %2 = or i32 %1, 16777216, !dbg !11719
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.104() unnamed_addr #16 !dbg !11721 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11722
  %2 = lshr i32 %1, 25, !dbg !11723
  %3 = and i32 %2, 1, !dbg !11723
  ret i32 %3, !dbg !11724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.105(i32 noundef %0) unnamed_addr #15 !dbg !11725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11727, metadata !DIExpression()), !dbg !11728
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11729
  %3 = and i32 %2, -241, !dbg !11729
  %4 = or i32 %3, %0, !dbg !11729
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11729
  ret void, !dbg !11730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.106() unnamed_addr #15 !dbg !11731 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11733, metadata !DIExpression()), !dbg !11734
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11735
  %2 = and i32 %1, -4, !dbg !11735
  %3 = or i32 %2, 2, !dbg !11735
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11735
  ret void, !dbg !11736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.107() unnamed_addr #16 !dbg !11737 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11738
  %2 = and i32 %1, 12, !dbg !11738
  ret i32 %2, !dbg !11739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.108(i32 noundef %0) unnamed_addr #15 !dbg !11740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11742, metadata !DIExpression()), !dbg !11743
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11744
  %3 = and i32 %2, -7169, !dbg !11744
  %4 = or i32 %3, %0, !dbg !11744
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11744
  ret void, !dbg !11745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.109(i32 noundef %0) unnamed_addr #15 !dbg !11746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11748, metadata !DIExpression()), !dbg !11749
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11750
  %3 = and i32 %2, -57345, !dbg !11750
  %4 = or i32 %3, %0, !dbg !11750
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11750
  ret void, !dbg !11751
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !11752 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11753
  %2 = lshr i32 %1, 29, !dbg !11754
  %3 = and i32 %2, 1, !dbg !11754
  ret i32 %3, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11757
  %2 = lshr i32 %1, 27, !dbg !11758
  %3 = and i32 %2, 1, !dbg !11758
  ret i32 %3, !dbg !11759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.sys_memory_stats* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11764, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata i32 %1, metadata !11765, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %2, metadata !11766, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !11767, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata i32 0, metadata !11768, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata i32 0, metadata !11769, metadata !DIExpression()), !dbg !11770
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11771
  %6 = icmp eq i32 %5, 0, !dbg !11773
  br i1 %6, label %7, label %27, !dbg !11774

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* noundef %2) #26, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %8, metadata !11769, metadata !DIExpression()), !dbg !11770
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.110() #26, !dbg !11777
  %10 = icmp eq i32 %9, 1, !dbg !11779
  br i1 %10, label %19, label %11, !dbg !11780

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11781
  br i1 %12, label %13, label %14, !dbg !11784

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11785
  br label %15, !dbg !11787

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.111() #26, !dbg !11788
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.112() #26, !dbg !11790
  br label %16, !dbg !11791

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.110() #26, !dbg !11792
  %18 = icmp eq i32 %17, 1, !dbg !11793
  br i1 %18, label %19, label %16, !dbg !11791, !llvm.loop !11794

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 0, !dbg !11796
  %21 = load i32, i32* %20, align 4, !dbg !11796
  %22 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 1, !dbg !11797
  %23 = load i32, i32* %22, align 4, !dbg !11797
  %24 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 2, !dbg !11798
  %25 = load i32, i32* %24, align 4, !dbg !11798
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.102(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11799
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !11800
  call void @llvm.dbg.value(metadata i32 %26, metadata !11768, metadata !DIExpression()), !dbg !11770
  br label %27, !dbg !11801

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11802
  call void @llvm.dbg.value(metadata i32 %28, metadata !11768, metadata !DIExpression()), !dbg !11770
  ret i32 %28, !dbg !11803
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.110() unnamed_addr #16 !dbg !11804 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11805
  %2 = lshr i32 %1, 17, !dbg !11806
  %3 = and i32 %2, 1, !dbg !11806
  ret i32 %3, !dbg !11807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11808 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11809
  %2 = or i32 %1, 262144, !dbg !11809
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11809
  ret void, !dbg !11810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.111() unnamed_addr #15 !dbg !11811 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11812
  %2 = and i32 %1, -262145, !dbg !11812
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11812
  ret void, !dbg !11813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.112() unnamed_addr #15 !dbg !11814 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11815
  %2 = or i32 %1, 65536, !dbg !11815
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11815
  ret void, !dbg !11816
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11817 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11820, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata i32 undef, metadata !11820, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata i32 undef, metadata !11820, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11836
  ret void, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11838 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11842, metadata !DIExpression()), !dbg !11844
  %2 = icmp eq i8* %0, null, !dbg !11845
  br i1 %2, label %29, label %3, !dbg !11847

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11848
  %5 = icmp eq i8 %4, 0, !dbg !11849
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11850
  br i1 %6, label %29, label %8, !dbg !11850

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11843, metadata !DIExpression()), !dbg !11844
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11851

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11843, metadata !DIExpression()), !dbg !11844
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11853
  br i1 %10, label %11, label %15, !dbg !11858

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11859
  %13 = load i8*, i8** %12, align 4, !dbg !11859
  %14 = icmp eq i8* %13, %0, !dbg !11860
  br i1 %14, label %29, label %15, !dbg !11861

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11862
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11843, metadata !DIExpression()), !dbg !11844
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11863
  br i1 %17, label %7, label %8, !dbg !11864, !llvm.loop !11865

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11843, metadata !DIExpression()), !dbg !11844
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11867
  br i1 %20, label %21, label %26, !dbg !11871

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11872
  %23 = load i8*, i8** %22, align 4, !dbg !11872
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11873
  %25 = icmp eq i32 %24, 0, !dbg !11874
  br i1 %25, label %29, label %26, !dbg !11875

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11876
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11843, metadata !DIExpression()), !dbg !11844
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11877
  br i1 %28, label %29, label %18, !dbg !11851, !llvm.loop !11878

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11844
  ret %struct.device* %30, !dbg !11880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11885, metadata !DIExpression()), !dbg !11886
  %2 = icmp eq %struct.device* %0, null, !dbg !11887
  br i1 %2, label %14, label %3, !dbg !11889

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11890
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11890
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11891
  %7 = load i8, i8* %6, align 1, !dbg !11891
  %8 = and i8 %7, 1, !dbg !11891
  %9 = icmp eq i8 %8, 0, !dbg !11891
  br i1 %9, label %14, label %10, !dbg !11892

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11893
  %12 = load i8, i8* %11, align 1, !dbg !11893
  %13 = icmp eq i8 %12, 0, !dbg !11894
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11886
  ret i1 %15, !dbg !11895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11896 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11901, metadata !DIExpression()), !dbg !11902
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11903
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11905 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11913, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11914, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata i8* %2, metadata !11915, metadata !DIExpression()), !dbg !11918
  %5 = bitcast i32* %4 to i8*, !dbg !11919
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11919
  call void @llvm.dbg.value(metadata i32 0, metadata !11916, metadata !DIExpression()), !dbg !11918
  store i32 0, i32* %4, align 4, !dbg !11920
  call void @llvm.dbg.value(metadata i32* %4, metadata !11916, metadata !DIExpression(DW_OP_deref)), !dbg !11918
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11921
  call void @llvm.dbg.value(metadata i16* %6, metadata !11917, metadata !DIExpression()), !dbg !11918
  %7 = load i32, i32* %4, align 4, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %7, metadata !11916, metadata !DIExpression()), !dbg !11918
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11923
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11924
  ret i32 %8, !dbg !11925
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11930, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i32* %1, metadata !11931, metadata !DIExpression()), !dbg !11936
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11937
  %4 = load i16*, i16** %3, align 4, !dbg !11937
  call void @llvm.dbg.value(metadata i16* %4, metadata !11932, metadata !DIExpression()), !dbg !11936
  %5 = icmp eq i16* %4, null, !dbg !11938
  br i1 %5, label %14, label %6, !dbg !11939

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11940
  call void @llvm.dbg.value(metadata i32 %7, metadata !11933, metadata !DIExpression()), !dbg !11940
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11941
  %9 = load i16, i16* %8, align 2, !dbg !11941
  %10 = add i16 %9, -32767, !dbg !11942
  %11 = icmp ult i16 %10, 2, !dbg !11942
  %12 = add i32 %7, 1, !dbg !11943
  call void @llvm.dbg.value(metadata i32 %12, metadata !11933, metadata !DIExpression()), !dbg !11940
  br i1 %11, label %13, label %6, !dbg !11942, !llvm.loop !11945

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11948
  br label %14, !dbg !11949

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11951 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11955, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %1, metadata !11956, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11957, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i8* %3, metadata !11958, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 0, metadata !11959, metadata !DIExpression()), !dbg !11967
  %5 = icmp eq i32 %1, 0, !dbg !11968
  br i1 %5, label %16, label %8, !dbg !11969

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11959, metadata !DIExpression()), !dbg !11967
  %7 = icmp eq i32 %15, %1, !dbg !11968
  br i1 %7, label %16, label %8, !dbg !11969, !llvm.loop !11970

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11959, metadata !DIExpression()), !dbg !11967
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11972
  %11 = load i16, i16* %10, align 2, !dbg !11972
  call void @llvm.dbg.value(metadata i16 %11, metadata !11961, metadata !DIExpression()), !dbg !11973
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11974
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11964, metadata !DIExpression()), !dbg !11973
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %13, metadata !11965, metadata !DIExpression()), !dbg !11973
  %14 = icmp slt i32 %13, 0, !dbg !11976
  %15 = add nuw i32 %9, 1, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %15, metadata !11959, metadata !DIExpression()), !dbg !11967
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11980 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11984, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11985, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11986, metadata !DIExpression()), !dbg !11987
  %2 = sext i16 %0 to i32, !dbg !11988
  %3 = icmp slt i16 %0, 1, !dbg !11990
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11991
  %6 = add nsw i32 %2, -1, !dbg !11991
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11991
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11991
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11985, metadata !DIExpression()), !dbg !11987
  ret %struct.device* %8, !dbg !11992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11993 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11995, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11996, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i8* %2, metadata !11997, metadata !DIExpression()), !dbg !12000
  %5 = bitcast i32* %4 to i8*, !dbg !12001
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12001
  call void @llvm.dbg.value(metadata i32 0, metadata !11998, metadata !DIExpression()), !dbg !12000
  store i32 0, i32* %4, align 4, !dbg !12002
  call void @llvm.dbg.value(metadata i32* %4, metadata !11998, metadata !DIExpression(DW_OP_deref)), !dbg !12000
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12003
  call void @llvm.dbg.value(metadata i16* %6, metadata !11999, metadata !DIExpression()), !dbg !12000
  %7 = load i32, i32* %4, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %7, metadata !11998, metadata !DIExpression()), !dbg !12000
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12005
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12006
  ret i32 %8, !dbg !12007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12010, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i32* %1, metadata !12011, metadata !DIExpression()), !dbg !12015
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12016
  %4 = load i16*, i16** %3, align 4, !dbg !12016
  call void @llvm.dbg.value(metadata i16* %4, metadata !12012, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i32 0, metadata !12013, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i32 0, metadata !12014, metadata !DIExpression()), !dbg !12015
  %5 = icmp eq i16* %4, null, !dbg !12017
  br i1 %5, label %22, label %6, !dbg !12019

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12013, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i16* %8, metadata !12012, metadata !DIExpression()), !dbg !12015
  %9 = load i16, i16* %8, align 2, !dbg !12020
  %10 = icmp eq i16 %9, -32768, !dbg !12024
  call void @llvm.dbg.value(metadata i32 undef, metadata !12013, metadata !DIExpression()), !dbg !12015
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12025
  call void @llvm.dbg.value(metadata i16* %11, metadata !12012, metadata !DIExpression()), !dbg !12015
  %12 = zext i1 %10 to i32, !dbg !12026
  %13 = add i32 %7, %12, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %13, metadata !12013, metadata !DIExpression()), !dbg !12015
  %14 = icmp eq i32 %13, 2, !dbg !12027
  br i1 %14, label %15, label %6, !dbg !12028

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12015
  call void @llvm.dbg.value(metadata i32 %16, metadata !12014, metadata !DIExpression()), !dbg !12015
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12029
  %18 = load i16, i16* %17, align 2, !dbg !12029
  %19 = icmp eq i16 %18, 32767, !dbg !12030
  %20 = add i32 %16, 1, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %20, metadata !12014, metadata !DIExpression()), !dbg !12015
  br i1 %19, label %21, label %15, !dbg !12033, !llvm.loop !12034

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12036
  br label %22, !dbg !12037

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12038
  call void @llvm.dbg.value(metadata i16* %23, metadata !12012, metadata !DIExpression()), !dbg !12015
  ret i16* %23, !dbg !12039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12040 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12043
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12044
  ret i32* %2, !dbg !12045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12046 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12195, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12196, metadata !DIExpression()), !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12203, metadata !DIExpression()), !dbg !12205
  call void @llvm.dbg.value(metadata i32 %1, metadata !12204, metadata !DIExpression()), !dbg !12205
  ret void, !dbg !12206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12207 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12211, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 %1, metadata !12212, metadata !DIExpression()), !dbg !12213
  ret void, !dbg !12214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12219, metadata !DIExpression()), !dbg !12221
  call void @llvm.dbg.value(metadata i8* %1, metadata !12220, metadata !DIExpression()), !dbg !12221
  ret i32 -134, !dbg !12222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12227, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i8* %1, metadata !12228, metadata !DIExpression()), !dbg !12229
  ret i32 -134, !dbg !12230
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12234, metadata !DIExpression()), !dbg !12235
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12236, !srcloc !12242
  call void @llvm.dbg.value(metadata i32 undef, metadata !12239, metadata !DIExpression()) #24, !dbg !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #24, !dbg !12243
  br label %3, !dbg !12244

3:                                                ; preds = %3, %1
  br label %3, !dbg !12245, !llvm.loop !12248
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12255, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12256, metadata !DIExpression()), !dbg !12257
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12258
  unreachable, !dbg !12258
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12261, metadata !DIExpression()), !dbg !12262
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12263
  unreachable, !dbg !12263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12266, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12267, metadata !DIExpression()), !dbg !12270
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12271, !srcloc !12242
  call void @llvm.dbg.value(metadata i32 undef, metadata !12239, metadata !DIExpression()) #24, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #24, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12268, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12269, metadata !DIExpression()), !dbg !12270
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12274
  br i1 %4, label %6, label %5, !dbg !12276

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12277
  br label %7, !dbg !12278

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12277
  br label %7, !dbg !12281

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %8, metadata !12239, metadata !DIExpression()) #24, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %8, metadata !12268, metadata !DIExpression()), !dbg !12270
  %9 = tail call fastcc %struct.k_thread* @k_current_get.119() #27, !dbg !12283
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12269, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i32 undef, metadata !12284, metadata !DIExpression()) #24, !dbg !12287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12289, !srcloc !12290
  tail call fastcc void @k_thread_abort.120(%struct.k_thread* noundef %9) #26, !dbg !12291
  ret void, !dbg !12294
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.119() unnamed_addr #9 !dbg !12295 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.121() #27, !dbg !12299
  ret %struct.k_thread* %1, !dbg !12300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.120(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12305, metadata !DIExpression()), !dbg !12306
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12307, !srcloc !12309
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12310
  ret void, !dbg !12311
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.121() unnamed_addr #9 !dbg !12312 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12313, !srcloc !12315
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12316
  ret %struct.k_thread* %1, !dbg !12317
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12322, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i32 %1, metadata !12323, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i32 %2, metadata !12324, metadata !DIExpression()), !dbg !12325
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12326
  ret void, !dbg !12327
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12332, metadata !DIExpression()), !dbg !12335
  call void @llvm.dbg.value(metadata i8* %1, metadata !12333, metadata !DIExpression()), !dbg !12335
  call void @llvm.dbg.value(metadata i32 %2, metadata !12334, metadata !DIExpression()), !dbg !12335
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12336
  ret void, !dbg !12337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12338 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12339
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !12340
  ret void, !dbg !12341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12344, metadata !DIExpression()), !dbg !12345
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12346
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12347
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12348
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12349
  %4 = trunc i32 %0 to i8, !dbg !12350
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12351
  store i8 %4, i8* %5, align 4, !dbg !12352
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12353
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12354
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12355
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12356
  store i8* %8, i8** %9, align 4, !dbg !12357
  ret void, !dbg !12358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12361, metadata !DIExpression()), !dbg !12367
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12368
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12362, metadata !DIExpression()), !dbg !12367
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12369
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12363, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i8* null, metadata !12366, metadata !DIExpression()), !dbg !12367
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12370
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12371
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12372
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12373
  ret void, !dbg !12374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12375 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12379, metadata !DIExpression()), !dbg !12380
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12381
  ret i8* %2, !dbg !12382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12388, metadata !DIExpression()), !dbg !12389
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12390
  %3 = load i8, i8* %2, align 1, !dbg !12391
  %4 = and i8 %3, -5, !dbg !12391
  store i8 %4, i8* %2, align 1, !dbg !12391
  ret void, !dbg !12392
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12393 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12396
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12397
  %3 = ptrtoint i8* %2 to i32, !dbg !12406
  %4 = add i32 %3, 2048, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %4, metadata !12401, metadata !DIExpression()) #24, !dbg !12408
  call void @llvm.dbg.value(metadata i32 %4, metadata !12409, metadata !DIExpression()) #24, !dbg !12412
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12414, !srcloc !12415
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12416
  %6 = or i32 %5, 512, !dbg !12416
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12416
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -2, i32 noundef 255) #25, !dbg !12417
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -5, i32 noundef 0) #25, !dbg !12420
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -12, i32 noundef 0) #25, !dbg !12421
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -11, i32 noundef 0) #25, !dbg !12422
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -10, i32 noundef 0) #25, !dbg !12423
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -4, i32 noundef 0) #25, !dbg !12424
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12425
  %8 = or i32 %7, 458752, !dbg !12425
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12425
  tail call void @z_arm_fault_init() #25, !dbg !12426
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12427
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12428
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12431
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12432
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12433
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12434
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12434
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12395, metadata !DIExpression()), !dbg !12435
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12436
  call void @z_device_state_init() #25, !dbg !12437
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12438
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12439
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12440
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12441
  unreachable, !dbg !12441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2054, metadata !DIExpression()), !dbg !12442
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12443
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12443
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2055, metadata !DIExpression()), !dbg !12442
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2055, metadata !DIExpression()), !dbg !12442
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12444
  br i1 %7, label %8, label %35, !dbg !12445

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2055, metadata !DIExpression()), !dbg !12442
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12446
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12446
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2065, metadata !DIExpression()), !dbg !12447
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12448
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12448
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12449
  call void @llvm.dbg.value(metadata i32 %14, metadata !2069, metadata !DIExpression()), !dbg !12447
  %15 = icmp eq %struct.device* %11, null, !dbg !12450
  br i1 %15, label %32, label %16, !dbg !12452

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12453
  br i1 %17, label %26, label %18, !dbg !12456

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12457
  call void @llvm.dbg.value(metadata i32 %19, metadata !2069, metadata !DIExpression()), !dbg !12447
  %20 = icmp ult i32 %19, 255, !dbg !12459
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12459
  call void @llvm.dbg.value(metadata i32 %21, metadata !2069, metadata !DIExpression()), !dbg !12447
  %22 = trunc i32 %21 to i8, !dbg !12460
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12461
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12461
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12462
  store i8 %22, i8* %25, align 1, !dbg !12463
  br label %26, !dbg !12464

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12465
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12465
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12466
  %30 = load i8, i8* %29, align 1, !dbg !12467
  %31 = or i8 %30, 1, !dbg !12467
  store i8 %31, i8* %29, align 1, !dbg !12467
  br label %32, !dbg !12468

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12469
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2055, metadata !DIExpression()), !dbg !12442
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12444
  br i1 %34, label %8, label %35, !dbg !12445, !llvm.loop !12470

35:                                               ; preds = %32, %1
  ret void, !dbg !12472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.128(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12475, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 %1, metadata !12476, metadata !DIExpression()), !dbg !12477
  %3 = trunc i32 %1 to i8, !dbg !12478
  %4 = shl i8 %3, 4, !dbg !12478
  %5 = and i32 %0, 15, !dbg !12481
  %6 = add nsw i32 %5, -4, !dbg !12482
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12483
  store volatile i8 %4, i8* %7, align 1, !dbg !12484
  ret void, !dbg !12485
}

; Function Attrs: optsize
declare !dbg !12486 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12490, metadata !DIExpression()), !dbg !12491
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12492
  store i8 1, i8* %2, align 1, !dbg !12493
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12494
  store i8 1, i8* %3, align 4, !dbg !12495
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12496
  store i32 0, i32* %4, align 4, !dbg !12497
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12498
  store i32 0, i32* %5, align 4, !dbg !12499
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12500
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12501
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12502
  ret void, !dbg !12503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12504 {
  tail call void @z_sched_init() #25, !dbg !12509
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12510
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0)) #25, !dbg !12511
  call void @llvm.dbg.value(metadata i8* %1, metadata !12508, metadata !DIExpression()), !dbg !12512
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12513
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12514
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12515
  ret i8* %1, !dbg !12516
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12517 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12521, metadata !DIExpression()), !dbg !12522
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12523
  unreachable, !dbg !12524
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12525 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12527, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.value(metadata i8* %1, metadata !12528, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.value(metadata i8* %2, metadata !12529, metadata !DIExpression()), !dbg !12530
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12531
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12532
  tail call void @boot_banner() #25, !dbg !12533
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12534
  tail call void @z_init_static_threads() #25, !dbg !12535
  tail call void @main() #25, !dbg !12536
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12537
  %5 = and i8 %4, -2, !dbg !12537
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12537
  ret void, !dbg !12538
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12539 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12549, metadata !DIExpression()), !dbg !12551
  call void @llvm.dbg.value(metadata i8* %1, metadata !12550, metadata !DIExpression()), !dbg !12551
  ret void, !dbg !12552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12553 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12555, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i8* %1, metadata !12556, metadata !DIExpression()), !dbg !12557
  ret void, !dbg !12558
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12559 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12560, !srcloc !12567
  call void @llvm.dbg.value(metadata i32 %1, metadata !12563, metadata !DIExpression()) #24, !dbg !12568
  %2 = icmp ne i32 %1, 0, !dbg !12569
  ret i1 %2, !dbg !12570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12571 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12572
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12573
  %3 = load i8, i8* %2, align 4, !dbg !12574
  %4 = or i8 %3, 1, !dbg !12574
  store i8 %4, i8* %2, align 4, !dbg !12574
  ret void, !dbg !12575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12576 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12577
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12578
  %3 = load i8, i8* %2, align 4, !dbg !12579
  %4 = and i8 %3, -2, !dbg !12579
  store i8 %4, i8* %2, align 4, !dbg !12579
  ret void, !dbg !12580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12581 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12582
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12583
  %3 = load i8, i8* %2, align 4, !dbg !12583
  %4 = and i8 %3, 1, !dbg !12584
  %5 = icmp ne i8 %4, 0, !dbg !12585
  ret i1 %5, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12591, metadata !DIExpression()), !dbg !12593
  call void @llvm.dbg.value(metadata i8* %1, metadata !12592, metadata !DIExpression()), !dbg !12593
  ret i32 -88, !dbg !12594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12599, metadata !DIExpression()), !dbg !12600
  ret i8* null, !dbg !12601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12606, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i8* %1, metadata !12607, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i32 %2, metadata !12608, metadata !DIExpression()), !dbg !12609
  ret i32 -88, !dbg !12610
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2192, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i8* %1, metadata !2193, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 %2, metadata !2194, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 0, metadata !2195, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i8 undef, metadata !2197, metadata !DIExpression()), !dbg !12611
  %4 = icmp eq i8* %1, null, !dbg !12612
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12614
  br i1 %6, label %46, label %7, !dbg !12614

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12615
  %9 = load i8, i8* %8, align 1, !dbg !12615
  call void @llvm.dbg.value(metadata i8 %9, metadata !2197, metadata !DIExpression()), !dbg !12611
  %10 = add i32 %2, -1, !dbg !12616
  call void @llvm.dbg.value(metadata i32 %10, metadata !2194, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i8 0, metadata !2198, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i8 %9, metadata !2197, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 0, metadata !2195, metadata !DIExpression()), !dbg !12611
  %11 = icmp eq i8 %9, 0, !dbg !12618
  br i1 %11, label %12, label %15, !dbg !12620

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12621
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12622
  store i8 0, i8* %14, align 1, !dbg !12623
  br label %46, !dbg !12624

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2198, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i8 %17, metadata !2197, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 %18, metadata !2195, metadata !DIExpression()), !dbg !12611
  %19 = zext i8 %17 to i32, !dbg !12625
  %20 = zext i8 %16 to i32, !dbg !12626
  %21 = shl nuw i32 1, %20, !dbg !12626
  call void @llvm.dbg.value(metadata i32 %21, metadata !2196, metadata !DIExpression()), !dbg !12611
  %22 = and i32 %21, %19, !dbg !12628
  %23 = icmp eq i32 %22, 0, !dbg !12630
  br i1 %23, label %42, label %24, !dbg !12631

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12632
  %26 = sub i32 %10, %18, !dbg !12633
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12634
  %28 = load i8*, i8** %27, align 4, !dbg !12634
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12635
  %30 = load i32, i32* %29, align 4, !dbg !12635
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12636
  %32 = add i32 %31, %18, !dbg !12637
  call void @llvm.dbg.value(metadata i32 %32, metadata !2195, metadata !DIExpression()), !dbg !12611
  %33 = trunc i32 %21 to i8, !dbg !12638
  %34 = xor i8 %33, -1, !dbg !12638
  %35 = and i8 %17, %34, !dbg !12638
  call void @llvm.dbg.value(metadata i8 %35, metadata !2197, metadata !DIExpression()), !dbg !12611
  %36 = icmp eq i8 %35, 0, !dbg !12639
  br i1 %36, label %12, label %37, !dbg !12641

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12642
  %39 = sub i32 %10, %32, !dbg !12644
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.130, i32 0, i32 0), i32 noundef 1) #26, !dbg !12645
  %41 = add i32 %40, %32, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %41, metadata !2195, metadata !DIExpression()), !dbg !12611
  br label %42, !dbg !12647

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12611
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12611
  call void @llvm.dbg.value(metadata i8 %44, metadata !2197, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 %43, metadata !2195, metadata !DIExpression()), !dbg !12611
  %45 = add i8 %16, 1, !dbg !12648
  call void @llvm.dbg.value(metadata i8 %45, metadata !2198, metadata !DIExpression()), !dbg !12617
  br label %15, !dbg !12620

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.131, i32 0, i32 0), %3 ], !dbg !12611
  ret i8* %47, !dbg !12649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12650 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12654, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i32 %1, metadata !12655, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i8* %2, metadata !12656, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i32 %3, metadata !12657, metadata !DIExpression()), !dbg !12659
  %5 = icmp ult i32 %1, %3, !dbg !12660
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %6, metadata !12658, metadata !DIExpression()), !dbg !12659
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12661
  ret i32 %6, !dbg !12662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12667, metadata !DIExpression()), !dbg !12668
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12669
  ret void, !dbg !12670
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12680, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12681, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i32 %2, metadata !12682, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12683, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i8* %4, metadata !12684, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i8* %5, metadata !12685, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i8* %6, metadata !12686, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i32 %7, metadata !12687, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i32 %8, metadata !12688, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i8* undef, metadata !12689, metadata !DIExpression()), !dbg !12691
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12692
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !12693
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12694
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12695
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12696
  call void @llvm.dbg.value(metadata i8* %13, metadata !12690, metadata !DIExpression()), !dbg !12691
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12697
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12698
  store i8* null, i8** %14, align 4, !dbg !12699
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12700
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12700
  br i1 %16, label %20, label %17, !dbg !12702

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12703
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12703
  br label %20, !dbg !12704

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12691
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12705
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12707
  ret i8* %13, !dbg !12708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12709 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12714, metadata !DIExpression()), !dbg !12715
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12716
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12717
  ret void, !dbg !12718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12719 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12724, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.value(metadata i32 %1, metadata !12725, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.value(metadata i32 %2, metadata !12726, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.value(metadata i32 %3, metadata !12727, metadata !DIExpression()), !dbg !12728
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12729
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12730
  %6 = trunc i32 %3 to i8, !dbg !12731
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12732
  store i8 %6, i8* %7, align 4, !dbg !12733
  %8 = trunc i32 %2 to i8, !dbg !12734
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12735
  store i8 %8, i8* %9, align 1, !dbg !12736
  %10 = trunc i32 %1 to i8, !dbg !12737
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12738
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12738
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12738
  store i8 %10, i8* %13, align 2, !dbg !12739
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12740
  store i8 0, i8* %14, align 1, !dbg !12741
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12742
  ret void, !dbg !12743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12748, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12749, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 %2, metadata !12750, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 0, metadata !12755, metadata !DIExpression()), !dbg !12756
  %4 = add i32 %2, 7, !dbg !12757
  %5 = and i32 %4, -8, !dbg !12757
  %6 = add i32 %5, 64, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %6, metadata !12751, metadata !DIExpression()), !dbg !12756
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.141(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12759
  call void @llvm.dbg.value(metadata i8* %7, metadata !12754, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 %5, metadata !12752, metadata !DIExpression()), !dbg !12756
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12760
  call void @llvm.dbg.value(metadata i8* %8, metadata !12753, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 0, metadata !12755, metadata !DIExpression()), !dbg !12756
  %9 = ptrtoint i8* %7 to i32, !dbg !12761
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12762
  store i32 %9, i32* %10, align 4, !dbg !12763
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12764
  store i32 %5, i32* %11, align 4, !dbg !12765
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12766
  store i32 0, i32* %12, align 4, !dbg !12767
  call void @llvm.dbg.value(metadata i8* %8, metadata !12753, metadata !DIExpression()), !dbg !12756
  ret i8* %8, !dbg !12768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.141(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12769 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12773, metadata !DIExpression()), !dbg !12774
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12775
  ret i8* %2, !dbg !12776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12777 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12782, metadata !DIExpression()), !dbg !12783
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12784
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12785
  ret void, !dbg !12786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12787 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12789, metadata !DIExpression()), !dbg !12790
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12791
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12792
  ret void, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12800
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12801
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12802
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12803
  ret void, !dbg !12804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12805 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12812
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12813
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12814
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12817 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12834, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12825, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12826, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %2, metadata !12827, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12828, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i8* %4, metadata !12829, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i8* %5, metadata !12830, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i8* %6, metadata !12831, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %7, metadata !12832, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %8, metadata !12833, metadata !DIExpression()), !dbg !12835
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12836
  %13 = icmp eq i64 %11, -1, !dbg !12837
  br i1 %13, label %15, label %14, !dbg !12839

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12840
  br label %15, !dbg !12842

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12844 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12849, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12848, metadata !DIExpression()), !dbg !12850
  %4 = icmp eq i64 %3, 0, !dbg !12851
  br i1 %4, label %5, label %6, !dbg !12853

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12854
  br label %7, !dbg !12856

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12857
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12864, metadata !DIExpression()), !dbg !12865
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12866, !srcloc !12868
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12871 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12874, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12873, metadata !DIExpression()), !dbg !12875
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12876
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12877
  ret void, !dbg !12878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12879 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12881, metadata !DIExpression()), !dbg !12901
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12902

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12903
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12899, metadata !DIExpression()), !dbg !12904
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12905

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12881, metadata !DIExpression()), !dbg !12901
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12906
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12906
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12909
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12909
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12910
  %9 = load i32, i32* %8, align 4, !dbg !12910
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12911
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12911
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12912
  %13 = load i8*, i8** %12, align 4, !dbg !12912
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12913
  %15 = load i8*, i8** %14, align 4, !dbg !12913
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12914
  %17 = load i8*, i8** %16, align 4, !dbg !12914
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12915
  %19 = load i32, i32* %18, align 4, !dbg !12915
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12916
  %21 = load i32, i32* %20, align 4, !dbg !12916
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12917
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12918
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12919
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12920
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12920
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12921
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12881, metadata !DIExpression()), !dbg !12901
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12922
  br i1 %27, label %2, label %1, !dbg !12902, !llvm.loop !12924

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12903
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12899, metadata !DIExpression()), !dbg !12904
  br label %29, !dbg !12905

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12926
  ret void, !dbg !12927

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12899, metadata !DIExpression()), !dbg !12904
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12928
  %33 = load i32, i32* %32, align 4, !dbg !12928
  %34 = icmp eq i32 %33, -1, !dbg !12932
  br i1 %34, label %43, label %35, !dbg !12933

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12934
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12934
  %38 = icmp sgt i32 %33, 0, !dbg !12936
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12936
  %40 = zext i32 %39 to i64, !dbg !12936
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12936
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12937
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12937
  br label %43, !dbg !12938

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12939
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12899, metadata !DIExpression()), !dbg !12904
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12940
  br i1 %45, label %30, label %29, !dbg !12905, !llvm.loop !12942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12944 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12949, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i64 %0, metadata !12951, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i32 1000, metadata !12956, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i32 10000, metadata !12957, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i8 1, metadata !12958, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i8 0, metadata !12959, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i8 1, metadata !12960, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i8 0, metadata !12961, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i8 1, metadata !12962, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i8 0, metadata !12963, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i64 0, metadata !12964, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.value(metadata i64 0, metadata !12964, metadata !DIExpression()), !dbg !12968
  %2 = mul i64 %0, 10, !dbg !12970
  ret i64 %2, !dbg !12976
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12977 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12979, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata i8* %1, metadata !12980, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata i8* %2, metadata !12981, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata i8* %3, metadata !12982, metadata !DIExpression()), !dbg !12983
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12984
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12985
  %7 = load i8, i8* %6, align 4, !dbg !12986
  %8 = or i8 %7, 4, !dbg !12986
  store i8 %8, i8* %6, align 4, !dbg !12986
  tail call void @z_thread_essential_clear() #26, !dbg !12987
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12988
  unreachable, !dbg !12988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12993, metadata !DIExpression()), !dbg !12994
  ret i32 -134, !dbg !12995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13000, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i32 %1, metadata !13001, metadata !DIExpression()), !dbg !13002
  ret i32 -134, !dbg !13003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13004 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13011, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13012, metadata !DIExpression()), !dbg !13013
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13014
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13016
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13013
  ret i32 %6, !dbg !13017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13018 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13022, metadata !DIExpression()), !dbg !13023
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13024
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13023
  ret i32 %3, !dbg !13026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13027 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13029
  ret void, !dbg !13030
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13033, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i8* %1, metadata !13034, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i8* %2, metadata !13035, metadata !DIExpression()), !dbg !13036
  br label %4, !dbg !13037

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13038, !srcloc !13045
  call void @llvm.dbg.value(metadata i32 undef, metadata !13041, metadata !DIExpression()) #24, !dbg !13046
  call void @llvm.dbg.value(metadata i32 undef, metadata !13042, metadata !DIExpression()) #24, !dbg !13046
  tail call fastcc void @k_cpu_idle() #26, !dbg !13047
  br label %4, !dbg !13037, !llvm.loop !13048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13050 {
  tail call void @arch_cpu_idle() #25, !dbg !13051
  ret void, !dbg !13052
}

; Function Attrs: optsize
declare !dbg !13053 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13058, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13059, metadata !DIExpression()), !dbg !13062
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13063
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13063
  %5 = load i8, i8* %4, align 2, !dbg !13063
  call void @llvm.dbg.value(metadata i8 %5, metadata !13060, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13062
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13064
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13064
  %8 = load i8, i8* %7, align 2, !dbg !13064
  call void @llvm.dbg.value(metadata i8 %8, metadata !13061, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13062
  %9 = icmp eq i8 %8, %5, !dbg !13065
  %10 = sext i8 %5 to i32, !dbg !13067
  %11 = sext i8 %8 to i32, !dbg !13067
  %12 = sub nsw i32 %11, %10, !dbg !13067
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13067
  ret i32 %13, !dbg !13068
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13073, metadata !DIExpression()), !dbg !13074
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13075
  %3 = icmp eq i32 %2, 0, !dbg !13077
  br i1 %3, label %8, label %4, !dbg !13078

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13079
  %6 = add i32 %5, %2, !dbg !13081
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13082
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13083
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13084
  br label %8, !dbg !13085

8:                                                ; preds = %4, %1
  ret void, !dbg !13086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13091, metadata !DIExpression()), !dbg !13093
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13094
  call void @llvm.dbg.value(metadata i32 %1, metadata !13092, metadata !DIExpression()), !dbg !13093
  ret i32 %1, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13100, metadata !DIExpression()), !dbg !13109
  call void @llvm.dbg.value(metadata i32 %1, metadata !13101, metadata !DIExpression()), !dbg !13109
  call void @llvm.dbg.value(metadata i32 0, metadata !13102, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13118
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13120, !srcloc !13126
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13120
  call void @llvm.dbg.value(metadata i32 %4, metadata !13123, metadata !DIExpression()) #24, !dbg !13127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13127
  call void @llvm.dbg.value(metadata i32 %4, metadata !13117, metadata !DIExpression()) #24, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %4, metadata !13108, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 undef, metadata !13102, metadata !DIExpression()), !dbg !13110
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13128
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13131
  %6 = icmp sgt i32 %0, 0, !dbg !13132
  %7 = icmp sgt i32 %5, 2, !dbg !13134
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13134
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13134
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13135
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13136
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13137
  call void @llvm.dbg.value(metadata i32 %4, metadata !13138, metadata !DIExpression()) #24, !dbg !13144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13144
  call void @llvm.dbg.value(metadata i32 %4, metadata !13146, metadata !DIExpression()) #24, !dbg !13149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13151, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !13102, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 undef, metadata !13102, metadata !DIExpression()), !dbg !13110
  ret void, !dbg !13153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13156, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata i32 %0, metadata !13158, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13173
  call void @llvm.dbg.value(metadata i32 1000, metadata !13161, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i32 10000, metadata !13162, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i8 1, metadata !13163, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i1 true, metadata !13164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13173
  call void @llvm.dbg.value(metadata i1 true, metadata !13165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13173
  call void @llvm.dbg.value(metadata i8 0, metadata !13166, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i1 true, metadata !13167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13173
  call void @llvm.dbg.value(metadata i1 false, metadata !13168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13173
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !13173
  %2 = mul i32 %0, 10, !dbg !13175
  ret i32 %2, !dbg !13181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13184, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13187
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13189, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !13191
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13191
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !13187
  call void @llvm.dbg.value(metadata i32 %3, metadata !13185, metadata !DIExpression()), !dbg !13186
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13192
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13194
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13195
  br i1 %6, label %7, label %8, !dbg !13196

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !13199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13203, !srcloc !13152
  br label %24, !dbg !13204

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13205
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13206
  %10 = icmp eq i32 %9, 0, !dbg !13206
  br i1 %10, label %21, label %11, !dbg !13208

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13209
  br i1 %12, label %13, label %21, !dbg !13210

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13211
  %15 = icmp sgt i32 %14, %0, !dbg !13214
  br i1 %15, label %19, label %16, !dbg !13215

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13216
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13216
  call void @llvm.dbg.value(metadata i32 %18, metadata !13185, metadata !DIExpression()), !dbg !13186
  br label %22, !dbg !13218

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13219
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13219
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13221
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13186
  call void @llvm.dbg.value(metadata i32 %23, metadata !13185, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %23, metadata !13138, metadata !DIExpression()) #24, !dbg !13223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13223
  call void @llvm.dbg.value(metadata i32 %23, metadata !13146, metadata !DIExpression()) #24, !dbg !13225
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13227, !srcloc !13152
  br label %24, !dbg !13228

24:                                               ; preds = %22, %7
  ret void, !dbg !13228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13233, metadata !DIExpression()), !dbg !13235
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13236
  %3 = icmp eq i32 %2, 0, !dbg !13236
  br i1 %3, label %16, label %4, !dbg !13237

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13238
  br i1 %5, label %16, label %6, !dbg !13239

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13240
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13240
  %9 = load i8, i8* %8, align 2, !dbg !13240
  %10 = sext i8 %9 to i32, !dbg !13241
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13242
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13243
  br i1 %12, label %16, label %13, !dbg !13244

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13245
  %15 = xor i1 %14, true, !dbg !13246
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13235
  call void @llvm.dbg.value(metadata i1 %17, metadata !13234, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13235
  ret i1 %17, !dbg !13247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13248 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13252, metadata !DIExpression()), !dbg !13254
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13255
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13253, metadata !DIExpression()), !dbg !13254
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13256
  br i1 %3, label %5, label %4, !dbg !13258

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13259
  br label %5, !dbg !13261

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13252, metadata !DIExpression()), !dbg !13254
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13262
  ret i32 %6, !dbg !13263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13266, metadata !DIExpression()), !dbg !13268
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13269
  %3 = load i8, i8* %2, align 1, !dbg !13269
  call void @llvm.dbg.value(metadata i8 %3, metadata !13267, metadata !DIExpression()), !dbg !13268
  %4 = and i8 %3, 31, !dbg !13270
  %5 = icmp ne i8 %4, 0, !dbg !13271
  ret i1 %5, !dbg !13272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13275, metadata !DIExpression()), !dbg !13276
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13277
  br i1 %2, label %3, label %7, !dbg !13279

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13280, metadata !DIExpression()) #24, !dbg !13283
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13286
  %5 = load i8, i8* %4, align 1, !dbg !13287
  %6 = and i8 %5, 127, !dbg !13287
  store i8 %6, i8* %4, align 1, !dbg !13287
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()) #24, !dbg !13291
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13295
  br label %7, !dbg !13296

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13297, metadata !DIExpression()) #24, !dbg !13300
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13302
  %9 = load i8, i8* %8, align 1, !dbg !13303
  %10 = or i8 %9, -128, !dbg !13303
  store i8 %10, i8* %8, align 1, !dbg !13303
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()) #24, !dbg !13307
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13311, metadata !DIExpression()) #24, !dbg !13319
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13317, metadata !DIExpression()) #24, !dbg !13319
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13321
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13318, metadata !DIExpression()) #24, !dbg !13319
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13323
  br i1 %12, label %23, label %13, !dbg !13321

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13318, metadata !DIExpression()) #24, !dbg !13319
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13325
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13318, metadata !DIExpression()) #24, !dbg !13319
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13326
  %17 = icmp sgt i32 %16, 0, !dbg !13329
  br i1 %17, label %18, label %20, !dbg !13330

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13331
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13333
  br label %25, !dbg !13334

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13323
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13318, metadata !DIExpression()) #24, !dbg !13319
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13323
  br i1 %22, label %23, label %13, !dbg !13321, !llvm.loop !13335

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13337
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13338
  br label %25, !dbg !13339

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13340
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13341
  %28 = zext i1 %27 to i32, !dbg !13341
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13342
  ret void, !dbg !13343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13346, metadata !DIExpression()), !dbg !13347
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13348
  ret i1 %2, !dbg !13349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13350 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13352, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13353, metadata !DIExpression()), !dbg !13354
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13355
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13356
  ret void, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13358 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13362, metadata !DIExpression()), !dbg !13363
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13364
  br i1 %2, label %6, label %3, !dbg !13364

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13365
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13365
  br label %6, !dbg !13364

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13364
  ret %struct._dnode* %7, !dbg !13366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13367 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13371, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13372, metadata !DIExpression()), !dbg !13375
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13376
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13376
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13373, metadata !DIExpression()), !dbg !13375
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13377
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13378
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13379
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13380
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13381
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13382
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13383
  ret void, !dbg !13384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13385 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13389, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13390, metadata !DIExpression()), !dbg !13391
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13392
  br i1 %3, label %6, label %4, !dbg !13393

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13394
  br label %6, !dbg !13393

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13393
  ret %struct._dnode* %7, !dbg !13395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13396 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13400, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13401, metadata !DIExpression()), !dbg !13403
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13404
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13404
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13402, metadata !DIExpression()), !dbg !13403
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13405
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13406
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13407
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13408
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13409
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13410
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13411
  ret void, !dbg !13412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13415, metadata !DIExpression()), !dbg !13417
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13418
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13425, metadata !DIExpression()) #24, !dbg !13427
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13428
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13429
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13429
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13416, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13430, metadata !DIExpression()) #24, !dbg !13436
  call void @llvm.dbg.value(metadata i32 %0, metadata !13435, metadata !DIExpression()) #24, !dbg !13436
  %6 = icmp eq i32 %0, 0, !dbg !13439
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13441
  br i1 %6, label %8, label %15, !dbg !13442

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13443
  br i1 %9, label %15, label %10, !dbg !13445

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13446
  br i1 %11, label %15, label %12, !dbg !13448

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13449
  %14 = icmp eq i32 %13, 0, !dbg !13449
  br i1 %14, label %18, label %15, !dbg !13451

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13452
  br i1 %16, label %18, label %17, !dbg !13455

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13456
  br label %18, !dbg !13458

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13441
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13441
  ret void, !dbg !13459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13460 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13464, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13465, metadata !DIExpression()), !dbg !13467
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13468
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13466, metadata !DIExpression()), !dbg !13467
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13465, metadata !DIExpression()), !dbg !13467
  ret %struct.k_thread* %3, !dbg !13469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13472, metadata !DIExpression()), !dbg !13473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13474
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13475
  %4 = xor i1 %3, true, !dbg !13476
  ret i1 %4, !dbg !13477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13480, metadata !DIExpression()), !dbg !13481
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13482
  %3 = load i16, i16* %2, align 2, !dbg !13482
  %4 = icmp ult i16 %3, 128, !dbg !13483
  %5 = zext i1 %4 to i32, !dbg !13483
  ret i32 %5, !dbg !13484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13485 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13491, metadata !DIExpression()), !dbg !13492
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13493
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13494
  %4 = xor i1 %3, true, !dbg !13495
  ret i1 %4, !dbg !13496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13497 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13503, metadata !DIExpression()), !dbg !13504
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13505
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13505
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13506
  ret i1 %4, !dbg !13507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13508 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13510, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13511, metadata !DIExpression()), !dbg !13512
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13513
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13513
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13514
  br i1 %5, label %9, label %6, !dbg !13515

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13516
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13516
  br label %9, !dbg !13515

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13515
  ret %struct._dnode* %10, !dbg !13517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13518 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13522, metadata !DIExpression()), !dbg !13523
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13524
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13524
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13525
  ret i1 %4, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13531, metadata !DIExpression()), !dbg !13534
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13535
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13535
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13532, metadata !DIExpression()), !dbg !13534
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13536
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13536
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13533, metadata !DIExpression()), !dbg !13534
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13537
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13538
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13539
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13540
  tail call fastcc void @sys_dnode_init.146(%struct._dnode* noundef %0) #26, !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.146(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13543 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13545, metadata !DIExpression()), !dbg !13546
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13547
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13548
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13549
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13550
  ret void, !dbg !13551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13556, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata i32 128, metadata !13557, metadata !DIExpression()), !dbg !13558
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13559
  %3 = load i8, i8* %2, align 1, !dbg !13559
  %4 = icmp slt i8 %3, 0, !dbg !13560
  ret i1 %4, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13566, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata i32 %1, metadata !13567, metadata !DIExpression()), !dbg !13568
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !13569
  ret i1 %3, !dbg !13570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !13571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13573, metadata !DIExpression()), !dbg !13574
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13575
  ret i1 %2, !dbg !13576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13579, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 %1, metadata !13580, metadata !DIExpression()), !dbg !13581
  %3 = icmp slt i32 %0, %1, !dbg !13582
  ret i1 %3, !dbg !13583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13586, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i32 0, metadata !13587, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13592
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13594, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !13596
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13596
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %3, metadata !13589, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.value(metadata i32 undef, metadata !13587, metadata !DIExpression()), !dbg !13591
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !13602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13602
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13606, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !13587, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.value(metadata i32 undef, metadata !13587, metadata !DIExpression()), !dbg !13591
  ret void, !dbg !13607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13610, metadata !DIExpression()), !dbg !13611
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13612
  br i1 %2, label %24, label %3, !dbg !13614

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13615
  br i1 %4, label %5, label %24, !dbg !13616

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13297, metadata !DIExpression()) #24, !dbg !13617
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13620
  %7 = load i8, i8* %6, align 1, !dbg !13621
  %8 = or i8 %7, -128, !dbg !13621
  store i8 %8, i8* %6, align 1, !dbg !13621
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()) #24, !dbg !13622
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13311, metadata !DIExpression()) #24, !dbg !13624
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13317, metadata !DIExpression()) #24, !dbg !13624
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13626
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13318, metadata !DIExpression()) #24, !dbg !13624
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13627
  br i1 %10, label %21, label %11, !dbg !13626

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13318, metadata !DIExpression()) #24, !dbg !13624
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13628
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13318, metadata !DIExpression()) #24, !dbg !13624
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13629
  %15 = icmp sgt i32 %14, 0, !dbg !13630
  br i1 %15, label %16, label %18, !dbg !13631

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13632
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13633
  br label %23, !dbg !13634

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13627
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13318, metadata !DIExpression()) #24, !dbg !13624
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13627
  br i1 %20, label %21, label %11, !dbg !13626, !llvm.loop !13635

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13637
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13638
  br label %23, !dbg !13639

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13640
  br label %24, !dbg !13641

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13645, metadata !DIExpression()), !dbg !13646
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13647
  br i1 %2, label %6, label %3, !dbg !13648

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !13649
  %5 = xor i1 %4, true, !dbg !13648
  br label %6, !dbg !13648

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13653, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.value(metadata i32 0, metadata !13654, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13659
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13661, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !13663
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !13659
  call void @llvm.dbg.value(metadata i32 %3, metadata !13656, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.value(metadata i32 undef, metadata !13654, metadata !DIExpression()), !dbg !13658
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !13664
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !13667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13667
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13669
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13671, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !13654, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.value(metadata i32 undef, metadata !13654, metadata !DIExpression()), !dbg !13658
  ret void, !dbg !13672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13675, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13678
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13680, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13680
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %3, metadata !13676, metadata !DIExpression()), !dbg !13677
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !13683
  br i1 %4, label %5, label %6, !dbg !13685

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !13686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13686
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13689
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13691, !srcloc !13152
  br label %8, !dbg !13692

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.151(%struct.k_thread* noundef %0) #26, !dbg !13693
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13694
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13695
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13695
  br label %8, !dbg !13696

8:                                                ; preds = %6, %5
  ret void, !dbg !13696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13699, metadata !DIExpression()), !dbg !13700
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13701
  %3 = load i8, i8* %2, align 1, !dbg !13701
  %4 = and i8 %3, 4, !dbg !13702
  %5 = icmp eq i8 %4, 0, !dbg !13703
  ret i1 %5, !dbg !13704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.151(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13707, metadata !DIExpression()), !dbg !13708
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13709
  %3 = load i8, i8* %2, align 1, !dbg !13710
  %4 = and i8 %3, -5, !dbg !13710
  store i8 %4, i8* %2, align 1, !dbg !13710
  ret void, !dbg !13711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13712 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13714, metadata !DIExpression()), !dbg !13716
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13717
  br i1 %4, label %5, label %9, !dbg !13719

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13720
  br i1 %6, label %7, label %9, !dbg !13721

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13722, metadata !DIExpression()) #24, !dbg !13728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13727, metadata !DIExpression()) #24, !dbg !13728
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13731
  br label %10, !dbg !13732

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !13733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13733
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13738, !srcloc !13152
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i32 %0, metadata !13746, metadata !DIExpression()), !dbg !13751
  %2 = icmp eq i32 %0, 0, !dbg !13753
  br i1 %2, label %3, label %6, !dbg !13754

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13755, !srcloc !13762
  call void @llvm.dbg.value(metadata i32 %4, metadata !13758, metadata !DIExpression()) #24, !dbg !13763
  %5 = icmp eq i32 %4, 0, !dbg !13764
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13745
  ret i1 %7, !dbg !13765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !13766 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13768, metadata !DIExpression()), !dbg !13770
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13771
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13772
  ret i1 %3, !dbg !13773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13776, metadata !DIExpression()), !dbg !13778
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %2, metadata !13777, metadata !DIExpression()), !dbg !13778
  ret i32 %2, !dbg !13780
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13781 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13783, metadata !DIExpression()), !dbg !13787
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13788
  call void @llvm.dbg.value(metadata i32 0, metadata !13784, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13790
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13792, !srcloc !13126
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13792
  call void @llvm.dbg.value(metadata i32 %4, metadata !13123, metadata !DIExpression()) #24, !dbg !13794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13794
  call void @llvm.dbg.value(metadata i32 %4, metadata !13117, metadata !DIExpression()) #24, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %4, metadata !13786, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i32 undef, metadata !13784, metadata !DIExpression()), !dbg !13789
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13795
  br i1 %5, label %6, label %10, !dbg !13799

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13280, metadata !DIExpression()) #24, !dbg !13800
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13803
  %8 = load i8, i8* %7, align 1, !dbg !13804
  %9 = and i8 %8, 127, !dbg !13804
  store i8 %9, i8* %7, align 1, !dbg !13804
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()) #24, !dbg !13805
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13807
  br label %10, !dbg !13808

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13809
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13810
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13811
  %13 = zext i1 %12 to i32, !dbg !13811
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !13812
  call void @llvm.dbg.value(metadata i32 %4, metadata !13138, metadata !DIExpression()) #24, !dbg !13813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %4, metadata !13146, metadata !DIExpression()) #24, !dbg !13815
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13817, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !13784, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i32 undef, metadata !13784, metadata !DIExpression()), !dbg !13789
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13818
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13820
  br i1 %15, label %16, label %17, !dbg !13821

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13822
  br label %17, !dbg !13824

17:                                               ; preds = %16, %10
  ret void, !dbg !13825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13826 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13828, metadata !DIExpression()), !dbg !13829
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13830
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13831
  ret i32 %3, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13835, metadata !DIExpression()), !dbg !13836
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13837
  %3 = load i8, i8* %2, align 1, !dbg !13838
  %4 = or i8 %3, 16, !dbg !13838
  store i8 %4, i8* %2, align 1, !dbg !13838
  ret void, !dbg !13839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13840 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13841, !srcloc !13126
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13841
  call void @llvm.dbg.value(metadata i32 %2, metadata !13123, metadata !DIExpression()) #24, !dbg !13843
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13843
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13844
  ret void, !dbg !13845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13848, metadata !DIExpression()), !dbg !13849
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13850
  br i1 %2, label %3, label %5, !dbg !13852

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13853
  br label %6, !dbg !13855

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13146, metadata !DIExpression()) #24, !dbg !13856
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13859, !srcloc !13152
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13863, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13866
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13868, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13868
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !13870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13870
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %3, metadata !13864, metadata !DIExpression()), !dbg !13865
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13871
  br i1 %4, label %6, label %5, !dbg !13873

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !13874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13874
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13877
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13879, !srcloc !13152
  br label %8, !dbg !13880

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13881
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13882
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13883
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13883
  br label %8, !dbg !13884

8:                                                ; preds = %6, %5
  ret void, !dbg !13884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13887, metadata !DIExpression()), !dbg !13888
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13889
  %3 = load i8, i8* %2, align 1, !dbg !13889
  %4 = and i8 %3, 16, !dbg !13890
  %5 = icmp ne i8 %4, 0, !dbg !13891
  ret i1 %5, !dbg !13892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()), !dbg !13896
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13897
  %3 = load i8, i8* %2, align 1, !dbg !13898
  %4 = and i8 %3, -17, !dbg !13898
  store i8 %4, i8* %2, align 1, !dbg !13898
  ret void, !dbg !13899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13900 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13910, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13908, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13909, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 0, metadata !13911, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13916
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13918, !srcloc !13126
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13918
  call void @llvm.dbg.value(metadata i32 %5, metadata !13123, metadata !DIExpression()) #24, !dbg !13920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %5, metadata !13117, metadata !DIExpression()) #24, !dbg !13916
  call void @llvm.dbg.value(metadata i32 %5, metadata !13913, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i32 undef, metadata !13911, metadata !DIExpression()), !dbg !13915
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %5, metadata !13138, metadata !DIExpression()) #24, !dbg !13924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %5, metadata !13146, metadata !DIExpression()) #24, !dbg !13926
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !13928, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !13911, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i32 undef, metadata !13911, metadata !DIExpression()), !dbg !13915
  ret void, !dbg !13929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13930 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13934, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13932, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13933, metadata !DIExpression()), !dbg !13935
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13936
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13943, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13944, metadata !DIExpression()), !dbg !13945
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13946
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13947
  %3 = icmp eq %union.anon* %1, null, !dbg !13948
  br i1 %3, label %21, label %4, !dbg !13950

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13951
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13953
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13954
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13311, metadata !DIExpression()) #24, !dbg !13955
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13317, metadata !DIExpression()) #24, !dbg !13955
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13957
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13318, metadata !DIExpression()) #24, !dbg !13955
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13958
  br i1 %8, label %19, label %9, !dbg !13957

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13318, metadata !DIExpression()) #24, !dbg !13955
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13959
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13318, metadata !DIExpression()) #24, !dbg !13955
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13960
  %13 = icmp sgt i32 %12, 0, !dbg !13961
  br i1 %13, label %14, label %16, !dbg !13962

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13963
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13964
  br label %21, !dbg !13965

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13958
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13318, metadata !DIExpression()) #24, !dbg !13955
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13958
  br i1 %18, label %19, label %9, !dbg !13957, !llvm.loop !13966

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13968
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13969
  br label %21, !dbg !13970

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13972 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13977, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13976, metadata !DIExpression()), !dbg !13978
  %4 = icmp eq i64 %3, -1, !dbg !13979
  br i1 %4, label %6, label %5, !dbg !13981

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.152(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13982
  br label %6, !dbg !13984

6:                                                ; preds = %5, %2
  ret void, !dbg !13985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.152(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13986 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13989, metadata !DIExpression()), !dbg !13990
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13988, metadata !DIExpression()), !dbg !13990
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13991
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13992
  ret void, !dbg !13993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13994 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13996, metadata !DIExpression()), !dbg !14004
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14005
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14005
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13997, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i32 0, metadata !13998, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14007
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14009, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14000, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13998, metadata !DIExpression()), !dbg !14006
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14012
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14013
  %7 = load i8, i8* %6, align 1, !dbg !14013
  %8 = and i8 %7, 40, !dbg !14014
  %9 = icmp eq i8 %8, 0, !dbg !14014
  call void @llvm.dbg.value(metadata i1 %9, metadata !14001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14015
  br i1 %9, label %10, label %17, !dbg !14016

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14017
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !14017
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !14017
  %14 = icmp eq %union.anon* %13, null, !dbg !14021
  br i1 %14, label %16, label %15, !dbg !14022

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14023
  br label %16, !dbg !14025

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.151(%struct.k_thread* noundef nonnull %3) #26, !dbg !14026
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14027
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14028
  br label %17, !dbg !14029

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14009
  call void @llvm.dbg.value(metadata i32 %18, metadata !13123, metadata !DIExpression()) #24, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %18, metadata !13117, metadata !DIExpression()) #24, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %18, metadata !14000, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #24, !dbg !14030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()) #24, !dbg !14032
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !14034, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !13998, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13998, metadata !DIExpression()), !dbg !14006
  ret void, !dbg !14035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14036 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14038, metadata !DIExpression()), !dbg !14039
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14040
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14041
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14042
  store %union.anon* null, %union.anon** %2, align 8, !dbg !14043
  ret void, !dbg !14044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14047, metadata !DIExpression()), !dbg !14048
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14049
  %3 = load i8, i8* %2, align 1, !dbg !14050
  %4 = and i8 %3, -3, !dbg !14050
  store i8 %4, i8* %2, align 1, !dbg !14050
  ret void, !dbg !14051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14054, metadata !DIExpression()), !dbg !14055
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14056
  br i1 %2, label %3, label %7, !dbg !14058

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13280, metadata !DIExpression()) #24, !dbg !14059
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14062
  %5 = load i8, i8* %4, align 1, !dbg !14063
  %6 = and i8 %5, 127, !dbg !14063
  store i8 %6, i8* %4, align 1, !dbg !14063
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()) #24, !dbg !14064
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14066
  br label %7, !dbg !14067

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14068
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14069
  %10 = zext i1 %9 to i32, !dbg !14069
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14070
  ret void, !dbg !14071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14074, metadata !DIExpression()), !dbg !14075
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14076
  %3 = load i8, i8* %2, align 1, !dbg !14077
  %4 = or i8 %3, 2, !dbg !14077
  store i8 %4, i8* %2, align 1, !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !14079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14081, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata i32 0, metadata !14082, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14087
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14089, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !14087
  call void @llvm.dbg.value(metadata i32 %3, metadata !14084, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 undef, metadata !14082, metadata !DIExpression()), !dbg !14086
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !14095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14095
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !14097
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14099, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !14082, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 undef, metadata !14082, metadata !DIExpression()), !dbg !14086
  ret void, !dbg !14100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14101 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14107, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 %0, metadata !14105, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14106, metadata !DIExpression()), !dbg !14112
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14113
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !14114
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14115
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14116
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14117
  call void @llvm.dbg.value(metadata i32 %6, metadata !14108, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 0, metadata !14109, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14119
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14121, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14111, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14109, metadata !DIExpression()), !dbg !14118
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14124
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14128
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14129
  br i1 %10, label %11, label %12, !dbg !14130

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14131
  br label %12, !dbg !14133

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14121
  call void @llvm.dbg.value(metadata i32 %13, metadata !13123, metadata !DIExpression()) #24, !dbg !14123
  call void @llvm.dbg.value(metadata i32 %13, metadata !13117, metadata !DIExpression()) #24, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %13, metadata !14111, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #24, !dbg !14134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14134
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()) #24, !dbg !14136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !14138, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !14109, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14109, metadata !DIExpression()), !dbg !14118
  ret i32 %6, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14140 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14145, metadata !DIExpression()), !dbg !14148
  call void @llvm.dbg.value(metadata i64 undef, metadata !14147, metadata !DIExpression()), !dbg !14148
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14144, metadata !DIExpression()), !dbg !14148
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14146, metadata !DIExpression()), !dbg !14148
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14149
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14151
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14153, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14151
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14156
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14157
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13722, metadata !DIExpression()) #24, !dbg !14158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13727, metadata !DIExpression()) #24, !dbg !14158
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14160
  ret i32 %9, !dbg !14161
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14162 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14166, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14167, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata i32 0, metadata !14168, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14173
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14175, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14177
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14177
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14170, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14167, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()), !dbg !14172
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14178
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14167, metadata !DIExpression()), !dbg !14171
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14181
  br i1 %5, label %7, label %6, !dbg !14183

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14184
  br label %7, !dbg !14186

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14175
  call void @llvm.dbg.value(metadata i32 %8, metadata !13123, metadata !DIExpression()) #24, !dbg !14177
  call void @llvm.dbg.value(metadata i32 %8, metadata !13117, metadata !DIExpression()) #24, !dbg !14173
  call void @llvm.dbg.value(metadata i32 %8, metadata !14170, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #24, !dbg !14187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()) #24, !dbg !14189
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14191, !srcloc !13152
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14167, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()), !dbg !14172
  ret %struct.k_thread* %4, !dbg !14192
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14193 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14195, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14196, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 0, metadata !14197, metadata !DIExpression()), !dbg !14201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14202
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14204, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14199, metadata !DIExpression()), !dbg !14201
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14196, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14197, metadata !DIExpression()), !dbg !14201
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14207
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14196, metadata !DIExpression()), !dbg !14200
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14210
  br i1 %5, label %8, label %6, !dbg !14212

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14213
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14215
  br label %8, !dbg !14216

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14204
  call void @llvm.dbg.value(metadata i32 %9, metadata !13123, metadata !DIExpression()) #24, !dbg !14206
  call void @llvm.dbg.value(metadata i32 %9, metadata !13117, metadata !DIExpression()) #24, !dbg !14202
  call void @llvm.dbg.value(metadata i32 %9, metadata !14199, metadata !DIExpression()), !dbg !14201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #24, !dbg !14217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14217
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()) #24, !dbg !14219
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14221, !srcloc !13152
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14196, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14197, metadata !DIExpression()), !dbg !14201
  ret %struct.k_thread* %4, !dbg !14222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14225, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14081, metadata !DIExpression()) #24, !dbg !14227
  call void @llvm.dbg.value(metadata i32 0, metadata !14082, metadata !DIExpression()) #24, !dbg !14229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14230
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14232, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14232
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !14234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14234
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !14230
  call void @llvm.dbg.value(metadata i32 %3, metadata !14084, metadata !DIExpression()) #24, !dbg !14229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14082, metadata !DIExpression()) #24, !dbg !14229
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14235
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !14236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !14238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14240, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !14082, metadata !DIExpression()) #24, !dbg !14229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14082, metadata !DIExpression()) #24, !dbg !14229
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14241
  ret void, !dbg !14242
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14245, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i32 %1, metadata !14246, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i8 0, metadata !14247, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i32 0, metadata !14248, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14253
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14255, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14257
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14257
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14250, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i8 poison, metadata !14247, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14248, metadata !DIExpression()), !dbg !14252
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14258
  call void @llvm.dbg.value(metadata i1 %6, metadata !14247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14251
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14261

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13280, metadata !DIExpression()) #24, !dbg !14262
  %11 = load i8, i8* %4, align 1, !dbg !14268
  %12 = and i8 %11, 127, !dbg !14268
  store i8 %12, i8* %4, align 1, !dbg !14268
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()) #24, !dbg !14269
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14271
  store i8 %9, i8* %8, align 2, !dbg !14272
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13297, metadata !DIExpression()) #24, !dbg !14273
  %13 = load i8, i8* %4, align 1, !dbg !14275
  %14 = or i8 %13, -128, !dbg !14275
  store i8 %14, i8* %4, align 1, !dbg !14275
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()) #24, !dbg !14276
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13311, metadata !DIExpression()) #24, !dbg !14278
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13317, metadata !DIExpression()) #24, !dbg !14278
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14280
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13318, metadata !DIExpression()) #24, !dbg !14278
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14281
  br i1 %16, label %26, label %17, !dbg !14280

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13318, metadata !DIExpression()) #24, !dbg !14278
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14282
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13318, metadata !DIExpression()) #24, !dbg !14278
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14283
  %21 = icmp sgt i32 %20, 0, !dbg !14284
  br i1 %21, label %22, label %23, !dbg !14285

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14286
  br label %27, !dbg !14287

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14281
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13318, metadata !DIExpression()) #24, !dbg !14278
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14281
  br i1 %25, label %26, label %17, !dbg !14280, !llvm.loop !14288

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14290
  br label %27, !dbg !14291

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14292
  br label %29, !dbg !14293

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14294
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14255
  call void @llvm.dbg.value(metadata i32 %30, metadata !13123, metadata !DIExpression()) #24, !dbg !14257
  call void @llvm.dbg.value(metadata i32 %30, metadata !13117, metadata !DIExpression()) #24, !dbg !14253
  call void @llvm.dbg.value(metadata i32 %30, metadata !14250, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #24, !dbg !14296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14296
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()) #24, !dbg !14298
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14300, !srcloc !13152
  call void @llvm.dbg.value(metadata i8 poison, metadata !14247, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14248, metadata !DIExpression()), !dbg !14252
  ret i1 %6, !dbg !14301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14302 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14306, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 %1, metadata !14307, metadata !DIExpression()), !dbg !14309
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14310
  call void @llvm.dbg.value(metadata i1 %3, metadata !14308, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14309
  br i1 %3, label %4, label %12, !dbg !14311

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14313
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14314
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14314
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14314
  %9 = load i8, i8* %8, align 1, !dbg !14314
  %10 = icmp eq i8 %9, 0, !dbg !14315
  br i1 %10, label %11, label %12, !dbg !14316

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14317
  br label %12, !dbg !14319

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14321 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14323, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14327
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14329, !srcloc !13126
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14329
  call void @llvm.dbg.value(metadata i32 %2, metadata !13123, metadata !DIExpression()) #24, !dbg !14331
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14331
  call void @llvm.dbg.value(metadata i32 %2, metadata !13117, metadata !DIExpression()) #24, !dbg !14327
  call void @llvm.dbg.value(metadata i32 %2, metadata !14325, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14323, metadata !DIExpression()), !dbg !14326
  tail call fastcc void @z_sched_lock() #26, !dbg !14332
  call void @llvm.dbg.value(metadata i32 %2, metadata !13138, metadata !DIExpression()) #24, !dbg !14335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14335
  call void @llvm.dbg.value(metadata i32 %2, metadata !13146, metadata !DIExpression()) #24, !dbg !14337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14339, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !14323, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14323, metadata !DIExpression()), !dbg !14326
  ret void, !dbg !14340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14341 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14342
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14343
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14343
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14343
  %5 = load i8, i8* %4, align 1, !dbg !14344
  %6 = add i8 %5, -1, !dbg !14344
  store i8 %6, i8* %4, align 1, !dbg !14344
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14345, !srcloc !14347
  ret void, !dbg !14348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14349 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14351, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14355
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14357, !srcloc !13126
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14357
  call void @llvm.dbg.value(metadata i32 %2, metadata !13123, metadata !DIExpression()) #24, !dbg !14359
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14359
  call void @llvm.dbg.value(metadata i32 %2, metadata !13117, metadata !DIExpression()) #24, !dbg !14355
  call void @llvm.dbg.value(metadata i32 %2, metadata !14353, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()), !dbg !14354
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14360
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14363
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14363
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14363
  %7 = load i8, i8* %6, align 1, !dbg !14364
  %8 = add i8 %7, 1, !dbg !14364
  store i8 %8, i8* %6, align 1, !dbg !14364
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14365
  call void @llvm.dbg.value(metadata i32 %2, metadata !13138, metadata !DIExpression()) #24, !dbg !14366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %2, metadata !13146, metadata !DIExpression()) #24, !dbg !14368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14370, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 1, metadata !14351, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()), !dbg !14354
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14371
  ret void, !dbg !14372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14373 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14374
  ret %struct.k_thread* %1, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14376 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14380, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14381, metadata !DIExpression()), !dbg !14385
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14386
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14382, metadata !DIExpression()), !dbg !14385
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14383, metadata !DIExpression()), !dbg !14385
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %5, metadata !14384, metadata !DIExpression()), !dbg !14385
  %6 = icmp sgt i32 %5, 0, !dbg !14389
  br i1 %6, label %17, label %7, !dbg !14391

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14392
  br i1 %8, label %17, label %9, !dbg !14394

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14395
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14395
  %12 = load i32, i32* %11, align 8, !dbg !14395
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14397
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14397
  %15 = load i32, i32* %14, align 8, !dbg !14397
  %16 = icmp ult i32 %12, %15, !dbg !14398
  br label %17, !dbg !14399

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14400
  ret i1 %18, !dbg !14401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14402 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14419, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14420, metadata !DIExpression()), !dbg !14434
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14435
  %5 = load i32, i32* %4, align 4, !dbg !14436
  %6 = add nsw i32 %5, 1, !dbg !14436
  store i32 %6, i32* %4, align 4, !dbg !14436
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14437
  store i32 %5, i32* %7, align 8, !dbg !14438
  %8 = load i32, i32* %4, align 4, !dbg !14439
  %9 = icmp eq i32 %8, 0, !dbg !14440
  br i1 %9, label %10, label %32, !dbg !14441

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14442
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14442
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14422, metadata !DIExpression()), !dbg !14442
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14442
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14442
  %14 = load i32, i32* %13, align 4, !dbg !14442
  %15 = shl i32 %14, 2, !dbg !14442
  %16 = alloca i8, i32 %15, align 8, !dbg !14442
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14442
  store i8* %16, i8** %17, align 4, !dbg !14442
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14442
  %19 = alloca i8, i32 %14, align 8, !dbg !14442
  store i8* %19, i8** %18, align 4, !dbg !14442
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14442
  store i32 -1, i32* %20, align 4, !dbg !14442
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14443
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14431, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14421, metadata !DIExpression()), !dbg !14434
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14445
  br i1 %22, label %23, label %24, !dbg !14442

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14445
  br label %32, !dbg !14446

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14421, metadata !DIExpression()), !dbg !14434
  %26 = load i32, i32* %4, align 4, !dbg !14447
  %27 = add nsw i32 %26, 1, !dbg !14447
  store i32 %27, i32* %4, align 4, !dbg !14447
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14449
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14449
  store i32 %26, i32* %29, align 8, !dbg !14450
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14443
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14431, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14421, metadata !DIExpression()), !dbg !14434
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14445
  br i1 %31, label %23, label %24, !dbg !14442, !llvm.loop !14451

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14453
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14454
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14455
  ret void, !dbg !14456
}

; Function Attrs: optsize
declare !dbg !14457 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14462 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14465 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14467, metadata !DIExpression()), !dbg !14469
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14468, metadata !DIExpression()), !dbg !14469
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14470
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14471
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14472
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14473
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14473
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14475
  br i1 %7, label %8, label %10, !dbg !14476

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14477
  store i32 0, i32* %9, align 4, !dbg !14479
  br label %10, !dbg !14480

10:                                               ; preds = %8, %2
  ret void, !dbg !14481
}

; Function Attrs: optsize
declare !dbg !14482 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14483 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14487, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14488, metadata !DIExpression()), !dbg !14490
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14491
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14492
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14489, metadata !DIExpression()), !dbg !14490
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14488, metadata !DIExpression()), !dbg !14490
  ret %struct.k_thread* %4, !dbg !14493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14494 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14498, metadata !DIExpression()), !dbg !14499
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14500
  ret %struct.rbnode* %2, !dbg !14501
}

; Function Attrs: optsize
declare !dbg !14502 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14505 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14517, metadata !DIExpression()), !dbg !14521
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14522
  %3 = load i32, i32* %2, align 4, !dbg !14522
  %4 = icmp eq i32 %3, 0, !dbg !14524
  br i1 %4, label %10, label %5, !dbg !14525

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14518, metadata !DIExpression()), !dbg !14521
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14526, !range !3624
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14527
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14519, metadata !DIExpression()), !dbg !14521
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !14528
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14520, metadata !DIExpression()), !dbg !14521
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14518, metadata !DIExpression()), !dbg !14521
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14521
  ret %struct.k_thread* %11, !dbg !14529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14530 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14534, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.value(metadata i32 0, metadata !14535, metadata !DIExpression()), !dbg !14537
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14538
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14536, metadata !DIExpression()), !dbg !14537
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14539
  br i1 %3, label %8, label %4, !dbg !14540

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14541
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14543
  call void @llvm.dbg.value(metadata i32 1, metadata !14535, metadata !DIExpression()), !dbg !14537
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14538
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14536, metadata !DIExpression()), !dbg !14537
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14539
  br i1 %7, label %8, label %4, !dbg !14540, !llvm.loop !14544

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14537
  ret i32 %9, !dbg !14546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14547 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14549, metadata !DIExpression()), !dbg !14550
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14551
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14552
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14553
  ret %struct.k_thread* %4, !dbg !14554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14555 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14564, metadata !DIExpression()), !dbg !14565
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14566
  tail call fastcc void @sys_dlist_init.159(%struct._dnode* noundef nonnull %2) #26, !dbg !14567
  ret void, !dbg !14568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.159(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14573, metadata !DIExpression()), !dbg !14574
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14575
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14576
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14577
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14578
  ret void, !dbg !14579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14580 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14581
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14582
  ret void, !dbg !14583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !14584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14589, metadata !DIExpression()), !dbg !14590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14591
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14591
  %4 = load i8, i8* %3, align 2, !dbg !14591
  %5 = sext i8 %4 to i32, !dbg !14592
  ret i32 %5, !dbg !14593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14598, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata i32 %1, metadata !14599, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14600, metadata !DIExpression()), !dbg !14601
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14602
  ret void, !dbg !14603
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14604 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14605
  br i1 %1, label %8, label %2, !dbg !14606

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14607
  br i1 %3, label %8, label %4, !dbg !14608

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14609
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14610
  %7 = xor i1 %6, true, !dbg !14608
  br label %8, !dbg !14608

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !14612 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14613, !range !6783
  %2 = icmp eq i8 %1, 0, !dbg !14613
  ret i1 %2, !dbg !14614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14615 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14618
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14620, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()), !dbg !14623
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13280, metadata !DIExpression()) #24, !dbg !14627
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14629
  %4 = load i8, i8* %3, align 1, !dbg !14630
  %5 = and i8 %4, 127, !dbg !14630
  store i8 %5, i8* %3, align 1, !dbg !14630
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13288, metadata !DIExpression()) #24, !dbg !14631
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14633
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14634
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13297, metadata !DIExpression()) #24, !dbg !14635
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14637
  %8 = load i8, i8* %7, align 1, !dbg !14638
  %9 = or i8 %8, -128, !dbg !14638
  store i8 %9, i8* %7, align 1, !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13304, metadata !DIExpression()) #24, !dbg !14639
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13311, metadata !DIExpression()) #24, !dbg !14641
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13317, metadata !DIExpression()) #24, !dbg !14641
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14643
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13318, metadata !DIExpression()) #24, !dbg !14641
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14644
  br i1 %11, label %22, label %12, !dbg !14643

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13318, metadata !DIExpression()) #24, !dbg !14641
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14645
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13318, metadata !DIExpression()) #24, !dbg !14641
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14646
  %16 = icmp sgt i32 %15, 0, !dbg !14647
  br i1 %16, label %17, label %19, !dbg !14648

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14649
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14650
  br label %24, !dbg !14651

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14644
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13318, metadata !DIExpression()) #24, !dbg !14641
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14644
  br i1 %21, label %22, label %12, !dbg !14643, !llvm.loop !14652

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14654
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14655
  br label %24, !dbg !14656

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14620
  call void @llvm.dbg.value(metadata i32 %25, metadata !13123, metadata !DIExpression()) #24, !dbg !14622
  call void @llvm.dbg.value(metadata i32 %25, metadata !13117, metadata !DIExpression()) #24, !dbg !14618
  call void @llvm.dbg.value(metadata i32 %25, metadata !14617, metadata !DIExpression()), !dbg !14623
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14657
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #24, !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13727, metadata !DIExpression()) #24, !dbg !14658
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14660
  ret void, !dbg !14661
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14662 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14666, metadata !DIExpression()), !dbg !14669
  %3 = icmp eq i64 %2, -1, !dbg !14670
  br i1 %3, label %4, label %6, !dbg !14672

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14673
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !14675
  br label %11, !dbg !14676

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14667, metadata !DIExpression()), !dbg !14669
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14677
  %8 = sext i32 %7 to i64, !dbg !14677
  call void @llvm.dbg.value(metadata i64 %8, metadata !14667, metadata !DIExpression()), !dbg !14669
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !14678
  %10 = trunc i64 %9 to i32, !dbg !14678
  call void @llvm.dbg.value(metadata i32 %10, metadata !14668, metadata !DIExpression()), !dbg !14669
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14669
  ret i32 %12, !dbg !14679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14684, metadata !DIExpression()), !dbg !14685
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14686, !srcloc !14688
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14689
  ret void, !dbg !14690
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14691 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14695, metadata !DIExpression()), !dbg !14699
  %2 = icmp eq i64 %0, 0, !dbg !14700
  br i1 %2, label %3, label %4, !dbg !14702

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !14703
  br label %29, !dbg !14705

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14697, metadata !DIExpression()), !dbg !14699
  %5 = icmp sgt i64 %0, -3, !dbg !14706
  br i1 %5, label %6, label %10, !dbg !14708

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14709
  %8 = trunc i64 %0 to i32, !dbg !14711
  %9 = add i32 %7, %8, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %9, metadata !14696, metadata !DIExpression()), !dbg !14699
  br label %13, !dbg !14712

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14713
  %12 = sub i32 -2, %11, !dbg !14713
  call void @llvm.dbg.value(metadata i32 %12, metadata !14696, metadata !DIExpression()), !dbg !14699
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14715
  call void @llvm.dbg.value(metadata i32 %14, metadata !14696, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14716
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14718, !srcloc !13126
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %16, metadata !13123, metadata !DIExpression()) #24, !dbg !14720
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %16, metadata !13117, metadata !DIExpression()) #24, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %16, metadata !14698, metadata !DIExpression()), !dbg !14699
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14721
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14722
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !14723
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14724
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14725
  tail call fastcc void @z_add_thread_timeout.152(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !14725
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14726
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %16, metadata !13722, metadata !DIExpression()) #24, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13727, metadata !DIExpression()) #24, !dbg !14728
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14730
  %22 = zext i32 %14 to i64, !dbg !14731
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14732
  %24 = zext i32 %23 to i64, !dbg !14732
  %25 = sub nsw i64 %22, %24, !dbg !14733
  call void @llvm.dbg.value(metadata i64 %25, metadata !14695, metadata !DIExpression()), !dbg !14699
  %26 = icmp sgt i64 %25, 0, !dbg !14734
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14734
  %28 = trunc i64 %27 to i32, !dbg !14734
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14699
  ret i32 %30, !dbg !14735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14736 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14738, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.value(metadata i64 %0, metadata !13158, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i32 10000, metadata !13161, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i32 1000, metadata !13162, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i8 1, metadata !13163, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i1 false, metadata !13164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14740
  call void @llvm.dbg.value(metadata i1 false, metadata !13165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14740
  call void @llvm.dbg.value(metadata i8 0, metadata !13166, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i1 false, metadata !13167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14740
  call void @llvm.dbg.value(metadata i1 true, metadata !13168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14740
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i64 %0, metadata !13158, metadata !DIExpression()), !dbg !14740
  %2 = udiv i64 %0, 10, !dbg !14742
  ret i64 %2, !dbg !14746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14747 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14748, !srcloc !14750
  tail call void @z_impl_k_yield() #26, !dbg !14751
  ret void, !dbg !14752
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14757, metadata !DIExpression()), !dbg !14759
  %2 = sext i32 %0 to i64, !dbg !14760
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14761
  call void @llvm.dbg.value(metadata i64 %3, metadata !14758, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14759
  %4 = shl i64 %3, 32, !dbg !14762
  %5 = ashr exact i64 %4, 32, !dbg !14762
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14763
  call void @llvm.dbg.value(metadata i32 %6, metadata !14758, metadata !DIExpression()), !dbg !14759
  %7 = sext i32 %6 to i64, !dbg !14764
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14765
  %9 = trunc i64 %8 to i32, !dbg !14765
  ret i32 %9, !dbg !14766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14767 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14769, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i64 %0, metadata !13158, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13161, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 10000, metadata !13162, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i8 1, metadata !13163, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i1 false, metadata !13164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14771
  call void @llvm.dbg.value(metadata i1 true, metadata !13165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14771
  call void @llvm.dbg.value(metadata i8 0, metadata !13166, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i1 false, metadata !13167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14771
  call void @llvm.dbg.value(metadata i1 true, metadata !13168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14771
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !14771
  %2 = add i64 %0, 99, !dbg !14773
  call void @llvm.dbg.value(metadata i64 %2, metadata !13158, metadata !DIExpression()), !dbg !14771
  %3 = udiv i64 %2, 100, !dbg !14774
  ret i64 %3, !dbg !14775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14776 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14778, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i64 %0, metadata !13158, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i32 10000, metadata !13161, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13162, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i8 1, metadata !13163, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i1 false, metadata !13164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i1 false, metadata !13165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i8 0, metadata !13166, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !13167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i1 false, metadata !13168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i64 0, metadata !13169, metadata !DIExpression()), !dbg !14780
  %2 = mul i64 %0, 100, !dbg !14782
  ret i64 %2, !dbg !14784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14787, metadata !DIExpression()), !dbg !14788
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14789
  br i1 %2, label %14, label %3, !dbg !14791

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14792
  %5 = icmp slt i32 %4, 0, !dbg !14794
  br i1 %5, label %6, label %10, !dbg !14795

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14796
  %8 = load i8, i8* %7, align 1, !dbg !14796
  %9 = icmp eq i8 %8, 16, !dbg !14799
  br i1 %9, label %10, label %14, !dbg !14800

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14801
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14802
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14803, !srcloc !13762
  call void @llvm.dbg.value(metadata i32 %11, metadata !13758, metadata !DIExpression()) #24, !dbg !14807
  %12 = icmp eq i32 %11, 0, !dbg !14808
  br i1 %12, label %13, label %14, !dbg !14809

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14810
  br label %14, !dbg !14812

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14816, metadata !DIExpression()), !dbg !14817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14818
  %3 = load i8, i8* %2, align 1, !dbg !14818
  %4 = and i8 %3, 2, !dbg !14819
  %5 = icmp ne i8 %4, 0, !dbg !14820
  ret i1 %5, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14822 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14826, metadata !DIExpression()), !dbg !14828
  ret %struct.k_thread* %1, !dbg !14829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14830 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14831, !srcloc !13762
  call void @llvm.dbg.value(metadata i32 %1, metadata !13758, metadata !DIExpression()) #24, !dbg !14834
  %2 = icmp eq i32 %1, 0, !dbg !14835
  br i1 %2, label %3, label %8, !dbg !14836

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14837
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14838
  %6 = icmp ne i32 %5, 0, !dbg !14836
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14842, metadata !DIExpression()), !dbg !14844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14845
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14847, !srcloc !13126
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14847
  call void @llvm.dbg.value(metadata i32 %3, metadata !13123, metadata !DIExpression()) #24, !dbg !14849
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14849
  call void @llvm.dbg.value(metadata i32 %3, metadata !13117, metadata !DIExpression()) #24, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %3, metadata !14843, metadata !DIExpression()), !dbg !14844
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14850
  %5 = load i8, i8* %4, align 4, !dbg !14850
  %6 = and i8 %5, 1, !dbg !14852
  %7 = icmp eq i8 %6, 0, !dbg !14853
  br i1 %7, label %9, label %8, !dbg !14854

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !14858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14860, !srcloc !13152
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !14861, !srcloc !14863
  br label %24, !dbg !14864

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14865
  %11 = load i8, i8* %10, align 1, !dbg !14865
  %12 = and i8 %11, 8, !dbg !14867
  %13 = icmp eq i8 %12, 0, !dbg !14868
  br i1 %13, label %15, label %14, !dbg !14869

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !14870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14870
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !14873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14875, !srcloc !13152
  br label %24, !dbg !14876

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14877
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14878
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14880
  br i1 %17, label %18, label %23, !dbg !14881

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14882, !srcloc !13762
  call void @llvm.dbg.value(metadata i32 %19, metadata !13758, metadata !DIExpression()) #24, !dbg !14885
  %20 = icmp eq i32 %19, 0, !dbg !14886
  br i1 %20, label %21, label %23, !dbg !14887

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13722, metadata !DIExpression()) #24, !dbg !14888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13727, metadata !DIExpression()) #24, !dbg !14888
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14891
  br label %23, !dbg !14892

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13138, metadata !DIExpression()) #24, !dbg !14893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !14893
  call void @llvm.dbg.value(metadata i32 %3, metadata !13146, metadata !DIExpression()) #24, !dbg !14895
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14897, !srcloc !13152
  br label %24, !dbg !14898

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14901, metadata !DIExpression()), !dbg !14902
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14903
  %3 = load i8, i8* %2, align 1, !dbg !14903
  %4 = and i8 %3, 8, !dbg !14905
  %5 = icmp eq i8 %4, 0, !dbg !14906
  br i1 %5, label %6, label %20, !dbg !14907

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14908
  %8 = or i8 %7, 8, !dbg !14908
  store i8 %8, i8* %2, align 1, !dbg !14908
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14910
  br i1 %9, label %10, label %12, !dbg !14912

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13280, metadata !DIExpression()) #24, !dbg !14913
  %11 = and i8 %8, 95, !dbg !14916
  store i8 %11, i8* %2, align 1, !dbg !14916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()) #24, !dbg !14917
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14919
  br label %12, !dbg !14920

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14921
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14921
  %15 = icmp eq %union.anon* %14, null, !dbg !14923
  br i1 %15, label %17, label %16, !dbg !14924

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14925
  br label %17, !dbg !14927

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14928
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14929
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14930
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14931
  br label %20, !dbg !14932

20:                                               ; preds = %17, %1
  ret void, !dbg !14933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14934 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14938, metadata !DIExpression()), !dbg !14940
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14941
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14939, metadata !DIExpression()), !dbg !14940
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14942
  br i1 %3, label %10, label %4, !dbg !14943

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14944
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14946
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14947, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.value(metadata i32 0, metadata !14952, metadata !DIExpression()), !dbg !14953
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14955
  store i32 0, i32* %7, align 4, !dbg !14956
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14957
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14941
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14939, metadata !DIExpression()), !dbg !14940
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14942
  br i1 %9, label %10, label %4, !dbg !14943, !llvm.loop !14958

10:                                               ; preds = %4, %1
  ret void, !dbg !14960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14961 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14966, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14970
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14972, !srcloc !13126
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14972
  call void @llvm.dbg.value(metadata i32 %4, metadata !13123, metadata !DIExpression()) #24, !dbg !14974
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !14974
  call void @llvm.dbg.value(metadata i32 %4, metadata !13117, metadata !DIExpression()) #24, !dbg !14970
  call void @llvm.dbg.value(metadata i32 %4, metadata !14967, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata i32 0, metadata !14968, metadata !DIExpression()), !dbg !14969
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14975
  %6 = load i8, i8* %5, align 1, !dbg !14975
  %7 = and i8 %6, 8, !dbg !14977
  %8 = icmp eq i8 %7, 0, !dbg !14978
  br i1 %8, label %9, label %24, !dbg !14979

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14966, metadata !DIExpression()), !dbg !14969
  %11 = icmp eq i64 %10, 0, !dbg !14980
  br i1 %11, label %24, label %12, !dbg !14982

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14983
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14985
  br i1 %14, label %24, label %15, !dbg !14986

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14987
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14987
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14988
  %19 = icmp eq %union.anon* %17, %18, !dbg !14989
  br i1 %19, label %24, label %20, !dbg !14990

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14991
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !14993
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14994
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !14995
  call void @llvm.dbg.value(metadata i32 %4, metadata !13722, metadata !DIExpression()) #24, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13727, metadata !DIExpression()) #24, !dbg !14996
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14998
  call void @llvm.dbg.value(metadata i32 %23, metadata !14968, metadata !DIExpression()), !dbg !14969
  br label %26, !dbg !14999

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15000
  call void @llvm.dbg.value(metadata i32 %25, metadata !14968, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata i32 %4, metadata !13138, metadata !DIExpression()) #24, !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %4, metadata !13146, metadata !DIExpression()) #24, !dbg !15003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15005, !srcloc !13152
  br label %26, !dbg !15006

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14969
  ret i32 %27, !dbg !15007
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15008 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15012, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i32 %1, metadata !15013, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i8* %2, metadata !15014, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i8 0, metadata !15016, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i32 0, metadata !15017, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13111, metadata !DIExpression()) #24, !dbg !15022
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15024, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #24, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()) #24, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()) #24, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15019, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata i8 poison, metadata !15016, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !15017, metadata !DIExpression()), !dbg !15021
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15027
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15015, metadata !DIExpression()), !dbg !15020
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15030
  br i1 %7, label %12, label %8, !dbg !15032

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15033, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i32 %1, metadata !15039, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i8* %2, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14947, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata i32 %1, metadata !14952, metadata !DIExpression()), !dbg !15044
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15046
  store i32 %1, i32* %9, align 4, !dbg !15047
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15048
  store i8* %2, i8** %10, align 4, !dbg !15049
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15050
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15051
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15052
  call void @llvm.dbg.value(metadata i8 1, metadata !15016, metadata !DIExpression()), !dbg !15020
  br label %12, !dbg !15053

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15024
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15024
  call void @llvm.dbg.value(metadata i32 %14, metadata !13123, metadata !DIExpression()) #24, !dbg !15026
  call void @llvm.dbg.value(metadata i32 %14, metadata !13117, metadata !DIExpression()) #24, !dbg !15022
  call void @llvm.dbg.value(metadata i32 %14, metadata !15019, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata i8 poison, metadata !15016, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #24, !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13143, metadata !DIExpression()) #24, !dbg !15054
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()) #24, !dbg !15056
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15058, !srcloc !13152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15017, metadata !DIExpression()), !dbg !15021
  ret i1 %13, !dbg !15059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15060 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15066, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata i64 undef, metadata !15068, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15065, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15067, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata i8** %4, metadata !15069, metadata !DIExpression()), !dbg !15071
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15072
  call void @llvm.dbg.value(metadata i32 %6, metadata !15070, metadata !DIExpression()), !dbg !15071
  %7 = icmp eq i8** %4, null, !dbg !15073
  br i1 %7, label %12, label %8, !dbg !15075

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15076
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15078
  %11 = load i8*, i8** %10, align 4, !dbg !15078
  store i8* %11, i8** %4, align 4, !dbg !15079
  br label %12, !dbg !15080

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15082 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !15084
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !15085
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !15086
  ret void, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15088 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15098, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15096, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15097, metadata !DIExpression()), !dbg !15115
  %5 = icmp eq i64 %4, -1, !dbg !15116
  br i1 %5, label %55, label %6, !dbg !15118

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15119
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15120
  call void @llvm.dbg.value(metadata i32 0, metadata !15099, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15129
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15131, !srcloc !15137
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15131
  call void @llvm.dbg.value(metadata i32 %9, metadata !15134, metadata !DIExpression()) #24, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15138
  call void @llvm.dbg.value(metadata i32 %9, metadata !15128, metadata !DIExpression()) #24, !dbg !15129
  call void @llvm.dbg.value(metadata i32 %9, metadata !15105, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15099, metadata !DIExpression()), !dbg !15121
  %10 = icmp slt i64 %4, -1, !dbg !15139
  br i1 %10, label %11, label %17, !dbg !15140

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15141
  %13 = add i64 %4, %12, !dbg !15142
  %14 = sub i64 -2, %13, !dbg !15142
  call void @llvm.dbg.value(metadata i64 %14, metadata !15109, metadata !DIExpression()), !dbg !15143
  %15 = icmp sgt i64 %14, 1, !dbg !15144
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15144
  br label %22, !dbg !15145

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15146
  %19 = tail call fastcc i32 @elapsed.170() #26, !dbg !15148
  %20 = sext i32 %19 to i64, !dbg !15148
  %21 = add nsw i64 %18, %20, !dbg !15149
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15150
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15151
  store i64 %23, i64* %24, align 8, !dbg !15152
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15153
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15106, metadata !DIExpression()), !dbg !15155
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15156
  br i1 %26, label %42, label %27, !dbg !15156

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15157
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15106, metadata !DIExpression()), !dbg !15155
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15161
  %31 = load i64, i64* %30, align 8, !dbg !15161
  %32 = icmp slt i64 %28, %31, !dbg !15162
  br i1 %32, label %33, label %38, !dbg !15163

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15161
  %35 = sub nsw i64 %31, %28, !dbg !15164
  store i64 %35, i64* %34, align 8, !dbg !15164
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15166
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15167
  tail call fastcc void @sys_dlist_insert.171(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15168
  br label %44, !dbg !15169

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15170
  store i64 %39, i64* %24, align 8, !dbg !15170
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15171
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15106, metadata !DIExpression()), !dbg !15155
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15156
  br i1 %41, label %42, label %27, !dbg !15156, !llvm.loop !15172

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15174
  tail call fastcc void @sys_dlist_append.172(%struct._dnode* noundef %43) #26, !dbg !15177
  br label %44, !dbg !15178

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15179
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15180
  br i1 %46, label %47, label %54, !dbg !15181

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %48, metadata !15112, metadata !DIExpression()), !dbg !15183
  %49 = icmp ne i32 %48, 0, !dbg !15184
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15186
  br i1 %52, label %54, label %53, !dbg !15186

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15187
  br label %54, !dbg !15189

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15190, metadata !DIExpression()) #24, !dbg !15196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15196
  call void @llvm.dbg.value(metadata i32 %9, metadata !15198, metadata !DIExpression()) #24, !dbg !15201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15203, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15099, metadata !DIExpression()), !dbg !15121
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.170() unnamed_addr #1 !dbg !15206 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15209
  %2 = icmp eq i32 %1, 0, !dbg !15210
  br i1 %2, label %3, label %5, !dbg !15209

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15211
  br label %5, !dbg !15209

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15209
  ret i32 %6, !dbg !15212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15213 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.175() #26, !dbg !15219
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15217, metadata !DIExpression()), !dbg !15220
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15221
  ret %struct._timeout* %2, !dbg !15222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.171(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15223 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15227, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15228, metadata !DIExpression()), !dbg !15231
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15232
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15232
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15229, metadata !DIExpression()), !dbg !15231
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15233
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15234
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15235
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15236
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15237
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15238
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15239
  ret void, !dbg !15240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15241 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15245, metadata !DIExpression()), !dbg !15247
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15248
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.173(%struct._dnode* noundef %2) #26, !dbg !15249
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15246, metadata !DIExpression()), !dbg !15247
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15250
  ret %struct._timeout* %4, !dbg !15251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.172(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15252 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15257, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15258, metadata !DIExpression()), !dbg !15260
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15261
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15259, metadata !DIExpression()), !dbg !15260
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15262
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15263
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15264
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15265
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15266
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15267
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15268
  ret void, !dbg !15269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15270 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15275
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15272, metadata !DIExpression()), !dbg !15276
  %2 = tail call fastcc i32 @elapsed.170() #26, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %2, metadata !15273, metadata !DIExpression()), !dbg !15276
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15278
  br i1 %3, label %14, label %4, !dbg !15280

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15281
  %6 = load i64, i64* %5, align 8, !dbg !15281
  %7 = sext i32 %2 to i64, !dbg !15282
  %8 = sub nsw i64 %6, %7, !dbg !15283
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15284
  br i1 %9, label %14, label %10, !dbg !15285

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15286
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15286
  %13 = trunc i64 %12 to i32, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %13, metadata !15274, metadata !DIExpression()), !dbg !15276
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15288
  call void @llvm.dbg.value(metadata i32 %15, metadata !15274, metadata !DIExpression()), !dbg !15276
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15289
  %17 = icmp ne i32 %16, 0, !dbg !15291
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15292
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %20, metadata !15274, metadata !DIExpression()), !dbg !15276
  ret i32 %20, !dbg !15293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.173(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15294 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15298, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15299, metadata !DIExpression()), !dbg !15300
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15301
  br i1 %2, label %5, label %3, !dbg !15302

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.174(%struct._dnode* noundef nonnull %0) #26, !dbg !15303
  br label %5, !dbg !15302

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15302
  ret %struct._dnode* %6, !dbg !15304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.174(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15305 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15307, metadata !DIExpression()), !dbg !15309
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15308, metadata !DIExpression()), !dbg !15309
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15310
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15311
  br i1 %3, label %7, label %4, !dbg !15312

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15313
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15313
  br label %7, !dbg !15312

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15312
  ret %struct._dnode* %8, !dbg !15314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.175() unnamed_addr #5 !dbg !15315 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15319, metadata !DIExpression()), !dbg !15320
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.176() #26, !dbg !15321
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15321
  ret %struct._dnode* %3, !dbg !15322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.176() unnamed_addr #5 !dbg !15323 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15327, metadata !DIExpression()), !dbg !15328
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15329
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15330
  ret i1 %2, !dbg !15331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15332 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15336, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i32 -22, metadata !15337, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i32 0, metadata !15338, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15343
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15345, !srcloc !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #24, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()) #24, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15340, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata i32 -22, metadata !15337, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i32 undef, metadata !15338, metadata !DIExpression()), !dbg !15342
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15337, metadata !DIExpression()), !dbg !15341
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* noundef %3) #26, !dbg !15348
  br i1 %4, label %5, label %6, !dbg !15352

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15353
  call void @llvm.dbg.value(metadata i32 0, metadata !15337, metadata !DIExpression()), !dbg !15341
  br label %6, !dbg !15355

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15341
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15345
  call void @llvm.dbg.value(metadata i32 %8, metadata !15134, metadata !DIExpression()) #24, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %8, metadata !15128, metadata !DIExpression()) #24, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %8, metadata !15340, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata i32 %7, metadata !15337, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i32 undef, metadata !15190, metadata !DIExpression()) #24, !dbg !15356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15356
  call void @llvm.dbg.value(metadata i32 undef, metadata !15198, metadata !DIExpression()) #24, !dbg !15358
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15360, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15338, metadata !DIExpression()), !dbg !15342
  ret i32 %7, !dbg !15361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15362 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15368, metadata !DIExpression()), !dbg !15369
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15370
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15370
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15371
  ret i1 %4, !dbg !15372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15373 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15375, metadata !DIExpression()), !dbg !15376
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15377
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15379
  br i1 %3, label %10, label %4, !dbg !15380

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15381
  %6 = load i64, i64* %5, align 8, !dbg !15381
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15383
  %8 = load i64, i64* %7, align 8, !dbg !15384
  %9 = add nsw i64 %8, %6, !dbg !15384
  store i64 %9, i64* %7, align 8, !dbg !15384
  br label %10, !dbg !15385

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15386
  tail call fastcc void @sys_dlist_remove.180(%struct._dnode* noundef %11) #26, !dbg !15387
  ret void, !dbg !15388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.180(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15389 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15393, metadata !DIExpression()), !dbg !15396
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15397
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15397
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15394, metadata !DIExpression()), !dbg !15396
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15398
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15398
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15395, metadata !DIExpression()), !dbg !15396
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15399
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15400
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15401
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15402
  tail call fastcc void @sys_dnode_init.181(%struct._dnode* noundef %0) #26, !dbg !15403
  ret void, !dbg !15404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.181(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15405 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15407, metadata !DIExpression()), !dbg !15408
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15409
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15410
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15411
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15412
  ret void, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15420, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata i64 0, metadata !15421, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata i32 0, metadata !15422, metadata !DIExpression()), !dbg !15426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15427
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15429, !srcloc !15137
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15429
  call void @llvm.dbg.value(metadata i32 %3, metadata !15134, metadata !DIExpression()) #24, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %3, metadata !15128, metadata !DIExpression()) #24, !dbg !15427
  call void @llvm.dbg.value(metadata i32 %3, metadata !15424, metadata !DIExpression()), !dbg !15426
  call void @llvm.dbg.value(metadata i64 0, metadata !15421, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()), !dbg !15426
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15432
  call void @llvm.dbg.value(metadata i64 %4, metadata !15421, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.value(metadata i32 %3, metadata !15190, metadata !DIExpression()) #24, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15435
  call void @llvm.dbg.value(metadata i32 %3, metadata !15198, metadata !DIExpression()) #24, !dbg !15437
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15439, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()), !dbg !15426
  ret i64 %4, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15441 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15443, metadata !DIExpression()), !dbg !15447
  call void @llvm.dbg.value(metadata i64 0, metadata !15444, metadata !DIExpression()), !dbg !15447
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.182(%struct._timeout* noundef %0) #26, !dbg !15448
  br i1 %2, label %21, label %3, !dbg !15450

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15451
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15445, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i64 0, metadata !15444, metadata !DIExpression()), !dbg !15447
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15453
  br i1 %5, label %16, label %6, !dbg !15455

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15445, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i64 %8, metadata !15444, metadata !DIExpression()), !dbg !15447
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15456
  %10 = load i64, i64* %9, align 8, !dbg !15456
  %11 = add nsw i64 %10, %8, !dbg !15458
  call void @llvm.dbg.value(metadata i64 %11, metadata !15444, metadata !DIExpression()), !dbg !15447
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15459
  br i1 %12, label %16, label %13, !dbg !15461

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15462
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15445, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i64 %11, metadata !15444, metadata !DIExpression()), !dbg !15447
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15453
  br i1 %15, label %16, label %6, !dbg !15455, !llvm.loop !15463

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15447
  call void @llvm.dbg.value(metadata i64 %17, metadata !15444, metadata !DIExpression()), !dbg !15447
  %18 = tail call fastcc i32 @elapsed.170() #26, !dbg !15465
  %19 = sext i32 %18 to i64, !dbg !15465
  %20 = sub nsw i64 %17, %19, !dbg !15466
  br label %21, !dbg !15467

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15447
  ret i64 %22, !dbg !15468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.182(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15469 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15473, metadata !DIExpression()), !dbg !15474
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15475
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* noundef %2) #26, !dbg !15476
  %4 = xor i1 %3, true, !dbg !15477
  ret i1 %4, !dbg !15478
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15479 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15481, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i64 0, metadata !15482, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i32 0, metadata !15483, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15488
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15490, !srcloc !15137
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %3, metadata !15134, metadata !DIExpression()) #24, !dbg !15492
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %3, metadata !15128, metadata !DIExpression()) #24, !dbg !15488
  call void @llvm.dbg.value(metadata i32 %3, metadata !15485, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata i64 0, metadata !15482, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i32 undef, metadata !15483, metadata !DIExpression()), !dbg !15487
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15493
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15496
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15486
  call void @llvm.dbg.value(metadata i32 %3, metadata !15190, metadata !DIExpression()) #24, !dbg !15497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %3, metadata !15198, metadata !DIExpression()) #24, !dbg !15499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15501, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15483, metadata !DIExpression()), !dbg !15487
  %6 = add i64 %5, %4, !dbg !15502
  ret i64 %6, !dbg !15503
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15504 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15506, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i32 0, metadata !15507, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15512
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15514, !srcloc !15137
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %2, metadata !15134, metadata !DIExpression()) #24, !dbg !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %2, metadata !15128, metadata !DIExpression()) #24, !dbg !15512
  call void @llvm.dbg.value(metadata i32 %2, metadata !15509, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata i32 -1, metadata !15506, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()), !dbg !15511
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15517
  call void @llvm.dbg.value(metadata i32 %3, metadata !15506, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i32 %2, metadata !15190, metadata !DIExpression()) #24, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %2, metadata !15198, metadata !DIExpression()) #24, !dbg !15522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15524, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()), !dbg !15511
  ret i32 %3, !dbg !15525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15528, metadata !DIExpression()), !dbg !15538
  call void @llvm.dbg.value(metadata i1 %1, metadata !15529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15538
  call void @llvm.dbg.value(metadata i32 0, metadata !15530, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15540
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15542, !srcloc !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #24, !dbg !15544
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15544
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()) #24, !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !15532, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15530, metadata !DIExpression()), !dbg !15539
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %4, metadata !15533, metadata !DIExpression()), !dbg !15546
  call void @llvm.dbg.value(metadata i1 undef, metadata !15536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15546
  %5 = icmp slt i32 %4, 2, !dbg !15547
  call void @llvm.dbg.value(metadata i1 %5, metadata !15537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15546
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15548
  call void @llvm.dbg.value(metadata i1 %6, metadata !15536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15546
  br i1 %7, label %11, label %8, !dbg !15548

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15550
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15550
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15552
  br label %11, !dbg !15553

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15542
  call void @llvm.dbg.value(metadata i32 %12, metadata !15134, metadata !DIExpression()) #24, !dbg !15544
  call void @llvm.dbg.value(metadata i32 %12, metadata !15128, metadata !DIExpression()) #24, !dbg !15540
  call void @llvm.dbg.value(metadata i32 %12, metadata !15532, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15190, metadata !DIExpression()) #24, !dbg !15554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15198, metadata !DIExpression()) #24, !dbg !15556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15558, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 1, metadata !15530, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15530, metadata !DIExpression()), !dbg !15539
  ret void, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15564, metadata !DIExpression()), !dbg !15569
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15571
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15573, !srcloc !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #24, !dbg !15575
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15575
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()) #24, !dbg !15571
  call void @llvm.dbg.value(metadata i32 undef, metadata !15565, metadata !DIExpression()), !dbg !15569
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !15565, metadata !DIExpression()), !dbg !15569
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !15576
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15577
  br i1 %4, label %28, label %5, !dbg !15578

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15579
  %10 = load i64, i64* %9, align 8, !dbg !15579
  %11 = sext i32 %8 to i64, !dbg !15580
  %12 = icmp sgt i64 %10, %11, !dbg !15581
  br i1 %12, label %26, label %13, !dbg !15582

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15569
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15566, metadata !DIExpression()), !dbg !15583
  %15 = trunc i64 %10 to i32, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %15, metadata !15568, metadata !DIExpression()), !dbg !15583
  %16 = sext i32 %15 to i64, !dbg !15585
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15586
  %18 = add i64 %17, %16, !dbg !15586
  store i64 %18, i64* @curr_tick, align 8, !dbg !15586
  store i64 0, i64* %9, align 8, !dbg !15587
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !15588
  call void @llvm.dbg.value(metadata i32 %14, metadata !15190, metadata !DIExpression()) #24, !dbg !15589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15589
  call void @llvm.dbg.value(metadata i32 %14, metadata !15198, metadata !DIExpression()) #24, !dbg !15591
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15593, !srcloc !15204
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15594
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15594
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15596
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15598, !srcloc !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #24, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()) #24, !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !15565, metadata !DIExpression()), !dbg !15569
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15601
  %23 = sub nsw i32 %22, %15, !dbg !15601
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !15565, metadata !DIExpression()), !dbg !15569
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !15576
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15577
  br i1 %25, label %28, label %5, !dbg !15578, !llvm.loop !15602

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15604
  store i64 %27, i64* %9, align 8, !dbg !15604
  br label %32, !dbg !15607

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15569
  %31 = sext i32 %30 to i64, !dbg !15608
  br label %32, !dbg !15608

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15608
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15569
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15609
  %37 = add i64 %36, %33, !dbg !15609
  store i64 %37, i64* @curr_tick, align 8, !dbg !15609
  store i32 0, i32* @announce_remaining, align 4, !dbg !15610
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !15611
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15612
  call void @llvm.dbg.value(metadata i32 %35, metadata !15190, metadata !DIExpression()) #24, !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15613
  call void @llvm.dbg.value(metadata i32 %35, metadata !15198, metadata !DIExpression()) #24, !dbg !15615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !15617, !srcloc !15204
  ret void, !dbg !15618
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15619 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15623, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 0, metadata !15624, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15122, metadata !DIExpression()) #24, !dbg !15629
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15631, !srcloc !15137
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15631
  call void @llvm.dbg.value(metadata i32 %2, metadata !15134, metadata !DIExpression()) #24, !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #24, !dbg !15633
  call void @llvm.dbg.value(metadata i32 %2, metadata !15128, metadata !DIExpression()) #24, !dbg !15629
  call void @llvm.dbg.value(metadata i32 %2, metadata !15626, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i64 0, metadata !15623, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15628
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15634
  %4 = tail call fastcc i32 @elapsed.170() #26, !dbg !15637
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15623, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15627
  call void @llvm.dbg.value(metadata i32 %2, metadata !15190, metadata !DIExpression()) #24, !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15195, metadata !DIExpression()) #24, !dbg !15638
  call void @llvm.dbg.value(metadata i32 %2, metadata !15198, metadata !DIExpression()) #24, !dbg !15640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15642, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15628
  %5 = sext i32 %4 to i64, !dbg !15637
  %6 = add i64 %3, %5, !dbg !15643
  ret i64 %6, !dbg !15644
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15645 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15646
  %2 = trunc i64 %1 to i32, !dbg !15647
  ret i32 %2, !dbg !15648
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15649 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15650
  ret i64 %1, !dbg !15651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15654, metadata !DIExpression()), !dbg !15661
  %2 = icmp eq i32 %0, 0, !dbg !15662
  br i1 %2, label %10, label %3, !dbg !15664

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15665
  call void @llvm.dbg.value(metadata i32 %4, metadata !15655, metadata !DIExpression()), !dbg !15661
  %5 = mul i32 %0, 168, !dbg !15666
  call void @llvm.dbg.value(metadata i32 %5, metadata !15656, metadata !DIExpression()), !dbg !15661
  br label %6, !dbg !15667

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15668
  call void @llvm.dbg.value(metadata i32 %7, metadata !15657, metadata !DIExpression()), !dbg !15669
  %8 = sub i32 %7, %4, !dbg !15670
  %9 = icmp ult i32 %8, %5, !dbg !15672
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15674 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !15675
  ret i32 %1, !dbg !15676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15677 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15679
  ret i32 %1, !dbg !15680
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15681 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15685, metadata !DIExpression()), !dbg !15687
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15688

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15689
  br label %14, !dbg !15693

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15686, metadata !DIExpression()), !dbg !15687
  %6 = icmp slt i64 %2, -1, !dbg !15694
  br i1 %6, label %7, label %9, !dbg !15697

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15698
  br label %14, !dbg !15699

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15701
  %11 = icmp ugt i64 %2, 1, !dbg !15702
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15702
  %13 = add nsw i64 %10, %12, !dbg !15703
  br label %14, !dbg !15704

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15705
  ret i64 %15, !dbg !15706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15707 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.191, i32 0, i32 0)) #25, !dbg !15709
  ret void, !dbg !15710
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!672, !2, !2355, !27, !124, !2357, !2359, !138, !2385, !2423, !167, !222, !2425, !2436, !2482, !2484, !2512, !2540, !2583, !2654, !2699, !251, !397, !2727, !433, !443, !468, !718, !2732, !854, !920, !1260, !1555, !2771, !1670, !1760, !2773, !2859, !2924, !1812, !2927, !1819, !2183, !2945, !2203, !2947, !2318, !2950}
!llvm.ident = !{!2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952, !2952}
!llvm.module.flags = !{!2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 103, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5824, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 91)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2912, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !167, file: !184, line: 56, type: !185, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !183, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 501, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f427xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 492, size: 224, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !173, file: !172, line: 494, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !173, file: !172, line: 495, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !173, file: !172, line: 496, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 497, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 498, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !173, file: !172, line: 499, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !173, file: !172, line: 500, baseType: !176, size: 32, offset: 192)
!183 = !{!165}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = !{!189, !219}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !187, line: 60, baseType: !190, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DISubroutineType(types: !192)
!192 = !{!103, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !197)
!196 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!197 = !{!198, !201, !202, !203, !212, !213}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 380, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !195, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !195, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !195, file: !196, line: 386, baseType: !204, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !206)
!206 = !{!207, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !205, file: !196, line: 359, baseType: !208, size: 8)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !209)
!209 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !205, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !195, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !195, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !196, line: 43, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !218)
!218 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 65, baseType: !193, size: 32, offset: 32)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !222, file: !225, line: 71, type: !226, isLocal: true, isDefinition: true, align: 32)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !224, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!224 = !{!220}
!225 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !228)
!228 = !{!229, !248}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !227, file: !187, line: 60, baseType: !230, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !233}
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !236)
!236 = !{!237, !238, !239, !240, !246, !247}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !196, line: 380, baseType: !199, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !235, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !235, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !235, file: !196, line: 386, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !243)
!243 = !{!244, !245}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !242, file: !196, line: 359, baseType: !208, size: 8)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !242, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !235, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !235, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !227, file: !187, line: 65, baseType: !233, size: 32, offset: 32)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "static_regions", scope: !251, file: !258, line: 62, type: !393, isLocal: true, isDefinition: true)
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !253, globals: !254, splitDebugInlining: false, nameTableKind: None)
!252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!253 = !{!120, !103, !137, !102}
!254 = !{!255, !249}
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !257, file: !258, line: 198, type: !379, isLocal: true, isDefinition: true)
!257 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !258, file: !258, line: 175, type: !259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !374)
!258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!259 = !DISubroutineType(types: !260)
!260 = !{null, !261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !264)
!263 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!264 = !{!265, !332, !345, !346, !347, !348, !354, !369}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !262, file: !263, line: 247, baseType: !266, size: 384)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !267)
!267 = !{!268, !296, !304, !305, !306, !317, !318, !319}
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 60, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 60, size: 64, elements: !270)
!270 = !{!271, !287}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !269, file: !263, line: 61, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !275)
!275 = !{!276, !282}
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 38, baseType: !277, size: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 38, size: 32, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !277, file: !273, line: 39, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !277, file: !273, line: 40, baseType: !280, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 42, baseType: !283, size: 32, offset: 32)
!283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 42, size: 32, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !283, file: !273, line: 43, baseType: !280, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !283, file: !273, line: 44, baseType: !280, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !269, file: !263, line: 62, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !288, file: !289, line: 50, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !294)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!294 = !{!295}
!295 = !DISubrange(count: 2)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !266, file: !263, line: 68, baseType: !297, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !300, file: !299, line: 232, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !274)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !266, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !266, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!306 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 90, baseType: !307, size: 16, offset: 112)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 90, size: 16, elements: !308)
!308 = !{!309, !316}
!309 = !DIDerivedType(tag: DW_TAG_member, scope: !307, file: !263, line: 91, baseType: !310, size: 16)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !307, file: !263, line: 91, size: 16, elements: !311)
!311 = !{!312, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !310, file: !263, line: 96, baseType: !313, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !314)
!314 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !310, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !307, file: !263, line: 100, baseType: !151, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !266, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !266, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !266, file: !263, line: 131, baseType: !320, size: 192, offset: 192)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !321)
!321 = !{!322, !323, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !320, file: !299, line: 245, baseType: !272, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !320, file: !299, line: 246, baseType: !324, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !328}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !320, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !331)
!331 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !262, file: !263, line: 250, baseType: !333, size: 288, offset: 384)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !333, file: !334, line: 26, baseType: !137, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !333, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !333, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !333, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !333, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !333, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !333, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !333, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !333, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !262, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !262, file: !263, line: 256, baseType: !298, size: 64, offset: 704)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !262, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !262, file: !263, line: 300, baseType: !349, size: 96, offset: 800)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !349, file: !263, line: 153, baseType: !22, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !349, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !262, file: !263, line: 325, baseType: !355, size: 32, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !358)
!357 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !365, !366}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !356, file: !357, line: 5074, baseType: !360, size: 96)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !360, file: !113, line: 57, baseType: !116, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !360, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !360, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !356, file: !357, line: 5075, baseType: !298, size: 64, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !356, file: !357, line: 5076, baseType: !367, offset: 160)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!368 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !262, file: !263, line: 343, baseType: !370, size: 64, offset: 928)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !370, file: !334, line: 63, baseType: !137, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !370, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(name: "thread", arg: 1, scope: !257, file: !258, line: 175, type: !261)
!376 = !DILocalVariable(name: "region_num", scope: !257, file: !258, line: 200, type: !208)
!377 = !DILocalVariable(name: "guard_start", scope: !257, file: !258, line: 265, type: !22)
!378 = !DILocalVariable(name: "guard_size", scope: !257, file: !258, line: 266, type: !120)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !391)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !382)
!381 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !380, file: !381, line: 53, baseType: !22, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !380, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !380, file: !381, line: 55, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !389)
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !388, file: !387, line: 150, baseType: !137, size: 32)
!391 = !{!392}
!392 = !DISubrange(count: 1)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !391)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !397, file: !430, line: 39, type: !208, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !399, globals: !429, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!399 = !{!400, !102, !103, !417, !208}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !402, line: 1226, baseType: !403)
!402 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 1213, size: 352, elements: !404)
!404 = !{!405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !403, file: !402, line: 1215, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !403, file: !402, line: 1216, baseType: !176, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !403, file: !402, line: 1217, baseType: !176, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !403, file: !402, line: 1218, baseType: !176, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !403, file: !402, line: 1219, baseType: !176, size: 32, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !403, file: !402, line: 1220, baseType: !176, size: 32, offset: 160)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !403, file: !402, line: 1221, baseType: !176, size: 32, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !403, file: !402, line: 1222, baseType: !176, size: 32, offset: 224)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !403, file: !402, line: 1223, baseType: !176, size: 32, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !403, file: !402, line: 1224, baseType: !176, size: 32, offset: 288)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !403, file: !402, line: 1225, baseType: !176, size: 32, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !423, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 29, baseType: !137, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !419, file: !420, line: 37, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !426, file: !387, line: 143, baseType: !137, size: 32)
!429 = !{!395}
!430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !433, file: !440, line: 21, type: !128, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !435, globals: !439, splitDebugInlining: false, nameTableKind: None)
!434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!435 = !{!436, !103, !102}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 22, baseType: !103)
!438 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!431}
!440 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !443, file: !448, line: 13, type: !465, isLocal: true, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !445, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!445 = !{!446, !441}
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "mpu_config", scope: !443, file: !448, line: 37, type: !449, isLocal: false, isDefinition: true)
!448 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !420, line: 41, size: 64, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !450, file: !420, line: 43, baseType: !137, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !450, file: !420, line: 45, baseType: !454, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !456, file: !420, line: 29, baseType: !137, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !456, file: !420, line: 37, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !462, file: !387, line: 143, baseType: !137, size: 32)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !294)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !468, file: !583, line: 72, type: !667, isLocal: true, isDefinition: true)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, retainedTypes: !569, globals: !580, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!470 = !{!30, !471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 65, baseType: !103, size: 32, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568}
!473 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!481 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!482 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!483 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!484 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!485 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!486 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!487 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!488 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!489 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!490 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!491 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!492 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!493 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!494 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!495 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!496 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!497 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!498 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!499 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!500 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!501 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!502 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!503 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!504 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!505 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!506 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!507 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!508 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!509 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!510 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!511 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!512 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!513 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!514 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!515 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!516 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!517 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!518 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!519 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!520 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!521 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!522 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!523 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!524 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!525 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!526 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!527 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!528 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!529 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!530 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!531 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!532 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!533 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!534 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!535 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!536 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!537 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!538 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!539 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!540 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!541 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!542 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!543 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!544 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!545 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!546 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!547 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!548 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!549 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!550 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!551 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!552 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!553 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!554 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!555 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!556 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!557 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!558 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!559 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!560 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!561 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!562 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!563 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!564 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!565 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!566 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!567 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!568 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!569 = !{!120, !103, !102, !570}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 486, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 478, size: 192, elements: !573)
!573 = !{!574, !575, !576, !577, !578, !579}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !572, file: !172, line: 480, baseType: !176, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !572, file: !172, line: 481, baseType: !176, size: 32, offset: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !572, file: !172, line: 482, baseType: !176, size: 32, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !572, file: !172, line: 483, baseType: !176, size: 32, offset: 96)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !572, file: !172, line: 484, baseType: !176, size: 32, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !572, file: !172, line: 485, baseType: !176, size: 32, offset: 160)
!580 = !{!581, !587, !603, !614, !631, !466, !633, !647, !649, !651, !653, !655, !657, !659, !661, !663, !665}
!581 = !DIGlobalVariableExpression(var: !582, expr: !DIExpression())
!582 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !468, file: !583, line: 424, type: !584, isLocal: false, isDefinition: true, align: 16)
!583 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !585)
!585 = !{!586}
!586 = !DISubrange(count: 4)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !468, file: !583, line: 424, type: !589, isLocal: false, isDefinition: true, align: 32)
!589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !590)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !591)
!591 = !{!592, !593, !594, !595, !601, !602}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !590, file: !196, line: 380, baseType: !199, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !590, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !590, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !590, file: !196, line: 386, baseType: !596, size: 32, offset: 96)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !598)
!598 = !{!599, !600}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !597, file: !196, line: 359, baseType: !208, size: 8)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !597, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !590, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !590, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !468, file: !583, line: 424, type: !605, isLocal: true, isDefinition: true, align: 32)
!605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !606)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !607)
!607 = !{!608, !613}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !606, file: !187, line: 60, baseType: !609, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = !DISubroutineType(types: !611)
!611 = !{!103, !612}
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !606, file: !187, line: 65, baseType: !612, size: 32, offset: 32)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "exti_data", scope: !468, file: !583, line: 423, type: !616, isLocal: true, isDefinition: true)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !583, line: 107, size: 1472, elements: !617)
!617 = !{!618}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !616, file: !583, line: 109, baseType: !619, size: 1472)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 1472, elements: !629)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !583, line: 101, size: 64, elements: !621)
!621 = !{!622, !628}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !620, file: !583, line: 102, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !624, line: 63, baseType: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = !DISubroutineType(types: !627)
!627 = !{null, !103, !102}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !620, file: !583, line: 103, baseType: !102, size: 32, offset: 32)
!629 = !{!630}
!630 = !DISubrange(count: 23)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !468, file: !583, line: 424, type: !597, isLocal: true, isDefinition: true, align: 8)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !635, file: !583, line: 493, type: !640, isLocal: true, isDefinition: true, align: 32)
!635 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !583, file: !583, line: 460, type: !636, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !638)
!636 = !DISubroutineType(types: !637)
!637 = !{null, !612}
!638 = !{!639}
!639 = !DILocalVariable(name: "dev", arg: 1, scope: !635, file: !583, line: 460, type: !612)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !641)
!641 = !{!642, !644, !645, !646}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !640, file: !10, line: 55, baseType: !643, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !640, file: !10, line: 57, baseType: !643, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !640, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !640, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !635, file: !583, line: 497, type: !640, isLocal: true, isDefinition: true, align: 32)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !635, file: !583, line: 507, type: !640, isLocal: true, isDefinition: true, align: 32)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !635, file: !583, line: 512, type: !640, isLocal: true, isDefinition: true, align: 32)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !635, file: !583, line: 516, type: !640, isLocal: true, isDefinition: true, align: 32)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !635, file: !583, line: 523, type: !640, isLocal: true, isDefinition: true, align: 32)
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !635, file: !583, line: 527, type: !640, isLocal: true, isDefinition: true, align: 32)
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !635, file: !583, line: 581, type: !640, isLocal: true, isDefinition: true, align: 32)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !635, file: !583, line: 586, type: !640, isLocal: true, isDefinition: true, align: 32)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !635, file: !583, line: 591, type: !640, isLocal: true, isDefinition: true, align: 32)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !635, file: !583, line: 595, type: !640, isLocal: true, isDefinition: true, align: 32)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 736, elements: !629)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 165, baseType: !471)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !672, file: !677, line: 29, type: !713, isLocal: false, isDefinition: true, align: 16)
!672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !674, splitDebugInlining: false, nameTableKind: None)
!673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!674 = !{!675, !670, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !705, !707, !709, !711}
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !672, file: !677, line: 24, type: !678, isLocal: false, isDefinition: true, align: 16)
!677 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 304, elements: !679)
!679 = !{!680}
!680 = !DISubrange(count: 19)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !672, file: !677, line: 36, type: !584, isLocal: false, isDefinition: true, align: 16)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !672, file: !677, line: 43, type: !584, isLocal: false, isDefinition: true, align: 16)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !672, file: !677, line: 50, type: !584, isLocal: false, isDefinition: true, align: 16)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !672, file: !677, line: 57, type: !584, isLocal: false, isDefinition: true, align: 16)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !672, file: !677, line: 64, type: !584, isLocal: false, isDefinition: true, align: 16)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !672, file: !677, line: 71, type: !584, isLocal: false, isDefinition: true, align: 16)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !672, file: !677, line: 78, type: !584, isLocal: false, isDefinition: true, align: 16)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !672, file: !677, line: 85, type: !584, isLocal: false, isDefinition: true, align: 16)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !672, file: !677, line: 92, type: !584, isLocal: false, isDefinition: true, align: 16)
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !672, file: !677, line: 99, type: !584, isLocal: false, isDefinition: true, align: 16)
!701 = !DIGlobalVariableExpression(var: !702, expr: !DIExpression())
!702 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !672, file: !677, line: 106, type: !584, isLocal: false, isDefinition: true, align: 16)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !672, file: !677, line: 113, type: !584, isLocal: false, isDefinition: true, align: 16)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !672, file: !677, line: 120, type: !584, isLocal: false, isDefinition: true, align: 16)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !672, file: !677, line: 127, type: !584, isLocal: false, isDefinition: true, align: 16)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !672, file: !677, line: 134, type: !584, isLocal: false, isDefinition: true, align: 16)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !672, file: !677, line: 141, type: !584, isLocal: false, isDefinition: true, align: 16)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !714)
!714 = !{!715}
!715 = !DISubrange(count: 3)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !718, file: !780, line: 398, type: !813, isLocal: true, isDefinition: true)
!718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !720, retainedTypes: !733, globals: !777, splitDebugInlining: false, nameTableKind: None)
!719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!720 = !{!721, !30, !726}
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !722, line: 197, baseType: !32, size: 32, elements: !723)
!722 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!723 = !{!724, !725}
!724 = !DIEnumerator(name: "SUCCESS", value: 0)
!725 = !DIEnumerator(name: "ERROR", value: 1)
!726 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !727, line: 44, baseType: !32, size: 32, elements: !728)
!727 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!728 = !{!729, !730, !731, !732}
!729 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!730 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!731 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!732 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!733 = !{!102, !103, !137, !734, !771, !149}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 677, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 643, size: 1152, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !736, file: !172, line: 645, baseType: !176, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !736, file: !172, line: 646, baseType: !176, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !736, file: !172, line: 647, baseType: !176, size: 32, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !736, file: !172, line: 648, baseType: !176, size: 32, offset: 96)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !736, file: !172, line: 649, baseType: !176, size: 32, offset: 128)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !736, file: !172, line: 650, baseType: !176, size: 32, offset: 160)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !736, file: !172, line: 651, baseType: !176, size: 32, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !736, file: !172, line: 652, baseType: !137, size: 32, offset: 224)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !736, file: !172, line: 653, baseType: !176, size: 32, offset: 256)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !736, file: !172, line: 654, baseType: !176, size: 32, offset: 288)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !736, file: !172, line: 655, baseType: !749, size: 64, offset: 320)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !294)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !736, file: !172, line: 656, baseType: !176, size: 32, offset: 384)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !736, file: !172, line: 657, baseType: !176, size: 32, offset: 416)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !736, file: !172, line: 658, baseType: !176, size: 32, offset: 448)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !736, file: !172, line: 659, baseType: !137, size: 32, offset: 480)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !736, file: !172, line: 660, baseType: !176, size: 32, offset: 512)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !736, file: !172, line: 661, baseType: !176, size: 32, offset: 544)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !736, file: !172, line: 662, baseType: !749, size: 64, offset: 576)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !736, file: !172, line: 663, baseType: !176, size: 32, offset: 640)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !736, file: !172, line: 664, baseType: !176, size: 32, offset: 672)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !736, file: !172, line: 665, baseType: !176, size: 32, offset: 704)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !736, file: !172, line: 666, baseType: !137, size: 32, offset: 736)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !736, file: !172, line: 667, baseType: !176, size: 32, offset: 768)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !736, file: !172, line: 668, baseType: !176, size: 32, offset: 800)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !736, file: !172, line: 669, baseType: !749, size: 64, offset: 832)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !736, file: !172, line: 670, baseType: !176, size: 32, offset: 896)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !736, file: !172, line: 671, baseType: !176, size: 32, offset: 928)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !736, file: !172, line: 672, baseType: !749, size: 64, offset: 960)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !736, file: !172, line: 673, baseType: !176, size: 32, offset: 1024)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !736, file: !172, line: 674, baseType: !176, size: 32, offset: 1056)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !736, file: !172, line: 675, baseType: !176, size: 32, offset: 1088)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !736, file: !172, line: 676, baseType: !176, size: 32, offset: 1120)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !773, line: 343, size: 64, elements: !774)
!773 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!774 = !{!775, !776}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !772, file: !773, line: 344, baseType: !137, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !772, file: !773, line: 345, baseType: !137, size: 32, offset: 32)
!777 = !{!778, !784, !800, !811, !716}
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !718, file: !780, line: 752, type: !781, isLocal: false, isDefinition: true, align: 16)
!780 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 1024, elements: !782)
!782 = !{!783}
!783 = !DISubrange(count: 64)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !718, file: !780, line: 752, type: !786, isLocal: false, isDefinition: true, align: 32)
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !788)
!788 = !{!789, !790, !791, !792, !798, !799}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !787, file: !196, line: 380, baseType: !199, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !787, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !787, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !787, file: !196, line: 386, baseType: !793, size: 32, offset: 96)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !795)
!795 = !{!796, !797}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !794, file: !196, line: 359, baseType: !208, size: 8)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !794, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !787, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !787, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !718, file: !780, line: 752, type: !802, isLocal: true, isDefinition: true, align: 32)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !804)
!804 = !{!805, !810}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !803, file: !187, line: 60, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!807 = !DISubroutineType(types: !808)
!808 = !{!103, !809}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !803, file: !187, line: 65, baseType: !809, size: 32, offset: 32)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !718, file: !780, line: 752, type: !794, isLocal: true, isDefinition: true, align: 8)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !727, line: 100, size: 224, elements: !814)
!814 = !{!815, !821, !822, !831, !836, !841, !847}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !813, file: !727, line: 101, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !727, line: 76, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DISubroutineType(types: !819)
!819 = !{!103, !809, !820}
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !727, line: 56, baseType: !102)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !813, file: !727, line: 102, baseType: !816, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !813, file: !727, line: 103, baseType: !823, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !727, line: 83, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!825 = !DISubroutineType(types: !826)
!826 = !{!103, !809, !820, !827, !102}
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !727, line: 72, baseType: !828)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !809, !820, !102}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !813, file: !727, line: 104, baseType: !832, size: 32, offset: 96)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !727, line: 79, baseType: !833)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DISubroutineType(types: !835)
!835 = !{!103, !809, !820, !149}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !813, file: !727, line: 105, baseType: !837, size: 32, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !727, line: 88, baseType: !838)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DISubroutineType(types: !840)
!840 = !{!726, !809, !820}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !813, file: !727, line: 106, baseType: !842, size: 32, offset: 160)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !727, line: 92, baseType: !843)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DISubroutineType(types: !845)
!845 = !{!103, !809, !820, !846}
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !727, line: 64, baseType: !102)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !813, file: !727, line: 107, baseType: !848, size: 32, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !727, line: 96, baseType: !849)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DISubroutineType(types: !851)
!851 = !{!103, !809, !820, !102}
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !854, file: !911, line: 603, type: !913, isLocal: true, isDefinition: true, align: 32)
!854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !856, globals: !908, splitDebugInlining: false, nameTableKind: None)
!855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!856 = !{!102, !103, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !860, line: 336, size: 160, elements: !861)
!860 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !{!862, !882, !886, !890, !903}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !859, file: !860, line: 365, baseType: !863, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DISubroutineType(types: !865)
!865 = !{!103, !866, !881}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !869)
!869 = !{!870, !871, !872, !873, !879, !880}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !868, file: !196, line: 380, baseType: !199, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !868, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !868, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !868, file: !196, line: 386, baseType: !874, size: 32, offset: 96)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !875, file: !196, line: 359, baseType: !208, size: 8)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !875, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !868, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !868, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !859, file: !860, line: 366, baseType: !883, size: 32, offset: 32)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = !DISubroutineType(types: !885)
!885 = !{null, !866, !209}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !859, file: !860, line: 374, baseType: !887, size: 32, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!103, !866}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !859, file: !860, line: 377, baseType: !891, size: 32, offset: 96)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DISubroutineType(types: !893)
!893 = !{!103, !866, !894}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !860, line: 122, size: 64, elements: !897)
!897 = !{!898, !899, !900, !901, !902}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !896, file: !860, line: 123, baseType: !137, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !896, file: !860, line: 124, baseType: !208, size: 8, offset: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !896, file: !860, line: 125, baseType: !208, size: 8, offset: 40)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !896, file: !860, line: 126, baseType: !208, size: 8, offset: 48)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !896, file: !860, line: 127, baseType: !208, size: 8, offset: 56)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !859, file: !860, line: 379, baseType: !904, size: 32, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{!103, !866, !907}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!908 = !{!852, !909}
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !854, file: !911, line: 38, type: !912, isLocal: true, isDefinition: true)
!911 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !915)
!915 = !{!916, !917}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !914, file: !187, line: 60, baseType: !887, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !914, file: !187, line: 65, baseType: !866, size: 32, offset: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !920, file: !1090, line: 762, type: !1229, isLocal: true, isDefinition: true)
!920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !922, retainedTypes: !940, globals: !1087, splitDebugInlining: false, nameTableKind: None)
!921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!922 = !{!30, !923, !929, !934, !726}
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !924, line: 506, baseType: !32, size: 32, elements: !925)
!924 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!925 = !{!926, !927, !928}
!926 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!927 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!928 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !924, line: 512, baseType: !32, size: 32, elements: !930)
!930 = !{!931, !932, !933}
!931 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!932 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!933 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!934 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !624, line: 43, baseType: !32, size: 32, elements: !935)
!935 = !{!936, !937, !938, !939}
!936 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!937 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!938 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!939 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!940 = !{!102, !103, !941, !1011, !1016, !976, !929, !923, !1021, !1022, !137, !1036, !991, !1046, !1047, !1048}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !924, line: 523, size: 288, elements: !944)
!944 = !{!945, !966, !972, !977, !981, !982, !983, !987, !1007}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !943, file: !924, line: 524, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!103, !949, !964, !965}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !952)
!952 = !{!953, !954, !955, !956, !962, !963}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !951, file: !196, line: 380, baseType: !199, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !951, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !951, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !951, file: !196, line: 386, baseType: !957, size: 32, offset: 96)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !959)
!959 = !{!960, !961}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !958, file: !196, line: 359, baseType: !208, size: 8)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !958, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !951, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !951, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !924, line: 237, baseType: !208)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !924, line: 257, baseType: !137)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !943, file: !924, line: 530, baseType: !967, size: 32, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!103, !949, !970}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !924, line: 229, baseType: !137)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !943, file: !924, line: 532, baseType: !973, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!103, !949, !976, !971}
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !924, line: 216, baseType: !137)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !943, file: !924, line: 535, baseType: !978, size: 32, offset: 96)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!103, !949, !976}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !943, file: !924, line: 537, baseType: !978, size: 32, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !943, file: !924, line: 539, baseType: !978, size: 32, offset: 160)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !943, file: !924, line: 541, baseType: !984, size: 32, offset: 192)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{!103, !949, !964, !923, !929}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !943, file: !924, line: 544, baseType: !988, size: 32, offset: 224)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DISubroutineType(types: !990)
!990 = !{!103, !949, !991, !211}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !924, line: 478, size: 96, elements: !993)
!993 = !{!994, !1001, !1006}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !992, file: !924, line: 482, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !996, line: 33, baseType: !997)
!996 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !996, line: 29, size: 32, elements: !998)
!998 = !{!999}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !997, file: !996, line: 30, baseType: !1000, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !992, file: !924, line: 485, baseType: !1002, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !924, line: 464, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !949, !991, !976}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !992, file: !924, line: 493, baseType: !976, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !943, file: !924, line: 547, baseType: !1008, size: 32, offset: 256)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!137, !949}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !924, line: 428, size: 32, elements: !1014)
!1014 = !{!1015}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1013, file: !924, line: 434, baseType: !976, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !924, line: 441, size: 32, elements: !1019)
!1019 = !{!1020}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1018, file: !924, line: 447, baseType: !976, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 583, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 572, size: 320, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1024, file: !172, line: 574, baseType: !176, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1024, file: !172, line: 575, baseType: !176, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1024, file: !172, line: 576, baseType: !176, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1024, file: !172, line: 577, baseType: !176, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1024, file: !172, line: 578, baseType: !176, size: 32, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1024, file: !172, line: 579, baseType: !176, size: 32, offset: 160)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1024, file: !172, line: 580, baseType: !176, size: 32, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1024, file: !172, line: 581, baseType: !176, size: 32, offset: 224)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1024, file: !172, line: 582, baseType: !1035, size: 64, offset: 256)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !294)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 596, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 589, size: 288, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1044, !1045}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1038, file: !172, line: 591, baseType: !176, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1038, file: !172, line: 592, baseType: !176, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1038, file: !172, line: 593, baseType: !1043, size: 128, offset: 64)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !585)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1038, file: !172, line: 594, baseType: !749, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1038, file: !172, line: 595, baseType: !176, size: 32, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !727, line: 100, size: 224, elements: !1051)
!1051 = !{!1052, !1057, !1058, !1067, !1072, !1077, !1082}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1050, file: !727, line: 101, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !727, line: 76, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!103, !949, !820}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1050, file: !727, line: 102, baseType: !1053, size: 32, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1050, file: !727, line: 103, baseType: !1059, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !727, line: 83, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!103, !949, !820, !1063, !102}
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !727, line: 72, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !949, !820, !102}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1050, file: !727, line: 104, baseType: !1068, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !727, line: 79, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!103, !949, !820, !149}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1050, file: !727, line: 105, baseType: !1073, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !727, line: 88, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!726, !949, !820}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1050, file: !727, line: 106, baseType: !1078, size: 32, offset: 160)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !727, line: 92, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!103, !949, !820, !846}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1050, file: !727, line: 107, baseType: !1083, size: 32, offset: 192)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !727, line: 96, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!103, !949, !820, !102}
!1087 = !{!1088, !1094, !1096, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1129, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !1151, !1153, !1155, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1183, !1185, !1187, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1205, !1207, !1209, !1211, !1213, !1215, !1217, !1219, !1221, !1223, !918, !1225, !1227, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256}
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !920, file: !1090, line: 762, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1090 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 80, elements: !1092)
!1092 = !{!1093}
!1093 = !DISubrange(count: 5)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "__device_dts_ord_97", scope: !920, file: !1090, line: 762, type: !950, isLocal: false, isDefinition: true, align: 32)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_97", scope: !920, file: !1090, line: 762, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1100)
!1100 = !{!1101, !1105}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1099, file: !187, line: 60, baseType: !1102, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!103, !949}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1099, file: !187, line: 65, baseType: !949, size: 32, offset: 32)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !920, file: !1090, line: 766, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__device_dts_ord_98", scope: !920, file: !1090, line: 766, type: !950, isLocal: false, isDefinition: true, align: 32)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_98", scope: !920, file: !1090, line: 766, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !920, file: !1090, line: 770, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__device_dts_ord_99", scope: !920, file: !1090, line: 770, type: !950, isLocal: false, isDefinition: true, align: 32)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_99", scope: !920, file: !1090, line: 770, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !920, file: !1090, line: 774, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "__device_dts_ord_100", scope: !920, file: !1090, line: 774, type: !950, isLocal: false, isDefinition: true, align: 32)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_100", scope: !920, file: !1090, line: 774, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !920, file: !1090, line: 778, type: !1126, isLocal: false, isDefinition: true, align: 16)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 112, elements: !1127)
!1127 = !{!1128}
!1128 = !DISubrange(count: 7)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !920, file: !1090, line: 778, type: !950, isLocal: false, isDefinition: true, align: 32)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !920, file: !1090, line: 778, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !920, file: !1090, line: 782, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "__device_dts_ord_101", scope: !920, file: !1090, line: 782, type: !950, isLocal: false, isDefinition: true, align: 32)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_101", scope: !920, file: !1090, line: 782, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !920, file: !1090, line: 786, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__device_dts_ord_102", scope: !920, file: !1090, line: 786, type: !950, isLocal: false, isDefinition: true, align: 32)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_102", scope: !920, file: !1090, line: 786, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !920, file: !1090, line: 790, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__device_dts_ord_103", scope: !920, file: !1090, line: 790, type: !950, isLocal: false, isDefinition: true, align: 32)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_103", scope: !920, file: !1090, line: 790, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !920, file: !1090, line: 794, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__device_dts_ord_104", scope: !920, file: !1090, line: 794, type: !950, isLocal: false, isDefinition: true, align: 32)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_104", scope: !920, file: !1090, line: 794, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !920, file: !1090, line: 798, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "__device_dts_ord_105", scope: !920, file: !1090, line: 798, type: !950, isLocal: false, isDefinition: true, align: 32)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_105", scope: !920, file: !1090, line: 798, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !920, file: !1090, line: 802, type: !1091, isLocal: false, isDefinition: true, align: 16)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "__device_dts_ord_106", scope: !920, file: !1090, line: 802, type: !950, isLocal: false, isDefinition: true, align: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_106", scope: !920, file: !1090, line: 802, type: !1098, isLocal: true, isDefinition: true, align: 32)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !920, file: !1090, line: 762, type: !1171, isLocal: true, isDefinition: true)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1172, line: 237, size: 128, elements: !1173)
!1172 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1173 = !{!1174, !1175, !1176}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1171, file: !1172, line: 239, baseType: !1018, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1171, file: !1172, line: 241, baseType: !949, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1171, file: !1172, line: 243, baseType: !1177, size: 64, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !996, line: 40, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !996, line: 35, size: 64, elements: !1179)
!1179 = !{!1180, !1182}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1178, file: !996, line: 36, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1178, file: !996, line: 37, baseType: !1181, size: 32, offset: 32)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_97", scope: !920, file: !1090, line: 762, type: !958, isLocal: true, isDefinition: true, align: 8)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !920, file: !1090, line: 766, type: !1171, isLocal: true, isDefinition: true)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_98", scope: !920, file: !1090, line: 766, type: !958, isLocal: true, isDefinition: true, align: 8)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !920, file: !1090, line: 770, type: !1171, isLocal: true, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_99", scope: !920, file: !1090, line: 770, type: !958, isLocal: true, isDefinition: true, align: 8)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !920, file: !1090, line: 774, type: !1171, isLocal: true, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_100", scope: !920, file: !1090, line: 774, type: !958, isLocal: true, isDefinition: true, align: 8)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !920, file: !1090, line: 778, type: !1171, isLocal: true, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !920, file: !1090, line: 778, type: !958, isLocal: true, isDefinition: true, align: 8)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !920, file: !1090, line: 782, type: !1171, isLocal: true, isDefinition: true)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_101", scope: !920, file: !1090, line: 782, type: !958, isLocal: true, isDefinition: true, align: 8)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !920, file: !1090, line: 786, type: !1171, isLocal: true, isDefinition: true)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_102", scope: !920, file: !1090, line: 786, type: !958, isLocal: true, isDefinition: true, align: 8)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !920, file: !1090, line: 790, type: !1171, isLocal: true, isDefinition: true)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_103", scope: !920, file: !1090, line: 790, type: !958, isLocal: true, isDefinition: true, align: 8)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !920, file: !1090, line: 794, type: !1171, isLocal: true, isDefinition: true)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_104", scope: !920, file: !1090, line: 794, type: !958, isLocal: true, isDefinition: true, align: 8)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "gpio_stm32_data_j", scope: !920, file: !1090, line: 798, type: !1171, isLocal: true, isDefinition: true)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_105", scope: !920, file: !1090, line: 798, type: !958, isLocal: true, isDefinition: true, align: 8)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "gpio_stm32_data_k", scope: !920, file: !1090, line: 802, type: !1171, isLocal: true, isDefinition: true)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_106", scope: !920, file: !1090, line: 802, type: !958, isLocal: true, isDefinition: true, align: 8)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !920, file: !1090, line: 656, type: !942, isLocal: true, isDefinition: true)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !920, file: !1090, line: 766, type: !1229, isLocal: true, isDefinition: true)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1172, line: 224, size: 160, elements: !1231)
!1231 = !{!1232, !1233, !1234, !1235}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1230, file: !1172, line: 226, baseType: !1013, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1230, file: !1172, line: 228, baseType: !149, size: 32, offset: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1230, file: !1172, line: 230, baseType: !103, size: 32, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1230, file: !1172, line: 231, baseType: !1236, size: 64, offset: 96)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !773, line: 343, size: 64, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1236, file: !773, line: 344, baseType: !137, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1236, file: !773, line: 345, baseType: !137, size: 32, offset: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !920, file: !1090, line: 770, type: !1229, isLocal: true, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !920, file: !1090, line: 774, type: !1229, isLocal: true, isDefinition: true)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !920, file: !1090, line: 778, type: !1229, isLocal: true, isDefinition: true)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !920, file: !1090, line: 782, type: !1229, isLocal: true, isDefinition: true)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !920, file: !1090, line: 786, type: !1229, isLocal: true, isDefinition: true)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !920, file: !1090, line: 790, type: !1229, isLocal: true, isDefinition: true)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !920, file: !1090, line: 794, type: !1229, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_j", scope: !920, file: !1090, line: 798, type: !1229, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_k", scope: !920, file: !1090, line: 802, type: !1229, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1260, file: !1399, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1262, retainedTypes: !1295, globals: !1396, splitDebugInlining: false, nameTableKind: None)
!1261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!1262 = !{!30, !1263, !1270, !1277, !1284, !1290, !726}
!1263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !860, line: 47, baseType: !32, size: 32, elements: !1264)
!1264 = !{!1265, !1266, !1267, !1268, !1269}
!1265 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1266 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1267 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1268 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1269 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !860, line: 75, baseType: !32, size: 32, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1276}
!1272 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1273 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1274 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1275 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1276 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !860, line: 92, baseType: !32, size: 32, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283}
!1279 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1280 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1281 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1282 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1283 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !860, line: 84, baseType: !32, size: 32, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289}
!1286 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1287 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1288 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1289 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1290 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !860, line: 107, baseType: !32, size: 32, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1293 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1294 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1295 = !{!102, !103, !1296, !209, !208, !1345, !137, !820, !1356, !151, !163, !1395}
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !860, line: 336, size: 160, elements: !1299)
!1299 = !{!1300, !1319, !1323, !1327, !1340}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1298, file: !860, line: 365, baseType: !1301, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!103, !1304, !881}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1317, !1318}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1306, file: !196, line: 380, baseType: !199, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1306, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1306, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1306, file: !196, line: 386, baseType: !1312, size: 32, offset: 96)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1314)
!1314 = !{!1315, !1316}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1313, file: !196, line: 359, baseType: !208, size: 8)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1313, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1306, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1306, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1298, file: !860, line: 366, baseType: !1320, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !1304, !209}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1298, file: !860, line: 374, baseType: !1324, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!103, !1304}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1298, file: !860, line: 377, baseType: !1328, size: 32, offset: 96)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!103, !1304, !1331}
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !860, line: 122, size: 64, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1333, file: !860, line: 123, baseType: !137, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1333, file: !860, line: 124, baseType: !208, size: 8, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1333, file: !860, line: 125, baseType: !208, size: 8, offset: 40)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1333, file: !860, line: 126, baseType: !208, size: 8, offset: 48)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1333, file: !860, line: 127, baseType: !208, size: 8, offset: 56)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1298, file: !860, line: 379, baseType: !1341, size: 32, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!103, !1304, !1344}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 836, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 827, size: 224, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352, !1353, !1354, !1355}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1347, file: !172, line: 829, baseType: !176, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1347, file: !172, line: 830, baseType: !176, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1347, file: !172, line: 831, baseType: !176, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1347, file: !172, line: 832, baseType: !176, size: 32, offset: 96)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1347, file: !172, line: 833, baseType: !176, size: 32, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1347, file: !172, line: 834, baseType: !176, size: 32, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1347, file: !172, line: 835, baseType: !176, size: 32, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !727, line: 100, size: 224, elements: !1359)
!1359 = !{!1360, !1365, !1366, !1375, !1380, !1385, !1390}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1358, file: !727, line: 101, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !727, line: 76, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!103, !1304, !820}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1358, file: !727, line: 102, baseType: !1361, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1358, file: !727, line: 103, baseType: !1367, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !727, line: 83, baseType: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!103, !1304, !820, !1371, !102}
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !727, line: 72, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 32)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{null, !1304, !820, !102}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1358, file: !727, line: 104, baseType: !1376, size: 32, offset: 96)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !727, line: 79, baseType: !1377)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!103, !1304, !820, !149}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1358, file: !727, line: 105, baseType: !1381, size: 32, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !727, line: 88, baseType: !1382)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!726, !1304, !820}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1358, file: !727, line: 106, baseType: !1386, size: 32, offset: 160)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !727, line: 92, baseType: !1387)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!103, !1304, !820, !846}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1358, file: !727, line: 107, baseType: !1391, size: 32, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !727, line: 96, baseType: !1392)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!103, !1304, !820, !102}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!1396 = !{!1397, !1401, !1403, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1258, !1444, !1452, !1475, !1478, !1481, !1483, !1490, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1529, !1531, !1533, !1535, !1537, !1539, !1541, !1543, !1545, !1547, !1549, !1551}
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1400, isLocal: false, isDefinition: true, align: 16)
!1399 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !159)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__device_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1305, isLocal: false, isDefinition: true, align: 32)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1405, isLocal: true, isDefinition: true, align: 32)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1407)
!1407 = !{!1408, !1409}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1406, file: !187, line: 60, baseType: !1324, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1406, file: !187, line: 65, baseType: !1304, size: 32, offset: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1400, isLocal: false, isDefinition: true, align: 16)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__device_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1305, isLocal: false, isDefinition: true, align: 32)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1405, isLocal: true, isDefinition: true, align: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1400, isLocal: false, isDefinition: true, align: 16)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1305, isLocal: false, isDefinition: true, align: 32)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1405, isLocal: true, isDefinition: true, align: 32)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1400, isLocal: false, isDefinition: true, align: 16)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1305, isLocal: false, isDefinition: true, align: 32)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1405, isLocal: true, isDefinition: true, align: 32)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1400, isLocal: false, isDefinition: true, align: 16)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__device_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1305, isLocal: false, isDefinition: true, align: 32)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1405, isLocal: true, isDefinition: true, align: 32)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1313, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1313, isLocal: true, isDefinition: true, align: 8)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1313, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1313, isLocal: true, isDefinition: true, align: 8)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1313, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1260, file: !1399, line: 1914, type: !1446, isLocal: true, isDefinition: true)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 64, elements: !391)
!1447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !773, line: 343, size: 64, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1448, file: !773, line: 344, baseType: !137, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1448, file: !773, line: 345, baseType: !137, size: 32, offset: 32)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1454, isLocal: true, isDefinition: true)
!1454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1456, line: 60, size: 64, elements: !1457)
!1456 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1457 = !{!1458, !1474}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1455, file: !1456, line: 69, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1456, line: 50, size: 64, elements: !1462)
!1462 = !{!1463, !1472, !1473}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1461, file: !1456, line: 52, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1467, line: 37, baseType: !1468)
!1467 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1467, line: 32, size: 64, elements: !1469)
!1469 = !{!1470, !1471}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1468, file: !1467, line: 34, baseType: !137, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1468, file: !1467, line: 36, baseType: !137, size: 32, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1461, file: !1456, line: 54, baseType: !208, size: 8, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1461, file: !1456, line: 56, baseType: !208, size: 8, offset: 40)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1455, file: !1456, line: 71, baseType: !208, size: 8, offset: 32)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1477, isLocal: true, isDefinition: true)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1460, size: 64, elements: !391)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_63", scope: !1260, file: !1399, line: 1914, type: !1480, isLocal: true, isDefinition: true)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 128, elements: !294)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1260, file: !1399, line: 1539, type: !1297, isLocal: true, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1260, file: !1399, line: 1914, type: !1485, isLocal: true, isDefinition: true)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1486, line: 74, size: 64, elements: !1487)
!1486 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1487 = !{!1488, !1489}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1485, file: !1486, line: 76, baseType: !137, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1485, file: !1486, line: 78, baseType: !1304, size: 32, offset: 32)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1260, file: !1399, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1486, line: 22, size: 224, elements: !1494)
!1494 = !{!1495, !1496, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1493, file: !1486, line: 24, baseType: !1345, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1493, file: !1486, line: 26, baseType: !1497, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1493, file: !1486, line: 28, baseType: !120, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1493, file: !1486, line: 30, baseType: !211, size: 8, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1493, file: !1486, line: 32, baseType: !103, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1493, file: !1486, line: 34, baseType: !211, size: 8, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1493, file: !1486, line: 36, baseType: !211, size: 8, offset: 168)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1493, file: !1486, line: 38, baseType: !211, size: 8, offset: 176)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1493, file: !1486, line: 40, baseType: !211, size: 8, offset: 184)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1493, file: !1486, line: 41, baseType: !1506, size: 32, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1260, file: !1399, line: 1914, type: !1446, isLocal: true, isDefinition: true)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1454, isLocal: true, isDefinition: true)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1477, isLocal: true, isDefinition: true)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_49", scope: !1260, file: !1399, line: 1914, type: !1480, isLocal: true, isDefinition: true)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1260, file: !1399, line: 1914, type: !1485, isLocal: true, isDefinition: true)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1260, file: !1399, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1260, file: !1399, line: 1914, type: !1446, isLocal: true, isDefinition: true)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1454, isLocal: true, isDefinition: true)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1477, isLocal: true, isDefinition: true)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1260, file: !1399, line: 1914, type: !1480, isLocal: true, isDefinition: true)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1260, file: !1399, line: 1914, type: !1485, isLocal: true, isDefinition: true)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1260, file: !1399, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1260, file: !1399, line: 1914, type: !1446, isLocal: true, isDefinition: true)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1454, isLocal: true, isDefinition: true)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1477, isLocal: true, isDefinition: true)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_57", scope: !1260, file: !1399, line: 1914, type: !1480, isLocal: true, isDefinition: true)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1260, file: !1399, line: 1914, type: !1485, isLocal: true, isDefinition: true)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_4", scope: !1260, file: !1399, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "pclken_4", scope: !1260, file: !1399, line: 1914, type: !1446, isLocal: true, isDefinition: true)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1454, isLocal: true, isDefinition: true)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1477, isLocal: true, isDefinition: true)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_60", scope: !1260, file: !1399, line: 1914, type: !1480, isLocal: true, isDefinition: true)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "uart_stm32_data_4", scope: !1260, file: !1399, line: 1914, type: !1485, isLocal: true, isDefinition: true)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1555, file: !1635, line: 65, type: !176, isLocal: true, isDefinition: true)
!1555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1557, retainedTypes: !1558, globals: !1632, splitDebugInlining: false, nameTableKind: None)
!1556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!1557 = !{!471}
!1558 = !{!1559, !1561, !643, !208, !137, !1569, !1600}
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1560, line: 46, baseType: !330)
!1560 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1563, file: !402, line: 766, baseType: !176, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1563, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1563, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1563, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1572)
!1572 = !{!1573, !1575, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1590, !1595, !1599}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1571, file: !402, line: 413, baseType: !1574, size: 256)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1571, file: !402, line: 414, baseType: !1576, size: 768, offset: 256)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 24)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1571, file: !402, line: 415, baseType: !1574, size: 256, offset: 1024)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1571, file: !402, line: 416, baseType: !1576, size: 768, offset: 1280)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1571, file: !402, line: 417, baseType: !1574, size: 256, offset: 2048)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1571, file: !402, line: 418, baseType: !1576, size: 768, offset: 2304)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1571, file: !402, line: 419, baseType: !1574, size: 256, offset: 3072)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1571, file: !402, line: 420, baseType: !1576, size: 768, offset: 3328)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1571, file: !402, line: 421, baseType: !1574, size: 256, offset: 4096)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1571, file: !402, line: 422, baseType: !1587, size: 1792, offset: 4352)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1588)
!1588 = !{!1589}
!1589 = !DISubrange(count: 56)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1571, file: !402, line: 423, baseType: !1591, size: 1920, offset: 6144)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1592, size: 1920, elements: !1593)
!1592 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!1593 = !{!1594}
!1594 = !DISubrange(count: 240)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1571, file: !402, line: 424, baseType: !1596, size: 20608, offset: 8064)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1597)
!1597 = !{!1598}
!1598 = !DISubrange(count: 644)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1571, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1623, !1624, !1625, !1627, !1629, !1631}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1602, file: !402, line: 447, baseType: !406, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1602, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1602, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1602, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1602, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1602, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1602, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1592, size: 96, elements: !1612)
!1612 = !{!1613}
!1613 = !DISubrange(count: 12)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1602, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1602, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1602, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1602, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1602, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1602, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1602, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1602, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 64, elements: !294)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1602, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1602, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1602, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 128, elements: !585)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1602, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 160, elements: !1092)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1602, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1092)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1602, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1632 = !{!1633, !1659, !1662, !1664, !1666, !1553}
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1555, file: !1635, line: 285, type: !1636, isLocal: true, isDefinition: true, align: 32)
!1635 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1638)
!1638 = !{!1639, !1658}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1637, file: !187, line: 60, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!103, !1643}
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1646)
!1646 = !{!1647, !1648, !1649, !1650, !1656, !1657}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1645, file: !196, line: 380, baseType: !199, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1645, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1645, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1645, file: !196, line: 386, baseType: !1651, size: 32, offset: 96)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1652, file: !196, line: 359, baseType: !208, size: 8)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1652, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1645, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1645, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1637, file: !187, line: 65, baseType: !1643, size: 32, offset: 32)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "lock", scope: !1555, file: !1635, line: 34, type: !1661, isLocal: true, isDefinition: true)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "last_load", scope: !1555, file: !1635, line: 36, type: !137, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1555, file: !1635, line: 48, type: !137, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1555, file: !1635, line: 54, type: !137, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1670, file: !1752, line: 22, type: !1754, isLocal: true, isDefinition: true)
!1670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1672, retainedTypes: !1673, globals: !1749, splitDebugInlining: false, nameTableKind: None)
!1671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!1672 = !{!923, !929}
!1673 = !{!1674, !1738, !1743, !976, !929, !923, !1748, !102}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !924, line: 523, size: 288, elements: !1677)
!1677 = !{!1678, !1697, !1701, !1705, !1709, !1710, !1711, !1715, !1734}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1676, file: !924, line: 524, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!103, !1682, !964, !965}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1695, !1696}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1684, file: !196, line: 380, baseType: !199, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1684, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1684, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1684, file: !196, line: 386, baseType: !1690, size: 32, offset: 96)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1692)
!1692 = !{!1693, !1694}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1691, file: !196, line: 359, baseType: !208, size: 8)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1691, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1684, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1684, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1676, file: !924, line: 530, baseType: !1698, size: 32, offset: 32)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!103, !1682, !970}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1676, file: !924, line: 532, baseType: !1702, size: 32, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!103, !1682, !976, !971}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1676, file: !924, line: 535, baseType: !1706, size: 32, offset: 96)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!103, !1682, !976}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1676, file: !924, line: 537, baseType: !1706, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1676, file: !924, line: 539, baseType: !1706, size: 32, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1676, file: !924, line: 541, baseType: !1712, size: 32, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!103, !1682, !964, !923, !929}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1676, file: !924, line: 544, baseType: !1716, size: 32, offset: 224)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!103, !1682, !1719, !211}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !924, line: 478, size: 96, elements: !1721)
!1721 = !{!1722, !1728, !1733}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1720, file: !924, line: 482, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !996, line: 33, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !996, line: 29, size: 32, elements: !1725)
!1725 = !{!1726}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1724, file: !996, line: 30, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1720, file: !924, line: 485, baseType: !1729, size: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !924, line: 464, baseType: !1730)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{null, !1682, !1719, !976}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1720, file: !924, line: 493, baseType: !976, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1676, file: !924, line: 547, baseType: !1735, size: 32, offset: 256)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!137, !1682}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !924, line: 428, size: 32, elements: !1741)
!1741 = !{!1742}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1740, file: !924, line: 434, baseType: !976, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !924, line: 441, size: 32, elements: !1746)
!1746 = !{!1747}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1745, file: !924, line: 447, baseType: !976, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1749 = !{!1750, !1668}
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1751 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1670, file: !1752, line: 37, type: !1753, isLocal: true, isDefinition: true)
!1752 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 352, elements: !1756)
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1756 = !{!1757}
!1757 = !DISubrange(count: 11)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1760, file: !1802, line: 139, type: !1809, isLocal: false, isDefinition: true)
!1760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1762, globals: !1799, splitDebugInlining: false, nameTableKind: None)
!1761 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!1762 = !{!1763}
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 677, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 643, size: 1152, elements: !1766)
!1766 = !{!1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1765, file: !172, line: 645, baseType: !176, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1765, file: !172, line: 646, baseType: !176, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1765, file: !172, line: 647, baseType: !176, size: 32, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1765, file: !172, line: 648, baseType: !176, size: 32, offset: 96)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1765, file: !172, line: 649, baseType: !176, size: 32, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1765, file: !172, line: 650, baseType: !176, size: 32, offset: 160)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1765, file: !172, line: 651, baseType: !176, size: 32, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1765, file: !172, line: 652, baseType: !137, size: 32, offset: 224)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1765, file: !172, line: 653, baseType: !176, size: 32, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1765, file: !172, line: 654, baseType: !176, size: 32, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1765, file: !172, line: 655, baseType: !749, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1765, file: !172, line: 656, baseType: !176, size: 32, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1765, file: !172, line: 657, baseType: !176, size: 32, offset: 416)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1765, file: !172, line: 658, baseType: !176, size: 32, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1765, file: !172, line: 659, baseType: !137, size: 32, offset: 480)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1765, file: !172, line: 660, baseType: !176, size: 32, offset: 512)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1765, file: !172, line: 661, baseType: !176, size: 32, offset: 544)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1765, file: !172, line: 662, baseType: !749, size: 64, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1765, file: !172, line: 663, baseType: !176, size: 32, offset: 640)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1765, file: !172, line: 664, baseType: !176, size: 32, offset: 672)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1765, file: !172, line: 665, baseType: !176, size: 32, offset: 704)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1765, file: !172, line: 666, baseType: !137, size: 32, offset: 736)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1765, file: !172, line: 667, baseType: !176, size: 32, offset: 768)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1765, file: !172, line: 668, baseType: !176, size: 32, offset: 800)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1765, file: !172, line: 669, baseType: !749, size: 64, offset: 832)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1765, file: !172, line: 670, baseType: !176, size: 32, offset: 896)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1765, file: !172, line: 671, baseType: !176, size: 32, offset: 928)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1765, file: !172, line: 672, baseType: !749, size: 64, offset: 960)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1765, file: !172, line: 673, baseType: !176, size: 32, offset: 1024)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1765, file: !172, line: 674, baseType: !176, size: 32, offset: 1056)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1765, file: !172, line: 675, baseType: !176, size: 32, offset: 1088)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1765, file: !172, line: 676, baseType: !176, size: 32, offset: 1120)
!1799 = !{!1800, !1803, !1758}
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1760, file: !1802, line: 137, type: !137, isLocal: false, isDefinition: true)
!1802 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1760, file: !1802, line: 138, type: !1805, isLocal: false, isDefinition: true)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 128, elements: !1807)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!1807 = !{!1808}
!1808 = !DISubrange(count: 16)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 64, elements: !159)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1812, file: !1815, line: 23, type: !1816, isLocal: false, isDefinition: true)
!1812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1814, splitDebugInlining: false, nameTableKind: None)
!1813 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!1814 = !{!1810}
!1815 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1819, file: !1823, line: 86, type: !2073, isLocal: false, isDefinition: true, align: 512)
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1821, retainedTypes: !1830, globals: !1904, splitDebugInlining: false, nameTableKind: None)
!1820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!1821 = !{!1822, !30, !471}
!1822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1823, line: 63, baseType: !32, size: 32, elements: !1824)
!1823 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1824 = !{!1825, !1826, !1827, !1828, !1829}
!1825 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1826 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1827 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1828 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1829 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1830 = !{!22, !120, !102, !103, !1831, !1046, !137, !1862, !643, !208, !1887}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1834, line: 51, size: 64, elements: !1835)
!1834 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1835 = !{!1836, !1857}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1833, file: !1834, line: 52, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1834, line: 38, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!103, !1841, !1856, !151}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1854, !1855}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1843, file: !196, line: 380, baseType: !199, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1843, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1843, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1843, file: !196, line: 386, baseType: !1849, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1850, file: !196, line: 359, baseType: !208, size: 8)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1850, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1843, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1843, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1833, file: !1834, line: 53, baseType: !1858, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1834, line: 47, baseType: !1859)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!103, !1841, !1856, !151, !137}
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1864, file: !402, line: 447, baseType: !406, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1864, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1864, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1864, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1864, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1864, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1864, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1864, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1864, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1864, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1864, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1864, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1864, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1864, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1864, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1864, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1864, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1864, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1864, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1864, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1864, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1889, file: !402, line: 413, baseType: !1574, size: 256)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1889, file: !402, line: 414, baseType: !1576, size: 768, offset: 256)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1889, file: !402, line: 415, baseType: !1574, size: 256, offset: 1024)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1889, file: !402, line: 416, baseType: !1576, size: 768, offset: 1280)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1889, file: !402, line: 417, baseType: !1574, size: 256, offset: 2048)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1889, file: !402, line: 418, baseType: !1576, size: 768, offset: 2304)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1889, file: !402, line: 419, baseType: !1574, size: 256, offset: 3072)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1889, file: !402, line: 420, baseType: !1576, size: 768, offset: 3328)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1889, file: !402, line: 421, baseType: !1574, size: 256, offset: 4096)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1889, file: !402, line: 422, baseType: !1587, size: 1792, offset: 4352)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1889, file: !402, line: 423, baseType: !1591, size: 1920, offset: 6144)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1889, file: !402, line: 424, baseType: !1596, size: 20608, offset: 8064)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1889, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1904 = !{!1905, !2027, !2036, !2038, !1817, !2041, !2043, !2048}
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression())
!1906 = distinct !DIGlobalVariable(name: "_kernel", scope: !1819, file: !1823, line: 40, type: !1907, isLocal: false, isDefinition: true)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !299, line: 158, size: 288, elements: !1908)
!1908 = !{!1909, !2022}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1907, file: !299, line: 159, baseType: !1910, size: 192)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 192, elements: !391)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !299, line: 100, size: 192, elements: !1912)
!1912 = !{!1913, !1914, !1915, !2016, !2017, !2018, !2019}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1911, file: !299, line: 102, baseType: !137, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1911, file: !299, line: 105, baseType: !1046, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1911, file: !299, line: 108, baseType: !1916, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1918)
!1918 = !{!1919, !1977, !1989, !1990, !1991, !1992, !1998, !2011}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1917, file: !263, line: 247, baseType: !1920, size: 384)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1921)
!1921 = !{!1922, !1946, !1953, !1954, !1955, !1964, !1965, !1966}
!1922 = !DIDerivedType(tag: DW_TAG_member, scope: !1920, file: !263, line: 60, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1920, file: !263, line: 60, size: 64, elements: !1924)
!1924 = !{!1925, !1940}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1923, file: !263, line: 61, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1927)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1928)
!1928 = !{!1929, !1935}
!1929 = !DIDerivedType(tag: DW_TAG_member, scope: !1927, file: !273, line: 38, baseType: !1930, size: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1927, file: !273, line: 38, size: 32, elements: !1931)
!1931 = !{!1932, !1934}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1930, file: !273, line: 39, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1930, file: !273, line: 40, baseType: !1933, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, scope: !1927, file: !273, line: 42, baseType: !1936, size: 32, offset: 32)
!1936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1927, file: !273, line: 42, size: 32, elements: !1937)
!1937 = !{!1938, !1939}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1936, file: !273, line: 43, baseType: !1933, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1936, file: !273, line: 44, baseType: !1933, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1923, file: !263, line: 62, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1942)
!1942 = !{!1943}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1941, file: !289, line: 50, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1945, size: 64, elements: !294)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1920, file: !263, line: 68, baseType: !1947, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1950)
!1950 = !{!1951}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1949, file: !299, line: 232, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1927)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1920, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1920, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1955 = !DIDerivedType(tag: DW_TAG_member, scope: !1920, file: !263, line: 90, baseType: !1956, size: 16, offset: 112)
!1956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1920, file: !263, line: 90, size: 16, elements: !1957)
!1957 = !{!1958, !1963}
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1956, file: !263, line: 91, baseType: !1959, size: 16)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1956, file: !263, line: 91, size: 16, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1959, file: !263, line: 96, baseType: !313, size: 8)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1959, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1956, file: !263, line: 100, baseType: !151, size: 16)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1920, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1920, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1920, file: !263, line: 131, baseType: !1967, size: 192, offset: 192)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1968)
!1968 = !{!1969, !1970, !1976}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1967, file: !299, line: 245, baseType: !1926, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1967, file: !299, line: 246, baseType: !1971, size: 32, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1972)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = !DISubroutineType(types: !1974)
!1974 = !{null, !1975}
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1967, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1917, file: !263, line: 250, baseType: !1978, size: 288, offset: 384)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1979)
!1979 = !{!1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1978, file: !334, line: 26, baseType: !137, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1978, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1978, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1978, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1978, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1978, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1978, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1978, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1978, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1917, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1917, file: !263, line: 256, baseType: !1948, size: 64, offset: 704)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1917, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1917, file: !263, line: 300, baseType: !1993, size: 96, offset: 800)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1994)
!1994 = !{!1995, !1996, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1993, file: !263, line: 153, baseType: !22, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1993, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1993, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1917, file: !263, line: 325, baseType: !1999, size: 32, offset: 896)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2001)
!2001 = !{!2002, !2008, !2009}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2000, file: !357, line: 5074, baseType: !2003, size: 96)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2003, file: !113, line: 57, baseType: !116, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2003, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2003, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2000, file: !357, line: 5075, baseType: !1948, size: 64, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2000, file: !357, line: 5076, baseType: !2010, offset: 160)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1917, file: !263, line: 343, baseType: !2012, size: 64, offset: 928)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2012, file: !334, line: 63, baseType: !137, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2012, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1911, file: !299, line: 111, baseType: !1916, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1911, file: !299, line: 124, baseType: !103, size: 32, offset: 128)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1911, file: !299, line: 127, baseType: !208, size: 8, offset: 160)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1911, file: !299, line: 153, baseType: !2020, offset: 168)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2021, line: 33, elements: !162)
!2021 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1907, file: !299, line: 170, baseType: !2023, size: 96, offset: 192)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !2024)
!2024 = !{!2025, !2026}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2023, file: !299, line: 86, baseType: !1916, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2023, file: !299, line: 90, baseType: !1952, size: 64, offset: 32)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1819, file: !1823, line: 43, type: !2029, isLocal: false, isDefinition: true, align: 512)
!2029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2030, size: 8704, elements: !2034)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2031, line: 47, size: 8, elements: !2032)
!2031 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2032 = !{!2033}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2030, file: !2031, line: 48, baseType: !109, size: 8)
!2034 = !{!2035}
!2035 = !DISubrange(count: 1088)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1819, file: !1823, line: 44, type: !1917, isLocal: false, isDefinition: true)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1819, file: !1823, line: 48, type: !2040, isLocal: false, isDefinition: true)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 1024, elements: !391)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1819, file: !1823, line: 217, type: !211, isLocal: false, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1819, file: !1823, line: 50, type: !2045, isLocal: true, isDefinition: true, align: 512)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2030, size: 3072, elements: !2046)
!2046 = !{!392, !2047}
!2047 = !DISubrange(count: 384)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "levels", scope: !2050, file: !1823, line: 232, type: !2070, isLocal: true, isDefinition: true)
!2050 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1823, file: !1823, line: 230, type: !2051, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !2053)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{null, !1822}
!2053 = !{!2054, !2055, !2065, !2069}
!2054 = !DILocalVariable(name: "level", arg: 1, scope: !2050, file: !1823, line: 230, type: !1822)
!2055 = !DILocalVariable(name: "entry", scope: !2050, file: !1823, line: 244, type: !2056)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !2059)
!2059 = !{!2060, !2064}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2058, file: !187, line: 60, baseType: !2061, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!103, !1841}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2058, file: !187, line: 65, baseType: !1841, size: 32, offset: 32)
!2065 = !DILocalVariable(name: "dev", scope: !2066, file: !1823, line: 247, type: !1841)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !1823, line: 246, column: 64)
!2067 = distinct !DILexicalBlock(scope: !2068, file: !1823, line: 246, column: 2)
!2068 = distinct !DILexicalBlock(scope: !2050, file: !1823, line: 246, column: 2)
!2069 = !DILocalVariable(name: "rc", scope: !2066, file: !1823, line: 248, type: !103)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2056, size: 192, elements: !2071)
!2071 = !{!2072}
!2072 = !DISubrange(count: 6)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2030, size: 16896, elements: !2074)
!2074 = !{!392, !2075}
!2075 = !DISubrange(count: 2112)
!2076 = !DIGlobalVariableExpression(var: !2077, expr: !DIExpression())
!2077 = distinct !DIGlobalVariable(name: "states_str", scope: !2078, file: !2079, line: 276, type: !2200, isLocal: true, isDefinition: true)
!2078 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2079, file: !2079, line: 271, type: !2080, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !2191)
!2079 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!199, !2082, !1046, !120}
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2085)
!2085 = !{!2086, !2144, !2156, !2157, !2158, !2159, !2165, !2178}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2084, file: !263, line: 247, baseType: !2087, size: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2088)
!2088 = !{!2089, !2113, !2120, !2121, !2122, !2131, !2132, !2133}
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !263, line: 60, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2087, file: !263, line: 60, size: 64, elements: !2091)
!2091 = !{!2092, !2107}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2090, file: !263, line: 61, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2094)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2095)
!2095 = !{!2096, !2102}
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !273, line: 38, baseType: !2097, size: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2094, file: !273, line: 38, size: 32, elements: !2098)
!2098 = !{!2099, !2101}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2097, file: !273, line: 39, baseType: !2100, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2097, file: !273, line: 40, baseType: !2100, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !273, line: 42, baseType: !2103, size: 32, offset: 32)
!2103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2094, file: !273, line: 42, size: 32, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2103, file: !273, line: 43, baseType: !2100, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2103, file: !273, line: 44, baseType: !2100, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2090, file: !263, line: 62, baseType: !2108, size: 64)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2109)
!2109 = !{!2110}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2108, file: !289, line: 50, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2112, size: 64, elements: !294)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2087, file: !263, line: 68, baseType: !2114, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2117)
!2117 = !{!2118}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2116, file: !299, line: 232, baseType: !2119, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2094)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2087, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2087, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !263, line: 90, baseType: !2123, size: 16, offset: 112)
!2123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2087, file: !263, line: 90, size: 16, elements: !2124)
!2124 = !{!2125, !2130}
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !263, line: 91, baseType: !2126, size: 16)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2123, file: !263, line: 91, size: 16, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2126, file: !263, line: 96, baseType: !313, size: 8)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2126, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2123, file: !263, line: 100, baseType: !151, size: 16)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2087, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2087, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2087, file: !263, line: 131, baseType: !2134, size: 192, offset: 192)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2135)
!2135 = !{!2136, !2137, !2143}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2134, file: !299, line: 245, baseType: !2093, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2134, file: !299, line: 246, baseType: !2138, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2139)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{null, !2142}
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2134, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2084, file: !263, line: 250, baseType: !2145, size: 288, offset: 384)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2145, file: !334, line: 26, baseType: !137, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2145, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2145, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2145, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2145, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2145, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2145, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2145, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2145, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2084, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2084, file: !263, line: 256, baseType: !2115, size: 64, offset: 704)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2084, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2084, file: !263, line: 300, baseType: !2160, size: 96, offset: 800)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2161)
!2161 = !{!2162, !2163, !2164}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2160, file: !263, line: 153, baseType: !22, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2160, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2160, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2084, file: !263, line: 325, baseType: !2166, size: 32, offset: 896)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2168)
!2168 = !{!2169, !2175, !2176}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2167, file: !357, line: 5074, baseType: !2170, size: 96)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2171)
!2171 = !{!2172, !2173, !2174}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2170, file: !113, line: 57, baseType: !116, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2170, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2170, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2167, file: !357, line: 5075, baseType: !2115, size: 64, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2167, file: !357, line: 5076, baseType: !2177, offset: 160)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2084, file: !263, line: 343, baseType: !2179, size: 64, offset: 928)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2179, file: !334, line: 63, baseType: !137, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2179, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2185, globals: !2187, splitDebugInlining: false, nameTableKind: None)
!2184 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2185 = !{!102, !199, !1559, !208, !103, !2186, !24, !120, !1046, !22, !137, !163}
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2187 = !{!2076, !2188}
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "states_sz", scope: !2078, file: !2079, line: 279, type: !2190, isLocal: true, isDefinition: true)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1753, size: 256, elements: !159)
!2191 = !{!2192, !2193, !2194, !2195, !2196, !2197, !2198}
!2192 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2078, file: !2079, line: 271, type: !2082)
!2193 = !DILocalVariable(name: "buf", arg: 2, scope: !2078, file: !2079, line: 271, type: !1046)
!2194 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2078, file: !2079, line: 271, type: !120)
!2195 = !DILocalVariable(name: "off", scope: !2078, file: !2079, line: 273, type: !120)
!2196 = !DILocalVariable(name: "bit", scope: !2078, file: !2079, line: 274, type: !208)
!2197 = !DILocalVariable(name: "thread_state", scope: !2078, file: !2079, line: 275, type: !208)
!2198 = !DILocalVariable(name: "index", scope: !2199, file: !2079, line: 293, type: !208)
!2199 = distinct !DILexicalBlock(scope: !2078, file: !2079, line: 293, column: 2)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !159)
!2201 = !DIGlobalVariableExpression(var: !2202, expr: !DIExpression())
!2202 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2203, file: !2311, line: 56, type: !2300, isLocal: false, isDefinition: true)
!2203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2205, globals: !2308, splitDebugInlining: false, nameTableKind: None)
!2204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2205 = !{!2206, !1046, !102, !2306, !1856, !1559, !643, !103, !137, !163, !2307}
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2208)
!2208 = !{!2209, !2267, !2279, !2280, !2281, !2282, !2288, !2301}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2207, file: !263, line: 247, baseType: !2210, size: 384)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2211)
!2211 = !{!2212, !2236, !2243, !2244, !2245, !2254, !2255, !2256}
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !263, line: 60, baseType: !2213, size: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !263, line: 60, size: 64, elements: !2214)
!2214 = !{!2215, !2230}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2213, file: !263, line: 61, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2218)
!2218 = !{!2219, !2225}
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !273, line: 38, baseType: !2220, size: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !273, line: 38, size: 32, elements: !2221)
!2221 = !{!2222, !2224}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2220, file: !273, line: 39, baseType: !2223, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2220, file: !273, line: 40, baseType: !2223, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !273, line: 42, baseType: !2226, size: 32, offset: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !273, line: 42, size: 32, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2226, file: !273, line: 43, baseType: !2223, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2226, file: !273, line: 44, baseType: !2223, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2213, file: !263, line: 62, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2231, file: !289, line: 50, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2235, size: 64, elements: !294)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2210, file: !263, line: 68, baseType: !2237, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2240)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2239, file: !299, line: 232, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2217)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2210, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2210, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !263, line: 90, baseType: !2246, size: 16, offset: 112)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !263, line: 90, size: 16, elements: !2247)
!2247 = !{!2248, !2253}
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !263, line: 91, baseType: !2249, size: 16)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2246, file: !263, line: 91, size: 16, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2249, file: !263, line: 96, baseType: !313, size: 8)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2249, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2246, file: !263, line: 100, baseType: !151, size: 16)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2210, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2210, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2210, file: !263, line: 131, baseType: !2257, size: 192, offset: 192)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2258)
!2258 = !{!2259, !2260, !2266}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2257, file: !299, line: 245, baseType: !2216, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2257, file: !299, line: 246, baseType: !2261, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2262)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{null, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2257, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2207, file: !263, line: 250, baseType: !2268, size: 288, offset: 384)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2268, file: !334, line: 26, baseType: !137, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2268, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2268, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2268, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2268, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2268, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2268, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2268, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2268, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2207, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2207, file: !263, line: 256, baseType: !2238, size: 64, offset: 704)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2207, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2207, file: !263, line: 300, baseType: !2283, size: 96, offset: 800)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2284)
!2284 = !{!2285, !2286, !2287}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2283, file: !263, line: 153, baseType: !22, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2283, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2283, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2207, file: !263, line: 325, baseType: !2289, size: 32, offset: 896)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2291)
!2291 = !{!2292, !2298, !2299}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2290, file: !357, line: 5074, baseType: !2293, size: 96)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2294)
!2294 = !{!2295, !2296, !2297}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2293, file: !113, line: 57, baseType: !116, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2293, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2293, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2290, file: !357, line: 5075, baseType: !2238, size: 64, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2290, file: !357, line: 5076, baseType: !2300, offset: 160)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2207, file: !263, line: 343, baseType: !2302, size: 64, offset: 928)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2303)
!2303 = !{!2304, !2305}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2302, file: !334, line: 63, baseType: !137, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2302, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2308 = !{!2201, !2309, !2312, !2314}
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2203, file: !2311, line: 404, type: !103, isLocal: true, isDefinition: true)
!2311 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2203, file: !2311, line: 405, type: !103, isLocal: true, isDefinition: true)
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "pending_current", scope: !2203, file: !2311, line: 425, type: !2206, isLocal: true, isDefinition: true)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2318, file: !2348, line: 15, type: !163, isLocal: true, isDefinition: true)
!2318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2320, globals: !2345, splitDebugInlining: false, nameTableKind: None)
!2319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2320 = !{!1559, !102, !643, !137, !163, !103, !2321, !1046, !330}
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2323)
!2323 = !{!2324, !2339, !2344}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2322, file: !299, line: 245, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2327)
!2327 = !{!2328, !2334}
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !273, line: 38, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !273, line: 38, size: 32, elements: !2330)
!2330 = !{!2331, !2333}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2329, file: !273, line: 39, baseType: !2332, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2329, file: !273, line: 40, baseType: !2332, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !273, line: 42, baseType: !2335, size: 32, offset: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !273, line: 42, size: 32, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2335, file: !273, line: 43, baseType: !2332, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2335, file: !273, line: 44, baseType: !2332, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2322, file: !299, line: 246, baseType: !2340, size: 32, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !2321}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2322, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2345 = !{!2316, !2346, !2350, !2352}
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2318, file: !2348, line: 19, type: !2349, isLocal: true, isDefinition: true)
!2348 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2318, file: !2348, line: 25, type: !103, isLocal: true, isDefinition: true)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2318, file: !2348, line: 17, type: !2354, isLocal: true, isDefinition: true)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2326)
!2355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2356, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2356 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2358 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2361, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2361 = !{!102, !120, !1856, !24, !2362, !22, !2367, !103, !149, !150}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2364, file: !142, line: 58, baseType: !158, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2369)
!2369 = !{!2370, !2373, !2374, !2375, !2376, !2377, !2378}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2368, file: !142, line: 69, baseType: !2371, size: 64)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 64, elements: !294)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2368, file: !142, line: 70, baseType: !2372, size: 32, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2368, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2368, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2368, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2368, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2368, file: !142, line: 77, baseType: !2379, offset: 224)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2380, elements: !2383)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2381)
!2381 = !{!2382}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2380, file: !142, line: 65, baseType: !2372, size: 32)
!2383 = !{!2384}
!2384 = !DISubrange(count: 0)
!2385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2387, retainedTypes: !2407, splitDebugInlining: false, nameTableKind: None)
!2386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2387 = !{!2388, !2396}
!2388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2389, line: 69, baseType: !32, size: 32, elements: !2390)
!2389 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2390 = !{!2391, !2392, !2393, !2394, !2395}
!2391 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2392 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2393 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2394 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2395 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2389, line: 56, baseType: !32, size: 32, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406}
!2398 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2399 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2400 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2401 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2402 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2403 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2404 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2405 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2406 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2407 = !{!103, !2388, !2396, !2408, !314, !218, !2410, !2411, !209, !152, !199, !120, !102, !22, !32, !2413, !2414, !2415, !2416, !2417, !331, !2418, !2409, !2419, !2420, !2421, !2422}
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2389, line: 31, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !331)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2389, line: 32, baseType: !2412)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!2416 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2427, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2426 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2427 = !{!2428, !30}
!2428 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2429, line: 27, baseType: !32, size: 32, elements: !2430)
!2429 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2430 = !{!2431, !2432, !2433, !2434, !2435}
!2431 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2432 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2433 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2434 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2435 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2438, retainedTypes: !2439, splitDebugInlining: false, nameTableKind: None)
!2437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2438 = !{!471, !2428, !30}
!2439 = !{!669, !2440, !102, !103, !643, !137, !208, !2457}
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2442)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2443)
!2443 = !{!2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2442, file: !402, line: 413, baseType: !1574, size: 256)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2442, file: !402, line: 414, baseType: !1576, size: 768, offset: 256)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2442, file: !402, line: 415, baseType: !1574, size: 256, offset: 1024)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2442, file: !402, line: 416, baseType: !1576, size: 768, offset: 1280)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2442, file: !402, line: 417, baseType: !1574, size: 256, offset: 2048)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2442, file: !402, line: 418, baseType: !1576, size: 768, offset: 2304)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2442, file: !402, line: 419, baseType: !1574, size: 256, offset: 3072)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2442, file: !402, line: 420, baseType: !1576, size: 768, offset: 3328)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2442, file: !402, line: 421, baseType: !1574, size: 256, offset: 4096)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2442, file: !402, line: 422, baseType: !1587, size: 1792, offset: 4352)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2442, file: !402, line: 423, baseType: !1591, size: 1920, offset: 6144)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2442, file: !402, line: 424, baseType: !1596, size: 20608, offset: 8064)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2442, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2460)
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2459, file: !402, line: 447, baseType: !406, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2459, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2459, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2459, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2459, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2459, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2459, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2459, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2459, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2459, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2459, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2459, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2459, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2459, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2459, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2459, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2459, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2459, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2459, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2459, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2459, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2483 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2486, splitDebugInlining: false, nameTableKind: None)
!2485 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2486 = !{!102, !103, !22, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2490)
!2490 = !{!2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2489, file: !402, line: 447, baseType: !406, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2489, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2489, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2489, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2489, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2489, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2489, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2489, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2489, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2489, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2489, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2489, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2489, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2489, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2489, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2489, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2489, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2489, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2489, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2489, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2489, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2514, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2514 = !{!2515, !102, !103}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2517, file: !402, line: 447, baseType: !406, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2517, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2517, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2517, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2517, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2517, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2517, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2517, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2517, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2517, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2517, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2517, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2517, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2517, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2517, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2517, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2517, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2517, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2517, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2517, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2517, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2541, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2542, splitDebugInlining: false, nameTableKind: None)
!2541 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2542 = !{!2543, !137, !102, !103}
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2545, line: 98, size: 256, elements: !2546)
!2545 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2546 = !{!2547, !2552, !2557, !2562, !2567, !2572, !2577, !2582}
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 99, baseType: !2548, size: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 99, size: 32, elements: !2549)
!2549 = !{!2550, !2551}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2548, file: !2545, line: 99, baseType: !137, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2548, file: !2545, line: 99, baseType: !137, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 100, baseType: !2553, size: 32, offset: 32)
!2553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 100, size: 32, elements: !2554)
!2554 = !{!2555, !2556}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2553, file: !2545, line: 100, baseType: !137, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2553, file: !2545, line: 100, baseType: !137, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 101, baseType: !2558, size: 32, offset: 64)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 101, size: 32, elements: !2559)
!2559 = !{!2560, !2561}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2558, file: !2545, line: 101, baseType: !137, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2558, file: !2545, line: 101, baseType: !137, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 102, baseType: !2563, size: 32, offset: 96)
!2563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 102, size: 32, elements: !2564)
!2564 = !{!2565, !2566}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2563, file: !2545, line: 102, baseType: !137, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2563, file: !2545, line: 102, baseType: !137, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 103, baseType: !2568, size: 32, offset: 128)
!2568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 103, size: 32, elements: !2569)
!2569 = !{!2570, !2571}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2568, file: !2545, line: 103, baseType: !137, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2568, file: !2545, line: 103, baseType: !137, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 104, baseType: !2573, size: 32, offset: 160)
!2573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 104, size: 32, elements: !2574)
!2574 = !{!2575, !2576}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2573, file: !2545, line: 104, baseType: !137, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2573, file: !2545, line: 104, baseType: !137, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 105, baseType: !2578, size: 32, offset: 192)
!2578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 105, size: 32, elements: !2579)
!2579 = !{!2580, !2581}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2578, file: !2545, line: 105, baseType: !137, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2578, file: !2545, line: 105, baseType: !137, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2544, file: !2545, line: 106, baseType: !137, size: 32, offset: 224)
!2583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2584, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2427, retainedTypes: !2585, splitDebugInlining: false, nameTableKind: None)
!2584 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2585 = !{!2586, !102, !103, !2611, !150, !137}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2589)
!2589 = !{!2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2588, file: !402, line: 447, baseType: !406, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2588, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2588, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2588, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2588, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2588, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2588, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2588, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2588, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2588, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2588, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2588, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2588, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2588, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2588, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2588, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2588, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2588, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2588, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2588, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2588, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2545, line: 141, baseType: !2613)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2545, line: 97, size: 256, elements: !2614)
!2614 = !{!2615}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2613, file: !2545, line: 107, baseType: !2616, size: 256)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2545, line: 98, size: 256, elements: !2617)
!2617 = !{!2618, !2623, !2628, !2633, !2638, !2643, !2648, !2653}
!2618 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 99, baseType: !2619, size: 32)
!2619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 99, size: 32, elements: !2620)
!2620 = !{!2621, !2622}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2619, file: !2545, line: 99, baseType: !137, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2619, file: !2545, line: 99, baseType: !137, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 100, baseType: !2624, size: 32, offset: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 100, size: 32, elements: !2625)
!2625 = !{!2626, !2627}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2624, file: !2545, line: 100, baseType: !137, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2624, file: !2545, line: 100, baseType: !137, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 101, baseType: !2629, size: 32, offset: 64)
!2629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 101, size: 32, elements: !2630)
!2630 = !{!2631, !2632}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2629, file: !2545, line: 101, baseType: !137, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2629, file: !2545, line: 101, baseType: !137, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 102, baseType: !2634, size: 32, offset: 96)
!2634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 102, size: 32, elements: !2635)
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2634, file: !2545, line: 102, baseType: !137, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2634, file: !2545, line: 102, baseType: !137, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 103, baseType: !2639, size: 32, offset: 128)
!2639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 103, size: 32, elements: !2640)
!2640 = !{!2641, !2642}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2639, file: !2545, line: 103, baseType: !137, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2639, file: !2545, line: 103, baseType: !137, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 104, baseType: !2644, size: 32, offset: 160)
!2644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 104, size: 32, elements: !2645)
!2645 = !{!2646, !2647}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2644, file: !2545, line: 104, baseType: !137, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2644, file: !2545, line: 104, baseType: !137, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !2545, line: 105, baseType: !2649, size: 32, offset: 192)
!2649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2616, file: !2545, line: 105, size: 32, elements: !2650)
!2650 = !{!2651, !2652}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2649, file: !2545, line: 105, baseType: !137, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2649, file: !2545, line: 105, baseType: !137, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2616, file: !2545, line: 106, baseType: !137, size: 32, offset: 224)
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1557, retainedTypes: !2656, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2656 = !{!669, !643, !208, !137, !2657, !2674}
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2659)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2660)
!2660 = !{!2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2659, file: !402, line: 413, baseType: !1574, size: 256)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2659, file: !402, line: 414, baseType: !1576, size: 768, offset: 256)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2659, file: !402, line: 415, baseType: !1574, size: 256, offset: 1024)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2659, file: !402, line: 416, baseType: !1576, size: 768, offset: 1280)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2659, file: !402, line: 417, baseType: !1574, size: 256, offset: 2048)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2659, file: !402, line: 418, baseType: !1576, size: 768, offset: 2304)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2659, file: !402, line: 419, baseType: !1574, size: 256, offset: 3072)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2659, file: !402, line: 420, baseType: !1576, size: 768, offset: 3328)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2659, file: !402, line: 421, baseType: !1574, size: 256, offset: 4096)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2659, file: !402, line: 422, baseType: !1587, size: 1792, offset: 4352)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2659, file: !402, line: 423, baseType: !1591, size: 1920, offset: 6144)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2659, file: !402, line: 424, baseType: !1596, size: 20608, offset: 8064)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2659, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2676)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2676, file: !402, line: 447, baseType: !406, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2676, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2676, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2676, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2676, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2676, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2676, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2676, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2676, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2676, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2676, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2676, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2676, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2676, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2676, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2676, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2676, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2676, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2676, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2676, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2676, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2701, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2701 = !{!2702, !102, !103}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2704, file: !402, line: 447, baseType: !406, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2704, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2704, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2704, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2704, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2704, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2704, file: !402, line: 453, baseType: !1611, size: 96, offset: 192)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2704, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2704, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2704, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2704, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2704, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2704, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2704, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2704, file: !402, line: 461, baseType: !1622, size: 64, offset: 512)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2704, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2704, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2704, file: !402, line: 464, baseType: !1626, size: 128, offset: 640)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2704, file: !402, line: 465, baseType: !1628, size: 160, offset: 768)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2704, file: !402, line: 466, baseType: !1630, size: 160, offset: 928)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2704, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2728, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2729, splitDebugInlining: false, nameTableKind: None)
!2728 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2729 = !{!109, !1046, !120, !881, !2730, !209, !102}
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2734, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2734 = !{!2735}
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 677, baseType: !2737)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 643, size: 1152, elements: !2738)
!2738 = !{!2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2737, file: !172, line: 645, baseType: !176, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2737, file: !172, line: 646, baseType: !176, size: 32, offset: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2737, file: !172, line: 647, baseType: !176, size: 32, offset: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2737, file: !172, line: 648, baseType: !176, size: 32, offset: 96)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2737, file: !172, line: 649, baseType: !176, size: 32, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2737, file: !172, line: 650, baseType: !176, size: 32, offset: 160)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2737, file: !172, line: 651, baseType: !176, size: 32, offset: 192)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2737, file: !172, line: 652, baseType: !137, size: 32, offset: 224)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2737, file: !172, line: 653, baseType: !176, size: 32, offset: 256)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2737, file: !172, line: 654, baseType: !176, size: 32, offset: 288)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2737, file: !172, line: 655, baseType: !749, size: 64, offset: 320)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2737, file: !172, line: 656, baseType: !176, size: 32, offset: 384)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2737, file: !172, line: 657, baseType: !176, size: 32, offset: 416)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2737, file: !172, line: 658, baseType: !176, size: 32, offset: 448)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2737, file: !172, line: 659, baseType: !137, size: 32, offset: 480)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2737, file: !172, line: 660, baseType: !176, size: 32, offset: 512)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2737, file: !172, line: 661, baseType: !176, size: 32, offset: 544)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2737, file: !172, line: 662, baseType: !749, size: 64, offset: 576)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2737, file: !172, line: 663, baseType: !176, size: 32, offset: 640)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2737, file: !172, line: 664, baseType: !176, size: 32, offset: 672)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2737, file: !172, line: 665, baseType: !176, size: 32, offset: 704)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2737, file: !172, line: 666, baseType: !137, size: 32, offset: 736)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2737, file: !172, line: 667, baseType: !176, size: 32, offset: 768)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2737, file: !172, line: 668, baseType: !176, size: 32, offset: 800)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2737, file: !172, line: 669, baseType: !749, size: 64, offset: 832)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2737, file: !172, line: 670, baseType: !176, size: 32, offset: 896)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2737, file: !172, line: 671, baseType: !176, size: 32, offset: 928)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2737, file: !172, line: 672, baseType: !749, size: 64, offset: 960)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2737, file: !172, line: 673, baseType: !176, size: 32, offset: 1024)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2737, file: !172, line: 674, baseType: !176, size: 32, offset: 1056)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2737, file: !172, line: 675, baseType: !176, size: 32, offset: 1088)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2737, file: !172, line: 676, baseType: !176, size: 32, offset: 1120)
!2771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2774, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2775, retainedTypes: !2791, splitDebugInlining: false, nameTableKind: None)
!2774 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2775 = !{!2776, !2783, !2787}
!2776 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2777, line: 38, baseType: !32, size: 32, elements: !2778)
!2777 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2778 = !{!2779, !2780, !2781, !2782}
!2779 = !DIEnumerator(name: "HAL_OK", value: 0)
!2780 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2781 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2782 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2783 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !722, line: 184, baseType: !32, size: 32, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIEnumerator(name: "RESET", value: 0)
!2786 = !DIEnumerator(name: "SET", value: 1)
!2787 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !722, line: 190, baseType: !32, size: 32, elements: !2788)
!2788 = !{!2789, !2790}
!2789 = !DIEnumerator(name: "DISABLE", value: 0)
!2790 = !DIEnumerator(name: "ENABLE", value: 1)
!2791 = !{!102, !2792, !208, !137, !1395, !2828, !2834, !2845, !151, !2846, !163}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 677, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 643, size: 1152, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2794, file: !172, line: 645, baseType: !176, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2794, file: !172, line: 646, baseType: !176, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2794, file: !172, line: 647, baseType: !176, size: 32, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2794, file: !172, line: 648, baseType: !176, size: 32, offset: 96)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2794, file: !172, line: 649, baseType: !176, size: 32, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2794, file: !172, line: 650, baseType: !176, size: 32, offset: 160)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2794, file: !172, line: 651, baseType: !176, size: 32, offset: 192)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2794, file: !172, line: 652, baseType: !137, size: 32, offset: 224)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2794, file: !172, line: 653, baseType: !176, size: 32, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2794, file: !172, line: 654, baseType: !176, size: 32, offset: 288)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2794, file: !172, line: 655, baseType: !749, size: 64, offset: 320)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2794, file: !172, line: 656, baseType: !176, size: 32, offset: 384)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2794, file: !172, line: 657, baseType: !176, size: 32, offset: 416)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2794, file: !172, line: 658, baseType: !176, size: 32, offset: 448)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2794, file: !172, line: 659, baseType: !137, size: 32, offset: 480)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2794, file: !172, line: 660, baseType: !176, size: 32, offset: 512)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2794, file: !172, line: 661, baseType: !176, size: 32, offset: 544)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2794, file: !172, line: 662, baseType: !749, size: 64, offset: 576)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2794, file: !172, line: 663, baseType: !176, size: 32, offset: 640)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2794, file: !172, line: 664, baseType: !176, size: 32, offset: 672)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2794, file: !172, line: 665, baseType: !176, size: 32, offset: 704)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2794, file: !172, line: 666, baseType: !137, size: 32, offset: 736)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2794, file: !172, line: 667, baseType: !176, size: 32, offset: 768)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2794, file: !172, line: 668, baseType: !176, size: 32, offset: 800)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2794, file: !172, line: 669, baseType: !749, size: 64, offset: 832)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2794, file: !172, line: 670, baseType: !176, size: 32, offset: 896)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2794, file: !172, line: 671, baseType: !176, size: 32, offset: 928)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2794, file: !172, line: 672, baseType: !749, size: 64, offset: 960)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2794, file: !172, line: 673, baseType: !176, size: 32, offset: 1024)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2794, file: !172, line: 674, baseType: !176, size: 32, offset: 1056)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2794, file: !172, line: 675, baseType: !176, size: 32, offset: 1088)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2794, file: !172, line: 676, baseType: !176, size: 32, offset: 1120)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 637, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 633, size: 64, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2830, file: !172, line: 635, baseType: !176, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2830, file: !172, line: 636, baseType: !176, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 501, baseType: !2836)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 492, size: 224, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2841, !2842, !2843, !2844}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2836, file: !172, line: 494, baseType: !176, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2836, file: !172, line: 495, baseType: !176, size: 32, offset: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2836, file: !172, line: 496, baseType: !176, size: 32, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2836, file: !172, line: 497, baseType: !176, size: 32, offset: 96)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2836, file: !172, line: 498, baseType: !176, size: 32, offset: 128)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2836, file: !172, line: 499, baseType: !176, size: 32, offset: 160)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2836, file: !172, line: 500, baseType: !176, size: 32, offset: 192)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 583, baseType: !2848)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 572, size: 320, elements: !2849)
!2849 = !{!2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2848, file: !172, line: 574, baseType: !176, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2848, file: !172, line: 575, baseType: !176, size: 32, offset: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2848, file: !172, line: 576, baseType: !176, size: 32, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2848, file: !172, line: 577, baseType: !176, size: 32, offset: 96)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2848, file: !172, line: 578, baseType: !176, size: 32, offset: 128)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2848, file: !172, line: 579, baseType: !176, size: 32, offset: 160)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2848, file: !172, line: 580, baseType: !176, size: 32, offset: 192)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2848, file: !172, line: 581, baseType: !176, size: 32, offset: 224)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2848, file: !172, line: 582, baseType: !1035, size: 64, offset: 256)
!2859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2860, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2861, retainedTypes: !2862, splitDebugInlining: false, nameTableKind: None)
!2860 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2861 = !{!721}
!2862 = !{!2863, !137, !2871, !2877, !2888}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !2865)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2865, file: !402, line: 766, baseType: !176, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2865, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2865, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2865, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 637, baseType: !2873)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 633, size: 64, elements: !2874)
!2874 = !{!2875, !2876}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2873, file: !172, line: 635, baseType: !176, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2873, file: !172, line: 636, baseType: !176, size: 32, offset: 32)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 501, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 492, size: 224, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884, !2885, !2886, !2887}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2879, file: !172, line: 494, baseType: !176, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2879, file: !172, line: 495, baseType: !176, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2879, file: !172, line: 496, baseType: !176, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2879, file: !172, line: 497, baseType: !176, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2879, file: !172, line: 498, baseType: !176, size: 32, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2879, file: !172, line: 499, baseType: !176, size: 32, offset: 160)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2879, file: !172, line: 500, baseType: !176, size: 32, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 677, baseType: !2890)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 643, size: 1152, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2890, file: !172, line: 645, baseType: !176, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2890, file: !172, line: 646, baseType: !176, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2890, file: !172, line: 647, baseType: !176, size: 32, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2890, file: !172, line: 648, baseType: !176, size: 32, offset: 96)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2890, file: !172, line: 649, baseType: !176, size: 32, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2890, file: !172, line: 650, baseType: !176, size: 32, offset: 160)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2890, file: !172, line: 651, baseType: !176, size: 32, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2890, file: !172, line: 652, baseType: !137, size: 32, offset: 224)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2890, file: !172, line: 653, baseType: !176, size: 32, offset: 256)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2890, file: !172, line: 654, baseType: !176, size: 32, offset: 288)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2890, file: !172, line: 655, baseType: !749, size: 64, offset: 320)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2890, file: !172, line: 656, baseType: !176, size: 32, offset: 384)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2890, file: !172, line: 657, baseType: !176, size: 32, offset: 416)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2890, file: !172, line: 658, baseType: !176, size: 32, offset: 448)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2890, file: !172, line: 659, baseType: !137, size: 32, offset: 480)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2890, file: !172, line: 660, baseType: !176, size: 32, offset: 512)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2890, file: !172, line: 661, baseType: !176, size: 32, offset: 544)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2890, file: !172, line: 662, baseType: !749, size: 64, offset: 576)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2890, file: !172, line: 663, baseType: !176, size: 32, offset: 640)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2890, file: !172, line: 664, baseType: !176, size: 32, offset: 672)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2890, file: !172, line: 665, baseType: !176, size: 32, offset: 704)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2890, file: !172, line: 666, baseType: !137, size: 32, offset: 736)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2890, file: !172, line: 667, baseType: !176, size: 32, offset: 768)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2890, file: !172, line: 668, baseType: !176, size: 32, offset: 800)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2890, file: !172, line: 669, baseType: !749, size: 64, offset: 832)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2890, file: !172, line: 670, baseType: !176, size: 32, offset: 896)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2890, file: !172, line: 671, baseType: !176, size: 32, offset: 928)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2890, file: !172, line: 672, baseType: !749, size: 64, offset: 960)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2890, file: !172, line: 673, baseType: !176, size: 32, offset: 1024)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2890, file: !172, line: 674, baseType: !176, size: 32, offset: 1056)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2890, file: !172, line: 675, baseType: !176, size: 32, offset: 1088)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2890, file: !172, line: 676, baseType: !176, size: 32, offset: 1120)
!2924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2926, splitDebugInlining: false, nameTableKind: None)
!2925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2926 = !{!102, !120}
!2927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2928, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2929, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2928 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2929 = !{!2930, !2937, !30}
!2930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2931, line: 14, baseType: !32, size: 32, elements: !2932)
!2931 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2932 = !{!2933, !2934, !2935, !2936}
!2933 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2934 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2935 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2936 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2931, line: 42, baseType: !32, size: 32, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2942, !2943, !2944}
!2939 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2940 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2941 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2942 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2943 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2944 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2947 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2948, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2949, splitDebugInlining: false, nameTableKind: None)
!2948 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2949 = !{!22, !102, !103}
!2950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!2952 = !{!"Ubuntu clang version 14.0.6"}
!2953 = !{i32 7, !"Dwarf Version", i32 4}
!2954 = !{i32 2, !"Debug Info Version", i32 3}
!2955 = !{i32 1, !"wchar_size", i32 4}
!2956 = !{i32 1, !"min_enum_size", i32 4}
!2957 = !{i32 1, !"branch-target-enforcement", i32 0}
!2958 = !{i32 1, !"sign-return-address", i32 0}
!2959 = !{i32 1, !"sign-return-address-all", i32 0}
!2960 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2961 = !{i32 7, !"frame-pointer", i32 2}
!2962 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2963, file: !2963, line: 26, type: !2964, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !162)
!2963 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2964 = !DISubroutineType(types: !2965)
!2965 = !{null}
!2966 = !DILocation(line: 28, column: 1, scope: !2962)
!2967 = !{i64 2155743202, i64 2155743222, i64 2155743285}
!2968 = !DILocation(line: 29, column: 1, scope: !2962)
!2969 = !{i64 2155743617, i64 2155743637, i64 2155743700}
!2970 = !DILocation(line: 30, column: 1, scope: !2962)
!2971 = !{i64 2155744036, i64 2155744056, i64 2155744119}
!2972 = !DILocation(line: 31, column: 1, scope: !2962)
!2973 = !{i64 2155748516, i64 2155748536, i64 2155748599}
!2974 = !DILocation(line: 33, column: 1, scope: !2962)
!2975 = !{i64 2155748808, i64 2155748828, i64 2155748891}
!2976 = !DILocation(line: 35, column: 1, scope: !2962)
!2977 = !{i64 2155749133, i64 2155749153, i64 2155749216}
!2978 = !DILocation(line: 50, column: 1, scope: !2962)
!2979 = !{i64 2155749560, i64 2155749580, i64 2155749643}
!2980 = !DILocation(line: 54, column: 1, scope: !2962)
!2981 = !{i64 2155749999, i64 2155750019, i64 2155750082}
!2982 = !DILocation(line: 61, column: 1, scope: !2962)
!2983 = !{i64 2155750316, i64 2155750336, i64 2155750399}
!2984 = !DILocation(line: 63, column: 1, scope: !2962)
!2985 = !{i64 2155750696, i64 2155750716, i64 2155750779}
!2986 = !DILocation(line: 64, column: 1, scope: !2962)
!2987 = !{i64 2155751218, i64 2155751238, i64 2155751301}
!2988 = !DILocation(line: 65, column: 1, scope: !2962)
!2989 = !{i64 2155751716, i64 2155751736, i64 2155751799}
!2990 = !DILocation(line: 66, column: 1, scope: !2962)
!2991 = !{i64 2155752198, i64 2155752218, i64 2155752281}
!2992 = !DILocation(line: 67, column: 1, scope: !2962)
!2993 = !{i64 2155752705, i64 2155752725, i64 2155752788}
!2994 = !DILocation(line: 68, column: 1, scope: !2962)
!2995 = !{i64 2155753193, i64 2155753213, i64 2155753276}
!2996 = !DILocation(line: 70, column: 1, scope: !2962)
!2997 = !{i64 2155753661, i64 2155753681, i64 2155753744}
!2998 = !DILocation(line: 71, column: 1, scope: !2962)
!2999 = !{i64 2155754103, i64 2155754123, i64 2155754186}
!3000 = !DILocation(line: 72, column: 1, scope: !2962)
!3001 = !{i64 2155754561, i64 2155754581, i64 2155754644}
!3002 = !DILocation(line: 79, column: 1, scope: !2962)
!3003 = !{i64 2155755015, i64 2155755035, i64 2155755098}
!3004 = !DILocation(line: 80, column: 1, scope: !2962)
!3005 = !{i64 2155755526, i64 2155755546, i64 2155755609}
!3006 = !DILocation(line: 82, column: 1, scope: !2962)
!3007 = !{i64 2155756017, i64 2155756037, i64 2155756100}
!3008 = !DILocation(line: 97, column: 1, scope: !2962)
!3009 = !{i64 2155756354, i64 2155756374, i64 2155756437}
!3010 = !DILocation(line: 99, column: 1, scope: !2962)
!3011 = !{i64 2155756572, i64 2155756592, i64 2155756655}
!3012 = !DILocation(line: 102, column: 1, scope: !2962)
!3013 = !{i64 2155756829, i64 2155756849, i64 2155756912}
!3014 = !DILocation(line: 105, column: 1, scope: !2962)
!3015 = !{i64 2155757069, i64 2155757089, i64 2155757152}
!3016 = !DILocation(line: 115, column: 1, scope: !2962)
!3017 = !{i64 2155757408, i64 2155757428, i64 2155757491}
!3018 = !DILocation(line: 118, column: 1, scope: !2962)
!3019 = !{i64 2155761813, i64 2155761833, i64 2155761896}
!3020 = !DILocation(line: 32, column: 1, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !2962, file: !3022, discriminator: 0)
!3022 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3023 = !{i64 2155762169, i64 2155762189, i64 2155762252}
!3024 = !DILocation(line: 33, column: 1, scope: !3021)
!3025 = !{i64 2155762681, i64 2155762701, i64 2155762764}
!3026 = !DILocation(line: 53, column: 1, scope: !3021)
!3027 = !{i64 2155763189, i64 2155763209, i64 2155763272}
!3028 = !DILocation(line: 54, column: 1, scope: !3021)
!3029 = !{i64 2155763607, i64 2155763627, i64 2155763690}
!3030 = !DILocation(line: 55, column: 1, scope: !3021)
!3031 = !{i64 2155764025, i64 2155764045, i64 2155764108}
!3032 = !DILocation(line: 56, column: 1, scope: !3021)
!3033 = !{i64 2155764443, i64 2155764463, i64 2155764526}
!3034 = !DILocation(line: 57, column: 1, scope: !3021)
!3035 = !{i64 2155764861, i64 2155764881, i64 2155764944}
!3036 = !DILocation(line: 58, column: 1, scope: !3021)
!3037 = !{i64 2155765279, i64 2155765299, i64 2155765362}
!3038 = !DILocation(line: 59, column: 1, scope: !3021)
!3039 = !{i64 2155765697, i64 2155765717, i64 2155765780}
!3040 = !DILocation(line: 60, column: 1, scope: !3021)
!3041 = !{i64 2155766121, i64 2155766141, i64 2155766204}
!3042 = !DILocation(line: 61, column: 1, scope: !3021)
!3043 = !{i64 2155766438, i64 2155766458, i64 2155766521}
!3044 = !DILocation(line: 70, column: 1, scope: !3021)
!3045 = !{i64 2155766667, i64 2155766687, i64 2155766750}
!3046 = !DILocation(line: 72, column: 1, scope: !3021)
!3047 = !{i64 2155766999, i64 2155767019, i64 2155767082}
!3048 = !DILocation(line: 73, column: 1, scope: !3021)
!3049 = !{i64 2155767449, i64 2155767469, i64 2155767532}
!3050 = !DILocation(line: 74, column: 1, scope: !3021)
!3051 = !{i64 2155767899, i64 2155767919, i64 2155767982}
!3052 = !DILocation(line: 75, column: 1, scope: !3021)
!3053 = !{i64 2155768349, i64 2155768369, i64 2155768432}
!3054 = !DILocation(line: 76, column: 1, scope: !3021)
!3055 = !{i64 2155768799, i64 2155768819, i64 2155768882}
!3056 = !DILocation(line: 77, column: 1, scope: !3021)
!3057 = !{i64 2155769249, i64 2155769269, i64 2155769332}
!3058 = !DILocation(line: 78, column: 1, scope: !3021)
!3059 = !{i64 2155769699, i64 2155769719, i64 2155769782}
!3060 = !DILocation(line: 79, column: 1, scope: !3021)
!3061 = !{i64 2155770149, i64 2155770169, i64 2155770232}
!3062 = !DILocation(line: 80, column: 1, scope: !3021)
!3063 = !{i64 2155770602, i64 2155770622, i64 2155770685}
!3064 = !DILocation(line: 84, column: 1, scope: !3021)
!3065 = !{i64 2155770934, i64 2155770954, i64 2155771017}
!3066 = !DILocation(line: 91, column: 1, scope: !3021)
!3067 = !{i64 2155775392, i64 2155775412, i64 2155775475}
!3068 = !DILocation(line: 93, column: 1, scope: !3021)
!3069 = !{i64 2155775759, i64 2155775779, i64 2155775842}
!3070 = !DILocation(line: 106, column: 1, scope: !3021)
!3071 = !{i64 2155776029, i64 2155776049, i64 2155776112}
!3072 = !DILocation(line: 11, column: 1, scope: !3073)
!3073 = !DILexicalBlockFile(scope: !2962, file: !3074, discriminator: 0)
!3074 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3075 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2964, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3076)
!3076 = !{!3077}
!3077 = !DILocalVariable(name: "p", scope: !3075, file: !107, line: 19, type: !102)
!3078 = !DILocation(line: 21, column: 2, scope: !3075)
!3079 = !DILocation(line: 23, column: 2, scope: !3075)
!3080 = !DILocation(line: 24, column: 2, scope: !3075)
!3081 = !DILocation(line: 26, column: 6, scope: !3075)
!3082 = !DILocation(line: 0, scope: !3075)
!3083 = !DILocation(line: 27, column: 2, scope: !3075)
!3084 = !DILocation(line: 29, column: 6, scope: !3075)
!3085 = !DILocation(line: 30, column: 2, scope: !3075)
!3086 = !DILocation(line: 32, column: 2, scope: !3075)
!3087 = !DILocation(line: 33, column: 2, scope: !3075)
!3088 = !DILocation(line: 34, column: 1, scope: !3075)
!3089 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2964, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3090)
!3090 = !{!3091}
!3091 = !DILocalVariable(name: "stats", scope: !3089, file: !107, line: 38, type: !3092)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !3093, line: 24, size: 96, elements: !3094)
!3093 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3094 = !{!3095, !3096, !3097}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3092, file: !3093, line: 25, baseType: !120, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3092, file: !3093, line: 26, baseType: !120, size: 32, offset: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3092, file: !3093, line: 27, baseType: !120, size: 32, offset: 64)
!3098 = !DILocation(line: 38, column: 2, scope: !3089)
!3099 = !DILocation(line: 38, column: 26, scope: !3089)
!3100 = !DILocation(line: 40, column: 2, scope: !3089)
!3101 = !DILocation(line: 43, column: 9, scope: !3089)
!3102 = !DILocation(line: 43, column: 32, scope: !3089)
!3103 = !DILocation(line: 44, column: 9, scope: !3089)
!3104 = !DILocation(line: 42, column: 2, scope: !3089)
!3105 = !DILocation(line: 45, column: 1, scope: !3089)
!3106 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3107)
!3107 = !{!3108}
!3108 = !DILocalVariable(name: "c", arg: 1, scope: !3106, file: !127, line: 45, type: !103)
!3109 = !DILocation(line: 0, scope: !3106)
!3110 = !DILocation(line: 50, column: 2, scope: !3106)
!3111 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !3112, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3114)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{null, !128}
!3114 = !{!3115}
!3115 = !DILocalVariable(name: "fn", arg: 1, scope: !3111, file: !127, line: 63, type: !128)
!3116 = !DILocation(line: 0, scope: !3111)
!3117 = !DILocation(line: 65, column: 12, scope: !3111)
!3118 = !DILocation(line: 66, column: 1, scope: !3111)
!3119 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !3120, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!102}
!3122 = !DILocation(line: 78, column: 9, scope: !3119)
!3123 = !DILocation(line: 78, column: 2, scope: !3119)
!3124 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !3125, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3134)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{null, !199, !3127}
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3128, line: 99, baseType: !3129)
!3128 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3128, line: 40, baseType: !3130)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !3131)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3132)
!3132 = !{!3133}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3131, file: !127, line: 79, baseType: !102, size: 32)
!3134 = !{!3135, !3136, !3137}
!3135 = !DILocalVariable(name: "fmt", arg: 1, scope: !3124, file: !127, line: 113, type: !199)
!3136 = !DILocalVariable(name: "ap", arg: 2, scope: !3124, file: !127, line: 113, type: !3127)
!3137 = !DILocalVariable(name: "ctx", scope: !3138, file: !127, line: 121, type: !3140)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !127, line: 120, column: 27)
!3139 = distinct !DILexicalBlock(scope: !3124, file: !127, line: 120, column: 6)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !3141)
!3141 = !{!3142, !3143}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3140, file: !127, line: 85, baseType: !32, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3140, file: !127, line: 86, baseType: !3144, offset: 32)
!3144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2383)
!3145 = !DILocation(line: 0, scope: !3124)
!3146 = !DILocation(line: 148, column: 3, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3139, file: !127, line: 138, column: 9)
!3148 = !DILocation(line: 155, column: 1, scope: !3124)
!3149 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !3150, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3152)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!103, !103, !102}
!3152 = !{!3153, !3154}
!3153 = !DILocalVariable(name: "c", arg: 1, scope: !3149, file: !127, line: 107, type: !103)
!3154 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3149, file: !127, line: 107, type: !102)
!3155 = !DILocation(line: 0, scope: !3149)
!3156 = !DILocation(line: 110, column: 9, scope: !3149)
!3157 = !DILocation(line: 110, column: 2, scope: !3149)
!3158 = distinct !DISubprogram(name: "cbvprintf", scope: !3159, file: !3159, line: 739, type: !3160, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3166)
!3159 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3160 = !DISubroutineType(types: !3161)
!3161 = !{!103, !3162, !102, !199, !3127}
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3159, line: 297, baseType: !3163)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 32)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!103, null}
!3166 = !{!3167, !3168, !3169, !3170}
!3167 = !DILocalVariable(name: "out", arg: 1, scope: !3158, file: !3159, line: 739, type: !3162)
!3168 = !DILocalVariable(name: "ctx", arg: 2, scope: !3158, file: !3159, line: 739, type: !102)
!3169 = !DILocalVariable(name: "format", arg: 3, scope: !3158, file: !3159, line: 739, type: !199)
!3170 = !DILocalVariable(name: "ap", arg: 4, scope: !3158, file: !3159, line: 739, type: !3127)
!3171 = !DILocation(line: 0, scope: !3158)
!3172 = !DILocation(line: 741, column: 9, scope: !3158)
!3173 = !DILocation(line: 741, column: 2, scope: !3158)
!3174 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3175, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3177)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{null, !1046, !120}
!3177 = !{!3178, !3179, !3180}
!3178 = !DILocalVariable(name: "c", arg: 1, scope: !3174, file: !127, line: 157, type: !1046)
!3179 = !DILocalVariable(name: "n", arg: 2, scope: !3174, file: !127, line: 157, type: !120)
!3180 = !DILocalVariable(name: "i", scope: !3174, file: !127, line: 159, type: !120)
!3181 = !DILocation(line: 0, scope: !3174)
!3182 = !DILocation(line: 164, column: 16, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3184, file: !127, line: 164, column: 2)
!3184 = distinct !DILexicalBlock(scope: !3174, file: !127, line: 164, column: 2)
!3185 = !DILocation(line: 164, column: 2, scope: !3184)
!3186 = !DILocation(line: 165, column: 3, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3183, file: !127, line: 164, column: 26)
!3188 = !DILocation(line: 165, column: 13, scope: !3187)
!3189 = !DILocation(line: 164, column: 22, scope: !3183)
!3190 = distinct !{!3190, !3185, !3191}
!3191 = !DILocation(line: 166, column: 2, scope: !3184)
!3192 = !DILocation(line: 171, column: 1, scope: !3174)
!3193 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3194, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3196)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{null, !199, null}
!3196 = !{!3197, !3198}
!3197 = !DILocalVariable(name: "fmt", arg: 1, scope: !3193, file: !127, line: 203, type: !199)
!3198 = !DILocalVariable(name: "ap", scope: !3193, file: !127, line: 205, type: !3127)
!3199 = !DILocation(line: 0, scope: !3193)
!3200 = !DILocation(line: 205, column: 2, scope: !3193)
!3201 = !DILocation(line: 205, column: 10, scope: !3193)
!3202 = !DILocation(line: 207, column: 2, scope: !3193)
!3203 = !DILocation(line: 209, column: 2, scope: !3193)
!3204 = !DILocation(line: 211, column: 2, scope: !3193)
!3205 = !DILocation(line: 212, column: 1, scope: !3193)
!3206 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3207, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3209)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!103, !1046, !120, !199, null}
!3209 = !{!3210, !3211, !3212, !3213, !3214}
!3210 = !DILocalVariable(name: "str", arg: 1, scope: !3206, file: !127, line: 239, type: !1046)
!3211 = !DILocalVariable(name: "size", arg: 2, scope: !3206, file: !127, line: 239, type: !120)
!3212 = !DILocalVariable(name: "fmt", arg: 3, scope: !3206, file: !127, line: 239, type: !199)
!3213 = !DILocalVariable(name: "ap", scope: !3206, file: !127, line: 241, type: !3127)
!3214 = !DILocalVariable(name: "ret", scope: !3206, file: !127, line: 242, type: !103)
!3215 = !DILocation(line: 0, scope: !3206)
!3216 = !DILocation(line: 241, column: 2, scope: !3206)
!3217 = !DILocation(line: 241, column: 10, scope: !3206)
!3218 = !DILocation(line: 244, column: 2, scope: !3206)
!3219 = !DILocation(line: 245, column: 8, scope: !3206)
!3220 = !DILocation(line: 246, column: 2, scope: !3206)
!3221 = !DILocation(line: 249, column: 1, scope: !3206)
!3222 = !DILocation(line: 248, column: 2, scope: !3206)
!3223 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3224, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3226)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!103, !1046, !120, !199, !3127}
!3226 = !{!3227, !3228, !3229, !3230, !3231}
!3227 = !DILocalVariable(name: "str", arg: 1, scope: !3223, file: !127, line: 251, type: !1046)
!3228 = !DILocalVariable(name: "size", arg: 2, scope: !3223, file: !127, line: 251, type: !120)
!3229 = !DILocalVariable(name: "fmt", arg: 3, scope: !3223, file: !127, line: 251, type: !199)
!3230 = !DILocalVariable(name: "ap", arg: 4, scope: !3223, file: !127, line: 251, type: !3127)
!3231 = !DILocalVariable(name: "ctx", scope: !3223, file: !127, line: 253, type: !3232)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3233)
!3233 = !{!3234, !3235, !3236}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3232, file: !127, line: 218, baseType: !1046, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3232, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3232, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3237 = !DILocation(line: 0, scope: !3223)
!3238 = !DILocation(line: 253, column: 2, scope: !3223)
!3239 = !DILocation(line: 253, column: 21, scope: !3223)
!3240 = !DILocation(line: 253, column: 27, scope: !3223)
!3241 = !DILocation(line: 255, column: 2, scope: !3223)
!3242 = !DILocation(line: 257, column: 10, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3223, file: !127, line: 257, column: 6)
!3244 = !DILocation(line: 257, column: 22, scope: !3243)
!3245 = !DILocation(line: 257, column: 16, scope: !3243)
!3246 = !DILocation(line: 257, column: 6, scope: !3223)
!3247 = !DILocation(line: 258, column: 3, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3243, file: !127, line: 257, column: 27)
!3249 = !DILocation(line: 258, column: 18, scope: !3248)
!3250 = !DILocation(line: 259, column: 2, scope: !3248)
!3251 = !DILocation(line: 262, column: 1, scope: !3223)
!3252 = !DILocation(line: 261, column: 2, scope: !3223)
!3253 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3254, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3257)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!103, !103, !3256}
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 32)
!3257 = !{!3258, !3259}
!3258 = !DILocalVariable(name: "c", arg: 1, scope: !3253, file: !127, line: 223, type: !103)
!3259 = !DILocalVariable(name: "ctx", arg: 2, scope: !3253, file: !127, line: 223, type: !3256)
!3260 = !DILocation(line: 0, scope: !3253)
!3261 = !DILocation(line: 225, column: 11, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3253, file: !127, line: 225, column: 6)
!3263 = !DILocation(line: 225, column: 15, scope: !3262)
!3264 = !DILocation(line: 0, scope: !3262)
!3265 = !DILocation(line: 225, column: 23, scope: !3262)
!3266 = !DILocation(line: 225, column: 45, scope: !3262)
!3267 = !DILocation(line: 225, column: 37, scope: !3262)
!3268 = !DILocation(line: 225, column: 6, scope: !3253)
!3269 = !DILocation(line: 226, column: 8, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3262, file: !127, line: 225, column: 50)
!3271 = !DILocation(line: 226, column: 13, scope: !3270)
!3272 = !DILocation(line: 227, column: 3, scope: !3270)
!3273 = !DILocation(line: 230, column: 29, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3253, file: !127, line: 230, column: 6)
!3275 = !DILocation(line: 230, column: 17, scope: !3274)
!3276 = !DILocation(line: 230, column: 6, scope: !3253)
!3277 = !DILocation(line: 231, column: 22, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !127, line: 230, column: 34)
!3279 = !DILocation(line: 231, column: 3, scope: !3278)
!3280 = !DILocation(line: 231, column: 26, scope: !3278)
!3281 = !DILocation(line: 232, column: 2, scope: !3278)
!3282 = !DILocation(line: 233, column: 28, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3274, file: !127, line: 232, column: 9)
!3284 = !DILocation(line: 233, column: 22, scope: !3283)
!3285 = !DILocation(line: 233, column: 3, scope: !3283)
!3286 = !DILocation(line: 233, column: 26, scope: !3283)
!3287 = !DILocation(line: 237, column: 1, scope: !3253)
!3288 = distinct !DISubprogram(name: "z_thread_entry", scope: !3289, file: !3289, line: 30, type: !3290, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !3297)
!3289 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3290 = !DISubroutineType(types: !3291)
!3291 = !{null, !3292, !102, !102, !102}
!3292 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3293, line: 46, baseType: !3294)
!3293 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 32)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{null, !102, !102, !102}
!3297 = !{!3298, !3299, !3300, !3301}
!3298 = !DILocalVariable(name: "entry", arg: 1, scope: !3288, file: !3289, line: 30, type: !3292)
!3299 = !DILocalVariable(name: "p1", arg: 2, scope: !3288, file: !3289, line: 31, type: !102)
!3300 = !DILocalVariable(name: "p2", arg: 3, scope: !3288, file: !3289, line: 31, type: !102)
!3301 = !DILocalVariable(name: "p3", arg: 4, scope: !3288, file: !3289, line: 31, type: !102)
!3302 = !DILocation(line: 0, scope: !3288)
!3303 = !DILocation(line: 36, column: 2, scope: !3288)
!3304 = !DILocation(line: 38, column: 17, scope: !3288)
!3305 = !DILocation(line: 38, column: 2, scope: !3288)
!3306 = !DILocation(line: 45, column: 2, scope: !3288)
!3307 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !3308, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !162)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!3310}
!3310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !3311)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 32)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !3313)
!3313 = !{!3314, !3372, !3384, !3385, !3386, !3387, !3393, !3406}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3312, file: !263, line: 247, baseType: !3315, size: 384)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !3316)
!3316 = !{!3317, !3341, !3348, !3349, !3350, !3359, !3360, !3361}
!3317 = !DIDerivedType(tag: DW_TAG_member, scope: !3315, file: !263, line: 60, baseType: !3318, size: 64)
!3318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3315, file: !263, line: 60, size: 64, elements: !3319)
!3319 = !{!3320, !3335}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3318, file: !263, line: 61, baseType: !3321, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !3322)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !3323)
!3323 = !{!3324, !3330}
!3324 = !DIDerivedType(tag: DW_TAG_member, scope: !3322, file: !273, line: 38, baseType: !3325, size: 32)
!3325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3322, file: !273, line: 38, size: 32, elements: !3326)
!3326 = !{!3327, !3329}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3325, file: !273, line: 39, baseType: !3328, size: 32)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3325, file: !273, line: 40, baseType: !3328, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, scope: !3322, file: !273, line: 42, baseType: !3331, size: 32, offset: 32)
!3331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3322, file: !273, line: 42, size: 32, elements: !3332)
!3332 = !{!3333, !3334}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3331, file: !273, line: 43, baseType: !3328, size: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3331, file: !273, line: 44, baseType: !3328, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3318, file: !263, line: 62, baseType: !3336, size: 64)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !3337)
!3337 = !{!3338}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3336, file: !289, line: 50, baseType: !3339, size: 64)
!3339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3340, size: 64, elements: !294)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3315, file: !263, line: 68, baseType: !3342, size: 32, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !3344)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !3345)
!3345 = !{!3346}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3344, file: !299, line: 232, baseType: !3347, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !3322)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3315, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3315, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!3350 = !DIDerivedType(tag: DW_TAG_member, scope: !3315, file: !263, line: 90, baseType: !3351, size: 16, offset: 112)
!3351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3315, file: !263, line: 90, size: 16, elements: !3352)
!3352 = !{!3353, !3358}
!3353 = !DIDerivedType(tag: DW_TAG_member, scope: !3351, file: !263, line: 91, baseType: !3354, size: 16)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3351, file: !263, line: 91, size: 16, elements: !3355)
!3355 = !{!3356, !3357}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3354, file: !263, line: 96, baseType: !313, size: 8)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3354, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3351, file: !263, line: 100, baseType: !151, size: 16)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3315, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3315, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3315, file: !263, line: 131, baseType: !3362, size: 192, offset: 192)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !3363)
!3363 = !{!3364, !3365, !3371}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3362, file: !299, line: 245, baseType: !3321, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3362, file: !299, line: 246, baseType: !3366, size: 32, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !3367)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 32)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !3370}
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 32)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3362, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3312, file: !263, line: 250, baseType: !3373, size: 288, offset: 384)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3373, file: !334, line: 26, baseType: !137, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3373, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3373, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3373, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3373, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3373, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3373, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3373, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3373, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3312, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3312, file: !263, line: 256, baseType: !3343, size: 64, offset: 704)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3312, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3312, file: !263, line: 300, baseType: !3388, size: 96, offset: 800)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !3389)
!3389 = !{!3390, !3391, !3392}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3388, file: !263, line: 153, baseType: !22, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3388, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3388, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3312, file: !263, line: 325, baseType: !3394, size: 32, offset: 896)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 32)
!3395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !3396)
!3396 = !{!3397, !3403, !3404}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3395, file: !357, line: 5074, baseType: !3398, size: 96)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3399)
!3399 = !{!3400, !3401, !3402}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3398, file: !113, line: 57, baseType: !116, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3398, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3398, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3395, file: !357, line: 5075, baseType: !3343, size: 64, offset: 96)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3395, file: !357, line: 5076, baseType: !3405, offset: 160)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3312, file: !263, line: 343, baseType: !3407, size: 64, offset: 928)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !3408)
!3408 = !{!3409, !3410}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3407, file: !334, line: 63, baseType: !137, size: 32)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3407, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!3411 = !DILocation(line: 535, column: 9, scope: !3307)
!3412 = !DILocation(line: 535, column: 2, scope: !3307)
!3413 = distinct !DISubprogram(name: "k_thread_abort", scope: !3414, file: !3414, line: 188, type: !3415, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !3417)
!3414 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!3415 = !DISubroutineType(types: !3416)
!3416 = !{null, !3310}
!3417 = !{!3418}
!3418 = !DILocalVariable(name: "thread", arg: 1, scope: !3413, file: !3414, line: 188, type: !3310)
!3419 = !DILocation(line: 0, scope: !3413)
!3420 = !DILocation(line: 197, column: 2, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3413, file: !3414, line: 197, column: 2)
!3422 = !{i64 2155434857}
!3423 = !DILocation(line: 198, column: 2, scope: !3413)
!3424 = !DILocation(line: 199, column: 1, scope: !3413)
!3425 = distinct !DISubprogram(name: "z_current_get", scope: !3414, file: !3414, line: 173, type: !3308, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !162)
!3426 = !DILocation(line: 180, column: 2, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3425, file: !3414, line: 180, column: 2)
!3428 = !{i64 2155434789}
!3429 = !DILocation(line: 181, column: 9, scope: !3425)
!3430 = !DILocation(line: 181, column: 2, scope: !3425)
!3431 = distinct !DISubprogram(name: "sys_heap_free", scope: !3432, file: !3432, line: 163, type: !3433, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3441)
!3432 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !3435, !102}
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 32)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3437)
!3437 = !{!3438, !3439, !3440}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3436, file: !113, line: 57, baseType: !2367, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3436, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3436, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3441 = !{!3442, !3443, !3444, !3445}
!3442 = !DILocalVariable(name: "heap", arg: 1, scope: !3431, file: !3432, line: 163, type: !3435)
!3443 = !DILocalVariable(name: "mem", arg: 2, scope: !3431, file: !3432, line: 163, type: !102)
!3444 = !DILocalVariable(name: "h", scope: !3431, file: !3432, line: 168, type: !2367)
!3445 = !DILocalVariable(name: "c", scope: !3431, file: !3432, line: 169, type: !2372)
!3446 = !DILocation(line: 0, scope: !3431)
!3447 = !DILocation(line: 165, column: 10, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3431, file: !3432, line: 165, column: 6)
!3449 = !DILocation(line: 165, column: 6, scope: !3431)
!3450 = !DILocation(line: 168, column: 27, scope: !3431)
!3451 = !DILocation(line: 169, column: 16, scope: !3431)
!3452 = !{i32 0, i32 536870912}
!3453 = !DILocation(line: 187, column: 2, scope: !3431)
!3454 = !DILocation(line: 189, column: 44, scope: !3431)
!3455 = !{i32 0, i32 32768}
!3456 = !DILocation(line: 189, column: 24, scope: !3431)
!3457 = !DILocation(line: 189, column: 5, scope: !3431)
!3458 = !DILocation(line: 189, column: 21, scope: !3431)
!3459 = !DILocation(line: 197, column: 2, scope: !3431)
!3460 = !DILocation(line: 198, column: 1, scope: !3431)
!3461 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3432, file: !3432, line: 157, type: !3462, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3464)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!2372, !2367, !102}
!3464 = !{!3465, !3466, !3467, !3468}
!3465 = !DILocalVariable(name: "h", arg: 1, scope: !3461, file: !3432, line: 157, type: !2367)
!3466 = !DILocalVariable(name: "p", arg: 2, scope: !3461, file: !3432, line: 157, type: !102)
!3467 = !DILocalVariable(name: "mem", scope: !3461, file: !3432, line: 159, type: !1856)
!3468 = !DILocalVariable(name: "base", scope: !3461, file: !3432, line: 159, type: !1856)
!3469 = !DILocation(line: 0, scope: !3461)
!3470 = !DILocation(line: 159, column: 39, scope: !3461)
!3471 = !DILocation(line: 160, column: 14, scope: !3461)
!3472 = !DILocation(line: 160, column: 38, scope: !3461)
!3473 = !DILocation(line: 160, column: 46, scope: !3461)
!3474 = !DILocation(line: 160, column: 2, scope: !3461)
!3475 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3476, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3478)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !2367, !2372, !211}
!3478 = !{!3479, !3480, !3481, !3482, !3483}
!3479 = !DILocalVariable(name: "h", arg: 1, scope: !3475, file: !142, line: 147, type: !2367)
!3480 = !DILocalVariable(name: "c", arg: 2, scope: !3475, file: !142, line: 147, type: !2372)
!3481 = !DILocalVariable(name: "used", arg: 3, scope: !3475, file: !142, line: 147, type: !211)
!3482 = !DILocalVariable(name: "buf", scope: !3475, file: !142, line: 149, type: !2362)
!3483 = !DILocalVariable(name: "cmem", scope: !3475, file: !142, line: 150, type: !102)
!3484 = !DILocation(line: 0, scope: !3475)
!3485 = !DILocation(line: 149, column: 22, scope: !3475)
!3486 = !DILocation(line: 0, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !142, line: 159, column: 7)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !142, line: 158, column: 9)
!3489 = distinct !DILexicalBlock(scope: !3475, file: !142, line: 152, column: 6)
!3490 = !DILocation(line: 159, column: 7, scope: !3488)
!3491 = !DILocation(line: 165, column: 1, scope: !3475)
!3492 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3493, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3496)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!3495, !2367, !2372}
!3495 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3496 = !{!3497, !3498}
!3497 = !DILocalVariable(name: "h", arg: 1, scope: !3492, file: !142, line: 142, type: !2367)
!3498 = !DILocalVariable(name: "c", arg: 2, scope: !3492, file: !142, line: 142, type: !2372)
!3499 = !DILocation(line: 0, scope: !3492)
!3500 = !DILocation(line: 144, column: 9, scope: !3492)
!3501 = !DILocation(line: 144, column: 42, scope: !3492)
!3502 = !DILocation(line: 144, column: 2, scope: !3492)
!3503 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3504, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!120, !2367, !3495}
!3506 = !{!3507, !3508}
!3507 = !DILocalVariable(name: "h", arg: 1, scope: !3503, file: !142, line: 245, type: !2367)
!3508 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3503, file: !142, line: 245, type: !3495)
!3509 = !DILocation(line: 0, scope: !3503)
!3510 = !DILocation(line: 247, column: 20, scope: !3503)
!3511 = !DILocation(line: 247, column: 33, scope: !3503)
!3512 = !DILocation(line: 247, column: 2, scope: !3503)
!3513 = distinct !DISubprogram(name: "free_chunk", scope: !3432, file: !3432, line: 133, type: !3514, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3516)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{null, !2367, !2372}
!3516 = !{!3517, !3518}
!3517 = !DILocalVariable(name: "h", arg: 1, scope: !3513, file: !3432, line: 133, type: !2367)
!3518 = !DILocalVariable(name: "c", arg: 2, scope: !3513, file: !3432, line: 133, type: !2372)
!3519 = !DILocation(line: 0, scope: !3513)
!3520 = !DILocation(line: 136, column: 21, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3513, file: !3432, line: 136, column: 6)
!3522 = !DILocation(line: 136, column: 7, scope: !3521)
!3523 = !DILocation(line: 136, column: 6, scope: !3513)
!3524 = !DILocation(line: 137, column: 3, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !3432, line: 136, column: 41)
!3526 = !DILocation(line: 138, column: 22, scope: !3525)
!3527 = !DILocation(line: 138, column: 3, scope: !3525)
!3528 = !DILocation(line: 139, column: 2, scope: !3525)
!3529 = !DILocation(line: 142, column: 21, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3513, file: !3432, line: 142, column: 6)
!3531 = !{i32 -65535, i32 536903678}
!3532 = !DILocation(line: 142, column: 7, scope: !3530)
!3533 = !DILocation(line: 142, column: 6, scope: !3513)
!3534 = !DILocation(line: 143, column: 3, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3530, file: !3432, line: 142, column: 40)
!3536 = !DILocation(line: 144, column: 19, scope: !3535)
!3537 = !DILocation(line: 144, column: 3, scope: !3535)
!3538 = !DILocation(line: 145, column: 7, scope: !3535)
!3539 = !DILocation(line: 146, column: 2, scope: !3535)
!3540 = !DILocation(line: 148, column: 2, scope: !3513)
!3541 = !DILocation(line: 149, column: 1, scope: !3513)
!3542 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3543, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3545)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!2372, !2367, !2372}
!3545 = !{!3546, !3547}
!3546 = !DILocalVariable(name: "h", arg: 1, scope: !3542, file: !142, line: 204, type: !2367)
!3547 = !DILocalVariable(name: "c", arg: 2, scope: !3542, file: !142, line: 204, type: !2372)
!3548 = !DILocation(line: 0, scope: !3542)
!3549 = !DILocation(line: 206, column: 13, scope: !3542)
!3550 = !DILocation(line: 206, column: 11, scope: !3542)
!3551 = !DILocation(line: 206, column: 2, scope: !3542)
!3552 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3553, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3555)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!211, !2367, !2372}
!3555 = !{!3556, !3557}
!3556 = !DILocalVariable(name: "h", arg: 1, scope: !3552, file: !142, line: 137, type: !2367)
!3557 = !DILocalVariable(name: "c", arg: 2, scope: !3552, file: !142, line: 137, type: !2372)
!3558 = !DILocation(line: 0, scope: !3552)
!3559 = !DILocation(line: 139, column: 9, scope: !3552)
!3560 = !DILocation(line: 139, column: 42, scope: !3552)
!3561 = !DILocation(line: 139, column: 2, scope: !3552)
!3562 = distinct !DISubprogram(name: "free_list_remove", scope: !3432, file: !3432, line: 60, type: !3514, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3563)
!3563 = !{!3564, !3565, !3566}
!3564 = !DILocalVariable(name: "h", arg: 1, scope: !3562, file: !3432, line: 60, type: !2367)
!3565 = !DILocalVariable(name: "c", arg: 2, scope: !3562, file: !3432, line: 60, type: !2372)
!3566 = !DILocalVariable(name: "bidx", scope: !3567, file: !3432, line: 63, type: !103)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !3432, line: 62, column: 31)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !3432, line: 62, column: 6)
!3569 = !DILocation(line: 0, scope: !3562)
!3570 = !DILocation(line: 63, column: 28, scope: !3567)
!3571 = !DILocation(line: 63, column: 14, scope: !3567)
!3572 = !DILocation(line: 0, scope: !3567)
!3573 = !DILocation(line: 64, column: 3, scope: !3567)
!3574 = !DILocation(line: 66, column: 1, scope: !3562)
!3575 = distinct !DISubprogram(name: "merge_chunks", scope: !3432, file: !3432, line: 125, type: !3576, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3578)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{null, !2367, !2372, !2372}
!3578 = !{!3579, !3580, !3581, !3582}
!3579 = !DILocalVariable(name: "h", arg: 1, scope: !3575, file: !3432, line: 125, type: !2367)
!3580 = !DILocalVariable(name: "lc", arg: 2, scope: !3575, file: !3432, line: 125, type: !2372)
!3581 = !DILocalVariable(name: "rc", arg: 3, scope: !3575, file: !3432, line: 125, type: !2372)
!3582 = !DILocalVariable(name: "newsz", scope: !3575, file: !3432, line: 127, type: !3495)
!3583 = !DILocation(line: 0, scope: !3575)
!3584 = !DILocation(line: 127, column: 20, scope: !3575)
!3585 = !DILocation(line: 127, column: 40, scope: !3575)
!3586 = !DILocation(line: 127, column: 38, scope: !3575)
!3587 = !DILocation(line: 129, column: 2, scope: !3575)
!3588 = !DILocation(line: 130, column: 25, scope: !3575)
!3589 = !DILocation(line: 130, column: 2, scope: !3575)
!3590 = !DILocation(line: 131, column: 1, scope: !3575)
!3591 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3543, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3592)
!3592 = !{!3593, !3594}
!3593 = !DILocalVariable(name: "h", arg: 1, scope: !3591, file: !142, line: 199, type: !2367)
!3594 = !DILocalVariable(name: "c", arg: 2, scope: !3591, file: !142, line: 199, type: !2372)
!3595 = !DILocation(line: 0, scope: !3591)
!3596 = !DILocation(line: 201, column: 13, scope: !3591)
!3597 = !DILocation(line: 201, column: 11, scope: !3591)
!3598 = !DILocation(line: 201, column: 2, scope: !3591)
!3599 = distinct !DISubprogram(name: "free_list_add", scope: !3432, file: !3432, line: 98, type: !3514, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3600)
!3600 = !{!3601, !3602, !3603}
!3601 = !DILocalVariable(name: "h", arg: 1, scope: !3599, file: !3432, line: 98, type: !2367)
!3602 = !DILocalVariable(name: "c", arg: 2, scope: !3599, file: !3432, line: 98, type: !2372)
!3603 = !DILocalVariable(name: "bidx", scope: !3604, file: !3432, line: 101, type: !103)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !3432, line: 100, column: 31)
!3605 = distinct !DILexicalBlock(scope: !3599, file: !3432, line: 100, column: 6)
!3606 = !DILocation(line: 0, scope: !3599)
!3607 = !DILocation(line: 101, column: 28, scope: !3604)
!3608 = !DILocation(line: 101, column: 14, scope: !3604)
!3609 = !DILocation(line: 0, scope: !3604)
!3610 = !DILocation(line: 102, column: 3, scope: !3604)
!3611 = !DILocation(line: 104, column: 1, scope: !3599)
!3612 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3613, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!103, !2367, !3495}
!3615 = !{!3616, !3617, !3618}
!3616 = !DILocalVariable(name: "h", arg: 1, scope: !3612, file: !142, line: 250, type: !2367)
!3617 = !DILocalVariable(name: "sz", arg: 2, scope: !3612, file: !142, line: 250, type: !3495)
!3618 = !DILocalVariable(name: "usable_sz", scope: !3612, file: !142, line: 252, type: !32)
!3619 = !DILocation(line: 0, scope: !3612)
!3620 = !DILocation(line: 252, column: 32, scope: !3612)
!3621 = !DILocation(line: 252, column: 30, scope: !3612)
!3622 = !DILocation(line: 252, column: 50, scope: !3612)
!3623 = !DILocation(line: 253, column: 14, scope: !3612)
!3624 = !{i32 0, i32 33}
!3625 = !DILocation(line: 253, column: 12, scope: !3612)
!3626 = !DILocation(line: 253, column: 2, scope: !3612)
!3627 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3432, file: !3432, line: 68, type: !3628, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3630)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{null, !2367, !2372, !103}
!3630 = !{!3631, !3632, !3633, !3634, !3636, !3639}
!3631 = !DILocalVariable(name: "h", arg: 1, scope: !3627, file: !3432, line: 68, type: !2367)
!3632 = !DILocalVariable(name: "c", arg: 2, scope: !3627, file: !3432, line: 68, type: !2372)
!3633 = !DILocalVariable(name: "bidx", arg: 3, scope: !3627, file: !3432, line: 68, type: !103)
!3634 = !DILocalVariable(name: "b", scope: !3627, file: !3432, line: 70, type: !3635)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!3636 = !DILocalVariable(name: "second", scope: !3637, file: !3432, line: 84, type: !2372)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !3432, line: 80, column: 9)
!3638 = distinct !DILexicalBlock(scope: !3627, file: !3432, line: 72, column: 6)
!3639 = !DILocalVariable(name: "first", scope: !3637, file: !3432, line: 85, type: !2372)
!3640 = !DILocation(line: 0, scope: !3627)
!3641 = !DILocation(line: 72, column: 9, scope: !3638)
!3642 = !DILocation(line: 72, column: 14, scope: !3638)
!3643 = !DILocation(line: 72, column: 6, scope: !3627)
!3644 = !DILocation(line: 76, column: 23, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3638, file: !3432, line: 72, column: 21)
!3646 = !DILocation(line: 76, column: 6, scope: !3645)
!3647 = !DILocation(line: 76, column: 20, scope: !3645)
!3648 = !DILocation(line: 77, column: 11, scope: !3645)
!3649 = !DILocation(line: 78, column: 3, scope: !3645)
!3650 = !DILocation(line: 79, column: 3, scope: !3645)
!3651 = !DILocation(line: 80, column: 2, scope: !3645)
!3652 = !DILocation(line: 0, scope: !3637)
!3653 = !DILocation(line: 85, column: 21, scope: !3637)
!3654 = !{i32 0, i32 65536}
!3655 = !DILocation(line: 87, column: 3, scope: !3637)
!3656 = !DILocation(line: 88, column: 3, scope: !3637)
!3657 = !DILocation(line: 89, column: 3, scope: !3637)
!3658 = !DILocation(line: 90, column: 3, scope: !3637)
!3659 = !DILocation(line: 94, column: 39, scope: !3627)
!3660 = !DILocation(line: 94, column: 19, scope: !3627)
!3661 = !DILocation(line: 94, column: 5, scope: !3627)
!3662 = !DILocation(line: 94, column: 16, scope: !3627)
!3663 = !DILocation(line: 96, column: 1, scope: !3627)
!3664 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3576, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3665)
!3665 = !{!3666, !3667, !3668}
!3666 = !DILocalVariable(name: "h", arg: 1, scope: !3664, file: !142, line: 187, type: !2367)
!3667 = !DILocalVariable(name: "c", arg: 2, scope: !3664, file: !142, line: 187, type: !2372)
!3668 = !DILocalVariable(name: "prev", arg: 3, scope: !3664, file: !142, line: 188, type: !2372)
!3669 = !DILocation(line: 0, scope: !3664)
!3670 = !DILocation(line: 190, column: 2, scope: !3664)
!3671 = !DILocation(line: 191, column: 1, scope: !3664)
!3672 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3576, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3673)
!3673 = !{!3674, !3675, !3676}
!3674 = !DILocalVariable(name: "h", arg: 1, scope: !3672, file: !142, line: 193, type: !2367)
!3675 = !DILocalVariable(name: "c", arg: 2, scope: !3672, file: !142, line: 193, type: !2372)
!3676 = !DILocalVariable(name: "next", arg: 3, scope: !3672, file: !142, line: 194, type: !2372)
!3677 = !DILocation(line: 0, scope: !3672)
!3678 = !DILocation(line: 196, column: 2, scope: !3672)
!3679 = !DILocation(line: 197, column: 1, scope: !3672)
!3680 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3543, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3681)
!3681 = !{!3682, !3683}
!3682 = !DILocalVariable(name: "h", arg: 1, scope: !3680, file: !142, line: 177, type: !2367)
!3683 = !DILocalVariable(name: "c", arg: 2, scope: !3680, file: !142, line: 177, type: !2372)
!3684 = !DILocation(line: 0, scope: !3680)
!3685 = !DILocation(line: 179, column: 9, scope: !3680)
!3686 = !DILocation(line: 179, column: 2, scope: !3680)
!3687 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3688, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3690)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!2372, !2367, !2372, !141}
!3690 = !{!3691, !3692, !3693, !3694, !3695}
!3691 = !DILocalVariable(name: "h", arg: 1, scope: !3687, file: !142, line: 107, type: !2367)
!3692 = !DILocalVariable(name: "c", arg: 2, scope: !3687, file: !142, line: 107, type: !2372)
!3693 = !DILocalVariable(name: "f", arg: 3, scope: !3687, file: !142, line: 108, type: !141)
!3694 = !DILocalVariable(name: "buf", scope: !3687, file: !142, line: 110, type: !2362)
!3695 = !DILocalVariable(name: "cmem", scope: !3687, file: !142, line: 111, type: !102)
!3696 = !DILocation(line: 0, scope: !3687)
!3697 = !DILocation(line: 110, column: 22, scope: !3687)
!3698 = !DILocation(line: 111, column: 15, scope: !3687)
!3699 = !DILocation(line: 116, column: 11, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !142, line: 115, column: 9)
!3701 = distinct !DILexicalBlock(scope: !3687, file: !142, line: 113, column: 6)
!3702 = !DILocation(line: 116, column: 10, scope: !3700)
!3703 = !DILocation(line: 118, column: 1, scope: !3687)
!3704 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3705, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3707)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!2362, !2367}
!3707 = !{!3708}
!3708 = !DILocalVariable(name: "h", arg: 1, scope: !3704, file: !142, line: 101, type: !2367)
!3709 = !DILocation(line: 0, scope: !3704)
!3710 = !DILocation(line: 104, column: 9, scope: !3704)
!3711 = !DILocation(line: 104, column: 2, scope: !3704)
!3712 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3713, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{null, !2367, !2372, !141, !2372}
!3715 = !{!3716, !3717, !3718, !3719, !3720, !3721}
!3716 = !DILocalVariable(name: "h", arg: 1, scope: !3712, file: !142, line: 120, type: !2367)
!3717 = !DILocalVariable(name: "c", arg: 2, scope: !3712, file: !142, line: 120, type: !2372)
!3718 = !DILocalVariable(name: "f", arg: 3, scope: !3712, file: !142, line: 121, type: !141)
!3719 = !DILocalVariable(name: "val", arg: 4, scope: !3712, file: !142, line: 121, type: !2372)
!3720 = !DILocalVariable(name: "buf", scope: !3712, file: !142, line: 125, type: !2362)
!3721 = !DILocalVariable(name: "cmem", scope: !3712, file: !142, line: 126, type: !102)
!3722 = !DILocation(line: 0, scope: !3712)
!3723 = !DILocation(line: 125, column: 22, scope: !3712)
!3724 = !DILocation(line: 126, column: 15, scope: !3712)
!3725 = !DILocation(line: 133, column: 27, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !142, line: 131, column: 9)
!3727 = distinct !DILexicalBlock(scope: !3712, file: !142, line: 128, column: 6)
!3728 = !DILocation(line: 133, column: 4, scope: !3726)
!3729 = !DILocation(line: 133, column: 3, scope: !3726)
!3730 = !DILocation(line: 133, column: 25, scope: !3726)
!3731 = !DILocation(line: 135, column: 1, scope: !3712)
!3732 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3733, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!3495, !2367}
!3735 = !{!3736}
!3736 = !DILocalVariable(name: "h", arg: 1, scope: !3732, file: !142, line: 240, type: !2367)
!3737 = !DILocation(line: 0, scope: !3732)
!3738 = !DILocation(line: 242, column: 9, scope: !3732)
!3739 = !DILocation(line: 242, column: 2, scope: !3732)
!3740 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3741, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3743)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!3495, !2367, !120}
!3743 = !{!3744, !3745}
!3744 = !DILocalVariable(name: "h", arg: 1, scope: !3740, file: !142, line: 235, type: !2367)
!3745 = !DILocalVariable(name: "bytes", arg: 2, scope: !3740, file: !142, line: 235, type: !120)
!3746 = !DILocation(line: 0, scope: !3740)
!3747 = !DILocation(line: 237, column: 39, scope: !3740)
!3748 = !DILocation(line: 237, column: 9, scope: !3740)
!3749 = !DILocation(line: 237, column: 2, scope: !3740)
!3750 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3751, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3753)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!3495, !120}
!3753 = !{!3754}
!3754 = !DILocalVariable(name: "bytes", arg: 1, scope: !3750, file: !142, line: 230, type: !120)
!3755 = !DILocation(line: 0, scope: !3750)
!3756 = !DILocation(line: 232, column: 29, scope: !3750)
!3757 = !DILocation(line: 232, column: 35, scope: !3750)
!3758 = !DILocation(line: 232, column: 2, scope: !3750)
!3759 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3760, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3762)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{null, !2367, !2372, !3495}
!3762 = !{!3763, !3764, !3765}
!3763 = !DILocalVariable(name: "h", arg: 1, scope: !3759, file: !142, line: 172, type: !2367)
!3764 = !DILocalVariable(name: "c", arg: 2, scope: !3759, file: !142, line: 172, type: !2372)
!3765 = !DILocalVariable(name: "size", arg: 3, scope: !3759, file: !142, line: 172, type: !3495)
!3766 = !DILocation(line: 0, scope: !3759)
!3767 = !DILocation(line: 174, column: 38, scope: !3759)
!3768 = !DILocation(line: 174, column: 2, scope: !3759)
!3769 = !DILocation(line: 175, column: 1, scope: !3759)
!3770 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3760, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3771)
!3771 = !{!3772, !3773, !3774}
!3772 = !DILocalVariable(name: "h", arg: 1, scope: !3770, file: !142, line: 209, type: !2367)
!3773 = !DILocalVariable(name: "c", arg: 2, scope: !3770, file: !142, line: 209, type: !2372)
!3774 = !DILocalVariable(name: "size", arg: 3, scope: !3770, file: !142, line: 210, type: !3495)
!3775 = !DILocation(line: 0, scope: !3770)
!3776 = !DILocation(line: 212, column: 2, scope: !3770)
!3777 = !DILocation(line: 213, column: 1, scope: !3770)
!3778 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3432, file: !3432, line: 34, type: !3628, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3779)
!3779 = !{!3780, !3781, !3782, !3783, !3784, !3787}
!3780 = !DILocalVariable(name: "h", arg: 1, scope: !3778, file: !3432, line: 34, type: !2367)
!3781 = !DILocalVariable(name: "c", arg: 2, scope: !3778, file: !3432, line: 34, type: !2372)
!3782 = !DILocalVariable(name: "bidx", arg: 3, scope: !3778, file: !3432, line: 34, type: !103)
!3783 = !DILocalVariable(name: "b", scope: !3778, file: !3432, line: 36, type: !3635)
!3784 = !DILocalVariable(name: "first", scope: !3785, file: !3432, line: 47, type: !2372)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !3432, line: 46, column: 9)
!3786 = distinct !DILexicalBlock(scope: !3778, file: !3432, line: 42, column: 6)
!3787 = !DILocalVariable(name: "second", scope: !3785, file: !3432, line: 48, type: !2372)
!3788 = !DILocation(line: 0, scope: !3778)
!3789 = !DILocation(line: 36, column: 29, scope: !3778)
!3790 = !DILocation(line: 42, column: 6, scope: !3786)
!3791 = !DILocation(line: 42, column: 28, scope: !3786)
!3792 = !DILocation(line: 42, column: 6, scope: !3778)
!3793 = !DILocation(line: 44, column: 24, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3786, file: !3432, line: 42, column: 34)
!3795 = !DILocation(line: 44, column: 23, scope: !3794)
!3796 = !DILocation(line: 44, column: 6, scope: !3794)
!3797 = !DILocation(line: 44, column: 20, scope: !3794)
!3798 = !DILocation(line: 45, column: 6, scope: !3794)
!3799 = !DILocation(line: 45, column: 11, scope: !3794)
!3800 = !DILocation(line: 46, column: 2, scope: !3794)
!3801 = !DILocation(line: 47, column: 21, scope: !3785)
!3802 = !DILocation(line: 0, scope: !3785)
!3803 = !DILocation(line: 50, column: 6, scope: !3785)
!3804 = !DILocation(line: 50, column: 11, scope: !3785)
!3805 = !DILocation(line: 51, column: 3, scope: !3785)
!3806 = !DILocation(line: 52, column: 3, scope: !3785)
!3807 = !DILocation(line: 56, column: 39, scope: !3778)
!3808 = !DILocation(line: 56, column: 19, scope: !3778)
!3809 = !DILocation(line: 56, column: 5, scope: !3778)
!3810 = !DILocation(line: 56, column: 16, scope: !3778)
!3811 = !DILocation(line: 58, column: 1, scope: !3778)
!3812 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3543, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3813)
!3813 = !{!3814, !3815}
!3814 = !DILocalVariable(name: "h", arg: 1, scope: !3812, file: !142, line: 182, type: !2367)
!3815 = !DILocalVariable(name: "c", arg: 2, scope: !3812, file: !142, line: 182, type: !2372)
!3816 = !DILocation(line: 0, scope: !3812)
!3817 = !DILocation(line: 184, column: 9, scope: !3812)
!3818 = !DILocation(line: 184, column: 2, scope: !3812)
!3819 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3432, file: !3432, line: 200, type: !3820, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3822)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!120, !3435, !102}
!3822 = !{!3823, !3824, !3825, !3826, !3827, !3828, !3829}
!3823 = !DILocalVariable(name: "heap", arg: 1, scope: !3819, file: !3432, line: 200, type: !3435)
!3824 = !DILocalVariable(name: "mem", arg: 2, scope: !3819, file: !3432, line: 200, type: !102)
!3825 = !DILocalVariable(name: "h", scope: !3819, file: !3432, line: 202, type: !2367)
!3826 = !DILocalVariable(name: "c", scope: !3819, file: !3432, line: 203, type: !2372)
!3827 = !DILocalVariable(name: "addr", scope: !3819, file: !3432, line: 204, type: !120)
!3828 = !DILocalVariable(name: "chunk_base", scope: !3819, file: !3432, line: 205, type: !120)
!3829 = !DILocalVariable(name: "chunk_sz", scope: !3819, file: !3432, line: 206, type: !120)
!3830 = !DILocation(line: 0, scope: !3819)
!3831 = !DILocation(line: 202, column: 27, scope: !3819)
!3832 = !DILocation(line: 203, column: 16, scope: !3819)
!3833 = !DILocation(line: 204, column: 16, scope: !3819)
!3834 = !DILocation(line: 205, column: 31, scope: !3819)
!3835 = !DILocation(line: 205, column: 22, scope: !3819)
!3836 = !DILocation(line: 206, column: 20, scope: !3819)
!3837 = !DILocation(line: 206, column: 37, scope: !3819)
!3838 = !DILocation(line: 208, column: 26, scope: !3819)
!3839 = !DILocation(line: 208, column: 18, scope: !3819)
!3840 = !DILocation(line: 208, column: 2, scope: !3819)
!3841 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3432, file: !3432, line: 263, type: !3842, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3844)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!102, !3435, !120}
!3844 = !{!3845, !3846, !3847, !3848, !3849, !3850}
!3845 = !DILocalVariable(name: "heap", arg: 1, scope: !3841, file: !3432, line: 263, type: !3435)
!3846 = !DILocalVariable(name: "bytes", arg: 2, scope: !3841, file: !3432, line: 263, type: !120)
!3847 = !DILocalVariable(name: "h", scope: !3841, file: !3432, line: 265, type: !2367)
!3848 = !DILocalVariable(name: "mem", scope: !3841, file: !3432, line: 266, type: !102)
!3849 = !DILocalVariable(name: "chunk_sz", scope: !3841, file: !3432, line: 272, type: !3495)
!3850 = !DILocalVariable(name: "c", scope: !3841, file: !3432, line: 273, type: !2372)
!3851 = !DILocation(line: 0, scope: !3841)
!3852 = !DILocation(line: 265, column: 27, scope: !3841)
!3853 = !DILocation(line: 268, column: 12, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3841, file: !3432, line: 268, column: 6)
!3855 = !DILocation(line: 268, column: 18, scope: !3854)
!3856 = !DILocation(line: 268, column: 21, scope: !3854)
!3857 = !DILocation(line: 268, column: 6, scope: !3841)
!3858 = !DILocation(line: 272, column: 23, scope: !3841)
!3859 = !DILocation(line: 273, column: 16, scope: !3841)
!3860 = !DILocation(line: 274, column: 8, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3841, file: !3432, line: 274, column: 6)
!3862 = !DILocation(line: 274, column: 6, scope: !3841)
!3863 = !DILocation(line: 279, column: 6, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3841, file: !3432, line: 279, column: 6)
!3865 = !DILocation(line: 279, column: 23, scope: !3864)
!3866 = !DILocation(line: 279, column: 6, scope: !3841)
!3867 = !DILocation(line: 280, column: 24, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3864, file: !3432, line: 279, column: 35)
!3869 = !DILocation(line: 280, column: 3, scope: !3868)
!3870 = !DILocation(line: 281, column: 3, scope: !3868)
!3871 = !DILocation(line: 282, column: 2, scope: !3868)
!3872 = !DILocation(line: 284, column: 2, scope: !3841)
!3873 = !DILocation(line: 286, column: 8, scope: !3841)
!3874 = !DILocation(line: 289, column: 50, scope: !3841)
!3875 = !DILocation(line: 289, column: 30, scope: !3841)
!3876 = !{i32 -4, i32 262133}
!3877 = !DILocation(line: 289, column: 2, scope: !3841)
!3878 = !DILocation(line: 298, column: 2, scope: !3841)
!3879 = !DILocation(line: 299, column: 1, scope: !3841)
!3880 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3881, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!211, !2367, !120}
!3883 = !{!3884, !3885}
!3884 = !DILocalVariable(name: "h", arg: 1, scope: !3880, file: !142, line: 256, type: !2367)
!3885 = !DILocalVariable(name: "bytes", arg: 2, scope: !3880, file: !142, line: 256, type: !120)
!3886 = !DILocation(line: 0, scope: !3880)
!3887 = !DILocation(line: 262, column: 16, scope: !3880)
!3888 = !DILocation(line: 262, column: 36, scope: !3880)
!3889 = !DILocation(line: 262, column: 30, scope: !3880)
!3890 = !DILocation(line: 262, column: 2, scope: !3880)
!3891 = distinct !DISubprogram(name: "alloc_chunk", scope: !3432, file: !3432, line: 211, type: !3892, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3894)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!2372, !2367, !3495}
!3894 = !{!3895, !3896, !3897, !3898, !3899, !3902, !3903, !3905, !3906, !3909}
!3895 = !DILocalVariable(name: "h", arg: 1, scope: !3891, file: !3432, line: 211, type: !2367)
!3896 = !DILocalVariable(name: "sz", arg: 2, scope: !3891, file: !3432, line: 211, type: !3495)
!3897 = !DILocalVariable(name: "bi", scope: !3891, file: !3432, line: 213, type: !103)
!3898 = !DILocalVariable(name: "b", scope: !3891, file: !3432, line: 214, type: !3635)
!3899 = !DILocalVariable(name: "first", scope: !3900, file: !3432, line: 233, type: !2372)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !3432, line: 232, column: 15)
!3901 = distinct !DILexicalBlock(scope: !3891, file: !3432, line: 232, column: 6)
!3902 = !DILocalVariable(name: "i", scope: !3900, file: !3432, line: 234, type: !103)
!3903 = !DILocalVariable(name: "c", scope: !3904, file: !3432, line: 236, type: !2372)
!3904 = distinct !DILexicalBlock(scope: !3900, file: !3432, line: 235, column: 6)
!3905 = !DILocalVariable(name: "bmask", scope: !3891, file: !3432, line: 249, type: !137)
!3906 = !DILocalVariable(name: "minbucket", scope: !3907, file: !3432, line: 252, type: !103)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !3432, line: 251, column: 19)
!3908 = distinct !DILexicalBlock(scope: !3891, file: !3432, line: 251, column: 6)
!3909 = !DILocalVariable(name: "c", scope: !3907, file: !3432, line: 253, type: !2372)
!3910 = !DILocation(line: 0, scope: !3891)
!3911 = !DILocation(line: 213, column: 11, scope: !3891)
!3912 = !DILocation(line: 232, column: 9, scope: !3901)
!3913 = !DILocation(line: 232, column: 6, scope: !3901)
!3914 = !DILocation(line: 232, column: 6, scope: !3891)
!3915 = !DILocation(line: 236, column: 21, scope: !3904)
!3916 = !DILocation(line: 0, scope: !3900)
!3917 = !DILocation(line: 0, scope: !3904)
!3918 = !DILocation(line: 237, column: 8, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3904, file: !3432, line: 237, column: 8)
!3920 = !DILocation(line: 237, column: 25, scope: !3919)
!3921 = !DILocation(line: 237, column: 8, scope: !3904)
!3922 = !DILocation(line: 238, column: 5, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3919, file: !3432, line: 237, column: 32)
!3924 = !DILocation(line: 241, column: 14, scope: !3904)
!3925 = !DILocation(line: 241, column: 12, scope: !3904)
!3926 = !DILocation(line: 243, column: 12, scope: !3900)
!3927 = !DILocation(line: 243, column: 16, scope: !3900)
!3928 = distinct !{!3928, !3929, !3930}
!3929 = !DILocation(line: 235, column: 3, scope: !3900)
!3930 = !DILocation(line: 243, column: 35, scope: !3900)
!3931 = !DILocation(line: 249, column: 22, scope: !3891)
!3932 = !DILocation(line: 249, column: 39, scope: !3891)
!3933 = !DILocation(line: 249, column: 36, scope: !3891)
!3934 = !DILocation(line: 251, column: 12, scope: !3908)
!3935 = !DILocation(line: 251, column: 6, scope: !3891)
!3936 = !DILocation(line: 252, column: 19, scope: !3907)
!3937 = !DILocation(line: 0, scope: !3907)
!3938 = !DILocation(line: 253, column: 39, scope: !3907)
!3939 = !DILocation(line: 255, column: 3, scope: !3907)
!3940 = !DILocation(line: 261, column: 1, scope: !3891)
!3941 = distinct !DISubprogram(name: "split_chunks", scope: !3432, file: !3432, line: 109, type: !3576, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3942)
!3942 = !{!3943, !3944, !3945, !3946, !3947, !3948}
!3943 = !DILocalVariable(name: "h", arg: 1, scope: !3941, file: !3432, line: 109, type: !2367)
!3944 = !DILocalVariable(name: "lc", arg: 2, scope: !3941, file: !3432, line: 109, type: !2372)
!3945 = !DILocalVariable(name: "rc", arg: 3, scope: !3941, file: !3432, line: 109, type: !2372)
!3946 = !DILocalVariable(name: "sz0", scope: !3941, file: !3432, line: 114, type: !3495)
!3947 = !DILocalVariable(name: "lsz", scope: !3941, file: !3432, line: 115, type: !3495)
!3948 = !DILocalVariable(name: "rsz", scope: !3941, file: !3432, line: 116, type: !3495)
!3949 = !DILocation(line: 0, scope: !3941)
!3950 = !DILocation(line: 114, column: 18, scope: !3941)
!3951 = !DILocation(line: 115, column: 21, scope: !3941)
!3952 = !DILocation(line: 116, column: 22, scope: !3941)
!3953 = !DILocation(line: 118, column: 2, scope: !3941)
!3954 = !DILocation(line: 119, column: 2, scope: !3941)
!3955 = !DILocation(line: 120, column: 2, scope: !3941)
!3956 = !DILocation(line: 121, column: 25, scope: !3941)
!3957 = !DILocation(line: 121, column: 2, scope: !3941)
!3958 = !DILocation(line: 122, column: 1, scope: !3941)
!3959 = distinct !DISubprogram(name: "chunk_mem", scope: !3432, file: !3432, line: 24, type: !3960, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3962)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!102, !2367, !2372}
!3962 = !{!3963, !3964, !3965, !3966}
!3963 = !DILocalVariable(name: "h", arg: 1, scope: !3959, file: !3432, line: 24, type: !2367)
!3964 = !DILocalVariable(name: "c", arg: 2, scope: !3959, file: !3432, line: 24, type: !2372)
!3965 = !DILocalVariable(name: "buf", scope: !3959, file: !3432, line: 26, type: !2362)
!3966 = !DILocalVariable(name: "ret", scope: !3959, file: !3432, line: 27, type: !1856)
!3967 = !DILocation(line: 0, scope: !3959)
!3968 = !DILocation(line: 26, column: 22, scope: !3959)
!3969 = !DILocation(line: 27, column: 38, scope: !3959)
!3970 = !DILocation(line: 31, column: 2, scope: !3959)
!3971 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3432, file: !3432, line: 17, type: !3972, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3974)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !2367, !120}
!3974 = !{!3975, !3976}
!3975 = !DILocalVariable(name: "h", arg: 1, scope: !3971, file: !3432, line: 17, type: !2367)
!3976 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3971, file: !3432, line: 17, type: !120)
!3977 = !DILocation(line: 0, scope: !3971)
!3978 = !DILocation(line: 19, column: 5, scope: !3971)
!3979 = !DILocation(line: 19, column: 21, scope: !3971)
!3980 = !DILocation(line: 20, column: 27, scope: !3971)
!3981 = !DILocation(line: 20, column: 25, scope: !3971)
!3982 = !DILocation(line: 21, column: 1, scope: !3971)
!3983 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3432, file: !3432, line: 301, type: !3984, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !3986)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!102, !3435, !120, !120}
!3986 = !{!3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998}
!3987 = !DILocalVariable(name: "heap", arg: 1, scope: !3983, file: !3432, line: 301, type: !3435)
!3988 = !DILocalVariable(name: "align", arg: 2, scope: !3983, file: !3432, line: 301, type: !120)
!3989 = !DILocalVariable(name: "bytes", arg: 3, scope: !3983, file: !3432, line: 301, type: !120)
!3990 = !DILocalVariable(name: "h", scope: !3983, file: !3432, line: 303, type: !2367)
!3991 = !DILocalVariable(name: "gap", scope: !3983, file: !3432, line: 304, type: !120)
!3992 = !DILocalVariable(name: "rew", scope: !3983, file: !3432, line: 304, type: !120)
!3993 = !DILocalVariable(name: "padded_sz", scope: !3983, file: !3432, line: 335, type: !3495)
!3994 = !DILocalVariable(name: "c0", scope: !3983, file: !3432, line: 336, type: !2372)
!3995 = !DILocalVariable(name: "mem", scope: !3983, file: !3432, line: 341, type: !1856)
!3996 = !DILocalVariable(name: "end", scope: !3983, file: !3432, line: 345, type: !2362)
!3997 = !DILocalVariable(name: "c", scope: !3983, file: !3432, line: 348, type: !2372)
!3998 = !DILocalVariable(name: "c_end", scope: !3983, file: !3432, line: 349, type: !2372)
!3999 = !DILocation(line: 0, scope: !3983)
!4000 = !DILocation(line: 303, column: 27, scope: !3983)
!4001 = !DILocation(line: 313, column: 16, scope: !3983)
!4002 = !DILocation(line: 313, column: 14, scope: !3983)
!4003 = !DILocation(line: 314, column: 12, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3983, file: !3432, line: 314, column: 6)
!4005 = !DILocation(line: 314, column: 6, scope: !3983)
!4006 = !DILocation(line: 315, column: 9, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4004, file: !3432, line: 314, column: 20)
!4008 = !DILocation(line: 316, column: 9, scope: !4007)
!4009 = !DILocation(line: 318, column: 13, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !3432, line: 318, column: 7)
!4011 = distinct !DILexicalBlock(scope: !4004, file: !3432, line: 317, column: 9)
!4012 = !DILocation(line: 318, column: 7, scope: !4011)
!4013 = !DILocation(line: 319, column: 11, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4010, file: !3432, line: 318, column: 39)
!4015 = !DILocation(line: 319, column: 4, scope: !4014)
!4016 = !DILocation(line: 0, scope: !4004)
!4017 = !DILocation(line: 326, column: 12, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3983, file: !3432, line: 326, column: 6)
!4019 = !DILocation(line: 326, column: 17, scope: !4018)
!4020 = !DILocation(line: 326, column: 20, scope: !4018)
!4021 = !DILocation(line: 326, column: 6, scope: !3983)
!4022 = !DILocation(line: 335, column: 50, scope: !3983)
!4023 = !DILocation(line: 335, column: 58, scope: !3983)
!4024 = !DILocation(line: 335, column: 24, scope: !3983)
!4025 = !DILocation(line: 336, column: 17, scope: !3983)
!4026 = !DILocation(line: 338, column: 9, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3983, file: !3432, line: 338, column: 6)
!4028 = !DILocation(line: 338, column: 6, scope: !3983)
!4029 = !DILocation(line: 341, column: 17, scope: !3983)
!4030 = !DILocation(line: 344, column: 20, scope: !3983)
!4031 = !DILocation(line: 344, column: 8, scope: !3983)
!4032 = !DILocation(line: 344, column: 47, scope: !3983)
!4033 = !DILocation(line: 345, column: 39, scope: !3983)
!4034 = !DILocation(line: 348, column: 16, scope: !3983)
!4035 = !DILocation(line: 349, column: 26, scope: !3983)
!4036 = !DILocation(line: 349, column: 24, scope: !3983)
!4037 = !DILocation(line: 353, column: 8, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !3983, file: !3432, line: 353, column: 6)
!4039 = !DILocation(line: 353, column: 6, scope: !3983)
!4040 = !DILocation(line: 354, column: 3, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4038, file: !3432, line: 353, column: 14)
!4042 = !DILocation(line: 355, column: 3, scope: !4041)
!4043 = !DILocation(line: 356, column: 2, scope: !4041)
!4044 = !DILocation(line: 359, column: 6, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !3983, file: !3432, line: 359, column: 6)
!4046 = !DILocation(line: 359, column: 24, scope: !4045)
!4047 = !DILocation(line: 359, column: 6, scope: !3983)
!4048 = !DILocation(line: 360, column: 3, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4045, file: !3432, line: 359, column: 33)
!4050 = !DILocation(line: 361, column: 3, scope: !4049)
!4051 = !DILocation(line: 362, column: 2, scope: !4049)
!4052 = !DILocation(line: 364, column: 2, scope: !3983)
!4053 = !DILocation(line: 367, column: 50, scope: !3983)
!4054 = !DILocation(line: 367, column: 30, scope: !3983)
!4055 = !DILocation(line: 367, column: 2, scope: !3983)
!4056 = !DILocation(line: 377, column: 1, scope: !3983)
!4057 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3432, file: !3432, line: 379, type: !4058, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !4060)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!102, !3435, !102, !120, !120}
!4060 = !{!4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4076, !4077}
!4061 = !DILocalVariable(name: "heap", arg: 1, scope: !4057, file: !3432, line: 379, type: !3435)
!4062 = !DILocalVariable(name: "ptr", arg: 2, scope: !4057, file: !3432, line: 379, type: !102)
!4063 = !DILocalVariable(name: "align", arg: 3, scope: !4057, file: !3432, line: 380, type: !120)
!4064 = !DILocalVariable(name: "bytes", arg: 4, scope: !4057, file: !3432, line: 380, type: !120)
!4065 = !DILocalVariable(name: "h", scope: !4057, file: !3432, line: 382, type: !2367)
!4066 = !DILocalVariable(name: "c", scope: !4057, file: !3432, line: 399, type: !2372)
!4067 = !DILocalVariable(name: "rc", scope: !4057, file: !3432, line: 400, type: !2372)
!4068 = !DILocalVariable(name: "align_gap", scope: !4057, file: !3432, line: 401, type: !120)
!4069 = !DILocalVariable(name: "chunks_need", scope: !4057, file: !3432, line: 402, type: !3495)
!4070 = !DILocalVariable(name: "split_size", scope: !4071, file: !3432, line: 435, type: !3495)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !3432, line: 433, column: 61)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !3432, line: 432, column: 13)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !3432, line: 409, column: 13)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !3432, line: 406, column: 13)
!4075 = distinct !DILexicalBlock(scope: !4057, file: !3432, line: 404, column: 6)
!4076 = !DILocalVariable(name: "ptr2", scope: !4057, file: !3432, line: 474, type: !102)
!4077 = !DILocalVariable(name: "prev_size", scope: !4078, file: !3432, line: 477, type: !120)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !3432, line: 476, column: 20)
!4079 = distinct !DILexicalBlock(scope: !4057, file: !3432, line: 476, column: 6)
!4080 = !DILocation(line: 0, scope: !4057)
!4081 = !DILocation(line: 382, column: 27, scope: !4057)
!4082 = !DILocation(line: 385, column: 10, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4057, file: !3432, line: 385, column: 6)
!4084 = !DILocation(line: 385, column: 6, scope: !4057)
!4085 = !DILocation(line: 386, column: 10, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4083, file: !3432, line: 385, column: 19)
!4087 = !DILocation(line: 386, column: 3, scope: !4086)
!4088 = !DILocation(line: 388, column: 12, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4057, file: !3432, line: 388, column: 6)
!4090 = !DILocation(line: 388, column: 6, scope: !4057)
!4091 = !DILocation(line: 389, column: 3, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4089, file: !3432, line: 388, column: 18)
!4093 = !DILocation(line: 390, column: 3, scope: !4092)
!4094 = !DILocation(line: 395, column: 6, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4057, file: !3432, line: 395, column: 6)
!4096 = !DILocation(line: 395, column: 6, scope: !4057)
!4097 = !DILocation(line: 399, column: 16, scope: !4057)
!4098 = !DILocation(line: 400, column: 17, scope: !4057)
!4099 = !DILocation(line: 401, column: 49, scope: !4057)
!4100 = !DILocation(line: 401, column: 36, scope: !4057)
!4101 = !DILocation(line: 402, column: 52, scope: !4057)
!4102 = !DILocation(line: 402, column: 26, scope: !4057)
!4103 = !DILocation(line: 404, column: 6, scope: !4075)
!4104 = !DILocation(line: 404, column: 12, scope: !4075)
!4105 = !DILocation(line: 404, column: 40, scope: !4075)
!4106 = !DILocation(line: 404, column: 31, scope: !4075)
!4107 = !DILocation(line: 404, column: 6, scope: !4057)
!4108 = !DILocation(line: 406, column: 13, scope: !4074)
!4109 = !DILocation(line: 406, column: 30, scope: !4074)
!4110 = !DILocation(line: 406, column: 13, scope: !4075)
!4111 = !DILocation(line: 409, column: 30, scope: !4073)
!4112 = !DILocation(line: 409, column: 13, scope: !4074)
!4113 = !DILocation(line: 417, column: 22, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4073, file: !3432, line: 409, column: 45)
!4115 = !DILocation(line: 417, column: 37, scope: !4114)
!4116 = !DILocation(line: 416, column: 6, scope: !4114)
!4117 = !DILocation(line: 416, column: 22, scope: !4114)
!4118 = !DILocation(line: 420, column: 24, scope: !4114)
!4119 = !DILocation(line: 420, column: 3, scope: !4114)
!4120 = !DILocation(line: 421, column: 3, scope: !4114)
!4121 = !DILocation(line: 422, column: 3, scope: !4114)
!4122 = !DILocation(line: 431, column: 3, scope: !4114)
!4123 = !DILocation(line: 432, column: 14, scope: !4072)
!4124 = !DILocation(line: 432, column: 32, scope: !4072)
!4125 = !DILocation(line: 433, column: 26, scope: !4072)
!4126 = !DILocation(line: 433, column: 24, scope: !4072)
!4127 = !DILocation(line: 433, column: 44, scope: !4072)
!4128 = !DILocation(line: 432, column: 13, scope: !4073)
!4129 = !DILocation(line: 435, column: 38, scope: !4071)
!4130 = !DILocation(line: 0, scope: !4071)
!4131 = !DILocation(line: 442, column: 42, scope: !4071)
!4132 = !DILocation(line: 442, column: 3, scope: !4071)
!4133 = !DILocation(line: 445, column: 3, scope: !4071)
!4134 = !DILocation(line: 447, column: 20, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4071, file: !3432, line: 447, column: 7)
!4136 = !DILocation(line: 447, column: 18, scope: !4135)
!4137 = !DILocation(line: 447, column: 7, scope: !4071)
!4138 = !DILocation(line: 448, column: 27, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4135, file: !3432, line: 447, column: 39)
!4140 = !DILocation(line: 448, column: 4, scope: !4139)
!4141 = !DILocation(line: 449, column: 4, scope: !4139)
!4142 = !DILocation(line: 450, column: 3, scope: !4139)
!4143 = !DILocation(line: 452, column: 3, scope: !4071)
!4144 = !DILocation(line: 453, column: 3, scope: !4071)
!4145 = !DILocation(line: 474, column: 15, scope: !4057)
!4146 = !DILocation(line: 476, column: 11, scope: !4079)
!4147 = !DILocation(line: 476, column: 6, scope: !4057)
!4148 = !DILocation(line: 477, column: 42, scope: !4078)
!4149 = !DILocation(line: 477, column: 22, scope: !4078)
!4150 = !DILocation(line: 477, column: 60, scope: !4078)
!4151 = !DILocation(line: 0, scope: !4078)
!4152 = !DILocation(line: 479, column: 21, scope: !4078)
!4153 = !DILocation(line: 479, column: 3, scope: !4078)
!4154 = !DILocation(line: 480, column: 3, scope: !4078)
!4155 = !DILocation(line: 481, column: 2, scope: !4078)
!4156 = !DILocation(line: 483, column: 1, scope: !4057)
!4157 = distinct !DISubprogram(name: "sys_heap_init", scope: !3432, file: !3432, line: 485, type: !4158, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !4160)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{null, !3435, !102, !120}
!4160 = !{!4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170}
!4161 = !DILocalVariable(name: "heap", arg: 1, scope: !4157, file: !3432, line: 485, type: !3435)
!4162 = !DILocalVariable(name: "mem", arg: 2, scope: !4157, file: !3432, line: 485, type: !102)
!4163 = !DILocalVariable(name: "bytes", arg: 3, scope: !4157, file: !3432, line: 485, type: !120)
!4164 = !DILocalVariable(name: "addr", scope: !4157, file: !3432, line: 502, type: !22)
!4165 = !DILocalVariable(name: "end", scope: !4157, file: !3432, line: 503, type: !22)
!4166 = !DILocalVariable(name: "heap_sz", scope: !4157, file: !3432, line: 504, type: !3495)
!4167 = !DILocalVariable(name: "h", scope: !4157, file: !3432, line: 509, type: !2367)
!4168 = !DILocalVariable(name: "nb_buckets", scope: !4157, file: !3432, line: 520, type: !103)
!4169 = !DILocalVariable(name: "chunk0_size", scope: !4157, file: !3432, line: 521, type: !3495)
!4170 = !DILocalVariable(name: "i", scope: !4171, file: !3432, line: 526, type: !103)
!4171 = distinct !DILexicalBlock(scope: !4157, file: !3432, line: 526, column: 2)
!4172 = !DILocation(line: 0, scope: !4157)
!4173 = !DILocation(line: 499, column: 8, scope: !4157)
!4174 = !DILocation(line: 502, column: 19, scope: !4157)
!4175 = !DILocation(line: 503, column: 18, scope: !4157)
!4176 = !DILocation(line: 504, column: 27, scope: !4157)
!4177 = !DILocation(line: 504, column: 35, scope: !4157)
!4178 = !DILocation(line: 509, column: 21, scope: !4157)
!4179 = !DILocation(line: 510, column: 8, scope: !4157)
!4180 = !DILocation(line: 510, column: 13, scope: !4157)
!4181 = !DILocation(line: 511, column: 5, scope: !4157)
!4182 = !DILocation(line: 511, column: 15, scope: !4157)
!4183 = !DILocation(line: 512, column: 5, scope: !4157)
!4184 = !DILocation(line: 512, column: 19, scope: !4157)
!4185 = !DILocation(line: 515, column: 5, scope: !4157)
!4186 = !DILocation(line: 515, column: 16, scope: !4157)
!4187 = !DILocation(line: 516, column: 5, scope: !4157)
!4188 = !DILocation(line: 516, column: 21, scope: !4157)
!4189 = !DILocation(line: 517, column: 5, scope: !4157)
!4190 = !DILocation(line: 517, column: 25, scope: !4157)
!4191 = !DILocation(line: 520, column: 19, scope: !4157)
!4192 = !DILocation(line: 522, column: 21, scope: !4157)
!4193 = !DILocation(line: 521, column: 56, scope: !4157)
!4194 = !DILocation(line: 521, column: 26, scope: !4157)
!4195 = !DILocation(line: 0, scope: !4171)
!4196 = !DILocation(line: 526, column: 20, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4171, file: !3432, line: 526, column: 2)
!4198 = !DILocation(line: 526, column: 2, scope: !4171)
!4199 = !DILocation(line: 531, column: 2, scope: !4157)
!4200 = !DILocation(line: 532, column: 2, scope: !4157)
!4201 = !DILocation(line: 533, column: 2, scope: !4157)
!4202 = !DILocation(line: 536, column: 41, scope: !4157)
!4203 = !DILocation(line: 536, column: 2, scope: !4157)
!4204 = !DILocation(line: 537, column: 2, scope: !4157)
!4205 = !DILocation(line: 540, column: 2, scope: !4157)
!4206 = !DILocation(line: 541, column: 2, scope: !4157)
!4207 = !DILocation(line: 542, column: 2, scope: !4157)
!4208 = !DILocation(line: 544, column: 2, scope: !4157)
!4209 = !DILocation(line: 545, column: 1, scope: !4157)
!4210 = !DILocation(line: 527, column: 17, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4197, file: !3432, line: 526, column: 39)
!4212 = !DILocation(line: 527, column: 22, scope: !4211)
!4213 = !DILocation(line: 526, column: 35, scope: !4197)
!4214 = distinct !{!4214, !4198, !4215}
!4215 = !DILocation(line: 528, column: 2, scope: !4171)
!4216 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4217, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4239)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!211, !4219}
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 32)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4221)
!4221 = !{!4222, !4237, !4238}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4220, file: !113, line: 57, baseType: !4223, size: 32)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 32)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4225)
!4225 = !{!4226, !4227, !4228, !4229, !4230, !4231, !4232}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4224, file: !142, line: 69, baseType: !2371, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4224, file: !142, line: 70, baseType: !2372, size: 32, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4224, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4224, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4224, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4224, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4224, file: !142, line: 77, baseType: !4233, offset: 224)
!4233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4234, elements: !2383)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4235)
!4235 = !{!4236}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4234, file: !142, line: 65, baseType: !2372, size: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4220, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4220, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4239 = !{!4240, !4241, !4242, !4243, !4244, !4245, !4251, !4253, !4256, !4257, !4258, !4259, !4260, !4262, !4265}
!4240 = !DILocalVariable(name: "heap", arg: 1, scope: !4216, file: !134, line: 88, type: !4219)
!4241 = !DILocalVariable(name: "h", scope: !4216, file: !134, line: 90, type: !4223)
!4242 = !DILocalVariable(name: "c", scope: !4216, file: !134, line: 91, type: !2372)
!4243 = !DILocalVariable(name: "allocated_bytes", scope: !4216, file: !134, line: 112, type: !120)
!4244 = !DILocalVariable(name: "free_bytes", scope: !4216, file: !134, line: 112, type: !120)
!4245 = !DILocalVariable(name: "stat", scope: !4216, file: !134, line: 113, type: !4246)
!4246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !3093, line: 24, size: 96, elements: !4247)
!4247 = !{!4248, !4249, !4250}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4246, file: !3093, line: 25, baseType: !120, size: 32)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4246, file: !3093, line: 26, baseType: !120, size: 32, offset: 32)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4246, file: !3093, line: 27, baseType: !120, size: 32, offset: 64)
!4251 = !DILocalVariable(name: "b", scope: !4252, file: !134, line: 127, type: !103)
!4252 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 127, column: 2)
!4253 = !DILocalVariable(name: "c0", scope: !4254, file: !134, line: 128, type: !2372)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !134, line: 127, column: 57)
!4255 = distinct !DILexicalBlock(scope: !4252, file: !134, line: 127, column: 2)
!4256 = !DILocalVariable(name: "n", scope: !4254, file: !134, line: 129, type: !137)
!4257 = !DILocalVariable(name: "empty", scope: !4254, file: !134, line: 141, type: !211)
!4258 = !DILocalVariable(name: "zero", scope: !4254, file: !134, line: 142, type: !211)
!4259 = !DILocalVariable(name: "prev_chunk", scope: !4216, file: !134, line: 159, type: !2372)
!4260 = !DILocalVariable(name: "b", scope: !4261, file: !134, line: 179, type: !103)
!4261 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 179, column: 2)
!4262 = !DILocalVariable(name: "c0", scope: !4263, file: !134, line: 180, type: !2372)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !134, line: 179, column: 57)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !134, line: 179, column: 2)
!4265 = !DILocalVariable(name: "n", scope: !4263, file: !134, line: 181, type: !103)
!4266 = !DILocation(line: 0, scope: !4216)
!4267 = !DILocation(line: 90, column: 27, scope: !4216)
!4268 = !DILocation(line: 96, column: 11, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 96, column: 2)
!4270 = !DILocation(line: 96, column: 32, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4269, file: !134, line: 96, column: 2)
!4272 = !DILocation(line: 96, column: 2, scope: !4269)
!4273 = !DILocation(line: 97, column: 8, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !134, line: 97, column: 7)
!4275 = distinct !DILexicalBlock(scope: !4271, file: !134, line: 96, column: 71)
!4276 = !DILocation(line: 97, column: 7, scope: !4275)
!4277 = !DILocation(line: 96, column: 52, scope: !4271)
!4278 = distinct !{!4278, !4272, !4279}
!4279 = !DILocation(line: 100, column: 2, scope: !4269)
!4280 = !DILocation(line: 0, scope: !4269)
!4281 = !DILocation(line: 101, column: 8, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 101, column: 6)
!4283 = !DILocation(line: 101, column: 6, scope: !4216)
!4284 = !DILocation(line: 112, column: 2, scope: !4216)
!4285 = !DILocation(line: 113, column: 2, scope: !4216)
!4286 = !DILocation(line: 113, column: 26, scope: !4216)
!4287 = !DILocation(line: 115, column: 2, scope: !4216)
!4288 = !DILocation(line: 116, column: 2, scope: !4216)
!4289 = !DILocation(line: 117, column: 12, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 117, column: 6)
!4291 = !DILocation(line: 117, column: 31, scope: !4290)
!4292 = !DILocation(line: 117, column: 28, scope: !4290)
!4293 = !DILocation(line: 117, column: 48, scope: !4290)
!4294 = !DILocation(line: 118, column: 12, scope: !4290)
!4295 = !DILocation(line: 118, column: 26, scope: !4290)
!4296 = !DILocation(line: 118, column: 23, scope: !4290)
!4297 = !DILocation(line: 117, column: 6, scope: !4216)
!4298 = !DILocation(line: 0, scope: !4252)
!4299 = !DILocation(line: 127, column: 40, scope: !4255)
!4300 = !DILocation(line: 127, column: 23, scope: !4255)
!4301 = !DILocation(line: 127, column: 20, scope: !4255)
!4302 = !DILocation(line: 127, column: 2, scope: !4252)
!4303 = !DILocation(line: 128, column: 32, scope: !4254)
!4304 = !DILocation(line: 0, scope: !4254)
!4305 = !DILocation(line: 133, column: 18, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !134, line: 133, column: 3)
!4307 = distinct !DILexicalBlock(scope: !4254, file: !134, line: 133, column: 3)
!4308 = !DILocation(line: 133, column: 23, scope: !4306)
!4309 = !DILocation(line: 141, column: 20, scope: !4254)
!4310 = !DILocation(line: 141, column: 36, scope: !4254)
!4311 = !DILocation(line: 141, column: 34, scope: !4254)
!4312 = !DILocation(line: 141, column: 44, scope: !4254)
!4313 = !DILocation(line: 144, column: 7, scope: !4254)
!4314 = !DILocation(line: 133, column: 29, scope: !4306)
!4315 = !DILocation(line: 133, column: 34, scope: !4306)
!4316 = !DILocation(line: 133, column: 3, scope: !4307)
!4317 = !DILocation(line: 135, column: 9, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !134, line: 135, column: 8)
!4319 = distinct !DILexicalBlock(scope: !4306, file: !134, line: 134, column: 40)
!4320 = !DILocation(line: 135, column: 8, scope: !4319)
!4321 = !DILocation(line: 138, column: 4, scope: !4319)
!4322 = !DILocation(line: 134, column: 9, scope: !4306)
!4323 = !DILocation(line: 134, column: 17, scope: !4306)
!4324 = distinct !{!4324, !4316, !4325}
!4325 = !DILocation(line: 139, column: 3, scope: !4307)
!4326 = !DILocation(line: 142, column: 17, scope: !4254)
!4327 = !DILocation(line: 144, column: 13, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4254, file: !134, line: 144, column: 7)
!4329 = !DILocation(line: 148, column: 13, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4254, file: !134, line: 148, column: 7)
!4331 = !DILocation(line: 148, column: 30, scope: !4330)
!4332 = !DILocation(line: 148, column: 35, scope: !4330)
!4333 = !DILocation(line: 148, column: 7, scope: !4254)
!4334 = !DILocation(line: 127, column: 53, scope: !4255)
!4335 = distinct !{!4335, !4302, !4336}
!4336 = !DILocation(line: 151, column: 2, scope: !4252)
!4337 = !DILocation(line: 160, column: 37, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !134, line: 160, column: 2)
!4339 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 160, column: 2)
!4340 = !DILocation(line: 160, column: 11, scope: !4339)
!4341 = !DILocation(line: 160, column: 32, scope: !4338)
!4342 = !DILocation(line: 160, column: 2, scope: !4339)
!4343 = !DILocation(line: 161, column: 8, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !134, line: 161, column: 7)
!4345 = distinct !DILexicalBlock(scope: !4338, file: !134, line: 160, column: 71)
!4346 = !DILocation(line: 161, column: 25, scope: !4344)
!4347 = !DILocation(line: 164, column: 7, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !134, line: 164, column: 7)
!4349 = !DILocation(line: 164, column: 24, scope: !4348)
!4350 = !DILocation(line: 164, column: 7, scope: !4345)
!4351 = !DILocation(line: 169, column: 3, scope: !4345)
!4352 = !DILocation(line: 160, column: 52, scope: !4338)
!4353 = distinct !{!4353, !4342, !4354}
!4354 = !DILocation(line: 170, column: 2, scope: !4339)
!4355 = !DILocation(line: 0, scope: !4339)
!4356 = !DILocation(line: 171, column: 8, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 171, column: 6)
!4358 = !DILocation(line: 171, column: 6, scope: !4216)
!4359 = !DILocation(line: 0, scope: !4261)
!4360 = !DILocation(line: 179, column: 23, scope: !4264)
!4361 = !DILocation(line: 179, column: 20, scope: !4264)
!4362 = !DILocation(line: 179, column: 2, scope: !4261)
!4363 = !DILocation(line: 180, column: 32, scope: !4263)
!4364 = !DILocation(line: 0, scope: !4263)
!4365 = !DILocation(line: 183, column: 10, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 183, column: 7)
!4367 = !DILocation(line: 183, column: 7, scope: !4263)
!4368 = !DILocation(line: 188, column: 8, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !134, line: 188, column: 8)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !134, line: 187, column: 67)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !134, line: 187, column: 3)
!4372 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 187, column: 3)
!4373 = !DILocation(line: 188, column: 8, scope: !4370)
!4374 = !DILocation(line: 191, column: 4, scope: !4370)
!4375 = !DILocation(line: 187, column: 44, scope: !4371)
!4376 = !DILocation(line: 187, column: 23, scope: !4371)
!4377 = !DILocation(line: 187, column: 3, scope: !4372)
!4378 = distinct !{!4378, !4377, !4379}
!4379 = !DILocation(line: 192, column: 3, scope: !4372)
!4380 = !DILocation(line: 179, column: 40, scope: !4264)
!4381 = !DILocation(line: 179, column: 53, scope: !4264)
!4382 = distinct !{!4382, !4362, !4383}
!4383 = !DILocation(line: 193, column: 2, scope: !4261)
!4384 = !DILocation(line: 198, column: 37, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !134, line: 198, column: 2)
!4386 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 198, column: 2)
!4387 = !DILocation(line: 198, column: 11, scope: !4386)
!4388 = !DILocation(line: 198, column: 32, scope: !4385)
!4389 = !DILocation(line: 198, column: 2, scope: !4386)
!4390 = !DILocation(line: 199, column: 25, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4385, file: !134, line: 198, column: 71)
!4392 = !DILocation(line: 199, column: 24, scope: !4391)
!4393 = !DILocation(line: 199, column: 3, scope: !4391)
!4394 = !DILocation(line: 198, column: 52, scope: !4385)
!4395 = distinct !{!4395, !4389, !4396}
!4396 = !DILocation(line: 200, column: 2, scope: !4386)
!4397 = !DILocation(line: 202, column: 1, scope: !4216)
!4398 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4399, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4401)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!2372, !4223, !2372}
!4401 = !{!4402, !4403}
!4402 = !DILocalVariable(name: "h", arg: 1, scope: !4398, file: !142, line: 204, type: !4223)
!4403 = !DILocalVariable(name: "c", arg: 2, scope: !4398, file: !142, line: 204, type: !2372)
!4404 = !DILocation(line: 0, scope: !4398)
!4405 = !DILocation(line: 206, column: 13, scope: !4398)
!4406 = !DILocation(line: 206, column: 11, scope: !4398)
!4407 = !DILocation(line: 206, column: 2, scope: !4398)
!4408 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4409, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4411)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!211, !4223, !2372}
!4411 = !{!4412, !4413}
!4412 = !DILocalVariable(name: "h", arg: 1, scope: !4408, file: !134, line: 31, type: !4223)
!4413 = !DILocalVariable(name: "c", arg: 2, scope: !4408, file: !134, line: 31, type: !2372)
!4414 = !DILocation(line: 0, scope: !4408)
!4415 = !DILocation(line: 33, column: 2, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !134, line: 33, column: 2)
!4417 = distinct !DILexicalBlock(scope: !4408, file: !134, line: 33, column: 2)
!4418 = !DILocation(line: 33, column: 2, scope: !4417)
!4419 = !DILocation(line: 34, column: 2, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !134, line: 34, column: 2)
!4421 = distinct !DILexicalBlock(scope: !4408, file: !134, line: 34, column: 2)
!4422 = !DILocation(line: 34, column: 2, scope: !4421)
!4423 = !DILocation(line: 35, column: 2, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !134, line: 35, column: 2)
!4425 = distinct !DILexicalBlock(scope: !4408, file: !134, line: 35, column: 2)
!4426 = !DILocation(line: 35, column: 2, scope: !4425)
!4427 = !DILocation(line: 36, column: 2, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !134, line: 36, column: 2)
!4429 = distinct !DILexicalBlock(scope: !4408, file: !134, line: 36, column: 2)
!4430 = !DILocation(line: 36, column: 2, scope: !4429)
!4431 = !DILocation(line: 37, column: 2, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !134, line: 37, column: 2)
!4433 = distinct !DILexicalBlock(scope: !4408, file: !134, line: 37, column: 2)
!4434 = !DILocation(line: 37, column: 2, scope: !4433)
!4435 = !DILocation(line: 38, column: 6, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4408, file: !134, line: 38, column: 6)
!4437 = !DILocation(line: 38, column: 6, scope: !4408)
!4438 = !DILocation(line: 41, column: 3, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !134, line: 41, column: 3)
!4440 = distinct !DILexicalBlock(scope: !4441, file: !134, line: 41, column: 3)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !134, line: 40, column: 9)
!4442 = !DILocation(line: 41, column: 3, scope: !4440)
!4443 = !DILocation(line: 42, column: 3, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !134, line: 42, column: 3)
!4445 = distinct !DILexicalBlock(scope: !4441, file: !134, line: 42, column: 3)
!4446 = !DILocation(line: 42, column: 3, scope: !4445)
!4447 = !DILocation(line: 44, column: 4, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !134, line: 44, column: 4)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !134, line: 44, column: 4)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !134, line: 43, column: 32)
!4451 = distinct !DILexicalBlock(scope: !4441, file: !134, line: 43, column: 7)
!4452 = !DILocation(line: 44, column: 4, scope: !4449)
!4453 = !DILocation(line: 45, column: 4, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !134, line: 45, column: 4)
!4455 = distinct !DILexicalBlock(scope: !4450, file: !134, line: 45, column: 4)
!4456 = !DILocation(line: 45, column: 4, scope: !4455)
!4457 = !DILocation(line: 48, column: 2, scope: !4408)
!4458 = !DILocation(line: 49, column: 1, scope: !4408)
!4459 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4460, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4462)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{null, !4223, !2420, !2420}
!4462 = !{!4463, !4464, !4465, !4466}
!4463 = !DILocalVariable(name: "h", arg: 1, scope: !4459, file: !134, line: 71, type: !4223)
!4464 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4459, file: !134, line: 71, type: !2420)
!4465 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4459, file: !134, line: 72, type: !2420)
!4466 = !DILocalVariable(name: "c", scope: !4459, file: !134, line: 74, type: !2372)
!4467 = !DILocation(line: 0, scope: !4459)
!4468 = !DILocation(line: 76, column: 15, scope: !4459)
!4469 = !DILocation(line: 77, column: 14, scope: !4459)
!4470 = !DILocation(line: 79, column: 11, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4459, file: !134, line: 79, column: 2)
!4472 = !DILocation(line: 79, column: 37, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4471, file: !134, line: 79, column: 2)
!4474 = !DILocation(line: 79, column: 32, scope: !4473)
!4475 = !DILocation(line: 79, column: 2, scope: !4471)
!4476 = !DILocation(line: 80, column: 7, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !134, line: 80, column: 7)
!4478 = distinct !DILexicalBlock(scope: !4473, file: !134, line: 79, column: 71)
!4479 = !DILocation(line: 0, scope: !4477)
!4480 = !DILocation(line: 79, column: 52, scope: !4473)
!4481 = distinct !{!4481, !4475, !4482}
!4482 = !DILocation(line: 85, column: 2, scope: !4471)
!4483 = !DILocation(line: 86, column: 1, scope: !4459)
!4484 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4485, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4488)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{!103, !4219, !4487}
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 32)
!4488 = !{!4489, !4490}
!4489 = !DILocalVariable(name: "heap", arg: 1, scope: !4484, file: !134, line: 416, type: !4219)
!4490 = !DILocalVariable(name: "stats", arg: 2, scope: !4484, file: !134, line: 417, type: !4487)
!4491 = !DILocation(line: 0, scope: !4484)
!4492 = !DILocation(line: 419, column: 12, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4484, file: !134, line: 419, column: 6)
!4494 = !DILocation(line: 419, column: 21, scope: !4493)
!4495 = !DILocation(line: 423, column: 28, scope: !4484)
!4496 = !DILocation(line: 423, column: 34, scope: !4484)
!4497 = !DILocation(line: 423, column: 9, scope: !4484)
!4498 = !DILocation(line: 423, column: 20, scope: !4484)
!4499 = !DILocation(line: 424, column: 33, scope: !4484)
!4500 = !DILocation(line: 424, column: 39, scope: !4484)
!4501 = !DILocation(line: 424, column: 9, scope: !4484)
!4502 = !DILocation(line: 424, column: 25, scope: !4484)
!4503 = !DILocation(line: 425, column: 37, scope: !4484)
!4504 = !DILocation(line: 425, column: 43, scope: !4484)
!4505 = !DILocation(line: 425, column: 9, scope: !4484)
!4506 = !DILocation(line: 425, column: 29, scope: !4484)
!4507 = !DILocation(line: 427, column: 2, scope: !4484)
!4508 = !DILocation(line: 428, column: 1, scope: !4484)
!4509 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4510, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4512)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!103, !4223, !3495}
!4512 = !{!4513, !4514, !4515}
!4513 = !DILocalVariable(name: "h", arg: 1, scope: !4509, file: !142, line: 250, type: !4223)
!4514 = !DILocalVariable(name: "sz", arg: 2, scope: !4509, file: !142, line: 250, type: !3495)
!4515 = !DILocalVariable(name: "usable_sz", scope: !4509, file: !142, line: 252, type: !32)
!4516 = !DILocation(line: 0, scope: !4509)
!4517 = !DILocation(line: 253, column: 14, scope: !4509)
!4518 = !DILocation(line: 253, column: 12, scope: !4509)
!4519 = !DILocation(line: 253, column: 2, scope: !4509)
!4520 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4521, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4523)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{null, !4223, !2372, !211}
!4523 = !{!4524, !4525, !4526, !4527, !4528}
!4524 = !DILocalVariable(name: "h", arg: 1, scope: !4520, file: !142, line: 147, type: !4223)
!4525 = !DILocalVariable(name: "c", arg: 2, scope: !4520, file: !142, line: 147, type: !2372)
!4526 = !DILocalVariable(name: "used", arg: 3, scope: !4520, file: !142, line: 147, type: !211)
!4527 = !DILocalVariable(name: "buf", scope: !4520, file: !142, line: 149, type: !153)
!4528 = !DILocalVariable(name: "cmem", scope: !4520, file: !142, line: 150, type: !102)
!4529 = !DILocation(line: 0, scope: !4520)
!4530 = !DILocation(line: 149, column: 22, scope: !4520)
!4531 = !DILocation(line: 0, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !142, line: 159, column: 7)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !142, line: 158, column: 9)
!4534 = distinct !DILexicalBlock(scope: !4520, file: !142, line: 152, column: 6)
!4535 = !DILocation(line: 159, column: 7, scope: !4533)
!4536 = !DILocation(line: 165, column: 1, scope: !4520)
!4537 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4399, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4538)
!4538 = !{!4539, !4540}
!4539 = !DILocalVariable(name: "h", arg: 1, scope: !4537, file: !142, line: 182, type: !4223)
!4540 = !DILocalVariable(name: "c", arg: 2, scope: !4537, file: !142, line: 182, type: !2372)
!4541 = !DILocation(line: 0, scope: !4537)
!4542 = !DILocation(line: 184, column: 9, scope: !4537)
!4543 = !DILocation(line: 184, column: 2, scope: !4537)
!4544 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4409, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4545)
!4545 = !{!4546, !4547}
!4546 = !DILocalVariable(name: "h", arg: 1, scope: !4544, file: !142, line: 137, type: !4223)
!4547 = !DILocalVariable(name: "c", arg: 2, scope: !4544, file: !142, line: 137, type: !2372)
!4548 = !DILocation(line: 0, scope: !4544)
!4549 = !DILocation(line: 139, column: 9, scope: !4544)
!4550 = !DILocation(line: 139, column: 42, scope: !4544)
!4551 = !DILocation(line: 139, column: 2, scope: !4544)
!4552 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4399, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4553)
!4553 = !{!4554, !4555}
!4554 = !DILocalVariable(name: "h", arg: 1, scope: !4552, file: !142, line: 199, type: !4223)
!4555 = !DILocalVariable(name: "c", arg: 2, scope: !4552, file: !142, line: 199, type: !2372)
!4556 = !DILocation(line: 0, scope: !4552)
!4557 = !DILocation(line: 201, column: 13, scope: !4552)
!4558 = !DILocation(line: 201, column: 11, scope: !4552)
!4559 = !DILocation(line: 201, column: 2, scope: !4552)
!4560 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4561, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4563)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!2372, !4223, !2372, !141}
!4563 = !{!4564, !4565, !4566, !4567, !4568}
!4564 = !DILocalVariable(name: "h", arg: 1, scope: !4560, file: !142, line: 107, type: !4223)
!4565 = !DILocalVariable(name: "c", arg: 2, scope: !4560, file: !142, line: 107, type: !2372)
!4566 = !DILocalVariable(name: "f", arg: 3, scope: !4560, file: !142, line: 108, type: !141)
!4567 = !DILocalVariable(name: "buf", scope: !4560, file: !142, line: 110, type: !153)
!4568 = !DILocalVariable(name: "cmem", scope: !4560, file: !142, line: 111, type: !102)
!4569 = !DILocation(line: 0, scope: !4560)
!4570 = !DILocation(line: 110, column: 22, scope: !4560)
!4571 = !DILocation(line: 111, column: 15, scope: !4560)
!4572 = !DILocation(line: 116, column: 11, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !142, line: 115, column: 9)
!4574 = distinct !DILexicalBlock(scope: !4560, file: !142, line: 113, column: 6)
!4575 = !DILocation(line: 116, column: 10, scope: !4573)
!4576 = !DILocation(line: 118, column: 1, scope: !4560)
!4577 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4578, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4580)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!153, !4223}
!4580 = !{!4581}
!4581 = !DILocalVariable(name: "h", arg: 1, scope: !4577, file: !142, line: 101, type: !4223)
!4582 = !DILocation(line: 0, scope: !4577)
!4583 = !DILocation(line: 104, column: 9, scope: !4577)
!4584 = !DILocation(line: 104, column: 2, scope: !4577)
!4585 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4586, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4588)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!3495, !4223, !2372}
!4588 = !{!4589, !4590}
!4589 = !DILocalVariable(name: "h", arg: 1, scope: !4585, file: !142, line: 142, type: !4223)
!4590 = !DILocalVariable(name: "c", arg: 2, scope: !4585, file: !142, line: 142, type: !2372)
!4591 = !DILocation(line: 0, scope: !4585)
!4592 = !DILocation(line: 144, column: 9, scope: !4585)
!4593 = !DILocation(line: 144, column: 42, scope: !4585)
!4594 = !DILocation(line: 144, column: 2, scope: !4585)
!4595 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4596, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4598)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!120, !4223, !3495}
!4598 = !{!4599, !4600}
!4599 = !DILocalVariable(name: "h", arg: 1, scope: !4595, file: !142, line: 245, type: !4223)
!4600 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4595, file: !142, line: 245, type: !3495)
!4601 = !DILocation(line: 0, scope: !4595)
!4602 = !DILocation(line: 247, column: 20, scope: !4595)
!4603 = !DILocation(line: 247, column: 33, scope: !4595)
!4604 = !DILocation(line: 247, column: 2, scope: !4595)
!4605 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4409, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4606)
!4606 = !{!4607, !4608}
!4607 = !DILocalVariable(name: "h", arg: 1, scope: !4605, file: !134, line: 23, type: !4223)
!4608 = !DILocalVariable(name: "c", arg: 2, scope: !4605, file: !134, line: 23, type: !2372)
!4609 = !DILocation(line: 0, scope: !4605)
!4610 = !DILocation(line: 25, column: 2, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !134, line: 25, column: 2)
!4612 = distinct !DILexicalBlock(scope: !4605, file: !134, line: 25, column: 2)
!4613 = !DILocation(line: 25, column: 2, scope: !4612)
!4614 = !DILocation(line: 26, column: 2, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !134, line: 26, column: 2)
!4616 = distinct !DILexicalBlock(scope: !4605, file: !134, line: 26, column: 2)
!4617 = !DILocation(line: 26, column: 2, scope: !4616)
!4618 = !DILocation(line: 27, column: 2, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !134, line: 27, column: 2)
!4620 = distinct !DILexicalBlock(scope: !4605, file: !134, line: 27, column: 2)
!4621 = !DILocation(line: 29, column: 1, scope: !4605)
!4622 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4399, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4623)
!4623 = !{!4624, !4625}
!4624 = !DILocalVariable(name: "h", arg: 1, scope: !4622, file: !142, line: 177, type: !4223)
!4625 = !DILocalVariable(name: "c", arg: 2, scope: !4622, file: !142, line: 177, type: !2372)
!4626 = !DILocation(line: 0, scope: !4622)
!4627 = !DILocation(line: 179, column: 9, scope: !4622)
!4628 = !DILocation(line: 179, column: 2, scope: !4622)
!4629 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4630, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4645)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !4632, !4635, !102, !120, !137, !102, !120, !103, !4638}
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 32)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{!102, !102, !120}
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 32)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{null, !102, !102}
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 32)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4640)
!4640 = !{!4641, !4642, !4643, !4644}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4639, file: !113, line: 63, baseType: !137, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4639, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4639, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4639, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4645 = !{!4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4672, !4674, !4679, !4680, !4682, !4683}
!4646 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4629, file: !134, line: 300, type: !4632)
!4647 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4629, file: !134, line: 301, type: !4635)
!4648 = !DILocalVariable(name: "arg", arg: 3, scope: !4629, file: !134, line: 302, type: !102)
!4649 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4629, file: !134, line: 302, type: !120)
!4650 = !DILocalVariable(name: "op_count", arg: 5, scope: !4629, file: !134, line: 303, type: !137)
!4651 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4629, file: !134, line: 304, type: !102)
!4652 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4629, file: !134, line: 304, type: !120)
!4653 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4629, file: !134, line: 305, type: !103)
!4654 = !DILocalVariable(name: "result", arg: 9, scope: !4629, file: !134, line: 306, type: !4638)
!4655 = !DILocalVariable(name: "sr", scope: !4629, file: !134, line: 308, type: !4656)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4657)
!4657 = !{!4658, !4659, !4660, !4661, !4662, !4668, !4669, !4670, !4671}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4656, file: !134, line: 205, baseType: !4632, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4656, file: !134, line: 206, baseType: !4635, size: 32, offset: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4656, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4656, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4656, file: !134, line: 209, baseType: !4663, size: 32, offset: 128)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 32)
!4664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4665)
!4665 = !{!4666, !4667}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4664, file: !134, line: 217, baseType: !102, size: 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4664, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4656, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4656, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4656, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4656, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4672 = !DILocalVariable(name: "i", scope: !4673, file: !134, line: 320, type: !137)
!4673 = distinct !DILexicalBlock(scope: !4629, file: !134, line: 320, column: 2)
!4674 = !DILocalVariable(name: "sz", scope: !4675, file: !134, line: 322, type: !120)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !134, line: 321, column: 31)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !134, line: 321, column: 7)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !134, line: 320, column: 42)
!4678 = distinct !DILexicalBlock(scope: !4673, file: !134, line: 320, column: 2)
!4679 = !DILocalVariable(name: "p", scope: !4675, file: !134, line: 323, type: !102)
!4680 = !DILocalVariable(name: "b", scope: !4681, file: !134, line: 334, type: !103)
!4681 = distinct !DILexicalBlock(scope: !4676, file: !134, line: 333, column: 10)
!4682 = !DILocalVariable(name: "p", scope: !4681, file: !134, line: 335, type: !102)
!4683 = !DILocalVariable(name: "sz", scope: !4681, file: !134, line: 336, type: !120)
!4684 = !DILocation(line: 0, scope: !4629)
!4685 = !DILocation(line: 308, column: 2, scope: !4629)
!4686 = !DILocation(line: 308, column: 27, scope: !4629)
!4687 = !DILocation(line: 308, column: 32, scope: !4629)
!4688 = !DILocation(line: 314, column: 34, scope: !4629)
!4689 = !DILocation(line: 318, column: 12, scope: !4629)
!4690 = !DILocation(line: 0, scope: !4673)
!4691 = !DILocation(line: 320, column: 25, scope: !4678)
!4692 = !DILocation(line: 320, column: 2, scope: !4673)
!4693 = !DILocation(line: 346, column: 1, scope: !4629)
!4694 = !DILocation(line: 321, column: 7, scope: !4676)
!4695 = !DILocation(line: 321, column: 7, scope: !4677)
!4696 = !DILocation(line: 322, column: 16, scope: !4675)
!4697 = !DILocation(line: 0, scope: !4675)
!4698 = !DILocation(line: 323, column: 14, scope: !4675)
!4699 = !DILocation(line: 325, column: 24, scope: !4675)
!4700 = !DILocation(line: 326, column: 10, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4675, file: !134, line: 326, column: 8)
!4702 = !DILocation(line: 326, column: 8, scope: !4675)
!4703 = !DILocation(line: 327, column: 30, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4701, file: !134, line: 326, column: 19)
!4705 = !DILocation(line: 328, column: 34, scope: !4704)
!4706 = !DILocation(line: 328, column: 38, scope: !4704)
!4707 = !DILocation(line: 329, column: 34, scope: !4704)
!4708 = !DILocation(line: 329, column: 37, scope: !4704)
!4709 = !DILocation(line: 330, column: 22, scope: !4704)
!4710 = !DILocation(line: 331, column: 22, scope: !4704)
!4711 = !DILocation(line: 332, column: 4, scope: !4704)
!4712 = !DILocation(line: 334, column: 12, scope: !4681)
!4713 = !DILocation(line: 0, scope: !4681)
!4714 = !DILocation(line: 335, column: 27, scope: !4681)
!4715 = !DILocation(line: 336, column: 29, scope: !4681)
!4716 = !DILocation(line: 338, column: 23, scope: !4681)
!4717 = !DILocation(line: 339, column: 4, scope: !4681)
!4718 = !DILocation(line: 339, column: 47, scope: !4681)
!4719 = !DILocation(line: 339, column: 19, scope: !4681)
!4720 = !DILocation(line: 340, column: 21, scope: !4681)
!4721 = !DILocation(line: 341, column: 21, scope: !4681)
!4722 = !DILocation(line: 342, column: 4, scope: !4681)
!4723 = !DILocation(line: 344, column: 42, scope: !4677)
!4724 = !DILocation(line: 344, column: 39, scope: !4677)
!4725 = !DILocation(line: 344, column: 36, scope: !4677)
!4726 = !DILocation(line: 320, column: 38, scope: !4678)
!4727 = distinct !{!4727, !4692, !4728}
!4728 = !DILocation(line: 345, column: 2, scope: !4673)
!4729 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4730, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4733)
!4730 = !DISubroutineType(types: !4731)
!4731 = !{!211, !4732}
!4732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 32)
!4733 = !{!4734, !4735, !4739, !4740}
!4734 = !DILocalVariable(name: "sr", arg: 1, scope: !4729, file: !134, line: 234, type: !4732)
!4735 = !DILocalVariable(name: "full_pct", scope: !4736, file: !134, line: 259, type: !137)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !134, line: 241, column: 9)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !134, line: 239, column: 13)
!4738 = distinct !DILexicalBlock(scope: !4729, file: !134, line: 237, column: 6)
!4739 = !DILocalVariable(name: "target", scope: !4736, file: !134, line: 260, type: !137)
!4740 = !DILocalVariable(name: "free_chance", scope: !4736, file: !134, line: 261, type: !137)
!4741 = !DILocation(line: 0, scope: !4729)
!4742 = !DILocation(line: 237, column: 10, scope: !4738)
!4743 = !DILocation(line: 237, column: 25, scope: !4738)
!4744 = !DILocation(line: 237, column: 6, scope: !4729)
!4745 = !DILocation(line: 239, column: 39, scope: !4737)
!4746 = !DILocation(line: 239, column: 32, scope: !4737)
!4747 = !DILocation(line: 239, column: 13, scope: !4738)
!4748 = !DILocation(line: 259, column: 34, scope: !4736)
!4749 = !DILocation(line: 259, column: 28, scope: !4736)
!4750 = !DILocation(line: 259, column: 55, scope: !4736)
!4751 = !DILocation(line: 259, column: 49, scope: !4736)
!4752 = !DILocation(line: 0, scope: !4736)
!4753 = !DILocation(line: 260, column: 25, scope: !4736)
!4754 = !DILocation(line: 263, column: 16, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4736, file: !134, line: 263, column: 7)
!4756 = !DILocation(line: 263, column: 7, scope: !4736)
!4757 = !DILocation(line: 264, column: 42, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !134, line: 263, column: 38)
!4759 = !DILocation(line: 264, column: 27, scope: !4758)
!4760 = !DILocation(line: 265, column: 3, scope: !4758)
!4761 = !DILocation(line: 267, column: 10, scope: !4736)
!4762 = !DILocation(line: 267, column: 19, scope: !4736)
!4763 = !DILocation(line: 0, scope: !4738)
!4764 = !DILocation(line: 269, column: 1, scope: !4729)
!4765 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4766, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4768)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!120, !4732}
!4768 = !{!4769, !4770}
!4769 = !DILocalVariable(name: "sr", arg: 1, scope: !4765, file: !134, line: 274, type: !4732)
!4770 = !DILocalVariable(name: "scale", scope: !4765, file: !134, line: 281, type: !103)
!4771 = !DILocation(line: 0, scope: !4765)
!4772 = !DILocation(line: 281, column: 32, scope: !4765)
!4773 = !DILocation(line: 281, column: 18, scope: !4765)
!4774 = !DILocation(line: 283, column: 9, scope: !4765)
!4775 = !DILocation(line: 283, column: 20, scope: !4765)
!4776 = !DILocation(line: 283, column: 18, scope: !4765)
!4777 = !DILocation(line: 283, column: 2, scope: !4765)
!4778 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4766, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4779)
!4779 = !{!4780}
!4780 = !DILocalVariable(name: "sr", arg: 1, scope: !4778, file: !134, line: 287, type: !4732)
!4781 = !DILocation(line: 0, scope: !4778)
!4782 = !DILocation(line: 289, column: 9, scope: !4778)
!4783 = !DILocation(line: 289, column: 24, scope: !4778)
!4784 = !DILocation(line: 289, column: 18, scope: !4778)
!4785 = !DILocation(line: 289, column: 2, scope: !4778)
!4786 = !DILocation(line: 229, column: 10, scope: !133)
!4787 = !DILocation(line: 229, column: 16, scope: !133)
!4788 = !DILocation(line: 229, column: 40, scope: !133)
!4789 = !DILocation(line: 229, column: 8, scope: !133)
!4790 = !DILocation(line: 231, column: 26, scope: !133)
!4791 = !DILocation(line: 231, column: 9, scope: !133)
!4792 = !DILocation(line: 231, column: 2, scope: !133)
!4793 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4794, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4796)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{null, !4223, !211}
!4796 = !{!4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4809, !4810, !4811, !4814}
!4797 = !DILocalVariable(name: "h", arg: 1, scope: !4793, file: !134, line: 351, type: !4223)
!4798 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4793, file: !134, line: 351, type: !211)
!4799 = !DILocalVariable(name: "i", scope: !4793, file: !134, line: 353, type: !103)
!4800 = !DILocalVariable(name: "nb_buckets", scope: !4793, file: !134, line: 353, type: !103)
!4801 = !DILocalVariable(name: "free_bytes", scope: !4793, file: !134, line: 354, type: !120)
!4802 = !DILocalVariable(name: "allocated_bytes", scope: !4793, file: !134, line: 354, type: !120)
!4803 = !DILocalVariable(name: "total", scope: !4793, file: !134, line: 354, type: !120)
!4804 = !DILocalVariable(name: "overhead", scope: !4793, file: !134, line: 354, type: !120)
!4805 = !DILocalVariable(name: "first", scope: !4806, file: !134, line: 363, type: !2372)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !134, line: 362, column: 35)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !134, line: 362, column: 2)
!4808 = distinct !DILexicalBlock(scope: !4793, file: !134, line: 362, column: 2)
!4809 = !DILocalVariable(name: "largest", scope: !4806, file: !134, line: 364, type: !3495)
!4810 = !DILocalVariable(name: "count", scope: !4806, file: !134, line: 365, type: !103)
!4811 = !DILocalVariable(name: "curr", scope: !4812, file: !134, line: 368, type: !2372)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !134, line: 367, column: 14)
!4813 = distinct !DILexicalBlock(scope: !4806, file: !134, line: 367, column: 7)
!4814 = !DILocalVariable(name: "c", scope: !4815, file: !134, line: 384, type: !2372)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !134, line: 384, column: 3)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !134, line: 382, column: 19)
!4817 = distinct !DILexicalBlock(scope: !4793, file: !134, line: 382, column: 6)
!4818 = !DILocation(line: 0, scope: !4793)
!4819 = !DILocation(line: 353, column: 39, scope: !4793)
!4820 = !DILocation(line: 353, column: 22, scope: !4793)
!4821 = !DILocation(line: 353, column: 50, scope: !4793)
!4822 = !DILocation(line: 354, column: 2, scope: !4793)
!4823 = !DILocation(line: 357, column: 9, scope: !4793)
!4824 = !DILocation(line: 356, column: 2, scope: !4793)
!4825 = !DILocation(line: 359, column: 2, scope: !4793)
!4826 = !DILocation(line: 362, column: 16, scope: !4807)
!4827 = !DILocation(line: 362, column: 2, scope: !4808)
!4828 = !DILocation(line: 363, column: 35, scope: !4806)
!4829 = !DILocation(line: 0, scope: !4806)
!4830 = !DILocation(line: 367, column: 7, scope: !4813)
!4831 = !DILocation(line: 367, column: 7, scope: !4806)
!4832 = !DILocation(line: 0, scope: !4812)
!4833 = !DILocation(line: 370, column: 10, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4812, file: !134, line: 369, column: 7)
!4835 = !DILocation(line: 371, column: 15, scope: !4834)
!4836 = !DILocation(line: 372, column: 12, scope: !4834)
!4837 = !DILocation(line: 373, column: 18, scope: !4812)
!4838 = !DILocation(line: 373, column: 4, scope: !4834)
!4839 = distinct !{!4839, !4840, !4841}
!4840 = !DILocation(line: 369, column: 4, scope: !4812)
!4841 = !DILocation(line: 373, column: 26, scope: !4812)
!4842 = !DILocation(line: 377, column: 23, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !134, line: 375, column: 14)
!4844 = distinct !DILexicalBlock(scope: !4806, file: !134, line: 375, column: 7)
!4845 = !DILocation(line: 378, column: 20, scope: !4843)
!4846 = !DILocation(line: 376, column: 4, scope: !4843)
!4847 = !DILocation(line: 379, column: 3, scope: !4843)
!4848 = !DILocation(line: 362, column: 31, scope: !4807)
!4849 = distinct !{!4849, !4827, !4850}
!4850 = !DILocation(line: 380, column: 2, scope: !4808)
!4851 = !DILocation(line: 382, column: 6, scope: !4793)
!4852 = !DILocation(line: 383, column: 3, scope: !4816)
!4853 = !DILocation(line: 0, scope: !4815)
!4854 = !DILocation(line: 384, column: 8, scope: !4815)
!4855 = !DILocation(line: 387, column: 11, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !134, line: 384, column: 50)
!4857 = distinct !DILexicalBlock(scope: !4815, file: !134, line: 384, column: 3)
!4858 = !DILocation(line: 390, column: 11, scope: !4856)
!4859 = !DILocation(line: 391, column: 11, scope: !4856)
!4860 = !DILocation(line: 392, column: 11, scope: !4856)
!4861 = !DILocation(line: 385, column: 4, scope: !4856)
!4862 = !DILocation(line: 393, column: 16, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4856, file: !134, line: 393, column: 8)
!4864 = !DILocation(line: 393, column: 10, scope: !4863)
!4865 = !DILocation(line: 393, column: 8, scope: !4856)
!4866 = !DILocation(line: 384, column: 31, scope: !4857)
!4867 = !DILocation(line: 384, column: 3, scope: !4857)
!4868 = distinct !{!4868, !4869, !4870}
!4869 = !DILocation(line: 384, column: 3, scope: !4815)
!4870 = !DILocation(line: 396, column: 3, scope: !4815)
!4871 = !DILocation(line: 399, column: 2, scope: !4793)
!4872 = !DILocation(line: 401, column: 13, scope: !4793)
!4873 = !DILocation(line: 401, column: 23, scope: !4793)
!4874 = !DILocation(line: 401, column: 36, scope: !4793)
!4875 = !DILocation(line: 402, column: 21, scope: !4793)
!4876 = !DILocation(line: 402, column: 34, scope: !4793)
!4877 = !DILocation(line: 402, column: 32, scope: !4793)
!4878 = !DILocation(line: 405, column: 15, scope: !4793)
!4879 = !DILocation(line: 405, column: 33, scope: !4793)
!4880 = !DILocation(line: 405, column: 26, scope: !4793)
!4881 = !DILocation(line: 405, column: 37, scope: !4793)
!4882 = !DILocation(line: 405, column: 45, scope: !4793)
!4883 = !DILocation(line: 403, column: 2, scope: !4793)
!4884 = !DILocation(line: 407, column: 1, scope: !4793)
!4885 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4886, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4888)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{null, !4219, !211}
!4888 = !{!4889, !4890}
!4889 = !DILocalVariable(name: "heap", arg: 1, scope: !4885, file: !134, line: 409, type: !4219)
!4890 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4885, file: !134, line: 409, type: !211)
!4891 = !DILocation(line: 0, scope: !4885)
!4892 = !DILocation(line: 411, column: 24, scope: !4885)
!4893 = !DILocation(line: 411, column: 2, scope: !4885)
!4894 = !DILocation(line: 412, column: 1, scope: !4885)
!4895 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4896, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4898)
!4896 = !DISubroutineType(types: !4897)
!4897 = !{!103, !4219}
!4898 = !{!4899}
!4899 = !DILocalVariable(name: "heap", arg: 1, scope: !4895, file: !134, line: 430, type: !4219)
!4900 = !DILocation(line: 0, scope: !4895)
!4901 = !DILocation(line: 432, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4895, file: !134, line: 432, column: 6)
!4903 = !DILocation(line: 432, column: 6, scope: !4895)
!4904 = !DILocation(line: 436, column: 42, scope: !4895)
!4905 = !DILocation(line: 436, column: 48, scope: !4895)
!4906 = !DILocation(line: 436, column: 14, scope: !4895)
!4907 = !DILocation(line: 436, column: 34, scope: !4895)
!4908 = !DILocation(line: 438, column: 2, scope: !4895)
!4909 = !DILocation(line: 439, column: 1, scope: !4895)
!4910 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2389, file: !2389, line: 1338, type: !4911, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !4919)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!103, !3162, !102, !199, !4913, !137}
!4913 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3128, line: 99, baseType: !4914)
!4914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3128, line: 40, baseType: !4915)
!4915 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2389, baseType: !4916)
!4916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4917)
!4917 = !{!4918}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4916, file: !2389, baseType: !102, size: 32)
!4919 = !{!4920, !4921, !4922, !4923, !4924, !4925, !4929, !4930, !4931, !4933, !4938, !4983, !4986, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4998, !4999, !5000, !5004, !5007, !5009, !5012, !5013, !5014, !5019, !5025, !5028, !5032, !5038, !5042, !5045, !5047, !5050}
!4920 = !DILocalVariable(name: "out", arg: 1, scope: !4910, file: !2389, line: 1338, type: !3162)
!4921 = !DILocalVariable(name: "ctx", arg: 2, scope: !4910, file: !2389, line: 1338, type: !102)
!4922 = !DILocalVariable(name: "fp", arg: 3, scope: !4910, file: !2389, line: 1338, type: !199)
!4923 = !DILocalVariable(name: "ap", arg: 4, scope: !4910, file: !2389, line: 1339, type: !4913)
!4924 = !DILocalVariable(name: "flags", arg: 5, scope: !4910, file: !2389, line: 1339, type: !137)
!4925 = !DILocalVariable(name: "buf", scope: !4910, file: !2389, line: 1341, type: !4926)
!4926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4927)
!4927 = !{!4928}
!4928 = !DISubrange(count: 22)
!4929 = !DILocalVariable(name: "count", scope: !4910, file: !2389, line: 1342, type: !120)
!4930 = !DILocalVariable(name: "sint", scope: !4910, file: !2389, line: 1343, type: !2408)
!4931 = !DILocalVariable(name: "tagged_ap", scope: !4910, file: !2389, line: 1345, type: !4932)
!4932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!4933 = !DILocalVariable(name: "rc", scope: !4934, file: !2389, line: 1377, type: !103)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !2389, line: 1377, column: 4)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !2389, line: 1376, column: 19)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1376, column: 7)
!4937 = distinct !DILexicalBlock(scope: !4910, file: !2389, line: 1375, column: 19)
!4938 = !DILocalVariable(name: "state", scope: !4937, file: !2389, line: 1395, type: !4939)
!4939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4910, file: !2389, line: 1392, size: 192, elements: !4940)
!4940 = !{!4941, !4951}
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4939, file: !2389, line: 1393, baseType: !4942, size: 64)
!4942 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2389, line: 166, size: 64, elements: !4943)
!4943 = !{!4944, !4945, !4946, !4948, !4950}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4942, file: !2389, line: 168, baseType: !2408, size: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4942, file: !2389, line: 171, baseType: !2411, size: 64)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4942, file: !2389, line: 174, baseType: !4947, size: 64)
!4947 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4942, file: !2389, line: 177, baseType: !4949, size: 64)
!4949 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4942, file: !2389, line: 180, baseType: !102, size: 32)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4939, file: !2389, line: 1394, baseType: !4952, size: 96, offset: 64)
!4952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2389, line: 189, size: 96, elements: !4953)
!4953 = !{!4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4978}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4952, file: !2389, line: 191, baseType: !211, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4952, file: !2389, line: 194, baseType: !211, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4952, file: !2389, line: 197, baseType: !211, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4952, file: !2389, line: 200, baseType: !211, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4952, file: !2389, line: 203, baseType: !211, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4952, file: !2389, line: 206, baseType: !211, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4952, file: !2389, line: 209, baseType: !211, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4952, file: !2389, line: 212, baseType: !211, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4952, file: !2389, line: 219, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4952, file: !2389, line: 222, baseType: !211, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4952, file: !2389, line: 229, baseType: !211, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4952, file: !2389, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4952, file: !2389, line: 238, baseType: !211, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4952, file: !2389, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4952, file: !2389, line: 244, baseType: !211, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4952, file: !2389, line: 247, baseType: !211, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4952, file: !2389, line: 252, baseType: !211, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4952, file: !2389, line: 257, baseType: !211, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4952, file: !2389, line: 260, baseType: !209, size: 8, offset: 24)
!4973 = !DIDerivedType(tag: DW_TAG_member, scope: !4952, file: !2389, line: 262, baseType: !4974, size: 32, offset: 32)
!4974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4952, file: !2389, line: 262, size: 32, elements: !4975)
!4975 = !{!4976, !4977}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4974, file: !2389, line: 267, baseType: !103, size: 32)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4974, file: !2389, line: 289, baseType: !103, size: 32)
!4978 = !DIDerivedType(tag: DW_TAG_member, scope: !4952, file: !2389, line: 292, baseType: !4979, size: 32, offset: 64)
!4979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4952, file: !2389, line: 292, size: 32, elements: !4980)
!4980 = !{!4981, !4982}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4979, file: !2389, line: 297, baseType: !103, size: 32)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4979, file: !2389, line: 306, baseType: !103, size: 32)
!4983 = !DILocalVariable(name: "conv", scope: !4937, file: !2389, line: 1400, type: !4984)
!4984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4985)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 32)
!4986 = !DILocalVariable(name: "value", scope: !4937, file: !2389, line: 1401, type: !4987)
!4987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4988)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 32)
!4989 = !DILocalVariable(name: "sp", scope: !4937, file: !2389, line: 1402, type: !199)
!4990 = !DILocalVariable(name: "width", scope: !4937, file: !2389, line: 1403, type: !103)
!4991 = !DILocalVariable(name: "precision", scope: !4937, file: !2389, line: 1404, type: !103)
!4992 = !DILocalVariable(name: "bps", scope: !4937, file: !2389, line: 1405, type: !199)
!4993 = !DILocalVariable(name: "bpe", scope: !4937, file: !2389, line: 1406, type: !199)
!4994 = !DILocalVariable(name: "sign", scope: !4937, file: !2389, line: 1407, type: !109)
!4995 = !DILocalVariable(name: "arg", scope: !4996, file: !2389, line: 1432, type: !103)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !2389, line: 1431, column: 24)
!4997 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1431, column: 7)
!4998 = !DILocalVariable(name: "specifier_cat", scope: !4937, file: !2389, line: 1468, type: !2388)
!4999 = !DILocalVariable(name: "length_mod", scope: !4937, file: !2389, line: 1470, type: !2396)
!5000 = !DILocalVariable(name: "rc", scope: !5001, file: !2389, line: 1575, type: !103)
!5001 = distinct !DILexicalBlock(scope: !5002, file: !2389, line: 1575, column: 4)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !2389, line: 1574, column: 43)
!5003 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1574, column: 7)
!5004 = !DILocalVariable(name: "rc", scope: !5005, file: !2389, line: 1584, type: !103)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1584, column: 4)
!5006 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1582, column: 28)
!5007 = !DILocalVariable(name: "len", scope: !5008, file: !2389, line: 1589, type: !120)
!5008 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1586, column: 13)
!5009 = !DILocalVariable(name: "len", scope: !5010, file: !2389, line: 1641, type: !120)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !2389, line: 1640, column: 24)
!5011 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1640, column: 8)
!5012 = !DILocalVariable(name: "nj_len", scope: !4937, file: !2389, line: 1722, type: !120)
!5013 = !DILocalVariable(name: "pad_len", scope: !4937, file: !2389, line: 1723, type: !103)
!5014 = !DILocalVariable(name: "pad", scope: !5015, file: !2389, line: 1751, type: !109)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !2389, line: 1750, column: 26)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !2389, line: 1750, column: 8)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !2389, line: 1747, column: 18)
!5018 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1747, column: 7)
!5019 = !DILocalVariable(name: "rc", scope: !5020, file: !2389, line: 1758, type: !103)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !2389, line: 1758, column: 7)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !2389, line: 1757, column: 21)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !2389, line: 1757, column: 10)
!5023 = distinct !DILexicalBlock(scope: !5024, file: !2389, line: 1756, column: 26)
!5024 = distinct !DILexicalBlock(scope: !5015, file: !2389, line: 1756, column: 9)
!5025 = !DILocalVariable(name: "rc", scope: !5026, file: !2389, line: 1765, type: !103)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !2389, line: 1765, column: 6)
!5027 = distinct !DILexicalBlock(scope: !5015, file: !2389, line: 1764, column: 25)
!5028 = !DILocalVariable(name: "rc", scope: !5029, file: !2389, line: 1774, type: !103)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !2389, line: 1774, column: 4)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !2389, line: 1773, column: 18)
!5031 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1773, column: 7)
!5032 = !DILocalVariable(name: "rc", scope: !5033, file: !2389, line: 1819, type: !103)
!5033 = distinct !DILexicalBlock(scope: !5034, file: !2389, line: 1819, column: 5)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !2389, line: 1818, column: 44)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !2389, line: 1818, column: 8)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !2389, line: 1817, column: 10)
!5037 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1777, column: 7)
!5038 = !DILocalVariable(name: "rc", scope: !5039, file: !2389, line: 1823, type: !103)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !2389, line: 1823, column: 5)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !2389, line: 1822, column: 26)
!5041 = distinct !DILexicalBlock(scope: !5036, file: !2389, line: 1822, column: 8)
!5042 = !DILocalVariable(name: "rc", scope: !5043, file: !2389, line: 1828, type: !103)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !2389, line: 1828, column: 5)
!5044 = distinct !DILexicalBlock(scope: !5036, file: !2389, line: 1827, column: 26)
!5045 = !DILocalVariable(name: "rc", scope: !5046, file: !2389, line: 1831, type: !103)
!5046 = distinct !DILexicalBlock(scope: !5036, file: !2389, line: 1831, column: 4)
!5047 = !DILocalVariable(name: "rc", scope: !5048, file: !2389, line: 1836, type: !103)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !2389, line: 1836, column: 4)
!5049 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1835, column: 21)
!5050 = !DILabel(scope: !5006, name: "prec_int_pad0", file: !2389, line: 1634)
!5051 = !DILocation(line: 0, scope: !4910)
!5052 = !DILocation(line: 1341, column: 2, scope: !4910)
!5053 = !DILocation(line: 1341, column: 7, scope: !4910)
!5054 = !DILocation(line: 1375, column: 2, scope: !4910)
!5055 = !DILocation(line: 1342, column: 9, scope: !4910)
!5056 = !DILocation(line: 1375, column: 9, scope: !4910)
!5057 = !DILocation(line: 1377, column: 4, scope: !4934)
!5058 = !DILocation(line: 0, scope: !4934)
!5059 = !DILocation(line: 1377, column: 4, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4934, file: !2389, line: 1377, column: 4)
!5061 = distinct !{!5061, !5054, !5062}
!5062 = !DILocation(line: 1839, column: 2, scope: !4910)
!5063 = !DILocation(line: 1392, column: 3, scope: !4937)
!5064 = !DILocation(line: 1395, column: 5, scope: !4937)
!5065 = !DILocation(line: 0, scope: !4937)
!5066 = !DILocation(line: 1409, column: 8, scope: !4937)
!5067 = !DILocation(line: 1414, column: 13, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1414, column: 7)
!5069 = !DILocation(line: 1414, column: 7, scope: !4937)
!5070 = !DILocation(line: 1415, column: 12, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5068, file: !2389, line: 1414, column: 25)
!5072 = !DILocation(line: 1417, column: 14, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5071, file: !2389, line: 1417, column: 8)
!5074 = !DILocation(line: 1417, column: 8, scope: !5071)
!5075 = !DILocation(line: 1418, column: 21, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5073, file: !2389, line: 1417, column: 19)
!5077 = !DILocation(line: 1419, column: 13, scope: !5076)
!5078 = !DILocation(line: 1420, column: 4, scope: !5076)
!5079 = !DILocation(line: 1421, column: 20, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5068, file: !2389, line: 1421, column: 14)
!5081 = !DILocation(line: 1421, column: 14, scope: !5068)
!5082 = !DILocation(line: 1431, column: 13, scope: !4997)
!5083 = !DILocation(line: 1431, column: 7, scope: !4937)
!5084 = !DILocation(line: 1432, column: 14, scope: !4996)
!5085 = !DILocation(line: 0, scope: !4996)
!5086 = !DILocation(line: 1434, column: 12, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !4996, file: !2389, line: 1434, column: 8)
!5088 = !DILocation(line: 1434, column: 8, scope: !4996)
!5089 = !DILocation(line: 1435, column: 24, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5087, file: !2389, line: 1434, column: 17)
!5091 = !DILocation(line: 1436, column: 4, scope: !5090)
!5092 = !DILocation(line: 1439, column: 20, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !4997, file: !2389, line: 1439, column: 14)
!5094 = !DILocation(line: 1439, column: 14, scope: !4997)
!5095 = !DILocation(line: 1469, column: 37, scope: !4937)
!5096 = !DILocation(line: 1448, column: 20, scope: !4937)
!5097 = !DILocation(line: 1449, column: 22, scope: !4937)
!5098 = !DILocation(line: 1471, column: 34, scope: !4937)
!5099 = !DILocation(line: 1478, column: 7, scope: !4937)
!5100 = !DILocation(line: 1479, column: 4, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !2389, line: 1478, column: 40)
!5102 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1478, column: 7)
!5103 = !DILocation(line: 1484, column: 19, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5101, file: !2389, line: 1479, column: 24)
!5105 = !DILocation(line: 1484, column: 17, scope: !5104)
!5106 = !DILocation(line: 1485, column: 5, scope: !5104)
!5107 = !DILocation(line: 1492, column: 20, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !2389, line: 1491, column: 12)
!5109 = distinct !DILexicalBlock(scope: !5104, file: !2389, line: 1487, column: 9)
!5110 = !DILocation(line: 1492, column: 18, scope: !5108)
!5111 = !DILocation(line: 1494, column: 5, scope: !5104)
!5112 = !DILocation(line: 1497, column: 23, scope: !5104)
!5113 = !DILocation(line: 1496, column: 17, scope: !5104)
!5114 = !DILocation(line: 1498, column: 5, scope: !5104)
!5115 = !DILocation(line: 1501, column: 23, scope: !5104)
!5116 = !DILocation(line: 1500, column: 17, scope: !5104)
!5117 = !DILocation(line: 1502, column: 5, scope: !5104)
!5118 = !DILocation(line: 1513, column: 23, scope: !5104)
!5119 = !DILocation(line: 1513, column: 6, scope: !5104)
!5120 = !DILocation(line: 1512, column: 17, scope: !5104)
!5121 = !DILocation(line: 1514, column: 5, scope: !5104)
!5122 = !DILocation(line: 0, scope: !5104)
!5123 = !DILocation(line: 1516, column: 8, scope: !5101)
!5124 = !DILocation(line: 1517, column: 19, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !2389, line: 1516, column: 33)
!5126 = distinct !DILexicalBlock(scope: !5101, file: !2389, line: 1516, column: 8)
!5127 = !DILocation(line: 1517, column: 17, scope: !5125)
!5128 = !DILocation(line: 1518, column: 4, scope: !5125)
!5129 = !DILocation(line: 1519, column: 19, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5131, file: !2389, line: 1518, column: 39)
!5131 = distinct !DILexicalBlock(scope: !5126, file: !2389, line: 1518, column: 15)
!5132 = !DILocation(line: 1519, column: 17, scope: !5130)
!5133 = !DILocation(line: 1520, column: 4, scope: !5130)
!5134 = !DILocation(line: 1522, column: 4, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !2389, line: 1521, column: 47)
!5136 = distinct !DILexicalBlock(scope: !5102, file: !2389, line: 1521, column: 14)
!5137 = !DILocation(line: 1527, column: 19, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5135, file: !2389, line: 1522, column: 24)
!5139 = !DILocation(line: 1527, column: 17, scope: !5138)
!5140 = !DILocation(line: 1528, column: 5, scope: !5138)
!5141 = !DILocation(line: 0, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !2389, line: 1530, column: 9)
!5143 = !DILocation(line: 1540, column: 23, scope: !5138)
!5144 = !DILocation(line: 1539, column: 17, scope: !5138)
!5145 = !DILocation(line: 1542, column: 5, scope: !5138)
!5146 = !DILocation(line: 1545, column: 23, scope: !5138)
!5147 = !DILocation(line: 1544, column: 17, scope: !5138)
!5148 = !DILocation(line: 1547, column: 5, scope: !5138)
!5149 = !DILocation(line: 1551, column: 23, scope: !5138)
!5150 = !DILocation(line: 1551, column: 6, scope: !5138)
!5151 = !DILocation(line: 1550, column: 17, scope: !5138)
!5152 = !DILocation(line: 1552, column: 5, scope: !5138)
!5153 = !DILocation(line: 0, scope: !5138)
!5154 = !DILocation(line: 1554, column: 8, scope: !5135)
!5155 = !DILocation(line: 1555, column: 19, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !2389, line: 1554, column: 33)
!5157 = distinct !DILexicalBlock(scope: !5135, file: !2389, line: 1554, column: 8)
!5158 = !DILocation(line: 1555, column: 17, scope: !5156)
!5159 = !DILocation(line: 1556, column: 4, scope: !5156)
!5160 = !DILocation(line: 1557, column: 19, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5162, file: !2389, line: 1556, column: 39)
!5162 = distinct !DILexicalBlock(scope: !5157, file: !2389, line: 1556, column: 15)
!5163 = !DILocation(line: 1557, column: 17, scope: !5161)
!5164 = !DILocation(line: 1558, column: 4, scope: !5161)
!5165 = !DILocation(line: 0, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !2389, line: 1560, column: 8)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !2389, line: 1559, column: 45)
!5168 = distinct !DILexicalBlock(scope: !5136, file: !2389, line: 1559, column: 14)
!5169 = !DILocation(line: 1566, column: 17, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5171, file: !2389, line: 1565, column: 46)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !2389, line: 1565, column: 14)
!5172 = !DILocation(line: 1566, column: 15, scope: !5170)
!5173 = !DILocation(line: 1567, column: 3, scope: !5170)
!5174 = !DILocation(line: 1574, column: 21, scope: !5003)
!5175 = !DILocation(line: 1575, column: 4, scope: !5001)
!5176 = !DILocation(line: 0, scope: !5001)
!5177 = !DILocation(line: 1575, column: 4, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5001, file: !2389, line: 1575, column: 4)
!5179 = !DILocation(line: 1582, column: 17, scope: !4937)
!5180 = !DILocation(line: 1582, column: 3, scope: !4937)
!5181 = !DILocation(line: 1584, column: 4, scope: !5005)
!5182 = !DILocation(line: 0, scope: !5005)
!5183 = !DILocation(line: 1584, column: 4, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5005, file: !2389, line: 1584, column: 4)
!5185 = !DILocation(line: 1587, column: 31, scope: !5008)
!5186 = !DILocation(line: 1591, column: 18, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5008, file: !2389, line: 1591, column: 8)
!5188 = !DILocation(line: 1591, column: 8, scope: !5008)
!5189 = !DILocation(line: 1592, column: 11, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5187, file: !2389, line: 1591, column: 24)
!5191 = !DILocation(line: 0, scope: !5008)
!5192 = !DILocation(line: 1593, column: 4, scope: !5190)
!5193 = !DILocation(line: 1594, column: 11, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5187, file: !2389, line: 1593, column: 11)
!5195 = !DILocation(line: 1604, column: 51, scope: !5006)
!5196 = !DILocation(line: 1604, column: 13, scope: !5006)
!5197 = !DILocation(line: 1604, column: 11, scope: !5006)
!5198 = !DILocation(line: 1606, column: 4, scope: !5006)
!5199 = !DILocation(line: 1609, column: 14, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1609, column: 8)
!5201 = !DILocation(line: 1609, column: 8, scope: !5006)
!5202 = !DILocation(line: 1619, column: 18, scope: !5006)
!5203 = !DILocation(line: 1620, column: 13, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1620, column: 8)
!5205 = !DILocation(line: 1620, column: 8, scope: !5006)
!5206 = !DILocation(line: 1622, column: 36, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !2389, line: 1620, column: 18)
!5208 = !DILocation(line: 1622, column: 17, scope: !5207)
!5209 = !DILocation(line: 1623, column: 4, scope: !5207)
!5210 = !DILocation(line: 1632, column: 29, scope: !5006)
!5211 = !DILocation(line: 1632, column: 10, scope: !5006)
!5212 = !DILocation(line: 1632, column: 4, scope: !5006)
!5213 = !DILocation(line: 1407, column: 8, scope: !4937)
!5214 = !DILocation(line: 0, scope: !5006)
!5215 = !DILocation(line: 1634, column: 3, scope: !5006)
!5216 = !DILocation(line: 1640, column: 18, scope: !5011)
!5217 = !DILocation(line: 1640, column: 8, scope: !5006)
!5218 = !DILocation(line: 1729, column: 13, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1729, column: 7)
!5220 = !DILocation(line: 1641, column: 22, scope: !5010)
!5221 = !DILocation(line: 0, scope: !5010)
!5222 = !DILocation(line: 1646, column: 21, scope: !5010)
!5223 = !DILocation(line: 1649, column: 13, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5010, file: !2389, line: 1649, column: 9)
!5225 = !DILocation(line: 1649, column: 9, scope: !5010)
!5226 = !DILocation(line: 1650, column: 35, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5224, file: !2389, line: 1649, column: 34)
!5228 = !DILocation(line: 1650, column: 23, scope: !5227)
!5229 = !DILocation(line: 1651, column: 5, scope: !5227)
!5230 = !DILocation(line: 1660, column: 15, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1660, column: 8)
!5232 = !DILocation(line: 1660, column: 19, scope: !5231)
!5233 = !DILocation(line: 1660, column: 8, scope: !5006)
!5234 = !DILocation(line: 1661, column: 23, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5231, file: !2389, line: 1660, column: 28)
!5236 = !DILocation(line: 1661, column: 11, scope: !5235)
!5237 = !DILocation(line: 1665, column: 22, scope: !5235)
!5238 = !DILocation(line: 1666, column: 21, scope: !5235)
!5239 = !DILocation(line: 1668, column: 5, scope: !5235)
!5240 = !DILocation(line: 1677, column: 30, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5242, file: !2389, line: 1676, column: 49)
!5242 = distinct !DILexicalBlock(scope: !5006, file: !2389, line: 1676, column: 8)
!5243 = !DILocation(line: 1677, column: 5, scope: !5241)
!5244 = !DILocation(line: 1680, column: 4, scope: !5006)
!5245 = !DILocation(line: 0, scope: !5187)
!5246 = !DILocation(line: 1597, column: 14, scope: !5008)
!5247 = !DILocation(line: 1699, column: 11, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1699, column: 7)
!5249 = !DILocation(line: 1699, column: 7, scope: !4937)
!5250 = !DILocation(line: 1725, column: 7, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1725, column: 7)
!5252 = !DILocation(line: 1725, column: 12, scope: !5251)
!5253 = !DILocation(line: 1747, column: 13, scope: !5018)
!5254 = !DILocation(line: 1747, column: 7, scope: !4937)
!5255 = !DILocation(line: 1722, column: 24, scope: !4937)
!5256 = !DILocation(line: 1725, column: 7, scope: !4937)
!5257 = !DILocation(line: 1729, column: 7, scope: !4937)
!5258 = !DILocation(line: 1736, column: 13, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !4937, file: !2389, line: 1736, column: 7)
!5260 = !DILocation(line: 1735, column: 19, scope: !4937)
!5261 = !DILocation(line: 1736, column: 7, scope: !4937)
!5262 = !DILocation(line: 1748, column: 10, scope: !5017)
!5263 = !DILocation(line: 1750, column: 15, scope: !5016)
!5264 = !DILocation(line: 1750, column: 8, scope: !5017)
!5265 = !DILocation(line: 0, scope: !5015)
!5266 = !DILocation(line: 1756, column: 15, scope: !5024)
!5267 = !DILocation(line: 1756, column: 9, scope: !5015)
!5268 = !DILocation(line: 1758, column: 7, scope: !5020)
!5269 = !DILocation(line: 0, scope: !5020)
!5270 = !DILocation(line: 1758, column: 7, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5020, file: !2389, line: 1758, column: 7)
!5272 = !DILocation(line: 1764, column: 5, scope: !5015)
!5273 = !DILocation(line: 0, scope: !5017)
!5274 = !DILocation(line: 1764, column: 20, scope: !5015)
!5275 = !DILocation(line: 1764, column: 17, scope: !5015)
!5276 = !DILocation(line: 1765, column: 6, scope: !5026)
!5277 = !DILocation(line: 0, scope: !5026)
!5278 = !DILocation(line: 1765, column: 6, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5026, file: !2389, line: 1765, column: 6)
!5280 = distinct !{!5280, !5272, !5281}
!5281 = !DILocation(line: 1766, column: 5, scope: !5015)
!5282 = !DILocation(line: 1773, column: 12, scope: !5031)
!5283 = !DILocation(line: 1773, column: 7, scope: !4937)
!5284 = !DILocation(line: 1773, column: 7, scope: !5031)
!5285 = !DILocation(line: 1774, column: 4, scope: !5029)
!5286 = !DILocation(line: 0, scope: !5029)
!5287 = !DILocation(line: 1774, column: 4, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5029, file: !2389, line: 1774, column: 4)
!5289 = !DILocation(line: 1818, column: 8, scope: !5035)
!5290 = !DILocation(line: 1818, column: 27, scope: !5035)
!5291 = !DILocation(line: 1818, column: 25, scope: !5035)
!5292 = !DILocation(line: 1818, column: 8, scope: !5036)
!5293 = !DILocation(line: 1819, column: 5, scope: !5033)
!5294 = !DILocation(line: 0, scope: !5033)
!5295 = !DILocation(line: 1819, column: 5, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5033, file: !2389, line: 1819, column: 5)
!5297 = !DILocation(line: 1822, column: 14, scope: !5041)
!5298 = !DILocation(line: 1822, column: 8, scope: !5036)
!5299 = !DILocation(line: 1823, column: 5, scope: !5039)
!5300 = !DILocation(line: 0, scope: !5039)
!5301 = !DILocation(line: 1823, column: 5, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5039, file: !2389, line: 1823, column: 5)
!5303 = !DILocation(line: 1826, column: 20, scope: !5036)
!5304 = !DILocation(line: 1827, column: 4, scope: !5036)
!5305 = !DILocation(line: 0, scope: !5036)
!5306 = !DILocation(line: 1827, column: 21, scope: !5036)
!5307 = !DILocation(line: 1827, column: 18, scope: !5036)
!5308 = !DILocation(line: 1828, column: 5, scope: !5043)
!5309 = !DILocation(line: 0, scope: !5043)
!5310 = !DILocation(line: 1828, column: 5, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5043, file: !2389, line: 1828, column: 5)
!5312 = distinct !{!5312, !5304, !5313}
!5313 = !DILocation(line: 1829, column: 4, scope: !5036)
!5314 = !DILocation(line: 1831, column: 4, scope: !5046)
!5315 = !DILocation(line: 0, scope: !5046)
!5316 = !DILocation(line: 1831, column: 4, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5046, file: !2389, line: 1831, column: 4)
!5318 = !DILocation(line: 1835, column: 16, scope: !4937)
!5319 = !DILocation(line: 1835, column: 3, scope: !4937)
!5320 = !DILocation(line: 1836, column: 4, scope: !5048)
!5321 = !DILocation(line: 0, scope: !5048)
!5322 = !DILocation(line: 1836, column: 4, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5048, file: !2389, line: 1836, column: 4)
!5324 = !DILocation(line: 1837, column: 4, scope: !5049)
!5325 = distinct !{!5325, !5319, !5326}
!5326 = !DILocation(line: 1838, column: 3, scope: !4937)
!5327 = !DILocation(line: 1844, column: 1, scope: !4910)
!5328 = distinct !DISubprogram(name: "extract_conversion", scope: !2389, file: !2389, line: 642, type: !5329, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5331)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!199, !4985, !199}
!5331 = !{!5332, !5333}
!5332 = !DILocalVariable(name: "conv", arg: 1, scope: !5328, file: !2389, line: 642, type: !4985)
!5333 = !DILocalVariable(name: "sp", arg: 2, scope: !5328, file: !2389, line: 643, type: !199)
!5334 = !DILocation(line: 0, scope: !5328)
!5335 = !DILocation(line: 645, column: 10, scope: !5328)
!5336 = !DILocation(line: 653, column: 2, scope: !5328)
!5337 = !DILocation(line: 654, column: 6, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5328, file: !2389, line: 654, column: 6)
!5339 = !DILocation(line: 654, column: 10, scope: !5338)
!5340 = !DILocation(line: 654, column: 6, scope: !5328)
!5341 = !DILocation(line: 655, column: 24, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5338, file: !2389, line: 654, column: 18)
!5343 = !DILocation(line: 655, column: 19, scope: !5342)
!5344 = !DILocation(line: 656, column: 3, scope: !5342)
!5345 = !DILocation(line: 659, column: 7, scope: !5328)
!5346 = !DILocation(line: 660, column: 7, scope: !5328)
!5347 = !DILocation(line: 661, column: 7, scope: !5328)
!5348 = !DILocation(line: 662, column: 7, scope: !5328)
!5349 = !DILocation(line: 663, column: 7, scope: !5328)
!5350 = !DILocation(line: 665, column: 2, scope: !5328)
!5351 = !DILocation(line: 666, column: 1, scope: !5328)
!5352 = distinct !DISubprogram(name: "outs", scope: !2389, file: !2389, line: 1319, type: !5353, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5355)
!5353 = !DISubroutineType(types: !5354)
!5354 = !{!103, !3162, !102, !199, !199}
!5355 = !{!5356, !5357, !5358, !5359, !5360, !5361}
!5356 = !DILocalVariable(name: "out", arg: 1, scope: !5352, file: !2389, line: 1319, type: !3162)
!5357 = !DILocalVariable(name: "ctx", arg: 2, scope: !5352, file: !2389, line: 1320, type: !102)
!5358 = !DILocalVariable(name: "sp", arg: 3, scope: !5352, file: !2389, line: 1321, type: !199)
!5359 = !DILocalVariable(name: "ep", arg: 4, scope: !5352, file: !2389, line: 1322, type: !199)
!5360 = !DILocalVariable(name: "count", scope: !5352, file: !2389, line: 1324, type: !120)
!5361 = !DILocalVariable(name: "rc", scope: !5362, file: !2389, line: 1327, type: !103)
!5362 = distinct !DILexicalBlock(scope: !5352, file: !2389, line: 1326, column: 45)
!5363 = !DILocation(line: 0, scope: !5352)
!5364 = !DILocation(line: 1326, column: 2, scope: !5352)
!5365 = !DILocation(line: 1324, column: 9, scope: !5352)
!5366 = !DILocation(line: 1326, column: 13, scope: !5352)
!5367 = !DILocation(line: 1326, column: 19, scope: !5352)
!5368 = !DILocation(line: 1327, column: 21, scope: !5362)
!5369 = !DILocation(line: 1326, column: 36, scope: !5352)
!5370 = !DILocation(line: 1326, column: 39, scope: !5352)
!5371 = !DILocation(line: 1327, column: 24, scope: !5362)
!5372 = !DILocation(line: 1327, column: 16, scope: !5362)
!5373 = !DILocation(line: 1327, column: 12, scope: !5362)
!5374 = !DILocation(line: 0, scope: !5362)
!5375 = !DILocation(line: 1329, column: 10, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5362, file: !2389, line: 1329, column: 7)
!5377 = !DILocation(line: 1329, column: 7, scope: !5362)
!5378 = distinct !{!5378, !5364, !5379}
!5379 = !DILocation(line: 1333, column: 2, scope: !5352)
!5380 = !DILocation(line: 1336, column: 1, scope: !5352)
!5381 = distinct !DISubprogram(name: "encode_uint", scope: !2389, file: !2389, line: 788, type: !5382, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5384)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!1046, !2411, !4985, !1046, !199}
!5384 = !{!5385, !5386, !5387, !5388, !5389, !5390, !5392, !5393}
!5385 = !DILocalVariable(name: "value", arg: 1, scope: !5381, file: !2389, line: 788, type: !2411)
!5386 = !DILocalVariable(name: "conv", arg: 2, scope: !5381, file: !2389, line: 789, type: !4985)
!5387 = !DILocalVariable(name: "bps", arg: 3, scope: !5381, file: !2389, line: 790, type: !1046)
!5388 = !DILocalVariable(name: "bpe", arg: 4, scope: !5381, file: !2389, line: 791, type: !199)
!5389 = !DILocalVariable(name: "upcase", scope: !5381, file: !2389, line: 793, type: !211)
!5390 = !DILocalVariable(name: "radix", scope: !5381, file: !2389, line: 794, type: !5391)
!5391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5392 = !DILocalVariable(name: "bp", scope: !5381, file: !2389, line: 795, type: !1046)
!5393 = !DILocalVariable(name: "lsv", scope: !5394, file: !2389, line: 798, type: !32)
!5394 = distinct !DILexicalBlock(scope: !5381, file: !2389, line: 797, column: 5)
!5395 = !DILocation(line: 0, scope: !5381)
!5396 = !DILocation(line: 793, column: 35, scope: !5381)
!5397 = !DILocation(line: 793, column: 24, scope: !5381)
!5398 = !DILocation(line: 793, column: 16, scope: !5381)
!5399 = !DILocation(line: 794, column: 29, scope: !5381)
!5400 = !DILocation(line: 795, column: 24, scope: !5381)
!5401 = !DILocation(line: 795, column: 17, scope: !5381)
!5402 = !DILocation(line: 797, column: 2, scope: !5381)
!5403 = !DILocation(line: 802, column: 9, scope: !5394)
!5404 = !DILocation(line: 798, column: 22, scope: !5394)
!5405 = !DILocation(line: 0, scope: !5394)
!5406 = !DILocation(line: 800, column: 16, scope: !5394)
!5407 = !DILocation(line: 800, column: 11, scope: !5394)
!5408 = !DILocation(line: 800, column: 4, scope: !5394)
!5409 = !DILocation(line: 800, column: 9, scope: !5394)
!5410 = !DILocation(line: 803, column: 18, scope: !5381)
!5411 = !DILocation(line: 803, column: 24, scope: !5381)
!5412 = !DILocation(line: 803, column: 2, scope: !5394)
!5413 = distinct !{!5413, !5402, !5414}
!5414 = !DILocation(line: 803, column: 37, scope: !5381)
!5415 = !DILocation(line: 808, column: 12, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5381, file: !2389, line: 808, column: 6)
!5417 = !DILocation(line: 808, column: 6, scope: !5381)
!5418 = !DILocation(line: 809, column: 7, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !2389, line: 808, column: 23)
!5420 = !DILocation(line: 813, column: 3, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !2389, line: 811, column: 27)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !2389, line: 811, column: 14)
!5423 = distinct !DILexicalBlock(scope: !5419, file: !2389, line: 809, column: 7)
!5424 = !DILocation(line: 0, scope: !5423)
!5425 = !DILocation(line: 818, column: 2, scope: !5381)
!5426 = distinct !DISubprogram(name: "store_count", scope: !2389, file: !2389, line: 1280, type: !5427, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5431)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{null, !5429, !102, !103}
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 32)
!5430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4952)
!5431 = !{!5432, !5433, !5434}
!5432 = !DILocalVariable(name: "conv", arg: 1, scope: !5426, file: !2389, line: 1280, type: !5429)
!5433 = !DILocalVariable(name: "dp", arg: 2, scope: !5426, file: !2389, line: 1281, type: !102)
!5434 = !DILocalVariable(name: "count", arg: 3, scope: !5426, file: !2389, line: 1282, type: !103)
!5435 = !DILocation(line: 0, scope: !5426)
!5436 = !DILocation(line: 1284, column: 38, scope: !5426)
!5437 = !DILocation(line: 1284, column: 2, scope: !5426)
!5438 = !DILocation(line: 1286, column: 4, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5426, file: !2389, line: 1284, column: 50)
!5440 = !DILocation(line: 1286, column: 14, scope: !5439)
!5441 = !DILocation(line: 1287, column: 3, scope: !5439)
!5442 = !DILocation(line: 1289, column: 24, scope: !5439)
!5443 = !DILocation(line: 1289, column: 22, scope: !5439)
!5444 = !DILocation(line: 1290, column: 3, scope: !5439)
!5445 = !DILocation(line: 1292, column: 18, scope: !5439)
!5446 = !DILocation(line: 1292, column: 4, scope: !5439)
!5447 = !DILocation(line: 1292, column: 16, scope: !5439)
!5448 = !DILocation(line: 1293, column: 3, scope: !5439)
!5449 = !DILocation(line: 1295, column: 4, scope: !5439)
!5450 = !DILocation(line: 1295, column: 15, scope: !5439)
!5451 = !DILocation(line: 1296, column: 3, scope: !5439)
!5452 = !DILocation(line: 1298, column: 22, scope: !5439)
!5453 = !DILocation(line: 1298, column: 4, scope: !5439)
!5454 = !DILocation(line: 1298, column: 20, scope: !5439)
!5455 = !DILocation(line: 1299, column: 3, scope: !5439)
!5456 = !DILocation(line: 1301, column: 21, scope: !5439)
!5457 = !DILocation(line: 1301, column: 4, scope: !5439)
!5458 = !DILocation(line: 1301, column: 19, scope: !5439)
!5459 = !DILocation(line: 1302, column: 3, scope: !5439)
!5460 = !DILocation(line: 1304, column: 4, scope: !5439)
!5461 = !DILocation(line: 1304, column: 17, scope: !5439)
!5462 = !DILocation(line: 1305, column: 3, scope: !5439)
!5463 = !DILocation(line: 1307, column: 4, scope: !5439)
!5464 = !DILocation(line: 1307, column: 20, scope: !5439)
!5465 = !DILocation(line: 1308, column: 3, scope: !5439)
!5466 = !DILocation(line: 1316, column: 1, scope: !5426)
!5467 = distinct !DISubprogram(name: "isupper", scope: !5468, file: !5468, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5469)
!5468 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5469 = !{!5470}
!5470 = !DILocalVariable(name: "a", arg: 1, scope: !5467, file: !5468, line: 16, type: !103)
!5471 = !DILocation(line: 0, scope: !5467)
!5472 = !DILocation(line: 18, column: 29, scope: !5467)
!5473 = !DILocation(line: 18, column: 45, scope: !5467)
!5474 = !DILocation(line: 18, column: 2, scope: !5467)
!5475 = distinct !DISubprogram(name: "conversion_radix", scope: !2389, file: !2389, line: 761, type: !5476, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5478)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!120, !109}
!5478 = !{!5479}
!5479 = !DILocalVariable(name: "specifier", arg: 1, scope: !5475, file: !2389, line: 761, type: !109)
!5480 = !DILocation(line: 0, scope: !5475)
!5481 = !DILocation(line: 763, column: 2, scope: !5475)
!5482 = !DILocation(line: 770, column: 3, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5475, file: !2389, line: 763, column: 21)
!5484 = !DILocation(line: 774, column: 3, scope: !5483)
!5485 = !DILocation(line: 0, scope: !5483)
!5486 = !DILocation(line: 776, column: 1, scope: !5475)
!5487 = distinct !DISubprogram(name: "extract_flags", scope: !2389, file: !2389, line: 339, type: !5329, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5488)
!5488 = !{!5489, !5490, !5491}
!5489 = !DILocalVariable(name: "conv", arg: 1, scope: !5487, file: !2389, line: 339, type: !4985)
!5490 = !DILocalVariable(name: "sp", arg: 2, scope: !5487, file: !2389, line: 340, type: !199)
!5491 = !DILocalVariable(name: "loop", scope: !5487, file: !2389, line: 342, type: !211)
!5492 = !DILocation(line: 0, scope: !5487)
!5493 = !DILocation(line: 344, column: 2, scope: !5487)
!5494 = !DILocation(line: 345, column: 11, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5487, file: !2389, line: 344, column: 5)
!5496 = !DILocation(line: 345, column: 3, scope: !5495)
!5497 = !DILocation(line: 351, column: 4, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5495, file: !2389, line: 345, column: 16)
!5499 = !DILocation(line: 354, column: 4, scope: !5498)
!5500 = !DILocation(line: 357, column: 4, scope: !5498)
!5501 = !DILocation(line: 360, column: 4, scope: !5498)
!5502 = !DILocation(line: 0, scope: !5498)
!5503 = !DILocation(line: 370, column: 12, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5487, file: !2389, line: 370, column: 6)
!5505 = !DILocation(line: 370, column: 22, scope: !5504)
!5506 = !DILocation(line: 371, column: 19, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5504, file: !2389, line: 370, column: 42)
!5508 = !DILocation(line: 372, column: 2, scope: !5507)
!5509 = !DILocation(line: 376, column: 2, scope: !5487)
!5510 = distinct !DISubprogram(name: "extract_width", scope: !2389, file: !2389, line: 388, type: !5329, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5511)
!5511 = !{!5512, !5513, !5514, !5515}
!5512 = !DILocalVariable(name: "conv", arg: 1, scope: !5510, file: !2389, line: 388, type: !4985)
!5513 = !DILocalVariable(name: "sp", arg: 2, scope: !5510, file: !2389, line: 389, type: !199)
!5514 = !DILocalVariable(name: "wp", scope: !5510, file: !2389, line: 398, type: !199)
!5515 = !DILocalVariable(name: "width", scope: !5510, file: !2389, line: 399, type: !120)
!5516 = !DILocation(line: 0, scope: !5510)
!5517 = !DILocation(line: 391, column: 8, scope: !5510)
!5518 = !DILocation(line: 391, column: 22, scope: !5510)
!5519 = !DILocation(line: 393, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5510, file: !2389, line: 393, column: 6)
!5521 = !DILocation(line: 393, column: 10, scope: !5520)
!5522 = !DILocation(line: 393, column: 6, scope: !5510)
!5523 = !DILocation(line: 394, column: 20, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !2389, line: 393, column: 18)
!5525 = !DILocation(line: 395, column: 10, scope: !5524)
!5526 = !DILocation(line: 395, column: 3, scope: !5524)
!5527 = !DILocation(line: 399, column: 17, scope: !5510)
!5528 = !DILocation(line: 401, column: 6, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5510, file: !2389, line: 401, column: 6)
!5530 = !DILocation(line: 401, column: 9, scope: !5529)
!5531 = !DILocation(line: 401, column: 6, scope: !5510)
!5532 = !DILocation(line: 402, column: 23, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5529, file: !2389, line: 401, column: 16)
!5534 = !DILocation(line: 403, column: 9, scope: !5533)
!5535 = !DILocation(line: 403, column: 21, scope: !5533)
!5536 = !DILocation(line: 405, column: 11, scope: !5533)
!5537 = !DILocation(line: 404, column: 21, scope: !5533)
!5538 = !DILocation(line: 406, column: 2, scope: !5533)
!5539 = !DILocation(line: 409, column: 1, scope: !5510)
!5540 = distinct !DISubprogram(name: "extract_prec", scope: !2389, file: !2389, line: 420, type: !5329, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5541)
!5541 = !{!5542, !5543, !5544}
!5542 = !DILocalVariable(name: "conv", arg: 1, scope: !5540, file: !2389, line: 420, type: !4985)
!5543 = !DILocalVariable(name: "sp", arg: 2, scope: !5540, file: !2389, line: 421, type: !199)
!5544 = !DILocalVariable(name: "prec", scope: !5540, file: !2389, line: 435, type: !120)
!5545 = !DILocation(line: 0, scope: !5540)
!5546 = !DILocation(line: 423, column: 24, scope: !5540)
!5547 = !DILocation(line: 423, column: 28, scope: !5540)
!5548 = !DILocation(line: 423, column: 8, scope: !5540)
!5549 = !DILocation(line: 423, column: 21, scope: !5540)
!5550 = !DILocation(line: 425, column: 6, scope: !5540)
!5551 = !DILocation(line: 428, column: 2, scope: !5540)
!5552 = !DILocation(line: 430, column: 6, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5540, file: !2389, line: 430, column: 6)
!5554 = !DILocation(line: 430, column: 10, scope: !5553)
!5555 = !DILocation(line: 430, column: 6, scope: !5540)
!5556 = !DILocation(line: 431, column: 19, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5553, file: !2389, line: 430, column: 18)
!5558 = !DILocation(line: 432, column: 10, scope: !5557)
!5559 = !DILocation(line: 432, column: 3, scope: !5557)
!5560 = !DILocation(line: 435, column: 16, scope: !5540)
!5561 = !DILocation(line: 437, column: 8, scope: !5540)
!5562 = !DILocation(line: 437, column: 19, scope: !5540)
!5563 = !DILocation(line: 439, column: 10, scope: !5540)
!5564 = !DILocation(line: 438, column: 20, scope: !5540)
!5565 = !DILocation(line: 441, column: 9, scope: !5540)
!5566 = !DILocation(line: 442, column: 1, scope: !5540)
!5567 = distinct !DISubprogram(name: "extract_length", scope: !2389, file: !2389, line: 453, type: !5329, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5568)
!5568 = !{!5569, !5570}
!5569 = !DILocalVariable(name: "conv", arg: 1, scope: !5567, file: !2389, line: 453, type: !4985)
!5570 = !DILocalVariable(name: "sp", arg: 2, scope: !5567, file: !2389, line: 454, type: !199)
!5571 = !DILocation(line: 0, scope: !5567)
!5572 = !DILocation(line: 456, column: 10, scope: !5567)
!5573 = !DILocation(line: 456, column: 2, scope: !5567)
!5574 = !DILocation(line: 458, column: 8, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !2389, line: 458, column: 7)
!5576 = distinct !DILexicalBlock(scope: !5567, file: !2389, line: 456, column: 15)
!5577 = !DILocation(line: 458, column: 7, scope: !5575)
!5578 = !DILocation(line: 458, column: 13, scope: !5575)
!5579 = !DILocation(line: 0, scope: !5575)
!5580 = !DILocation(line: 458, column: 7, scope: !5576)
!5581 = !DILocation(line: 459, column: 21, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5575, file: !2389, line: 458, column: 21)
!5583 = !DILocation(line: 460, column: 4, scope: !5582)
!5584 = !DILocation(line: 461, column: 3, scope: !5582)
!5585 = !DILocation(line: 462, column: 21, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5575, file: !2389, line: 461, column: 10)
!5587 = !DILocation(line: 466, column: 8, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5576, file: !2389, line: 466, column: 7)
!5589 = !DILocation(line: 466, column: 7, scope: !5588)
!5590 = !DILocation(line: 466, column: 13, scope: !5588)
!5591 = !DILocation(line: 0, scope: !5588)
!5592 = !DILocation(line: 466, column: 7, scope: !5576)
!5593 = !DILocation(line: 467, column: 21, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5588, file: !2389, line: 466, column: 21)
!5595 = !DILocation(line: 468, column: 4, scope: !5594)
!5596 = !DILocation(line: 469, column: 3, scope: !5594)
!5597 = !DILocation(line: 470, column: 21, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5588, file: !2389, line: 469, column: 10)
!5599 = !DILocation(line: 474, column: 9, scope: !5576)
!5600 = !DILocation(line: 474, column: 20, scope: !5576)
!5601 = !DILocation(line: 475, column: 3, scope: !5576)
!5602 = !DILocation(line: 476, column: 3, scope: !5576)
!5603 = !DILocation(line: 478, column: 9, scope: !5576)
!5604 = !DILocation(line: 478, column: 20, scope: !5576)
!5605 = !DILocation(line: 479, column: 3, scope: !5576)
!5606 = !DILocation(line: 480, column: 3, scope: !5576)
!5607 = !DILocation(line: 482, column: 9, scope: !5576)
!5608 = !DILocation(line: 482, column: 20, scope: !5576)
!5609 = !DILocation(line: 483, column: 3, scope: !5576)
!5610 = !DILocation(line: 484, column: 3, scope: !5576)
!5611 = !DILocation(line: 486, column: 9, scope: !5576)
!5612 = !DILocation(line: 486, column: 20, scope: !5576)
!5613 = !DILocation(line: 487, column: 3, scope: !5576)
!5614 = !DILocation(line: 492, column: 21, scope: !5576)
!5615 = !DILocation(line: 493, column: 3, scope: !5576)
!5616 = !DILocation(line: 495, column: 9, scope: !5576)
!5617 = !DILocation(line: 495, column: 20, scope: !5576)
!5618 = !DILocation(line: 496, column: 3, scope: !5576)
!5619 = !DILocation(line: 498, column: 2, scope: !5567)
!5620 = distinct !DISubprogram(name: "extract_specifier", scope: !2389, file: !2389, line: 513, type: !5329, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5621)
!5621 = !{!5622, !5623, !5624, !5625}
!5622 = !DILocalVariable(name: "conv", arg: 1, scope: !5620, file: !2389, line: 513, type: !4985)
!5623 = !DILocalVariable(name: "sp", arg: 2, scope: !5620, file: !2389, line: 514, type: !199)
!5624 = !DILocalVariable(name: "unsupported", scope: !5620, file: !2389, line: 516, type: !211)
!5625 = !DILabel(scope: !5626, name: "int_conv", file: !2389, line: 526)
!5626 = distinct !DILexicalBlock(scope: !5620, file: !2389, line: 520, column: 27)
!5627 = !DILocation(line: 0, scope: !5620)
!5628 = !DILocation(line: 518, column: 20, scope: !5620)
!5629 = !DILocation(line: 518, column: 8, scope: !5620)
!5630 = !DILocation(line: 518, column: 18, scope: !5620)
!5631 = !DILocation(line: 520, column: 2, scope: !5620)
!5632 = !DILocation(line: 525, column: 3, scope: !5626)
!5633 = !DILocation(line: 0, scope: !5626)
!5634 = !DILocation(line: 526, column: 1, scope: !5626)
!5635 = !DILocation(line: 528, column: 24, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5626, file: !2389, line: 528, column: 7)
!5637 = !DILocation(line: 528, column: 7, scope: !5626)
!5638 = !DILocation(line: 535, column: 23, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5626, file: !2389, line: 535, column: 7)
!5640 = !DILocation(line: 535, column: 7, scope: !5626)
!5641 = !DILocation(line: 536, column: 36, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5639, file: !2389, line: 535, column: 31)
!5643 = !DILocation(line: 537, column: 3, scope: !5642)
!5644 = !DILocation(line: 570, column: 9, scope: !5626)
!5645 = !DILocation(line: 570, column: 23, scope: !5626)
!5646 = !DILocation(line: 575, column: 4, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !2389, line: 573, column: 48)
!5648 = distinct !DILexicalBlock(scope: !5626, file: !2389, line: 573, column: 7)
!5649 = !DILocation(line: 603, column: 9, scope: !5626)
!5650 = !DILocation(line: 603, column: 23, scope: !5626)
!5651 = !DILocation(line: 605, column: 24, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5626, file: !2389, line: 605, column: 7)
!5653 = !DILocation(line: 605, column: 7, scope: !5626)
!5654 = !DILocation(line: 612, column: 9, scope: !5626)
!5655 = !DILocation(line: 612, column: 23, scope: !5626)
!5656 = !DILocation(line: 619, column: 24, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5626, file: !2389, line: 619, column: 7)
!5658 = !DILocation(line: 619, column: 7, scope: !5626)
!5659 = !DILocation(line: 625, column: 9, scope: !5626)
!5660 = !DILocation(line: 625, column: 17, scope: !5626)
!5661 = !DILocation(line: 626, column: 3, scope: !5626)
!5662 = !DILocation(line: 629, column: 20, scope: !5620)
!5663 = !DILocation(line: 629, column: 8, scope: !5620)
!5664 = !DILocation(line: 518, column: 23, scope: !5620)
!5665 = !DILocation(line: 631, column: 2, scope: !5620)
!5666 = distinct !DISubprogram(name: "extract_decimal", scope: !2389, file: !2389, line: 318, type: !5667, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5670)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!120, !5669}
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!5670 = !{!5671, !5672, !5673}
!5671 = !DILocalVariable(name: "str", arg: 1, scope: !5666, file: !2389, line: 318, type: !5669)
!5672 = !DILocalVariable(name: "sp", scope: !5666, file: !2389, line: 320, type: !199)
!5673 = !DILocalVariable(name: "val", scope: !5666, file: !2389, line: 321, type: !120)
!5674 = !DILocation(line: 0, scope: !5666)
!5675 = !DILocation(line: 320, column: 19, scope: !5666)
!5676 = !DILocation(line: 323, column: 37, scope: !5666)
!5677 = !DILocation(line: 323, column: 17, scope: !5666)
!5678 = !DILocation(line: 323, column: 9, scope: !5666)
!5679 = !DILocation(line: 323, column: 2, scope: !5666)
!5680 = !DILocation(line: 324, column: 13, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5666, file: !2389, line: 323, column: 43)
!5682 = !DILocation(line: 324, column: 24, scope: !5681)
!5683 = !DILocation(line: 324, column: 19, scope: !5681)
!5684 = !DILocation(line: 324, column: 27, scope: !5681)
!5685 = distinct !{!5685, !5679, !5686}
!5686 = !DILocation(line: 325, column: 2, scope: !5666)
!5687 = !DILocation(line: 326, column: 7, scope: !5666)
!5688 = !DILocation(line: 327, column: 2, scope: !5666)
!5689 = distinct !DISubprogram(name: "isdigit", scope: !5468, file: !5468, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !5690)
!5690 = !{!5691}
!5691 = !DILocalVariable(name: "a", arg: 1, scope: !5689, file: !5468, line: 43, type: !103)
!5692 = !DILocation(line: 0, scope: !5689)
!5693 = !DILocation(line: 45, column: 29, scope: !5689)
!5694 = !DILocation(line: 45, column: 45, scope: !5689)
!5695 = !DILocation(line: 45, column: 2, scope: !5689)
!5696 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5697, file: !5697, line: 9, type: !2964, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !162)
!5697 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!5698 = !DILocation(line: 11, column: 1, scope: !5696)
!5699 = !{i64 2147561305, i64 2147561348, i64 2147561388}
!5700 = !DILocation(line: 12, column: 1, scope: !5696)
!5701 = !{i64 2147565532, i64 2147565575, i64 2147565615}
!5702 = !DILocation(line: 13, column: 1, scope: !5696)
!5703 = !{i64 2147565741, i64 2147565784, i64 2147565824}
!5704 = !DILocation(line: 14, column: 1, scope: !5696)
!5705 = !{i64 2147565910, i64 2147565953, i64 2147565993}
!5706 = !DILocation(line: 15, column: 1, scope: !5696)
!5707 = !{i64 2147566073, i64 2147566116, i64 2147566156}
!5708 = !DILocation(line: 16, column: 1, scope: !5696)
!5709 = !{i64 2147566257, i64 2147566300, i64 2147566340}
!5710 = !DILocation(line: 17, column: 1, scope: !5696)
!5711 = !{i64 2147566436, i64 2147566479, i64 2147566519}
!5712 = !DILocation(line: 18, column: 1, scope: !5696)
!5713 = !{i64 2147566679, i64 2147566722, i64 2147566762}
!5714 = !DILocation(line: 19, column: 1, scope: !5696)
!5715 = !{i64 2147566914, i64 2147566957, i64 2147566997}
!5716 = !DILocation(line: 20, column: 1, scope: !5696)
!5717 = !{i64 2147567101, i64 2147567144, i64 2147567184}
!5718 = !DILocation(line: 21, column: 1, scope: !5696)
!5719 = !{i64 2147567317, i64 2147567360, i64 2147567400}
!5720 = !DILocation(line: 22, column: 1, scope: !5696)
!5721 = !{i64 2147567520, i64 2147567563, i64 2147567603}
!5722 = !DILocation(line: 23, column: 1, scope: !5696)
!5723 = !{i64 2147567723, i64 2147567766, i64 2147567806}
!5724 = !DILocation(line: 24, column: 1, scope: !5696)
!5725 = !{i64 2147567898, i64 2147567941, i64 2147567981}
!5726 = !DILocation(line: 25, column: 1, scope: !5696)
!5727 = !{i64 2147568106, i64 2147568149, i64 2147568189}
!5728 = !DILocation(line: 26, column: 1, scope: !5696)
!5729 = !{i64 2147568310, i64 2147568353, i64 2147568393}
!5730 = !DILocation(line: 27, column: 1, scope: !5696)
!5731 = !{i64 2147568503, i64 2147568546, i64 2147568586}
!5732 = !DILocation(line: 28, column: 1, scope: !5696)
!5733 = !{i64 2147568705, i64 2147568748, i64 2147568788}
!5734 = !DILocation(line: 29, column: 1, scope: !5696)
!5735 = !{i64 2147568932, i64 2147568975, i64 2147569015}
!5736 = !DILocation(line: 30, column: 1, scope: !5696)
!5737 = !{i64 2147569134, i64 2147569177, i64 2147569217}
!5738 = !DILocation(line: 31, column: 1, scope: !5696)
!5739 = !{i64 2147569349, i64 2147569392, i64 2147569432}
!5740 = !DILocation(line: 32, column: 1, scope: !5696)
!5741 = !{i64 2147569521, i64 2147569564, i64 2147569604}
!5742 = !DILocation(line: 33, column: 1, scope: !5696)
!5743 = !{i64 2147569723, i64 2147569766, i64 2147569806}
!5744 = !DILocation(line: 34, column: 1, scope: !5696)
!5745 = !{i64 2147569949, i64 2147569992, i64 2147570032}
!5746 = !DILocation(line: 35, column: 1, scope: !5696)
!5747 = !{i64 2147570148, i64 2147570191, i64 2147570231}
!5748 = !DILocation(line: 36, column: 1, scope: !5696)
!5749 = !{i64 2147570323, i64 2147570366, i64 2147570406}
!5750 = !DILocation(line: 37, column: 1, scope: !5696)
!5751 = !{i64 2147570576, i64 2147570619, i64 2147570659}
!5752 = !DILocation(line: 38, column: 1, scope: !5696)
!5753 = !{i64 2147570817, i64 2147570860, i64 2147570900}
!5754 = !DILocation(line: 39, column: 1, scope: !5696)
!5755 = !{i64 2147571052, i64 2147571095, i64 2147571135}
!5756 = !DILocation(line: 40, column: 1, scope: !5696)
!5757 = !{i64 2147571278, i64 2147571321, i64 2147571361}
!5758 = !DILocation(line: 41, column: 1, scope: !5696)
!5759 = !{i64 2147571504, i64 2147571547, i64 2147571587}
!5760 = !DILocation(line: 42, column: 1, scope: !5696)
!5761 = !{i64 2147571739, i64 2147571782, i64 2147571822}
!5762 = !DILocation(line: 43, column: 1, scope: !5696)
!5763 = !{i64 2147571974, i64 2147572017, i64 2147572057}
!5764 = !DILocation(line: 44, column: 1, scope: !5696)
!5765 = !{i64 2147572209, i64 2147572252, i64 2147572292}
!5766 = !DILocation(line: 45, column: 1, scope: !5696)
!5767 = !{i64 2147572447, i64 2147572490, i64 2147572530}
!5768 = !DILocation(line: 46, column: 1, scope: !5696)
!5769 = !{i64 2147572721, i64 2147572764, i64 2147572804}
!5770 = !DILocation(line: 47, column: 1, scope: !5696)
!5771 = !{i64 2147572959, i64 2147573002, i64 2147573042}
!5772 = !DILocation(line: 48, column: 1, scope: !5696)
!5773 = !{i64 2147573212, i64 2147573255, i64 2147573295}
!5774 = !DILocation(line: 49, column: 1, scope: !5696)
!5775 = !{i64 2147573456, i64 2147573499, i64 2147573539}
!5776 = !DILocation(line: 50, column: 1, scope: !5696)
!5777 = !{i64 2147573706, i64 2147573749, i64 2147573789}
!5778 = !DILocation(line: 51, column: 1, scope: !5696)
!5779 = !{i64 2147573947, i64 2147573990, i64 2147574030}
!5780 = !DILocation(line: 52, column: 1, scope: !5696)
!5781 = !{i64 2147578255, i64 2147578298, i64 2147578338}
!5782 = !DILocation(line: 53, column: 1, scope: !5696)
!5783 = !{i64 2147578490, i64 2147578533, i64 2147578573}
!5784 = !DILocation(line: 54, column: 1, scope: !5696)
!5785 = !{i64 2147578725, i64 2147578768, i64 2147578808}
!5786 = !DILocation(line: 55, column: 1, scope: !5696)
!5787 = !{i64 2147578960, i64 2147579003, i64 2147579043}
!5788 = !DILocation(line: 56, column: 1, scope: !5696)
!5789 = !{i64 2147579195, i64 2147579238, i64 2147579278}
!5790 = !DILocation(line: 57, column: 1, scope: !5696)
!5791 = !{i64 2147579439, i64 2147579482, i64 2147579522}
!5792 = !DILocation(line: 58, column: 1, scope: !5696)
!5793 = !{i64 2147579677, i64 2147579720, i64 2147579760}
!5794 = !DILocation(line: 59, column: 1, scope: !5696)
!5795 = !{i64 2147579918, i64 2147579961, i64 2147580001}
!5796 = !DILocation(line: 60, column: 1, scope: !5696)
!5797 = !{i64 2147580198, i64 2147580241, i64 2147580281}
!5798 = !DILocation(line: 61, column: 1, scope: !5696)
!5799 = !{i64 2147580457, i64 2147580500, i64 2147580540}
!5800 = !DILocation(line: 62, column: 1, scope: !5696)
!5801 = !{i64 2147580695, i64 2147580738, i64 2147580778}
!5802 = !DILocation(line: 63, column: 1, scope: !5696)
!5803 = !{i64 2147580954, i64 2147580997, i64 2147581037}
!5804 = !DILocation(line: 64, column: 1, scope: !5696)
!5805 = !{i64 2147581183, i64 2147581226, i64 2147581266}
!5806 = !DILocation(line: 65, column: 1, scope: !5696)
!5807 = !{i64 2147581391, i64 2147581434, i64 2147581474}
!5808 = !DILocation(line: 66, column: 1, scope: !5696)
!5809 = !{i64 2147581602, i64 2147581645, i64 2147581685}
!5810 = !DILocation(line: 67, column: 1, scope: !5696)
!5811 = !{i64 2147581837, i64 2147581880, i64 2147581920}
!5812 = !DILocation(line: 68, column: 1, scope: !5696)
!5813 = !{i64 2147582066, i64 2147582109, i64 2147582149}
!5814 = !DILocation(line: 69, column: 1, scope: !5696)
!5815 = !{i64 2147582304, i64 2147582347, i64 2147582387}
!5816 = !DILocation(line: 70, column: 1, scope: !5696)
!5817 = !{i64 2147582536, i64 2147582579, i64 2147582619}
!5818 = !DILocation(line: 71, column: 1, scope: !5696)
!5819 = !{i64 2147582762, i64 2147582805, i64 2147582845}
!5820 = !DILocation(line: 72, column: 1, scope: !5696)
!5821 = !{i64 2147582979, i64 2147583022, i64 2147583062}
!5822 = !DILocation(line: 73, column: 1, scope: !5696)
!5823 = !{i64 2147583211, i64 2147583254, i64 2147583294}
!5824 = !DILocation(line: 74, column: 1, scope: !5696)
!5825 = !{i64 2147583437, i64 2147583480, i64 2147583520}
!5826 = !DILocation(line: 75, column: 1, scope: !5696)
!5827 = !{i64 2147583651, i64 2147583694, i64 2147583734}
!5828 = !DILocation(line: 76, column: 1, scope: !5696)
!5829 = !{i64 2147583871, i64 2147583914, i64 2147583954}
!5830 = !DILocation(line: 77, column: 1, scope: !5696)
!5831 = !{i64 2147584103, i64 2147584146, i64 2147584186}
!5832 = !DILocation(line: 78, column: 1, scope: !5696)
!5833 = !{i64 2147584311, i64 2147584354, i64 2147584394}
!5834 = !DILocation(line: 79, column: 1, scope: !5696)
!5835 = !{i64 2147584516, i64 2147584559, i64 2147584599}
!5836 = !DILocation(line: 80, column: 1, scope: !5696)
!5837 = !{i64 2147584733, i64 2147584776, i64 2147584816}
!5838 = !DILocation(line: 81, column: 1, scope: !5696)
!5839 = !{i64 2147584947, i64 2147584990, i64 2147585030}
!5840 = !DILocation(line: 82, column: 1, scope: !5696)
!5841 = !{i64 2147585173, i64 2147585216, i64 2147585256}
!5842 = !DILocation(line: 83, column: 1, scope: !5696)
!5843 = !{i64 2147585393, i64 2147585436, i64 2147585476}
!5844 = !DILocation(line: 84, column: 1, scope: !5696)
!5845 = !{i64 2147585598, i64 2147585641, i64 2147585681}
!5846 = !DILocation(line: 85, column: 1, scope: !5696)
!5847 = !{i64 2147585830, i64 2147585873, i64 2147585913}
!5848 = !DILocation(line: 86, column: 1, scope: !5696)
!5849 = !{i64 2147586065, i64 2147586108, i64 2147586148}
!5850 = !DILocation(line: 87, column: 1, scope: !5696)
!5851 = !{i64 2147586315, i64 2147586358, i64 2147586398}
!5852 = !DILocation(line: 88, column: 1, scope: !5696)
!5853 = !{i64 2147590626, i64 2147590669, i64 2147590709}
!5854 = !DILocation(line: 89, column: 1, scope: !5696)
!5855 = !{i64 2147590864, i64 2147590907, i64 2147590947}
!5856 = !DILocation(line: 90, column: 1, scope: !5696)
!5857 = !{i64 2147591075, i64 2147591118, i64 2147591158}
!5858 = !DILocation(line: 91, column: 1, scope: !5696)
!5859 = !{i64 2147591292, i64 2147591335, i64 2147591375}
!5860 = !DILocation(line: 92, column: 1, scope: !5696)
!5861 = !{i64 2147591488, i64 2147591531, i64 2147591571}
!5862 = !DILocation(line: 93, column: 1, scope: !5696)
!5863 = !{i64 2147591690, i64 2147591733, i64 2147591773}
!5864 = !DILocation(line: 94, column: 1, scope: !5696)
!5865 = !{i64 2147591883, i64 2147591926, i64 2147591966}
!5866 = !DILocation(line: 95, column: 1, scope: !5696)
!5867 = !{i64 2147592091, i64 2147592134, i64 2147592174}
!5868 = !DILocation(line: 96, column: 1, scope: !5696)
!5869 = !{i64 2147592287, i64 2147592330, i64 2147592370}
!5870 = !DILocation(line: 97, column: 1, scope: !5696)
!5871 = !{i64 2147592498, i64 2147592541, i64 2147592581}
!5872 = !DILocation(line: 98, column: 1, scope: !5696)
!5873 = !{i64 2147592709, i64 2147592752, i64 2147592792}
!5874 = !DILocation(line: 99, column: 1, scope: !5696)
!5875 = !{i64 2147592908, i64 2147592951, i64 2147592991}
!5876 = !DILocation(line: 100, column: 1, scope: !5696)
!5877 = !{i64 2147593083, i64 2147593126, i64 2147593166}
!5878 = !DILocation(line: 101, column: 1, scope: !5696)
!5879 = !{i64 2147593267, i64 2147593310, i64 2147593350}
!5880 = !DILocation(line: 102, column: 1, scope: !5696)
!5881 = !{i64 2147593469, i64 2147593512, i64 2147593552}
!5882 = !DILocation(line: 103, column: 1, scope: !5696)
!5883 = !{i64 2147593650, i64 2147593693, i64 2147593733}
!5884 = !DILocation(line: 104, column: 1, scope: !5696)
!5885 = !{i64 2147593849, i64 2147593892, i64 2147593932}
!5886 = !DILocation(line: 105, column: 1, scope: !5696)
!5887 = !{i64 2147594015, i64 2147594058, i64 2147594098}
!5888 = !DILocation(line: 106, column: 1, scope: !5696)
!5889 = !{i64 2147594199, i64 2147594242, i64 2147594282}
!5890 = !DILocation(line: 107, column: 1, scope: !5696)
!5891 = !{i64 2147594389, i64 2147594432, i64 2147594472}
!5892 = !DILocation(line: 108, column: 1, scope: !5696)
!5893 = !{i64 2147594573, i64 2147594616, i64 2147594656}
!5894 = !DILocation(line: 109, column: 1, scope: !5696)
!5895 = !{i64 2147594787, i64 2147594830, i64 2147594870}
!5896 = !DILocation(line: 110, column: 1, scope: !5696)
!5897 = !{i64 2147594998, i64 2147595041, i64 2147595081}
!5898 = !DILocation(line: 111, column: 1, scope: !5696)
!5899 = !{i64 2147595221, i64 2147595264, i64 2147595304}
!5900 = !DILocation(line: 112, column: 1, scope: !5696)
!5901 = !{i64 2147595405, i64 2147595448, i64 2147595488}
!5902 = !DILocation(line: 113, column: 1, scope: !5696)
!5903 = !{i64 2147595619, i64 2147595662, i64 2147595702}
!5904 = !DILocation(line: 114, column: 1, scope: !5696)
!5905 = !{i64 2147595785, i64 2147595828, i64 2147595868}
!5906 = !DILocation(line: 115, column: 1, scope: !5696)
!5907 = !{i64 2147595966, i64 2147596009, i64 2147596049}
!5908 = !DILocation(line: 116, column: 1, scope: !5696)
!5909 = !{i64 2147596159, i64 2147596202, i64 2147596242}
!5910 = !DILocation(line: 117, column: 1, scope: !5696)
!5911 = !{i64 2147596385, i64 2147596428, i64 2147596468}
!5912 = !DILocation(line: 118, column: 1, scope: !5696)
!5913 = !{i64 2147596599, i64 2147596642, i64 2147596682}
!5914 = !DILocation(line: 119, column: 1, scope: !5696)
!5915 = !{i64 2147596825, i64 2147596868, i64 2147596908}
!5916 = !DILocation(line: 120, column: 1, scope: !5696)
!5917 = !{i64 2147597042, i64 2147597085, i64 2147597125}
!5918 = !DILocation(line: 121, column: 1, scope: !5696)
!5919 = !{i64 2147597319, i64 2147597362, i64 2147597402}
!5920 = !DILocation(line: 122, column: 1, scope: !5696)
!5921 = !{i64 2147597545, i64 2147597588, i64 2147597628}
!5922 = !DILocation(line: 123, column: 1, scope: !5696)
!5923 = !{i64 2147597753, i64 2147597796, i64 2147597836}
!5924 = !DILocation(line: 124, column: 1, scope: !5696)
!5925 = !{i64 2147597949, i64 2147597992, i64 2147598032}
!5926 = !DILocation(line: 125, column: 1, scope: !5696)
!5927 = !{i64 2147598214, i64 2147598257, i64 2147598297}
!5928 = !DILocation(line: 126, column: 1, scope: !5696)
!5929 = !{i64 2147598428, i64 2147598471, i64 2147598511}
!5930 = !DILocation(line: 127, column: 1, scope: !5696)
!5931 = !{i64 2147598603, i64 2147598646, i64 2147598686}
!5932 = !DILocation(line: 128, column: 1, scope: !5696)
!5933 = !{i64 2147598857, i64 2147598900, i64 2147598940}
!5934 = !DILocation(line: 129, column: 1, scope: !5696)
!5935 = !{i64 2147599056, i64 2147599099, i64 2147599139}
!5936 = !DILocation(line: 130, column: 1, scope: !5696)
!5937 = !{i64 2147599298, i64 2147599341, i64 2147599381}
!5938 = !DILocation(line: 131, column: 1, scope: !5696)
!5939 = !{i64 2147599461, i64 2147599504, i64 2147599544}
!5940 = !DILocation(line: 132, column: 1, scope: !5696)
!5941 = !{i64 2147599648, i64 2147599691, i64 2147599731}
!5942 = !DILocation(line: 133, column: 1, scope: !5696)
!5943 = !{i64 2147603902, i64 2147603945, i64 2147603985}
!5944 = !DILocation(line: 134, column: 1, scope: !5696)
!5945 = !{i64 2147604085, i64 2147604128, i64 2147604168}
!5946 = !DILocation(line: 135, column: 1, scope: !5696)
!5947 = !{i64 2147604299, i64 2147604342, i64 2147604382}
!5948 = !DILocation(line: 136, column: 1, scope: !5696)
!5949 = !{i64 2147604510, i64 2147604553, i64 2147604593}
!5950 = !DILocation(line: 137, column: 1, scope: !5696)
!5951 = !{i64 2147604730, i64 2147604773, i64 2147604813}
!5952 = !DILocation(line: 138, column: 1, scope: !5696)
!5953 = !{i64 2147604937, i64 2147604980, i64 2147605020}
!5954 = !DILocation(line: 139, column: 1, scope: !5696)
!5955 = !{i64 2147605210, i64 2147605253, i64 2147605293}
!5956 = !DILocation(line: 140, column: 1, scope: !5696)
!5957 = !{i64 2147605458, i64 2147605501, i64 2147605541}
!5958 = !DILocation(line: 141, column: 1, scope: !5696)
!5959 = !{i64 2147605657, i64 2147605700, i64 2147605740}
!5960 = !DILocation(line: 142, column: 1, scope: !5696)
!5961 = !{i64 2147605892, i64 2147605935, i64 2147605975}
!5962 = !DILocation(line: 143, column: 1, scope: !5696)
!5963 = !{i64 2147606142, i64 2147606185, i64 2147606225}
!5964 = !DILocation(line: 144, column: 1, scope: !5696)
!5965 = !{i64 2147606344, i64 2147606387, i64 2147606427}
!5966 = !DILocation(line: 145, column: 1, scope: !5696)
!5967 = !{i64 2147606567, i64 2147606610, i64 2147606650}
!5968 = !DILocation(line: 146, column: 1, scope: !5696)
!5969 = !{i64 2147606781, i64 2147606824, i64 2147606864}
!5970 = !DILocation(line: 147, column: 1, scope: !5696)
!5971 = !{i64 2147607025, i64 2147607068, i64 2147607108}
!5972 = !DILocation(line: 148, column: 1, scope: !5696)
!5973 = !{i64 2147607254, i64 2147607297, i64 2147607337}
!5974 = !DILocation(line: 149, column: 1, scope: !5696)
!5975 = !{i64 2147607483, i64 2147607526, i64 2147607566}
!5976 = !DILocation(line: 150, column: 1, scope: !5696)
!5977 = !{i64 2147607691, i64 2147607734, i64 2147607774}
!5978 = !DILocation(line: 151, column: 1, scope: !5696)
!5979 = !{i64 2147607929, i64 2147607972, i64 2147608012}
!5980 = !DILocation(line: 152, column: 1, scope: !5696)
!5981 = !{i64 2147608155, i64 2147608198, i64 2147608238}
!5982 = !DILocation(line: 153, column: 1, scope: !5696)
!5983 = !{i64 2147608414, i64 2147608457, i64 2147608497}
!5984 = !DILocation(line: 154, column: 1, scope: !5696)
!5985 = !{i64 2147608634, i64 2147608677, i64 2147608717}
!5986 = !DILocation(line: 155, column: 1, scope: !5696)
!5987 = !{i64 2147608866, i64 2147608909, i64 2147608949}
!5988 = !DILocation(line: 156, column: 1, scope: !5696)
!5989 = !{i64 2147609107, i64 2147609150, i64 2147609190}
!5990 = !DILocation(line: 157, column: 1, scope: !5696)
!5991 = !{i64 2147609348, i64 2147609391, i64 2147609431}
!5992 = !DILocation(line: 158, column: 1, scope: !5696)
!5993 = !{i64 2147609571, i64 2147609614, i64 2147609654}
!5994 = !DILocation(line: 159, column: 1, scope: !5696)
!5995 = !{i64 2147609788, i64 2147609831, i64 2147609871}
!5996 = !DILocation(line: 160, column: 1, scope: !5696)
!5997 = !{i64 2147610029, i64 2147610072, i64 2147610112}
!5998 = !DILocation(line: 161, column: 1, scope: !5696)
!5999 = !{i64 2147610216, i64 2147610259, i64 2147610299}
!6000 = !DILocation(line: 162, column: 1, scope: !5696)
!6001 = !{i64 2147610403, i64 2147610446, i64 2147610486}
!6002 = !DILocation(line: 163, column: 1, scope: !5696)
!6003 = !{i64 2147610566, i64 2147610609, i64 2147610649}
!6004 = !DILocation(line: 164, column: 1, scope: !5696)
!6005 = !{i64 2147610825, i64 2147610868, i64 2147610908}
!6006 = !DILocation(line: 165, column: 1, scope: !5696)
!6007 = !{i64 2147611048, i64 2147611091, i64 2147611131}
!6008 = !DILocation(line: 166, column: 1, scope: !5696)
!6009 = !{i64 2147611277, i64 2147611320, i64 2147611360}
!6010 = !DILocation(line: 167, column: 1, scope: !5696)
!6011 = !{i64 2147611473, i64 2147611516, i64 2147611556}
!6012 = !DILocation(line: 168, column: 1, scope: !5696)
!6013 = !{i64 2147611685, i64 2147611728, i64 2147611768}
!6014 = !DILocation(line: 169, column: 1, scope: !5696)
!6015 = !{i64 2147611906, i64 2147611949, i64 2147611989}
!6016 = !DILocation(line: 170, column: 1, scope: !5696)
!6017 = !{i64 2147612120, i64 2147612163, i64 2147612203}
!6018 = !DILocation(line: 171, column: 1, scope: !5696)
!6019 = !{i64 2147616371, i64 2147616414, i64 2147616454}
!6020 = !DILocation(line: 172, column: 1, scope: !5696)
!6021 = !{i64 2147616570, i64 2147616613, i64 2147616653}
!6022 = !DILocation(line: 173, column: 1, scope: !5696)
!6023 = !{i64 2147616775, i64 2147616818, i64 2147616858}
!6024 = !DILocation(line: 174, column: 1, scope: !5696)
!6025 = !{i64 2147616995, i64 2147617038, i64 2147617078}
!6026 = !DILocation(line: 175, column: 1, scope: !5696)
!6027 = !{i64 2147617196, i64 2147617239, i64 2147617279}
!6028 = !DILocation(line: 176, column: 1, scope: !5696)
!6029 = !{i64 2147617395, i64 2147617438, i64 2147617478}
!6030 = !DILocation(line: 177, column: 1, scope: !5696)
!6031 = !{i64 2147617600, i64 2147617643, i64 2147617683}
!6032 = !DILocation(line: 178, column: 1, scope: !5696)
!6033 = !{i64 2147617769, i64 2147617812, i64 2147617852}
!6034 = !DILocation(line: 179, column: 1, scope: !5696)
!6035 = !{i64 2147617953, i64 2147617996, i64 2147618036}
!6036 = !DILocation(line: 180, column: 1, scope: !5696)
!6037 = !{i64 2147618137, i64 2147618180, i64 2147618220}
!6038 = !DILocation(line: 181, column: 1, scope: !5696)
!6039 = !{i64 2147618324, i64 2147618367, i64 2147618407}
!6040 = !DILocation(line: 182, column: 1, scope: !5696)
!6041 = !{i64 2147618508, i64 2147618551, i64 2147618591}
!6042 = !DILocation(line: 183, column: 1, scope: !5696)
!6043 = !{i64 2147618746, i64 2147618789, i64 2147618829}
!6044 = !DILocation(line: 184, column: 1, scope: !5696)
!6045 = !{i64 2147618976, i64 2147619019, i64 2147619059}
!6046 = !DILocation(line: 185, column: 1, scope: !5696)
!6047 = !{i64 2147619205, i64 2147619248, i64 2147619288}
!6048 = !DILocation(line: 186, column: 1, scope: !5696)
!6049 = !{i64 2147619392, i64 2147619435, i64 2147619475}
!6050 = !DILocation(line: 187, column: 1, scope: !5696)
!6051 = !{i64 2147619588, i64 2147619631, i64 2147619671}
!6052 = !DILocation(line: 188, column: 1, scope: !5696)
!6053 = !{i64 2147619796, i64 2147619839, i64 2147619879}
!6054 = !DILocation(line: 189, column: 1, scope: !5696)
!6055 = !{i64 2147620008, i64 2147620051, i64 2147620091}
!6056 = !DILocation(line: 190, column: 1, scope: !5696)
!6057 = !{i64 2147620207, i64 2147620250, i64 2147620290}
!6058 = !DILocation(line: 191, column: 1, scope: !5696)
!6059 = !{i64 2147620445, i64 2147620488, i64 2147620528}
!6060 = !DILocation(line: 192, column: 1, scope: !5696)
!6061 = !{i64 2147620641, i64 2147620684, i64 2147620724}
!6062 = !DILocation(line: 193, column: 1, scope: !5696)
!6063 = !{i64 2147620843, i64 2147620886, i64 2147620926}
!6064 = !DILocation(line: 194, column: 1, scope: !5696)
!6065 = !{i64 2147621036, i64 2147621079, i64 2147621119}
!6066 = !DILocation(line: 195, column: 1, scope: !5696)
!6067 = !{i64 2147621270, i64 2147621313, i64 2147621353}
!6068 = !DILocation(line: 196, column: 1, scope: !5696)
!6069 = !{i64 2147621433, i64 2147621476, i64 2147621516}
!6070 = !DILocation(line: 197, column: 1, scope: !5696)
!6071 = !{i64 2147621672, i64 2147621715, i64 2147621755}
!6072 = !DILocation(line: 198, column: 1, scope: !5696)
!6073 = !{i64 2147621911, i64 2147621954, i64 2147621994}
!6074 = !DILocation(line: 199, column: 1, scope: !5696)
!6075 = !{i64 2147622147, i64 2147622190, i64 2147622230}
!6076 = !DILocation(line: 200, column: 1, scope: !5696)
!6077 = !{i64 2147622377, i64 2147622420, i64 2147622460}
!6078 = !DILocation(line: 201, column: 1, scope: !5696)
!6079 = !{i64 2147622564, i64 2147622607, i64 2147622647}
!6080 = !DILocation(line: 202, column: 1, scope: !5696)
!6081 = !{i64 2147622763, i64 2147622806, i64 2147622846}
!6082 = !DILocation(line: 203, column: 1, scope: !5696)
!6083 = !{i64 2147623034, i64 2147623077, i64 2147623117}
!6084 = !DILocation(line: 204, column: 1, scope: !5696)
!6085 = !{i64 2147623209, i64 2147623252, i64 2147623292}
!6086 = !DILocation(line: 205, column: 1, scope: !5696)
!6087 = !{i64 2147623443, i64 2147623486, i64 2147623526}
!6088 = !DILocation(line: 206, column: 1, scope: !5696)
!6089 = !{i64 2147623651, i64 2147623694, i64 2147623734}
!6090 = !DILocation(line: 207, column: 1, scope: !5696)
!6091 = !{i64 2147623869, i64 2147623912, i64 2147623952}
!6092 = !DILocation(line: 208, column: 1, scope: !5696)
!6093 = !{i64 2147624059, i64 2147624102, i64 2147624142}
!6094 = !DILocation(line: 209, column: 1, scope: !5696)
!6095 = !{i64 2147624255, i64 2147624298, i64 2147624338}
!6096 = !DILocation(line: 210, column: 1, scope: !5696)
!6097 = !{i64 2147624461, i64 2147624504, i64 2147624544}
!6098 = !DILocation(line: 211, column: 1, scope: !5696)
!6099 = !{i64 2147624666, i64 2147624709, i64 2147624749}
!6100 = !DILocation(line: 212, column: 1, scope: !5696)
!6101 = !{i64 2147624892, i64 2147624935, i64 2147624975}
!6102 = !DILocation(line: 213, column: 1, scope: !5696)
!6103 = !{i64 2147625124, i64 2147625167, i64 2147625207}
!6104 = !DILocation(line: 214, column: 1, scope: !5696)
!6105 = !{i64 2147625308, i64 2147625351, i64 2147625391}
!6106 = !DILocation(line: 215, column: 1, scope: !5696)
!6107 = !{i64 2147629578, i64 2147629621, i64 2147629661}
!6108 = !DILocation(line: 216, column: 1, scope: !5696)
!6109 = !{i64 2147629762, i64 2147629805, i64 2147629845}
!6110 = !DILocation(line: 217, column: 1, scope: !5696)
!6111 = !{i64 2147629988, i64 2147630031, i64 2147630071}
!6112 = !DILocation(line: 218, column: 1, scope: !5696)
!6113 = !{i64 2147630214, i64 2147630257, i64 2147630297}
!6114 = !DILocation(line: 219, column: 1, scope: !5696)
!6115 = !{i64 2147630440, i64 2147630483, i64 2147630523}
!6116 = !DILocation(line: 220, column: 1, scope: !5696)
!6117 = !{i64 2147630666, i64 2147630709, i64 2147630749}
!6118 = !DILocation(line: 221, column: 1, scope: !5696)
!6119 = !{i64 2147630892, i64 2147630935, i64 2147630975}
!6120 = !DILocation(line: 222, column: 1, scope: !5696)
!6121 = !{i64 2147631124, i64 2147631167, i64 2147631207}
!6122 = !DILocation(line: 223, column: 1, scope: !5696)
!6123 = !{i64 2147631362, i64 2147631405, i64 2147631445}
!6124 = !DILocation(line: 224, column: 1, scope: !5696)
!6125 = !{i64 2147631582, i64 2147631625, i64 2147631665}
!6126 = !DILocation(line: 225, column: 1, scope: !5696)
!6127 = !{i64 2147631826, i64 2147631869, i64 2147631909}
!6128 = !DILocation(line: 226, column: 1, scope: !5696)
!6129 = !{i64 2147632067, i64 2147632110, i64 2147632150}
!6130 = !DILocation(line: 227, column: 1, scope: !5696)
!6131 = !{i64 2147632302, i64 2147632345, i64 2147632385}
!6132 = !DILocation(line: 228, column: 1, scope: !5696)
!6133 = !{i64 2147632534, i64 2147632577, i64 2147632617}
!6134 = !DILocation(line: 229, column: 1, scope: !5696)
!6135 = !{i64 2147632736, i64 2147632779, i64 2147632819}
!6136 = !DILocation(line: 230, column: 1, scope: !5696)
!6137 = !{i64 2147632986, i64 2147633029, i64 2147633069}
!6138 = !DILocation(line: 231, column: 1, scope: !5696)
!6139 = !{i64 2147633224, i64 2147633267, i64 2147633307}
!6140 = !DILocation(line: 232, column: 1, scope: !5696)
!6141 = !{i64 2147633408, i64 2147633451, i64 2147633491}
!6142 = !DILocation(line: 233, column: 1, scope: !5696)
!6143 = !{i64 2147633632, i64 2147633675, i64 2147633715}
!6144 = !DILocation(line: 234, column: 1, scope: !5696)
!6145 = !{i64 2147633870, i64 2147633913, i64 2147633953}
!6146 = !DILocation(line: 235, column: 1, scope: !5696)
!6147 = !{i64 2147634108, i64 2147634151, i64 2147634191}
!6148 = !DILocation(line: 236, column: 1, scope: !5696)
!6149 = !{i64 2147634301, i64 2147634344, i64 2147634384}
!6150 = !DILocation(line: 237, column: 1, scope: !5696)
!6151 = !{i64 2147634554, i64 2147634597, i64 2147634637}
!6152 = !DILocation(line: 238, column: 1, scope: !5696)
!6153 = !{i64 2147634768, i64 2147634811, i64 2147634851}
!6154 = !DILocation(line: 239, column: 1, scope: !5696)
!6155 = !{i64 2147634976, i64 2147635019, i64 2147635059}
!6156 = !DILocation(line: 240, column: 1, scope: !5696)
!6157 = !{i64 2147635166, i64 2147635209, i64 2147635249}
!6158 = !DILocation(line: 241, column: 1, scope: !5696)
!6159 = !{i64 2147635380, i64 2147635423, i64 2147635463}
!6160 = !DILocation(line: 242, column: 1, scope: !5696)
!6161 = !{i64 2147635642, i64 2147635685, i64 2147635725}
!6162 = !DILocation(line: 243, column: 1, scope: !5696)
!6163 = !{i64 2147635853, i64 2147635896, i64 2147635936}
!6164 = !DILocation(line: 244, column: 1, scope: !5696)
!6165 = !{i64 2147636097, i64 2147636140, i64 2147636180}
!6166 = !DILocation(line: 245, column: 1, scope: !5696)
!6167 = !{i64 2147636308, i64 2147636351, i64 2147636391}
!6168 = !DILocation(line: 246, column: 1, scope: !5696)
!6169 = !{i64 2147636537, i64 2147636580, i64 2147636620}
!6170 = !DILocation(line: 247, column: 1, scope: !5696)
!6171 = !{i64 2147636802, i64 2147636845, i64 2147636885}
!6172 = !DILocation(line: 248, column: 1, scope: !5696)
!6173 = !{i64 2147637007, i64 2147637050, i64 2147637090}
!6174 = !DILocation(line: 249, column: 1, scope: !5696)
!6175 = !{i64 2147637203, i64 2147637246, i64 2147637286}
!6176 = !DILocation(line: 250, column: 1, scope: !5696)
!6177 = !{i64 2147637426, i64 2147637469, i64 2147637509}
!6178 = !DILocation(line: 251, column: 1, scope: !5696)
!6179 = !{i64 2147637589, i64 2147637632, i64 2147637672}
!6180 = !DILocation(line: 252, column: 1, scope: !5696)
!6181 = !{i64 2147637794, i64 2147637837, i64 2147637877}
!6182 = !DILocation(line: 253, column: 1, scope: !5696)
!6183 = !{i64 2147638014, i64 2147638057, i64 2147638097}
!6184 = !DILocation(line: 254, column: 1, scope: !5696)
!6185 = !{i64 2147642289, i64 2147642332, i64 2147642372}
!6186 = !DILocation(line: 255, column: 1, scope: !5696)
!6187 = !{i64 2147642503, i64 2147642546, i64 2147642586}
!6188 = !DILocation(line: 256, column: 1, scope: !5696)
!6189 = !{i64 2147642723, i64 2147642766, i64 2147642806}
!6190 = !DILocation(line: 257, column: 1, scope: !5696)
!6191 = !{i64 2147642934, i64 2147642977, i64 2147643017}
!6192 = !DILocation(line: 258, column: 1, scope: !5696)
!6193 = !{i64 2147643127, i64 2147643170, i64 2147643210}
!6194 = !DILocation(line: 259, column: 1, scope: !5696)
!6195 = !{i64 2147643326, i64 2147643369, i64 2147643409}
!6196 = !DILocation(line: 260, column: 1, scope: !5696)
!6197 = !{i64 2147643498, i64 2147643541, i64 2147643581}
!6198 = !DILocation(line: 261, column: 1, scope: !5696)
!6199 = !{i64 2147643691, i64 2147643734, i64 2147643774}
!6200 = !DILocation(line: 262, column: 1, scope: !5696)
!6201 = !{i64 2147643887, i64 2147643930, i64 2147643970}
!6202 = !DILocation(line: 263, column: 1, scope: !5696)
!6203 = !{i64 2147644114, i64 2147644157, i64 2147644197}
!6204 = !DILocation(line: 264, column: 1, scope: !5696)
!6205 = !{i64 2147644331, i64 2147644374, i64 2147644414}
!6206 = !DILocation(line: 265, column: 1, scope: !5696)
!6207 = !{i64 2147644623, i64 2147644666, i64 2147644706}
!6208 = !DILocation(line: 266, column: 1, scope: !5696)
!6209 = !{i64 2147644855, i64 2147644898, i64 2147644938}
!6210 = !DILocation(line: 267, column: 1, scope: !5696)
!6211 = !{i64 2147645072, i64 2147645115, i64 2147645155}
!6212 = !DILocation(line: 268, column: 1, scope: !5696)
!6213 = !{i64 2147645279, i64 2147645322, i64 2147645362}
!6214 = !DILocation(line: 269, column: 1, scope: !5696)
!6215 = !{i64 2147645480, i64 2147645523, i64 2147645563}
!6216 = !DILocation(line: 270, column: 1, scope: !5696)
!6217 = !{i64 2147645712, i64 2147645755, i64 2147645795}
!6218 = !DILocation(line: 271, column: 1, scope: !5696)
!6219 = !{i64 2147645920, i64 2147645963, i64 2147646003}
!6220 = !DILocation(line: 272, column: 1, scope: !5696)
!6221 = !{i64 2147646110, i64 2147646153, i64 2147646193}
!6222 = !DILocation(line: 273, column: 1, scope: !5696)
!6223 = !{i64 2147646336, i64 2147646379, i64 2147646419}
!6224 = !DILocation(line: 274, column: 1, scope: !5696)
!6225 = !{i64 2147646525, i64 2147646568, i64 2147646608}
!6226 = !DILocation(line: 275, column: 1, scope: !5696)
!6227 = !{i64 2147646796, i64 2147646839, i64 2147646879}
!6228 = !DILocation(line: 276, column: 1, scope: !5696)
!6229 = !{i64 2147647016, i64 2147647059, i64 2147647099}
!6230 = !DILocation(line: 277, column: 1, scope: !5696)
!6231 = !{i64 2147647269, i64 2147647312, i64 2147647352}
!6232 = !DILocation(line: 278, column: 1, scope: !5696)
!6233 = !{i64 2147647477, i64 2147647520, i64 2147647560}
!6234 = !DILocation(line: 279, column: 1, scope: !5696)
!6235 = !{i64 2147647709, i64 2147647752, i64 2147647792}
!6236 = !DILocation(line: 280, column: 1, scope: !5696)
!6237 = !{i64 2147647920, i64 2147647963, i64 2147648003}
!6238 = !DILocation(line: 281, column: 1, scope: !5696)
!6239 = !{i64 2147648110, i64 2147648153, i64 2147648193}
!6240 = !DILocation(line: 282, column: 1, scope: !5696)
!6241 = !{i64 2147648324, i64 2147648367, i64 2147648407}
!6242 = !DILocation(line: 283, column: 1, scope: !5696)
!6243 = !{i64 2147648523, i64 2147648566, i64 2147648606}
!6244 = !DILocation(line: 284, column: 1, scope: !5696)
!6245 = !{i64 2147648710, i64 2147648753, i64 2147648793}
!6246 = !DILocation(line: 285, column: 1, scope: !5696)
!6247 = !{i64 2147648918, i64 2147648961, i64 2147649001}
!6248 = !DILocation(line: 286, column: 1, scope: !5696)
!6249 = !{i64 2147649147, i64 2147649190, i64 2147649230}
!6250 = !DILocation(line: 287, column: 1, scope: !5696)
!6251 = !{i64 2147649349, i64 2147649392, i64 2147649432}
!6252 = !DILocation(line: 288, column: 1, scope: !5696)
!6253 = !{i64 2147649548, i64 2147649591, i64 2147649631}
!6254 = !DILocation(line: 289, column: 1, scope: !5696)
!6255 = !{i64 2147649765, i64 2147649808, i64 2147649848}
!6256 = !DILocation(line: 291, column: 1, scope: !5696)
!6257 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !184, file: !184, line: 30, type: !191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6258)
!6258 = !{!6259, !6260}
!6259 = !DILocalVariable(name: "arg", arg: 1, scope: !6257, file: !184, line: 30, type: !193)
!6260 = !DILocalVariable(name: "key", scope: !6257, file: !184, line: 32, type: !137)
!6261 = !DILocation(line: 0, scope: !6257)
!6262 = !DILocation(line: 37, column: 2, scope: !6257)
!6263 = !DILocation(line: 38, column: 2, scope: !6257)
!6264 = !DILocation(line: 55, column: 2, scope: !6265, inlinedAt: !6272)
!6265 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6269)
!6266 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6267 = !DISubroutineType(types: !6268)
!6268 = !{!32}
!6269 = !{!6270, !6271}
!6270 = !DILocalVariable(name: "key", scope: !6265, file: !6266, line: 44, type: !32)
!6271 = !DILocalVariable(name: "tmp", scope: !6265, file: !6266, line: 53, type: !32)
!6272 = distinct !DILocation(line: 40, column: 8, scope: !6257)
!6273 = !{i64 2505290}
!6274 = !DILocation(line: 0, scope: !6265, inlinedAt: !6272)
!6275 = !DILocalVariable(name: "key", arg: 1, scope: !6276, file: !6266, line: 84, type: !32)
!6276 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{null, !32}
!6279 = !{!6275}
!6280 = !DILocation(line: 0, scope: !6276, inlinedAt: !6281)
!6281 = distinct !DILocation(line: 47, column: 2, scope: !6257)
!6282 = !DILocation(line: 95, column: 2, scope: !6276, inlinedAt: !6281)
!6283 = !{i64 2506107}
!6284 = !DILocation(line: 51, column: 18, scope: !6257)
!6285 = !DILocation(line: 53, column: 2, scope: !6257)
!6286 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6287, file: !6287, line: 1609, type: !2964, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6287 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6288 = !DILocation(line: 1611, column: 3, scope: !6286)
!6289 = !DILocation(line: 1612, column: 1, scope: !6286)
!6290 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6287, file: !6287, line: 1629, type: !2964, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6291 = !DILocation(line: 1631, column: 3, scope: !6290)
!6292 = !DILocation(line: 1632, column: 1, scope: !6290)
!6293 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !225, file: !225, line: 26, type: !231, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !222, retainedNodes: !6294)
!6294 = !{!6295}
!6295 = !DILocalVariable(name: "dev", arg: 1, scope: !6293, file: !225, line: 26, type: !233)
!6296 = !DILocation(line: 0, scope: !6293)
!6297 = !DILocation(line: 68, column: 2, scope: !6293)
!6298 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6299, file: !6299, line: 57, type: !6300, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !6346)
!6299 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6300 = !DISubroutineType(types: !6301)
!6301 = !{null, !32, !6302}
!6302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6303, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6304)
!6304 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2545, line: 141, baseType: !6305)
!6305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2545, line: 97, size: 256, elements: !6306)
!6306 = !{!6307}
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6305, file: !2545, line: 107, baseType: !6308, size: 256)
!6308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2545, line: 98, size: 256, elements: !6309)
!6309 = !{!6310, !6315, !6320, !6325, !6330, !6335, !6340, !6345}
!6310 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 99, baseType: !6311, size: 32)
!6311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 99, size: 32, elements: !6312)
!6312 = !{!6313, !6314}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6311, file: !2545, line: 99, baseType: !137, size: 32)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6311, file: !2545, line: 99, baseType: !137, size: 32)
!6315 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 100, baseType: !6316, size: 32, offset: 32)
!6316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 100, size: 32, elements: !6317)
!6317 = !{!6318, !6319}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6316, file: !2545, line: 100, baseType: !137, size: 32)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6316, file: !2545, line: 100, baseType: !137, size: 32)
!6320 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 101, baseType: !6321, size: 32, offset: 64)
!6321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 101, size: 32, elements: !6322)
!6322 = !{!6323, !6324}
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6321, file: !2545, line: 101, baseType: !137, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6321, file: !2545, line: 101, baseType: !137, size: 32)
!6325 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 102, baseType: !6326, size: 32, offset: 96)
!6326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 102, size: 32, elements: !6327)
!6327 = !{!6328, !6329}
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6326, file: !2545, line: 102, baseType: !137, size: 32)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6326, file: !2545, line: 102, baseType: !137, size: 32)
!6330 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 103, baseType: !6331, size: 32, offset: 128)
!6331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 103, size: 32, elements: !6332)
!6332 = !{!6333, !6334}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6331, file: !2545, line: 103, baseType: !137, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6331, file: !2545, line: 103, baseType: !137, size: 32)
!6335 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 104, baseType: !6336, size: 32, offset: 160)
!6336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 104, size: 32, elements: !6337)
!6337 = !{!6338, !6339}
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6336, file: !2545, line: 104, baseType: !137, size: 32)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6336, file: !2545, line: 104, baseType: !137, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_member, scope: !6308, file: !2545, line: 105, baseType: !6341, size: 32, offset: 192)
!6341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6308, file: !2545, line: 105, size: 32, elements: !6342)
!6342 = !{!6343, !6344}
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6341, file: !2545, line: 105, baseType: !137, size: 32)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6341, file: !2545, line: 105, baseType: !137, size: 32)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6308, file: !2545, line: 106, baseType: !137, size: 32, offset: 224)
!6346 = !{!6347, !6348}
!6347 = !DILocalVariable(name: "reason", arg: 1, scope: !6298, file: !6299, line: 57, type: !32)
!6348 = !DILocalVariable(name: "esf", arg: 2, scope: !6298, file: !6299, line: 57, type: !6302)
!6349 = !DILocation(line: 0, scope: !6298)
!6350 = !DILocation(line: 63, column: 2, scope: !6298)
!6351 = !DILocation(line: 64, column: 1, scope: !6298)
!6352 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6299, file: !6299, line: 82, type: !6353, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !6368)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !6302, !6355}
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 32)
!6356 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6357)
!6357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6358)
!6358 = !{!6359, !6360, !6361, !6362, !6363, !6364, !6365, !6366, !6367}
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6357, file: !334, line: 26, baseType: !137, size: 32)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6357, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6357, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6357, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6357, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6357, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6357, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6357, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6357, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6368 = !{!6369, !6370, !6371}
!6369 = !DILocalVariable(name: "esf", arg: 1, scope: !6352, file: !6299, line: 82, type: !6302)
!6370 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6352, file: !6299, line: 82, type: !6355)
!6371 = !DILocalVariable(name: "reason", scope: !6352, file: !6299, line: 88, type: !32)
!6372 = !DILocation(line: 0, scope: !6352)
!6373 = !DILocation(line: 88, column: 35, scope: !6352)
!6374 = !DILocation(line: 108, column: 2, scope: !6352)
!6375 = !DILocation(line: 131, column: 1, scope: !6352)
!6376 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6299, file: !6299, line: 133, type: !6377, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !6379)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{null, !102}
!6379 = !{!6380, !6381, !6382}
!6380 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6376, file: !6299, line: 133, type: !102)
!6381 = !DILocalVariable(name: "ssf_contents", scope: !6376, file: !6299, line: 135, type: !149)
!6382 = !DILocalVariable(name: "oops_esf", scope: !6376, file: !6299, line: 136, type: !6304)
!6383 = !DILocation(line: 0, scope: !6376)
!6384 = !DILocation(line: 136, column: 2, scope: !6376)
!6385 = !DILocation(line: 136, column: 15, scope: !6376)
!6386 = !DILocation(line: 139, column: 22, scope: !6376)
!6387 = !DILocation(line: 139, column: 17, scope: !6376)
!6388 = !DILocation(line: 139, column: 20, scope: !6376)
!6389 = !DILocation(line: 141, column: 2, scope: !6376)
!6390 = !DILocation(line: 142, column: 2, scope: !6376)
!6391 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6392, file: !6392, line: 40, type: !6277, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6393)
!6392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6393 = !{!6394}
!6394 = !DILocalVariable(name: "irq", arg: 1, scope: !6391, file: !6392, line: 40, type: !32)
!6395 = !DILocation(line: 0, scope: !6391)
!6396 = !DILocation(line: 42, column: 2, scope: !6391)
!6397 = !DILocation(line: 43, column: 1, scope: !6391)
!6398 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !402, file: !402, line: 1684, type: !6399, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6401)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !669}
!6401 = !{!6402}
!6402 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6398, file: !402, line: 1684, type: !669)
!6403 = !DILocation(line: 0, scope: !6398)
!6404 = !DILocation(line: 1686, column: 23, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6398, file: !402, line: 1686, column: 7)
!6406 = !DILocation(line: 1686, column: 7, scope: !6398)
!6407 = !DILocation(line: 1688, column: 5, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6405, file: !402, line: 1687, column: 3)
!6409 = !{i64 2151638859}
!6410 = !DILocation(line: 1689, column: 81, scope: !6408)
!6411 = !DILocation(line: 1689, column: 60, scope: !6408)
!6412 = !DILocation(line: 1689, column: 34, scope: !6408)
!6413 = !DILocation(line: 1689, column: 5, scope: !6408)
!6414 = !DILocation(line: 1689, column: 43, scope: !6408)
!6415 = !DILocation(line: 1690, column: 5, scope: !6408)
!6416 = !{i64 2151638973}
!6417 = !DILocation(line: 1691, column: 3, scope: !6408)
!6418 = !DILocation(line: 1692, column: 1, scope: !6398)
!6419 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6392, file: !6392, line: 45, type: !6277, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6420)
!6420 = !{!6421}
!6421 = !DILocalVariable(name: "irq", arg: 1, scope: !6419, file: !6392, line: 45, type: !32)
!6422 = !DILocation(line: 0, scope: !6419)
!6423 = !DILocation(line: 47, column: 2, scope: !6419)
!6424 = !DILocation(line: 48, column: 1, scope: !6419)
!6425 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !402, file: !402, line: 1722, type: !6399, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6426)
!6426 = !{!6427}
!6427 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6425, file: !402, line: 1722, type: !669)
!6428 = !DILocation(line: 0, scope: !6425)
!6429 = !DILocation(line: 1724, column: 23, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6425, file: !402, line: 1724, column: 7)
!6431 = !DILocation(line: 1724, column: 7, scope: !6425)
!6432 = !DILocation(line: 1726, column: 81, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6430, file: !402, line: 1725, column: 3)
!6434 = !DILocation(line: 1726, column: 60, scope: !6433)
!6435 = !DILocation(line: 1726, column: 34, scope: !6433)
!6436 = !DILocation(line: 1726, column: 5, scope: !6433)
!6437 = !DILocation(line: 1726, column: 43, scope: !6433)
!6438 = !DILocation(line: 271, column: 3, scope: !6439, inlinedAt: !6441)
!6439 = distinct !DISubprogram(name: "__DSB", scope: !6440, file: !6440, line: 269, type: !2964, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !162)
!6440 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6441 = distinct !DILocation(line: 1727, column: 5, scope: !6433)
!6442 = !{i64 4093242}
!6443 = !DILocation(line: 260, column: 3, scope: !6444, inlinedAt: !6445)
!6444 = distinct !DISubprogram(name: "__ISB", scope: !6440, file: !6440, line: 258, type: !2964, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !162)
!6445 = distinct !DILocation(line: 1728, column: 5, scope: !6433)
!6446 = !{i64 4092959}
!6447 = !DILocation(line: 1729, column: 3, scope: !6433)
!6448 = !DILocation(line: 1730, column: 1, scope: !6425)
!6449 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6392, file: !6392, line: 50, type: !6450, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6452)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{!103, !32}
!6452 = !{!6453}
!6453 = !DILocalVariable(name: "irq", arg: 1, scope: !6449, file: !6392, line: 50, type: !32)
!6454 = !DILocation(line: 0, scope: !6449)
!6455 = !DILocation(line: 52, column: 20, scope: !6449)
!6456 = !DILocation(line: 52, column: 9, scope: !6449)
!6457 = !DILocation(line: 52, column: 41, scope: !6449)
!6458 = !DILocation(line: 52, column: 39, scope: !6449)
!6459 = !DILocation(line: 52, column: 2, scope: !6449)
!6460 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6392, file: !6392, line: 64, type: !6461, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6463)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{null, !32, !32, !137}
!6463 = !{!6464, !6465, !6466}
!6464 = !DILocalVariable(name: "irq", arg: 1, scope: !6460, file: !6392, line: 64, type: !32)
!6465 = !DILocalVariable(name: "prio", arg: 2, scope: !6460, file: !6392, line: 64, type: !32)
!6466 = !DILocalVariable(name: "flags", arg: 3, scope: !6460, file: !6392, line: 64, type: !137)
!6467 = !DILocation(line: 0, scope: !6460)
!6468 = !DILocation(line: 83, column: 8, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !6392, line: 82, column: 9)
!6470 = distinct !DILexicalBlock(scope: !6460, file: !6392, line: 76, column: 6)
!6471 = !DILocation(line: 95, column: 2, scope: !6460)
!6472 = !DILocation(line: 96, column: 1, scope: !6460)
!6473 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6474, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6476)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{null, !669, !137}
!6476 = !{!6477, !6478}
!6477 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6473, file: !402, line: 1814, type: !669)
!6478 = !DILocalVariable(name: "priority", arg: 2, scope: !6473, file: !402, line: 1814, type: !137)
!6479 = !DILocation(line: 0, scope: !6473)
!6480 = !DILocation(line: 0, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6473, file: !402, line: 1816, column: 7)
!6482 = !DILocation(line: 1816, column: 7, scope: !6473)
!6483 = !DILocation(line: 1824, column: 1, scope: !6473)
!6484 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6392, file: !6392, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6485)
!6485 = !{!6486}
!6486 = !DILocalVariable(name: "unused", arg: 1, scope: !6484, file: !6392, line: 155, type: !13)
!6487 = !DILocation(line: 0, scope: !6484)
!6488 = !DILocation(line: 159, column: 2, scope: !6484)
!6489 = !DILocation(line: 160, column: 1, scope: !6484)
!6490 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6491, file: !6491, line: 87, type: !2964, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !162)
!6491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6492 = !DILocation(line: 89, column: 2, scope: !6490)
!6493 = !DILocation(line: 90, column: 2, scope: !6490)
!6494 = !DILocation(line: 91, column: 1, scope: !6490)
!6495 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6491, file: !6491, line: 23, type: !2964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6496 = !DISubprogram(name: "z_arm_int_exit", scope: !6497, file: !6497, line: 153, type: !2964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6497 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6498 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6499, file: !6499, line: 256, type: !2964, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !162)
!6499 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6500 = !DILocation(line: 258, column: 2, scope: !6498)
!6501 = !DILocation(line: 260, column: 2, scope: !6498)
!6502 = !DILocation(line: 262, column: 2, scope: !6498)
!6503 = !DILocation(line: 263, column: 2, scope: !6498)
!6504 = !DILocation(line: 267, column: 2, scope: !6498)
!6505 = !DILocation(line: 268, column: 2, scope: !6498)
!6506 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6499, file: !6499, line: 53, type: !2964, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !162)
!6507 = !DILocation(line: 55, column: 12, scope: !6506)
!6508 = !DILocation(line: 271, column: 3, scope: !6509, inlinedAt: !6510)
!6509 = distinct !DISubprogram(name: "__DSB", scope: !6440, file: !6440, line: 269, type: !2964, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !162)
!6510 = distinct !DILocation(line: 56, column: 2, scope: !6506)
!6511 = !{i64 4091913}
!6512 = !DILocation(line: 260, column: 3, scope: !6513, inlinedAt: !6514)
!6513 = distinct !DISubprogram(name: "__ISB", scope: !6440, file: !6440, line: 258, type: !2964, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !162)
!6514 = distinct !DILocation(line: 57, column: 2, scope: !6506)
!6515 = !{i64 4091630}
!6516 = !DILocation(line: 58, column: 1, scope: !6506)
!6517 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6499, file: !6499, line: 96, type: !2964, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !162)
!6518 = !DILocation(line: 103, column: 13, scope: !6517)
!6519 = !DILocation(line: 975, column: 3, scope: !6520, inlinedAt: !6523)
!6520 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6440, file: !6440, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !6521)
!6521 = !{!6522}
!6522 = !DILocalVariable(name: "result", scope: !6520, file: !6440, line: 973, type: !137)
!6523 = distinct !DILocation(line: 189, column: 16, scope: !6517)
!6524 = !{i64 4112743}
!6525 = !DILocation(line: 0, scope: !6520, inlinedAt: !6523)
!6526 = !DILocation(line: 189, column: 32, scope: !6517)
!6527 = !DILocalVariable(name: "control", arg: 1, scope: !6528, file: !6440, line: 1001, type: !137)
!6528 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6440, file: !6440, line: 1001, type: !6529, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !6531)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{null, !137}
!6531 = !{!6527}
!6532 = !DILocation(line: 0, scope: !6528, inlinedAt: !6533)
!6533 = distinct !DILocation(line: 189, column: 2, scope: !6517)
!6534 = !DILocation(line: 1003, column: 3, scope: !6528, inlinedAt: !6533)
!6535 = !{i64 4113463}
!6536 = !DILocation(line: 260, column: 3, scope: !6513, inlinedAt: !6537)
!6537 = distinct !DILocation(line: 1004, column: 3, scope: !6528, inlinedAt: !6533)
!6538 = !DILocation(line: 191, column: 1, scope: !6517)
!6539 = distinct !DISubprogram(name: "arch_swap", scope: !6540, file: !6540, line: 33, type: !6450, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !6541)
!6540 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6541 = !{!6542}
!6542 = !DILocalVariable(name: "key", arg: 1, scope: !6539, file: !6540, line: 33, type: !32)
!6543 = !DILocation(line: 0, scope: !6539)
!6544 = !DILocation(line: 36, column: 2, scope: !6539)
!6545 = !DILocation(line: 36, column: 17, scope: !6539)
!6546 = !DILocation(line: 36, column: 25, scope: !6539)
!6547 = !DILocation(line: 37, column: 37, scope: !6539)
!6548 = !DILocation(line: 37, column: 17, scope: !6539)
!6549 = !DILocation(line: 37, column: 35, scope: !6539)
!6550 = !DILocation(line: 41, column: 12, scope: !6539)
!6551 = !DILocalVariable(name: "key", arg: 1, scope: !6552, file: !6266, line: 84, type: !32)
!6552 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !6553)
!6553 = !{!6551}
!6554 = !DILocation(line: 0, scope: !6552, inlinedAt: !6555)
!6555 = distinct !DILocation(line: 44, column: 2, scope: !6539)
!6556 = !DILocation(line: 95, column: 2, scope: !6552, inlinedAt: !6555)
!6557 = !{i64 2592757}
!6558 = !DILocation(line: 53, column: 9, scope: !6539)
!6559 = !DILocation(line: 53, column: 24, scope: !6539)
!6560 = !DILocation(line: 53, column: 2, scope: !6539)
!6561 = distinct !DISubprogram(name: "arch_new_thread", scope: !6562, file: !6562, line: 56, type: !6563, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2540, retainedNodes: !6670)
!6562 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6563 = !DISubroutineType(types: !6564)
!6564 = !{null, !6565, !6665, !1046, !3292, !102, !102, !102}
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 32)
!6566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6567)
!6567 = !{!6568, !6626, !6638, !6639, !6640, !6641, !6647, !6660}
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6566, file: !263, line: 247, baseType: !6569, size: 384)
!6569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6570)
!6570 = !{!6571, !6595, !6602, !6603, !6604, !6613, !6614, !6615}
!6571 = !DIDerivedType(tag: DW_TAG_member, scope: !6569, file: !263, line: 60, baseType: !6572, size: 64)
!6572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6569, file: !263, line: 60, size: 64, elements: !6573)
!6573 = !{!6574, !6589}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6572, file: !263, line: 61, baseType: !6575, size: 64)
!6575 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6576)
!6576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6577)
!6577 = !{!6578, !6584}
!6578 = !DIDerivedType(tag: DW_TAG_member, scope: !6576, file: !273, line: 38, baseType: !6579, size: 32)
!6579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6576, file: !273, line: 38, size: 32, elements: !6580)
!6580 = !{!6581, !6583}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6579, file: !273, line: 39, baseType: !6582, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 32)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6579, file: !273, line: 40, baseType: !6582, size: 32)
!6584 = !DIDerivedType(tag: DW_TAG_member, scope: !6576, file: !273, line: 42, baseType: !6585, size: 32, offset: 32)
!6585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6576, file: !273, line: 42, size: 32, elements: !6586)
!6586 = !{!6587, !6588}
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6585, file: !273, line: 43, baseType: !6582, size: 32)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6585, file: !273, line: 44, baseType: !6582, size: 32)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6572, file: !263, line: 62, baseType: !6590, size: 64)
!6590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6591)
!6591 = !{!6592}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6590, file: !289, line: 50, baseType: !6593, size: 64)
!6593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6594, size: 64, elements: !294)
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 32)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6569, file: !263, line: 68, baseType: !6596, size: 32, offset: 64)
!6596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6597, size: 32)
!6597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6598)
!6598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6599)
!6599 = !{!6600}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6598, file: !299, line: 232, baseType: !6601, size: 64)
!6601 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6576)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6569, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6569, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6604 = !DIDerivedType(tag: DW_TAG_member, scope: !6569, file: !263, line: 90, baseType: !6605, size: 16, offset: 112)
!6605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6569, file: !263, line: 90, size: 16, elements: !6606)
!6606 = !{!6607, !6612}
!6607 = !DIDerivedType(tag: DW_TAG_member, scope: !6605, file: !263, line: 91, baseType: !6608, size: 16)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6605, file: !263, line: 91, size: 16, elements: !6609)
!6609 = !{!6610, !6611}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6608, file: !263, line: 96, baseType: !313, size: 8)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6608, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6605, file: !263, line: 100, baseType: !151, size: 16)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6569, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6569, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6569, file: !263, line: 131, baseType: !6616, size: 192, offset: 192)
!6616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6617)
!6617 = !{!6618, !6619, !6625}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6616, file: !299, line: 245, baseType: !6575, size: 64)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6616, file: !299, line: 246, baseType: !6620, size: 32, offset: 64)
!6620 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !6621)
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 32)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{null, !6624}
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 32)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6616, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6566, file: !263, line: 250, baseType: !6627, size: 288, offset: 384)
!6627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6628)
!6628 = !{!6629, !6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637}
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6627, file: !334, line: 26, baseType: !137, size: 32)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6627, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6627, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6627, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6627, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6627, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6627, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6627, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6627, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6566, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6566, file: !263, line: 256, baseType: !6597, size: 64, offset: 704)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6566, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6566, file: !263, line: 300, baseType: !6642, size: 96, offset: 800)
!6642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !6643)
!6643 = !{!6644, !6645, !6646}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6642, file: !263, line: 153, baseType: !22, size: 32)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6642, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6642, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6566, file: !263, line: 325, baseType: !6648, size: 32, offset: 896)
!6648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6649, size: 32)
!6649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !6650)
!6650 = !{!6651, !6657, !6658}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6649, file: !357, line: 5074, baseType: !6652, size: 96)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6653)
!6653 = !{!6654, !6655, !6656}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6652, file: !113, line: 57, baseType: !116, size: 32)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6652, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6652, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6649, file: !357, line: 5075, baseType: !6597, size: 64, offset: 96)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6649, file: !357, line: 5076, baseType: !6659, offset: 160)
!6659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6566, file: !263, line: 343, baseType: !6661, size: 64, offset: 928)
!6661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !6662)
!6662 = !{!6663, !6664}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6661, file: !334, line: 63, baseType: !137, size: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6661, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 32)
!6666 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3293, line: 44, baseType: !6667)
!6667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2031, line: 47, size: 8, elements: !6668)
!6668 = !{!6669}
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6667, file: !2031, line: 48, baseType: !109, size: 8)
!6670 = !{!6671, !6672, !6673, !6674, !6675, !6676, !6677, !6678}
!6671 = !DILocalVariable(name: "thread", arg: 1, scope: !6561, file: !6562, line: 56, type: !6565)
!6672 = !DILocalVariable(name: "stack", arg: 2, scope: !6561, file: !6562, line: 56, type: !6665)
!6673 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6561, file: !6562, line: 57, type: !1046)
!6674 = !DILocalVariable(name: "entry", arg: 4, scope: !6561, file: !6562, line: 57, type: !3292)
!6675 = !DILocalVariable(name: "p1", arg: 5, scope: !6561, file: !6562, line: 58, type: !102)
!6676 = !DILocalVariable(name: "p2", arg: 6, scope: !6561, file: !6562, line: 58, type: !102)
!6677 = !DILocalVariable(name: "p3", arg: 7, scope: !6561, file: !6562, line: 58, type: !102)
!6678 = !DILocalVariable(name: "iframe", scope: !6561, file: !6562, line: 60, type: !2543)
!6679 = !DILocation(line: 0, scope: !6561)
!6680 = !DILocation(line: 85, column: 11, scope: !6561)
!6681 = !DILocation(line: 93, column: 10, scope: !6561)
!6682 = !DILocation(line: 98, column: 13, scope: !6561)
!6683 = !DILocation(line: 100, column: 15, scope: !6561)
!6684 = !DILocation(line: 100, column: 10, scope: !6561)
!6685 = !DILocation(line: 100, column: 13, scope: !6561)
!6686 = !DILocation(line: 101, column: 15, scope: !6561)
!6687 = !DILocation(line: 101, column: 10, scope: !6561)
!6688 = !DILocation(line: 101, column: 13, scope: !6561)
!6689 = !DILocation(line: 102, column: 15, scope: !6561)
!6690 = !DILocation(line: 102, column: 10, scope: !6561)
!6691 = !DILocation(line: 102, column: 13, scope: !6561)
!6692 = !DILocation(line: 103, column: 15, scope: !6561)
!6693 = !DILocation(line: 103, column: 10, scope: !6561)
!6694 = !DILocation(line: 103, column: 13, scope: !6561)
!6695 = !DILocation(line: 106, column: 10, scope: !6561)
!6696 = !DILocation(line: 106, column: 15, scope: !6561)
!6697 = !DILocation(line: 122, column: 29, scope: !6561)
!6698 = !DILocation(line: 122, column: 23, scope: !6561)
!6699 = !DILocation(line: 122, column: 27, scope: !6561)
!6700 = !DILocation(line: 123, column: 15, scope: !6561)
!6701 = !DILocation(line: 123, column: 23, scope: !6561)
!6702 = !DILocation(line: 143, column: 1, scope: !6561)
!6703 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6562, file: !6562, line: 385, type: !6704, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2540, retainedNodes: !6707)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!137, !6706, !6706}
!6706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6707 = !{!6708, !6709, !6710, !6713}
!6708 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6703, file: !6562, line: 385, type: !6706)
!6709 = !DILocalVariable(name: "psp", arg: 2, scope: !6703, file: !6562, line: 385, type: !6706)
!6710 = !DILocalVariable(name: "thread", scope: !6703, file: !6562, line: 388, type: !6711)
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6712, size: 32)
!6712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6566)
!6713 = !DILocalVariable(name: "guard_len", scope: !6703, file: !6562, line: 405, type: !137)
!6714 = !DILocation(line: 0, scope: !6703)
!6715 = !DILocation(line: 388, column: 34, scope: !6703)
!6716 = !DILocation(line: 390, column: 13, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6703, file: !6562, line: 390, column: 6)
!6718 = !DILocation(line: 390, column: 6, scope: !6703)
!6719 = !DILocation(line: 438, column: 6, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6703, file: !6562, line: 438, column: 6)
!6721 = !DILocation(line: 438, column: 6, scope: !6703)
!6722 = !DILocation(line: 442, column: 3, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6720, file: !6562, line: 440, column: 22)
!6724 = !DILocation(line: 455, column: 1, scope: !6703)
!6725 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6562, file: !6562, line: 530, type: !6726, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2540, retainedNodes: !6728)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{null, !6565, !1046, !3292}
!6728 = !{!6729, !6730, !6731}
!6729 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6725, file: !6562, line: 530, type: !6565)
!6730 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6725, file: !6562, line: 530, type: !1046)
!6731 = !DILocalVariable(name: "_main", arg: 3, scope: !6725, file: !6562, line: 531, type: !3292)
!6732 = !DILocation(line: 0, scope: !6725)
!6733 = !DILocation(line: 535, column: 11, scope: !6725)
!6734 = !DILocation(line: 560, column: 2, scope: !6725)
!6735 = !DILocation(line: 576, column: 2, scope: !6725)
!6736 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6737 = !DILocation(line: 603, column: 2, scope: !6725)
!6738 = distinct !DISubprogram(name: "z_arm_fault", scope: !6739, file: !6739, line: 1036, type: !6740, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6755)
!6739 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6740 = !DISubroutineType(types: !6741)
!6741 = !{null, !137, !137, !137, !6742}
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 32)
!6743 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6744)
!6744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6745)
!6745 = !{!6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754}
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6744, file: !334, line: 26, baseType: !137, size: 32)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6744, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6744, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6744, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6744, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6744, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6744, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6744, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6744, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6755 = !{!6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765}
!6756 = !DILocalVariable(name: "msp", arg: 1, scope: !6738, file: !6739, line: 1036, type: !137)
!6757 = !DILocalVariable(name: "psp", arg: 2, scope: !6738, file: !6739, line: 1036, type: !137)
!6758 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6738, file: !6739, line: 1036, type: !137)
!6759 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6738, file: !6739, line: 1037, type: !6742)
!6760 = !DILocalVariable(name: "reason", scope: !6738, file: !6739, line: 1039, type: !137)
!6761 = !DILocalVariable(name: "fault", scope: !6738, file: !6739, line: 1040, type: !103)
!6762 = !DILocalVariable(name: "recoverable", scope: !6738, file: !6739, line: 1041, type: !211)
!6763 = !DILocalVariable(name: "nested_exc", scope: !6738, file: !6739, line: 1041, type: !211)
!6764 = !DILocalVariable(name: "esf", scope: !6738, file: !6739, line: 1042, type: !2611)
!6765 = !DILocalVariable(name: "esf_copy", scope: !6738, file: !6739, line: 1047, type: !2612)
!6766 = !DILocation(line: 0, scope: !6738)
!6767 = !DILocation(line: 1040, column: 19, scope: !6738)
!6768 = !DILocation(line: 1040, column: 24, scope: !6738)
!6769 = !DILocation(line: 1041, column: 2, scope: !6738)
!6770 = !DILocation(line: 1047, column: 2, scope: !6738)
!6771 = !DILocation(line: 1047, column: 15, scope: !6738)
!6772 = !DILocalVariable(name: "key", arg: 1, scope: !6773, file: !6266, line: 84, type: !32)
!6773 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6774)
!6774 = !{!6772}
!6775 = !DILocation(line: 0, scope: !6773, inlinedAt: !6776)
!6776 = distinct !DILocation(line: 1050, column: 2, scope: !6738)
!6777 = !DILocation(line: 95, column: 2, scope: !6773, inlinedAt: !6776)
!6778 = !{i64 2626001}
!6779 = !DILocation(line: 1055, column: 9, scope: !6738)
!6780 = !DILocation(line: 1063, column: 11, scope: !6738)
!6781 = !DILocation(line: 1064, column: 6, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6738, file: !6739, line: 1064, column: 6)
!6783 = !{i8 0, i8 2}
!6784 = !DILocation(line: 1064, column: 6, scope: !6738)
!6785 = !DILocation(line: 1070, column: 20, scope: !6738)
!6786 = !DILocation(line: 1070, column: 2, scope: !6738)
!6787 = !DILocation(line: 1089, column: 6, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6738, file: !6739, line: 1089, column: 6)
!6789 = !DILocation(line: 0, scope: !6788)
!6790 = !DILocation(line: 1089, column: 6, scope: !6738)
!6791 = !DILocation(line: 1090, column: 28, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6739, line: 1090, column: 7)
!6793 = distinct !DILexicalBlock(scope: !6788, file: !6739, line: 1089, column: 18)
!6794 = !DILocation(line: 1090, column: 44, scope: !6792)
!6795 = !DILocation(line: 1090, column: 7, scope: !6793)
!6796 = !DILocation(line: 1091, column: 24, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6792, file: !6739, line: 1090, column: 50)
!6798 = !DILocation(line: 1092, column: 3, scope: !6797)
!6799 = !DILocation(line: 1094, column: 23, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6788, file: !6739, line: 1093, column: 9)
!6801 = !DILocation(line: 1097, column: 2, scope: !6738)
!6802 = !DILocation(line: 1098, column: 1, scope: !6738)
!6803 = distinct !DISubprogram(name: "get_esf", scope: !6739, file: !6739, line: 894, type: !6804, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6807)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!2611, !137, !137, !137, !6806}
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!6807 = !{!6808, !6809, !6810, !6811, !6812, !6813}
!6808 = !DILocalVariable(name: "msp", arg: 1, scope: !6803, file: !6739, line: 894, type: !137)
!6809 = !DILocalVariable(name: "psp", arg: 2, scope: !6803, file: !6739, line: 894, type: !137)
!6810 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6803, file: !6739, line: 894, type: !137)
!6811 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6803, file: !6739, line: 895, type: !6806)
!6812 = !DILocalVariable(name: "alternative_state_exc", scope: !6803, file: !6739, line: 897, type: !211)
!6813 = !DILocalVariable(name: "ptr_esf", scope: !6803, file: !6739, line: 898, type: !2611)
!6814 = !DILocation(line: 0, scope: !6803)
!6815 = !DILocation(line: 900, column: 14, scope: !6803)
!6816 = !DILocation(line: 902, column: 49, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6803, file: !6739, line: 902, column: 6)
!6818 = !DILocation(line: 902, column: 6, scope: !6803)
!6819 = !DILocation(line: 983, column: 18, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6803, file: !6739, line: 983, column: 6)
!6821 = !DILocation(line: 991, column: 7, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6739, line: 990, column: 30)
!6823 = distinct !DILexicalBlock(scope: !6803, file: !6739, line: 990, column: 6)
!6824 = !DILocation(line: 998, column: 16, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6739, line: 995, column: 10)
!6826 = distinct !DILexicalBlock(scope: !6822, file: !6739, line: 991, column: 7)
!6827 = !DILocation(line: 1002, column: 2, scope: !6803)
!6828 = !DILocation(line: 1003, column: 1, scope: !6803)
!6829 = distinct !DISubprogram(name: "fault_handle", scope: !6739, file: !6739, line: 786, type: !6830, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!137, !2611, !103, !6806}
!6832 = !{!6833, !6834, !6835, !6836}
!6833 = !DILocalVariable(name: "esf", arg: 1, scope: !6829, file: !6739, line: 786, type: !2611)
!6834 = !DILocalVariable(name: "fault", arg: 2, scope: !6829, file: !6739, line: 786, type: !103)
!6835 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6829, file: !6739, line: 786, type: !6806)
!6836 = !DILocalVariable(name: "reason", scope: !6829, file: !6739, line: 788, type: !137)
!6837 = !DILocation(line: 0, scope: !6829)
!6838 = !DILocation(line: 790, column: 15, scope: !6829)
!6839 = !DILocation(line: 792, column: 2, scope: !6829)
!6840 = !DILocation(line: 794, column: 12, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6829, file: !6739, line: 792, column: 17)
!6842 = !DILocation(line: 795, column: 3, scope: !6841)
!6843 = !DILocation(line: 800, column: 12, scope: !6841)
!6844 = !DILocation(line: 801, column: 3, scope: !6841)
!6845 = !DILocation(line: 803, column: 12, scope: !6841)
!6846 = !DILocation(line: 804, column: 3, scope: !6841)
!6847 = !DILocation(line: 806, column: 12, scope: !6841)
!6848 = !DILocation(line: 807, column: 3, scope: !6841)
!6849 = !DILocation(line: 814, column: 3, scope: !6841)
!6850 = !DILocation(line: 815, column: 3, scope: !6841)
!6851 = !DILocation(line: 829, column: 2, scope: !6829)
!6852 = distinct !DISubprogram(name: "hard_fault", scope: !6739, file: !6739, line: 709, type: !6853, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6855)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!137, !2611, !6806}
!6855 = !{!6856, !6857, !6858}
!6856 = !DILocalVariable(name: "esf", arg: 1, scope: !6852, file: !6739, line: 709, type: !2611)
!6857 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6852, file: !6739, line: 709, type: !6806)
!6858 = !DILocalVariable(name: "reason", scope: !6852, file: !6739, line: 711, type: !137)
!6859 = !DILocation(line: 0, scope: !6852)
!6860 = !DILocation(line: 732, column: 15, scope: !6852)
!6861 = !DILocation(line: 734, column: 12, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6852, file: !6739, line: 734, column: 6)
!6863 = !DILocation(line: 734, column: 17, scope: !6862)
!6864 = !DILocation(line: 734, column: 41, scope: !6862)
!6865 = !DILocation(line: 734, column: 6, scope: !6852)
!6866 = !DILocation(line: 736, column: 19, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6862, file: !6739, line: 736, column: 13)
!6868 = !DILocation(line: 736, column: 49, scope: !6867)
!6869 = !DILocation(line: 736, column: 13, scope: !6862)
!6870 = !DILocation(line: 738, column: 19, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6867, file: !6739, line: 738, column: 13)
!6872 = !DILocation(line: 738, column: 24, scope: !6871)
!6873 = !DILocation(line: 738, column: 47, scope: !6871)
!6874 = !DILocation(line: 738, column: 13, scope: !6867)
!6875 = !DILocation(line: 740, column: 7, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6739, line: 740, column: 7)
!6877 = distinct !DILexicalBlock(scope: !6871, file: !6739, line: 738, column: 53)
!6878 = !DILocation(line: 740, column: 7, scope: !6877)
!6879 = !DILocation(line: 742, column: 24, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6876, file: !6739, line: 740, column: 38)
!6881 = !DILocation(line: 743, column: 3, scope: !6880)
!6882 = !DILocation(line: 743, column: 20, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6876, file: !6739, line: 743, column: 14)
!6884 = !DILocation(line: 743, column: 25, scope: !6883)
!6885 = !DILocation(line: 743, column: 52, scope: !6883)
!6886 = !DILocation(line: 743, column: 14, scope: !6876)
!6887 = !DILocation(line: 744, column: 13, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6883, file: !6739, line: 743, column: 58)
!6889 = !DILocation(line: 745, column: 3, scope: !6888)
!6890 = !DILocation(line: 745, column: 20, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6883, file: !6739, line: 745, column: 14)
!6892 = !DILocation(line: 745, column: 25, scope: !6891)
!6893 = !DILocation(line: 745, column: 52, scope: !6891)
!6894 = !DILocation(line: 745, column: 14, scope: !6883)
!6895 = !DILocation(line: 746, column: 13, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6891, file: !6739, line: 745, column: 58)
!6897 = !DILocation(line: 747, column: 3, scope: !6896)
!6898 = !DILocation(line: 747, column: 20, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6891, file: !6739, line: 747, column: 14)
!6900 = !DILocation(line: 747, column: 52, scope: !6899)
!6901 = !DILocation(line: 747, column: 14, scope: !6891)
!6902 = !DILocation(line: 748, column: 13, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6899, file: !6739, line: 747, column: 58)
!6904 = !DILocation(line: 753, column: 3, scope: !6903)
!6905 = !DILocation(line: 766, column: 2, scope: !6852)
!6906 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6739, file: !6739, line: 229, type: !6830, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6907)
!6907 = !{!6908, !6909, !6910, !6911, !6912, !6913, !6916}
!6908 = !DILocalVariable(name: "esf", arg: 1, scope: !6906, file: !6739, line: 229, type: !2611)
!6909 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6906, file: !6739, line: 229, type: !103)
!6910 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6906, file: !6739, line: 230, type: !6806)
!6911 = !DILocalVariable(name: "reason", scope: !6906, file: !6739, line: 232, type: !137)
!6912 = !DILocalVariable(name: "mmfar", scope: !6906, file: !6739, line: 233, type: !137)
!6913 = !DILocalVariable(name: "temp", scope: !6914, file: !6739, line: 254, type: !137)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6739, line: 244, column: 48)
!6915 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 244, column: 6)
!6916 = !DILocalVariable(name: "min_stack_ptr", scope: !6917, file: !6739, line: 309, type: !137)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !6739, line: 308, column: 43)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !6739, line: 308, column: 7)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6739, line: 289, column: 40)
!6920 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 288, column: 6)
!6921 = !DILocation(line: 0, scope: !6906)
!6922 = !DILocation(line: 237, column: 12, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 237, column: 6)
!6924 = !DILocation(line: 241, column: 12, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 241, column: 6)
!6926 = !DILocation(line: 244, column: 12, scope: !6915)
!6927 = !DILocation(line: 244, column: 17, scope: !6915)
!6928 = !DILocation(line: 244, column: 42, scope: !6915)
!6929 = !DILocation(line: 244, column: 6, scope: !6906)
!6930 = !DILocation(line: 254, column: 24, scope: !6914)
!6931 = !DILocation(line: 0, scope: !6914)
!6932 = !DILocation(line: 256, column: 13, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6914, file: !6739, line: 256, column: 7)
!6934 = !DILocation(line: 256, column: 18, scope: !6933)
!6935 = !DILocation(line: 256, column: 44, scope: !6933)
!6936 = !DILocation(line: 256, column: 7, scope: !6914)
!6937 = !DILocation(line: 259, column: 24, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6739, line: 259, column: 8)
!6939 = distinct !DILexicalBlock(scope: !6933, file: !6739, line: 256, column: 50)
!6940 = !DILocation(line: 259, column: 8, scope: !6939)
!6941 = !DILocation(line: 261, column: 15, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6938, file: !6739, line: 259, column: 30)
!6943 = !DILocation(line: 262, column: 4, scope: !6942)
!6944 = !DILocation(line: 265, column: 12, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 265, column: 6)
!6946 = !DILocation(line: 269, column: 12, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 269, column: 6)
!6948 = !DILocation(line: 288, column: 12, scope: !6920)
!6949 = !DILocation(line: 288, column: 17, scope: !6920)
!6950 = !DILocation(line: 288, column: 41, scope: !6920)
!6951 = !DILocation(line: 289, column: 9, scope: !6920)
!6952 = !DILocation(line: 289, column: 14, scope: !6920)
!6953 = !DILocation(line: 288, column: 6, scope: !6906)
!6954 = !DILocation(line: 308, column: 12, scope: !6918)
!6955 = !DILocation(line: 308, column: 17, scope: !6918)
!6956 = !DILocation(line: 308, column: 7, scope: !6919)
!6957 = !DILocation(line: 310, column: 6, scope: !6917)
!6958 = !DILocation(line: 309, column: 29, scope: !6917)
!6959 = !DILocation(line: 0, scope: !6917)
!6960 = !DILocation(line: 312, column: 8, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6917, file: !6739, line: 312, column: 8)
!6962 = !DILocation(line: 312, column: 8, scope: !6917)
!6963 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6964, file: !6440, line: 1099, type: !137)
!6964 = distinct !DISubprogram(name: "__set_PSP", scope: !6440, file: !6440, line: 1099, type: !6529, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6965)
!6965 = !{!6963}
!6966 = !DILocation(line: 0, scope: !6964, inlinedAt: !6967)
!6967 = distinct !DILocation(line: 338, column: 5, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6961, file: !6739, line: 312, column: 23)
!6969 = !DILocation(line: 1101, column: 3, scope: !6964, inlinedAt: !6967)
!6970 = !{i64 4142882}
!6971 = !DILocation(line: 341, column: 4, scope: !6968)
!6972 = !DILocation(line: 360, column: 12, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6906, file: !6739, line: 360, column: 6)
!6974 = !DILocation(line: 360, column: 17, scope: !6973)
!6975 = !DILocation(line: 360, column: 41, scope: !6973)
!6976 = !DILocation(line: 360, column: 6, scope: !6906)
!6977 = !DILocation(line: 361, column: 14, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6973, file: !6739, line: 360, column: 47)
!6979 = !DILocation(line: 362, column: 2, scope: !6978)
!6980 = !DILocation(line: 366, column: 12, scope: !6906)
!6981 = !DILocation(line: 369, column: 15, scope: !6906)
!6982 = !DILocation(line: 371, column: 2, scope: !6906)
!6983 = distinct !DISubprogram(name: "bus_fault", scope: !6739, file: !6739, line: 383, type: !6984, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !6986)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!103, !2611, !103, !6806}
!6986 = !{!6987, !6988, !6989, !6990, !6991}
!6987 = !DILocalVariable(name: "esf", arg: 1, scope: !6983, file: !6739, line: 383, type: !2611)
!6988 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6983, file: !6739, line: 383, type: !103)
!6989 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6983, file: !6739, line: 383, type: !6806)
!6990 = !DILocalVariable(name: "reason", scope: !6983, file: !6739, line: 385, type: !137)
!6991 = !DILocalVariable(name: "bfar", scope: !6992, file: !6739, line: 405, type: !137)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6739, line: 395, column: 42)
!6993 = distinct !DILexicalBlock(scope: !6983, file: !6739, line: 395, column: 6)
!6994 = !DILocation(line: 0, scope: !6983)
!6995 = !DILocation(line: 389, column: 11, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6983, file: !6739, line: 389, column: 6)
!6997 = !DILocation(line: 392, column: 11, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6983, file: !6739, line: 392, column: 6)
!6999 = !DILocation(line: 395, column: 11, scope: !6993)
!7000 = !DILocation(line: 395, column: 16, scope: !6993)
!7001 = !DILocation(line: 395, column: 6, scope: !6983)
!7002 = !DILocation(line: 405, column: 3, scope: !6992)
!7003 = !DILocation(line: 0, scope: !6992)
!7004 = !DILocation(line: 407, column: 13, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6992, file: !6739, line: 407, column: 7)
!7006 = !DILocation(line: 407, column: 18, scope: !7005)
!7007 = !DILocation(line: 407, column: 44, scope: !7005)
!7008 = !DILocation(line: 407, column: 7, scope: !6992)
!7009 = !DILocation(line: 411, column: 15, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6739, line: 409, column: 30)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6739, line: 409, column: 8)
!7012 = distinct !DILexicalBlock(scope: !7005, file: !6739, line: 407, column: 50)
!7013 = !DILocation(line: 412, column: 4, scope: !7010)
!7014 = !DILocation(line: 415, column: 11, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6983, file: !6739, line: 415, column: 6)
!7016 = !DILocation(line: 418, column: 12, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6983, file: !6739, line: 418, column: 6)
!7018 = !DILocation(line: 418, column: 17, scope: !7017)
!7019 = !DILocation(line: 418, column: 41, scope: !7017)
!7020 = !DILocation(line: 418, column: 6, scope: !6983)
!7021 = !DILocation(line: 423, column: 18, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7017, file: !6739, line: 423, column: 13)
!7023 = !DILocation(line: 524, column: 12, scope: !6983)
!7024 = !DILocation(line: 526, column: 15, scope: !6983)
!7025 = !DILocation(line: 528, column: 2, scope: !6983)
!7026 = distinct !DISubprogram(name: "usage_fault", scope: !6739, file: !6739, line: 539, type: !7027, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !7031)
!7027 = !DISubroutineType(types: !7028)
!7028 = !{!137, !7029}
!7029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7030, size: 32)
!7030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2612)
!7031 = !{!7032, !7033}
!7032 = !DILocalVariable(name: "esf", arg: 1, scope: !7026, file: !6739, line: 539, type: !7029)
!7033 = !DILocalVariable(name: "reason", scope: !7026, file: !6739, line: 541, type: !137)
!7034 = !DILocation(line: 0, scope: !7026)
!7035 = !DILocation(line: 546, column: 12, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7026, file: !6739, line: 546, column: 6)
!7037 = !DILocation(line: 549, column: 12, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7026, file: !6739, line: 549, column: 6)
!7039 = !DILocation(line: 567, column: 12, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7026, file: !6739, line: 567, column: 6)
!7041 = !DILocation(line: 570, column: 12, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7026, file: !6739, line: 570, column: 6)
!7043 = !DILocation(line: 573, column: 12, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7026, file: !6739, line: 573, column: 6)
!7045 = !DILocation(line: 576, column: 12, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7026, file: !6739, line: 576, column: 6)
!7047 = !DILocation(line: 581, column: 12, scope: !7026)
!7048 = !DILocation(line: 583, column: 2, scope: !7026)
!7049 = distinct !DISubprogram(name: "debug_monitor", scope: !6739, file: !6739, line: 632, type: !7050, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !7052)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{null, !2611, !6806}
!7052 = !{!7053, !7054}
!7053 = !DILocalVariable(name: "esf", arg: 1, scope: !7049, file: !6739, line: 632, type: !2611)
!7054 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7049, file: !6739, line: 632, type: !6806)
!7055 = !DILocation(line: 0, scope: !7049)
!7056 = !DILocation(line: 634, column: 15, scope: !7049)
!7057 = !DILocation(line: 652, column: 1, scope: !7049)
!7058 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6739, file: !6739, line: 658, type: !7059, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !7061)
!7059 = !DISubroutineType(types: !7060)
!7060 = !{!211, !2611}
!7061 = !{!7062, !7063, !7064}
!7062 = !DILocalVariable(name: "esf", arg: 1, scope: !7058, file: !6739, line: 658, type: !2611)
!7063 = !DILocalVariable(name: "ret_addr", scope: !7058, file: !6739, line: 660, type: !150)
!7064 = !DILocalVariable(name: "fault_insn", scope: !7058, file: !6739, line: 686, type: !151)
!7065 = !DILocation(line: 0, scope: !7058)
!7066 = !DILocation(line: 660, column: 46, scope: !7058)
!7067 = !DILocation(line: 660, column: 23, scope: !7058)
!7068 = !DILocation(line: 682, column: 11, scope: !7058)
!7069 = !DILocation(line: 271, column: 3, scope: !7070, inlinedAt: !7071)
!7070 = distinct !DISubprogram(name: "__DSB", scope: !6440, file: !6440, line: 269, type: !2964, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !162)
!7071 = distinct !DILocation(line: 683, column: 2, scope: !7058)
!7072 = !{i64 4119017}
!7073 = !DILocation(line: 260, column: 3, scope: !7074, inlinedAt: !7075)
!7074 = distinct !DISubprogram(name: "__ISB", scope: !6440, file: !6440, line: 258, type: !2964, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !162)
!7075 = distinct !DILocation(line: 684, column: 2, scope: !7058)
!7076 = !{i64 4118734}
!7077 = !DILocation(line: 686, column: 35, scope: !7058)
!7078 = !DILocation(line: 686, column: 24, scope: !7058)
!7079 = !DILocation(line: 688, column: 11, scope: !7058)
!7080 = !DILocation(line: 271, column: 3, scope: !7070, inlinedAt: !7081)
!7081 = distinct !DILocation(line: 689, column: 2, scope: !7058)
!7082 = !DILocation(line: 260, column: 3, scope: !7074, inlinedAt: !7083)
!7083 = distinct !DILocation(line: 690, column: 2, scope: !7058)
!7084 = !DILocation(line: 693, column: 45, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7058, file: !6739, line: 693, column: 6)
!7086 = !DILocation(line: 699, column: 1, scope: !7058)
!7087 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6739, file: !6739, line: 1107, type: !2964, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !162)
!7088 = !DILocation(line: 1111, column: 11, scope: !7087)
!7089 = !DILocation(line: 1136, column: 1, scope: !7087)
!7090 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7091, file: !7091, line: 26, type: !2964, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7092)
!7091 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7092 = !{!7093}
!7093 = !DILocalVariable(name: "irq", scope: !7090, file: !7091, line: 28, type: !103)
!7094 = !DILocation(line: 0, scope: !7090)
!7095 = !DILocation(line: 30, column: 2, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7090, file: !7091, line: 30, column: 2)
!7097 = !DILocation(line: 31, column: 3, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !7091, line: 30, column: 39)
!7099 = distinct !DILexicalBlock(scope: !7096, file: !7091, line: 30, column: 2)
!7100 = !DILocation(line: 30, column: 35, scope: !7099)
!7101 = !DILocation(line: 30, column: 13, scope: !7099)
!7102 = distinct !{!7102, !7095, !7103}
!7103 = !DILocation(line: 32, column: 2, scope: !7096)
!7104 = !DILocation(line: 33, column: 1, scope: !7090)
!7105 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6474, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7106)
!7106 = !{!7107, !7108}
!7107 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7105, file: !402, line: 1814, type: !669)
!7108 = !DILocalVariable(name: "priority", arg: 2, scope: !7105, file: !402, line: 1814, type: !137)
!7109 = !DILocation(line: 0, scope: !7105)
!7110 = !DILocation(line: 1816, column: 7, scope: !7105)
!7111 = !DILocation(line: 0, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7105, file: !402, line: 1816, column: 7)
!7113 = !DILocation(line: 1824, column: 1, scope: !7105)
!7114 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7115, file: !7115, line: 27, type: !7116, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7219)
!7115 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7116 = !DISubroutineType(types: !7117)
!7117 = !{null, !7118}
!7118 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !7119)
!7119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7120, size: 32)
!7120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !7121)
!7121 = !{!7122, !7180, !7192, !7193, !7194, !7195, !7201, !7214}
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7120, file: !263, line: 247, baseType: !7123, size: 384)
!7123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !7124)
!7124 = !{!7125, !7149, !7156, !7157, !7158, !7167, !7168, !7169}
!7125 = !DIDerivedType(tag: DW_TAG_member, scope: !7123, file: !263, line: 60, baseType: !7126, size: 64)
!7126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7123, file: !263, line: 60, size: 64, elements: !7127)
!7127 = !{!7128, !7143}
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7126, file: !263, line: 61, baseType: !7129, size: 64)
!7129 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !7130)
!7130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !7131)
!7131 = !{!7132, !7138}
!7132 = !DIDerivedType(tag: DW_TAG_member, scope: !7130, file: !273, line: 38, baseType: !7133, size: 32)
!7133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7130, file: !273, line: 38, size: 32, elements: !7134)
!7134 = !{!7135, !7137}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7133, file: !273, line: 39, baseType: !7136, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7130, size: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7133, file: !273, line: 40, baseType: !7136, size: 32)
!7138 = !DIDerivedType(tag: DW_TAG_member, scope: !7130, file: !273, line: 42, baseType: !7139, size: 32, offset: 32)
!7139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7130, file: !273, line: 42, size: 32, elements: !7140)
!7140 = !{!7141, !7142}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7139, file: !273, line: 43, baseType: !7136, size: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7139, file: !273, line: 44, baseType: !7136, size: 32)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7126, file: !263, line: 62, baseType: !7144, size: 64)
!7144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !7145)
!7145 = !{!7146}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7144, file: !289, line: 50, baseType: !7147, size: 64)
!7147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7148, size: 64, elements: !294)
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 32)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7123, file: !263, line: 68, baseType: !7150, size: 32, offset: 64)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 32)
!7151 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !7152)
!7152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !7153)
!7153 = !{!7154}
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7152, file: !299, line: 232, baseType: !7155, size: 64)
!7155 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !7130)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7123, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7123, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!7158 = !DIDerivedType(tag: DW_TAG_member, scope: !7123, file: !263, line: 90, baseType: !7159, size: 16, offset: 112)
!7159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7123, file: !263, line: 90, size: 16, elements: !7160)
!7160 = !{!7161, !7166}
!7161 = !DIDerivedType(tag: DW_TAG_member, scope: !7159, file: !263, line: 91, baseType: !7162, size: 16)
!7162 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7159, file: !263, line: 91, size: 16, elements: !7163)
!7163 = !{!7164, !7165}
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7162, file: !263, line: 96, baseType: !313, size: 8)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7162, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7159, file: !263, line: 100, baseType: !151, size: 16)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7123, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7123, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7123, file: !263, line: 131, baseType: !7170, size: 192, offset: 192)
!7170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !7171)
!7171 = !{!7172, !7173, !7179}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7170, file: !299, line: 245, baseType: !7129, size: 64)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7170, file: !299, line: 246, baseType: !7174, size: 32, offset: 64)
!7174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !7175)
!7175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7176, size: 32)
!7176 = !DISubroutineType(types: !7177)
!7177 = !{null, !7178}
!7178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7170, size: 32)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7170, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7120, file: !263, line: 250, baseType: !7181, size: 288, offset: 384)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !7182)
!7182 = !{!7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7191}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7181, file: !334, line: 26, baseType: !137, size: 32)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7181, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7181, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7181, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7181, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7181, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7181, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7181, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7181, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7120, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7120, file: !263, line: 256, baseType: !7151, size: 64, offset: 704)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7120, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7120, file: !263, line: 300, baseType: !7196, size: 96, offset: 800)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !7197)
!7197 = !{!7198, !7199, !7200}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7196, file: !263, line: 153, baseType: !22, size: 32)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7196, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7196, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7120, file: !263, line: 325, baseType: !7202, size: 32, offset: 896)
!7202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 32)
!7203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !7204)
!7204 = !{!7205, !7211, !7212}
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7203, file: !357, line: 5074, baseType: !7206, size: 96)
!7206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7207)
!7207 = !{!7208, !7209, !7210}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7206, file: !113, line: 57, baseType: !116, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7206, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7206, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7203, file: !357, line: 5075, baseType: !7151, size: 64, offset: 96)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7203, file: !357, line: 5076, baseType: !7213, offset: 160)
!7213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7120, file: !263, line: 343, baseType: !7215, size: 64, offset: 928)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !7216)
!7216 = !{!7217, !7218}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7215, file: !334, line: 63, baseType: !137, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7215, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!7219 = !{!7220}
!7220 = !DILocalVariable(name: "thread", arg: 1, scope: !7114, file: !7115, line: 27, type: !7118)
!7221 = !DILocation(line: 0, scope: !7114)
!7222 = !DILocation(line: 29, column: 6, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7114, file: !7115, line: 29, column: 6)
!7224 = !DILocation(line: 29, column: 15, scope: !7223)
!7225 = !DILocation(line: 29, column: 6, scope: !7114)
!7226 = !DILocation(line: 1031, column: 3, scope: !7227, inlinedAt: !7230)
!7227 = distinct !DISubprogram(name: "__get_IPSR", scope: !6440, file: !6440, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7228)
!7228 = !{!7229}
!7229 = !DILocalVariable(name: "result", scope: !7227, file: !6440, line: 1029, type: !137)
!7230 = distinct !DILocation(line: 48, column: 10, scope: !7231, inlinedAt: !7235)
!7231 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7232, file: !7232, line: 46, type: !7233, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !162)
!7232 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!211}
!7235 = distinct !DILocation(line: 30, column: 7, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !7115, line: 30, column: 7)
!7237 = distinct !DILexicalBlock(scope: !7223, file: !7115, line: 29, column: 26)
!7238 = !{i64 4107865}
!7239 = !DILocation(line: 0, scope: !7227, inlinedAt: !7230)
!7240 = !DILocation(line: 48, column: 9, scope: !7231, inlinedAt: !7235)
!7241 = !DILocation(line: 30, column: 7, scope: !7237)
!7242 = !DILocation(line: 42, column: 14, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7236, file: !7115, line: 30, column: 25)
!7244 = !DILocation(line: 48, column: 15, scope: !7243)
!7245 = !DILocation(line: 49, column: 3, scope: !7243)
!7246 = !DILocation(line: 52, column: 2, scope: !7114)
!7247 = !DILocation(line: 53, column: 1, scope: !7114)
!7248 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !258, file: !258, line: 127, type: !2964, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !162)
!7249 = !DILocation(line: 134, column: 2, scope: !7248)
!7250 = !DILocation(line: 156, column: 1, scope: !7248)
!7251 = !DILocation(line: 0, scope: !257)
!7252 = !DILocation(line: 289, column: 36, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !257, file: !258, line: 285, column: 2)
!7254 = !DILocation(line: 289, column: 42, scope: !7253)
!7255 = !DILocation(line: 300, column: 36, scope: !257)
!7256 = !DILocation(line: 301, column: 35, scope: !257)
!7257 = !DILocation(line: 302, column: 37, scope: !257)
!7258 = !DILocation(line: 311, column: 2, scope: !257)
!7259 = !DILocation(line: 316, column: 1, scope: !257)
!7260 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !430, file: !430, line: 180, type: !2964, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7261 = !DILocation(line: 188, column: 12, scope: !7260)
!7262 = !DILocation(line: 271, column: 3, scope: !7263, inlinedAt: !7264)
!7263 = distinct !DISubprogram(name: "__DSB", scope: !6440, file: !6440, line: 269, type: !2964, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7264 = distinct !DILocation(line: 192, column: 2, scope: !7260)
!7265 = !{i64 4301377}
!7266 = !DILocation(line: 260, column: 3, scope: !7267, inlinedAt: !7268)
!7267 = distinct !DISubprogram(name: "__ISB", scope: !6440, file: !6440, line: 258, type: !2964, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7268 = distinct !DILocation(line: 193, column: 2, scope: !7260)
!7269 = !{i64 4301094}
!7270 = !DILocation(line: 194, column: 1, scope: !7260)
!7271 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !430, file: !430, line: 199, type: !2964, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7272 = !DILocation(line: 282, column: 3, scope: !7273, inlinedAt: !7274)
!7273 = distinct !DISubprogram(name: "__DMB", scope: !6440, file: !6440, line: 280, type: !2964, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7274 = distinct !DILocation(line: 202, column: 2, scope: !7271)
!7275 = !{i64 4301653}
!7276 = !DILocation(line: 205, column: 12, scope: !7271)
!7277 = !DILocation(line: 206, column: 1, scope: !7271)
!7278 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !430, file: !430, line: 275, type: !7279, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7292)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{null, !7281, !1806, !6706, !6706}
!7281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 32)
!7282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7283)
!7283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !7284)
!7284 = !{!7285, !7286, !7287}
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7283, file: !381, line: 53, baseType: !22, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7283, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7283, file: !381, line: 55, baseType: !7288, size: 32, offset: 64)
!7288 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !7289)
!7289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !7290)
!7290 = !{!7291}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7289, file: !387, line: 150, baseType: !137, size: 32)
!7292 = !{!7293, !7294, !7295, !7296}
!7293 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7278, file: !430, line: 276, type: !7281)
!7294 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7278, file: !430, line: 276, type: !1806)
!7295 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7278, file: !430, line: 277, type: !6706)
!7296 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7278, file: !430, line: 277, type: !6706)
!7297 = !DILocation(line: 0, scope: !7278)
!7298 = !DILocation(line: 279, column: 6, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7278, file: !430, line: 279, column: 6)
!7300 = !DILocation(line: 285, column: 1, scope: !7278)
!7301 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7302, file: !7302, line: 220, type: !7303, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7305)
!7302 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7303 = !DISubroutineType(types: !7304)
!7304 = !{!103, !7281, !1806, !6706, !6706}
!7305 = !{!7306, !7307, !7308, !7309, !7310}
!7306 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7301, file: !7302, line: 221, type: !7281)
!7307 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7301, file: !7302, line: 221, type: !1806)
!7308 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7301, file: !7302, line: 222, type: !6706)
!7309 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7301, file: !7302, line: 223, type: !6706)
!7310 = !DILocalVariable(name: "mpu_reg_index", scope: !7301, file: !7302, line: 225, type: !103)
!7311 = !DILocation(line: 0, scope: !7301)
!7312 = !DILocation(line: 225, column: 22, scope: !7301)
!7313 = !DILocation(line: 233, column: 18, scope: !7301)
!7314 = !DILocation(line: 236, column: 23, scope: !7301)
!7315 = !DILocation(line: 236, column: 21, scope: !7301)
!7316 = !DILocation(line: 238, column: 2, scope: !7301)
!7317 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !430, file: !430, line: 105, type: !7318, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7320)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{!103, !7281, !208, !208, !211}
!7320 = !{!7321, !7322, !7323, !7324, !7325, !7326}
!7321 = !DILocalVariable(name: "regions", arg: 1, scope: !7317, file: !430, line: 106, type: !7281)
!7322 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7317, file: !430, line: 106, type: !208)
!7323 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7317, file: !430, line: 106, type: !208)
!7324 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7317, file: !430, line: 107, type: !211)
!7325 = !DILocalVariable(name: "i", scope: !7317, file: !430, line: 109, type: !103)
!7326 = !DILocalVariable(name: "reg_index", scope: !7317, file: !430, line: 110, type: !103)
!7327 = !DILocation(line: 0, scope: !7317)
!7328 = !DILocation(line: 110, column: 18, scope: !7317)
!7329 = !DILocation(line: 112, column: 16, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !430, line: 112, column: 2)
!7331 = distinct !DILexicalBlock(scope: !7317, file: !430, line: 112, column: 2)
!7332 = !DILocation(line: 112, column: 2, scope: !7331)
!7333 = !DILocation(line: 113, column: 7, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !430, line: 113, column: 7)
!7335 = distinct !DILexicalBlock(scope: !7330, file: !430, line: 112, column: 36)
!7336 = !DILocation(line: 113, column: 18, scope: !7334)
!7337 = !DILocation(line: 113, column: 23, scope: !7334)
!7338 = !DILocation(line: 113, column: 7, scope: !7335)
!7339 = !DILocation(line: 118, column: 23, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7335, file: !430, line: 118, column: 7)
!7341 = !DILocation(line: 119, column: 7, scope: !7340)
!7342 = !DILocation(line: 118, column: 7, scope: !7335)
!7343 = !DILocation(line: 124, column: 36, scope: !7335)
!7344 = !DILocation(line: 124, column: 15, scope: !7335)
!7345 = !DILocation(line: 126, column: 17, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7335, file: !430, line: 126, column: 7)
!7347 = !DILocation(line: 126, column: 7, scope: !7335)
!7348 = !DILocation(line: 131, column: 12, scope: !7335)
!7349 = !DILocation(line: 132, column: 2, scope: !7335)
!7350 = !DILocation(line: 112, column: 32, scope: !7330)
!7351 = distinct !{!7351, !7332, !7352}
!7352 = !DILocation(line: 132, column: 2, scope: !7331)
!7353 = !DILocation(line: 135, column: 1, scope: !7317)
!7354 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7302, file: !7302, line: 63, type: !7355, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7357)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{!103, !7281}
!7357 = !{!7358, !7359}
!7358 = !DILocalVariable(name: "part", arg: 1, scope: !7354, file: !7302, line: 63, type: !7281)
!7359 = !DILocalVariable(name: "partition_is_valid", scope: !7354, file: !7302, line: 70, type: !103)
!7360 = !DILocation(line: 0, scope: !7354)
!7361 = !DILocation(line: 71, column: 11, scope: !7354)
!7362 = !DILocation(line: 71, column: 37, scope: !7354)
!7363 = !DILocation(line: 72, column: 3, scope: !7354)
!7364 = !DILocation(line: 71, column: 30, scope: !7354)
!7365 = !DILocation(line: 75, column: 11, scope: !7354)
!7366 = !DILocation(line: 75, column: 17, scope: !7354)
!7367 = !DILocation(line: 75, column: 38, scope: !7354)
!7368 = !DILocation(line: 77, column: 2, scope: !7354)
!7369 = distinct !DISubprogram(name: "mpu_configure_region", scope: !430, file: !430, line: 79, type: !7370, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7372)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!103, !1806, !7281}
!7372 = !{!7373, !7374, !7375}
!7373 = !DILocalVariable(name: "index", arg: 1, scope: !7369, file: !430, line: 79, type: !1806)
!7374 = !DILocalVariable(name: "new_region", arg: 2, scope: !7369, file: !430, line: 80, type: !7281)
!7375 = !DILocalVariable(name: "region_conf", scope: !7369, file: !430, line: 82, type: !419)
!7376 = !DILocation(line: 0, scope: !7369)
!7377 = !DILocation(line: 82, column: 2, scope: !7369)
!7378 = !DILocation(line: 82, column: 24, scope: !7369)
!7379 = !DILocation(line: 87, column: 33, scope: !7369)
!7380 = !DILocation(line: 87, column: 14, scope: !7369)
!7381 = !DILocation(line: 87, column: 19, scope: !7369)
!7382 = !DILocation(line: 91, column: 55, scope: !7369)
!7383 = !DILocation(line: 92, column: 16, scope: !7369)
!7384 = !DILocation(line: 92, column: 53, scope: !7369)
!7385 = !DILocation(line: 91, column: 2, scope: !7369)
!7386 = !DILocation(line: 95, column: 9, scope: !7369)
!7387 = !DILocation(line: 97, column: 1, scope: !7369)
!7388 = !DILocation(line: 95, column: 2, scope: !7369)
!7389 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7302, file: !7302, line: 113, type: !7390, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7395)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{null, !7392, !7393, !137, !137}
!7392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!7393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7394, size: 32)
!7394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7288)
!7395 = !{!7396, !7397, !7398, !7399}
!7396 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7389, file: !7302, line: 114, type: !7392)
!7397 = !DILocalVariable(name: "attr", arg: 2, scope: !7389, file: !7302, line: 115, type: !7393)
!7398 = !DILocalVariable(name: "base", arg: 3, scope: !7389, file: !7302, line: 115, type: !137)
!7399 = !DILocalVariable(name: "size", arg: 4, scope: !7389, file: !7302, line: 115, type: !137)
!7400 = !DILocation(line: 0, scope: !7389)
!7401 = !DILocation(line: 127, column: 23, scope: !7389)
!7402 = !DILocation(line: 127, column: 35, scope: !7389)
!7403 = !DILocation(line: 127, column: 33, scope: !7389)
!7404 = !DILocation(line: 127, column: 10, scope: !7389)
!7405 = !DILocation(line: 127, column: 15, scope: !7389)
!7406 = !DILocation(line: 129, column: 1, scope: !7389)
!7407 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !430, file: !430, line: 57, type: !7408, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7410)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!103, !1806, !417}
!7410 = !{!7411, !7412}
!7411 = !DILocalVariable(name: "index", arg: 1, scope: !7407, file: !430, line: 57, type: !1806)
!7412 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7407, file: !430, line: 58, type: !417)
!7413 = !DILocation(line: 0, scope: !7407)
!7414 = !DILocation(line: 61, column: 6, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7407, file: !430, line: 61, column: 6)
!7416 = !DILocation(line: 61, column: 12, scope: !7415)
!7417 = !DILocation(line: 61, column: 6, scope: !7407)
!7418 = !DILocation(line: 71, column: 2, scope: !7407)
!7419 = !DILocation(line: 73, column: 2, scope: !7407)
!7420 = !DILocation(line: 74, column: 1, scope: !7407)
!7421 = distinct !DISubprogram(name: "region_init", scope: !7302, file: !7302, line: 29, type: !7422, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7424)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{null, !6706, !417}
!7424 = !{!7425, !7426}
!7425 = !DILocalVariable(name: "index", arg: 1, scope: !7421, file: !7302, line: 29, type: !6706)
!7426 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7421, file: !7302, line: 30, type: !417)
!7427 = !DILocation(line: 0, scope: !7421)
!7428 = !DILocation(line: 33, column: 2, scope: !7421)
!7429 = !DILocation(line: 47, column: 28, scope: !7421)
!7430 = !DILocation(line: 47, column: 33, scope: !7421)
!7431 = !DILocation(line: 48, column: 26, scope: !7421)
!7432 = !DILocation(line: 47, column: 12, scope: !7421)
!7433 = !DILocation(line: 49, column: 32, scope: !7421)
!7434 = !DILocation(line: 49, column: 37, scope: !7421)
!7435 = !DILocation(line: 49, column: 12, scope: !7421)
!7436 = !DILocation(line: 53, column: 1, scope: !7421)
!7437 = distinct !DISubprogram(name: "set_region_number", scope: !7438, file: !7438, line: 32, type: !6529, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7439)
!7438 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7439 = !{!7440}
!7440 = !DILocalVariable(name: "index", arg: 1, scope: !7437, file: !7438, line: 32, type: !137)
!7441 = !DILocation(line: 0, scope: !7437)
!7442 = !DILocation(line: 34, column: 11, scope: !7437)
!7443 = !DILocation(line: 35, column: 1, scope: !7437)
!7444 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7302, file: !7302, line: 88, type: !7445, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7447)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{!137, !137}
!7447 = !{!7448}
!7448 = !DILocalVariable(name: "size", arg: 1, scope: !7444, file: !7302, line: 88, type: !137)
!7449 = !DILocation(line: 0, scope: !7444)
!7450 = !DILocation(line: 91, column: 11, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7444, file: !7302, line: 91, column: 6)
!7452 = !DILocation(line: 91, column: 6, scope: !7444)
!7453 = !DILocation(line: 100, column: 11, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7444, file: !7302, line: 100, column: 6)
!7455 = !DILocation(line: 100, column: 6, scope: !7444)
!7456 = !DILocation(line: 104, column: 35, scope: !7444)
!7457 = !DILocation(line: 104, column: 16, scope: !7444)
!7458 = !DILocation(line: 104, column: 50, scope: !7444)
!7459 = !DILocation(line: 104, column: 72, scope: !7444)
!7460 = !DILocation(line: 104, column: 2, scope: !7444)
!7461 = !DILocation(line: 106, column: 1, scope: !7444)
!7462 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !430, file: !430, line: 307, type: !7463, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7465)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{null, !7281, !208}
!7465 = !{!7466, !7467}
!7466 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7462, file: !430, line: 308, type: !7281)
!7467 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7462, file: !430, line: 308, type: !208)
!7468 = !DILocation(line: 0, scope: !7462)
!7469 = !DILocation(line: 310, column: 6, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7462, file: !430, line: 310, column: 6)
!7471 = !DILocation(line: 316, column: 1, scope: !7462)
!7472 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7302, file: !7302, line: 249, type: !7473, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7475)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!103, !7281, !208}
!7475 = !{!7476, !7477, !7478, !7479}
!7476 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7472, file: !7302, line: 250, type: !7281)
!7477 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7472, file: !7302, line: 250, type: !208)
!7478 = !DILocalVariable(name: "mpu_reg_index", scope: !7472, file: !7302, line: 252, type: !103)
!7479 = !DILocalVariable(name: "i", scope: !7480, file: !7302, line: 264, type: !103)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !7302, line: 264, column: 3)
!7481 = distinct !DILexicalBlock(scope: !7482, file: !7302, line: 261, column: 32)
!7482 = distinct !DILexicalBlock(scope: !7472, file: !7302, line: 261, column: 6)
!7483 = !DILocation(line: 0, scope: !7472)
!7484 = !DILocation(line: 252, column: 22, scope: !7472)
!7485 = !DILocation(line: 258, column: 18, scope: !7472)
!7486 = !DILocation(line: 261, column: 20, scope: !7482)
!7487 = !DILocation(line: 261, column: 6, scope: !7472)
!7488 = !DILocation(line: 0, scope: !7480)
!7489 = !DILocation(line: 265, column: 4, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !7302, line: 264, column: 59)
!7491 = distinct !DILexicalBlock(scope: !7480, file: !7302, line: 264, column: 3)
!7492 = !DILocation(line: 264, column: 55, scope: !7491)
!7493 = !DILocation(line: 264, column: 33, scope: !7491)
!7494 = !DILocation(line: 264, column: 3, scope: !7480)
!7495 = distinct !{!7495, !7494, !7496}
!7496 = !DILocation(line: 266, column: 3, scope: !7480)
!7497 = !DILocation(line: 269, column: 2, scope: !7472)
!7498 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7499, file: !7499, line: 218, type: !6529, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7500)
!7499 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "rnr", arg: 1, scope: !7498, file: !7499, line: 218, type: !137)
!7502 = !DILocation(line: 0, scope: !7498)
!7503 = !DILocation(line: 220, column: 12, scope: !7498)
!7504 = !DILocation(line: 221, column: 13, scope: !7498)
!7505 = !DILocation(line: 222, column: 1, scope: !7498)
!7506 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !430, file: !430, line: 326, type: !7507, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7509)
!7507 = !DISubroutineType(types: !7508)
!7508 = !{!103}
!7509 = !{!7510}
!7510 = !DILocalVariable(name: "r_index", scope: !7506, file: !430, line: 328, type: !137)
!7511 = !DILocation(line: 330, column: 17, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7506, file: !430, line: 330, column: 6)
!7513 = !DILocation(line: 330, column: 29, scope: !7512)
!7514 = !DILocation(line: 330, column: 6, scope: !7506)
!7515 = !DILocation(line: 347, column: 2, scope: !7506)
!7516 = !DILocation(line: 0, scope: !7506)
!7517 = !DILocation(line: 364, column: 29, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !430, line: 364, column: 2)
!7519 = distinct !DILexicalBlock(scope: !7506, file: !430, line: 364, column: 2)
!7520 = !DILocation(line: 364, column: 2, scope: !7519)
!7521 = !DILocation(line: 365, column: 25, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7518, file: !430, line: 364, column: 66)
!7523 = !DILocation(line: 365, column: 3, scope: !7522)
!7524 = !DILocation(line: 364, column: 62, scope: !7518)
!7525 = distinct !{!7525, !7520, !7526}
!7526 = !DILocation(line: 366, column: 2, scope: !7519)
!7527 = !DILocation(line: 369, column: 23, scope: !7506)
!7528 = !DILocation(line: 369, column: 21, scope: !7506)
!7529 = !DILocation(line: 372, column: 2, scope: !7506)
!7530 = !DILocation(line: 443, column: 2, scope: !7506)
!7531 = !DILocation(line: 444, column: 1, scope: !7506)
!7532 = distinct !DISubprogram(name: "strcpy", scope: !7533, file: !7533, line: 20, type: !7534, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7538)
!7533 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7534 = !DISubroutineType(types: !7535)
!7535 = !{!1046, !7536, !7537}
!7536 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1046)
!7537 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !199)
!7538 = !{!7539, !7540, !7541}
!7539 = !DILocalVariable(name: "d", arg: 1, scope: !7532, file: !7533, line: 20, type: !7536)
!7540 = !DILocalVariable(name: "s", arg: 2, scope: !7532, file: !7533, line: 20, type: !7537)
!7541 = !DILocalVariable(name: "dest", scope: !7532, file: !7533, line: 22, type: !1046)
!7542 = !DILocation(line: 0, scope: !7532)
!7543 = !DILocation(line: 24, column: 9, scope: !7532)
!7544 = !DILocation(line: 24, column: 12, scope: !7532)
!7545 = !DILocation(line: 24, column: 2, scope: !7532)
!7546 = !DILocation(line: 25, column: 6, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7532, file: !7533, line: 24, column: 21)
!7548 = !DILocation(line: 26, column: 4, scope: !7547)
!7549 = !DILocation(line: 27, column: 4, scope: !7547)
!7550 = distinct !{!7550, !7545, !7551}
!7551 = !DILocation(line: 28, column: 2, scope: !7532)
!7552 = !DILocation(line: 30, column: 5, scope: !7532)
!7553 = !DILocation(line: 32, column: 2, scope: !7532)
!7554 = distinct !DISubprogram(name: "strncpy", scope: !7533, file: !7533, line: 42, type: !7555, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7557)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!1046, !7536, !7537, !120}
!7557 = !{!7558, !7559, !7560, !7561}
!7558 = !DILocalVariable(name: "d", arg: 1, scope: !7554, file: !7533, line: 42, type: !7536)
!7559 = !DILocalVariable(name: "s", arg: 2, scope: !7554, file: !7533, line: 42, type: !7537)
!7560 = !DILocalVariable(name: "n", arg: 3, scope: !7554, file: !7533, line: 42, type: !120)
!7561 = !DILocalVariable(name: "dest", scope: !7554, file: !7533, line: 44, type: !1046)
!7562 = !DILocation(line: 0, scope: !7554)
!7563 = !DILocation(line: 46, column: 12, scope: !7554)
!7564 = !DILocation(line: 46, column: 17, scope: !7554)
!7565 = !DILocation(line: 46, column: 20, scope: !7554)
!7566 = !DILocation(line: 46, column: 23, scope: !7554)
!7567 = !DILocation(line: 46, column: 2, scope: !7554)
!7568 = !DILocation(line: 47, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7554, file: !7533, line: 46, column: 32)
!7570 = !DILocation(line: 48, column: 4, scope: !7569)
!7571 = !DILocation(line: 49, column: 4, scope: !7569)
!7572 = !DILocation(line: 50, column: 4, scope: !7569)
!7573 = distinct !{!7573, !7567, !7574}
!7574 = !DILocation(line: 51, column: 2, scope: !7554)
!7575 = !DILocation(line: 54, column: 6, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7554, file: !7533, line: 53, column: 16)
!7577 = !DILocation(line: 55, column: 4, scope: !7576)
!7578 = !DILocation(line: 56, column: 4, scope: !7576)
!7579 = !DILocation(line: 53, column: 11, scope: !7554)
!7580 = !DILocation(line: 53, column: 2, scope: !7554)
!7581 = distinct !{!7581, !7580, !7582}
!7582 = !DILocation(line: 57, column: 2, scope: !7554)
!7583 = !DILocation(line: 59, column: 2, scope: !7554)
!7584 = distinct !DISubprogram(name: "strchr", scope: !7533, file: !7533, line: 69, type: !7585, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7587)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{!1046, !199, !103}
!7587 = !{!7588, !7589, !7590}
!7588 = !DILocalVariable(name: "s", arg: 1, scope: !7584, file: !7533, line: 69, type: !199)
!7589 = !DILocalVariable(name: "c", arg: 2, scope: !7584, file: !7533, line: 69, type: !103)
!7590 = !DILocalVariable(name: "tmp", scope: !7584, file: !7533, line: 71, type: !109)
!7591 = !DILocation(line: 0, scope: !7584)
!7592 = !DILocation(line: 73, column: 2, scope: !7584)
!7593 = !DILocation(line: 73, column: 10, scope: !7584)
!7594 = !DILocation(line: 73, column: 13, scope: !7584)
!7595 = !DILocation(line: 73, column: 21, scope: !7584)
!7596 = !DILocation(line: 74, column: 4, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7584, file: !7533, line: 73, column: 38)
!7598 = distinct !{!7598, !7592, !7599}
!7599 = !DILocation(line: 75, column: 2, scope: !7584)
!7600 = !DILocation(line: 77, column: 9, scope: !7584)
!7601 = !DILocation(line: 77, column: 2, scope: !7584)
!7602 = distinct !DISubprogram(name: "strrchr", scope: !7533, file: !7533, line: 87, type: !7585, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7603)
!7603 = !{!7604, !7605, !7606}
!7604 = !DILocalVariable(name: "s", arg: 1, scope: !7602, file: !7533, line: 87, type: !199)
!7605 = !DILocalVariable(name: "c", arg: 2, scope: !7602, file: !7533, line: 87, type: !103)
!7606 = !DILocalVariable(name: "match", scope: !7602, file: !7533, line: 89, type: !1046)
!7607 = !DILocation(line: 0, scope: !7602)
!7608 = !DILocation(line: 91, column: 2, scope: !7602)
!7609 = !DILocation(line: 92, column: 7, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !7533, line: 92, column: 7)
!7611 = distinct !DILexicalBlock(scope: !7602, file: !7533, line: 91, column: 5)
!7612 = !DILocation(line: 92, column: 10, scope: !7610)
!7613 = !DILocation(line: 92, column: 7, scope: !7611)
!7614 = !DILocation(line: 95, column: 13, scope: !7602)
!7615 = !DILocation(line: 95, column: 2, scope: !7611)
!7616 = distinct !{!7616, !7608, !7617}
!7617 = !DILocation(line: 95, column: 15, scope: !7602)
!7618 = !DILocation(line: 97, column: 2, scope: !7602)
!7619 = distinct !DISubprogram(name: "strlen", scope: !7533, file: !7533, line: 107, type: !7620, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7622)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!120, !199}
!7622 = !{!7623, !7624}
!7623 = !DILocalVariable(name: "s", arg: 1, scope: !7619, file: !7533, line: 107, type: !199)
!7624 = !DILocalVariable(name: "n", scope: !7619, file: !7533, line: 109, type: !120)
!7625 = !DILocation(line: 0, scope: !7619)
!7626 = !DILocation(line: 111, column: 9, scope: !7619)
!7627 = !DILocation(line: 111, column: 12, scope: !7619)
!7628 = !DILocation(line: 111, column: 2, scope: !7619)
!7629 = !DILocation(line: 112, column: 4, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7619, file: !7533, line: 111, column: 21)
!7631 = !DILocation(line: 113, column: 4, scope: !7630)
!7632 = distinct !{!7632, !7628, !7633}
!7633 = !DILocation(line: 114, column: 2, scope: !7619)
!7634 = !DILocation(line: 116, column: 2, scope: !7619)
!7635 = distinct !DISubprogram(name: "strnlen", scope: !7533, file: !7533, line: 126, type: !7636, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!120, !199, !120}
!7638 = !{!7639, !7640, !7641}
!7639 = !DILocalVariable(name: "s", arg: 1, scope: !7635, file: !7533, line: 126, type: !199)
!7640 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7635, file: !7533, line: 126, type: !120)
!7641 = !DILocalVariable(name: "n", scope: !7635, file: !7533, line: 128, type: !120)
!7642 = !DILocation(line: 0, scope: !7635)
!7643 = !DILocation(line: 130, column: 9, scope: !7635)
!7644 = !DILocation(line: 130, column: 12, scope: !7635)
!7645 = !DILocation(line: 130, column: 20, scope: !7635)
!7646 = !DILocation(line: 130, column: 2, scope: !7635)
!7647 = !DILocation(line: 131, column: 4, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7635, file: !7533, line: 130, column: 35)
!7649 = !DILocation(line: 132, column: 4, scope: !7648)
!7650 = distinct !{!7650, !7646, !7651}
!7651 = !DILocation(line: 133, column: 2, scope: !7635)
!7652 = !DILocation(line: 135, column: 2, scope: !7635)
!7653 = distinct !DISubprogram(name: "strcmp", scope: !7533, file: !7533, line: 145, type: !7654, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7656)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!103, !199, !199}
!7656 = !{!7657, !7658}
!7657 = !DILocalVariable(name: "s1", arg: 1, scope: !7653, file: !7533, line: 145, type: !199)
!7658 = !DILocalVariable(name: "s2", arg: 2, scope: !7653, file: !7533, line: 145, type: !199)
!7659 = !DILocation(line: 0, scope: !7653)
!7660 = !DILocation(line: 147, column: 10, scope: !7653)
!7661 = !DILocation(line: 147, column: 17, scope: !7653)
!7662 = !DILocation(line: 147, column: 14, scope: !7653)
!7663 = !DILocation(line: 147, column: 22, scope: !7653)
!7664 = !DILocation(line: 148, column: 5, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7653, file: !7533, line: 147, column: 40)
!7666 = !DILocation(line: 149, column: 5, scope: !7665)
!7667 = distinct !{!7667, !7668, !7669}
!7668 = !DILocation(line: 147, column: 2, scope: !7653)
!7669 = !DILocation(line: 150, column: 2, scope: !7653)
!7670 = !DILocation(line: 152, column: 9, scope: !7653)
!7671 = !DILocation(line: 152, column: 15, scope: !7653)
!7672 = !DILocation(line: 152, column: 13, scope: !7653)
!7673 = !DILocation(line: 152, column: 2, scope: !7653)
!7674 = distinct !DISubprogram(name: "strncmp", scope: !7533, file: !7533, line: 162, type: !7675, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7677)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!103, !199, !199, !120}
!7677 = !{!7678, !7679, !7680}
!7678 = !DILocalVariable(name: "s1", arg: 1, scope: !7674, file: !7533, line: 162, type: !199)
!7679 = !DILocalVariable(name: "s2", arg: 2, scope: !7674, file: !7533, line: 162, type: !199)
!7680 = !DILocalVariable(name: "n", arg: 3, scope: !7674, file: !7533, line: 162, type: !120)
!7681 = !DILocation(line: 0, scope: !7674)
!7682 = !DILocation(line: 164, column: 17, scope: !7674)
!7683 = !DILocation(line: 164, column: 21, scope: !7674)
!7684 = !DILocation(line: 164, column: 28, scope: !7674)
!7685 = !DILocation(line: 164, column: 25, scope: !7674)
!7686 = !DILocation(line: 164, column: 33, scope: !7674)
!7687 = !DILocation(line: 165, column: 5, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7674, file: !7533, line: 164, column: 51)
!7689 = !DILocation(line: 166, column: 5, scope: !7688)
!7690 = !DILocation(line: 167, column: 4, scope: !7688)
!7691 = distinct !{!7691, !7692, !7693}
!7692 = !DILocation(line: 164, column: 2, scope: !7674)
!7693 = !DILocation(line: 168, column: 2, scope: !7674)
!7694 = !DILocation(line: 170, column: 25, scope: !7674)
!7695 = !DILocation(line: 170, column: 31, scope: !7674)
!7696 = !DILocation(line: 170, column: 29, scope: !7674)
!7697 = !DILocation(line: 170, column: 9, scope: !7674)
!7698 = !DILocation(line: 170, column: 2, scope: !7674)
!7699 = distinct !DISubprogram(name: "strtok_r", scope: !7533, file: !7533, line: 180, type: !7700, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7703)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{!1046, !1046, !199, !7702}
!7702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!7703 = !{!7704, !7705, !7706, !7707, !7708}
!7704 = !DILocalVariable(name: "str", arg: 1, scope: !7699, file: !7533, line: 180, type: !1046)
!7705 = !DILocalVariable(name: "sep", arg: 2, scope: !7699, file: !7533, line: 180, type: !199)
!7706 = !DILocalVariable(name: "state", arg: 3, scope: !7699, file: !7533, line: 180, type: !7702)
!7707 = !DILocalVariable(name: "start", scope: !7699, file: !7533, line: 182, type: !1046)
!7708 = !DILocalVariable(name: "end", scope: !7699, file: !7533, line: 182, type: !1046)
!7709 = !DILocation(line: 0, scope: !7699)
!7710 = !DILocation(line: 184, column: 10, scope: !7699)
!7711 = !DILocation(line: 184, column: 22, scope: !7699)
!7712 = !DILocation(line: 187, column: 9, scope: !7699)
!7713 = !DILocation(line: 187, column: 16, scope: !7699)
!7714 = !DILocation(line: 187, column: 19, scope: !7699)
!7715 = !DILocation(line: 187, column: 2, scope: !7699)
!7716 = !DILocation(line: 188, column: 8, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7699, file: !7533, line: 187, column: 40)
!7718 = distinct !{!7718, !7715, !7719}
!7719 = !DILocation(line: 189, column: 2, scope: !7699)
!7720 = !DILocation(line: 198, column: 9, scope: !7699)
!7721 = !DILocation(line: 198, column: 18, scope: !7699)
!7722 = !DILocation(line: 198, column: 17, scope: !7699)
!7723 = !DILocation(line: 198, column: 2, scope: !7699)
!7724 = !DILocation(line: 199, column: 6, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7699, file: !7533, line: 198, column: 37)
!7726 = !DILocation(line: 198, column: 14, scope: !7699)
!7727 = distinct !{!7727, !7723, !7728}
!7728 = !DILocation(line: 200, column: 2, scope: !7699)
!7729 = !DILocation(line: 203, column: 8, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !7533, line: 202, column: 20)
!7731 = distinct !DILexicalBlock(scope: !7699, file: !7533, line: 202, column: 6)
!7732 = !DILocation(line: 204, column: 16, scope: !7730)
!7733 = !DILocation(line: 205, column: 2, scope: !7730)
!7734 = !DILocation(line: 210, column: 1, scope: !7699)
!7735 = distinct !DISubprogram(name: "strcat", scope: !7533, file: !7533, line: 212, type: !7534, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7736)
!7736 = !{!7737, !7738}
!7737 = !DILocalVariable(name: "dest", arg: 1, scope: !7735, file: !7533, line: 212, type: !7536)
!7738 = !DILocalVariable(name: "src", arg: 2, scope: !7735, file: !7533, line: 212, type: !7537)
!7739 = !DILocation(line: 0, scope: !7735)
!7740 = !DILocation(line: 214, column: 16, scope: !7735)
!7741 = !DILocation(line: 214, column: 14, scope: !7735)
!7742 = !DILocation(line: 214, column: 2, scope: !7735)
!7743 = !DILocation(line: 215, column: 2, scope: !7735)
!7744 = distinct !DISubprogram(name: "strncat", scope: !7533, file: !7533, line: 218, type: !7555, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7745)
!7745 = !{!7746, !7747, !7748, !7749, !7750}
!7746 = !DILocalVariable(name: "dest", arg: 1, scope: !7744, file: !7533, line: 218, type: !7536)
!7747 = !DILocalVariable(name: "src", arg: 2, scope: !7744, file: !7533, line: 218, type: !7537)
!7748 = !DILocalVariable(name: "n", arg: 3, scope: !7744, file: !7533, line: 219, type: !120)
!7749 = !DILocalVariable(name: "orig_dest", scope: !7744, file: !7533, line: 221, type: !1046)
!7750 = !DILocalVariable(name: "len", scope: !7744, file: !7533, line: 222, type: !120)
!7751 = !DILocation(line: 0, scope: !7744)
!7752 = !DILocation(line: 222, column: 15, scope: !7744)
!7753 = !DILocation(line: 224, column: 7, scope: !7744)
!7754 = !DILocation(line: 225, column: 14, scope: !7744)
!7755 = !DILocation(line: 225, column: 19, scope: !7744)
!7756 = !DILocation(line: 225, column: 11, scope: !7744)
!7757 = !DILocation(line: 225, column: 23, scope: !7744)
!7758 = !DILocation(line: 225, column: 28, scope: !7744)
!7759 = !DILocation(line: 225, column: 2, scope: !7744)
!7760 = !DILocation(line: 226, column: 17, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7744, file: !7533, line: 225, column: 38)
!7762 = !DILocation(line: 226, column: 8, scope: !7761)
!7763 = !DILocation(line: 226, column: 11, scope: !7761)
!7764 = distinct !{!7764, !7759, !7765}
!7765 = !DILocation(line: 227, column: 2, scope: !7744)
!7766 = !DILocation(line: 228, column: 8, scope: !7744)
!7767 = !DILocation(line: 230, column: 2, scope: !7744)
!7768 = distinct !DISubprogram(name: "memcmp", scope: !7533, file: !7533, line: 239, type: !7769, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7771)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!103, !13, !13, !120}
!7771 = !{!7772, !7773, !7774, !7775, !7776}
!7772 = !DILocalVariable(name: "m1", arg: 1, scope: !7768, file: !7533, line: 239, type: !13)
!7773 = !DILocalVariable(name: "m2", arg: 2, scope: !7768, file: !7533, line: 239, type: !13)
!7774 = !DILocalVariable(name: "n", arg: 3, scope: !7768, file: !7533, line: 239, type: !120)
!7775 = !DILocalVariable(name: "c1", scope: !7768, file: !7533, line: 241, type: !199)
!7776 = !DILocalVariable(name: "c2", scope: !7768, file: !7533, line: 242, type: !199)
!7777 = !DILocation(line: 0, scope: !7768)
!7778 = !DILocation(line: 244, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7768, file: !7533, line: 244, column: 6)
!7780 = !DILocation(line: 244, column: 6, scope: !7768)
!7781 = !DILocation(line: 248, column: 10, scope: !7768)
!7782 = !DILocation(line: 248, column: 14, scope: !7768)
!7783 = !DILocation(line: 248, column: 19, scope: !7768)
!7784 = !DILocation(line: 248, column: 2, scope: !7768)
!7785 = !DILocation(line: 248, column: 23, scope: !7768)
!7786 = !DILocation(line: 248, column: 30, scope: !7768)
!7787 = !DILocation(line: 248, column: 27, scope: !7768)
!7788 = !DILocation(line: 249, column: 5, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7768, file: !7533, line: 248, column: 36)
!7790 = !DILocation(line: 250, column: 5, scope: !7789)
!7791 = distinct !{!7791, !7784, !7792}
!7792 = !DILocation(line: 251, column: 2, scope: !7768)
!7793 = !DILocation(line: 253, column: 9, scope: !7768)
!7794 = !DILocation(line: 253, column: 15, scope: !7768)
!7795 = !DILocation(line: 253, column: 13, scope: !7768)
!7796 = !DILocation(line: 253, column: 2, scope: !7768)
!7797 = !DILocation(line: 254, column: 1, scope: !7768)
!7798 = distinct !DISubprogram(name: "memmove", scope: !7533, file: !7533, line: 263, type: !7799, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7801)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{!102, !102, !13, !120}
!7801 = !{!7802, !7803, !7804, !7805, !7806}
!7802 = !DILocalVariable(name: "d", arg: 1, scope: !7798, file: !7533, line: 263, type: !102)
!7803 = !DILocalVariable(name: "s", arg: 2, scope: !7798, file: !7533, line: 263, type: !13)
!7804 = !DILocalVariable(name: "n", arg: 3, scope: !7798, file: !7533, line: 263, type: !120)
!7805 = !DILocalVariable(name: "dest", scope: !7798, file: !7533, line: 265, type: !1046)
!7806 = !DILocalVariable(name: "src", scope: !7798, file: !7533, line: 266, type: !199)
!7807 = !DILocation(line: 0, scope: !7798)
!7808 = !DILocation(line: 268, column: 21, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7798, file: !7533, line: 268, column: 6)
!7810 = !DILocation(line: 268, column: 28, scope: !7809)
!7811 = !DILocation(line: 268, column: 6, scope: !7798)
!7812 = !DILocation(line: 280, column: 12, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7809, file: !7533, line: 278, column: 9)
!7814 = !DILocation(line: 280, column: 3, scope: !7813)
!7815 = !DILocation(line: 275, column: 5, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !7533, line: 274, column: 17)
!7817 = distinct !DILexicalBlock(scope: !7809, file: !7533, line: 268, column: 33)
!7818 = !DILocation(line: 276, column: 14, scope: !7816)
!7819 = !DILocation(line: 276, column: 4, scope: !7816)
!7820 = !DILocation(line: 276, column: 12, scope: !7816)
!7821 = !DILocation(line: 274, column: 12, scope: !7817)
!7822 = !DILocation(line: 274, column: 3, scope: !7817)
!7823 = distinct !{!7823, !7822, !7824}
!7824 = !DILocation(line: 277, column: 3, scope: !7817)
!7825 = !DILocation(line: 281, column: 12, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7813, file: !7533, line: 280, column: 17)
!7827 = !DILocation(line: 281, column: 10, scope: !7826)
!7828 = !DILocation(line: 282, column: 8, scope: !7826)
!7829 = !DILocation(line: 283, column: 7, scope: !7826)
!7830 = !DILocation(line: 284, column: 5, scope: !7826)
!7831 = distinct !{!7831, !7814, !7832}
!7832 = !DILocation(line: 285, column: 3, scope: !7813)
!7833 = !DILocation(line: 288, column: 2, scope: !7798)
!7834 = distinct !DISubprogram(name: "memcpy", scope: !7533, file: !7533, line: 298, type: !7835, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7839)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!102, !7837, !7838, !120}
!7837 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7838 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7839 = !{!7840, !7841, !7842, !7843, !7844}
!7840 = !DILocalVariable(name: "d", arg: 1, scope: !7834, file: !7533, line: 298, type: !7837)
!7841 = !DILocalVariable(name: "s", arg: 2, scope: !7834, file: !7533, line: 298, type: !7838)
!7842 = !DILocalVariable(name: "n", arg: 3, scope: !7834, file: !7533, line: 298, type: !120)
!7843 = !DILocalVariable(name: "d_byte", scope: !7834, file: !7533, line: 302, type: !881)
!7844 = !DILocalVariable(name: "s_byte", scope: !7834, file: !7533, line: 303, type: !2730)
!7845 = !DILocation(line: 0, scope: !7834)
!7846 = !DILocation(line: 337, column: 11, scope: !7834)
!7847 = !DILocation(line: 337, column: 2, scope: !7834)
!7848 = !DILocation(line: 338, column: 25, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7834, file: !7533, line: 337, column: 16)
!7850 = !DILocation(line: 338, column: 17, scope: !7849)
!7851 = !DILocation(line: 338, column: 11, scope: !7849)
!7852 = !DILocation(line: 338, column: 15, scope: !7849)
!7853 = !DILocation(line: 339, column: 4, scope: !7849)
!7854 = distinct !{!7854, !7847, !7855}
!7855 = !DILocation(line: 340, column: 2, scope: !7834)
!7856 = !DILocation(line: 342, column: 2, scope: !7834)
!7857 = distinct !DISubprogram(name: "memset", scope: !7533, file: !7533, line: 352, type: !7858, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7860)
!7858 = !DISubroutineType(types: !7859)
!7859 = !{!102, !102, !103, !120}
!7860 = !{!7861, !7862, !7863, !7864, !7865}
!7861 = !DILocalVariable(name: "buf", arg: 1, scope: !7857, file: !7533, line: 352, type: !102)
!7862 = !DILocalVariable(name: "c", arg: 2, scope: !7857, file: !7533, line: 352, type: !103)
!7863 = !DILocalVariable(name: "n", arg: 3, scope: !7857, file: !7533, line: 352, type: !120)
!7864 = !DILocalVariable(name: "d_byte", scope: !7857, file: !7533, line: 356, type: !881)
!7865 = !DILocalVariable(name: "c_byte", scope: !7857, file: !7533, line: 357, type: !209)
!7866 = !DILocation(line: 0, scope: !7857)
!7867 = !DILocation(line: 357, column: 25, scope: !7857)
!7868 = !DILocation(line: 389, column: 11, scope: !7857)
!7869 = !DILocation(line: 389, column: 2, scope: !7857)
!7870 = !DILocation(line: 390, column: 11, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7857, file: !7533, line: 389, column: 16)
!7872 = !DILocation(line: 390, column: 15, scope: !7871)
!7873 = !DILocation(line: 391, column: 4, scope: !7871)
!7874 = distinct !{!7874, !7869, !7875}
!7875 = !DILocation(line: 392, column: 2, scope: !7857)
!7876 = !DILocation(line: 394, column: 2, scope: !7857)
!7877 = distinct !DISubprogram(name: "memchr", scope: !7533, file: !7533, line: 404, type: !7878, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7880)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!102, !13, !103, !120}
!7880 = !{!7881, !7882, !7883, !7884}
!7881 = !DILocalVariable(name: "s", arg: 1, scope: !7877, file: !7533, line: 404, type: !13)
!7882 = !DILocalVariable(name: "c", arg: 2, scope: !7877, file: !7533, line: 404, type: !103)
!7883 = !DILocalVariable(name: "n", arg: 3, scope: !7877, file: !7533, line: 404, type: !120)
!7884 = !DILocalVariable(name: "p", scope: !7885, file: !7533, line: 407, type: !2730)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !7533, line: 406, column: 14)
!7886 = distinct !DILexicalBlock(scope: !7877, file: !7533, line: 406, column: 6)
!7887 = !DILocation(line: 0, scope: !7877)
!7888 = !DILocation(line: 406, column: 8, scope: !7886)
!7889 = !DILocation(line: 406, column: 6, scope: !7877)
!7890 = !DILocation(line: 409, column: 3, scope: !7885)
!7891 = !DILocation(line: 0, scope: !7885)
!7892 = !DILocation(line: 410, column: 8, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7533, line: 410, column: 8)
!7894 = distinct !DILexicalBlock(scope: !7885, file: !7533, line: 409, column: 6)
!7895 = !DILocation(line: 410, column: 13, scope: !7893)
!7896 = !DILocation(line: 410, column: 8, scope: !7894)
!7897 = distinct !{!7897, !7890, !7898}
!7898 = !DILocation(line: 414, column: 20, scope: !7885)
!7899 = !DILocation(line: 417, column: 2, scope: !7877)
!7900 = !DILocation(line: 418, column: 1, scope: !7877)
!7901 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !440, file: !440, line: 23, type: !3112, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7902)
!7902 = !{!7903}
!7903 = !DILocalVariable(name: "hook", arg: 1, scope: !7901, file: !440, line: 23, type: !128)
!7904 = !DILocation(line: 0, scope: !7901)
!7905 = !DILocation(line: 25, column: 15, scope: !7901)
!7906 = !DILocation(line: 26, column: 1, scope: !7901)
!7907 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !440, file: !440, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7908)
!7908 = !{!7909}
!7909 = !DILocalVariable(name: "c", arg: 1, scope: !7907, file: !440, line: 14, type: !103)
!7910 = !DILocation(line: 0, scope: !7907)
!7911 = !DILocation(line: 18, column: 2, scope: !7907)
!7912 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !440, file: !440, line: 28, type: !7913, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7915)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!103, !103, !436}
!7915 = !{!7916, !7917}
!7916 = !DILocalVariable(name: "c", arg: 1, scope: !7912, file: !440, line: 28, type: !103)
!7917 = !DILocalVariable(name: "stream", arg: 2, scope: !7912, file: !440, line: 28, type: !436)
!7918 = !DILocation(line: 0, scope: !7912)
!7919 = !DILocation(line: 30, column: 27, scope: !7912)
!7920 = !DILocation(line: 30, column: 50, scope: !7912)
!7921 = !DILocation(line: 30, column: 9, scope: !7912)
!7922 = !DILocation(line: 30, column: 2, scope: !7912)
!7923 = distinct !DISubprogram(name: "fputc", scope: !440, file: !440, line: 41, type: !7913, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7924)
!7924 = !{!7925, !7926}
!7925 = !DILocalVariable(name: "c", arg: 1, scope: !7923, file: !440, line: 41, type: !103)
!7926 = !DILocalVariable(name: "stream", arg: 2, scope: !7923, file: !440, line: 41, type: !436)
!7927 = !DILocation(line: 0, scope: !7923)
!7928 = !DILocation(line: 43, column: 9, scope: !7923)
!7929 = !DILocation(line: 43, column: 2, scope: !7923)
!7930 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7931, file: !7931, line: 72, type: !7913, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7932)
!7931 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!7932 = !{!7933, !7934}
!7933 = !DILocalVariable(name: "c", arg: 1, scope: !7930, file: !7931, line: 72, type: !103)
!7934 = !DILocalVariable(name: "stream", arg: 2, scope: !7930, file: !7931, line: 72, type: !436)
!7935 = !DILocation(line: 0, scope: !7930)
!7936 = !DILocation(line: 81, column: 2, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7930, file: !7931, line: 81, column: 2)
!7938 = !{i64 2155500322}
!7939 = !DILocation(line: 82, column: 9, scope: !7930)
!7940 = !DILocation(line: 82, column: 2, scope: !7930)
!7941 = distinct !DISubprogram(name: "fputs", scope: !440, file: !440, line: 46, type: !7942, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7945)
!7942 = !DISubroutineType(types: !7943)
!7943 = !{!103, !7537, !7944}
!7944 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!7945 = !{!7946, !7947, !7948, !7949}
!7946 = !DILocalVariable(name: "s", arg: 1, scope: !7941, file: !440, line: 46, type: !7537)
!7947 = !DILocalVariable(name: "stream", arg: 2, scope: !7941, file: !440, line: 46, type: !7944)
!7948 = !DILocalVariable(name: "len", scope: !7941, file: !440, line: 48, type: !103)
!7949 = !DILocalVariable(name: "ret", scope: !7941, file: !440, line: 49, type: !103)
!7950 = !DILocation(line: 0, scope: !7941)
!7951 = !DILocation(line: 48, column: 12, scope: !7941)
!7952 = !DILocation(line: 51, column: 8, scope: !7941)
!7953 = !DILocation(line: 53, column: 13, scope: !7941)
!7954 = !DILocation(line: 53, column: 9, scope: !7941)
!7955 = !DILocation(line: 53, column: 2, scope: !7941)
!7956 = distinct !DISubprogram(name: "fwrite", scope: !440, file: !440, line: 99, type: !7957, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7959)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{!120, !7838, !120, !120, !7944}
!7959 = !{!7960, !7961, !7962, !7963}
!7960 = !DILocalVariable(name: "ptr", arg: 1, scope: !7956, file: !440, line: 99, type: !7838)
!7961 = !DILocalVariable(name: "size", arg: 2, scope: !7956, file: !440, line: 99, type: !120)
!7962 = !DILocalVariable(name: "nitems", arg: 3, scope: !7956, file: !440, line: 99, type: !120)
!7963 = !DILocalVariable(name: "stream", arg: 4, scope: !7956, file: !440, line: 100, type: !7944)
!7964 = !DILocation(line: 0, scope: !7956)
!7965 = !DILocation(line: 102, column: 9, scope: !7956)
!7966 = !DILocation(line: 102, column: 2, scope: !7956)
!7967 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7931, file: !7931, line: 96, type: !7957, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7968)
!7968 = !{!7969, !7970, !7971, !7972}
!7969 = !DILocalVariable(name: "ptr", arg: 1, scope: !7967, file: !7931, line: 96, type: !7838)
!7970 = !DILocalVariable(name: "size", arg: 2, scope: !7967, file: !7931, line: 96, type: !120)
!7971 = !DILocalVariable(name: "nitems", arg: 3, scope: !7967, file: !7931, line: 96, type: !120)
!7972 = !DILocalVariable(name: "stream", arg: 4, scope: !7967, file: !7931, line: 96, type: !7944)
!7973 = !DILocation(line: 0, scope: !7967)
!7974 = !DILocation(line: 107, column: 2, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7967, file: !7931, line: 107, column: 2)
!7976 = !{i64 2155500426}
!7977 = !DILocation(line: 108, column: 9, scope: !7967)
!7978 = !DILocation(line: 108, column: 2, scope: !7967)
!7979 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !440, file: !440, line: 56, type: !7957, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7980)
!7980 = !{!7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988}
!7981 = !DILocalVariable(name: "ptr", arg: 1, scope: !7979, file: !440, line: 56, type: !7838)
!7982 = !DILocalVariable(name: "size", arg: 2, scope: !7979, file: !440, line: 56, type: !120)
!7983 = !DILocalVariable(name: "nitems", arg: 3, scope: !7979, file: !440, line: 57, type: !120)
!7984 = !DILocalVariable(name: "stream", arg: 4, scope: !7979, file: !440, line: 57, type: !7944)
!7985 = !DILocalVariable(name: "i", scope: !7979, file: !440, line: 59, type: !120)
!7986 = !DILocalVariable(name: "j", scope: !7979, file: !440, line: 60, type: !120)
!7987 = !DILocalVariable(name: "p", scope: !7979, file: !440, line: 61, type: !2730)
!7988 = !DILabel(scope: !7979, name: "done", file: !440, line: 82)
!7989 = !DILocation(line: 0, scope: !7979)
!7990 = !DILocation(line: 63, column: 14, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7979, file: !440, line: 63, column: 6)
!7992 = !DILocation(line: 63, column: 24, scope: !7991)
!7993 = !DILocation(line: 72, column: 3, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7979, file: !440, line: 70, column: 5)
!7995 = !DILocation(line: 0, scope: !7994)
!7996 = !DILocation(line: 73, column: 8, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !440, line: 73, column: 8)
!7998 = distinct !DILexicalBlock(scope: !7994, file: !440, line: 72, column: 6)
!7999 = !DILocation(line: 73, column: 29, scope: !7997)
!8000 = !DILocation(line: 73, column: 27, scope: !7997)
!8001 = !DILocation(line: 73, column: 21, scope: !7997)
!8002 = !DILocation(line: 73, column: 33, scope: !7997)
!8003 = !DILocation(line: 73, column: 8, scope: !7998)
!8004 = !DILocation(line: 76, column: 5, scope: !7998)
!8005 = !DILocation(line: 77, column: 14, scope: !7994)
!8006 = !DILocation(line: 77, column: 3, scope: !7998)
!8007 = distinct !{!8007, !7993, !8008}
!8008 = !DILocation(line: 77, column: 17, scope: !7994)
!8009 = !DILocation(line: 79, column: 4, scope: !7994)
!8010 = !DILocation(line: 80, column: 13, scope: !7979)
!8011 = !DILocation(line: 80, column: 2, scope: !7994)
!8012 = distinct !{!8012, !8013, !8014}
!8013 = !DILocation(line: 70, column: 2, scope: !7979)
!8014 = !DILocation(line: 80, column: 16, scope: !7979)
!8015 = !DILocation(line: 82, column: 1, scope: !7979)
!8016 = !DILocation(line: 83, column: 17, scope: !7979)
!8017 = !DILocation(line: 83, column: 2, scope: !7979)
!8018 = !DILocation(line: 84, column: 1, scope: !7979)
!8019 = distinct !DISubprogram(name: "puts", scope: !440, file: !440, line: 106, type: !8020, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !8022)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!103, !199}
!8022 = !{!8023}
!8023 = !DILocalVariable(name: "s", arg: 1, scope: !8019, file: !440, line: 106, type: !199)
!8024 = !DILocation(line: 0, scope: !8019)
!8025 = !DILocation(line: 108, column: 6, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8019, file: !440, line: 108, column: 6)
!8027 = !DILocation(line: 108, column: 23, scope: !8026)
!8028 = !DILocation(line: 108, column: 6, scope: !8019)
!8029 = !DILocation(line: 112, column: 9, scope: !8019)
!8030 = !DILocation(line: 112, column: 29, scope: !8019)
!8031 = !DILocation(line: 112, column: 2, scope: !8019)
!8032 = !DILocation(line: 113, column: 1, scope: !8019)
!8033 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !583, file: !583, line: 368, type: !636, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8034)
!8034 = !{!8035}
!8035 = !DILocalVariable(name: "dev", arg: 1, scope: !8033, file: !583, line: 368, type: !612)
!8036 = !DILocation(line: 0, scope: !8033)
!8037 = !DILocation(line: 370, column: 2, scope: !8033)
!8038 = !DILocation(line: 371, column: 1, scope: !8033)
!8039 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !583, file: !583, line: 243, type: !8040, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8042)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{null, !103, !103, !612}
!8042 = !{!8043, !8044, !8045, !8046, !8048}
!8043 = !DILocalVariable(name: "min", arg: 1, scope: !8039, file: !583, line: 243, type: !103)
!8044 = !DILocalVariable(name: "max", arg: 2, scope: !8039, file: !583, line: 243, type: !103)
!8045 = !DILocalVariable(name: "dev", arg: 3, scope: !8039, file: !583, line: 243, type: !612)
!8046 = !DILocalVariable(name: "data", scope: !8039, file: !583, line: 245, type: !8047)
!8047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 32)
!8048 = !DILocalVariable(name: "line", scope: !8039, file: !583, line: 246, type: !103)
!8049 = !DILocation(line: 0, scope: !8039)
!8050 = !DILocation(line: 245, column: 38, scope: !8039)
!8051 = !DILocation(line: 249, column: 24, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !583, line: 249, column: 2)
!8053 = distinct !DILexicalBlock(scope: !8039, file: !583, line: 249, column: 2)
!8054 = !DILocation(line: 249, column: 2, scope: !8053)
!8055 = !DILocation(line: 251, column: 7, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !583, line: 251, column: 7)
!8057 = distinct !DILexicalBlock(scope: !8052, file: !583, line: 249, column: 39)
!8058 = !DILocation(line: 251, column: 7, scope: !8057)
!8059 = !DILocation(line: 253, column: 4, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8056, file: !583, line: 251, column: 36)
!8061 = !DILocation(line: 256, column: 24, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8060, file: !583, line: 256, column: 8)
!8063 = !DILocation(line: 256, column: 9, scope: !8062)
!8064 = !DILocation(line: 256, column: 8, scope: !8060)
!8065 = !DILocation(line: 260, column: 43, scope: !8060)
!8066 = !DILocation(line: 260, column: 4, scope: !8060)
!8067 = !DILocation(line: 261, column: 3, scope: !8060)
!8068 = !DILocation(line: 249, column: 35, scope: !8052)
!8069 = distinct !{!8069, !8054, !8070}
!8070 = !DILocation(line: 262, column: 2, scope: !8053)
!8071 = !DILocation(line: 263, column: 1, scope: !8039)
!8072 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !583, file: !583, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8073)
!8073 = !{!8074}
!8074 = !DILocalVariable(name: "line", arg: 1, scope: !8072, file: !583, line: 158, type: !103)
!8075 = !DILocation(line: 0, scope: !8072)
!8076 = !DILocation(line: 170, column: 38, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !583, line: 160, column: 17)
!8078 = distinct !DILexicalBlock(scope: !8072, file: !583, line: 160, column: 6)
!8079 = !DILocation(line: 170, column: 10, scope: !8077)
!8080 = !DILocation(line: 176, column: 1, scope: !8072)
!8081 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !583, file: !583, line: 183, type: !8082, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8084)
!8082 = !DISubroutineType(types: !8083)
!8083 = !{null, !103}
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "line", arg: 1, scope: !8081, file: !583, line: 183, type: !103)
!8086 = !DILocation(line: 0, scope: !8081)
!8087 = !DILocation(line: 195, column: 28, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !583, line: 185, column: 17)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !583, line: 185, column: 6)
!8090 = !DILocation(line: 195, column: 3, scope: !8088)
!8091 = !DILocation(line: 200, column: 1, scope: !8081)
!8092 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8093, file: !8093, line: 910, type: !6529, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8094)
!8093 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8094 = !{!8095}
!8095 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8092, file: !8093, line: 910, type: !137)
!8096 = !DILocation(line: 0, scope: !8092)
!8097 = !DILocation(line: 912, column: 3, scope: !8092)
!8098 = !DILocation(line: 913, column: 1, scope: !8092)
!8099 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8093, file: !8093, line: 834, type: !7445, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8100)
!8100 = !{!8101}
!8101 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8099, file: !8093, line: 834, type: !137)
!8102 = !DILocation(line: 0, scope: !8099)
!8103 = !DILocation(line: 836, column: 11, scope: !8099)
!8104 = !DILocation(line: 836, column: 40, scope: !8099)
!8105 = !DILocation(line: 836, column: 3, scope: !8099)
!8106 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !583, file: !583, line: 304, type: !636, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8107)
!8107 = !{!8108}
!8108 = !DILocalVariable(name: "dev", arg: 1, scope: !8106, file: !583, line: 304, type: !612)
!8109 = !DILocation(line: 0, scope: !8106)
!8110 = !DILocation(line: 306, column: 2, scope: !8106)
!8111 = !DILocation(line: 307, column: 1, scope: !8106)
!8112 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !583, file: !583, line: 299, type: !636, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8113)
!8113 = !{!8114}
!8114 = !DILocalVariable(name: "dev", arg: 1, scope: !8112, file: !583, line: 299, type: !612)
!8115 = !DILocation(line: 0, scope: !8112)
!8116 = !DILocation(line: 301, column: 2, scope: !8112)
!8117 = !DILocation(line: 302, column: 1, scope: !8112)
!8118 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !583, file: !583, line: 294, type: !636, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8119)
!8119 = !{!8120}
!8120 = !DILocalVariable(name: "dev", arg: 1, scope: !8118, file: !583, line: 294, type: !612)
!8121 = !DILocation(line: 0, scope: !8118)
!8122 = !DILocation(line: 296, column: 2, scope: !8118)
!8123 = !DILocation(line: 297, column: 1, scope: !8118)
!8124 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !583, file: !583, line: 397, type: !636, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8125)
!8125 = !{!8126}
!8126 = !DILocalVariable(name: "dev", arg: 1, scope: !8124, file: !583, line: 397, type: !612)
!8127 = !DILocation(line: 0, scope: !8124)
!8128 = !DILocation(line: 399, column: 2, scope: !8124)
!8129 = !DILocation(line: 400, column: 1, scope: !8124)
!8130 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !583, file: !583, line: 392, type: !636, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8131)
!8131 = !{!8132}
!8132 = !DILocalVariable(name: "dev", arg: 1, scope: !8130, file: !583, line: 392, type: !612)
!8133 = !DILocation(line: 0, scope: !8130)
!8134 = !DILocation(line: 394, column: 2, scope: !8130)
!8135 = !DILocation(line: 395, column: 1, scope: !8130)
!8136 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !583, file: !583, line: 289, type: !636, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8137)
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "dev", arg: 1, scope: !8136, file: !583, line: 289, type: !612)
!8139 = !DILocation(line: 0, scope: !8136)
!8140 = !DILocation(line: 291, column: 2, scope: !8136)
!8141 = !DILocation(line: 292, column: 1, scope: !8136)
!8142 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !583, file: !583, line: 387, type: !636, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8143)
!8143 = !{!8144}
!8144 = !DILocalVariable(name: "dev", arg: 1, scope: !8142, file: !583, line: 387, type: !612)
!8145 = !DILocation(line: 0, scope: !8142)
!8146 = !DILocation(line: 389, column: 2, scope: !8142)
!8147 = !DILocation(line: 390, column: 1, scope: !8142)
!8148 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !583, file: !583, line: 382, type: !636, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8149)
!8149 = !{!8150}
!8150 = !DILocalVariable(name: "dev", arg: 1, scope: !8148, file: !583, line: 382, type: !612)
!8151 = !DILocation(line: 0, scope: !8148)
!8152 = !DILocation(line: 384, column: 2, scope: !8148)
!8153 = !DILocation(line: 385, column: 1, scope: !8148)
!8154 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !583, file: !583, line: 373, type: !636, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8155)
!8155 = !{!8156}
!8156 = !DILocalVariable(name: "dev", arg: 1, scope: !8154, file: !583, line: 373, type: !612)
!8157 = !DILocation(line: 0, scope: !8154)
!8158 = !DILocation(line: 375, column: 2, scope: !8154)
!8159 = !DILocation(line: 376, column: 1, scope: !8154)
!8160 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !583, file: !583, line: 284, type: !636, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8161)
!8161 = !{!8162}
!8162 = !DILocalVariable(name: "dev", arg: 1, scope: !8160, file: !583, line: 284, type: !612)
!8163 = !DILocation(line: 0, scope: !8160)
!8164 = !DILocation(line: 286, column: 2, scope: !8160)
!8165 = !DILocation(line: 287, column: 1, scope: !8160)
!8166 = distinct !DISubprogram(name: "stm32_exti_init", scope: !583, file: !583, line: 416, type: !610, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8167)
!8167 = !{!8168}
!8168 = !DILocalVariable(name: "dev", arg: 1, scope: !8166, file: !583, line: 416, type: !612)
!8169 = !DILocation(line: 0, scope: !8166)
!8170 = !DILocation(line: 418, column: 2, scope: !8166)
!8171 = !DILocation(line: 420, column: 2, scope: !8166)
!8172 = !DILocation(line: 0, scope: !635)
!8173 = !DILocation(line: 493, column: 2, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !635, file: !583, line: 493, column: 2)
!8175 = !DILocation(line: 497, column: 2, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !635, file: !583, line: 497, column: 2)
!8177 = !DILocation(line: 507, column: 2, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !635, file: !583, line: 507, column: 2)
!8179 = !DILocation(line: 512, column: 2, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !635, file: !583, line: 512, column: 2)
!8181 = !DILocation(line: 516, column: 2, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !635, file: !583, line: 516, column: 2)
!8183 = !DILocation(line: 523, column: 2, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !635, file: !583, line: 523, column: 2)
!8185 = !DILocation(line: 527, column: 2, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !635, file: !583, line: 527, column: 2)
!8187 = !DILocation(line: 581, column: 2, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !635, file: !583, line: 581, column: 2)
!8189 = !DILocation(line: 586, column: 2, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !635, file: !583, line: 586, column: 2)
!8191 = !DILocation(line: 591, column: 2, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !635, file: !583, line: 591, column: 2)
!8193 = !DILocation(line: 595, column: 2, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !635, file: !583, line: 595, column: 2)
!8195 = !DILocation(line: 607, column: 1, scope: !635)
!8196 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !583, file: !583, line: 112, type: !8082, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8197)
!8197 = !{!8198, !8199}
!8198 = !DILocalVariable(name: "line", arg: 1, scope: !8196, file: !583, line: 112, type: !103)
!8199 = !DILocalVariable(name: "irqnum", scope: !8196, file: !583, line: 114, type: !103)
!8200 = !DILocation(line: 0, scope: !8196)
!8201 = !DILocation(line: 121, column: 11, scope: !8196)
!8202 = !DILocation(line: 130, column: 26, scope: !8196)
!8203 = !DILocation(line: 130, column: 2, scope: !8196)
!8204 = !DILocation(line: 134, column: 2, scope: !8196)
!8205 = !DILocation(line: 135, column: 1, scope: !8196)
!8206 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8093, file: !8093, line: 268, type: !6529, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8207)
!8207 = !{!8208}
!8208 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8206, file: !8093, line: 268, type: !137)
!8209 = !DILocation(line: 0, scope: !8206)
!8210 = !DILocation(line: 270, column: 3, scope: !8206)
!8211 = !DILocation(line: 271, column: 1, scope: !8206)
!8212 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !583, file: !583, line: 137, type: !8082, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8213)
!8213 = !{!8214}
!8214 = !DILocalVariable(name: "line", arg: 1, scope: !8212, file: !583, line: 137, type: !103)
!8215 = !DILocation(line: 0, scope: !8212)
!8216 = !DILocation(line: 141, column: 11, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8212, file: !583, line: 141, column: 6)
!8218 = !DILocation(line: 141, column: 6, scope: !8212)
!8219 = !DILocation(line: 145, column: 28, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8217, file: !583, line: 141, column: 17)
!8221 = !DILocation(line: 145, column: 3, scope: !8220)
!8222 = !DILocation(line: 147, column: 2, scope: !8220)
!8223 = !DILocation(line: 151, column: 1, scope: !8212)
!8224 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8093, file: !8093, line: 309, type: !6529, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8225)
!8225 = !{!8226}
!8226 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8224, file: !8093, line: 309, type: !137)
!8227 = !DILocation(line: 0, scope: !8224)
!8228 = !DILocation(line: 311, column: 3, scope: !8224)
!8229 = !DILocation(line: 312, column: 1, scope: !8224)
!8230 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !583, file: !583, line: 202, type: !8231, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8233)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{null, !103, !103}
!8233 = !{!8234, !8235}
!8234 = !DILocalVariable(name: "line", arg: 1, scope: !8230, file: !583, line: 202, type: !103)
!8235 = !DILocalVariable(name: "trigger", arg: 2, scope: !8230, file: !583, line: 202, type: !103)
!8236 = !DILocation(line: 0, scope: !8230)
!8237 = !DILocation(line: 211, column: 2, scope: !8230)
!8238 = !DILocation(line: 213, column: 36, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8230, file: !583, line: 211, column: 19)
!8240 = !DILocation(line: 213, column: 3, scope: !8239)
!8241 = !DILocation(line: 214, column: 3, scope: !8239)
!8242 = !DILocation(line: 215, column: 3, scope: !8239)
!8243 = !DILocation(line: 217, column: 35, scope: !8239)
!8244 = !DILocation(line: 217, column: 3, scope: !8239)
!8245 = !DILocation(line: 218, column: 3, scope: !8239)
!8246 = !DILocation(line: 219, column: 3, scope: !8239)
!8247 = !DILocation(line: 221, column: 36, scope: !8239)
!8248 = !DILocation(line: 221, column: 3, scope: !8239)
!8249 = !DILocation(line: 222, column: 3, scope: !8239)
!8250 = !DILocation(line: 223, column: 3, scope: !8239)
!8251 = !DILocation(line: 225, column: 35, scope: !8239)
!8252 = !DILocation(line: 225, column: 3, scope: !8239)
!8253 = !DILocation(line: 226, column: 3, scope: !8239)
!8254 = !DILocation(line: 227, column: 3, scope: !8239)
!8255 = !DILocation(line: 232, column: 1, scope: !8230)
!8256 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8093, file: !8093, line: 573, type: !6529, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8257)
!8257 = !{!8258}
!8258 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8256, file: !8093, line: 573, type: !137)
!8259 = !DILocation(line: 0, scope: !8256)
!8260 = !DILocation(line: 575, column: 3, scope: !8256)
!8261 = !DILocation(line: 577, column: 1, scope: !8256)
!8262 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8093, file: !8093, line: 703, type: !6529, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8263)
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8262, file: !8093, line: 703, type: !137)
!8265 = !DILocation(line: 0, scope: !8262)
!8266 = !DILocation(line: 705, column: 3, scope: !8262)
!8267 = !DILocation(line: 706, column: 1, scope: !8262)
!8268 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8093, file: !8093, line: 529, type: !6529, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8269)
!8269 = !{!8270}
!8270 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8268, file: !8093, line: 529, type: !137)
!8271 = !DILocation(line: 0, scope: !8268)
!8272 = !DILocation(line: 531, column: 3, scope: !8268)
!8273 = !DILocation(line: 533, column: 1, scope: !8268)
!8274 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8093, file: !8093, line: 661, type: !6529, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8275)
!8275 = !{!8276}
!8276 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8274, file: !8093, line: 661, type: !137)
!8277 = !DILocation(line: 0, scope: !8274)
!8278 = !DILocation(line: 663, column: 3, scope: !8274)
!8279 = !DILocation(line: 664, column: 1, scope: !8274)
!8280 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !583, file: !583, line: 433, type: !8281, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8283)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!103, !103, !623, !102}
!8283 = !{!8284, !8285, !8286, !8287, !8289}
!8284 = !DILocalVariable(name: "line", arg: 1, scope: !8280, file: !583, line: 433, type: !103)
!8285 = !DILocalVariable(name: "cb", arg: 2, scope: !8280, file: !583, line: 433, type: !623)
!8286 = !DILocalVariable(name: "arg", arg: 3, scope: !8280, file: !583, line: 433, type: !102)
!8287 = !DILocalVariable(name: "dev", scope: !8280, file: !583, line: 435, type: !8288)
!8288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !612)
!8289 = !DILocalVariable(name: "data", scope: !8280, file: !583, line: 436, type: !8047)
!8290 = !DILocation(line: 0, scope: !8280)
!8291 = !DILocation(line: 438, column: 21, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8280, file: !583, line: 438, column: 6)
!8293 = !DILocation(line: 438, column: 6, scope: !8292)
!8294 = !DILocation(line: 438, column: 6, scope: !8280)
!8295 = !DILocation(line: 442, column: 20, scope: !8280)
!8296 = !DILocation(line: 443, column: 17, scope: !8280)
!8297 = !DILocation(line: 443, column: 22, scope: !8280)
!8298 = !DILocation(line: 445, column: 2, scope: !8280)
!8299 = !DILocation(line: 446, column: 1, scope: !8280)
!8300 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !583, file: !583, line: 448, type: !8082, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8301)
!8301 = !{!8302, !8303, !8304}
!8302 = !DILocalVariable(name: "line", arg: 1, scope: !8300, file: !583, line: 448, type: !103)
!8303 = !DILocalVariable(name: "dev", scope: !8300, file: !583, line: 450, type: !8288)
!8304 = !DILocalVariable(name: "data", scope: !8300, file: !583, line: 451, type: !8047)
!8305 = !DILocation(line: 0, scope: !8300)
!8306 = !DILocation(line: 453, column: 17, scope: !8300)
!8307 = !DILocation(line: 453, column: 20, scope: !8300)
!8308 = !DILocation(line: 454, column: 17, scope: !8300)
!8309 = !DILocation(line: 454, column: 22, scope: !8300)
!8310 = !DILocation(line: 455, column: 1, scope: !8300)
!8311 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !780, file: !780, line: 183, type: !818, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8312)
!8312 = !{!8313, !8314, !8315, !8316, !8317}
!8313 = !DILocalVariable(name: "dev", arg: 1, scope: !8311, file: !780, line: 183, type: !809)
!8314 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8311, file: !780, line: 184, type: !820)
!8315 = !DILocalVariable(name: "pclken", scope: !8311, file: !780, line: 186, type: !771)
!8316 = !DILocalVariable(name: "reg", scope: !8311, file: !780, line: 187, type: !1395)
!8317 = !DILocalVariable(name: "reg_val", scope: !8311, file: !780, line: 188, type: !137)
!8318 = !DILocation(line: 0, scope: !8311)
!8319 = !DILocation(line: 192, column: 6, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8311, file: !780, line: 192, column: 6)
!8321 = !DILocation(line: 192, column: 6, scope: !8311)
!8322 = !DILocation(line: 197, column: 52, scope: !8311)
!8323 = !DILocation(line: 197, column: 8, scope: !8311)
!8324 = !DILocation(line: 198, column: 12, scope: !8311)
!8325 = !DILocation(line: 199, column: 21, scope: !8311)
!8326 = !DILocation(line: 199, column: 10, scope: !8311)
!8327 = !DILocation(line: 200, column: 7, scope: !8311)
!8328 = !DILocation(line: 202, column: 2, scope: !8311)
!8329 = !DILocation(line: 203, column: 1, scope: !8311)
!8330 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !780, file: !780, line: 205, type: !818, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8331)
!8331 = !{!8332, !8333, !8334, !8335, !8336}
!8332 = !DILocalVariable(name: "dev", arg: 1, scope: !8330, file: !780, line: 205, type: !809)
!8333 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8330, file: !780, line: 206, type: !820)
!8334 = !DILocalVariable(name: "pclken", scope: !8330, file: !780, line: 208, type: !771)
!8335 = !DILocalVariable(name: "reg", scope: !8330, file: !780, line: 209, type: !1395)
!8336 = !DILocalVariable(name: "reg_val", scope: !8330, file: !780, line: 210, type: !137)
!8337 = !DILocation(line: 0, scope: !8330)
!8338 = !DILocation(line: 214, column: 6, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8330, file: !780, line: 214, column: 6)
!8340 = !DILocation(line: 214, column: 6, scope: !8330)
!8341 = !DILocation(line: 219, column: 52, scope: !8330)
!8342 = !DILocation(line: 219, column: 8, scope: !8330)
!8343 = !DILocation(line: 220, column: 12, scope: !8330)
!8344 = !DILocation(line: 221, column: 22, scope: !8330)
!8345 = !DILocation(line: 221, column: 13, scope: !8330)
!8346 = !DILocation(line: 221, column: 10, scope: !8330)
!8347 = !DILocation(line: 222, column: 7, scope: !8330)
!8348 = !DILocation(line: 224, column: 2, scope: !8330)
!8349 = !DILocation(line: 225, column: 1, scope: !8330)
!8350 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !780, file: !780, line: 262, type: !834, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8351)
!8351 = !{!8352, !8353, !8354, !8355, !8356, !8357, !8358, !8359}
!8352 = !DILocalVariable(name: "clock", arg: 1, scope: !8350, file: !780, line: 262, type: !809)
!8353 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8350, file: !780, line: 263, type: !820)
!8354 = !DILocalVariable(name: "rate", arg: 3, scope: !8350, file: !780, line: 264, type: !149)
!8355 = !DILocalVariable(name: "pclken", scope: !8350, file: !780, line: 266, type: !771)
!8356 = !DILocalVariable(name: "ahb_clock", scope: !8350, file: !780, line: 273, type: !137)
!8357 = !DILocalVariable(name: "apb1_clock", scope: !8350, file: !780, line: 274, type: !137)
!8358 = !DILocalVariable(name: "apb2_clock", scope: !8350, file: !780, line: 276, type: !137)
!8359 = !DILocalVariable(name: "ahb3_clock", scope: !8350, file: !780, line: 286, type: !137)
!8360 = !DILocation(line: 0, scope: !8350)
!8361 = !DILocation(line: 273, column: 23, scope: !8350)
!8362 = !DILocation(line: 299, column: 18, scope: !8350)
!8363 = !DILocation(line: 299, column: 2, scope: !8350)
!8364 = !DILocation(line: 274, column: 24, scope: !8350)
!8365 = !DILocation(line: 319, column: 3, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8350, file: !780, line: 299, column: 23)
!8367 = !DILocation(line: 276, column: 24, scope: !8350)
!8368 = !DILocation(line: 323, column: 3, scope: !8366)
!8369 = !DILocation(line: 346, column: 33, scope: !8366)
!8370 = !DILocation(line: 346, column: 11, scope: !8366)
!8371 = !DILocation(line: 350, column: 3, scope: !8366)
!8372 = !DILocation(line: 354, column: 33, scope: !8366)
!8373 = !DILocation(line: 354, column: 11, scope: !8366)
!8374 = !DILocation(line: 358, column: 3, scope: !8366)
!8375 = !DILocation(line: 374, column: 3, scope: !8366)
!8376 = !DILocation(line: 379, column: 3, scope: !8366)
!8377 = !DILocation(line: 0, scope: !8366)
!8378 = !DILocation(line: 396, column: 1, scope: !8350)
!8379 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !780, file: !780, line: 227, type: !850, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8380)
!8380 = !{!8381, !8382, !8383, !8384, !8385, !8386, !8387, !8388}
!8381 = !DILocalVariable(name: "dev", arg: 1, scope: !8379, file: !780, line: 227, type: !809)
!8382 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8379, file: !780, line: 228, type: !820)
!8383 = !DILocalVariable(name: "data", arg: 3, scope: !8379, file: !780, line: 229, type: !102)
!8384 = !DILocalVariable(name: "pclken", scope: !8379, file: !780, line: 233, type: !771)
!8385 = !DILocalVariable(name: "reg", scope: !8379, file: !780, line: 234, type: !1395)
!8386 = !DILocalVariable(name: "reg_val", scope: !8379, file: !780, line: 235, type: !137)
!8387 = !DILocalVariable(name: "dt_val", scope: !8379, file: !780, line: 235, type: !137)
!8388 = !DILocalVariable(name: "err", scope: !8379, file: !780, line: 236, type: !103)
!8389 = !DILocation(line: 0, scope: !8379)
!8390 = !DILocation(line: 241, column: 30, scope: !8379)
!8391 = !DILocation(line: 241, column: 8, scope: !8379)
!8392 = !DILocation(line: 242, column: 10, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8379, file: !780, line: 242, column: 6)
!8394 = !DILocation(line: 242, column: 6, scope: !8379)
!8395 = !DILocation(line: 247, column: 11, scope: !8379)
!8396 = !DILocation(line: 248, column: 6, scope: !8379)
!8397 = !DILocation(line: 247, column: 44, scope: !8379)
!8398 = !DILocation(line: 250, column: 6, scope: !8379)
!8399 = !DILocation(line: 249, column: 52, scope: !8379)
!8400 = !DILocation(line: 249, column: 8, scope: !8379)
!8401 = !DILocation(line: 251, column: 12, scope: !8379)
!8402 = !DILocation(line: 252, column: 10, scope: !8379)
!8403 = !DILocation(line: 253, column: 7, scope: !8379)
!8404 = !DILocation(line: 255, column: 2, scope: !8379)
!8405 = !DILocation(line: 260, column: 1, scope: !8379)
!8406 = distinct !DISubprogram(name: "enabled_clock", scope: !780, file: !780, line: 100, type: !8407, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8409)
!8407 = !DISubroutineType(types: !8408)
!8408 = !{!103, !137}
!8409 = !{!8410, !8411}
!8410 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8406, file: !780, line: 100, type: !137)
!8411 = !DILocalVariable(name: "r", scope: !8406, file: !780, line: 102, type: !103)
!8412 = !DILocation(line: 0, scope: !8406)
!8413 = !DILocation(line: 104, column: 2, scope: !8406)
!8414 = !DILocation(line: 180, column: 2, scope: !8406)
!8415 = !DILocation(line: 181, column: 1, scope: !8406)
!8416 = distinct !DISubprogram(name: "get_bus_clock", scope: !780, file: !780, line: 79, type: !8417, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8419)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{!137, !137, !137}
!8419 = !{!8420, !8421}
!8420 = !DILocalVariable(name: "clock", arg: 1, scope: !8416, file: !780, line: 79, type: !137)
!8421 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8416, file: !780, line: 79, type: !137)
!8422 = !DILocation(line: 0, scope: !8416)
!8423 = !DILocation(line: 81, column: 15, scope: !8416)
!8424 = !DILocation(line: 81, column: 2, scope: !8416)
!8425 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !780, file: !780, line: 68, type: !8426, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8428)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!137, !137, !103, !103, !103}
!8428 = !{!8429, !8430, !8431, !8432}
!8429 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8425, file: !780, line: 68, type: !137)
!8430 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8425, file: !780, line: 69, type: !103)
!8431 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8425, file: !780, line: 70, type: !103)
!8432 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8425, file: !780, line: 71, type: !103)
!8433 = !DILocation(line: 0, scope: !8425)
!8434 = !DILocation(line: 75, column: 22, scope: !8425)
!8435 = !DILocation(line: 76, column: 13, scope: !8425)
!8436 = !DILocation(line: 75, column: 34, scope: !8425)
!8437 = !DILocation(line: 75, column: 2, scope: !8425)
!8438 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !780, file: !780, line: 641, type: !807, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8439)
!8439 = !{!8440, !8441, !8442}
!8440 = !DILocalVariable(name: "dev", arg: 1, scope: !8438, file: !780, line: 641, type: !809)
!8441 = !DILocalVariable(name: "old_flash_freq", scope: !8438, file: !780, line: 664, type: !137)
!8442 = !DILocalVariable(name: "new_flash_freq", scope: !8438, file: !780, line: 665, type: !137)
!8443 = !DILocation(line: 0, scope: !8438)
!8444 = !DILocation(line: 646, column: 2, scope: !8438)
!8445 = !DILocation(line: 667, column: 19, scope: !8438)
!8446 = !DILocation(line: 674, column: 21, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8438, file: !780, line: 674, column: 6)
!8448 = !DILocation(line: 674, column: 6, scope: !8438)
!8449 = !DILocation(line: 675, column: 3, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8447, file: !780, line: 674, column: 59)
!8451 = !DILocation(line: 676, column: 2, scope: !8450)
!8452 = !DILocation(line: 680, column: 2, scope: !8438)
!8453 = !DILocation(line: 683, column: 2, scope: !8438)
!8454 = !DILocation(line: 690, column: 3, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !780, line: 689, column: 9)
!8456 = distinct !DILexicalBlock(scope: !8438, file: !780, line: 685, column: 6)
!8457 = !DILocation(line: 695, column: 2, scope: !8438)
!8458 = !DILocation(line: 696, column: 2, scope: !8438)
!8459 = !DILocation(line: 696, column: 9, scope: !8438)
!8460 = !DILocation(line: 696, column: 34, scope: !8438)
!8461 = distinct !{!8461, !8458, !8462}
!8462 = !DILocation(line: 697, column: 2, scope: !8438)
!8463 = !DILocation(line: 720, column: 21, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8438, file: !780, line: 720, column: 6)
!8465 = !DILocation(line: 720, column: 6, scope: !8438)
!8466 = !DILocation(line: 721, column: 3, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8464, file: !780, line: 720, column: 60)
!8468 = !DILocation(line: 722, column: 2, scope: !8467)
!8469 = !DILocation(line: 725, column: 18, scope: !8438)
!8470 = !DILocation(line: 728, column: 2, scope: !8438)
!8471 = !DILocation(line: 730, column: 2, scope: !8438)
!8472 = !DILocation(line: 745, column: 2, scope: !8438)
!8473 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8474, file: !8474, line: 3275, type: !135, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8474 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8475 = !DILocation(line: 3277, column: 21, scope: !8473)
!8476 = !DILocation(line: 3277, column: 3, scope: !8473)
!8477 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !780, file: !780, line: 507, type: !2964, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8478 = !DILocation(line: 516, column: 4, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !780, line: 515, column: 10)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !780, line: 513, column: 7)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !780, line: 510, column: 37)
!8482 = distinct !DILexicalBlock(scope: !8477, file: !780, line: 510, column: 6)
!8483 = !DILocation(line: 526, column: 3, scope: !8481)
!8484 = !DILocation(line: 527, column: 3, scope: !8481)
!8485 = !DILocation(line: 527, column: 10, scope: !8481)
!8486 = !DILocation(line: 527, column: 31, scope: !8481)
!8487 = distinct !{!8487, !8484, !8488}
!8488 = !DILocation(line: 529, column: 3, scope: !8481)
!8489 = !DILocation(line: 627, column: 1, scope: !8477)
!8490 = distinct !DISubprogram(name: "set_up_plls", scope: !780, file: !780, line: 448, type: !2964, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8491 = !DILocation(line: 460, column: 6, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8490, file: !780, line: 460, column: 6)
!8493 = !DILocation(line: 460, column: 31, scope: !8492)
!8494 = !DILocation(line: 460, column: 6, scope: !8490)
!8495 = !DILocation(line: 461, column: 3, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8492, file: !780, line: 460, column: 67)
!8497 = !DILocation(line: 462, column: 3, scope: !8496)
!8498 = !DILocation(line: 463, column: 2, scope: !8496)
!8499 = !DILocation(line: 464, column: 2, scope: !8490)
!8500 = !DILocation(line: 488, column: 2, scope: !8490)
!8501 = !DILocation(line: 492, column: 2, scope: !8490)
!8502 = !DILocation(line: 496, column: 2, scope: !8490)
!8503 = !DILocation(line: 499, column: 2, scope: !8490)
!8504 = !DILocation(line: 500, column: 2, scope: !8490)
!8505 = !DILocation(line: 500, column: 9, scope: !8490)
!8506 = !DILocation(line: 500, column: 30, scope: !8490)
!8507 = distinct !{!8507, !8504, !8508}
!8508 = !DILocation(line: 502, column: 2, scope: !8490)
!8509 = !DILocation(line: 505, column: 1, scope: !8490)
!8510 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8474, file: !8474, line: 3224, type: !6529, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8511)
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8510, file: !8474, line: 3224, type: !137)
!8513 = !DILocation(line: 0, scope: !8510)
!8514 = !DILocation(line: 3226, column: 3, scope: !8510)
!8515 = !DILocation(line: 3227, column: 1, scope: !8510)
!8516 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8474, file: !8474, line: 3188, type: !6529, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8517)
!8517 = !{!8518}
!8518 = !DILocalVariable(name: "Source", arg: 1, scope: !8516, file: !8474, line: 3188, type: !137)
!8519 = !DILocation(line: 0, scope: !8516)
!8520 = !DILocation(line: 3190, column: 3, scope: !8516)
!8521 = !DILocation(line: 3191, column: 1, scope: !8516)
!8522 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8474, file: !8474, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8523 = !DILocation(line: 3206, column: 21, scope: !8522)
!8524 = !DILocation(line: 3206, column: 3, scope: !8522)
!8525 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8474, file: !8474, line: 3240, type: !6529, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8526)
!8526 = !{!8527}
!8527 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8525, file: !8474, line: 3240, type: !137)
!8528 = !DILocation(line: 0, scope: !8525)
!8529 = !DILocation(line: 3242, column: 3, scope: !8525)
!8530 = !DILocation(line: 3243, column: 1, scope: !8525)
!8531 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8474, file: !8474, line: 3256, type: !6529, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !8532)
!8532 = !{!8533}
!8533 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8531, file: !8474, line: 3256, type: !137)
!8534 = !DILocation(line: 0, scope: !8531)
!8535 = !DILocation(line: 3258, column: 3, scope: !8531)
!8536 = !DILocation(line: 3259, column: 1, scope: !8531)
!8537 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !780, file: !780, line: 409, type: !2964, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8538 = !DILocation(line: 412, column: 6, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8537, file: !780, line: 412, column: 6)
!8540 = !DILocation(line: 412, column: 27, scope: !8539)
!8541 = !DILocation(line: 412, column: 6, scope: !8537)
!8542 = !DILocation(line: 414, column: 3, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8539, file: !780, line: 412, column: 33)
!8544 = !DILocation(line: 415, column: 3, scope: !8543)
!8545 = !DILocation(line: 415, column: 10, scope: !8543)
!8546 = !DILocation(line: 415, column: 31, scope: !8543)
!8547 = distinct !{!8547, !8544, !8548}
!8548 = !DILocation(line: 417, column: 3, scope: !8543)
!8549 = !DILocation(line: 421, column: 2, scope: !8537)
!8550 = !DILocation(line: 422, column: 2, scope: !8537)
!8551 = !DILocation(line: 422, column: 9, scope: !8537)
!8552 = !DILocation(line: 422, column: 34, scope: !8537)
!8553 = distinct !{!8553, !8550, !8554}
!8554 = !DILocation(line: 423, column: 2, scope: !8537)
!8555 = !DILocation(line: 424, column: 1, scope: !8537)
!8556 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8474, file: !8474, line: 4195, type: !2964, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8557 = !DILocation(line: 4197, column: 3, scope: !8556)
!8558 = !DILocation(line: 4198, column: 1, scope: !8556)
!8559 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8474, file: !8474, line: 4184, type: !2964, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8560 = !DILocation(line: 4186, column: 3, scope: !8559)
!8561 = !DILocation(line: 4187, column: 1, scope: !8559)
!8562 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8474, file: !8474, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8563 = !DILocation(line: 4207, column: 11, scope: !8562)
!8564 = !DILocation(line: 4207, column: 44, scope: !8562)
!8565 = !DILocation(line: 4207, column: 3, scope: !8562)
!8566 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8474, file: !8474, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8567 = !DILocation(line: 3009, column: 11, scope: !8566)
!8568 = !DILocation(line: 3009, column: 44, scope: !8566)
!8569 = !DILocation(line: 3009, column: 3, scope: !8566)
!8570 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8474, file: !8474, line: 2987, type: !2964, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8571 = !DILocation(line: 2989, column: 3, scope: !8570)
!8572 = !DILocation(line: 2990, column: 1, scope: !8570)
!8573 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8474, file: !8474, line: 2939, type: !2964, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8574 = !DILocation(line: 2941, column: 3, scope: !8573)
!8575 = !DILocation(line: 2942, column: 1, scope: !8573)
!8576 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8474, file: !8474, line: 2949, type: !2964, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8577 = !DILocation(line: 2951, column: 3, scope: !8576)
!8578 = !DILocation(line: 2952, column: 1, scope: !8576)
!8579 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8474, file: !8474, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !162)
!8580 = !DILocation(line: 2971, column: 11, scope: !8579)
!8581 = !DILocation(line: 2971, column: 44, scope: !8579)
!8582 = !DILocation(line: 2971, column: 3, scope: !8579)
!8583 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8584, file: !8584, line: 40, type: !135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !162)
!8584 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8585 = !DILocation(line: 45, column: 3, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !8584, line: 44, column: 44)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !8584, line: 44, column: 13)
!8588 = distinct !DILexicalBlock(scope: !8583, file: !8584, line: 42, column: 6)
!8589 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8584, file: !8584, line: 56, type: !2964, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !162)
!8590 = !DILocation(line: 58, column: 2, scope: !8589)
!8591 = !DILocation(line: 62, column: 1, scope: !8589)
!8592 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8474, file: !8474, line: 4304, type: !8593, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{null, !137, !137, !137, !137}
!8595 = !{!8596, !8597, !8598, !8599}
!8596 = !DILocalVariable(name: "Source", arg: 1, scope: !8592, file: !8474, line: 4304, type: !137)
!8597 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8592, file: !8474, line: 4304, type: !137)
!8598 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8592, file: !8474, line: 4304, type: !137)
!8599 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8592, file: !8474, line: 4304, type: !137)
!8600 = !DILocation(line: 0, scope: !8592)
!8601 = !DILocation(line: 4306, column: 3, scope: !8592)
!8602 = !DILocation(line: 4308, column: 3, scope: !8592)
!8603 = !DILocation(line: 4312, column: 1, scope: !8592)
!8604 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8584, file: !8584, line: 69, type: !2964, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !162)
!8605 = !DILocation(line: 72, column: 2, scope: !8604)
!8606 = !DILocation(line: 73, column: 1, scope: !8604)
!8607 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8608, file: !8608, line: 1185, type: !6529, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !8609)
!8608 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8609 = !{!8610, !8611}
!8610 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8607, file: !8608, line: 1185, type: !137)
!8611 = !DILocalVariable(name: "tmpreg", scope: !8607, file: !8608, line: 1187, type: !176)
!8612 = !DILocation(line: 0, scope: !8607)
!8613 = !DILocation(line: 1187, column: 3, scope: !8607)
!8614 = !DILocation(line: 1187, column: 17, scope: !8607)
!8615 = !DILocation(line: 1188, column: 3, scope: !8607)
!8616 = !DILocation(line: 1190, column: 12, scope: !8607)
!8617 = !DILocation(line: 1190, column: 10, scope: !8607)
!8618 = !DILocation(line: 1191, column: 9, scope: !8607)
!8619 = !DILocation(line: 1192, column: 1, scope: !8607)
!8620 = distinct !DISubprogram(name: "uart_console_init", scope: !911, file: !911, line: 588, type: !888, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8621)
!8621 = !{!8622}
!8622 = !DILocalVariable(name: "arg", arg: 1, scope: !8620, file: !911, line: 588, type: !866)
!8623 = !DILocation(line: 0, scope: !8620)
!8624 = !DILocation(line: 593, column: 7, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8620, file: !911, line: 593, column: 6)
!8626 = !DILocation(line: 593, column: 6, scope: !8620)
!8627 = !DILocation(line: 597, column: 2, scope: !8620)
!8628 = !DILocation(line: 599, column: 2, scope: !8620)
!8629 = !DILocation(line: 600, column: 1, scope: !8620)
!8630 = distinct !DISubprogram(name: "device_is_ready", scope: !8631, file: !8631, line: 47, type: !8632, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8634)
!8631 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!211, !866}
!8634 = !{!8635}
!8635 = !DILocalVariable(name: "dev", arg: 1, scope: !8630, file: !8631, line: 47, type: !866)
!8636 = !DILocation(line: 0, scope: !8630)
!8637 = !DILocation(line: 55, column: 2, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8630, file: !8631, line: 55, column: 2)
!8639 = !{i64 2155669109}
!8640 = !DILocation(line: 56, column: 9, scope: !8630)
!8641 = !DILocation(line: 56, column: 2, scope: !8630)
!8642 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !911, file: !911, line: 573, type: !2964, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !162)
!8643 = !DILocation(line: 576, column: 2, scope: !8642)
!8644 = !DILocation(line: 579, column: 2, scope: !8642)
!8645 = !DILocation(line: 581, column: 1, scope: !8642)
!8646 = distinct !DISubprogram(name: "console_out", scope: !911, file: !911, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8647)
!8647 = !{!8648}
!8648 = !DILocalVariable(name: "c", arg: 1, scope: !8646, file: !911, line: 77, type: !103)
!8649 = !DILocation(line: 0, scope: !8646)
!8650 = !DILocation(line: 89, column: 11, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8646, file: !911, line: 89, column: 6)
!8652 = !DILocation(line: 89, column: 6, scope: !8646)
!8653 = !DILocation(line: 90, column: 3, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8651, file: !911, line: 89, column: 17)
!8655 = !DILocation(line: 91, column: 2, scope: !8654)
!8656 = !DILocation(line: 92, column: 34, scope: !8646)
!8657 = !DILocation(line: 92, column: 2, scope: !8646)
!8658 = !DILocation(line: 94, column: 2, scope: !8646)
!8659 = distinct !DISubprogram(name: "uart_poll_out", scope: !8660, file: !8660, line: 95, type: !884, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8661)
!8660 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sys_heap")
!8661 = !{!8662, !8663}
!8662 = !DILocalVariable(name: "dev", arg: 1, scope: !8659, file: !8660, line: 95, type: !866)
!8663 = !DILocalVariable(name: "out_char", arg: 2, scope: !8659, file: !8660, line: 95, type: !209)
!8664 = !DILocation(line: 0, scope: !8659)
!8665 = !DILocation(line: 105, column: 2, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8659, file: !8660, line: 105, column: 2)
!8667 = !{i64 2155752500}
!8668 = !DILocation(line: 106, column: 2, scope: !8659)
!8669 = !DILocation(line: 107, column: 1, scope: !8659)
!8670 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !860, file: !860, line: 574, type: !884, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8671)
!8671 = !{!8672, !8673, !8674}
!8672 = !DILocalVariable(name: "dev", arg: 1, scope: !8670, file: !860, line: 574, type: !866)
!8673 = !DILocalVariable(name: "out_char", arg: 2, scope: !8670, file: !860, line: 575, type: !209)
!8674 = !DILocalVariable(name: "api", scope: !8670, file: !860, line: 577, type: !857)
!8675 = !DILocation(line: 0, scope: !8670)
!8676 = !DILocation(line: 578, column: 40, scope: !8670)
!8677 = !DILocation(line: 580, column: 7, scope: !8670)
!8678 = !DILocation(line: 580, column: 2, scope: !8670)
!8679 = !DILocation(line: 581, column: 1, scope: !8670)
!8680 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !8632, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8681)
!8681 = !{!8682}
!8682 = !DILocalVariable(name: "dev", arg: 1, scope: !8680, file: !196, line: 730, type: !866)
!8683 = !DILocation(line: 0, scope: !8680)
!8684 = !DILocation(line: 732, column: 9, scope: !8680)
!8685 = !DILocation(line: 732, column: 2, scope: !8680)
!8686 = distinct !DISubprogram(name: "uart_register_input", scope: !911, file: !911, line: 560, type: !8687, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8732)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{null, !8689, !8689, !8729}
!8689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8690, size: 32)
!8690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !357, line: 2208, size: 128, elements: !8691)
!8691 = !{!8692}
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8690, file: !357, line: 2209, baseType: !8693, size: 128)
!8693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !357, line: 1709, size: 128, elements: !8694)
!8694 = !{!8695, !8708, !8710}
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8693, file: !357, line: 1710, baseType: !8696, size: 64)
!8696 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8697, line: 46, baseType: !8698)
!8697 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8697, line: 41, size: 64, elements: !8699)
!8699 = !{!8700, !8707}
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8698, file: !8697, line: 42, baseType: !8701, size: 32)
!8701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8702, size: 32)
!8702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8697, line: 39, baseType: !8703)
!8703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8697, line: 35, size: 32, elements: !8704)
!8704 = !{!8705}
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8703, file: !8697, line: 36, baseType: !8706, size: 32)
!8706 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8697, line: 32, baseType: !137)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8698, file: !8697, line: 43, baseType: !8701, size: 32, offset: 32)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8693, file: !357, line: 1711, baseType: !8709, offset: 64)
!8709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8693, file: !357, line: 1712, baseType: !8711, size: 64, offset: 64)
!8711 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !8712)
!8712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !8713)
!8713 = !{!8714}
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8712, file: !299, line: 232, baseType: !8715, size: 64)
!8715 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !8716)
!8716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !8717)
!8717 = !{!8718, !8724}
!8718 = !DIDerivedType(tag: DW_TAG_member, scope: !8716, file: !273, line: 38, baseType: !8719, size: 32)
!8719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8716, file: !273, line: 38, size: 32, elements: !8720)
!8720 = !{!8721, !8723}
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8719, file: !273, line: 39, baseType: !8722, size: 32)
!8722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8716, size: 32)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8719, file: !273, line: 40, baseType: !8722, size: 32)
!8724 = !DIDerivedType(tag: DW_TAG_member, scope: !8716, file: !273, line: 42, baseType: !8725, size: 32, offset: 32)
!8725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8716, file: !273, line: 42, size: 32, elements: !8726)
!8726 = !{!8727, !8728}
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8725, file: !273, line: 43, baseType: !8722, size: 32)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8725, file: !273, line: 44, baseType: !8722, size: 32)
!8729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8730, size: 32)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!208, !1046, !208}
!8732 = !{!8733, !8734, !8735}
!8733 = !DILocalVariable(name: "avail", arg: 1, scope: !8686, file: !911, line: 560, type: !8689)
!8734 = !DILocalVariable(name: "lines", arg: 2, scope: !8686, file: !911, line: 560, type: !8689)
!8735 = !DILocalVariable(name: "completion", arg: 3, scope: !8686, file: !911, line: 561, type: !8729)
!8736 = !DILocation(line: 0, scope: !8686)
!8737 = !DILocation(line: 566, column: 1, scope: !8686)
!8738 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1090, file: !1090, line: 523, type: !947, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8739)
!8739 = !{!8740, !8741, !8742, !8743, !8744}
!8740 = !DILocalVariable(name: "dev", arg: 1, scope: !8738, file: !1090, line: 523, type: !949)
!8741 = !DILocalVariable(name: "pin", arg: 2, scope: !8738, file: !1090, line: 524, type: !964)
!8742 = !DILocalVariable(name: "flags", arg: 3, scope: !8738, file: !1090, line: 524, type: !965)
!8743 = !DILocalVariable(name: "err", scope: !8738, file: !1090, line: 526, type: !103)
!8744 = !DILocalVariable(name: "pincfg", scope: !8738, file: !1090, line: 527, type: !103)
!8745 = !DILocation(line: 0, scope: !8738)
!8746 = !DILocation(line: 527, column: 2, scope: !8738)
!8747 = !DILocation(line: 532, column: 8, scope: !8738)
!8748 = !DILocation(line: 533, column: 10, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8738, file: !1090, line: 533, column: 6)
!8750 = !DILocation(line: 533, column: 6, scope: !8738)
!8751 = !DILocation(line: 543, column: 13, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8738, file: !1090, line: 543, column: 6)
!8753 = !DILocation(line: 543, column: 28, scope: !8752)
!8754 = !DILocation(line: 543, column: 6, scope: !8738)
!8755 = !DILocation(line: 544, column: 14, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !1090, line: 544, column: 7)
!8757 = distinct !DILexicalBlock(scope: !8752, file: !1090, line: 543, column: 34)
!8758 = !DILocation(line: 544, column: 39, scope: !8756)
!8759 = !DILocation(line: 544, column: 7, scope: !8757)
!8760 = !DILocation(line: 545, column: 38, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8756, file: !1090, line: 544, column: 45)
!8762 = !DILocation(line: 545, column: 4, scope: !8761)
!8763 = !DILocation(line: 546, column: 3, scope: !8761)
!8764 = !DILocation(line: 546, column: 21, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8756, file: !1090, line: 546, column: 14)
!8766 = !DILocation(line: 546, column: 45, scope: !8765)
!8767 = !DILocation(line: 546, column: 14, scope: !8756)
!8768 = !DILocation(line: 547, column: 40, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8765, file: !1090, line: 546, column: 51)
!8770 = !DILocation(line: 547, column: 4, scope: !8769)
!8771 = !DILocation(line: 548, column: 3, scope: !8769)
!8772 = !DILocation(line: 551, column: 32, scope: !8738)
!8773 = !DILocation(line: 551, column: 37, scope: !8738)
!8774 = !DILocation(line: 551, column: 2, scope: !8738)
!8775 = !DILocation(line: 554, column: 6, scope: !8738)
!8776 = !DILocation(line: 562, column: 1, scope: !8738)
!8777 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1090, file: !1090, line: 410, type: !8778, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!103, !949, !149}
!8780 = !{!8781, !8782, !8783, !8785}
!8781 = !DILocalVariable(name: "dev", arg: 1, scope: !8777, file: !1090, line: 410, type: !949)
!8782 = !DILocalVariable(name: "value", arg: 2, scope: !8777, file: !1090, line: 410, type: !149)
!8783 = !DILocalVariable(name: "cfg", scope: !8777, file: !1090, line: 412, type: !8784)
!8784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!8785 = !DILocalVariable(name: "gpio", scope: !8777, file: !1090, line: 413, type: !1022)
!8786 = !DILocation(line: 0, scope: !8777)
!8787 = !DILocation(line: 412, column: 45, scope: !8777)
!8788 = !DILocation(line: 413, column: 44, scope: !8777)
!8789 = !DILocation(line: 415, column: 11, scope: !8777)
!8790 = !DILocation(line: 415, column: 9, scope: !8777)
!8791 = !DILocation(line: 417, column: 2, scope: !8777)
!8792 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1090, file: !1090, line: 420, type: !974, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8793)
!8793 = !{!8794, !8795, !8796, !8797, !8798, !8799}
!8794 = !DILocalVariable(name: "dev", arg: 1, scope: !8792, file: !1090, line: 420, type: !949)
!8795 = !DILocalVariable(name: "mask", arg: 2, scope: !8792, file: !1090, line: 421, type: !976)
!8796 = !DILocalVariable(name: "value", arg: 3, scope: !8792, file: !1090, line: 422, type: !971)
!8797 = !DILocalVariable(name: "cfg", scope: !8792, file: !1090, line: 424, type: !8784)
!8798 = !DILocalVariable(name: "gpio", scope: !8792, file: !1090, line: 425, type: !1022)
!8799 = !DILocalVariable(name: "port_value", scope: !8792, file: !1090, line: 426, type: !137)
!8800 = !DILocation(line: 0, scope: !8792)
!8801 = !DILocation(line: 424, column: 45, scope: !8792)
!8802 = !DILocation(line: 425, column: 44, scope: !8792)
!8803 = !DILocation(line: 430, column: 15, scope: !8792)
!8804 = !DILocation(line: 431, column: 46, scope: !8792)
!8805 = !DILocation(line: 431, column: 44, scope: !8792)
!8806 = !DILocation(line: 431, column: 61, scope: !8792)
!8807 = !DILocation(line: 431, column: 53, scope: !8792)
!8808 = !DILocation(line: 431, column: 2, scope: !8792)
!8809 = !DILocation(line: 435, column: 2, scope: !8792)
!8810 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1090, file: !1090, line: 438, type: !979, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8811)
!8811 = !{!8812, !8813, !8814, !8815}
!8812 = !DILocalVariable(name: "dev", arg: 1, scope: !8810, file: !1090, line: 438, type: !949)
!8813 = !DILocalVariable(name: "pins", arg: 2, scope: !8810, file: !1090, line: 439, type: !976)
!8814 = !DILocalVariable(name: "cfg", scope: !8810, file: !1090, line: 441, type: !8784)
!8815 = !DILocalVariable(name: "gpio", scope: !8810, file: !1090, line: 442, type: !1022)
!8816 = !DILocation(line: 0, scope: !8810)
!8817 = !DILocation(line: 441, column: 45, scope: !8810)
!8818 = !DILocation(line: 442, column: 44, scope: !8810)
!8819 = !DILocation(line: 448, column: 2, scope: !8810)
!8820 = !DILocation(line: 450, column: 2, scope: !8810)
!8821 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1090, file: !1090, line: 453, type: !979, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8822)
!8822 = !{!8823, !8824, !8825, !8826}
!8823 = !DILocalVariable(name: "dev", arg: 1, scope: !8821, file: !1090, line: 453, type: !949)
!8824 = !DILocalVariable(name: "pins", arg: 2, scope: !8821, file: !1090, line: 454, type: !976)
!8825 = !DILocalVariable(name: "cfg", scope: !8821, file: !1090, line: 456, type: !8784)
!8826 = !DILocalVariable(name: "gpio", scope: !8821, file: !1090, line: 457, type: !1022)
!8827 = !DILocation(line: 0, scope: !8821)
!8828 = !DILocation(line: 456, column: 45, scope: !8821)
!8829 = !DILocation(line: 457, column: 44, scope: !8821)
!8830 = !DILocation(line: 467, column: 2, scope: !8821)
!8831 = !DILocation(line: 470, column: 2, scope: !8821)
!8832 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1090, file: !1090, line: 473, type: !979, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8833)
!8833 = !{!8834, !8835, !8836, !8837}
!8834 = !DILocalVariable(name: "dev", arg: 1, scope: !8832, file: !1090, line: 473, type: !949)
!8835 = !DILocalVariable(name: "pins", arg: 2, scope: !8832, file: !1090, line: 474, type: !976)
!8836 = !DILocalVariable(name: "cfg", scope: !8832, file: !1090, line: 476, type: !8784)
!8837 = !DILocalVariable(name: "gpio", scope: !8832, file: !1090, line: 477, type: !1022)
!8838 = !DILocation(line: 0, scope: !8832)
!8839 = !DILocation(line: 476, column: 45, scope: !8832)
!8840 = !DILocation(line: 477, column: 44, scope: !8832)
!8841 = !DILocation(line: 484, column: 2, scope: !8832)
!8842 = !DILocation(line: 487, column: 2, scope: !8832)
!8843 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1090, file: !1090, line: 594, type: !985, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8844)
!8844 = !{!8845, !8846, !8847, !8848, !8849, !8850, !8852, !8853, !8854}
!8845 = !DILocalVariable(name: "dev", arg: 1, scope: !8843, file: !1090, line: 594, type: !949)
!8846 = !DILocalVariable(name: "pin", arg: 2, scope: !8843, file: !1090, line: 595, type: !964)
!8847 = !DILocalVariable(name: "mode", arg: 3, scope: !8843, file: !1090, line: 596, type: !923)
!8848 = !DILocalVariable(name: "trig", arg: 4, scope: !8843, file: !1090, line: 597, type: !929)
!8849 = !DILocalVariable(name: "cfg", scope: !8843, file: !1090, line: 599, type: !8784)
!8850 = !DILocalVariable(name: "data", scope: !8843, file: !1090, line: 600, type: !8851)
!8851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!8852 = !DILocalVariable(name: "edge", scope: !8843, file: !1090, line: 601, type: !103)
!8853 = !DILocalVariable(name: "err", scope: !8843, file: !1090, line: 602, type: !103)
!8854 = !DILabel(scope: !8843, name: "exit", file: !1090, line: 643)
!8855 = !DILocation(line: 0, scope: !8843)
!8856 = !DILocation(line: 599, column: 45, scope: !8843)
!8857 = !DILocation(line: 604, column: 6, scope: !8843)
!8858 = !DILocation(line: 605, column: 34, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !1090, line: 605, column: 7)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !1090, line: 604, column: 38)
!8861 = distinct !DILexicalBlock(scope: !8843, file: !1090, line: 604, column: 6)
!8862 = !DILocation(line: 605, column: 7, scope: !8859)
!8863 = !DILocation(line: 605, column: 47, scope: !8859)
!8864 = !DILocation(line: 605, column: 39, scope: !8859)
!8865 = !DILocation(line: 605, column: 7, scope: !8860)
!8866 = !DILocation(line: 606, column: 4, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8859, file: !1090, line: 605, column: 53)
!8868 = !DILocation(line: 607, column: 4, scope: !8867)
!8869 = !DILocation(line: 608, column: 4, scope: !8867)
!8870 = !DILocation(line: 609, column: 3, scope: !8867)
!8871 = !DILocation(line: 600, column: 38, scope: !8843)
!8872 = !DILocation(line: 620, column: 30, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8843, file: !1090, line: 620, column: 6)
!8874 = !DILocation(line: 620, column: 6, scope: !8873)
!8875 = !DILocation(line: 620, column: 57, scope: !8873)
!8876 = !DILocation(line: 620, column: 6, scope: !8843)
!8877 = !DILocation(line: 625, column: 29, scope: !8843)
!8878 = !DILocation(line: 625, column: 2, scope: !8843)
!8879 = !DILocation(line: 627, column: 2, scope: !8843)
!8880 = !DILocation(line: 630, column: 3, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8843, file: !1090, line: 627, column: 16)
!8882 = !DILocation(line: 633, column: 3, scope: !8881)
!8883 = !DILocation(line: 636, column: 3, scope: !8881)
!8884 = !DILocation(line: 639, column: 2, scope: !8843)
!8885 = !DILocation(line: 641, column: 2, scope: !8843)
!8886 = !DILocation(line: 643, column: 1, scope: !8843)
!8887 = !DILocation(line: 644, column: 2, scope: !8843)
!8888 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1090, file: !1090, line: 647, type: !989, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8889)
!8889 = !{!8890, !8891, !8892, !8893}
!8890 = !DILocalVariable(name: "dev", arg: 1, scope: !8888, file: !1090, line: 647, type: !949)
!8891 = !DILocalVariable(name: "callback", arg: 2, scope: !8888, file: !1090, line: 648, type: !991)
!8892 = !DILocalVariable(name: "set", arg: 3, scope: !8888, file: !1090, line: 649, type: !211)
!8893 = !DILocalVariable(name: "data", scope: !8888, file: !1090, line: 651, type: !8851)
!8894 = !DILocation(line: 0, scope: !8888)
!8895 = !DILocation(line: 651, column: 38, scope: !8888)
!8896 = !DILocation(line: 653, column: 37, scope: !8888)
!8897 = !DILocation(line: 653, column: 9, scope: !8888)
!8898 = !DILocation(line: 653, column: 2, scope: !8888)
!8899 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8900, file: !8900, line: 38, type: !8901, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8904)
!8900 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8901 = !DISubroutineType(types: !8902)
!8902 = !{!103, !8903, !991, !211}
!8903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!8904 = !{!8905, !8906, !8907}
!8905 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8899, file: !8900, line: 38, type: !8903)
!8906 = !DILocalVariable(name: "callback", arg: 2, scope: !8899, file: !8900, line: 39, type: !991)
!8907 = !DILocalVariable(name: "set", arg: 3, scope: !8899, file: !8900, line: 40, type: !211)
!8908 = !DILocation(line: 0, scope: !8899)
!8909 = !DILocation(line: 45, column: 7, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8899, file: !8900, line: 45, column: 6)
!8911 = !DILocation(line: 45, column: 6, scope: !8899)
!8912 = !DILocation(line: 46, column: 56, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !8900, line: 46, column: 7)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !8900, line: 45, column: 38)
!8915 = !DILocation(line: 46, column: 8, scope: !8913)
!8916 = !DILocation(line: 46, column: 7, scope: !8914)
!8917 = !DILocation(line: 51, column: 13, scope: !8910)
!8918 = !DILocation(line: 56, column: 43, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !8900, line: 55, column: 11)
!8920 = distinct !DILexicalBlock(scope: !8899, file: !8900, line: 55, column: 6)
!8921 = !DILocation(line: 56, column: 3, scope: !8919)
!8922 = !DILocation(line: 57, column: 2, scope: !8919)
!8923 = !DILocation(line: 60, column: 1, scope: !8899)
!8924 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !996, file: !996, line: 261, type: !8925, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8927)
!8925 = !DISubroutineType(types: !8926)
!8926 = !{!211, !8903}
!8927 = !{!8928}
!8928 = !DILocalVariable(name: "list", arg: 1, scope: !8924, file: !996, line: 261, type: !8903)
!8929 = !DILocation(line: 0, scope: !8924)
!8930 = !DILocation(line: 261, column: 1, scope: !8924)
!8931 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !996, file: !996, line: 417, type: !8932, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{!211, !8903, !1181}
!8934 = !{!8935, !8936, !8937, !8938}
!8935 = !DILocalVariable(name: "list", arg: 1, scope: !8931, file: !996, line: 417, type: !8903)
!8936 = !DILocalVariable(name: "node", arg: 2, scope: !8931, file: !996, line: 417, type: !1181)
!8937 = !DILocalVariable(name: "prev", scope: !8931, file: !996, line: 417, type: !1181)
!8938 = !DILocalVariable(name: "test", scope: !8931, file: !996, line: 417, type: !1181)
!8939 = !DILocation(line: 0, scope: !8931)
!8940 = !DILocation(line: 417, column: 1, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8931, file: !996, line: 417, column: 1)
!8942 = !DILocation(line: 417, column: 1, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8941, file: !996, line: 417, column: 1)
!8944 = !DILocation(line: 417, column: 1, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !996, line: 417, column: 1)
!8946 = distinct !DILexicalBlock(scope: !8943, file: !996, line: 417, column: 1)
!8947 = !DILocation(line: 417, column: 1, scope: !8946)
!8948 = distinct !{!8948, !8940, !8940}
!8949 = !DILocation(line: 417, column: 1, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8945, file: !996, line: 417, column: 1)
!8951 = !DILocation(line: 417, column: 1, scope: !8931)
!8952 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !996, file: !996, line: 298, type: !8953, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8955)
!8953 = !DISubroutineType(types: !8954)
!8954 = !{null, !8903, !1181}
!8955 = !{!8956, !8957}
!8956 = !DILocalVariable(name: "list", arg: 1, scope: !8952, file: !996, line: 298, type: !8903)
!8957 = !DILocalVariable(name: "node", arg: 2, scope: !8952, file: !996, line: 298, type: !1181)
!8958 = !DILocation(line: 0, scope: !8952)
!8959 = !DILocation(line: 298, column: 1, scope: !8952)
!8960 = !DILocation(line: 298, column: 1, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8952, file: !996, line: 298, column: 1)
!8962 = !DILocation(line: 298, column: 1, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8961, file: !996, line: 298, column: 1)
!8964 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !996, file: !996, line: 231, type: !8965, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8967)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!1181, !8903}
!8967 = !{!8968}
!8968 = !DILocalVariable(name: "list", arg: 1, scope: !8964, file: !996, line: 231, type: !8903)
!8969 = !DILocation(line: 0, scope: !8964)
!8970 = !DILocation(line: 233, column: 15, scope: !8964)
!8971 = !DILocation(line: 233, column: 2, scope: !8964)
!8972 = distinct !DISubprogram(name: "z_snode_next_set", scope: !996, file: !996, line: 209, type: !8973, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8975)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{null, !1181, !1181}
!8975 = !{!8976, !8977}
!8976 = !DILocalVariable(name: "parent", arg: 1, scope: !8972, file: !996, line: 209, type: !1181)
!8977 = !DILocalVariable(name: "child", arg: 2, scope: !8972, file: !996, line: 209, type: !1181)
!8978 = !DILocation(line: 0, scope: !8972)
!8979 = !DILocation(line: 211, column: 10, scope: !8972)
!8980 = !DILocation(line: 211, column: 15, scope: !8972)
!8981 = !DILocation(line: 212, column: 1, scope: !8972)
!8982 = distinct !DISubprogram(name: "z_slist_head_set", scope: !996, file: !996, line: 214, type: !8953, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8983)
!8983 = !{!8984, !8985}
!8984 = !DILocalVariable(name: "list", arg: 1, scope: !8982, file: !996, line: 214, type: !8903)
!8985 = !DILocalVariable(name: "node", arg: 2, scope: !8982, file: !996, line: 214, type: !1181)
!8986 = !DILocation(line: 0, scope: !8982)
!8987 = !DILocation(line: 216, column: 8, scope: !8982)
!8988 = !DILocation(line: 216, column: 13, scope: !8982)
!8989 = !DILocation(line: 217, column: 1, scope: !8982)
!8990 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !996, file: !996, line: 243, type: !8965, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8991)
!8991 = !{!8992}
!8992 = !DILocalVariable(name: "list", arg: 1, scope: !8990, file: !996, line: 243, type: !8903)
!8993 = !DILocation(line: 0, scope: !8990)
!8994 = !DILocation(line: 245, column: 15, scope: !8990)
!8995 = !DILocation(line: 245, column: 2, scope: !8990)
!8996 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !996, file: !996, line: 219, type: !8953, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !8997)
!8997 = !{!8998, !8999}
!8998 = !DILocalVariable(name: "list", arg: 1, scope: !8996, file: !996, line: 219, type: !8903)
!8999 = !DILocalVariable(name: "node", arg: 2, scope: !8996, file: !996, line: 219, type: !1181)
!9000 = !DILocation(line: 0, scope: !8996)
!9001 = !DILocation(line: 221, column: 8, scope: !8996)
!9002 = !DILocation(line: 221, column: 13, scope: !8996)
!9003 = !DILocation(line: 222, column: 1, scope: !8996)
!9004 = distinct !DISubprogram(name: "sys_slist_remove", scope: !996, file: !996, line: 401, type: !9005, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9007)
!9005 = !DISubroutineType(types: !9006)
!9006 = !{null, !8903, !1181, !1181}
!9007 = !{!9008, !9009, !9010}
!9008 = !DILocalVariable(name: "list", arg: 1, scope: !9004, file: !996, line: 401, type: !8903)
!9009 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9004, file: !996, line: 401, type: !1181)
!9010 = !DILocalVariable(name: "node", arg: 3, scope: !9004, file: !996, line: 401, type: !1181)
!9011 = !DILocation(line: 0, scope: !9004)
!9012 = !DILocation(line: 401, column: 1, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9004, file: !996, line: 401, column: 1)
!9014 = !DILocation(line: 0, scope: !9013)
!9015 = !DILocation(line: 401, column: 1, scope: !9004)
!9016 = !DILocation(line: 401, column: 1, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9013, file: !996, line: 401, column: 1)
!9018 = !DILocation(line: 401, column: 1, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9017, file: !996, line: 401, column: 1)
!9020 = !DILocation(line: 401, column: 1, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9019, file: !996, line: 401, column: 1)
!9022 = !DILocation(line: 401, column: 1, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9013, file: !996, line: 401, column: 1)
!9024 = !DILocation(line: 401, column: 1, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9023, file: !996, line: 401, column: 1)
!9026 = !DILocation(line: 401, column: 1, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9025, file: !996, line: 401, column: 1)
!9028 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !996, file: !996, line: 285, type: !9029, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9031)
!9029 = !DISubroutineType(types: !9030)
!9030 = !{!1181, !1181}
!9031 = !{!9032}
!9032 = !DILocalVariable(name: "node", arg: 1, scope: !9028, file: !996, line: 285, type: !1181)
!9033 = !DILocation(line: 0, scope: !9028)
!9034 = !DILocation(line: 285, column: 1, scope: !9028)
!9035 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !996, file: !996, line: 274, type: !9029, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9036)
!9036 = !{!9037}
!9037 = !DILocalVariable(name: "node", arg: 1, scope: !9035, file: !996, line: 274, type: !1181)
!9038 = !DILocation(line: 0, scope: !9035)
!9039 = !DILocation(line: 274, column: 1, scope: !9035)
!9040 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !996, file: !996, line: 204, type: !9029, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9041)
!9041 = !{!9042}
!9042 = !DILocalVariable(name: "node", arg: 1, scope: !9040, file: !996, line: 204, type: !1181)
!9043 = !DILocation(line: 0, scope: !9040)
!9044 = !DILocation(line: 206, column: 15, scope: !9040)
!9045 = !DILocation(line: 206, column: 2, scope: !9040)
!9046 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1090, file: !1090, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9047)
!9047 = !{!9048, !9049, !9050}
!9048 = !DILocalVariable(name: "pin", arg: 1, scope: !9046, file: !1090, line: 342, type: !103)
!9049 = !DILocalVariable(name: "line", scope: !9046, file: !1090, line: 344, type: !137)
!9050 = !DILocalVariable(name: "port", scope: !9046, file: !1090, line: 345, type: !103)
!9051 = !DILocation(line: 0, scope: !9046)
!9052 = !DILocation(line: 344, column: 18, scope: !9046)
!9053 = !{i32 983040, i32 0}
!9054 = !DILocation(line: 356, column: 9, scope: !9046)
!9055 = !DILocation(line: 370, column: 2, scope: !9046)
!9056 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1090, file: !1090, line: 37, type: !626, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9057)
!9057 = !{!9058, !9059, !9060}
!9058 = !DILocalVariable(name: "line", arg: 1, scope: !9056, file: !1090, line: 37, type: !103)
!9059 = !DILocalVariable(name: "arg", arg: 2, scope: !9056, file: !1090, line: 37, type: !102)
!9060 = !DILocalVariable(name: "data", scope: !9056, file: !1090, line: 39, type: !8851)
!9061 = !DILocation(line: 0, scope: !9056)
!9062 = !DILocation(line: 41, column: 29, scope: !9056)
!9063 = !DILocation(line: 41, column: 39, scope: !9056)
!9064 = !DILocation(line: 41, column: 44, scope: !9056)
!9065 = !DILocation(line: 41, column: 2, scope: !9056)
!9066 = !DILocation(line: 42, column: 1, scope: !9056)
!9067 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1090, file: !1090, line: 376, type: !9068, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9070)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{!103, !103, !103}
!9070 = !{!9071, !9072, !9073, !9075, !9076}
!9071 = !DILocalVariable(name: "port", arg: 1, scope: !9067, file: !1090, line: 376, type: !103)
!9072 = !DILocalVariable(name: "pin", arg: 2, scope: !9067, file: !1090, line: 376, type: !103)
!9073 = !DILocalVariable(name: "clk", scope: !9067, file: !1090, line: 386, type: !9074)
!9074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!9075 = !DILocalVariable(name: "pclken", scope: !9067, file: !1090, line: 387, type: !1236)
!9076 = !DILocalVariable(name: "ret", scope: !9067, file: !1090, line: 396, type: !103)
!9077 = !DILocation(line: 0, scope: !9067)
!9078 = !DILocation(line: 387, column: 2, scope: !9067)
!9079 = !DILocation(line: 387, column: 22, scope: !9067)
!9080 = !DILocation(line: 399, column: 8, scope: !9067)
!9081 = !DILocation(line: 400, column: 10, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9067, file: !1090, line: 400, column: 6)
!9083 = !DILocation(line: 400, column: 6, scope: !9067)
!9084 = !DILocation(line: 405, column: 2, scope: !9067)
!9085 = !DILocation(line: 407, column: 2, scope: !9067)
!9086 = !DILocation(line: 408, column: 1, scope: !9067)
!9087 = distinct !DISubprogram(name: "clock_control_on", scope: !727, file: !727, line: 123, type: !1055, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9088)
!9088 = !{!9089, !9090, !9091}
!9089 = !DILocalVariable(name: "dev", arg: 1, scope: !9087, file: !727, line: 123, type: !949)
!9090 = !DILocalVariable(name: "sys", arg: 2, scope: !9087, file: !727, line: 124, type: !820)
!9091 = !DILocalVariable(name: "api", scope: !9087, file: !727, line: 126, type: !1048)
!9092 = !DILocation(line: 0, scope: !9087)
!9093 = !DILocation(line: 127, column: 49, scope: !9087)
!9094 = !DILocation(line: 129, column: 14, scope: !9087)
!9095 = !DILocation(line: 129, column: 9, scope: !9087)
!9096 = !DILocation(line: 129, column: 2, scope: !9087)
!9097 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1090, file: !1090, line: 311, type: !8231, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9098)
!9098 = !{!9099, !9100, !9101}
!9099 = !DILocalVariable(name: "port", arg: 1, scope: !9097, file: !1090, line: 311, type: !103)
!9100 = !DILocalVariable(name: "pin", arg: 2, scope: !9097, file: !1090, line: 311, type: !103)
!9101 = !DILocalVariable(name: "line", scope: !9097, file: !1090, line: 313, type: !137)
!9102 = !DILocation(line: 0, scope: !9097)
!9103 = !DILocation(line: 313, column: 18, scope: !9097)
!9104 = !DILocation(line: 337, column: 2, scope: !9097)
!9105 = !DILocation(line: 340, column: 1, scope: !9097)
!9106 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1090, file: !1090, line: 295, type: !9107, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9109)
!9107 = !DISubroutineType(types: !9108)
!9108 = !{!137, !103}
!9109 = !{!9110}
!9110 = !DILocalVariable(name: "pin", arg: 1, scope: !9106, file: !1090, line: 295, type: !103)
!9111 = !DILocation(line: 0, scope: !9106)
!9112 = !DILocation(line: 307, column: 46, scope: !9106)
!9113 = !DILocation(line: 307, column: 27, scope: !9106)
!9114 = !DILocation(line: 307, column: 32, scope: !9106)
!9115 = !DILocation(line: 307, column: 14, scope: !9106)
!9116 = !DILocation(line: 307, column: 39, scope: !9106)
!9117 = !DILocation(line: 307, column: 2, scope: !9106)
!9118 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6287, file: !6287, line: 671, type: !9119, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{null, !137, !137}
!9121 = !{!9122, !9123}
!9122 = !DILocalVariable(name: "Port", arg: 1, scope: !9118, file: !6287, line: 671, type: !137)
!9123 = !DILocalVariable(name: "Line", arg: 2, scope: !9118, file: !6287, line: 671, type: !137)
!9124 = !DILocation(line: 0, scope: !9118)
!9125 = !DILocation(line: 673, column: 3, scope: !9118)
!9126 = !DILocalVariable(name: "value", arg: 1, scope: !9127, file: !6440, line: 373, type: !137)
!9127 = distinct !DISubprogram(name: "__RBIT", scope: !6440, file: !6440, line: 373, type: !7445, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9128)
!9128 = !{!9126, !9129}
!9129 = !DILocalVariable(name: "result", scope: !9127, file: !6440, line: 375, type: !137)
!9130 = !DILocation(line: 0, scope: !9127, inlinedAt: !9131)
!9131 = distinct !DILocation(line: 673, column: 3, scope: !9118)
!9132 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9131)
!9133 = !{i64 4115165}
!9134 = !DILocalVariable(name: "value", arg: 1, scope: !9135, file: !6440, line: 403, type: !137)
!9135 = distinct !DISubprogram(name: "__CLZ", scope: !6440, file: !6440, line: 403, type: !9136, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9138)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{!208, !137}
!9138 = !{!9134}
!9139 = !DILocation(line: 0, scope: !9135, inlinedAt: !9140)
!9140 = distinct !DILocation(line: 673, column: 3, scope: !9118)
!9141 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9140)
!9142 = !DILocation(line: 674, column: 1, scope: !9118)
!9143 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8900, file: !8900, line: 69, type: !9144, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{null, !8903, !949, !137}
!9146 = !{!9147, !9148, !9149, !9150, !9151}
!9147 = !DILocalVariable(name: "list", arg: 1, scope: !9143, file: !8900, line: 69, type: !8903)
!9148 = !DILocalVariable(name: "port", arg: 2, scope: !9143, file: !8900, line: 70, type: !949)
!9149 = !DILocalVariable(name: "pins", arg: 3, scope: !9143, file: !8900, line: 71, type: !137)
!9150 = !DILocalVariable(name: "cb", scope: !9143, file: !8900, line: 73, type: !991)
!9151 = !DILocalVariable(name: "tmp", scope: !9143, file: !8900, line: 73, type: !991)
!9152 = !DILocation(line: 0, scope: !9143)
!9153 = !DILocation(line: 75, column: 2, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9143, file: !8900, line: 75, column: 2)
!9155 = !DILocation(line: 0, scope: !9154)
!9156 = !DILocation(line: 76, column: 11, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !8900, line: 76, column: 7)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !8900, line: 75, column: 57)
!9159 = distinct !DILexicalBlock(scope: !9154, file: !8900, line: 75, column: 2)
!9160 = !DILocation(line: 76, column: 20, scope: !9157)
!9161 = !DILocation(line: 76, column: 7, scope: !9158)
!9162 = !DILocation(line: 78, column: 8, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9157, file: !8900, line: 76, column: 28)
!9164 = !DILocation(line: 78, column: 4, scope: !9163)
!9165 = !DILocation(line: 79, column: 3, scope: !9163)
!9166 = !DILocation(line: 75, column: 2, scope: !9159)
!9167 = !DILocation(line: 81, column: 1, scope: !9143)
!9168 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6287, file: !6287, line: 710, type: !7445, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9169)
!9169 = !{!9170}
!9170 = !DILocalVariable(name: "Line", arg: 1, scope: !9168, file: !6287, line: 710, type: !137)
!9171 = !DILocation(line: 0, scope: !9168)
!9172 = !DILocation(line: 712, column: 21, scope: !9168)
!9173 = !DILocation(line: 0, scope: !9127, inlinedAt: !9174)
!9174 = distinct !DILocation(line: 712, column: 76, scope: !9168)
!9175 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9174)
!9176 = !DILocation(line: 0, scope: !9135, inlinedAt: !9177)
!9177 = distinct !DILocation(line: 712, column: 76, scope: !9168)
!9178 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9177)
!9179 = !DILocation(line: 712, column: 73, scope: !9168)
!9180 = !DILocation(line: 712, column: 3, scope: !9168)
!9181 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9182, file: !9182, line: 910, type: !9183, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9185)
!9182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9183 = !DISubroutineType(types: !9184)
!9184 = !{null, !1022, !137}
!9185 = !{!9186, !9187}
!9186 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9181, file: !9182, line: 910, type: !1022)
!9187 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9181, file: !9182, line: 910, type: !137)
!9188 = !DILocation(line: 0, scope: !9181)
!9189 = !DILocation(line: 912, column: 3, scope: !9181)
!9190 = !DILocation(line: 913, column: 1, scope: !9181)
!9191 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9182, file: !9182, line: 823, type: !9192, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9194)
!9192 = !DISubroutineType(types: !9193)
!9193 = !{!137, !1022}
!9194 = !{!9195}
!9195 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9191, file: !9182, line: 823, type: !1022)
!9196 = !DILocation(line: 0, scope: !9191)
!9197 = !DILocation(line: 825, column: 21, scope: !9191)
!9198 = !DILocation(line: 825, column: 3, scope: !9191)
!9199 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9182, file: !9182, line: 812, type: !9183, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9200)
!9200 = !{!9201, !9202}
!9201 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9199, file: !9182, line: 812, type: !1022)
!9202 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9199, file: !9182, line: 812, type: !137)
!9203 = !DILocation(line: 0, scope: !9199)
!9204 = !DILocation(line: 814, column: 3, scope: !9199)
!9205 = !DILocation(line: 815, column: 1, scope: !9199)
!9206 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9182, file: !9182, line: 771, type: !9192, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9207)
!9207 = !{!9208}
!9208 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9206, file: !9182, line: 771, type: !1022)
!9209 = !DILocation(line: 0, scope: !9206)
!9210 = !DILocation(line: 773, column: 21, scope: !9206)
!9211 = !DILocation(line: 773, column: 3, scope: !9206)
!9212 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1090, file: !1090, line: 47, type: !9213, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9215)
!9213 = !DISubroutineType(types: !9214)
!9214 = !{!103, !965, !2413}
!9215 = !{!9216, !9217}
!9216 = !DILocalVariable(name: "flags", arg: 1, scope: !9212, file: !1090, line: 47, type: !965)
!9217 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9212, file: !1090, line: 47, type: !2413)
!9218 = !DILocation(line: 0, scope: !9212)
!9219 = !DILocation(line: 50, column: 13, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9212, file: !1090, line: 50, column: 6)
!9221 = !DILocation(line: 50, column: 28, scope: !9220)
!9222 = !DILocation(line: 50, column: 6, scope: !9212)
!9223 = !DILocation(line: 53, column: 11, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !1090, line: 50, column: 34)
!9225 = !DILocation(line: 55, column: 14, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9224, file: !1090, line: 55, column: 7)
!9227 = !DILocation(line: 55, column: 35, scope: !9226)
!9228 = !DILocation(line: 55, column: 7, scope: !9224)
!9229 = !DILocation(line: 56, column: 14, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !1090, line: 56, column: 8)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !1090, line: 55, column: 41)
!9232 = !DILocation(line: 56, column: 8, scope: !9231)
!9233 = !DILocation(line: 0, scope: !9226)
!9234 = !DILocation(line: 66, column: 14, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9224, file: !1090, line: 66, column: 7)
!9236 = !DILocation(line: 66, column: 30, scope: !9235)
!9237 = !DILocation(line: 66, column: 7, scope: !9224)
!9238 = !DILocation(line: 67, column: 12, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !1090, line: 66, column: 36)
!9240 = !DILocation(line: 68, column: 3, scope: !9239)
!9241 = !DILocation(line: 68, column: 21, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9235, file: !1090, line: 68, column: 14)
!9243 = !DILocation(line: 68, column: 39, scope: !9242)
!9244 = !DILocation(line: 68, column: 14, scope: !9235)
!9245 = !DILocation(line: 69, column: 12, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !1090, line: 68, column: 45)
!9247 = !DILocation(line: 70, column: 3, scope: !9246)
!9248 = !DILocation(line: 72, column: 21, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9220, file: !1090, line: 72, column: 14)
!9250 = !DILocation(line: 72, column: 35, scope: !9249)
!9251 = !DILocation(line: 72, column: 14, scope: !9220)
!9252 = !DILocation(line: 77, column: 14, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !1090, line: 77, column: 7)
!9254 = distinct !DILexicalBlock(scope: !9249, file: !1090, line: 72, column: 41)
!9255 = !DILocation(line: 77, column: 30, scope: !9253)
!9256 = !DILocation(line: 77, column: 7, scope: !9254)
!9257 = !DILocation(line: 0, scope: !9220)
!9258 = !DILocation(line: 90, column: 1, scope: !9212)
!9259 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1090, file: !1090, line: 157, type: !9260, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{null, !949, !103, !103, !103}
!9262 = !{!9263, !9264, !9265, !9266, !9267, !9268, !9269, !9270, !9271, !9272, !9273}
!9263 = !DILocalVariable(name: "dev", arg: 1, scope: !9259, file: !1090, line: 157, type: !949)
!9264 = !DILocalVariable(name: "pin", arg: 2, scope: !9259, file: !1090, line: 157, type: !103)
!9265 = !DILocalVariable(name: "conf", arg: 3, scope: !9259, file: !1090, line: 158, type: !103)
!9266 = !DILocalVariable(name: "func", arg: 4, scope: !9259, file: !1090, line: 158, type: !103)
!9267 = !DILocalVariable(name: "cfg", scope: !9259, file: !1090, line: 160, type: !8784)
!9268 = !DILocalVariable(name: "gpio", scope: !9259, file: !1090, line: 161, type: !1022)
!9269 = !DILocalVariable(name: "pin_ll", scope: !9259, file: !1090, line: 163, type: !103)
!9270 = !DILocalVariable(name: "mode", scope: !9259, file: !1090, line: 227, type: !32)
!9271 = !DILocalVariable(name: "otype", scope: !9259, file: !1090, line: 227, type: !32)
!9272 = !DILocalVariable(name: "ospeed", scope: !9259, file: !1090, line: 227, type: !32)
!9273 = !DILocalVariable(name: "pupd", scope: !9259, file: !1090, line: 227, type: !32)
!9274 = !DILocation(line: 0, scope: !9259)
!9275 = !DILocation(line: 160, column: 45, scope: !9259)
!9276 = !DILocation(line: 161, column: 44, scope: !9259)
!9277 = !DILocation(line: 163, column: 15, scope: !9259)
!9278 = !DILocation(line: 229, column: 14, scope: !9259)
!9279 = !DILocation(line: 246, column: 47, scope: !9259)
!9280 = !DILocation(line: 246, column: 2, scope: !9259)
!9281 = !DILocation(line: 248, column: 43, scope: !9259)
!9282 = !DILocation(line: 248, column: 2, scope: !9259)
!9283 = !DILocation(line: 250, column: 40, scope: !9259)
!9284 = !DILocation(line: 250, column: 2, scope: !9259)
!9285 = !DILocation(line: 252, column: 11, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9259, file: !1090, line: 252, column: 6)
!9287 = !DILocation(line: 252, column: 6, scope: !9259)
!9288 = !DILocation(line: 253, column: 11, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !1090, line: 253, column: 7)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !1090, line: 252, column: 36)
!9291 = !DILocation(line: 253, column: 7, scope: !9290)
!9292 = !DILocation(line: 254, column: 4, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9289, file: !1090, line: 253, column: 16)
!9294 = !DILocation(line: 255, column: 3, scope: !9293)
!9295 = !DILocation(line: 256, column: 4, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9289, file: !1090, line: 255, column: 10)
!9297 = !DILocation(line: 260, column: 40, scope: !9259)
!9298 = !DILocation(line: 260, column: 2, scope: !9259)
!9299 = !DILocation(line: 265, column: 1, scope: !9259)
!9300 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1090, file: !1090, line: 137, type: !9107, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9301)
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "pin", arg: 1, scope: !9300, file: !1090, line: 137, type: !103)
!9303 = !DILocalVariable(name: "pinval", scope: !9300, file: !1090, line: 139, type: !137)
!9304 = !DILocation(line: 0, scope: !9300)
!9305 = !DILocation(line: 149, column: 13, scope: !9300)
!9306 = !DILocation(line: 151, column: 2, scope: !9300)
!9307 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9182, file: !9182, line: 342, type: !9308, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9310)
!9308 = !DISubroutineType(types: !9309)
!9309 = !{null, !1022, !137, !137}
!9310 = !{!9311, !9312, !9313}
!9311 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9307, file: !9182, line: 342, type: !1022)
!9312 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9307, file: !9182, line: 342, type: !137)
!9313 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9307, file: !9182, line: 342, type: !137)
!9314 = !DILocation(line: 0, scope: !9307)
!9315 = !DILocation(line: 344, column: 3, scope: !9307)
!9316 = !DILocation(line: 345, column: 1, scope: !9307)
!9317 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9182, file: !9182, line: 413, type: !9308, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9318)
!9318 = !{!9319, !9320, !9321}
!9319 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9317, file: !9182, line: 413, type: !1022)
!9320 = !DILocalVariable(name: "Pin", arg: 2, scope: !9317, file: !9182, line: 413, type: !137)
!9321 = !DILocalVariable(name: "Speed", arg: 3, scope: !9317, file: !9182, line: 413, type: !137)
!9322 = !DILocation(line: 0, scope: !9317)
!9323 = !DILocation(line: 415, column: 3, scope: !9317)
!9324 = !DILocation(line: 0, scope: !9127, inlinedAt: !9325)
!9325 = distinct !DILocation(line: 415, column: 3, scope: !9317)
!9326 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9325)
!9327 = !DILocation(line: 0, scope: !9135, inlinedAt: !9328)
!9328 = distinct !DILocation(line: 415, column: 3, scope: !9317)
!9329 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9328)
!9330 = !DILocation(line: 0, scope: !9127, inlinedAt: !9331)
!9331 = distinct !DILocation(line: 415, column: 3, scope: !9317)
!9332 = !DILocation(line: 0, scope: !9135, inlinedAt: !9333)
!9333 = distinct !DILocation(line: 415, column: 3, scope: !9317)
!9334 = !DILocation(line: 417, column: 1, scope: !9317)
!9335 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9182, file: !9182, line: 484, type: !9308, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9336)
!9336 = !{!9337, !9338, !9339}
!9337 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9335, file: !9182, line: 484, type: !1022)
!9338 = !DILocalVariable(name: "Pin", arg: 2, scope: !9335, file: !9182, line: 484, type: !137)
!9339 = !DILocalVariable(name: "Pull", arg: 3, scope: !9335, file: !9182, line: 484, type: !137)
!9340 = !DILocation(line: 0, scope: !9335)
!9341 = !DILocation(line: 486, column: 3, scope: !9335)
!9342 = !DILocation(line: 0, scope: !9127, inlinedAt: !9343)
!9343 = distinct !DILocation(line: 486, column: 3, scope: !9335)
!9344 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9343)
!9345 = !DILocation(line: 0, scope: !9135, inlinedAt: !9346)
!9346 = distinct !DILocation(line: 486, column: 3, scope: !9335)
!9347 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9346)
!9348 = !DILocation(line: 0, scope: !9127, inlinedAt: !9349)
!9349 = distinct !DILocation(line: 486, column: 3, scope: !9335)
!9350 = !DILocation(line: 0, scope: !9135, inlinedAt: !9351)
!9351 = distinct !DILocation(line: 486, column: 3, scope: !9335)
!9352 = !DILocation(line: 487, column: 1, scope: !9335)
!9353 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9182, file: !9182, line: 556, type: !9308, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9354)
!9354 = !{!9355, !9356, !9357}
!9355 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9353, file: !9182, line: 556, type: !1022)
!9356 = !DILocalVariable(name: "Pin", arg: 2, scope: !9353, file: !9182, line: 556, type: !137)
!9357 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9353, file: !9182, line: 556, type: !137)
!9358 = !DILocation(line: 0, scope: !9353)
!9359 = !DILocation(line: 558, column: 3, scope: !9353)
!9360 = !DILocation(line: 0, scope: !9127, inlinedAt: !9361)
!9361 = distinct !DILocation(line: 558, column: 3, scope: !9353)
!9362 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9361)
!9363 = !DILocation(line: 0, scope: !9135, inlinedAt: !9364)
!9364 = distinct !DILocation(line: 558, column: 3, scope: !9353)
!9365 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9364)
!9366 = !DILocation(line: 0, scope: !9127, inlinedAt: !9367)
!9367 = distinct !DILocation(line: 558, column: 3, scope: !9353)
!9368 = !DILocation(line: 0, scope: !9135, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 558, column: 3, scope: !9353)
!9370 = !DILocation(line: 560, column: 1, scope: !9353)
!9371 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9182, file: !9182, line: 633, type: !9308, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9372)
!9372 = !{!9373, !9374, !9375}
!9373 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9371, file: !9182, line: 633, type: !1022)
!9374 = !DILocalVariable(name: "Pin", arg: 2, scope: !9371, file: !9182, line: 633, type: !137)
!9375 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9371, file: !9182, line: 633, type: !137)
!9376 = !DILocation(line: 0, scope: !9371)
!9377 = !DILocation(line: 635, column: 3, scope: !9371)
!9378 = !DILocation(line: 0, scope: !9127, inlinedAt: !9379)
!9379 = distinct !DILocation(line: 635, column: 3, scope: !9371)
!9380 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9379)
!9381 = !DILocation(line: 0, scope: !9135, inlinedAt: !9382)
!9382 = distinct !DILocation(line: 635, column: 3, scope: !9371)
!9383 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9382)
!9384 = !DILocation(line: 0, scope: !9127, inlinedAt: !9385)
!9385 = distinct !DILocation(line: 635, column: 3, scope: !9371)
!9386 = !DILocation(line: 0, scope: !9135, inlinedAt: !9387)
!9387 = distinct !DILocation(line: 635, column: 3, scope: !9371)
!9388 = !DILocation(line: 637, column: 1, scope: !9371)
!9389 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9182, file: !9182, line: 273, type: !9308, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9390)
!9390 = !{!9391, !9392, !9393}
!9391 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9389, file: !9182, line: 273, type: !1022)
!9392 = !DILocalVariable(name: "Pin", arg: 2, scope: !9389, file: !9182, line: 273, type: !137)
!9393 = !DILocalVariable(name: "Mode", arg: 3, scope: !9389, file: !9182, line: 273, type: !137)
!9394 = !DILocation(line: 0, scope: !9389)
!9395 = !DILocation(line: 275, column: 3, scope: !9389)
!9396 = !DILocation(line: 0, scope: !9127, inlinedAt: !9397)
!9397 = distinct !DILocation(line: 275, column: 3, scope: !9389)
!9398 = !DILocation(line: 380, column: 4, scope: !9127, inlinedAt: !9397)
!9399 = !DILocation(line: 0, scope: !9135, inlinedAt: !9400)
!9400 = distinct !DILocation(line: 275, column: 3, scope: !9389)
!9401 = !DILocation(line: 414, column: 7, scope: !9135, inlinedAt: !9400)
!9402 = !DILocation(line: 0, scope: !9127, inlinedAt: !9403)
!9403 = distinct !DILocation(line: 275, column: 3, scope: !9389)
!9404 = !DILocation(line: 0, scope: !9135, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 275, column: 3, scope: !9389)
!9406 = !DILocation(line: 276, column: 1, scope: !9389)
!9407 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1090, file: !1090, line: 698, type: !1103, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9408)
!9408 = !{!9409, !9410, !9411}
!9409 = !DILocalVariable(name: "dev", arg: 1, scope: !9407, file: !1090, line: 698, type: !949)
!9410 = !DILocalVariable(name: "data", scope: !9407, file: !1090, line: 700, type: !8851)
!9411 = !DILocalVariable(name: "ret", scope: !9407, file: !1090, line: 701, type: !103)
!9412 = !DILocation(line: 0, scope: !9407)
!9413 = !DILocation(line: 700, column: 38, scope: !9407)
!9414 = !DILocation(line: 703, column: 8, scope: !9407)
!9415 = !DILocation(line: 703, column: 12, scope: !9407)
!9416 = !DILocation(line: 705, column: 7, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9407, file: !1090, line: 705, column: 6)
!9418 = !DILocation(line: 705, column: 6, scope: !9407)
!9419 = !DILocation(line: 722, column: 8, scope: !9407)
!9420 = !DILocation(line: 723, column: 10, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9407, file: !1090, line: 723, column: 6)
!9422 = !DILocation(line: 723, column: 6, scope: !9407)
!9423 = !DILocation(line: 731, column: 1, scope: !9407)
!9424 = distinct !DISubprogram(name: "device_is_ready", scope: !8631, file: !8631, line: 47, type: !9425, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9427)
!9425 = !DISubroutineType(types: !9426)
!9426 = !{!211, !949}
!9427 = !{!9428}
!9428 = !DILocalVariable(name: "dev", arg: 1, scope: !9424, file: !8631, line: 47, type: !949)
!9429 = !DILocation(line: 0, scope: !9424)
!9430 = !DILocation(line: 55, column: 2, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9424, file: !8631, line: 55, column: 2)
!9432 = !{i64 2155660316}
!9433 = !DILocation(line: 56, column: 9, scope: !9424)
!9434 = !DILocation(line: 56, column: 2, scope: !9424)
!9435 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1090, file: !1090, line: 270, type: !9436, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9438)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{!103, !949, !211}
!9438 = !{!9439, !9440, !9441, !9442, !9443}
!9439 = !DILocalVariable(name: "dev", arg: 1, scope: !9435, file: !1090, line: 270, type: !949)
!9440 = !DILocalVariable(name: "on", arg: 2, scope: !9435, file: !1090, line: 270, type: !211)
!9441 = !DILocalVariable(name: "cfg", scope: !9435, file: !1090, line: 272, type: !8784)
!9442 = !DILocalVariable(name: "ret", scope: !9435, file: !1090, line: 273, type: !103)
!9443 = !DILocalVariable(name: "clk", scope: !9435, file: !1090, line: 278, type: !9074)
!9444 = !DILocation(line: 0, scope: !9435)
!9445 = !DILocation(line: 272, column: 45, scope: !9435)
!9446 = !DILocation(line: 282, column: 38, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !1090, line: 280, column: 10)
!9448 = distinct !DILexicalBlock(scope: !9435, file: !1090, line: 280, column: 6)
!9449 = !DILocation(line: 282, column: 6, scope: !9447)
!9450 = !DILocation(line: 281, column: 9, scope: !9447)
!9451 = !DILocation(line: 293, column: 1, scope: !9435)
!9452 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !9425, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9453)
!9453 = !{!9454}
!9454 = !DILocalVariable(name: "dev", arg: 1, scope: !9452, file: !196, line: 730, type: !949)
!9455 = !DILocation(line: 0, scope: !9452)
!9456 = !DILocation(line: 732, column: 9, scope: !9452)
!9457 = !DILocation(line: 732, column: 2, scope: !9452)
!9458 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1090, file: !1090, line: 496, type: !9459, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !920, retainedNodes: !9461)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{!103, !949, !103, !103, !103}
!9461 = !{!9462, !9463, !9464, !9465, !9466, !9467}
!9462 = !DILocalVariable(name: "dev", arg: 1, scope: !9458, file: !1090, line: 496, type: !949)
!9463 = !DILocalVariable(name: "pin", arg: 2, scope: !9458, file: !1090, line: 496, type: !103)
!9464 = !DILocalVariable(name: "conf", arg: 3, scope: !9458, file: !1090, line: 496, type: !103)
!9465 = !DILocalVariable(name: "func", arg: 4, scope: !9458, file: !1090, line: 496, type: !103)
!9466 = !DILocalVariable(name: "ret", scope: !9458, file: !1090, line: 498, type: !103)
!9467 = !DILocalVariable(name: "gpio_out", scope: !9468, file: !1090, line: 508, type: !137)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !1090, line: 507, column: 27)
!9469 = distinct !DILexicalBlock(scope: !9458, file: !1090, line: 507, column: 6)
!9470 = !DILocation(line: 0, scope: !9458)
!9471 = !DILocation(line: 505, column: 2, scope: !9458)
!9472 = !DILocation(line: 507, column: 11, scope: !9469)
!9473 = !DILocation(line: 507, column: 6, scope: !9458)
!9474 = !DILocation(line: 508, column: 28, scope: !9468)
!9475 = !DILocation(line: 0, scope: !9468)
!9476 = !DILocation(line: 510, column: 16, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9468, file: !1090, line: 510, column: 7)
!9478 = !DILocation(line: 0, scope: !9477)
!9479 = !DILocation(line: 510, column: 7, scope: !9468)
!9480 = !DILocation(line: 511, column: 4, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9477, file: !1090, line: 510, column: 32)
!9482 = !DILocation(line: 512, column: 3, scope: !9481)
!9483 = !DILocation(line: 513, column: 4, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !1090, line: 512, column: 39)
!9485 = distinct !DILexicalBlock(scope: !9477, file: !1090, line: 512, column: 14)
!9486 = !DILocation(line: 514, column: 3, scope: !9484)
!9487 = !DILocation(line: 518, column: 1, scope: !9458)
!9488 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1399, file: !1399, line: 526, type: !1302, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9489)
!9489 = !{!9490, !9491, !9492}
!9490 = !DILocalVariable(name: "dev", arg: 1, scope: !9488, file: !1399, line: 526, type: !1304)
!9491 = !DILocalVariable(name: "c", arg: 2, scope: !9488, file: !1399, line: 526, type: !881)
!9492 = !DILocalVariable(name: "config", scope: !9488, file: !1399, line: 528, type: !9493)
!9493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!9494 = !DILocation(line: 0, scope: !9488)
!9495 = !DILocation(line: 528, column: 48, scope: !9488)
!9496 = !DILocation(line: 531, column: 40, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9488, file: !1399, line: 531, column: 6)
!9498 = !DILocation(line: 531, column: 6, scope: !9497)
!9499 = !DILocation(line: 531, column: 6, scope: !9488)
!9500 = !DILocation(line: 532, column: 34, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9497, file: !1399, line: 531, column: 48)
!9502 = !DILocation(line: 532, column: 3, scope: !9501)
!9503 = !DILocation(line: 533, column: 2, scope: !9501)
!9504 = !DILocation(line: 539, column: 42, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9488, file: !1399, line: 539, column: 6)
!9506 = !DILocation(line: 539, column: 7, scope: !9505)
!9507 = !DILocation(line: 539, column: 6, scope: !9488)
!9508 = !DILocation(line: 543, column: 52, scope: !9488)
!9509 = !DILocation(line: 543, column: 22, scope: !9488)
!9510 = !DILocation(line: 543, column: 5, scope: !9488)
!9511 = !DILocation(line: 545, column: 2, scope: !9488)
!9512 = !DILocation(line: 546, column: 1, scope: !9488)
!9513 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1399, file: !1399, line: 548, type: !1321, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9514)
!9514 = !{!9515, !9516, !9517, !9518}
!9515 = !DILocalVariable(name: "dev", arg: 1, scope: !9513, file: !1399, line: 548, type: !1304)
!9516 = !DILocalVariable(name: "c", arg: 2, scope: !9513, file: !1399, line: 549, type: !209)
!9517 = !DILocalVariable(name: "config", scope: !9513, file: !1399, line: 551, type: !9493)
!9518 = !DILocalVariable(name: "key", scope: !9513, file: !1399, line: 555, type: !32)
!9519 = !DILocation(line: 0, scope: !9513)
!9520 = !DILocation(line: 551, column: 48, scope: !9513)
!9521 = !DILocation(line: 562, column: 2, scope: !9513)
!9522 = !DILocation(line: 563, column: 41, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !1399, line: 563, column: 7)
!9524 = distinct !DILexicalBlock(scope: !9513, file: !1399, line: 562, column: 12)
!9525 = !DILocation(line: 563, column: 7, scope: !9523)
!9526 = !DILocation(line: 563, column: 7, scope: !9524)
!9527 = !DILocation(line: 55, column: 2, scope: !9528, inlinedAt: !9532)
!9528 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9529)
!9529 = !{!9530, !9531}
!9530 = !DILocalVariable(name: "key", scope: !9528, file: !6266, line: 44, type: !32)
!9531 = !DILocalVariable(name: "tmp", scope: !9528, file: !6266, line: 53, type: !32)
!9532 = distinct !DILocation(line: 564, column: 10, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9523, file: !1399, line: 563, column: 49)
!9534 = !{i64 2642358}
!9535 = !DILocation(line: 0, scope: !9528, inlinedAt: !9532)
!9536 = !DILocation(line: 565, column: 42, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !1399, line: 565, column: 8)
!9538 = !DILocation(line: 565, column: 8, scope: !9537)
!9539 = !DILocation(line: 565, column: 8, scope: !9533)
!9540 = !DILocalVariable(name: "key", arg: 1, scope: !9541, file: !6266, line: 84, type: !32)
!9541 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9542)
!9542 = !{!9540}
!9543 = !DILocation(line: 0, scope: !9541, inlinedAt: !9544)
!9544 = distinct !DILocation(line: 568, column: 4, scope: !9533)
!9545 = !DILocation(line: 95, column: 2, scope: !9541, inlinedAt: !9544)
!9546 = !{i64 2643175}
!9547 = !DILocation(line: 569, column: 3, scope: !9533)
!9548 = distinct !{!9548, !9521, !9549}
!9549 = !DILocation(line: 570, column: 2, scope: !9513)
!9550 = !DILocation(line: 592, column: 33, scope: !9513)
!9551 = !DILocation(line: 592, column: 2, scope: !9513)
!9552 = !DILocation(line: 0, scope: !9541, inlinedAt: !9553)
!9553 = distinct !DILocation(line: 593, column: 2, scope: !9513)
!9554 = !DILocation(line: 95, column: 2, scope: !9541, inlinedAt: !9553)
!9555 = !DILocation(line: 594, column: 1, scope: !9513)
!9556 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1399, file: !1399, line: 596, type: !1325, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9557)
!9557 = !{!9558, !9559, !9560}
!9558 = !DILocalVariable(name: "dev", arg: 1, scope: !9556, file: !1399, line: 596, type: !1304)
!9559 = !DILocalVariable(name: "config", scope: !9556, file: !1399, line: 598, type: !9493)
!9560 = !DILocalVariable(name: "err", scope: !9556, file: !1399, line: 599, type: !137)
!9561 = !DILocation(line: 0, scope: !9556)
!9562 = !DILocation(line: 598, column: 48, scope: !9556)
!9563 = !DILocation(line: 606, column: 40, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 606, column: 6)
!9565 = !DILocation(line: 606, column: 6, scope: !9564)
!9566 = !DILocation(line: 606, column: 6, scope: !9556)
!9567 = !DILocation(line: 610, column: 39, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 610, column: 6)
!9569 = !DILocation(line: 610, column: 6, scope: !9568)
!9570 = !DILocation(line: 610, column: 6, scope: !9556)
!9571 = !DILocation(line: 614, column: 39, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 614, column: 6)
!9573 = !DILocation(line: 614, column: 6, scope: !9572)
!9574 = !DILocation(line: 614, column: 6, scope: !9556)
!9575 = !DILocation(line: 619, column: 40, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 619, column: 6)
!9577 = !DILocation(line: 619, column: 6, scope: !9576)
!9578 = !DILocation(line: 619, column: 6, scope: !9556)
!9579 = !DILocation(line: 623, column: 10, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 623, column: 6)
!9581 = !DILocation(line: 623, column: 6, scope: !9556)
!9582 = !DILocation(line: 624, column: 34, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9580, file: !1399, line: 623, column: 24)
!9584 = !DILocation(line: 624, column: 3, scope: !9583)
!9585 = !DILocation(line: 625, column: 2, scope: !9583)
!9586 = !DILocation(line: 632, column: 10, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 632, column: 6)
!9588 = !DILocation(line: 632, column: 6, scope: !9556)
!9589 = !DILocation(line: 633, column: 34, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9587, file: !1399, line: 632, column: 32)
!9591 = !DILocation(line: 633, column: 3, scope: !9590)
!9592 = !DILocation(line: 634, column: 2, scope: !9590)
!9593 = !DILocation(line: 636, column: 10, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 636, column: 6)
!9595 = !DILocation(line: 636, column: 6, scope: !9556)
!9596 = !DILocation(line: 637, column: 33, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9594, file: !1399, line: 636, column: 31)
!9598 = !DILocation(line: 637, column: 3, scope: !9597)
!9599 = !DILocation(line: 638, column: 2, scope: !9597)
!9600 = !DILocation(line: 640, column: 10, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9556, file: !1399, line: 640, column: 6)
!9602 = !DILocation(line: 640, column: 6, scope: !9556)
!9603 = !DILocation(line: 641, column: 33, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9601, file: !1399, line: 640, column: 32)
!9605 = !DILocation(line: 641, column: 3, scope: !9604)
!9606 = !DILocation(line: 642, column: 2, scope: !9604)
!9607 = !DILocation(line: 646, column: 32, scope: !9556)
!9608 = !DILocation(line: 646, column: 2, scope: !9556)
!9609 = !DILocation(line: 648, column: 2, scope: !9556)
!9610 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1399, file: !1399, line: 419, type: !1329, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9611)
!9611 = !{!9612, !9613, !9614, !9615, !9617, !9618, !9619, !9620}
!9612 = !DILocalVariable(name: "dev", arg: 1, scope: !9610, file: !1399, line: 419, type: !1304)
!9613 = !DILocalVariable(name: "cfg", arg: 2, scope: !9610, file: !1399, line: 420, type: !1331)
!9614 = !DILocalVariable(name: "config", scope: !9610, file: !1399, line: 422, type: !9493)
!9615 = !DILocalVariable(name: "data", scope: !9610, file: !1399, line: 423, type: !9616)
!9616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!9617 = !DILocalVariable(name: "parity", scope: !9610, file: !1399, line: 424, type: !6706)
!9618 = !DILocalVariable(name: "stopbits", scope: !9610, file: !1399, line: 425, type: !6706)
!9619 = !DILocalVariable(name: "databits", scope: !9610, file: !1399, line: 426, type: !6706)
!9620 = !DILocalVariable(name: "flowctrl", scope: !9610, file: !1399, line: 428, type: !6706)
!9621 = !DILocation(line: 0, scope: !9610)
!9622 = !DILocation(line: 422, column: 48, scope: !9610)
!9623 = !DILocation(line: 423, column: 38, scope: !9610)
!9624 = !DILocation(line: 424, column: 56, scope: !9610)
!9625 = !DILocation(line: 424, column: 51, scope: !9610)
!9626 = !DILocation(line: 424, column: 26, scope: !9610)
!9627 = !DILocation(line: 425, column: 60, scope: !9610)
!9628 = !DILocation(line: 425, column: 55, scope: !9610)
!9629 = !DILocation(line: 425, column: 28, scope: !9610)
!9630 = !DILocation(line: 426, column: 60, scope: !9610)
!9631 = !DILocation(line: 426, column: 55, scope: !9610)
!9632 = !DILocation(line: 426, column: 28, scope: !9610)
!9633 = !DILocation(line: 428, column: 58, scope: !9610)
!9634 = !DILocation(line: 428, column: 53, scope: !9610)
!9635 = !DILocation(line: 428, column: 28, scope: !9610)
!9636 = !DILocation(line: 431, column: 44, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 431, column: 6)
!9638 = !DILocation(line: 438, column: 22, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 437, column: 6)
!9640 = !DILocation(line: 437, column: 6, scope: !9610)
!9641 = !DILocation(line: 448, column: 6, scope: !9610)
!9642 = !DILocation(line: 465, column: 47, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 465, column: 6)
!9644 = !DILocation(line: 475, column: 21, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 475, column: 6)
!9646 = !DILocation(line: 475, column: 6, scope: !9610)
!9647 = !DILocation(line: 476, column: 8, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9649, file: !1399, line: 476, column: 7)
!9649 = distinct !DILexicalBlock(scope: !9645, file: !1399, line: 475, column: 49)
!9650 = !DILocation(line: 477, column: 34, scope: !9648)
!9651 = !DILocation(line: 476, column: 7, scope: !9649)
!9652 = !DILocation(line: 482, column: 27, scope: !9610)
!9653 = !DILocation(line: 482, column: 2, scope: !9610)
!9654 = !DILocation(line: 484, column: 16, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 484, column: 6)
!9656 = !DILocation(line: 484, column: 13, scope: !9655)
!9657 = !DILocation(line: 484, column: 6, scope: !9610)
!9658 = !DILocation(line: 485, column: 3, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9655, file: !1399, line: 484, column: 44)
!9660 = !DILocation(line: 486, column: 2, scope: !9659)
!9661 = !DILocation(line: 488, column: 18, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 488, column: 6)
!9663 = !DILocation(line: 488, column: 15, scope: !9662)
!9664 = !DILocation(line: 488, column: 6, scope: !9610)
!9665 = !DILocation(line: 489, column: 3, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9662, file: !1399, line: 488, column: 48)
!9667 = !DILocation(line: 490, column: 2, scope: !9666)
!9668 = !DILocation(line: 492, column: 18, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 492, column: 6)
!9670 = !DILocation(line: 492, column: 15, scope: !9669)
!9671 = !DILocation(line: 492, column: 6, scope: !9610)
!9672 = !DILocation(line: 493, column: 3, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9669, file: !1399, line: 492, column: 48)
!9674 = !DILocation(line: 494, column: 2, scope: !9673)
!9675 = !DILocation(line: 496, column: 18, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 496, column: 6)
!9677 = !DILocation(line: 496, column: 15, scope: !9676)
!9678 = !DILocation(line: 496, column: 6, scope: !9610)
!9679 = !DILocation(line: 497, column: 3, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9676, file: !1399, line: 496, column: 46)
!9681 = !DILocation(line: 498, column: 2, scope: !9680)
!9682 = !DILocation(line: 500, column: 11, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9610, file: !1399, line: 500, column: 6)
!9684 = !DILocation(line: 500, column: 29, scope: !9683)
!9685 = !DILocation(line: 500, column: 20, scope: !9683)
!9686 = !DILocation(line: 500, column: 6, scope: !9610)
!9687 = !DILocation(line: 501, column: 3, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9683, file: !1399, line: 500, column: 40)
!9689 = !DILocation(line: 502, column: 26, scope: !9688)
!9690 = !DILocation(line: 502, column: 19, scope: !9688)
!9691 = !DILocation(line: 503, column: 2, scope: !9688)
!9692 = !DILocation(line: 505, column: 26, scope: !9610)
!9693 = !DILocation(line: 505, column: 2, scope: !9610)
!9694 = !DILocation(line: 506, column: 2, scope: !9610)
!9695 = !DILocation(line: 507, column: 1, scope: !9610)
!9696 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1399, file: !1399, line: 509, type: !1342, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9697)
!9697 = !{!9698, !9699, !9700}
!9698 = !DILocalVariable(name: "dev", arg: 1, scope: !9696, file: !1399, line: 509, type: !1304)
!9699 = !DILocalVariable(name: "cfg", arg: 2, scope: !9696, file: !1399, line: 510, type: !1344)
!9700 = !DILocalVariable(name: "data", scope: !9696, file: !1399, line: 512, type: !9616)
!9701 = !DILocation(line: 0, scope: !9696)
!9702 = !DILocation(line: 512, column: 38, scope: !9696)
!9703 = !DILocation(line: 514, column: 24, scope: !9696)
!9704 = !DILocation(line: 514, column: 7, scope: !9696)
!9705 = !DILocation(line: 514, column: 16, scope: !9696)
!9706 = !DILocation(line: 515, column: 41, scope: !9696)
!9707 = !{i32 0, i32 1537}
!9708 = !DILocation(line: 515, column: 16, scope: !9696)
!9709 = !DILocation(line: 515, column: 7, scope: !9696)
!9710 = !DILocation(line: 515, column: 14, scope: !9696)
!9711 = !DILocation(line: 517, column: 3, scope: !9696)
!9712 = !{i32 0, i32 12289}
!9713 = !DILocation(line: 516, column: 19, scope: !9696)
!9714 = !DILocation(line: 516, column: 7, scope: !9696)
!9715 = !DILocation(line: 516, column: 17, scope: !9696)
!9716 = !DILocation(line: 519, column: 3, scope: !9696)
!9717 = !DILocation(line: 519, column: 33, scope: !9696)
!9718 = !DILocation(line: 518, column: 19, scope: !9696)
!9719 = !DILocation(line: 518, column: 7, scope: !9696)
!9720 = !DILocation(line: 518, column: 17, scope: !9696)
!9721 = !DILocation(line: 521, column: 3, scope: !9696)
!9722 = !{i32 0, i32 769}
!9723 = !DILocation(line: 520, column: 19, scope: !9696)
!9724 = !DILocation(line: 520, column: 7, scope: !9696)
!9725 = !DILocation(line: 520, column: 17, scope: !9696)
!9726 = !DILocation(line: 522, column: 2, scope: !9696)
!9727 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1399, file: !1399, line: 205, type: !9728, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9730)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!137, !1304}
!9730 = !{!9731, !9732}
!9731 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !1399, line: 205, type: !1304)
!9732 = !DILocalVariable(name: "config", scope: !9727, file: !1399, line: 207, type: !9493)
!9733 = !DILocation(line: 0, scope: !9727)
!9734 = !DILocation(line: 207, column: 48, scope: !9727)
!9735 = !DILocation(line: 209, column: 36, scope: !9727)
!9736 = !DILocation(line: 209, column: 9, scope: !9727)
!9737 = !DILocation(line: 209, column: 2, scope: !9727)
!9738 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1399, file: !1399, line: 270, type: !9739, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9741)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{!1270, !137}
!9741 = !{!9742}
!9742 = !DILocalVariable(name: "parity", arg: 1, scope: !9738, file: !1399, line: 270, type: !137)
!9743 = !DILocation(line: 0, scope: !9738)
!9744 = !DILocation(line: 272, column: 2, scope: !9738)
!9745 = !DILocation(line: 281, column: 1, scope: !9738)
!9746 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1399, file: !1399, line: 220, type: !9728, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9747)
!9747 = !{!9748, !9749}
!9748 = !DILocalVariable(name: "dev", arg: 1, scope: !9746, file: !1399, line: 220, type: !1304)
!9749 = !DILocalVariable(name: "config", scope: !9746, file: !1399, line: 222, type: !9493)
!9750 = !DILocation(line: 0, scope: !9746)
!9751 = !DILocation(line: 222, column: 48, scope: !9746)
!9752 = !DILocation(line: 224, column: 44, scope: !9746)
!9753 = !DILocation(line: 224, column: 9, scope: !9746)
!9754 = !DILocation(line: 224, column: 2, scope: !9746)
!9755 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1399, file: !1399, line: 304, type: !9756, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9758)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!1284, !137}
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "sb", arg: 1, scope: !9755, file: !1399, line: 304, type: !137)
!9760 = !DILocation(line: 0, scope: !9755)
!9761 = !DILocation(line: 306, column: 2, scope: !9755)
!9762 = !DILocation(line: 0, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9755, file: !1399, line: 306, column: 14)
!9764 = !DILocation(line: 323, column: 1, scope: !9755)
!9765 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1399, file: !1399, line: 235, type: !9728, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9766)
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "dev", arg: 1, scope: !9765, file: !1399, line: 235, type: !1304)
!9768 = !DILocalVariable(name: "config", scope: !9765, file: !1399, line: 237, type: !9493)
!9769 = !DILocation(line: 0, scope: !9765)
!9770 = !DILocation(line: 237, column: 48, scope: !9765)
!9771 = !DILocation(line: 239, column: 39, scope: !9765)
!9772 = !DILocation(line: 239, column: 9, scope: !9765)
!9773 = !DILocation(line: 239, column: 2, scope: !9765)
!9774 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1399, file: !1399, line: 355, type: !9775, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9777)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!1277, !137, !137}
!9777 = !{!9778, !9779}
!9778 = !DILocalVariable(name: "db", arg: 1, scope: !9774, file: !1399, line: 355, type: !137)
!9779 = !DILocalVariable(name: "p", arg: 2, scope: !9774, file: !1399, line: 356, type: !137)
!9780 = !DILocation(line: 0, scope: !9774)
!9781 = !DILocation(line: 358, column: 2, scope: !9774)
!9782 = !DILocation(line: 384, column: 1, scope: !9774)
!9783 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1399, file: !1399, line: 250, type: !9728, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9784)
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "dev", arg: 1, scope: !9783, file: !1399, line: 250, type: !1304)
!9786 = !DILocalVariable(name: "config", scope: !9783, file: !1399, line: 252, type: !9493)
!9787 = !DILocation(line: 0, scope: !9783)
!9788 = !DILocation(line: 252, column: 48, scope: !9783)
!9789 = !DILocation(line: 254, column: 40, scope: !9783)
!9790 = !DILocation(line: 254, column: 9, scope: !9783)
!9791 = !DILocation(line: 254, column: 2, scope: !9783)
!9792 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1399, file: !1399, line: 409, type: !9793, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9795)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!1290, !137}
!9795 = !{!9796}
!9796 = !DILocalVariable(name: "fc", arg: 1, scope: !9792, file: !1399, line: 409, type: !137)
!9797 = !DILocation(line: 0, scope: !9792)
!9798 = !DILocation(line: 411, column: 9, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9792, file: !1399, line: 411, column: 6)
!9800 = !DILocation(line: 416, column: 1, scope: !9792)
!9801 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9802, file: !9802, line: 967, type: !9803, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9805)
!9802 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9803 = !DISubroutineType(types: !9804)
!9804 = !{!137, !1345}
!9805 = !{!9806}
!9806 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9801, file: !9802, line: 967, type: !1345)
!9807 = !DILocation(line: 0, scope: !9801)
!9808 = !DILocation(line: 969, column: 21, scope: !9801)
!9809 = !DILocation(line: 969, column: 3, scope: !9801)
!9810 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9802, file: !9802, line: 601, type: !9803, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9811)
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9810, file: !9802, line: 601, type: !1345)
!9813 = !DILocation(line: 0, scope: !9810)
!9814 = !DILocation(line: 603, column: 21, scope: !9810)
!9815 = !DILocation(line: 603, column: 3, scope: !9810)
!9816 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9802, file: !9802, line: 820, type: !9803, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9817)
!9817 = !{!9818}
!9818 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9816, file: !9802, line: 820, type: !1345)
!9819 = !DILocation(line: 0, scope: !9816)
!9820 = !DILocation(line: 822, column: 21, scope: !9816)
!9821 = !DILocation(line: 822, column: 3, scope: !9816)
!9822 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9802, file: !9802, line: 547, type: !9803, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9823)
!9823 = !{!9824}
!9824 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9822, file: !9802, line: 547, type: !1345)
!9825 = !DILocation(line: 0, scope: !9822)
!9826 = !DILocation(line: 549, column: 21, scope: !9822)
!9827 = !DILocation(line: 549, column: 3, scope: !9822)
!9828 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1399, file: !1399, line: 257, type: !9829, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9831)
!9829 = !DISubroutineType(types: !9830)
!9830 = !{!137, !1270}
!9831 = !{!9832}
!9832 = !DILocalVariable(name: "parity", arg: 1, scope: !9828, file: !1399, line: 257, type: !1270)
!9833 = !DILocation(line: 0, scope: !9828)
!9834 = !DILocation(line: 259, column: 2, scope: !9828)
!9835 = !DILocation(line: 268, column: 1, scope: !9828)
!9836 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1399, file: !1399, line: 283, type: !9837, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9839)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{!137, !1284}
!9839 = !{!9840}
!9840 = !DILocalVariable(name: "sb", arg: 1, scope: !9836, file: !1399, line: 283, type: !1284)
!9841 = !DILocation(line: 0, scope: !9836)
!9842 = !DILocation(line: 285, column: 2, scope: !9836)
!9843 = !DILocation(line: 0, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9836, file: !1399, line: 285, column: 14)
!9845 = !DILocation(line: 302, column: 1, scope: !9836)
!9846 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1399, file: !1399, line: 325, type: !9847, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9849)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!137, !1277, !1270}
!9849 = !{!9850, !9851}
!9850 = !DILocalVariable(name: "db", arg: 1, scope: !9846, file: !1399, line: 325, type: !1277)
!9851 = !DILocalVariable(name: "p", arg: 2, scope: !9846, file: !1399, line: 326, type: !1270)
!9852 = !DILocation(line: 0, scope: !9846)
!9853 = !DILocation(line: 328, column: 2, scope: !9846)
!9854 = !DILocation(line: 353, column: 1, scope: !9846)
!9855 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1399, file: !1399, line: 393, type: !9856, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9858)
!9856 = !DISubroutineType(types: !9857)
!9857 = !{!137, !1290}
!9858 = !{!9859}
!9859 = !DILocalVariable(name: "fc", arg: 1, scope: !9855, file: !1399, line: 393, type: !1290)
!9860 = !DILocation(line: 0, scope: !9855)
!9861 = !DILocation(line: 395, column: 9, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9855, file: !1399, line: 395, column: 6)
!9863 = !DILocation(line: 400, column: 1, scope: !9855)
!9864 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9802, file: !9802, line: 424, type: !9865, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9867)
!9865 = !DISubroutineType(types: !9866)
!9866 = !{null, !1345}
!9867 = !{!9868}
!9868 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9864, file: !9802, line: 424, type: !1345)
!9869 = !DILocation(line: 0, scope: !9864)
!9870 = !DILocation(line: 426, column: 3, scope: !9864)
!9871 = !DILocation(line: 427, column: 1, scope: !9864)
!9872 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1399, file: !1399, line: 197, type: !9873, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9875)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{null, !1304, !137}
!9875 = !{!9876, !9877, !9878}
!9876 = !DILocalVariable(name: "dev", arg: 1, scope: !9872, file: !1399, line: 197, type: !1304)
!9877 = !DILocalVariable(name: "parity", arg: 2, scope: !9872, file: !1399, line: 198, type: !137)
!9878 = !DILocalVariable(name: "config", scope: !9872, file: !1399, line: 200, type: !9493)
!9879 = !DILocation(line: 0, scope: !9872)
!9880 = !DILocation(line: 200, column: 48, scope: !9872)
!9881 = !DILocation(line: 202, column: 29, scope: !9872)
!9882 = !DILocation(line: 202, column: 2, scope: !9872)
!9883 = !DILocation(line: 203, column: 1, scope: !9872)
!9884 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1399, file: !1399, line: 212, type: !9873, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9885)
!9885 = !{!9886, !9887, !9888}
!9886 = !DILocalVariable(name: "dev", arg: 1, scope: !9884, file: !1399, line: 212, type: !1304)
!9887 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9884, file: !1399, line: 213, type: !137)
!9888 = !DILocalVariable(name: "config", scope: !9884, file: !1399, line: 215, type: !9493)
!9889 = !DILocation(line: 0, scope: !9884)
!9890 = !DILocation(line: 215, column: 48, scope: !9884)
!9891 = !DILocation(line: 217, column: 37, scope: !9884)
!9892 = !DILocation(line: 217, column: 2, scope: !9884)
!9893 = !DILocation(line: 218, column: 1, scope: !9884)
!9894 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1399, file: !1399, line: 227, type: !9873, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9895)
!9895 = !{!9896, !9897, !9898}
!9896 = !DILocalVariable(name: "dev", arg: 1, scope: !9894, file: !1399, line: 227, type: !1304)
!9897 = !DILocalVariable(name: "databits", arg: 2, scope: !9894, file: !1399, line: 228, type: !137)
!9898 = !DILocalVariable(name: "config", scope: !9894, file: !1399, line: 230, type: !9493)
!9899 = !DILocation(line: 0, scope: !9894)
!9900 = !DILocation(line: 230, column: 48, scope: !9894)
!9901 = !DILocation(line: 232, column: 32, scope: !9894)
!9902 = !DILocation(line: 232, column: 2, scope: !9894)
!9903 = !DILocation(line: 233, column: 1, scope: !9894)
!9904 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1399, file: !1399, line: 242, type: !9873, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9905)
!9905 = !{!9906, !9907, !9908}
!9906 = !DILocalVariable(name: "dev", arg: 1, scope: !9904, file: !1399, line: 242, type: !1304)
!9907 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9904, file: !1399, line: 243, type: !137)
!9908 = !DILocalVariable(name: "config", scope: !9904, file: !1399, line: 245, type: !9493)
!9909 = !DILocation(line: 0, scope: !9904)
!9910 = !DILocation(line: 245, column: 48, scope: !9904)
!9911 = !DILocation(line: 247, column: 33, scope: !9904)
!9912 = !DILocation(line: 247, column: 2, scope: !9904)
!9913 = !DILocation(line: 248, column: 1, scope: !9904)
!9914 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1399, file: !1399, line: 107, type: !9873, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9915)
!9915 = !{!9916, !9917, !9918, !9919, !9920}
!9916 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !1399, line: 107, type: !1304)
!9917 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9914, file: !1399, line: 107, type: !137)
!9918 = !DILocalVariable(name: "config", scope: !9914, file: !1399, line: 109, type: !9493)
!9919 = !DILocalVariable(name: "data", scope: !9914, file: !1399, line: 110, type: !9616)
!9920 = !DILocalVariable(name: "clock_rate", scope: !9914, file: !1399, line: 112, type: !137)
!9921 = !DILocation(line: 0, scope: !9914)
!9922 = !DILocation(line: 109, column: 48, scope: !9914)
!9923 = !DILocation(line: 110, column: 38, scope: !9914)
!9924 = !DILocation(line: 112, column: 2, scope: !9914)
!9925 = !DILocation(line: 123, column: 36, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !1399, line: 123, column: 7)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !1399, line: 122, column: 9)
!9928 = distinct !DILexicalBlock(scope: !9914, file: !1399, line: 115, column: 6)
!9929 = !DILocation(line: 124, column: 42, scope: !9926)
!9930 = !DILocation(line: 123, column: 7, scope: !9926)
!9931 = !DILocation(line: 125, column: 22, scope: !9926)
!9932 = !DILocation(line: 123, column: 7, scope: !9927)
!9933 = !DILocation(line: 176, column: 36, scope: !9914)
!9934 = !DILocation(line: 176, column: 3, scope: !9914)
!9935 = !DILocation(line: 179, column: 32, scope: !9914)
!9936 = !DILocation(line: 180, column: 10, scope: !9914)
!9937 = !DILocation(line: 179, column: 3, scope: !9914)
!9938 = !DILocation(line: 195, column: 1, scope: !9914)
!9939 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9802, file: !9802, line: 410, type: !9865, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9940)
!9940 = !{!9941}
!9941 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9939, file: !9802, line: 410, type: !1345)
!9942 = !DILocation(line: 0, scope: !9939)
!9943 = !DILocation(line: 412, column: 3, scope: !9939)
!9944 = !DILocation(line: 413, column: 1, scope: !9939)
!9945 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !727, file: !727, line: 216, type: !1378, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9946)
!9946 = !{!9947, !9948, !9949, !9950}
!9947 = !DILocalVariable(name: "dev", arg: 1, scope: !9945, file: !727, line: 216, type: !1304)
!9948 = !DILocalVariable(name: "sys", arg: 2, scope: !9945, file: !727, line: 217, type: !820)
!9949 = !DILocalVariable(name: "rate", arg: 3, scope: !9945, file: !727, line: 218, type: !149)
!9950 = !DILocalVariable(name: "api", scope: !9945, file: !727, line: 220, type: !1356)
!9951 = !DILocation(line: 0, scope: !9945)
!9952 = !DILocation(line: 221, column: 49, scope: !9945)
!9953 = !DILocation(line: 223, column: 11, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9945, file: !727, line: 223, column: 6)
!9955 = !DILocation(line: 223, column: 20, scope: !9954)
!9956 = !DILocation(line: 223, column: 6, scope: !9945)
!9957 = !DILocation(line: 227, column: 9, scope: !9945)
!9958 = !DILocation(line: 227, column: 2, scope: !9945)
!9959 = !DILocation(line: 228, column: 1, scope: !9945)
!9960 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9802, file: !9802, line: 615, type: !9961, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9963)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !1345, !137}
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9960, file: !9802, line: 615, type: !1345)
!9965 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9960, file: !9802, line: 615, type: !137)
!9966 = !DILocation(line: 0, scope: !9960)
!9967 = !DILocation(line: 617, column: 3, scope: !9960)
!9968 = !DILocation(line: 618, column: 1, scope: !9960)
!9969 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9802, file: !9802, line: 1020, type: !9970, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9972)
!9970 = !DISubroutineType(types: !9971)
!9971 = !{null, !1345, !137, !137, !137}
!9972 = !{!9973, !9974, !9975, !9976}
!9973 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9969, file: !9802, line: 1020, type: !1345)
!9974 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9969, file: !9802, line: 1020, type: !137)
!9975 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9969, file: !9802, line: 1020, type: !137)
!9976 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9969, file: !9802, line: 1021, type: !137)
!9977 = !DILocation(line: 0, scope: !9969)
!9978 = !DILocation(line: 1029, column: 30, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !9802, line: 1028, column: 3)
!9980 = distinct !DILexicalBlock(scope: !9969, file: !9802, line: 1023, column: 7)
!9981 = !DILocation(line: 1029, column: 19, scope: !9979)
!9982 = !DILocation(line: 1029, column: 13, scope: !9979)
!9983 = !DILocation(line: 1029, column: 17, scope: !9979)
!9984 = !DILocation(line: 1031, column: 1, scope: !9969)
!9985 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9802, file: !9802, line: 949, type: !9961, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9986)
!9986 = !{!9987, !9988}
!9987 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9985, file: !9802, line: 949, type: !1345)
!9988 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9985, file: !9802, line: 949, type: !137)
!9989 = !DILocation(line: 0, scope: !9985)
!9990 = !DILocation(line: 951, column: 3, scope: !9985)
!9991 = !DILocation(line: 952, column: 1, scope: !9985)
!9992 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9802, file: !9802, line: 588, type: !9961, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !9993)
!9993 = !{!9994, !9995}
!9994 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9992, file: !9802, line: 588, type: !1345)
!9995 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9992, file: !9802, line: 588, type: !137)
!9996 = !DILocation(line: 0, scope: !9992)
!9997 = !DILocation(line: 590, column: 3, scope: !9992)
!9998 = !DILocation(line: 591, column: 1, scope: !9992)
!9999 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9802, file: !9802, line: 805, type: !9961, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10000)
!10000 = !{!10001, !10002}
!10001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9999, file: !9802, line: 805, type: !1345)
!10002 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9999, file: !9802, line: 805, type: !137)
!10003 = !DILocation(line: 0, scope: !9999)
!10004 = !DILocation(line: 807, column: 3, scope: !9999)
!10005 = !DILocation(line: 808, column: 1, scope: !9999)
!10006 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9802, file: !9802, line: 532, type: !9961, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10007)
!10007 = !{!10008, !10009}
!10008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10006, file: !9802, line: 532, type: !1345)
!10009 = !DILocalVariable(name: "Parity", arg: 2, scope: !10006, file: !9802, line: 532, type: !137)
!10010 = !DILocation(line: 0, scope: !10006)
!10011 = !DILocation(line: 534, column: 3, scope: !10006)
!10012 = !DILocation(line: 535, column: 1, scope: !10006)
!10013 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9802, file: !9802, line: 1770, type: !9803, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10014)
!10014 = !{!10015}
!10015 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10013, file: !9802, line: 1770, type: !1345)
!10016 = !DILocation(line: 0, scope: !10013)
!10017 = !DILocation(line: 1772, column: 11, scope: !10013)
!10018 = !DILocation(line: 1772, column: 46, scope: !10013)
!10019 = !DILocation(line: 1772, column: 3, scope: !10013)
!10020 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9802, file: !9802, line: 1737, type: !9803, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10021)
!10021 = !{!10022}
!10022 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10020, file: !9802, line: 1737, type: !1345)
!10023 = !DILocation(line: 0, scope: !10020)
!10024 = !DILocation(line: 1739, column: 11, scope: !10020)
!10025 = !DILocation(line: 1739, column: 3, scope: !10020)
!10026 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9802, file: !9802, line: 1748, type: !9803, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10027)
!10027 = !{!10028}
!10028 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10026, file: !9802, line: 1748, type: !1345)
!10029 = !DILocation(line: 0, scope: !10026)
!10030 = !DILocation(line: 1750, column: 11, scope: !10026)
!10031 = !DILocation(line: 1750, column: 45, scope: !10026)
!10032 = !DILocation(line: 1750, column: 3, scope: !10026)
!10033 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9802, file: !9802, line: 1827, type: !9803, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10034)
!10034 = !{!10035}
!10035 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10033, file: !9802, line: 1827, type: !1345)
!10036 = !DILocation(line: 0, scope: !10033)
!10037 = !DILocation(line: 1829, column: 11, scope: !10033)
!10038 = !DILocation(line: 1829, column: 46, scope: !10033)
!10039 = !DILocation(line: 1829, column: 3, scope: !10033)
!10040 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9802, file: !9802, line: 1992, type: !9865, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10041)
!10041 = !{!10042}
!10042 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10040, file: !9802, line: 1992, type: !1345)
!10043 = !DILocation(line: 0, scope: !10040)
!10044 = !DILocation(line: 1994, column: 3, scope: !10040)
!10045 = !DILocation(line: 1995, column: 1, scope: !10040)
!10046 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9802, file: !9802, line: 1934, type: !9865, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10047)
!10047 = !{!10048, !10049}
!10048 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10046, file: !9802, line: 1934, type: !1345)
!10049 = !DILocalVariable(name: "tmpreg", scope: !10046, file: !9802, line: 1936, type: !176)
!10050 = !DILocation(line: 0, scope: !10046)
!10051 = !DILocation(line: 1936, column: 3, scope: !10046)
!10052 = !DILocation(line: 1936, column: 17, scope: !10046)
!10053 = !DILocation(line: 1937, column: 20, scope: !10046)
!10054 = !DILocation(line: 1937, column: 10, scope: !10046)
!10055 = !DILocation(line: 1938, column: 10, scope: !10046)
!10056 = !DILocation(line: 1939, column: 20, scope: !10046)
!10057 = !DILocation(line: 1939, column: 10, scope: !10046)
!10058 = !DILocation(line: 1940, column: 10, scope: !10046)
!10059 = !DILocation(line: 1941, column: 1, scope: !10046)
!10060 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9802, file: !9802, line: 1877, type: !9865, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10061)
!10061 = !{!10062, !10063}
!10062 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10060, file: !9802, line: 1877, type: !1345)
!10063 = !DILocalVariable(name: "tmpreg", scope: !10060, file: !9802, line: 1879, type: !176)
!10064 = !DILocation(line: 0, scope: !10060)
!10065 = !DILocation(line: 1879, column: 3, scope: !10060)
!10066 = !DILocation(line: 1879, column: 17, scope: !10060)
!10067 = !DILocation(line: 1880, column: 20, scope: !10060)
!10068 = !DILocation(line: 1880, column: 10, scope: !10060)
!10069 = !DILocation(line: 1881, column: 10, scope: !10060)
!10070 = !DILocation(line: 1882, column: 20, scope: !10060)
!10071 = !DILocation(line: 1882, column: 10, scope: !10060)
!10072 = !DILocation(line: 1883, column: 10, scope: !10060)
!10073 = !DILocation(line: 1884, column: 1, scope: !10060)
!10074 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9802, file: !9802, line: 1896, type: !9865, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10075)
!10075 = !{!10076, !10077}
!10076 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10074, file: !9802, line: 1896, type: !1345)
!10077 = !DILocalVariable(name: "tmpreg", scope: !10074, file: !9802, line: 1898, type: !176)
!10078 = !DILocation(line: 0, scope: !10074)
!10079 = !DILocation(line: 1898, column: 3, scope: !10074)
!10080 = !DILocation(line: 1898, column: 17, scope: !10074)
!10081 = !DILocation(line: 1899, column: 20, scope: !10074)
!10082 = !DILocation(line: 1899, column: 10, scope: !10074)
!10083 = !DILocation(line: 1900, column: 10, scope: !10074)
!10084 = !DILocation(line: 1901, column: 20, scope: !10074)
!10085 = !DILocation(line: 1901, column: 10, scope: !10074)
!10086 = !DILocation(line: 1902, column: 10, scope: !10074)
!10087 = !DILocation(line: 1903, column: 1, scope: !10074)
!10088 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9802, file: !9802, line: 1915, type: !9865, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10089)
!10089 = !{!10090, !10091}
!10090 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10088, file: !9802, line: 1915, type: !1345)
!10091 = !DILocalVariable(name: "tmpreg", scope: !10088, file: !9802, line: 1917, type: !176)
!10092 = !DILocation(line: 0, scope: !10088)
!10093 = !DILocation(line: 1917, column: 3, scope: !10088)
!10094 = !DILocation(line: 1917, column: 17, scope: !10088)
!10095 = !DILocation(line: 1918, column: 20, scope: !10088)
!10096 = !DILocation(line: 1918, column: 10, scope: !10088)
!10097 = !DILocation(line: 1919, column: 10, scope: !10088)
!10098 = !DILocation(line: 1920, column: 20, scope: !10088)
!10099 = !DILocation(line: 1920, column: 10, scope: !10088)
!10100 = !DILocation(line: 1921, column: 10, scope: !10088)
!10101 = !DILocation(line: 1922, column: 1, scope: !10088)
!10102 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9802, file: !9802, line: 1814, type: !9803, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10103)
!10103 = !{!10104}
!10104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10102, file: !9802, line: 1814, type: !1345)
!10105 = !DILocation(line: 0, scope: !10102)
!10106 = !DILocation(line: 1816, column: 11, scope: !10102)
!10107 = !DILocation(line: 1816, column: 46, scope: !10102)
!10108 = !DILocation(line: 1816, column: 3, scope: !10102)
!10109 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9802, file: !9802, line: 2426, type: !10110, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{null, !1345, !208}
!10112 = !{!10113, !10114}
!10113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10109, file: !9802, line: 2426, type: !1345)
!10114 = !DILocalVariable(name: "Value", arg: 2, scope: !10109, file: !9802, line: 2426, type: !208)
!10115 = !DILocation(line: 0, scope: !10109)
!10116 = !DILocation(line: 2428, column: 16, scope: !10109)
!10117 = !DILocation(line: 2428, column: 11, scope: !10109)
!10118 = !DILocation(line: 2428, column: 14, scope: !10109)
!10119 = !DILocation(line: 2429, column: 1, scope: !10109)
!10120 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9802, file: !9802, line: 1792, type: !9803, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10121)
!10121 = !{!10122}
!10122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10120, file: !9802, line: 1792, type: !1345)
!10123 = !DILocation(line: 0, scope: !10120)
!10124 = !DILocation(line: 1794, column: 11, scope: !10120)
!10125 = !DILocation(line: 1794, column: 47, scope: !10120)
!10126 = !DILocation(line: 1794, column: 3, scope: !10120)
!10127 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9802, file: !9802, line: 2403, type: !10128, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10130)
!10128 = !DISubroutineType(types: !10129)
!10129 = !{!208, !1345}
!10130 = !{!10131}
!10131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10127, file: !9802, line: 2403, type: !1345)
!10132 = !DILocation(line: 0, scope: !10127)
!10133 = !DILocation(line: 2405, column: 20, scope: !10127)
!10134 = !DILocation(line: 2405, column: 10, scope: !10127)
!10135 = !DILocation(line: 2405, column: 3, scope: !10127)
!10136 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1399, file: !1399, line: 1583, type: !1325, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10137)
!10137 = !{!10138, !10139, !10140, !10141, !10142, !10143}
!10138 = !DILocalVariable(name: "dev", arg: 1, scope: !10136, file: !1399, line: 1583, type: !1304)
!10139 = !DILocalVariable(name: "config", scope: !10136, file: !1399, line: 1585, type: !9493)
!10140 = !DILocalVariable(name: "data", scope: !10136, file: !1399, line: 1586, type: !9616)
!10141 = !DILocalVariable(name: "ll_parity", scope: !10136, file: !1399, line: 1587, type: !137)
!10142 = !DILocalVariable(name: "ll_datawidth", scope: !10136, file: !1399, line: 1588, type: !137)
!10143 = !DILocalVariable(name: "err", scope: !10136, file: !1399, line: 1589, type: !103)
!10144 = !DILocation(line: 0, scope: !10136)
!10145 = !DILocation(line: 1585, column: 48, scope: !10136)
!10146 = !DILocation(line: 1586, column: 38, scope: !10136)
!10147 = !DILocation(line: 1591, column: 2, scope: !10136)
!10148 = !DILocation(line: 1593, column: 29, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10136, file: !1399, line: 1593, column: 6)
!10150 = !DILocation(line: 1593, column: 7, scope: !10149)
!10151 = !DILocation(line: 1593, column: 6, scope: !10136)
!10152 = !DILocation(line: 1599, column: 31, scope: !10136)
!10153 = !DILocation(line: 1599, column: 71, scope: !10136)
!10154 = !DILocation(line: 1599, column: 8, scope: !10136)
!10155 = !DILocation(line: 1600, column: 10, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10136, file: !1399, line: 1600, column: 6)
!10157 = !DILocation(line: 1600, column: 6, scope: !10136)
!10158 = !DILocation(line: 1616, column: 36, scope: !10136)
!10159 = !DILocation(line: 1616, column: 8, scope: !10136)
!10160 = !DILocation(line: 1617, column: 10, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10136, file: !1399, line: 1617, column: 6)
!10162 = !DILocation(line: 1617, column: 6, scope: !10136)
!10163 = !DILocation(line: 1621, column: 27, scope: !10136)
!10164 = !DILocation(line: 1621, column: 2, scope: !10136)
!10165 = !DILocation(line: 1624, column: 40, scope: !10136)
!10166 = !DILocation(line: 1624, column: 2, scope: !10136)
!10167 = !DILocation(line: 1630, column: 14, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10136, file: !1399, line: 1630, column: 6)
!10169 = !DILocation(line: 1630, column: 6, scope: !10136)
!10170 = !DILocation(line: 1638, column: 2, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !1399, line: 1634, column: 34)
!10172 = distinct !DILexicalBlock(scope: !10168, file: !1399, line: 1634, column: 13)
!10173 = !DILocation(line: 0, scope: !10168)
!10174 = !DILocation(line: 1649, column: 35, scope: !10136)
!10175 = !DILocation(line: 1649, column: 2, scope: !10136)
!10176 = !DILocation(line: 1654, column: 14, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10136, file: !1399, line: 1654, column: 6)
!10178 = !DILocation(line: 1654, column: 6, scope: !10136)
!10179 = !DILocation(line: 1655, column: 3, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !1399, line: 1654, column: 31)
!10181 = !DILocation(line: 1656, column: 2, scope: !10180)
!10182 = !DILocation(line: 1659, column: 37, scope: !10136)
!10183 = !DILocation(line: 1659, column: 2, scope: !10136)
!10184 = !DILocation(line: 1662, column: 14, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10136, file: !1399, line: 1662, column: 6)
!10186 = !DILocation(line: 1662, column: 6, scope: !10136)
!10187 = !DILocation(line: 1663, column: 37, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10185, file: !1399, line: 1662, column: 27)
!10189 = !DILocation(line: 1663, column: 3, scope: !10188)
!10190 = !DILocation(line: 1664, column: 2, scope: !10188)
!10191 = !DILocation(line: 1684, column: 26, scope: !10136)
!10192 = !DILocation(line: 1684, column: 2, scope: !10136)
!10193 = !DILocation(line: 1722, column: 2, scope: !10136)
!10194 = !DILocation(line: 1724, column: 1, scope: !10136)
!10195 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1399, file: !1399, line: 651, type: !10196, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10198)
!10196 = !DISubroutineType(types: !10197)
!10197 = !{null, !1304}
!10198 = !{!10199, !10200, !10201}
!10199 = !DILocalVariable(name: "dev", arg: 1, scope: !10195, file: !1399, line: 651, type: !1304)
!10200 = !DILocalVariable(name: "data", scope: !10195, file: !1399, line: 653, type: !9616)
!10201 = !DILocalVariable(name: "clk", scope: !10195, file: !1399, line: 654, type: !10202)
!10202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1304)
!10203 = !DILocation(line: 0, scope: !10195)
!10204 = !DILocation(line: 653, column: 38, scope: !10195)
!10205 = !DILocation(line: 656, column: 8, scope: !10195)
!10206 = !DILocation(line: 656, column: 14, scope: !10195)
!10207 = !DILocation(line: 657, column: 1, scope: !10195)
!10208 = distinct !DISubprogram(name: "device_is_ready", scope: !8631, file: !8631, line: 47, type: !10209, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10211)
!10209 = !DISubroutineType(types: !10210)
!10210 = !{!211, !1304}
!10211 = !{!10212}
!10212 = !DILocalVariable(name: "dev", arg: 1, scope: !10208, file: !8631, line: 47, type: !1304)
!10213 = !DILocation(line: 0, scope: !10208)
!10214 = !DILocation(line: 55, column: 2, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10208, file: !8631, line: 55, column: 2)
!10216 = !{i64 2155751479}
!10217 = !DILocation(line: 56, column: 9, scope: !10208)
!10218 = !DILocation(line: 56, column: 2, scope: !10208)
!10219 = distinct !DISubprogram(name: "clock_control_on", scope: !727, file: !727, line: 123, type: !1363, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10220)
!10220 = !{!10221, !10222, !10223}
!10221 = !DILocalVariable(name: "dev", arg: 1, scope: !10219, file: !727, line: 123, type: !1304)
!10222 = !DILocalVariable(name: "sys", arg: 2, scope: !10219, file: !727, line: 124, type: !820)
!10223 = !DILocalVariable(name: "api", scope: !10219, file: !727, line: 126, type: !1356)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 127, column: 49, scope: !10219)
!10226 = !DILocation(line: 129, column: 14, scope: !10219)
!10227 = !DILocation(line: 129, column: 9, scope: !10219)
!10228 = !DILocation(line: 129, column: 2, scope: !10219)
!10229 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1456, file: !1456, line: 342, type: !10230, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10232)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!103, !1506, !208}
!10232 = !{!10233, !10234, !10235, !10236}
!10233 = !DILocalVariable(name: "config", arg: 1, scope: !10229, file: !1456, line: 342, type: !1506)
!10234 = !DILocalVariable(name: "id", arg: 2, scope: !10229, file: !1456, line: 343, type: !208)
!10235 = !DILocalVariable(name: "ret", scope: !10229, file: !1456, line: 345, type: !103)
!10236 = !DILocalVariable(name: "state", scope: !10229, file: !1456, line: 346, type: !1459)
!10237 = !DILocation(line: 0, scope: !10229)
!10238 = !DILocation(line: 346, column: 2, scope: !10229)
!10239 = !DILocation(line: 348, column: 8, scope: !10229)
!10240 = !DILocation(line: 349, column: 10, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10229, file: !1456, line: 349, column: 6)
!10242 = !DILocation(line: 349, column: 6, scope: !10229)
!10243 = !DILocation(line: 353, column: 44, scope: !10229)
!10244 = !DILocation(line: 353, column: 9, scope: !10229)
!10245 = !DILocation(line: 353, column: 2, scope: !10229)
!10246 = !DILocation(line: 354, column: 1, scope: !10229)
!10247 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9802, file: !9802, line: 497, type: !9961, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10248)
!10248 = !{!10249, !10250, !10251}
!10249 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10247, file: !9802, line: 497, type: !1345)
!10250 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10247, file: !9802, line: 497, type: !137)
!10251 = !DILocalVariable(name: "val", scope: !10252, file: !9802, line: 499, type: !137)
!10252 = distinct !DILexicalBlock(scope: !10247, file: !9802, line: 499, column: 3)
!10253 = !DILocation(line: 0, scope: !10247)
!10254 = !DILocation(line: 499, column: 3, scope: !10252)
!10255 = !DILocalVariable(name: "addr", arg: 1, scope: !10256, file: !6440, line: 476, type: !1395)
!10256 = distinct !DISubprogram(name: "__LDREXW", scope: !6440, file: !6440, line: 476, type: !10257, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10259)
!10257 = !DISubroutineType(types: !10258)
!10258 = !{!137, !1395}
!10259 = !{!10255, !10260}
!10260 = !DILocalVariable(name: "result", scope: !10256, file: !6440, line: 478, type: !137)
!10261 = !DILocation(line: 0, scope: !10256, inlinedAt: !10262)
!10262 = distinct !DILocation(line: 499, column: 3, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10252, file: !9802, line: 499, column: 3)
!10264 = !DILocation(line: 480, column: 4, scope: !10256, inlinedAt: !10262)
!10265 = !{i64 4142772}
!10266 = !DILocation(line: 499, column: 3, scope: !10263)
!10267 = !DILocation(line: 0, scope: !10252)
!10268 = !DILocalVariable(name: "value", arg: 1, scope: !10269, file: !6440, line: 527, type: !137)
!10269 = distinct !DISubprogram(name: "__STREXW", scope: !6440, file: !6440, line: 527, type: !10270, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10272)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!137, !137, !1395}
!10272 = !{!10268, !10273, !10274}
!10273 = !DILocalVariable(name: "addr", arg: 2, scope: !10269, file: !6440, line: 527, type: !1395)
!10274 = !DILocalVariable(name: "result", scope: !10269, file: !6440, line: 529, type: !137)
!10275 = !DILocation(line: 0, scope: !10269, inlinedAt: !10276)
!10276 = distinct !DILocation(line: 499, column: 3, scope: !10252)
!10277 = !DILocation(line: 531, column: 4, scope: !10269, inlinedAt: !10276)
!10278 = !{i64 4144208}
!10279 = distinct !{!10279, !10254, !10254}
!10280 = !DILocation(line: 500, column: 1, scope: !10247)
!10281 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9802, file: !9802, line: 850, type: !9970, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10282)
!10282 = !{!10283, !10284, !10285, !10286}
!10283 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10281, file: !9802, line: 850, type: !1345)
!10284 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10281, file: !9802, line: 850, type: !137)
!10285 = !DILocalVariable(name: "Parity", arg: 3, scope: !10281, file: !9802, line: 850, type: !137)
!10286 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10281, file: !9802, line: 851, type: !137)
!10287 = !DILocation(line: 0, scope: !10281)
!10288 = !DILocation(line: 853, column: 3, scope: !10281)
!10289 = !DILocation(line: 854, column: 3, scope: !10281)
!10290 = !DILocation(line: 855, column: 1, scope: !10281)
!10291 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9802, file: !9802, line: 1337, type: !9865, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10292)
!10292 = !{!10293}
!10293 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10291, file: !9802, line: 1337, type: !1345)
!10294 = !DILocation(line: 0, scope: !10291)
!10295 = !DILocation(line: 1339, column: 3, scope: !10291)
!10296 = !DILocation(line: 1340, column: 1, scope: !10291)
!10297 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1456, file: !1456, line: 316, type: !10298, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10300)
!10298 = !DISubroutineType(types: !10299)
!10299 = !{!103, !1506, !1459}
!10300 = !{!10301, !10302, !10303}
!10301 = !DILocalVariable(name: "config", arg: 1, scope: !10297, file: !1456, line: 317, type: !1506)
!10302 = !DILocalVariable(name: "state", arg: 2, scope: !10297, file: !1456, line: 318, type: !1459)
!10303 = !DILocalVariable(name: "reg", scope: !10297, file: !1456, line: 320, type: !22)
!10304 = !DILocation(line: 0, scope: !10297)
!10305 = !DILocation(line: 329, column: 39, scope: !10297)
!10306 = !DILocation(line: 329, column: 52, scope: !10297)
!10307 = !DILocation(line: 329, column: 9, scope: !10297)
!10308 = !DILocation(line: 329, column: 2, scope: !10297)
!10309 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10209, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1260, retainedNodes: !10310)
!10310 = !{!10311}
!10311 = !DILocalVariable(name: "dev", arg: 1, scope: !10309, file: !196, line: 730, type: !1304)
!10312 = !DILocation(line: 0, scope: !10309)
!10313 = !DILocation(line: 732, column: 9, scope: !10309)
!10314 = !DILocation(line: 732, column: 2, scope: !10309)
!10315 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1635, file: !1635, line: 270, type: !1641, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10316)
!10316 = !{!10317}
!10317 = !DILocalVariable(name: "dev", arg: 1, scope: !10315, file: !1635, line: 270, type: !1643)
!10318 = !DILocation(line: 0, scope: !10315)
!10319 = !DILocation(line: 274, column: 2, scope: !10315)
!10320 = !DILocation(line: 275, column: 12, scope: !10315)
!10321 = !DILocation(line: 276, column: 15, scope: !10315)
!10322 = !DILocation(line: 277, column: 16, scope: !10315)
!10323 = !DILocation(line: 278, column: 15, scope: !10315)
!10324 = !DILocation(line: 279, column: 16, scope: !10315)
!10325 = !DILocation(line: 282, column: 2, scope: !10315)
!10326 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6474, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10327)
!10327 = !{!10328, !10329}
!10328 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10326, file: !402, line: 1814, type: !669)
!10329 = !DILocalVariable(name: "priority", arg: 2, scope: !10326, file: !402, line: 1814, type: !137)
!10330 = !DILocation(line: 0, scope: !10326)
!10331 = !DILocation(line: 1822, column: 46, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !402, line: 1821, column: 3)
!10333 = distinct !DILexicalBlock(scope: !10326, file: !402, line: 1816, column: 7)
!10334 = !DILocation(line: 1824, column: 1, scope: !10326)
!10335 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1635, file: !1635, line: 118, type: !6377, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10336)
!10336 = !{!10337, !10338}
!10337 = !DILocalVariable(name: "arg", arg: 1, scope: !10335, file: !1635, line: 118, type: !102)
!10338 = !DILocalVariable(name: "dticks", scope: !10335, file: !1635, line: 121, type: !137)
!10339 = !DILocation(line: 0, scope: !10335)
!10340 = !DILocation(line: 124, column: 2, scope: !10335)
!10341 = !DILocation(line: 129, column: 17, scope: !10335)
!10342 = !DILocation(line: 129, column: 14, scope: !10335)
!10343 = !DILocation(line: 130, column: 15, scope: !10335)
!10344 = !DILocation(line: 145, column: 27, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !1635, line: 132, column: 16)
!10346 = distinct !DILexicalBlock(scope: !10335, file: !1635, line: 132, column: 6)
!10347 = !DILocation(line: 145, column: 25, scope: !10345)
!10348 = !DILocation(line: 145, column: 45, scope: !10345)
!10349 = !DILocation(line: 146, column: 30, scope: !10345)
!10350 = !DILocation(line: 146, column: 20, scope: !10345)
!10351 = !DILocation(line: 147, column: 3, scope: !10345)
!10352 = !DILocation(line: 151, column: 2, scope: !10335)
!10353 = !DILocation(line: 152, column: 1, scope: !10335)
!10354 = distinct !DISubprogram(name: "elapsed", scope: !1635, file: !1635, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10355)
!10355 = !{!10356, !10357, !10358}
!10356 = !DILocalVariable(name: "val1", scope: !10354, file: !1635, line: 87, type: !137)
!10357 = !DILocalVariable(name: "ctrl", scope: !10354, file: !1635, line: 88, type: !137)
!10358 = !DILocalVariable(name: "val2", scope: !10354, file: !1635, line: 89, type: !137)
!10359 = !DILocation(line: 87, column: 27, scope: !10354)
!10360 = !DILocation(line: 0, scope: !10354)
!10361 = !DILocation(line: 88, column: 27, scope: !10354)
!10362 = !DILocation(line: 89, column: 27, scope: !10354)
!10363 = !DILocation(line: 105, column: 12, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10354, file: !1635, line: 105, column: 6)
!10365 = !DILocation(line: 106, column: 6, scope: !10364)
!10366 = !DILocation(line: 107, column: 16, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10364, file: !1635, line: 106, column: 24)
!10368 = !DILocation(line: 111, column: 18, scope: !10367)
!10369 = !DILocation(line: 112, column: 2, scope: !10367)
!10370 = !DILocation(line: 114, column: 20, scope: !10354)
!10371 = !DILocation(line: 114, column: 30, scope: !10354)
!10372 = !DILocation(line: 114, column: 28, scope: !10354)
!10373 = !DILocation(line: 114, column: 2, scope: !10354)
!10374 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1635, file: !1635, line: 154, type: !10375, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10377)
!10375 = !DISubroutineType(types: !10376)
!10376 = !{null, !643, !211}
!10377 = !{!10378, !10379, !10380, !10381, !10382, !10383, !10384, !10389, !10390}
!10378 = !DILocalVariable(name: "ticks", arg: 1, scope: !10374, file: !1635, line: 154, type: !643)
!10379 = !DILocalVariable(name: "idle", arg: 2, scope: !10374, file: !1635, line: 154, type: !211)
!10380 = !DILocalVariable(name: "delay", scope: !10374, file: !1635, line: 169, type: !137)
!10381 = !DILocalVariable(name: "val1", scope: !10374, file: !1635, line: 170, type: !137)
!10382 = !DILocalVariable(name: "val2", scope: !10374, file: !1635, line: 170, type: !137)
!10383 = !DILocalVariable(name: "last_load_", scope: !10374, file: !1635, line: 171, type: !137)
!10384 = !DILocalVariable(name: "key", scope: !10374, file: !1635, line: 176, type: !10385)
!10385 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !10386)
!10386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !10387)
!10387 = !{!10388}
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10386, file: !368, line: 33, baseType: !103, size: 32)
!10389 = !DILocalVariable(name: "pending", scope: !10374, file: !1635, line: 178, type: !137)
!10390 = !DILocalVariable(name: "unannounced", scope: !10374, file: !1635, line: 185, type: !137)
!10391 = !DILocation(line: 0, scope: !10374)
!10392 = !DILocation(line: 162, column: 49, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10374, file: !1635, line: 162, column: 6)
!10394 = !DILocation(line: 163, column: 17, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10393, file: !1635, line: 162, column: 78)
!10396 = !DILocation(line: 164, column: 13, scope: !10395)
!10397 = !DILocation(line: 165, column: 3, scope: !10395)
!10398 = !DILocation(line: 171, column: 24, scope: !10374)
!10399 = !DILocation(line: 173, column: 10, scope: !10374)
!10400 = !DILocation(line: 174, column: 10, scope: !10374)
!10401 = !DILocalVariable(name: "l", arg: 1, scope: !10402, file: !368, line: 136, type: !10405)
!10402 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !10403, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10406)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!10385, !10405}
!10405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!10406 = !{!10401, !10407}
!10407 = !DILocalVariable(name: "k", scope: !10402, file: !368, line: 139, type: !10385)
!10408 = !DILocation(line: 0, scope: !10402, inlinedAt: !10409)
!10409 = distinct !DILocation(line: 176, column: 25, scope: !10374)
!10410 = !DILocation(line: 55, column: 2, scope: !10411, inlinedAt: !10415)
!10411 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10412)
!10412 = !{!10413, !10414}
!10413 = !DILocalVariable(name: "key", scope: !10411, file: !6266, line: 44, type: !32)
!10414 = !DILocalVariable(name: "tmp", scope: !10411, file: !6266, line: 53, type: !32)
!10415 = distinct !DILocation(line: 145, column: 10, scope: !10402, inlinedAt: !10409)
!10416 = !{i64 2599580}
!10417 = !DILocation(line: 0, scope: !10411, inlinedAt: !10415)
!10418 = !DILocation(line: 178, column: 21, scope: !10374)
!10419 = !DILocation(line: 180, column: 18, scope: !10374)
!10420 = !DILocation(line: 182, column: 14, scope: !10374)
!10421 = !DILocation(line: 183, column: 15, scope: !10374)
!10422 = !DILocation(line: 185, column: 39, scope: !10374)
!10423 = !DILocation(line: 185, column: 37, scope: !10374)
!10424 = !DILocation(line: 187, column: 27, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10374, file: !1635, line: 187, column: 6)
!10426 = !DILocation(line: 187, column: 6, scope: !10374)
!10427 = !DILocation(line: 202, column: 27, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10425, file: !1635, line: 195, column: 9)
!10429 = !DILocation(line: 202, column: 48, scope: !10428)
!10430 = !DILocation(line: 203, column: 9, scope: !10428)
!10431 = !DILocation(line: 204, column: 11, scope: !10428)
!10432 = !DILocation(line: 205, column: 13, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10428, file: !1635, line: 205, column: 7)
!10434 = !DILocation(line: 205, column: 7, scope: !10428)
!10435 = !DILocation(line: 0, scope: !10425)
!10436 = !DILocation(line: 212, column: 18, scope: !10374)
!10437 = !DILocation(line: 214, column: 28, scope: !10374)
!10438 = !DILocation(line: 214, column: 16, scope: !10374)
!10439 = !DILocation(line: 215, column: 15, scope: !10374)
!10440 = !DILocation(line: 227, column: 11, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10374, file: !1635, line: 227, column: 6)
!10442 = !DILocation(line: 227, column: 6, scope: !10374)
!10443 = !DILocation(line: 228, column: 15, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10441, file: !1635, line: 227, column: 19)
!10445 = !DILocation(line: 228, column: 38, scope: !10444)
!10446 = !DILocation(line: 228, column: 24, scope: !10444)
!10447 = !DILocation(line: 229, column: 2, scope: !10444)
!10448 = !DILocation(line: 230, column: 24, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10441, file: !1635, line: 229, column: 9)
!10450 = !DILocation(line: 230, column: 15, scope: !10449)
!10451 = !DILocation(line: 0, scope: !10441)
!10452 = !DILocalVariable(name: "key", arg: 2, scope: !10453, file: !368, line: 190, type: !10385)
!10453 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !10454, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10456)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{null, !10405, !10385}
!10456 = !{!10457, !10452}
!10457 = !DILocalVariable(name: "l", arg: 1, scope: !10453, file: !368, line: 189, type: !10405)
!10458 = !DILocation(line: 0, scope: !10453, inlinedAt: !10459)
!10459 = distinct !DILocation(line: 232, column: 2, scope: !10374)
!10460 = !DILocalVariable(name: "key", arg: 1, scope: !10461, file: !6266, line: 84, type: !32)
!10461 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10462)
!10462 = !{!10460}
!10463 = !DILocation(line: 0, scope: !10461, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 215, column: 2, scope: !10453, inlinedAt: !10459)
!10465 = !DILocation(line: 95, column: 2, scope: !10461, inlinedAt: !10464)
!10466 = !{i64 2600397}
!10467 = !DILocation(line: 234, column: 1, scope: !10374)
!10468 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1635, file: !1635, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10469)
!10469 = !{!10470, !10471}
!10470 = !DILocalVariable(name: "key", scope: !10468, file: !1635, line: 242, type: !10385)
!10471 = !DILocalVariable(name: "cyc", scope: !10468, file: !1635, line: 243, type: !137)
!10472 = !DILocation(line: 0, scope: !10402, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 242, column: 25, scope: !10468)
!10474 = !DILocation(line: 55, column: 2, scope: !10411, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 145, column: 10, scope: !10402, inlinedAt: !10473)
!10476 = !DILocation(line: 0, scope: !10411, inlinedAt: !10475)
!10477 = !DILocation(line: 0, scope: !10468)
!10478 = !DILocation(line: 243, column: 17, scope: !10468)
!10479 = !DILocation(line: 243, column: 29, scope: !10468)
!10480 = !DILocation(line: 243, column: 27, scope: !10468)
!10481 = !DILocation(line: 243, column: 43, scope: !10468)
!10482 = !DILocation(line: 243, column: 41, scope: !10468)
!10483 = !DILocation(line: 0, scope: !10453, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 245, column: 2, scope: !10468)
!10485 = !DILocation(line: 0, scope: !10461, inlinedAt: !10486)
!10486 = distinct !DILocation(line: 215, column: 2, scope: !10453, inlinedAt: !10484)
!10487 = !DILocation(line: 95, column: 2, scope: !10461, inlinedAt: !10486)
!10488 = !DILocation(line: 246, column: 13, scope: !10468)
!10489 = !DILocation(line: 246, column: 2, scope: !10468)
!10490 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1635, file: !1635, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10491)
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "key", scope: !10490, file: !1635, line: 251, type: !10385)
!10493 = !DILocalVariable(name: "ret", scope: !10490, file: !1635, line: 252, type: !137)
!10494 = !DILocation(line: 0, scope: !10402, inlinedAt: !10495)
!10495 = distinct !DILocation(line: 251, column: 25, scope: !10490)
!10496 = !DILocation(line: 55, column: 2, scope: !10411, inlinedAt: !10497)
!10497 = distinct !DILocation(line: 145, column: 10, scope: !10402, inlinedAt: !10495)
!10498 = !DILocation(line: 0, scope: !10411, inlinedAt: !10497)
!10499 = !DILocation(line: 0, scope: !10490)
!10500 = !DILocation(line: 252, column: 17, scope: !10490)
!10501 = !DILocation(line: 252, column: 29, scope: !10490)
!10502 = !DILocation(line: 252, column: 27, scope: !10490)
!10503 = !DILocation(line: 0, scope: !10453, inlinedAt: !10504)
!10504 = distinct !DILocation(line: 254, column: 2, scope: !10490)
!10505 = !DILocation(line: 0, scope: !10461, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 215, column: 2, scope: !10453, inlinedAt: !10504)
!10507 = !DILocation(line: 95, column: 2, scope: !10461, inlinedAt: !10506)
!10508 = !DILocation(line: 255, column: 2, scope: !10490)
!10509 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1635, file: !1635, line: 258, type: !2964, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !162)
!10510 = !DILocation(line: 260, column: 6, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10509, file: !1635, line: 260, column: 6)
!10512 = !DILocation(line: 260, column: 16, scope: !10511)
!10513 = !DILocation(line: 260, column: 6, scope: !10509)
!10514 = !DILocation(line: 261, column: 17, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10511, file: !1635, line: 260, column: 34)
!10516 = !DILocation(line: 262, column: 2, scope: !10515)
!10517 = !DILocation(line: 263, column: 1, scope: !10509)
!10518 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1635, file: !1635, line: 265, type: !2964, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !162)
!10519 = !DILocation(line: 267, column: 16, scope: !10518)
!10520 = !DILocation(line: 268, column: 1, scope: !10518)
!10521 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10522, file: !10522, line: 9, type: !10523, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !10546)
!10522 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10523 = !DISubroutineType(types: !10524)
!10524 = !{!103, !10525, !208, !10545}
!10525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10526, size: 32)
!10526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10527)
!10527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1456, line: 60, size: 64, elements: !10528)
!10528 = !{!10529, !10544}
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10527, file: !1456, line: 69, baseType: !10530, size: 32)
!10530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10531, size: 32)
!10531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10532)
!10532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1456, line: 50, size: 64, elements: !10533)
!10533 = !{!10534, !10542, !10543}
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10532, file: !1456, line: 52, baseType: !10535, size: 32)
!10535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10536, size: 32)
!10536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10537)
!10537 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1467, line: 37, baseType: !10538)
!10538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1467, line: 32, size: 64, elements: !10539)
!10539 = !{!10540, !10541}
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10538, file: !1467, line: 34, baseType: !137, size: 32)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10538, file: !1467, line: 36, baseType: !137, size: 32, offset: 32)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10532, file: !1456, line: 54, baseType: !208, size: 8, offset: 32)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10532, file: !1456, line: 56, baseType: !208, size: 8, offset: 40)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10527, file: !1456, line: 71, baseType: !208, size: 8, offset: 32)
!10545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10530, size: 32)
!10546 = !{!10547, !10548, !10549}
!10547 = !DILocalVariable(name: "config", arg: 1, scope: !10521, file: !10522, line: 9, type: !10525)
!10548 = !DILocalVariable(name: "id", arg: 2, scope: !10521, file: !10522, line: 9, type: !208)
!10549 = !DILocalVariable(name: "state", arg: 3, scope: !10521, file: !10522, line: 10, type: !10545)
!10550 = !DILocation(line: 0, scope: !10521)
!10551 = !DILocation(line: 12, column: 20, scope: !10521)
!10552 = !DILocation(line: 13, column: 27, scope: !10521)
!10553 = !DILocation(line: 13, column: 42, scope: !10521)
!10554 = !DILocation(line: 13, column: 19, scope: !10521)
!10555 = !DILocation(line: 13, column: 16, scope: !10521)
!10556 = !DILocation(line: 13, column: 2, scope: !10521)
!10557 = distinct !{!10557, !10556, !10558}
!10558 = !DILocation(line: 19, column: 2, scope: !10521)
!10559 = !DILocation(line: 14, column: 23, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !10522, line: 14, column: 7)
!10561 = distinct !DILexicalBlock(scope: !10521, file: !10522, line: 13, column: 54)
!10562 = !DILocation(line: 14, column: 10, scope: !10560)
!10563 = !DILocation(line: 18, column: 11, scope: !10561)
!10564 = !DILocation(line: 14, column: 7, scope: !10561)
!10565 = !DILocation(line: 22, column: 1, scope: !10521)
!10566 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1752, file: !1752, line: 193, type: !10567, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1670, retainedNodes: !10576)
!10567 = !DISubroutineType(types: !10568)
!10568 = !{!103, !10569, !208, !22}
!10569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10570, size: 32)
!10570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10571)
!10571 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1467, line: 37, baseType: !10572)
!10572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1467, line: 32, size: 64, elements: !10573)
!10573 = !{!10574, !10575}
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10572, file: !1467, line: 34, baseType: !137, size: 32)
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10572, file: !1467, line: 36, baseType: !137, size: 32, offset: 32)
!10576 = !{!10577, !10578, !10579, !10580, !10581, !10582, !10583, !10584, !10586}
!10577 = !DILocalVariable(name: "pins", arg: 1, scope: !10566, file: !1752, line: 193, type: !10569)
!10578 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10566, file: !1752, line: 193, type: !208)
!10579 = !DILocalVariable(name: "reg", arg: 3, scope: !10566, file: !1752, line: 194, type: !22)
!10580 = !DILocalVariable(name: "pin", scope: !10566, file: !1752, line: 196, type: !137)
!10581 = !DILocalVariable(name: "mux", scope: !10566, file: !1752, line: 196, type: !137)
!10582 = !DILocalVariable(name: "pin_cgf", scope: !10566, file: !1752, line: 197, type: !137)
!10583 = !DILocalVariable(name: "ret", scope: !10566, file: !1752, line: 198, type: !103)
!10584 = !DILocalVariable(name: "i", scope: !10585, file: !1752, line: 209, type: !208)
!10585 = distinct !DILexicalBlock(scope: !10566, file: !1752, line: 209, column: 2)
!10586 = !DILocalVariable(name: "gpio_out", scope: !10587, file: !1752, line: 239, type: !137)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !1752, line: 238, column: 55)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !1752, line: 238, column: 14)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !1752, line: 236, column: 14)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !1752, line: 234, column: 7)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !1752, line: 209, column: 41)
!10592 = distinct !DILexicalBlock(scope: !10585, file: !1752, line: 209, column: 2)
!10593 = !DILocation(line: 0, scope: !10566)
!10594 = !DILocation(line: 0, scope: !10585)
!10595 = !DILocation(line: 209, column: 25, scope: !10592)
!10596 = !DILocation(line: 209, column: 2, scope: !10585)
!10597 = distinct !{!10597, !10596, !10598}
!10598 = !DILocation(line: 259, column: 2, scope: !10585)
!10599 = !DILocation(line: 210, column: 17, scope: !10591)
!10600 = !DILocation(line: 234, column: 7, scope: !10590)
!10601 = !DILocation(line: 234, column: 33, scope: !10590)
!10602 = !DILocation(line: 234, column: 7, scope: !10591)
!10603 = !DILocation(line: 235, column: 22, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10590, file: !1752, line: 234, column: 49)
!10605 = !DILocation(line: 235, column: 29, scope: !10604)
!10606 = !DILocation(line: 236, column: 3, scope: !10604)
!10607 = !DILocation(line: 236, column: 14, scope: !10590)
!10608 = !DILocation(line: 239, column: 32, scope: !10587)
!10609 = !DILocation(line: 0, scope: !10587)
!10610 = !DILocation(line: 241, column: 8, scope: !10587)
!10611 = !DILocation(line: 246, column: 3, scope: !10587)
!10612 = !DILocation(line: 252, column: 9, scope: !10591)
!10613 = !DILocation(line: 255, column: 9, scope: !10591)
!10614 = !DILocation(line: 256, column: 11, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10591, file: !1752, line: 256, column: 7)
!10616 = !DILocation(line: 209, column: 37, scope: !10592)
!10617 = !DILocation(line: 256, column: 7, scope: !10591)
!10618 = !DILocation(line: 262, column: 1, scope: !10566)
!10619 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1752, file: !1752, line: 176, type: !10620, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1670, retainedNodes: !10622)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!103, !137, !137, !137}
!10622 = !{!10623, !10624, !10625, !10626}
!10623 = !DILocalVariable(name: "pin", arg: 1, scope: !10619, file: !1752, line: 176, type: !137)
!10624 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10619, file: !1752, line: 176, type: !137)
!10625 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10619, file: !1752, line: 176, type: !137)
!10626 = !DILocalVariable(name: "port_device", scope: !10619, file: !1752, line: 178, type: !1682)
!10627 = !DILocation(line: 0, scope: !10619)
!10628 = !DILocation(line: 180, column: 22, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10619, file: !1752, line: 180, column: 6)
!10630 = !DILocation(line: 180, column: 6, scope: !10619)
!10631 = !DILocation(line: 180, column: 6, scope: !10629)
!10632 = !DILocation(line: 184, column: 16, scope: !10619)
!10633 = !DILocation(line: 186, column: 33, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10619, file: !1752, line: 186, column: 6)
!10635 = !DILocation(line: 186, column: 6, scope: !10619)
!10636 = !DILocation(line: 190, column: 43, scope: !10619)
!10637 = !DILocation(line: 190, column: 9, scope: !10619)
!10638 = !DILocation(line: 190, column: 2, scope: !10619)
!10639 = !DILocation(line: 191, column: 1, scope: !10619)
!10640 = distinct !DISubprogram(name: "device_is_ready", scope: !8631, file: !8631, line: 47, type: !10641, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1670, retainedNodes: !10643)
!10641 = !DISubroutineType(types: !10642)
!10642 = !{!211, !1682}
!10643 = !{!10644}
!10644 = !DILocalVariable(name: "dev", arg: 1, scope: !10640, file: !8631, line: 47, type: !1682)
!10645 = !DILocation(line: 0, scope: !10640)
!10646 = !DILocation(line: 55, column: 2, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10640, file: !8631, line: 55, column: 2)
!10648 = !{i64 2149833586}
!10649 = !DILocation(line: 56, column: 9, scope: !10640)
!10650 = !DILocation(line: 56, column: 2, scope: !10640)
!10651 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10641, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1670, retainedNodes: !10652)
!10652 = !{!10653}
!10653 = !DILocalVariable(name: "dev", arg: 1, scope: !10651, file: !196, line: 730, type: !1682)
!10654 = !DILocation(line: 0, scope: !10651)
!10655 = !DILocation(line: 732, column: 9, scope: !10651)
!10656 = !DILocation(line: 732, column: 2, scope: !10651)
!10657 = distinct !DISubprogram(name: "SystemInit", scope: !1802, file: !1802, line: 167, type: !2964, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !162)
!10658 = !DILocation(line: 182, column: 1, scope: !10657)
!10659 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1802, file: !1802, line: 220, type: !2964, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !10660)
!10660 = !{!10661, !10662, !10663, !10664, !10665}
!10661 = !DILocalVariable(name: "tmp", scope: !10659, file: !1802, line: 222, type: !137)
!10662 = !DILocalVariable(name: "pllvco", scope: !10659, file: !1802, line: 222, type: !137)
!10663 = !DILocalVariable(name: "pllp", scope: !10659, file: !1802, line: 222, type: !137)
!10664 = !DILocalVariable(name: "pllsource", scope: !10659, file: !1802, line: 222, type: !137)
!10665 = !DILocalVariable(name: "pllm", scope: !10659, file: !1802, line: 222, type: !137)
!10666 = !DILocation(line: 0, scope: !10659)
!10667 = !DILocation(line: 225, column: 14, scope: !10659)
!10668 = !DILocation(line: 225, column: 19, scope: !10659)
!10669 = !DILocation(line: 227, column: 3, scope: !10659)
!10670 = !DILocation(line: 234, column: 7, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10659, file: !1802, line: 228, column: 3)
!10672 = !DILocation(line: 240, column: 25, scope: !10671)
!10673 = !DILocation(line: 241, column: 19, scope: !10671)
!10674 = !DILocation(line: 241, column: 27, scope: !10671)
!10675 = !DILocation(line: 243, column: 21, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10671, file: !1802, line: 243, column: 11)
!10677 = !DILocation(line: 0, scope: !10676)
!10678 = !DILocation(line: 254, column: 22, scope: !10671)
!10679 = !DILocation(line: 254, column: 62, scope: !10671)
!10680 = !DILocation(line: 255, column: 31, scope: !10671)
!10681 = !DILocation(line: 256, column: 7, scope: !10671)
!10682 = !DILocation(line: 0, scope: !10671)
!10683 = !DILocation(line: 263, column: 30, scope: !10659)
!10684 = !DILocation(line: 263, column: 52, scope: !10659)
!10685 = !DILocation(line: 263, column: 9, scope: !10659)
!10686 = !DILocation(line: 265, column: 19, scope: !10659)
!10687 = !DILocation(line: 266, column: 1, scope: !10659)
!10688 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10689, file: !10689, line: 200, type: !10690, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!10689 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10690 = !DISubroutineType(types: !10691)
!10691 = !{!10692}
!10692 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2777, line: 44, baseType: !2776)
!10693 = !DILocation(line: 202, column: 3, scope: !10688)
!10694 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10689, file: !10689, line: 219, type: !10695, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !10719)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{!10692, !10697}
!10697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10698, size: 32)
!10698 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10699, line: 70, baseType: !10700)
!10699 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10699, line: 49, size: 384, elements: !10701)
!10701 = !{!10702, !10703, !10704, !10705, !10706, !10707, !10708}
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10700, file: !10699, line: 51, baseType: !137, size: 32)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10700, file: !10699, line: 54, baseType: !137, size: 32, offset: 32)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10700, file: !10699, line: 57, baseType: !137, size: 32, offset: 64)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10700, file: !10699, line: 60, baseType: !137, size: 32, offset: 96)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10700, file: !10699, line: 63, baseType: !137, size: 32, offset: 128)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10700, file: !10699, line: 66, baseType: !137, size: 32, offset: 160)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10700, file: !10699, line: 69, baseType: !10709, size: 192, offset: 192)
!10709 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10710, line: 73, baseType: !10711)
!10710 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10710, line: 45, size: 192, elements: !10712)
!10712 = !{!10713, !10714, !10715, !10716, !10717, !10718}
!10713 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10711, file: !10710, line: 47, baseType: !137, size: 32)
!10714 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10711, file: !10710, line: 50, baseType: !137, size: 32, offset: 32)
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10711, file: !10710, line: 53, baseType: !137, size: 32, offset: 64)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10711, file: !10710, line: 56, baseType: !137, size: 32, offset: 96)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10711, file: !10710, line: 60, baseType: !137, size: 32, offset: 128)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10711, file: !10710, line: 63, baseType: !137, size: 32, offset: 160)
!10719 = !{!10720, !10721, !10722, !10723, !10727}
!10720 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10694, file: !10689, line: 219, type: !10697)
!10721 = !DILocalVariable(name: "tickstart", scope: !10694, file: !10689, line: 221, type: !137)
!10722 = !DILocalVariable(name: "pll_config", scope: !10694, file: !10689, line: 221, type: !137)
!10723 = !DILocalVariable(name: "pwrclkchanged", scope: !10724, file: !10689, line: 391, type: !10726)
!10724 = distinct !DILexicalBlock(scope: !10725, file: !10689, line: 390, column: 3)
!10725 = distinct !DILexicalBlock(scope: !10694, file: !10689, line: 389, column: 6)
!10726 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !722, line: 188, baseType: !2783)
!10727 = !DILocalVariable(name: "tmpreg", scope: !10728, file: !10689, line: 400, type: !176)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !10689, line: 400, column: 7)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !10689, line: 399, column: 5)
!10730 = distinct !DILexicalBlock(scope: !10724, file: !10689, line: 398, column: 8)
!10731 = !DILocation(line: 0, scope: !10694)
!10732 = !DILocation(line: 224, column: 24, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10694, file: !10689, line: 224, column: 6)
!10734 = !DILocation(line: 224, column: 6, scope: !10694)
!10735 = !DILocation(line: 232, column: 27, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10694, file: !10689, line: 232, column: 6)
!10737 = !DILocation(line: 232, column: 43, scope: !10736)
!10738 = !DILocation(line: 232, column: 69, scope: !10736)
!10739 = !DILocation(line: 232, column: 6, scope: !10694)
!10740 = !DILocation(line: 237, column: 9, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !10689, line: 237, column: 8)
!10742 = distinct !DILexicalBlock(scope: !10736, file: !10689, line: 233, column: 3)
!10743 = !DILocation(line: 237, column: 39, scope: !10741)
!10744 = !DILocation(line: 237, column: 60, scope: !10741)
!10745 = !DILocation(line: 238, column: 9, scope: !10741)
!10746 = !DILocation(line: 238, column: 39, scope: !10741)
!10747 = !DILocation(line: 238, column: 60, scope: !10741)
!10748 = !DILocation(line: 238, column: 70, scope: !10741)
!10749 = !DILocation(line: 238, column: 78, scope: !10741)
!10750 = !DILocation(line: 238, column: 100, scope: !10741)
!10751 = !DILocation(line: 237, column: 8, scope: !10742)
!10752 = !DILocation(line: 240, column: 11, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10754, file: !10689, line: 240, column: 10)
!10754 = distinct !DILexicalBlock(scope: !10741, file: !10689, line: 239, column: 5)
!10755 = !DILocation(line: 240, column: 57, scope: !10753)
!10756 = !DILocation(line: 240, column: 80, scope: !10753)
!10757 = !DILocation(line: 240, column: 89, scope: !10753)
!10758 = !DILocation(line: 240, column: 10, scope: !10754)
!10759 = !DILocation(line: 248, column: 7, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !10689, line: 248, column: 7)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !10689, line: 248, column: 7)
!10762 = distinct !DILexicalBlock(scope: !10741, file: !10689, line: 246, column: 5)
!10763 = !DILocation(line: 248, column: 7, scope: !10761)
!10764 = !DILocation(line: 248, column: 7, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10760, file: !10689, line: 248, column: 7)
!10766 = !DILocation(line: 248, column: 7, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !10689, line: 248, column: 7)
!10768 = distinct !DILexicalBlock(scope: !10760, file: !10689, line: 248, column: 7)
!10769 = !DILocation(line: 248, column: 7, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10768, file: !10689, line: 248, column: 7)
!10771 = !DILocation(line: 0, scope: !10760)
!10772 = !DILocation(line: 251, column: 30, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10762, file: !10689, line: 251, column: 10)
!10774 = !DILocation(line: 251, column: 40, scope: !10773)
!10775 = !DILocation(line: 0, scope: !10773)
!10776 = !DILocation(line: 251, column: 10, scope: !10762)
!10777 = !DILocation(line: 257, column: 15, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10773, file: !10689, line: 252, column: 7)
!10779 = !DILocation(line: 257, column: 51, scope: !10778)
!10780 = !DILocation(line: 257, column: 9, scope: !10778)
!10781 = !DILocation(line: 259, column: 15, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !10689, line: 259, column: 14)
!10783 = distinct !DILexicalBlock(scope: !10778, file: !10689, line: 258, column: 9)
!10784 = !DILocation(line: 259, column: 29, scope: !10782)
!10785 = !DILocation(line: 259, column: 43, scope: !10782)
!10786 = !DILocation(line: 259, column: 14, scope: !10783)
!10787 = distinct !{!10787, !10780, !10788}
!10788 = !DILocation(line: 263, column: 9, scope: !10778)
!10789 = !DILocation(line: 271, column: 15, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10773, file: !10689, line: 266, column: 7)
!10791 = !DILocation(line: 271, column: 9, scope: !10790)
!10792 = !DILocation(line: 273, column: 15, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !10689, line: 273, column: 14)
!10794 = distinct !DILexicalBlock(scope: !10790, file: !10689, line: 272, column: 9)
!10795 = !DILocation(line: 273, column: 29, scope: !10793)
!10796 = !DILocation(line: 273, column: 43, scope: !10793)
!10797 = !DILocation(line: 273, column: 14, scope: !10794)
!10798 = distinct !{!10798, !10791, !10799}
!10799 = !DILocation(line: 277, column: 9, scope: !10790)
!10800 = !DILocation(line: 282, column: 27, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10694, file: !10689, line: 282, column: 6)
!10802 = !DILocation(line: 282, column: 43, scope: !10801)
!10803 = !DILocation(line: 282, column: 69, scope: !10801)
!10804 = !DILocation(line: 282, column: 6, scope: !10694)
!10805 = !DILocation(line: 289, column: 9, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !10689, line: 289, column: 8)
!10807 = distinct !DILexicalBlock(scope: !10801, file: !10689, line: 283, column: 3)
!10808 = !DILocation(line: 289, column: 39, scope: !10806)
!10809 = !DILocation(line: 289, column: 60, scope: !10806)
!10810 = !DILocation(line: 290, column: 9, scope: !10806)
!10811 = !DILocation(line: 290, column: 39, scope: !10806)
!10812 = !DILocation(line: 290, column: 60, scope: !10806)
!10813 = !DILocation(line: 290, column: 70, scope: !10806)
!10814 = !DILocation(line: 290, column: 78, scope: !10806)
!10815 = !DILocation(line: 290, column: 100, scope: !10806)
!10816 = !DILocation(line: 289, column: 8, scope: !10807)
!10817 = !DILocation(line: 293, column: 11, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !10689, line: 293, column: 10)
!10819 = distinct !DILexicalBlock(scope: !10806, file: !10689, line: 291, column: 5)
!10820 = !DILocation(line: 293, column: 57, scope: !10818)
!10821 = !DILocation(line: 293, column: 80, scope: !10818)
!10822 = !DILocation(line: 293, column: 89, scope: !10818)
!10823 = !DILocation(line: 293, column: 10, scope: !10819)
!10824 = !DILocation(line: 307, column: 30, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !10689, line: 307, column: 10)
!10826 = distinct !DILexicalBlock(scope: !10806, file: !10689, line: 305, column: 5)
!10827 = !DILocation(line: 307, column: 39, scope: !10825)
!10828 = !DILocation(line: 307, column: 10, scope: !10826)
!10829 = !DILocation(line: 310, column: 9, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10825, file: !10689, line: 308, column: 7)
!10831 = !DILocation(line: 313, column: 21, scope: !10830)
!10832 = !DILocation(line: 316, column: 9, scope: !10830)
!10833 = !DILocation(line: 316, column: 15, scope: !10830)
!10834 = !DILocation(line: 316, column: 51, scope: !10830)
!10835 = !DILocation(line: 318, column: 15, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !10689, line: 318, column: 14)
!10837 = distinct !DILexicalBlock(scope: !10830, file: !10689, line: 317, column: 9)
!10838 = !DILocation(line: 318, column: 29, scope: !10836)
!10839 = !DILocation(line: 318, column: 43, scope: !10836)
!10840 = !DILocation(line: 318, column: 14, scope: !10837)
!10841 = distinct !{!10841, !10832, !10842}
!10842 = !DILocation(line: 322, column: 9, scope: !10830)
!10843 = !DILocation(line: 330, column: 9, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10825, file: !10689, line: 328, column: 7)
!10845 = !DILocation(line: 333, column: 21, scope: !10844)
!10846 = !DILocation(line: 336, column: 9, scope: !10844)
!10847 = !DILocation(line: 336, column: 15, scope: !10844)
!10848 = !DILocation(line: 338, column: 15, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !10689, line: 338, column: 14)
!10850 = distinct !DILexicalBlock(scope: !10844, file: !10689, line: 337, column: 9)
!10851 = !DILocation(line: 338, column: 29, scope: !10849)
!10852 = !DILocation(line: 338, column: 43, scope: !10849)
!10853 = !DILocation(line: 338, column: 14, scope: !10850)
!10854 = distinct !{!10854, !10846, !10855}
!10855 = !DILocation(line: 342, column: 9, scope: !10844)
!10856 = !DILocation(line: 0, scope: !10806)
!10857 = !DILocation(line: 347, column: 27, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10694, file: !10689, line: 347, column: 6)
!10859 = !DILocation(line: 347, column: 43, scope: !10858)
!10860 = !DILocation(line: 347, column: 69, scope: !10858)
!10861 = !DILocation(line: 347, column: 6, scope: !10694)
!10862 = !DILocation(line: 353, column: 28, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !10689, line: 353, column: 8)
!10864 = distinct !DILexicalBlock(scope: !10858, file: !10689, line: 348, column: 3)
!10865 = !DILocation(line: 353, column: 37, scope: !10863)
!10866 = !DILocation(line: 353, column: 8, scope: !10864)
!10867 = !DILocation(line: 356, column: 7, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10863, file: !10689, line: 354, column: 5)
!10869 = !DILocation(line: 359, column: 19, scope: !10868)
!10870 = !DILocation(line: 362, column: 7, scope: !10868)
!10871 = !DILocation(line: 362, column: 13, scope: !10868)
!10872 = !DILocation(line: 362, column: 49, scope: !10868)
!10873 = !DILocation(line: 364, column: 13, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10875, file: !10689, line: 364, column: 12)
!10875 = distinct !DILexicalBlock(scope: !10868, file: !10689, line: 363, column: 7)
!10876 = !DILocation(line: 364, column: 27, scope: !10874)
!10877 = !DILocation(line: 364, column: 41, scope: !10874)
!10878 = !DILocation(line: 364, column: 12, scope: !10875)
!10879 = distinct !{!10879, !10870, !10880}
!10880 = !DILocation(line: 368, column: 7, scope: !10868)
!10881 = !DILocation(line: 373, column: 7, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10863, file: !10689, line: 371, column: 5)
!10883 = !DILocation(line: 376, column: 19, scope: !10882)
!10884 = !DILocation(line: 379, column: 7, scope: !10882)
!10885 = !DILocation(line: 379, column: 13, scope: !10882)
!10886 = !DILocation(line: 381, column: 13, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !10689, line: 381, column: 12)
!10888 = distinct !DILexicalBlock(scope: !10882, file: !10689, line: 380, column: 7)
!10889 = !DILocation(line: 381, column: 27, scope: !10887)
!10890 = !DILocation(line: 381, column: 41, scope: !10887)
!10891 = !DILocation(line: 381, column: 12, scope: !10888)
!10892 = distinct !{!10892, !10884, !10893}
!10893 = !DILocation(line: 385, column: 7, scope: !10882)
!10894 = !DILocation(line: 389, column: 27, scope: !10725)
!10895 = !DILocation(line: 389, column: 43, scope: !10725)
!10896 = !DILocation(line: 389, column: 69, scope: !10725)
!10897 = !DILocation(line: 389, column: 6, scope: !10694)
!10898 = !DILocation(line: 0, scope: !10724)
!10899 = !DILocation(line: 398, column: 8, scope: !10730)
!10900 = !DILocation(line: 398, column: 8, scope: !10724)
!10901 = !DILocation(line: 400, column: 7, scope: !10728)
!10902 = !DILocation(line: 400, column: 7, scope: !10729)
!10903 = !DILocation(line: 402, column: 5, scope: !10729)
!10904 = !DILocation(line: 404, column: 8, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10724, file: !10689, line: 404, column: 8)
!10906 = !DILocation(line: 404, column: 8, scope: !10724)
!10907 = !DILocation(line: 407, column: 7, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !10689, line: 405, column: 5)
!10909 = !DILocation(line: 410, column: 19, scope: !10908)
!10910 = !DILocation(line: 412, column: 7, scope: !10908)
!10911 = !DILocation(line: 412, column: 13, scope: !10908)
!10912 = !DILocation(line: 414, column: 13, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !10689, line: 414, column: 12)
!10914 = distinct !DILexicalBlock(scope: !10908, file: !10689, line: 413, column: 7)
!10915 = !DILocation(line: 414, column: 27, scope: !10913)
!10916 = !DILocation(line: 414, column: 40, scope: !10913)
!10917 = !DILocation(line: 414, column: 12, scope: !10914)
!10918 = distinct !{!10918, !10910, !10919}
!10919 = !DILocation(line: 418, column: 7, scope: !10908)
!10920 = !DILocation(line: 422, column: 5, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !10689, line: 422, column: 5)
!10922 = distinct !DILexicalBlock(scope: !10724, file: !10689, line: 422, column: 5)
!10923 = !DILocation(line: 422, column: 5, scope: !10922)
!10924 = !DILocation(line: 422, column: 5, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10921, file: !10689, line: 422, column: 5)
!10926 = !DILocation(line: 422, column: 5, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !10689, line: 422, column: 5)
!10928 = distinct !DILexicalBlock(scope: !10921, file: !10689, line: 422, column: 5)
!10929 = !DILocation(line: 422, column: 5, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10928, file: !10689, line: 422, column: 5)
!10931 = !DILocation(line: 0, scope: !10921)
!10932 = !DILocation(line: 424, column: 28, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10724, file: !10689, line: 424, column: 8)
!10934 = !DILocation(line: 424, column: 38, scope: !10933)
!10935 = !DILocation(line: 0, scope: !10933)
!10936 = !DILocation(line: 424, column: 8, scope: !10724)
!10937 = !DILocation(line: 430, column: 13, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10933, file: !10689, line: 425, column: 5)
!10939 = !DILocation(line: 430, column: 49, scope: !10938)
!10940 = !DILocation(line: 430, column: 7, scope: !10938)
!10941 = !DILocation(line: 432, column: 13, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10689, line: 432, column: 12)
!10943 = distinct !DILexicalBlock(scope: !10938, file: !10689, line: 431, column: 7)
!10944 = !DILocation(line: 432, column: 27, scope: !10942)
!10945 = !DILocation(line: 432, column: 41, scope: !10942)
!10946 = !DILocation(line: 432, column: 12, scope: !10943)
!10947 = distinct !{!10947, !10940, !10948}
!10948 = !DILocation(line: 436, column: 7, scope: !10938)
!10949 = !DILocation(line: 444, column: 13, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10933, file: !10689, line: 439, column: 5)
!10951 = !DILocation(line: 444, column: 7, scope: !10950)
!10952 = !DILocation(line: 446, column: 13, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !10689, line: 446, column: 12)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !10689, line: 445, column: 7)
!10955 = !DILocation(line: 446, column: 27, scope: !10953)
!10956 = !DILocation(line: 446, column: 41, scope: !10953)
!10957 = !DILocation(line: 446, column: 12, scope: !10954)
!10958 = distinct !{!10958, !10951, !10959}
!10959 = !DILocation(line: 450, column: 7, scope: !10950)
!10960 = !DILocation(line: 454, column: 8, scope: !10724)
!10961 = !DILocation(line: 456, column: 7, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10963, file: !10689, line: 455, column: 5)
!10963 = distinct !DILexicalBlock(scope: !10724, file: !10689, line: 454, column: 8)
!10964 = !DILocation(line: 457, column: 5, scope: !10962)
!10965 = !DILocation(line: 462, column: 31, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10694, file: !10689, line: 462, column: 7)
!10967 = !DILocation(line: 462, column: 41, scope: !10966)
!10968 = !DILocation(line: 462, column: 7, scope: !10694)
!10969 = !DILocation(line: 465, column: 8, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !10689, line: 465, column: 8)
!10971 = distinct !DILexicalBlock(scope: !10966, file: !10689, line: 463, column: 3)
!10972 = !DILocation(line: 465, column: 38, scope: !10970)
!10973 = !DILocation(line: 465, column: 8, scope: !10971)
!10974 = !DILocation(line: 467, column: 44, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !10689, line: 467, column: 10)
!10976 = distinct !DILexicalBlock(scope: !10970, file: !10689, line: 466, column: 5)
!10977 = !DILocation(line: 0, scope: !10975)
!10978 = !DILocation(line: 467, column: 10, scope: !10976)
!10979 = !DILocation(line: 483, column: 15, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10975, file: !10689, line: 468, column: 7)
!10981 = !DILocation(line: 483, column: 9, scope: !10980)
!10982 = !DILocation(line: 485, column: 15, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !10689, line: 485, column: 14)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !10689, line: 484, column: 9)
!10985 = !DILocation(line: 485, column: 29, scope: !10983)
!10986 = !DILocation(line: 485, column: 43, scope: !10983)
!10987 = !DILocation(line: 485, column: 14, scope: !10984)
!10988 = distinct !{!10988, !10981, !10989}
!10989 = !DILocation(line: 489, column: 9, scope: !10980)
!10990 = !DILocation(line: 492, column: 9, scope: !10980)
!10991 = !DILocation(line: 498, column: 9, scope: !10980)
!10992 = !DILocation(line: 501, column: 21, scope: !10980)
!10993 = !DILocation(line: 504, column: 9, scope: !10980)
!10994 = !DILocation(line: 504, column: 15, scope: !10980)
!10995 = !DILocation(line: 504, column: 51, scope: !10980)
!10996 = !DILocation(line: 506, column: 15, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !10689, line: 506, column: 14)
!10998 = distinct !DILexicalBlock(scope: !10980, file: !10689, line: 505, column: 9)
!10999 = !DILocation(line: 506, column: 29, scope: !10997)
!11000 = !DILocation(line: 506, column: 43, scope: !10997)
!11001 = !DILocation(line: 506, column: 14, scope: !10998)
!11002 = distinct !{!11002, !10993, !11003}
!11003 = !DILocation(line: 510, column: 9, scope: !10980)
!11004 = !DILocation(line: 521, column: 15, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10975, file: !10689, line: 513, column: 7)
!11006 = !DILocation(line: 521, column: 9, scope: !11005)
!11007 = !DILocation(line: 523, column: 15, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !10689, line: 523, column: 14)
!11009 = distinct !DILexicalBlock(scope: !11005, file: !10689, line: 522, column: 9)
!11010 = !DILocation(line: 523, column: 29, scope: !11008)
!11011 = !DILocation(line: 523, column: 43, scope: !11008)
!11012 = !DILocation(line: 523, column: 14, scope: !11009)
!11013 = distinct !{!11013, !11006, !11014}
!11014 = !DILocation(line: 527, column: 9, scope: !11005)
!11015 = !DILocation(line: 533, column: 44, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !10689, line: 533, column: 10)
!11017 = distinct !DILexicalBlock(scope: !10970, file: !10689, line: 531, column: 5)
!11018 = !DILocation(line: 533, column: 10, scope: !11017)
!11019 = !DILocation(line: 540, column: 27, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11016, file: !10689, line: 538, column: 7)
!11021 = !DILocation(line: 551, column: 14, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11020, file: !10689, line: 550, column: 13)
!11023 = !DILocation(line: 551, column: 81, scope: !11022)
!11024 = !DILocation(line: 551, column: 55, scope: !11022)
!11025 = !DILocation(line: 551, column: 92, scope: !11022)
!11026 = !DILocation(line: 552, column: 14, scope: !11022)
!11027 = !DILocation(line: 552, column: 80, scope: !11022)
!11028 = !DILocation(line: 552, column: 53, scope: !11022)
!11029 = !DILocation(line: 552, column: 111, scope: !11022)
!11030 = !DILocation(line: 553, column: 14, scope: !11022)
!11031 = !DILocation(line: 553, column: 80, scope: !11022)
!11032 = !DILocation(line: 553, column: 86, scope: !11022)
!11033 = !DILocation(line: 553, column: 53, scope: !11022)
!11034 = !DILocation(line: 553, column: 111, scope: !11022)
!11035 = !DILocation(line: 554, column: 14, scope: !11022)
!11036 = !DILocation(line: 554, column: 82, scope: !11022)
!11037 = !DILocation(line: 554, column: 101, scope: !11022)
!11038 = !DILocation(line: 554, column: 53, scope: !11022)
!11039 = !DILocation(line: 554, column: 126, scope: !11022)
!11040 = !DILocation(line: 555, column: 14, scope: !11022)
!11041 = !DILocation(line: 555, column: 80, scope: !11022)
!11042 = !DILocation(line: 555, column: 85, scope: !11022)
!11043 = !DILocation(line: 555, column: 53, scope: !11022)
!11044 = !DILocation(line: 550, column: 13, scope: !11020)
!11045 = !DILocation(line: 563, column: 3, scope: !10694)
!11046 = !DILocation(line: 564, column: 1, scope: !10694)
!11047 = !DISubprogram(name: "HAL_GetTick", scope: !11048, file: !11048, line: 234, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11048 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11049 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10689, file: !10689, line: 591, type: !11050, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11061)
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!10692, !11052, !137}
!11052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11053, size: 32)
!11053 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10699, line: 92, baseType: !11054)
!11054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10699, line: 75, size: 160, elements: !11055)
!11055 = !{!11056, !11057, !11058, !11059, !11060}
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11054, file: !10699, line: 77, baseType: !137, size: 32)
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11054, file: !10699, line: 80, baseType: !137, size: 32, offset: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11054, file: !10699, line: 83, baseType: !137, size: 32, offset: 64)
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11054, file: !10699, line: 86, baseType: !137, size: 32, offset: 96)
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11054, file: !10699, line: 89, baseType: !137, size: 32, offset: 128)
!11061 = !{!11062, !11063, !11064}
!11062 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11049, file: !10689, line: 591, type: !11052)
!11063 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11049, file: !10689, line: 591, type: !137)
!11064 = !DILocalVariable(name: "tickstart", scope: !11049, file: !10689, line: 593, type: !137)
!11065 = !DILocation(line: 0, scope: !11049)
!11066 = !DILocation(line: 596, column: 24, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 596, column: 6)
!11068 = !DILocation(line: 596, column: 6, scope: !11049)
!11069 = !DILocation(line: 610, column: 17, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 610, column: 6)
!11071 = !DILocation(line: 610, column: 15, scope: !11070)
!11072 = !DILocation(line: 610, column: 6, scope: !11049)
!11073 = !DILocation(line: 613, column: 5, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11070, file: !10689, line: 611, column: 3)
!11075 = !DILocation(line: 617, column: 8, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11074, file: !10689, line: 617, column: 8)
!11077 = !DILocation(line: 617, column: 34, scope: !11076)
!11078 = !DILocation(line: 617, column: 8, scope: !11074)
!11079 = !DILocation(line: 624, column: 27, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 624, column: 6)
!11081 = !DILocation(line: 624, column: 38, scope: !11080)
!11082 = !DILocation(line: 624, column: 60, scope: !11080)
!11083 = !DILocation(line: 624, column: 6, scope: !11049)
!11084 = !DILocation(line: 628, column: 40, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11086, file: !10689, line: 628, column: 8)
!11086 = distinct !DILexicalBlock(scope: !11080, file: !10689, line: 625, column: 3)
!11087 = !DILocation(line: 628, column: 63, scope: !11085)
!11088 = !DILocation(line: 628, column: 8, scope: !11086)
!11089 = !DILocation(line: 630, column: 7, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11085, file: !10689, line: 629, column: 5)
!11091 = !DILocation(line: 633, column: 29, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11086, file: !10689, line: 633, column: 8)
!11093 = !DILocation(line: 631, column: 5, scope: !11090)
!11094 = !DILocation(line: 633, column: 40, scope: !11092)
!11095 = !DILocation(line: 633, column: 63, scope: !11092)
!11096 = !DILocation(line: 633, column: 8, scope: !11086)
!11097 = !DILocation(line: 635, column: 7, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11092, file: !10689, line: 634, column: 5)
!11099 = !DILocation(line: 636, column: 5, scope: !11098)
!11100 = !DILocation(line: 639, column: 5, scope: !11086)
!11101 = !DILocation(line: 643, column: 27, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 643, column: 6)
!11103 = !DILocation(line: 640, column: 3, scope: !11086)
!11104 = !DILocation(line: 643, column: 38, scope: !11102)
!11105 = !DILocation(line: 643, column: 62, scope: !11102)
!11106 = !DILocation(line: 643, column: 6, scope: !11049)
!11107 = !DILocation(line: 648, column: 27, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !10689, line: 648, column: 8)
!11109 = distinct !DILexicalBlock(scope: !11102, file: !10689, line: 644, column: 3)
!11110 = !DILocation(line: 648, column: 8, scope: !11109)
!11111 = !DILocation(line: 651, column: 10, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !10689, line: 651, column: 10)
!11113 = distinct !DILexicalBlock(scope: !11108, file: !10689, line: 649, column: 5)
!11114 = !DILocation(line: 651, column: 46, scope: !11112)
!11115 = !DILocation(line: 651, column: 10, scope: !11113)
!11116 = !DILocation(line: 661, column: 10, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !10689, line: 661, column: 10)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !10689, line: 659, column: 5)
!11119 = distinct !DILexicalBlock(scope: !11108, file: !10689, line: 657, column: 13)
!11120 = !DILocation(line: 661, column: 46, scope: !11117)
!11121 = !DILocation(line: 661, column: 10, scope: !11118)
!11122 = !DILocation(line: 670, column: 10, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !10689, line: 670, column: 10)
!11124 = distinct !DILexicalBlock(scope: !11119, file: !10689, line: 668, column: 5)
!11125 = !DILocation(line: 670, column: 46, scope: !11123)
!11126 = !DILocation(line: 670, column: 10, scope: !11124)
!11127 = !DILocation(line: 676, column: 5, scope: !11109)
!11128 = !DILocation(line: 679, column: 17, scope: !11109)
!11129 = !DILocation(line: 681, column: 5, scope: !11109)
!11130 = !DILocation(line: 681, column: 12, scope: !11109)
!11131 = !DILocation(line: 681, column: 65, scope: !11109)
!11132 = !DILocation(line: 681, column: 78, scope: !11109)
!11133 = !DILocation(line: 681, column: 42, scope: !11109)
!11134 = !DILocation(line: 683, column: 12, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11136, file: !10689, line: 683, column: 11)
!11136 = distinct !DILexicalBlock(scope: !11109, file: !10689, line: 682, column: 5)
!11137 = !DILocation(line: 683, column: 26, scope: !11135)
!11138 = !DILocation(line: 683, column: 39, scope: !11135)
!11139 = !DILocation(line: 683, column: 11, scope: !11136)
!11140 = distinct !{!11140, !11129, !11141}
!11141 = !DILocation(line: 687, column: 5, scope: !11109)
!11142 = !DILocation(line: 691, column: 17, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 691, column: 6)
!11144 = !DILocation(line: 691, column: 15, scope: !11143)
!11145 = !DILocation(line: 691, column: 6, scope: !11049)
!11146 = !DILocation(line: 694, column: 5, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11143, file: !10689, line: 692, column: 3)
!11148 = !DILocation(line: 698, column: 8, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11147, file: !10689, line: 698, column: 8)
!11150 = !DILocation(line: 698, column: 34, scope: !11149)
!11151 = !DILocation(line: 698, column: 8, scope: !11147)
!11152 = !DILocation(line: 705, column: 27, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 705, column: 6)
!11154 = !DILocation(line: 705, column: 38, scope: !11153)
!11155 = !DILocation(line: 705, column: 61, scope: !11153)
!11156 = !DILocation(line: 705, column: 6, scope: !11049)
!11157 = !DILocation(line: 708, column: 5, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11153, file: !10689, line: 706, column: 3)
!11159 = !DILocation(line: 712, column: 27, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11049, file: !10689, line: 712, column: 6)
!11161 = !DILocation(line: 709, column: 3, scope: !11158)
!11162 = !DILocation(line: 712, column: 38, scope: !11160)
!11163 = !DILocation(line: 712, column: 61, scope: !11160)
!11164 = !DILocation(line: 712, column: 6, scope: !11049)
!11165 = !DILocation(line: 715, column: 5, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11160, file: !10689, line: 713, column: 3)
!11167 = !DILocation(line: 716, column: 3, scope: !11166)
!11168 = !DILocation(line: 719, column: 21, scope: !11049)
!11169 = !DILocation(line: 719, column: 70, scope: !11049)
!11170 = !DILocation(line: 719, column: 91, scope: !11049)
!11171 = !DILocation(line: 719, column: 50, scope: !11049)
!11172 = !DILocation(line: 719, column: 47, scope: !11049)
!11173 = !DILocation(line: 719, column: 19, scope: !11049)
!11174 = !DILocation(line: 722, column: 17, scope: !11049)
!11175 = !DILocation(line: 722, column: 3, scope: !11049)
!11176 = !DILocation(line: 724, column: 3, scope: !11049)
!11177 = !DILocation(line: 725, column: 1, scope: !11049)
!11178 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10689, file: !10689, line: 885, type: !135, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11179)
!11179 = !{!11180, !11181, !11182, !11183}
!11180 = !DILocalVariable(name: "pllm", scope: !11178, file: !10689, line: 887, type: !137)
!11181 = !DILocalVariable(name: "pllvco", scope: !11178, file: !10689, line: 887, type: !137)
!11182 = !DILocalVariable(name: "pllp", scope: !11178, file: !10689, line: 887, type: !137)
!11183 = !DILocalVariable(name: "sysclockfreq", scope: !11178, file: !10689, line: 888, type: !137)
!11184 = !DILocation(line: 0, scope: !11178)
!11185 = !DILocation(line: 891, column: 16, scope: !11178)
!11186 = !DILocation(line: 891, column: 21, scope: !11178)
!11187 = !DILocation(line: 891, column: 3, scope: !11178)
!11188 = !DILocation(line: 901, column: 7, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !10689, line: 899, column: 5)
!11190 = distinct !DILexicalBlock(scope: !11178, file: !10689, line: 892, column: 3)
!11191 = !DILocation(line: 907, column: 19, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11190, file: !10689, line: 904, column: 5)
!11193 = !DILocation(line: 907, column: 27, scope: !11192)
!11194 = !DILocation(line: 908, column: 10, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11192, file: !10689, line: 908, column: 10)
!11196 = !DILocation(line: 908, column: 40, scope: !11195)
!11197 = !DILocation(line: 0, scope: !11195)
!11198 = !DILocation(line: 918, column: 23, scope: !11192)
!11199 = !DILocation(line: 918, column: 82, scope: !11192)
!11200 = !DILocation(line: 920, column: 28, scope: !11192)
!11201 = !DILocation(line: 921, column: 7, scope: !11192)
!11202 = !DILocation(line: 0, scope: !11190)
!11203 = !DILocation(line: 929, column: 3, scope: !11178)
!11204 = !DISubprogram(name: "HAL_InitTick", scope: !11048, file: !11048, line: 223, type: !11205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11205 = !DISubroutineType(types: !11206)
!11206 = !{!10692, !137}
!11207 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10689, file: !10689, line: 775, type: !11208, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11210)
!11208 = !DISubroutineType(types: !11209)
!11209 = !{null, !137, !137, !137}
!11210 = !{!11211, !11212, !11213, !11214, !11224, !11228}
!11211 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11207, file: !10689, line: 775, type: !137)
!11212 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11207, file: !10689, line: 775, type: !137)
!11213 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11207, file: !10689, line: 775, type: !137)
!11214 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11207, file: !10689, line: 777, type: !11215)
!11215 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11216, line: 62, baseType: !11217)
!11216 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11216, line: 46, size: 160, elements: !11218)
!11218 = !{!11219, !11220, !11221, !11222, !11223}
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11217, file: !11216, line: 48, baseType: !137, size: 32)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11217, file: !11216, line: 51, baseType: !137, size: 32, offset: 32)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11217, file: !11216, line: 54, baseType: !137, size: 32, offset: 64)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11217, file: !11216, line: 57, baseType: !137, size: 32, offset: 96)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11217, file: !11216, line: 60, baseType: !137, size: 32, offset: 128)
!11224 = !DILocalVariable(name: "tmpreg", scope: !11225, file: !10689, line: 787, type: !176)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !10689, line: 787, column: 5)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !10689, line: 783, column: 3)
!11227 = distinct !DILexicalBlock(scope: !11207, file: !10689, line: 782, column: 6)
!11228 = !DILocalVariable(name: "tmpreg", scope: !11229, file: !10689, line: 811, type: !176)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !10689, line: 811, column: 5)
!11230 = distinct !DILexicalBlock(scope: !11227, file: !10689, line: 807, column: 3)
!11231 = !DILocation(line: 0, scope: !11207)
!11232 = !DILocation(line: 777, column: 3, scope: !11207)
!11233 = !DILocation(line: 777, column: 20, scope: !11207)
!11234 = !DILocation(line: 782, column: 15, scope: !11227)
!11235 = !DILocation(line: 782, column: 6, scope: !11207)
!11236 = !DILocation(line: 787, column: 5, scope: !11225)
!11237 = !DILocation(line: 787, column: 5, scope: !11226)
!11238 = !DILocation(line: 790, column: 21, scope: !11226)
!11239 = !DILocation(line: 790, column: 25, scope: !11226)
!11240 = !DILocation(line: 791, column: 21, scope: !11226)
!11241 = !DILocation(line: 791, column: 26, scope: !11226)
!11242 = !DILocation(line: 792, column: 21, scope: !11226)
!11243 = !DILocation(line: 792, column: 27, scope: !11226)
!11244 = !DILocation(line: 793, column: 21, scope: !11226)
!11245 = !DILocation(line: 793, column: 26, scope: !11226)
!11246 = !DILocation(line: 794, column: 21, scope: !11226)
!11247 = !DILocation(line: 794, column: 31, scope: !11226)
!11248 = !DILocation(line: 795, column: 5, scope: !11226)
!11249 = !DILocation(line: 798, column: 5, scope: !11226)
!11250 = !DILocation(line: 804, column: 3, scope: !11226)
!11251 = !DILocation(line: 811, column: 5, scope: !11229)
!11252 = !DILocation(line: 811, column: 5, scope: !11230)
!11253 = !DILocation(line: 814, column: 21, scope: !11230)
!11254 = !DILocation(line: 814, column: 25, scope: !11230)
!11255 = !DILocation(line: 815, column: 21, scope: !11230)
!11256 = !DILocation(line: 815, column: 26, scope: !11230)
!11257 = !DILocation(line: 816, column: 21, scope: !11230)
!11258 = !DILocation(line: 816, column: 27, scope: !11230)
!11259 = !DILocation(line: 817, column: 21, scope: !11230)
!11260 = !DILocation(line: 817, column: 26, scope: !11230)
!11261 = !DILocation(line: 818, column: 21, scope: !11230)
!11262 = !DILocation(line: 818, column: 31, scope: !11230)
!11263 = !DILocation(line: 819, column: 5, scope: !11230)
!11264 = !DILocation(line: 822, column: 5, scope: !11230)
!11265 = !DILocation(line: 0, scope: !11227)
!11266 = !DILocation(line: 830, column: 1, scope: !11207)
!11267 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11216, file: !11216, line: 224, type: !11268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !2846, !11270}
!11270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11215, size: 32)
!11271 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10689, file: !10689, line: 841, type: !2964, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11272 = !DILocation(line: 843, column: 38, scope: !11271)
!11273 = !DILocation(line: 844, column: 1, scope: !11271)
!11274 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10689, file: !10689, line: 850, type: !2964, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11275 = !DILocation(line: 852, column: 38, scope: !11274)
!11276 = !DILocation(line: 853, column: 1, scope: !11274)
!11277 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10689, file: !10689, line: 941, type: !135, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11278 = !DILocation(line: 943, column: 10, scope: !11277)
!11279 = !DILocation(line: 943, column: 3, scope: !11277)
!11280 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10689, file: !10689, line: 952, type: !135, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11281 = !DILocation(line: 955, column: 11, scope: !11280)
!11282 = !DILocation(line: 955, column: 56, scope: !11280)
!11283 = !DILocation(line: 955, column: 78, scope: !11280)
!11284 = !DILocation(line: 955, column: 36, scope: !11280)
!11285 = !DILocation(line: 955, column: 33, scope: !11280)
!11286 = !DILocation(line: 955, column: 3, scope: !11280)
!11287 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10689, file: !10689, line: 964, type: !135, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11288 = !DILocation(line: 967, column: 11, scope: !11287)
!11289 = !DILocation(line: 967, column: 55, scope: !11287)
!11290 = !DILocation(line: 967, column: 77, scope: !11287)
!11291 = !DILocation(line: 967, column: 35, scope: !11287)
!11292 = !DILocation(line: 967, column: 32, scope: !11287)
!11293 = !DILocation(line: 967, column: 3, scope: !11287)
!11294 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10689, file: !10689, line: 977, type: !11295, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{null, !10697}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11294, file: !10689, line: 977, type: !10697)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 980, column: 22, scope: !11294)
!11301 = !DILocation(line: 980, column: 37, scope: !11294)
!11302 = !DILocation(line: 983, column: 12, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11294, file: !10689, line: 983, column: 6)
!11304 = !DILocation(line: 983, column: 15, scope: !11303)
!11305 = !DILocation(line: 983, column: 31, scope: !11303)
!11306 = !DILocation(line: 983, column: 6, scope: !11294)
!11307 = !DILocation(line: 985, column: 24, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11303, file: !10689, line: 984, column: 3)
!11309 = !DILocation(line: 985, column: 33, scope: !11308)
!11310 = !DILocation(line: 986, column: 3, scope: !11308)
!11311 = !DILocation(line: 987, column: 17, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11303, file: !10689, line: 987, column: 11)
!11313 = !DILocation(line: 987, column: 20, scope: !11312)
!11314 = !DILocation(line: 987, column: 35, scope: !11312)
!11315 = !DILocation(line: 0, scope: !11312)
!11316 = !DILocation(line: 987, column: 11, scope: !11303)
!11317 = !DILocation(line: 989, column: 33, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11312, file: !10689, line: 988, column: 3)
!11319 = !DILocation(line: 990, column: 3, scope: !11318)
!11320 = !DILocation(line: 993, column: 33, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11312, file: !10689, line: 992, column: 3)
!11322 = !DILocation(line: 997, column: 12, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11294, file: !10689, line: 997, column: 6)
!11324 = !DILocation(line: 997, column: 15, scope: !11323)
!11325 = !DILocation(line: 1003, column: 24, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11323, file: !10689, line: 1002, column: 3)
!11327 = !DILocation(line: 1003, column: 33, scope: !11326)
!11328 = !DILocation(line: 1006, column: 61, scope: !11294)
!11329 = !DILocation(line: 1006, column: 81, scope: !11294)
!11330 = !DILocation(line: 1006, column: 22, scope: !11294)
!11331 = !DILocation(line: 1006, column: 42, scope: !11294)
!11332 = !DILocation(line: 1009, column: 12, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11294, file: !10689, line: 1009, column: 6)
!11334 = !DILocation(line: 1009, column: 17, scope: !11333)
!11335 = !DILocation(line: 1009, column: 35, scope: !11333)
!11336 = !DILocation(line: 1009, column: 6, scope: !11294)
!11337 = !DILocation(line: 1011, column: 24, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !10689, line: 1010, column: 3)
!11339 = !DILocation(line: 1011, column: 33, scope: !11338)
!11340 = !DILocation(line: 1012, column: 3, scope: !11338)
!11341 = !DILocation(line: 1013, column: 17, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11333, file: !10689, line: 1013, column: 11)
!11343 = !DILocation(line: 1013, column: 22, scope: !11342)
!11344 = !DILocation(line: 1013, column: 39, scope: !11342)
!11345 = !DILocation(line: 0, scope: !11342)
!11346 = !DILocation(line: 1013, column: 11, scope: !11333)
!11347 = !DILocation(line: 1015, column: 33, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11342, file: !10689, line: 1014, column: 3)
!11349 = !DILocation(line: 1016, column: 3, scope: !11348)
!11350 = !DILocation(line: 1019, column: 33, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11342, file: !10689, line: 1018, column: 3)
!11352 = !DILocation(line: 1023, column: 12, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11294, file: !10689, line: 1023, column: 6)
!11354 = !DILocation(line: 1023, column: 16, scope: !11353)
!11355 = !DILocation(line: 1029, column: 24, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11353, file: !10689, line: 1028, column: 3)
!11357 = !DILocation(line: 1029, column: 33, scope: !11356)
!11358 = !DILocation(line: 1033, column: 12, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11294, file: !10689, line: 1033, column: 6)
!11360 = !DILocation(line: 1033, column: 15, scope: !11359)
!11361 = !DILocation(line: 1033, column: 30, scope: !11359)
!11362 = !DILocation(line: 1033, column: 6, scope: !11294)
!11363 = !DILocation(line: 1039, column: 28, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !10689, line: 1038, column: 3)
!11365 = !DILocation(line: 1039, column: 37, scope: !11364)
!11366 = !DILocation(line: 1041, column: 54, scope: !11294)
!11367 = !DILocation(line: 1041, column: 62, scope: !11294)
!11368 = !DILocation(line: 1041, column: 26, scope: !11294)
!11369 = !DILocation(line: 1041, column: 36, scope: !11294)
!11370 = !DILocation(line: 1042, column: 49, scope: !11294)
!11371 = !DILocation(line: 1042, column: 57, scope: !11294)
!11372 = !DILocation(line: 1042, column: 26, scope: !11294)
!11373 = !DILocation(line: 1042, column: 31, scope: !11294)
!11374 = !DILocation(line: 1043, column: 50, scope: !11294)
!11375 = !DILocation(line: 1043, column: 78, scope: !11294)
!11376 = !DILocation(line: 1043, column: 26, scope: !11294)
!11377 = !DILocation(line: 1043, column: 31, scope: !11294)
!11378 = !DILocation(line: 1044, column: 52, scope: !11294)
!11379 = !DILocation(line: 1044, column: 102, scope: !11294)
!11380 = !DILocation(line: 1044, column: 109, scope: !11294)
!11381 = !DILocation(line: 1044, column: 26, scope: !11294)
!11382 = !DILocation(line: 1044, column: 31, scope: !11294)
!11383 = !DILocation(line: 1045, column: 50, scope: !11294)
!11384 = !DILocation(line: 1045, column: 78, scope: !11294)
!11385 = !DILocation(line: 1045, column: 26, scope: !11294)
!11386 = !DILocation(line: 1045, column: 31, scope: !11294)
!11387 = !DILocation(line: 1046, column: 1, scope: !11294)
!11388 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10689, file: !10689, line: 1056, type: !11389, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !11391)
!11389 = !DISubroutineType(types: !11390)
!11390 = !{null, !11052, !149}
!11391 = !{!11392, !11393}
!11392 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11388, file: !10689, line: 1056, type: !11052)
!11393 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11388, file: !10689, line: 1056, type: !149)
!11394 = !DILocation(line: 0, scope: !11388)
!11395 = !DILocation(line: 1059, column: 22, scope: !11388)
!11396 = !DILocation(line: 1059, column: 32, scope: !11388)
!11397 = !DILocation(line: 1062, column: 53, scope: !11388)
!11398 = !DILocation(line: 1062, column: 58, scope: !11388)
!11399 = !DILocation(line: 1062, column: 22, scope: !11388)
!11400 = !DILocation(line: 1062, column: 35, scope: !11388)
!11401 = !DILocation(line: 1065, column: 54, scope: !11388)
!11402 = !DILocation(line: 1065, column: 59, scope: !11388)
!11403 = !DILocation(line: 1065, column: 22, scope: !11388)
!11404 = !DILocation(line: 1065, column: 36, scope: !11388)
!11405 = !DILocation(line: 1068, column: 55, scope: !11388)
!11406 = !DILocation(line: 1068, column: 60, scope: !11388)
!11407 = !DILocation(line: 1068, column: 22, scope: !11388)
!11408 = !DILocation(line: 1068, column: 37, scope: !11388)
!11409 = !DILocation(line: 1071, column: 56, scope: !11388)
!11410 = !DILocation(line: 1071, column: 79, scope: !11388)
!11411 = !DILocation(line: 1071, column: 22, scope: !11388)
!11412 = !DILocation(line: 1071, column: 37, scope: !11388)
!11413 = !DILocation(line: 1074, column: 34, scope: !11388)
!11414 = !DILocation(line: 1074, column: 38, scope: !11388)
!11415 = !DILocation(line: 1074, column: 14, scope: !11388)
!11416 = !DILocation(line: 1075, column: 1, scope: !11388)
!11417 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10689, file: !10689, line: 1082, type: !2964, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11418 = !DILocation(line: 1085, column: 6, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11417, file: !10689, line: 1085, column: 6)
!11420 = !DILocation(line: 1085, column: 6, scope: !11417)
!11421 = !DILocation(line: 1088, column: 5, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11419, file: !10689, line: 1086, column: 3)
!11423 = !DILocation(line: 1091, column: 5, scope: !11422)
!11424 = !DILocation(line: 1092, column: 3, scope: !11422)
!11425 = !DILocation(line: 1093, column: 1, scope: !11417)
!11426 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10689, file: !10689, line: 1099, type: !2964, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !162)
!11427 = !DILocation(line: 1104, column: 1, scope: !11426)
!11428 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11429, file: !11429, line: 257, type: !6529, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11430)
!11429 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11430 = !{!11431}
!11431 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11428, file: !11429, line: 257, type: !137)
!11432 = !DILocation(line: 0, scope: !11428)
!11433 = !DILocation(line: 260, column: 3, scope: !11428)
!11434 = !DILocation(line: 261, column: 1, scope: !11428)
!11435 = distinct !DISubprogram(name: "LL_InitTick", scope: !11436, file: !11436, line: 260, type: !9119, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11437)
!11436 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11437 = !{!11438, !11439}
!11438 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11435, file: !11436, line: 260, type: !137)
!11439 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11435, file: !11436, line: 260, type: !137)
!11440 = !DILocation(line: 0, scope: !11435)
!11441 = !DILocation(line: 263, column: 46, scope: !11435)
!11442 = !DILocation(line: 263, column: 55, scope: !11435)
!11443 = !DILocation(line: 263, column: 18, scope: !11435)
!11444 = !DILocation(line: 264, column: 18, scope: !11435)
!11445 = !DILocation(line: 265, column: 18, scope: !11435)
!11446 = !DILocation(line: 267, column: 1, scope: !11435)
!11447 = distinct !DISubprogram(name: "LL_mDelay", scope: !11429, file: !11429, line: 273, type: !6529, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11448)
!11448 = !{!11449, !11450}
!11449 = !DILocalVariable(name: "Delay", arg: 1, scope: !11447, file: !11429, line: 273, type: !137)
!11450 = !DILocalVariable(name: "tmp", scope: !11447, file: !11429, line: 275, type: !176)
!11451 = !DILocation(line: 0, scope: !11447)
!11452 = !DILocation(line: 275, column: 3, scope: !11447)
!11453 = !DILocation(line: 275, column: 18, scope: !11447)
!11454 = !DILocation(line: 275, column: 33, scope: !11447)
!11455 = !DILocation(line: 277, column: 10, scope: !11447)
!11456 = !DILocation(line: 280, column: 12, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11447, file: !11429, line: 280, column: 6)
!11458 = !DILocation(line: 285, column: 3, scope: !11447)
!11459 = !DILocation(line: 287, column: 18, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11429, line: 287, column: 8)
!11461 = distinct !DILexicalBlock(scope: !11447, file: !11429, line: 286, column: 3)
!11462 = !DILocation(line: 292, column: 1, scope: !11447)
!11463 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11429, file: !11429, line: 323, type: !6529, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11464)
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11463, file: !11429, line: 323, type: !137)
!11466 = !DILocation(line: 0, scope: !11463)
!11467 = !DILocation(line: 326, column: 19, scope: !11463)
!11468 = !DILocation(line: 327, column: 1, scope: !11463)
!11469 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11429, file: !11429, line: 338, type: !11470, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11473)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{!11472, !137}
!11472 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !722, line: 201, baseType: !721)
!11473 = !{!11474, !11475, !11476, !11477, !11478}
!11474 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11469, file: !11429, line: 338, type: !137)
!11475 = !DILocalVariable(name: "timeout", scope: !11469, file: !11429, line: 340, type: !137)
!11476 = !DILocalVariable(name: "getlatency", scope: !11469, file: !11429, line: 341, type: !137)
!11477 = !DILocalVariable(name: "latency", scope: !11469, file: !11429, line: 342, type: !137)
!11478 = !DILocalVariable(name: "status", scope: !11469, file: !11429, line: 343, type: !11472)
!11479 = !DILocation(line: 0, scope: !11469)
!11480 = !DILocation(line: 347, column: 21, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11469, file: !11429, line: 347, column: 6)
!11482 = !DILocation(line: 347, column: 6, scope: !11469)
!11483 = !DILocation(line: 353, column: 8, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 353, column: 8)
!11485 = distinct !DILexicalBlock(scope: !11481, file: !11429, line: 352, column: 3)
!11486 = !DILocation(line: 353, column: 40, scope: !11484)
!11487 = !DILocation(line: 353, column: 8, scope: !11485)
!11488 = !DILocation(line: 356, column: 26, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11490, file: !11429, line: 356, column: 10)
!11490 = distinct !DILexicalBlock(scope: !11484, file: !11429, line: 354, column: 5)
!11491 = !DILocation(line: 356, column: 55, scope: !11489)
!11492 = !DILocation(line: 362, column: 55, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11490, file: !11429, line: 362, column: 10)
!11494 = !DILocation(line: 368, column: 55, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11490, file: !11429, line: 368, column: 10)
!11496 = !DILocation(line: 374, column: 26, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11490, file: !11429, line: 374, column: 10)
!11498 = !DILocation(line: 374, column: 55, scope: !11497)
!11499 = !DILocation(line: 380, column: 28, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !11429, line: 380, column: 12)
!11501 = distinct !DILexicalBlock(scope: !11497, file: !11429, line: 379, column: 7)
!11502 = !DILocation(line: 380, column: 57, scope: !11500)
!11503 = !DILocation(line: 387, column: 8, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 387, column: 8)
!11505 = !DILocation(line: 387, column: 40, scope: !11504)
!11506 = !DILocation(line: 387, column: 8, scope: !11485)
!11507 = !DILocation(line: 390, column: 26, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !11429, line: 390, column: 10)
!11509 = distinct !DILexicalBlock(scope: !11504, file: !11429, line: 388, column: 5)
!11510 = !DILocation(line: 390, column: 55, scope: !11508)
!11511 = !DILocation(line: 396, column: 26, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11509, file: !11429, line: 396, column: 10)
!11513 = !DILocation(line: 396, column: 55, scope: !11512)
!11514 = !DILocation(line: 402, column: 26, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11509, file: !11429, line: 402, column: 10)
!11516 = !DILocation(line: 402, column: 55, scope: !11515)
!11517 = !DILocation(line: 407, column: 26, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11509, file: !11429, line: 407, column: 10)
!11519 = !DILocation(line: 407, column: 55, scope: !11518)
!11520 = !DILocation(line: 413, column: 28, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !11429, line: 413, column: 12)
!11522 = distinct !DILexicalBlock(scope: !11518, file: !11429, line: 412, column: 7)
!11523 = !DILocation(line: 413, column: 57, scope: !11521)
!11524 = !DILocation(line: 0, scope: !11485)
!11525 = !DILocation(line: 420, column: 8, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 420, column: 8)
!11527 = !DILocation(line: 420, column: 40, scope: !11526)
!11528 = !DILocation(line: 420, column: 8, scope: !11485)
!11529 = !DILocation(line: 423, column: 26, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !11429, line: 423, column: 10)
!11531 = distinct !DILexicalBlock(scope: !11526, file: !11429, line: 421, column: 5)
!11532 = !DILocation(line: 423, column: 55, scope: !11530)
!11533 = !DILocation(line: 429, column: 26, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11531, file: !11429, line: 429, column: 10)
!11535 = !DILocation(line: 429, column: 55, scope: !11534)
!11536 = !DILocation(line: 435, column: 28, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !11429, line: 435, column: 12)
!11538 = distinct !DILexicalBlock(scope: !11534, file: !11429, line: 434, column: 7)
!11539 = !DILocation(line: 435, column: 57, scope: !11537)
!11540 = !DILocation(line: 444, column: 5, scope: !11485)
!11541 = !DILocation(line: 448, column: 5, scope: !11485)
!11542 = !DILocation(line: 451, column: 18, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 449, column: 5)
!11544 = !DILocation(line: 452, column: 12, scope: !11543)
!11545 = !DILocation(line: 453, column: 26, scope: !11485)
!11546 = !DILocation(line: 453, column: 38, scope: !11485)
!11547 = !DILocation(line: 453, column: 5, scope: !11543)
!11548 = distinct !{!11548, !11541, !11549}
!11549 = !DILocation(line: 453, column: 54, scope: !11485)
!11550 = !DILocation(line: 0, scope: !11481)
!11551 = !DILocation(line: 464, column: 3, scope: !11469)
!11552 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11553, file: !11553, line: 519, type: !135, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11553 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11554 = !DILocation(line: 521, column: 21, scope: !11552)
!11555 = !DILocation(line: 521, column: 3, scope: !11552)
!11556 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6287, file: !6287, line: 1543, type: !6529, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11557)
!11557 = !{!11558}
!11558 = !DILocalVariable(name: "Latency", arg: 1, scope: !11556, file: !6287, line: 1543, type: !137)
!11559 = !DILocation(line: 0, scope: !11556)
!11560 = !DILocation(line: 1545, column: 3, scope: !11556)
!11561 = !DILocation(line: 1546, column: 1, scope: !11556)
!11562 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6287, file: !6287, line: 1569, type: !135, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11563 = !DILocation(line: 1571, column: 21, scope: !11562)
!11564 = !DILocation(line: 1571, column: 3, scope: !11562)
!11565 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11429, file: !11429, line: 483, type: !11566, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11582)
!11566 = !DISubroutineType(types: !11567)
!11567 = !{!11472, !11568, !11575}
!11568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11569, size: 32)
!11569 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11436, line: 114, baseType: !11570)
!11570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11436, line: 94, size: 96, elements: !11571)
!11571 = !{!11572, !11573, !11574}
!11572 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11570, file: !11436, line: 96, baseType: !137, size: 32)
!11573 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11570, file: !11436, line: 102, baseType: !137, size: 32, offset: 32)
!11574 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11570, file: !11436, line: 109, baseType: !137, size: 32, offset: 64)
!11575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11576, size: 32)
!11576 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11436, line: 139, baseType: !11577)
!11577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11436, line: 119, size: 96, elements: !11578)
!11578 = !{!11579, !11580, !11581}
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11577, file: !11436, line: 121, baseType: !137, size: 32)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11577, file: !11436, line: 127, baseType: !137, size: 32, offset: 32)
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11577, file: !11436, line: 133, baseType: !137, size: 32, offset: 64)
!11582 = !{!11583, !11584, !11585, !11586}
!11583 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11565, file: !11429, line: 483, type: !11568)
!11584 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11565, file: !11429, line: 484, type: !11575)
!11585 = !DILocalVariable(name: "status", scope: !11565, file: !11429, line: 486, type: !11472)
!11586 = !DILocalVariable(name: "pllfreq", scope: !11565, file: !11429, line: 487, type: !137)
!11587 = !DILocation(line: 0, scope: !11565)
!11588 = !DILocation(line: 490, column: 6, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11565, file: !11429, line: 490, column: 6)
!11590 = !DILocation(line: 490, column: 25, scope: !11589)
!11591 = !DILocation(line: 490, column: 6, scope: !11565)
!11592 = !DILocation(line: 493, column: 15, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11589, file: !11429, line: 491, column: 3)
!11594 = !DILocation(line: 496, column: 8, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11593, file: !11429, line: 496, column: 8)
!11596 = !DILocation(line: 496, column: 29, scope: !11595)
!11597 = !DILocation(line: 496, column: 8, scope: !11593)
!11598 = !DILocation(line: 498, column: 7, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11595, file: !11429, line: 497, column: 5)
!11600 = !DILocation(line: 499, column: 7, scope: !11599)
!11601 = !DILocation(line: 499, column: 14, scope: !11599)
!11602 = !DILocation(line: 499, column: 35, scope: !11599)
!11603 = distinct !{!11603, !11600, !11604}
!11604 = !DILocation(line: 502, column: 7, scope: !11599)
!11605 = !DILocation(line: 506, column: 76, scope: !11593)
!11606 = !DILocation(line: 506, column: 103, scope: !11593)
!11607 = !DILocation(line: 507, column: 54, scope: !11593)
!11608 = !DILocation(line: 506, column: 5, scope: !11593)
!11609 = !DILocation(line: 510, column: 14, scope: !11593)
!11610 = !DILocation(line: 511, column: 3, scope: !11593)
!11611 = !DILocation(line: 0, scope: !11589)
!11612 = !DILocation(line: 518, column: 3, scope: !11565)
!11613 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11429, file: !11429, line: 642, type: !11614, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11616)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{!11472}
!11616 = !{!11617}
!11617 = !DILocalVariable(name: "status", scope: !11613, file: !11429, line: 644, type: !11472)
!11618 = !DILocation(line: 0, scope: !11613)
!11619 = !DILocation(line: 647, column: 6, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11613, file: !11429, line: 647, column: 6)
!11621 = !DILocation(line: 647, column: 27, scope: !11620)
!11622 = !DILocation(line: 655, column: 6, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11613, file: !11429, line: 655, column: 6)
!11624 = !DILocation(line: 655, column: 30, scope: !11623)
!11625 = !DILocation(line: 663, column: 6, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11613, file: !11429, line: 663, column: 6)
!11627 = !DILocation(line: 663, column: 30, scope: !11626)
!11628 = !DILocation(line: 663, column: 6, scope: !11613)
!11629 = !DILocation(line: 669, column: 3, scope: !11613)
!11630 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11429, file: !11429, line: 611, type: !11631, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11633)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{!137, !137, !11568}
!11633 = !{!11634, !11635, !11636}
!11634 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11630, file: !11429, line: 611, type: !137)
!11635 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11630, file: !11429, line: 611, type: !11568)
!11636 = !DILocalVariable(name: "pllfreq", scope: !11630, file: !11429, line: 613, type: !137)
!11637 = !DILocation(line: 0, scope: !11630)
!11638 = !DILocation(line: 622, column: 56, scope: !11630)
!11639 = !DILocation(line: 622, column: 61, scope: !11630)
!11640 = !DILocation(line: 622, column: 32, scope: !11630)
!11641 = !DILocation(line: 626, column: 45, scope: !11630)
!11642 = !DILocation(line: 626, column: 50, scope: !11630)
!11643 = !DILocation(line: 626, column: 21, scope: !11630)
!11644 = !DILocation(line: 630, column: 47, scope: !11630)
!11645 = !DILocation(line: 630, column: 82, scope: !11630)
!11646 = !DILocation(line: 630, column: 21, scope: !11630)
!11647 = !DILocation(line: 633, column: 3, scope: !11630)
!11648 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8474, file: !8474, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11649 = !DILocation(line: 3009, column: 11, scope: !11648)
!11650 = !DILocation(line: 3009, column: 44, scope: !11648)
!11651 = !DILocation(line: 3009, column: 3, scope: !11648)
!11652 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8474, file: !8474, line: 2987, type: !2964, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11653 = !DILocation(line: 2989, column: 3, scope: !11652)
!11654 = !DILocation(line: 2990, column: 1, scope: !11652)
!11655 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8474, file: !8474, line: 4304, type: !8593, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11656)
!11656 = !{!11657, !11658, !11659, !11660}
!11657 = !DILocalVariable(name: "Source", arg: 1, scope: !11655, file: !8474, line: 4304, type: !137)
!11658 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11655, file: !8474, line: 4304, type: !137)
!11659 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11655, file: !8474, line: 4304, type: !137)
!11660 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11655, file: !8474, line: 4304, type: !137)
!11661 = !DILocation(line: 0, scope: !11655)
!11662 = !DILocation(line: 4306, column: 3, scope: !11655)
!11663 = !DILocation(line: 4308, column: 3, scope: !11655)
!11664 = !DILocation(line: 4312, column: 1, scope: !11655)
!11665 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11429, file: !11429, line: 681, type: !11666, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11668)
!11666 = !DISubroutineType(types: !11667)
!11667 = !{!11472, !137, !11575}
!11668 = !{!11669, !11670, !11671, !11672}
!11669 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11665, file: !11429, line: 681, type: !137)
!11670 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11665, file: !11429, line: 681, type: !11575)
!11671 = !DILocalVariable(name: "status", scope: !11665, file: !11429, line: 683, type: !11472)
!11672 = !DILocalVariable(name: "hclk_frequency", scope: !11665, file: !11429, line: 684, type: !137)
!11673 = !DILocation(line: 0, scope: !11665)
!11674 = !DILocation(line: 691, column: 20, scope: !11665)
!11675 = !DILocation(line: 694, column: 6, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11665, file: !11429, line: 694, column: 6)
!11677 = !DILocation(line: 694, column: 22, scope: !11676)
!11678 = !DILocation(line: 694, column: 6, scope: !11665)
!11679 = !DILocation(line: 697, column: 14, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11676, file: !11429, line: 695, column: 3)
!11681 = !DILocation(line: 701, column: 13, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11665, file: !11429, line: 701, column: 6)
!11683 = !DILocation(line: 701, column: 6, scope: !11665)
!11684 = !DILocation(line: 704, column: 5, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11682, file: !11429, line: 702, column: 3)
!11686 = !DILocation(line: 705, column: 5, scope: !11685)
!11687 = !DILocation(line: 705, column: 12, scope: !11685)
!11688 = !DILocation(line: 705, column: 33, scope: !11685)
!11689 = distinct !{!11689, !11686, !11690}
!11690 = !DILocation(line: 708, column: 5, scope: !11685)
!11691 = !DILocation(line: 711, column: 49, scope: !11685)
!11692 = !DILocation(line: 711, column: 5, scope: !11685)
!11693 = !DILocation(line: 712, column: 5, scope: !11685)
!11694 = !DILocation(line: 713, column: 5, scope: !11685)
!11695 = !DILocation(line: 713, column: 12, scope: !11685)
!11696 = !DILocation(line: 713, column: 37, scope: !11685)
!11697 = distinct !{!11697, !11694, !11698}
!11698 = !DILocation(line: 716, column: 5, scope: !11685)
!11699 = !DILocation(line: 719, column: 50, scope: !11685)
!11700 = !DILocation(line: 719, column: 5, scope: !11685)
!11701 = !DILocation(line: 720, column: 50, scope: !11685)
!11702 = !DILocation(line: 720, column: 5, scope: !11685)
!11703 = !DILocation(line: 721, column: 3, scope: !11685)
!11704 = !DILocation(line: 724, column: 6, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11665, file: !11429, line: 724, column: 6)
!11706 = !DILocation(line: 724, column: 22, scope: !11705)
!11707 = !DILocation(line: 724, column: 6, scope: !11665)
!11708 = !DILocation(line: 727, column: 14, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11705, file: !11429, line: 725, column: 3)
!11710 = !DILocation(line: 728, column: 3, scope: !11709)
!11711 = !DILocation(line: 731, column: 13, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11665, file: !11429, line: 731, column: 6)
!11713 = !DILocation(line: 731, column: 6, scope: !11665)
!11714 = !DILocation(line: 733, column: 5, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11712, file: !11429, line: 732, column: 3)
!11716 = !DILocation(line: 734, column: 3, scope: !11715)
!11717 = !DILocation(line: 736, column: 3, scope: !11665)
!11718 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8474, file: !8474, line: 4184, type: !2964, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11719 = !DILocation(line: 4186, column: 3, scope: !11718)
!11720 = !DILocation(line: 4187, column: 1, scope: !11718)
!11721 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8474, file: !8474, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11722 = !DILocation(line: 4207, column: 11, scope: !11721)
!11723 = !DILocation(line: 4207, column: 44, scope: !11721)
!11724 = !DILocation(line: 4207, column: 3, scope: !11721)
!11725 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8474, file: !8474, line: 3224, type: !6529, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11726)
!11726 = !{!11727}
!11727 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11725, file: !8474, line: 3224, type: !137)
!11728 = !DILocation(line: 0, scope: !11725)
!11729 = !DILocation(line: 3226, column: 3, scope: !11725)
!11730 = !DILocation(line: 3227, column: 1, scope: !11725)
!11731 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8474, file: !8474, line: 3188, type: !6529, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11732)
!11732 = !{!11733}
!11733 = !DILocalVariable(name: "Source", arg: 1, scope: !11731, file: !8474, line: 3188, type: !137)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 3190, column: 3, scope: !11731)
!11736 = !DILocation(line: 3191, column: 1, scope: !11731)
!11737 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8474, file: !8474, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11738 = !DILocation(line: 3206, column: 21, scope: !11737)
!11739 = !DILocation(line: 3206, column: 3, scope: !11737)
!11740 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8474, file: !8474, line: 3240, type: !6529, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11741)
!11741 = !{!11742}
!11742 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11740, file: !8474, line: 3240, type: !137)
!11743 = !DILocation(line: 0, scope: !11740)
!11744 = !DILocation(line: 3242, column: 3, scope: !11740)
!11745 = !DILocation(line: 3243, column: 1, scope: !11740)
!11746 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8474, file: !8474, line: 3256, type: !6529, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11747)
!11747 = !{!11748}
!11748 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11746, file: !8474, line: 3256, type: !137)
!11749 = !DILocation(line: 0, scope: !11746)
!11750 = !DILocation(line: 3258, column: 3, scope: !11746)
!11751 = !DILocation(line: 3259, column: 1, scope: !11746)
!11752 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8474, file: !8474, line: 5969, type: !135, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11753 = !DILocation(line: 5971, column: 11, scope: !11752)
!11754 = !DILocation(line: 5971, column: 47, scope: !11752)
!11755 = !DILocation(line: 5971, column: 3, scope: !11752)
!11756 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8474, file: !8474, line: 5153, type: !135, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11757 = !DILocation(line: 5155, column: 11, scope: !11756)
!11758 = !DILocation(line: 5155, column: 47, scope: !11756)
!11759 = !DILocation(line: 5155, column: 3, scope: !11756)
!11760 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11429, file: !11429, line: 540, type: !11761, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !11763)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{!11472, !137, !137, !11568, !11575}
!11763 = !{!11764, !11765, !11766, !11767, !11768, !11769}
!11764 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11760, file: !11429, line: 540, type: !137)
!11765 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11760, file: !11429, line: 540, type: !137)
!11766 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11760, file: !11429, line: 541, type: !11568)
!11767 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11760, file: !11429, line: 541, type: !11575)
!11768 = !DILocalVariable(name: "status", scope: !11760, file: !11429, line: 543, type: !11472)
!11769 = !DILocalVariable(name: "pllfreq", scope: !11760, file: !11429, line: 544, type: !137)
!11770 = !DILocation(line: 0, scope: !11760)
!11771 = !DILocation(line: 551, column: 6, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11760, file: !11429, line: 551, column: 6)
!11773 = !DILocation(line: 551, column: 25, scope: !11772)
!11774 = !DILocation(line: 551, column: 6, scope: !11760)
!11775 = !DILocation(line: 554, column: 15, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11772, file: !11429, line: 552, column: 3)
!11777 = !DILocation(line: 557, column: 8, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11776, file: !11429, line: 557, column: 8)
!11779 = !DILocation(line: 557, column: 29, scope: !11778)
!11780 = !DILocation(line: 557, column: 8, scope: !11776)
!11781 = !DILocation(line: 560, column: 20, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !11429, line: 560, column: 10)
!11783 = distinct !DILexicalBlock(scope: !11778, file: !11429, line: 558, column: 5)
!11784 = !DILocation(line: 560, column: 10, scope: !11783)
!11785 = !DILocation(line: 562, column: 9, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11782, file: !11429, line: 561, column: 7)
!11787 = !DILocation(line: 563, column: 7, scope: !11786)
!11788 = !DILocation(line: 566, column: 9, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11782, file: !11429, line: 565, column: 7)
!11790 = !DILocation(line: 570, column: 7, scope: !11783)
!11791 = !DILocation(line: 571, column: 7, scope: !11783)
!11792 = !DILocation(line: 571, column: 14, scope: !11783)
!11793 = !DILocation(line: 571, column: 35, scope: !11783)
!11794 = distinct !{!11794, !11791, !11795}
!11795 = !DILocation(line: 574, column: 7, scope: !11783)
!11796 = !DILocation(line: 578, column: 76, scope: !11776)
!11797 = !DILocation(line: 578, column: 103, scope: !11776)
!11798 = !DILocation(line: 579, column: 54, scope: !11776)
!11799 = !DILocation(line: 578, column: 5, scope: !11776)
!11800 = !DILocation(line: 582, column: 14, scope: !11776)
!11801 = !DILocation(line: 583, column: 3, scope: !11776)
!11802 = !DILocation(line: 0, scope: !11772)
!11803 = !DILocation(line: 590, column: 3, scope: !11760)
!11804 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8474, file: !8474, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11805 = !DILocation(line: 2971, column: 11, scope: !11804)
!11806 = !DILocation(line: 2971, column: 44, scope: !11804)
!11807 = !DILocation(line: 2971, column: 3, scope: !11804)
!11808 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8474, file: !8474, line: 2929, type: !2964, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11809 = !DILocation(line: 2931, column: 3, scope: !11808)
!11810 = !DILocation(line: 2932, column: 1, scope: !11808)
!11811 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8474, file: !8474, line: 2939, type: !2964, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11812 = !DILocation(line: 2941, column: 3, scope: !11811)
!11813 = !DILocation(line: 2942, column: 1, scope: !11811)
!11814 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8474, file: !8474, line: 2949, type: !2964, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !162)
!11815 = !DILocation(line: 2951, column: 3, scope: !11814)
!11816 = !DILocation(line: 2952, column: 1, scope: !11814)
!11817 = distinct !DISubprogram(name: "z_device_state_init", scope: !11818, file: !11818, line: 23, type: !2964, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11819)
!11818 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "dev", scope: !11817, file: !11818, line: 25, type: !11821)
!11821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11822, size: 32)
!11822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11823)
!11823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !11824)
!11824 = !{!11825, !11826, !11827, !11828, !11834, !11835}
!11825 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11823, file: !196, line: 380, baseType: !199, size: 32)
!11826 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11823, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!11827 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11823, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11823, file: !196, line: 386, baseType: !11829, size: 32, offset: 96)
!11829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11830, size: 32)
!11830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !11831)
!11831 = !{!11832, !11833}
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11830, file: !196, line: 359, baseType: !208, size: 8)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11830, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11823, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11823, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!11836 = !DILocation(line: 0, scope: !11817)
!11837 = !DILocation(line: 31, column: 1, scope: !11817)
!11838 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11818, file: !11818, line: 33, type: !11839, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!11821, !199}
!11841 = !{!11842, !11843}
!11842 = !DILocalVariable(name: "name", arg: 1, scope: !11838, file: !11818, line: 33, type: !199)
!11843 = !DILocalVariable(name: "dev", scope: !11838, file: !11818, line: 35, type: !11821)
!11844 = !DILocation(line: 0, scope: !11838)
!11845 = !DILocation(line: 40, column: 12, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11838, file: !11818, line: 40, column: 6)
!11847 = !DILocation(line: 40, column: 21, scope: !11846)
!11848 = !DILocation(line: 40, column: 25, scope: !11846)
!11849 = !DILocation(line: 40, column: 33, scope: !11846)
!11850 = !DILocation(line: 40, column: 6, scope: !11838)
!11851 = !DILocation(line: 55, column: 2, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11838, file: !11818, line: 55, column: 2)
!11853 = !DILocation(line: 50, column: 7, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !11818, line: 50, column: 7)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !11818, line: 49, column: 57)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !11818, line: 49, column: 2)
!11857 = distinct !DILexicalBlock(scope: !11838, file: !11818, line: 49, column: 2)
!11858 = !DILocation(line: 50, column: 30, scope: !11854)
!11859 = !DILocation(line: 50, column: 39, scope: !11854)
!11860 = !DILocation(line: 50, column: 44, scope: !11854)
!11861 = !DILocation(line: 50, column: 7, scope: !11855)
!11862 = !DILocation(line: 49, column: 53, scope: !11856)
!11863 = !DILocation(line: 49, column: 33, scope: !11856)
!11864 = !DILocation(line: 49, column: 2, scope: !11857)
!11865 = distinct !{!11865, !11864, !11866}
!11866 = !DILocation(line: 53, column: 2, scope: !11857)
!11867 = !DILocation(line: 56, column: 7, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11869, file: !11818, line: 56, column: 7)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !11818, line: 55, column: 57)
!11870 = distinct !DILexicalBlock(scope: !11852, file: !11818, line: 55, column: 2)
!11871 = !DILocation(line: 56, column: 30, scope: !11868)
!11872 = !DILocation(line: 56, column: 52, scope: !11868)
!11873 = !DILocation(line: 56, column: 34, scope: !11868)
!11874 = !DILocation(line: 56, column: 58, scope: !11868)
!11875 = !DILocation(line: 56, column: 7, scope: !11869)
!11876 = !DILocation(line: 55, column: 53, scope: !11870)
!11877 = !DILocation(line: 55, column: 33, scope: !11870)
!11878 = distinct !{!11878, !11851, !11879}
!11879 = !DILocation(line: 59, column: 2, scope: !11852)
!11880 = !DILocation(line: 62, column: 1, scope: !11838)
!11881 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11818, file: !11818, line: 93, type: !11882, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11884)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!211, !11821}
!11884 = !{!11885}
!11885 = !DILocalVariable(name: "dev", arg: 1, scope: !11881, file: !11818, line: 93, type: !11821)
!11886 = !DILocation(line: 0, scope: !11881)
!11887 = !DILocation(line: 99, column: 10, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11881, file: !11818, line: 99, column: 6)
!11889 = !DILocation(line: 99, column: 6, scope: !11881)
!11890 = !DILocation(line: 103, column: 14, scope: !11881)
!11891 = !DILocation(line: 103, column: 21, scope: !11881)
!11892 = !DILocation(line: 103, column: 33, scope: !11881)
!11893 = !DILocation(line: 103, column: 49, scope: !11881)
!11894 = !DILocation(line: 103, column: 58, scope: !11881)
!11895 = !DILocation(line: 104, column: 1, scope: !11881)
!11896 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11818, file: !11818, line: 87, type: !11897, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11900)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{!120, !11899}
!11899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11821, size: 32)
!11900 = !{!11901}
!11901 = !DILocalVariable(name: "devices", arg: 1, scope: !11896, file: !11818, line: 87, type: !11899)
!11902 = !DILocation(line: 0, scope: !11896)
!11903 = !DILocation(line: 89, column: 11, scope: !11896)
!11904 = !DILocation(line: 90, column: 2, scope: !11896)
!11905 = distinct !DISubprogram(name: "device_required_foreach", scope: !11818, file: !11818, line: 125, type: !11906, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11912)
!11906 = !DISubroutineType(types: !11907)
!11907 = !{!103, !11821, !11908, !102}
!11908 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !196, line: 471, baseType: !11909)
!11909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11910, size: 32)
!11910 = !DISubroutineType(types: !11911)
!11911 = !{!103, !11821, !102}
!11912 = !{!11913, !11914, !11915, !11916, !11917}
!11913 = !DILocalVariable(name: "dev", arg: 1, scope: !11905, file: !11818, line: 125, type: !11821)
!11914 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11905, file: !11818, line: 126, type: !11908)
!11915 = !DILocalVariable(name: "context", arg: 3, scope: !11905, file: !11818, line: 127, type: !102)
!11916 = !DILocalVariable(name: "handle_count", scope: !11905, file: !11818, line: 129, type: !120)
!11917 = !DILocalVariable(name: "handles", scope: !11905, file: !11818, line: 130, type: !214)
!11918 = !DILocation(line: 0, scope: !11905)
!11919 = !DILocation(line: 129, column: 2, scope: !11905)
!11920 = !DILocation(line: 129, column: 9, scope: !11905)
!11921 = !DILocation(line: 130, column: 35, scope: !11905)
!11922 = !DILocation(line: 132, column: 33, scope: !11905)
!11923 = !DILocation(line: 132, column: 9, scope: !11905)
!11924 = !DILocation(line: 133, column: 1, scope: !11905)
!11925 = !DILocation(line: 132, column: 2, scope: !11905)
!11926 = distinct !DISubprogram(name: "device_required_handles_get", scope: !196, file: !196, line: 493, type: !11927, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!214, !11821, !2420}
!11929 = !{!11930, !11931, !11932, !11933}
!11930 = !DILocalVariable(name: "dev", arg: 1, scope: !11926, file: !196, line: 493, type: !11821)
!11931 = !DILocalVariable(name: "count", arg: 2, scope: !11926, file: !196, line: 493, type: !2420)
!11932 = !DILocalVariable(name: "rv", scope: !11926, file: !196, line: 495, type: !214)
!11933 = !DILocalVariable(name: "i", scope: !11934, file: !196, line: 498, type: !120)
!11934 = distinct !DILexicalBlock(scope: !11935, file: !196, line: 497, column: 18)
!11935 = distinct !DILexicalBlock(scope: !11926, file: !196, line: 497, column: 6)
!11936 = !DILocation(line: 0, scope: !11926)
!11937 = !DILocation(line: 495, column: 35, scope: !11926)
!11938 = !DILocation(line: 497, column: 9, scope: !11935)
!11939 = !DILocation(line: 497, column: 6, scope: !11926)
!11940 = !DILocation(line: 0, scope: !11934)
!11941 = !DILocation(line: 500, column: 11, scope: !11934)
!11942 = !DILocation(line: 500, column: 40, scope: !11934)
!11943 = !DILocation(line: 502, column: 4, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11934, file: !196, line: 501, column: 40)
!11945 = distinct !{!11945, !11946, !11947}
!11946 = !DILocation(line: 500, column: 3, scope: !11934)
!11947 = !DILocation(line: 503, column: 3, scope: !11934)
!11948 = !DILocation(line: 504, column: 10, scope: !11934)
!11949 = !DILocation(line: 505, column: 2, scope: !11934)
!11950 = !DILocation(line: 507, column: 2, scope: !11926)
!11951 = distinct !DISubprogram(name: "device_visitor", scope: !11818, file: !11818, line: 106, type: !11952, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11954)
!11952 = !DISubroutineType(types: !11953)
!11953 = !{!103, !214, !120, !11908, !102}
!11954 = !{!11955, !11956, !11957, !11958, !11959, !11961, !11964, !11965}
!11955 = !DILocalVariable(name: "handles", arg: 1, scope: !11951, file: !11818, line: 106, type: !214)
!11956 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11951, file: !11818, line: 107, type: !120)
!11957 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11951, file: !11818, line: 108, type: !11908)
!11958 = !DILocalVariable(name: "context", arg: 4, scope: !11951, file: !11818, line: 109, type: !102)
!11959 = !DILocalVariable(name: "i", scope: !11960, file: !11818, line: 112, type: !120)
!11960 = distinct !DILexicalBlock(scope: !11951, file: !11818, line: 112, column: 2)
!11961 = !DILocalVariable(name: "dh", scope: !11962, file: !11818, line: 113, type: !216)
!11962 = distinct !DILexicalBlock(scope: !11963, file: !11818, line: 112, column: 44)
!11963 = distinct !DILexicalBlock(scope: !11960, file: !11818, line: 112, column: 2)
!11964 = !DILocalVariable(name: "rdev", scope: !11962, file: !11818, line: 114, type: !11821)
!11965 = !DILocalVariable(name: "rc", scope: !11962, file: !11818, line: 115, type: !103)
!11966 = !DILocation(line: 0, scope: !11951)
!11967 = !DILocation(line: 0, scope: !11960)
!11968 = !DILocation(line: 112, column: 23, scope: !11963)
!11969 = !DILocation(line: 112, column: 2, scope: !11960)
!11970 = distinct !{!11970, !11969, !11971}
!11971 = !DILocation(line: 120, column: 2, scope: !11960)
!11972 = !DILocation(line: 113, column: 24, scope: !11962)
!11973 = !DILocation(line: 0, scope: !11962)
!11974 = !DILocation(line: 114, column: 31, scope: !11962)
!11975 = !DILocation(line: 115, column: 12, scope: !11962)
!11976 = !DILocation(line: 117, column: 10, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11962, file: !11818, line: 117, column: 7)
!11978 = !DILocation(line: 112, column: 39, scope: !11963)
!11979 = !DILocation(line: 123, column: 1, scope: !11951)
!11980 = distinct !DISubprogram(name: "device_from_handle", scope: !196, file: !196, line: 439, type: !11981, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11983)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!11821, !216}
!11983 = !{!11984, !11985, !11986}
!11984 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11980, file: !196, line: 439, type: !216)
!11985 = !DILocalVariable(name: "dev", scope: !11980, file: !196, line: 443, type: !11821)
!11986 = !DILocalVariable(name: "numdev", scope: !11980, file: !196, line: 444, type: !120)
!11987 = !DILocation(line: 0, scope: !11980)
!11988 = !DILocation(line: 446, column: 7, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11980, file: !196, line: 446, column: 6)
!11990 = !DILocation(line: 446, column: 18, scope: !11989)
!11991 = !DILocation(line: 446, column: 23, scope: !11989)
!11992 = !DILocation(line: 450, column: 2, scope: !11980)
!11993 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11818, file: !11818, line: 135, type: !11906, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !11994)
!11994 = !{!11995, !11996, !11997, !11998, !11999}
!11995 = !DILocalVariable(name: "dev", arg: 1, scope: !11993, file: !11818, line: 135, type: !11821)
!11996 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11993, file: !11818, line: 136, type: !11908)
!11997 = !DILocalVariable(name: "context", arg: 3, scope: !11993, file: !11818, line: 137, type: !102)
!11998 = !DILocalVariable(name: "handle_count", scope: !11993, file: !11818, line: 139, type: !120)
!11999 = !DILocalVariable(name: "handles", scope: !11993, file: !11818, line: 140, type: !214)
!12000 = !DILocation(line: 0, scope: !11993)
!12001 = !DILocation(line: 139, column: 2, scope: !11993)
!12002 = !DILocation(line: 139, column: 9, scope: !11993)
!12003 = !DILocation(line: 140, column: 35, scope: !11993)
!12004 = !DILocation(line: 142, column: 33, scope: !11993)
!12005 = !DILocation(line: 142, column: 9, scope: !11993)
!12006 = !DILocation(line: 143, column: 1, scope: !11993)
!12007 = !DILocation(line: 142, column: 2, scope: !11993)
!12008 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !196, file: !196, line: 573, type: !11927, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !12009)
!12009 = !{!12010, !12011, !12012, !12013, !12014}
!12010 = !DILocalVariable(name: "dev", arg: 1, scope: !12008, file: !196, line: 573, type: !11821)
!12011 = !DILocalVariable(name: "count", arg: 2, scope: !12008, file: !196, line: 573, type: !2420)
!12012 = !DILocalVariable(name: "rv", scope: !12008, file: !196, line: 575, type: !214)
!12013 = !DILocalVariable(name: "region", scope: !12008, file: !196, line: 576, type: !120)
!12014 = !DILocalVariable(name: "i", scope: !12008, file: !196, line: 577, type: !120)
!12015 = !DILocation(line: 0, scope: !12008)
!12016 = !DILocation(line: 575, column: 35, scope: !12008)
!12017 = !DILocation(line: 579, column: 9, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12008, file: !196, line: 579, column: 6)
!12019 = !DILocation(line: 579, column: 6, scope: !12008)
!12020 = !DILocation(line: 582, column: 8, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !196, line: 582, column: 8)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !196, line: 581, column: 23)
!12023 = distinct !DILexicalBlock(scope: !12018, file: !196, line: 579, column: 18)
!12024 = !DILocation(line: 582, column: 12, scope: !12021)
!12025 = !DILocation(line: 585, column: 6, scope: !12022)
!12026 = !DILocation(line: 0, scope: !12023)
!12027 = !DILocation(line: 581, column: 17, scope: !12023)
!12028 = !DILocation(line: 581, column: 3, scope: !12023)
!12029 = !DILocation(line: 588, column: 10, scope: !12023)
!12030 = !DILocation(line: 588, column: 16, scope: !12023)
!12031 = !DILocation(line: 589, column: 4, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12023, file: !196, line: 588, column: 39)
!12033 = !DILocation(line: 588, column: 3, scope: !12023)
!12034 = distinct !{!12034, !12033, !12035}
!12035 = !DILocation(line: 590, column: 3, scope: !12023)
!12036 = !DILocation(line: 591, column: 10, scope: !12023)
!12037 = !DILocation(line: 592, column: 2, scope: !12023)
!12038 = !DILocation(line: 575, column: 25, scope: !12008)
!12039 = !DILocation(line: 594, column: 2, scope: !12008)
!12040 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1815, file: !1815, line: 49, type: !12041, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1812, retainedNodes: !162)
!12041 = !DISubroutineType(types: !12042)
!12042 = !{!2413}
!12043 = !DILocation(line: 51, column: 10, scope: !12040)
!12044 = !DILocation(line: 51, column: 20, scope: !12040)
!12045 = !DILocation(line: 51, column: 2, scope: !12040)
!12046 = distinct !DISubprogram(name: "coredump", scope: !2931, file: !2931, line: 209, type: !12047, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12193)
!12047 = !DISubroutineType(types: !12048)
!12048 = !{null, !32, !12049, !12093}
!12049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12050, size: 32)
!12050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12051)
!12051 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2545, line: 141, baseType: !12052)
!12052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2545, line: 97, size: 256, elements: !12053)
!12053 = !{!12054}
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12052, file: !2545, line: 107, baseType: !12055, size: 256)
!12055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2545, line: 98, size: 256, elements: !12056)
!12056 = !{!12057, !12062, !12067, !12072, !12077, !12082, !12087, !12092}
!12057 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 99, baseType: !12058, size: 32)
!12058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 99, size: 32, elements: !12059)
!12059 = !{!12060, !12061}
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12058, file: !2545, line: 99, baseType: !137, size: 32)
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12058, file: !2545, line: 99, baseType: !137, size: 32)
!12062 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 100, baseType: !12063, size: 32, offset: 32)
!12063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 100, size: 32, elements: !12064)
!12064 = !{!12065, !12066}
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12063, file: !2545, line: 100, baseType: !137, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12063, file: !2545, line: 100, baseType: !137, size: 32)
!12067 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 101, baseType: !12068, size: 32, offset: 64)
!12068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 101, size: 32, elements: !12069)
!12069 = !{!12070, !12071}
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12068, file: !2545, line: 101, baseType: !137, size: 32)
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12068, file: !2545, line: 101, baseType: !137, size: 32)
!12072 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 102, baseType: !12073, size: 32, offset: 96)
!12073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 102, size: 32, elements: !12074)
!12074 = !{!12075, !12076}
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12073, file: !2545, line: 102, baseType: !137, size: 32)
!12076 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12073, file: !2545, line: 102, baseType: !137, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 103, baseType: !12078, size: 32, offset: 128)
!12078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 103, size: 32, elements: !12079)
!12079 = !{!12080, !12081}
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12078, file: !2545, line: 103, baseType: !137, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12078, file: !2545, line: 103, baseType: !137, size: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 104, baseType: !12083, size: 32, offset: 160)
!12083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 104, size: 32, elements: !12084)
!12084 = !{!12085, !12086}
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12083, file: !2545, line: 104, baseType: !137, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12083, file: !2545, line: 104, baseType: !137, size: 32)
!12087 = !DIDerivedType(tag: DW_TAG_member, scope: !12055, file: !2545, line: 105, baseType: !12088, size: 32, offset: 192)
!12088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12055, file: !2545, line: 105, size: 32, elements: !12089)
!12089 = !{!12090, !12091}
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12088, file: !2545, line: 105, baseType: !137, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12088, file: !2545, line: 105, baseType: !137, size: 32)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12055, file: !2545, line: 106, baseType: !137, size: 32, offset: 224)
!12093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12094, size: 32)
!12094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !12095)
!12095 = !{!12096, !12154, !12166, !12167, !12168, !12169, !12175, !12188}
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12094, file: !263, line: 247, baseType: !12097, size: 384)
!12097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !12098)
!12098 = !{!12099, !12123, !12130, !12131, !12132, !12141, !12142, !12143}
!12099 = !DIDerivedType(tag: DW_TAG_member, scope: !12097, file: !263, line: 60, baseType: !12100, size: 64)
!12100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12097, file: !263, line: 60, size: 64, elements: !12101)
!12101 = !{!12102, !12117}
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12100, file: !263, line: 61, baseType: !12103, size: 64)
!12103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !12104)
!12104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !12105)
!12105 = !{!12106, !12112}
!12106 = !DIDerivedType(tag: DW_TAG_member, scope: !12104, file: !273, line: 38, baseType: !12107, size: 32)
!12107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12104, file: !273, line: 38, size: 32, elements: !12108)
!12108 = !{!12109, !12111}
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12107, file: !273, line: 39, baseType: !12110, size: 32)
!12110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12104, size: 32)
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12107, file: !273, line: 40, baseType: !12110, size: 32)
!12112 = !DIDerivedType(tag: DW_TAG_member, scope: !12104, file: !273, line: 42, baseType: !12113, size: 32, offset: 32)
!12113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12104, file: !273, line: 42, size: 32, elements: !12114)
!12114 = !{!12115, !12116}
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12113, file: !273, line: 43, baseType: !12110, size: 32)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12113, file: !273, line: 44, baseType: !12110, size: 32)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12100, file: !263, line: 62, baseType: !12118, size: 64)
!12118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !12119)
!12119 = !{!12120}
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12118, file: !289, line: 50, baseType: !12121, size: 64)
!12121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12122, size: 64, elements: !294)
!12122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12118, size: 32)
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12097, file: !263, line: 68, baseType: !12124, size: 32, offset: 64)
!12124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12125, size: 32)
!12125 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !12126)
!12126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !12127)
!12127 = !{!12128}
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12126, file: !299, line: 232, baseType: !12129, size: 64)
!12129 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !12104)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12097, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12097, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!12132 = !DIDerivedType(tag: DW_TAG_member, scope: !12097, file: !263, line: 90, baseType: !12133, size: 16, offset: 112)
!12133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12097, file: !263, line: 90, size: 16, elements: !12134)
!12134 = !{!12135, !12140}
!12135 = !DIDerivedType(tag: DW_TAG_member, scope: !12133, file: !263, line: 91, baseType: !12136, size: 16)
!12136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12133, file: !263, line: 91, size: 16, elements: !12137)
!12137 = !{!12138, !12139}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12136, file: !263, line: 96, baseType: !313, size: 8)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12136, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12133, file: !263, line: 100, baseType: !151, size: 16)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12097, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12097, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12097, file: !263, line: 131, baseType: !12144, size: 192, offset: 192)
!12144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !12145)
!12145 = !{!12146, !12147, !12153}
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12144, file: !299, line: 245, baseType: !12103, size: 64)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12144, file: !299, line: 246, baseType: !12148, size: 32, offset: 64)
!12148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !12149)
!12149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12150, size: 32)
!12150 = !DISubroutineType(types: !12151)
!12151 = !{null, !12152}
!12152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12144, size: 32)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12144, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12094, file: !263, line: 250, baseType: !12155, size: 288, offset: 384)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !12156)
!12156 = !{!12157, !12158, !12159, !12160, !12161, !12162, !12163, !12164, !12165}
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12155, file: !334, line: 26, baseType: !137, size: 32)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12155, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12155, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12155, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12155, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12155, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12155, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12155, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12155, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!12166 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12094, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12094, file: !263, line: 256, baseType: !12125, size: 64, offset: 704)
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12094, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12094, file: !263, line: 300, baseType: !12170, size: 96, offset: 800)
!12170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !12171)
!12171 = !{!12172, !12173, !12174}
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12170, file: !263, line: 153, baseType: !22, size: 32)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12170, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12170, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12094, file: !263, line: 325, baseType: !12176, size: 32, offset: 896)
!12176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12177, size: 32)
!12177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !12178)
!12178 = !{!12179, !12185, !12186}
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12177, file: !357, line: 5074, baseType: !12180, size: 96)
!12180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !12181)
!12181 = !{!12182, !12183, !12184}
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12180, file: !113, line: 57, baseType: !116, size: 32)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12180, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12180, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12177, file: !357, line: 5075, baseType: !12125, size: 64, offset: 96)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12177, file: !357, line: 5076, baseType: !12187, offset: 160)
!12187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12094, file: !263, line: 343, baseType: !12189, size: 64, offset: 928)
!12189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !12190)
!12190 = !{!12191, !12192}
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12189, file: !334, line: 63, baseType: !137, size: 32)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12189, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!12193 = !{!12194, !12195, !12196}
!12194 = !DILocalVariable(name: "reason", arg: 1, scope: !12046, file: !2931, line: 209, type: !32)
!12195 = !DILocalVariable(name: "esf", arg: 2, scope: !12046, file: !2931, line: 209, type: !12049)
!12196 = !DILocalVariable(name: "thread", arg: 3, scope: !12046, file: !2931, line: 210, type: !12093)
!12197 = !DILocation(line: 0, scope: !12046)
!12198 = !DILocation(line: 212, column: 1, scope: !12046)
!12199 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2931, file: !2931, line: 214, type: !12200, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12202)
!12200 = !DISubroutineType(types: !12201)
!12201 = !{null, !22, !22}
!12202 = !{!12203, !12204}
!12203 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12199, file: !2931, line: 214, type: !22)
!12204 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12199, file: !2931, line: 214, type: !22)
!12205 = !DILocation(line: 0, scope: !12199)
!12206 = !DILocation(line: 216, column: 1, scope: !12199)
!12207 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2931, file: !2931, line: 218, type: !12208, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12210)
!12208 = !DISubroutineType(types: !12209)
!12209 = !{null, !1856, !120}
!12210 = !{!12211, !12212}
!12211 = !DILocalVariable(name: "buf", arg: 1, scope: !12207, file: !2931, line: 218, type: !1856)
!12212 = !DILocalVariable(name: "buflen", arg: 2, scope: !12207, file: !2931, line: 218, type: !120)
!12213 = !DILocation(line: 0, scope: !12207)
!12214 = !DILocation(line: 220, column: 1, scope: !12207)
!12215 = distinct !DISubprogram(name: "coredump_query", scope: !2931, file: !2931, line: 222, type: !12216, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12218)
!12216 = !DISubroutineType(types: !12217)
!12217 = !{!103, !2930, !102}
!12218 = !{!12219, !12220}
!12219 = !DILocalVariable(name: "query_id", arg: 1, scope: !12215, file: !2931, line: 222, type: !2930)
!12220 = !DILocalVariable(name: "arg", arg: 2, scope: !12215, file: !2931, line: 222, type: !102)
!12221 = !DILocation(line: 0, scope: !12215)
!12222 = !DILocation(line: 224, column: 2, scope: !12215)
!12223 = distinct !DISubprogram(name: "coredump_cmd", scope: !2931, file: !2931, line: 227, type: !12224, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12226)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{!103, !2937, !102}
!12226 = !{!12227, !12228}
!12227 = !DILocalVariable(name: "query_id", arg: 1, scope: !12223, file: !2931, line: 227, type: !2937)
!12228 = !DILocalVariable(name: "arg", arg: 2, scope: !12223, file: !2931, line: 227, type: !102)
!12229 = !DILocation(line: 0, scope: !12223)
!12230 = !DILocation(line: 229, column: 2, scope: !12223)
!12231 = distinct !DISubprogram(name: "arch_system_halt", scope: !12232, file: !12232, line: 23, type: !6277, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12233)
!12232 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12233 = !{!12234}
!12234 = !DILocalVariable(name: "reason", arg: 1, scope: !12231, file: !12232, line: 23, type: !32)
!12235 = !DILocation(line: 0, scope: !12231)
!12236 = !DILocation(line: 55, column: 2, scope: !12237, inlinedAt: !12241)
!12237 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12238)
!12238 = !{!12239, !12240}
!12239 = !DILocalVariable(name: "key", scope: !12237, file: !6266, line: 44, type: !32)
!12240 = !DILocalVariable(name: "tmp", scope: !12237, file: !6266, line: 53, type: !32)
!12241 = distinct !DILocation(line: 31, column: 8, scope: !12231)
!12242 = !{i64 2594918}
!12243 = !DILocation(line: 0, scope: !12237, inlinedAt: !12241)
!12244 = !DILocation(line: 32, column: 2, scope: !12231)
!12245 = !DILocation(line: 32, column: 2, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !12232, line: 32, column: 2)
!12247 = distinct !DILexicalBlock(scope: !12231, file: !12232, line: 32, column: 2)
!12248 = distinct !{!12248, !12249, !12250}
!12249 = !DILocation(line: 32, column: 2, scope: !12247)
!12250 = !DILocation(line: 34, column: 2, scope: !12247)
!12251 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12232, file: !12232, line: 39, type: !12252, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12254)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{null, !32, !12049}
!12254 = !{!12255, !12256}
!12255 = !DILocalVariable(name: "reason", arg: 1, scope: !12251, file: !12232, line: 39, type: !32)
!12256 = !DILocalVariable(name: "esf", arg: 2, scope: !12251, file: !12232, line: 40, type: !12049)
!12257 = !DILocation(line: 0, scope: !12251)
!12258 = !DILocation(line: 46, column: 2, scope: !12251)
!12259 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12232, file: !12232, line: 81, type: !6277, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12260)
!12260 = !{!12261}
!12261 = !DILocalVariable(name: "reason", arg: 1, scope: !12259, file: !12232, line: 81, type: !32)
!12262 = !DILocation(line: 0, scope: !12259)
!12263 = !DILocation(line: 83, column: 2, scope: !12259)
!12264 = distinct !DISubprogram(name: "z_fatal_error", scope: !12232, file: !12232, line: 96, type: !12252, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12265)
!12265 = !{!12266, !12267, !12268, !12269}
!12266 = !DILocalVariable(name: "reason", arg: 1, scope: !12264, file: !12232, line: 96, type: !32)
!12267 = !DILocalVariable(name: "esf", arg: 2, scope: !12264, file: !12232, line: 96, type: !12049)
!12268 = !DILocalVariable(name: "key", scope: !12264, file: !12232, line: 102, type: !32)
!12269 = !DILocalVariable(name: "thread", scope: !12264, file: !12232, line: 103, type: !12093)
!12270 = !DILocation(line: 0, scope: !12264)
!12271 = !DILocation(line: 55, column: 2, scope: !12237, inlinedAt: !12272)
!12272 = distinct !DILocation(line: 102, column: 21, scope: !12264)
!12273 = !DILocation(line: 0, scope: !12237, inlinedAt: !12272)
!12274 = !DILocation(line: 119, column: 11, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12264, file: !12232, line: 119, column: 6)
!12276 = !DILocation(line: 119, column: 20, scope: !12275)
!12277 = !DILocation(line: 131, column: 2, scope: !12264)
!12278 = !DILocation(line: 151, column: 7, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !12232, line: 146, column: 32)
!12280 = distinct !DILexicalBlock(scope: !12264, file: !12232, line: 146, column: 6)
!12281 = !DILocation(line: 151, column: 21, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12279, file: !12232, line: 151, column: 7)
!12283 = !DILocation(line: 104, column: 4, scope: !12264)
!12284 = !DILocalVariable(name: "key", arg: 1, scope: !12285, file: !6266, line: 84, type: !32)
!12285 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12286)
!12286 = !{!12284}
!12287 = !DILocation(line: 0, scope: !12285, inlinedAt: !12288)
!12288 = distinct !DILocation(line: 186, column: 2, scope: !12264)
!12289 = !DILocation(line: 95, column: 2, scope: !12285, inlinedAt: !12288)
!12290 = !{i64 2595735}
!12291 = !DILocation(line: 189, column: 3, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !12232, line: 188, column: 41)
!12293 = distinct !DILexicalBlock(scope: !12264, file: !12232, line: 188, column: 6)
!12294 = !DILocation(line: 191, column: 1, scope: !12264)
!12295 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !12296, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !162)
!12296 = !DISubroutineType(types: !12297)
!12297 = !{!12298}
!12298 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !12093)
!12299 = !DILocation(line: 535, column: 9, scope: !12295)
!12300 = !DILocation(line: 535, column: 2, scope: !12295)
!12301 = distinct !DISubprogram(name: "k_thread_abort", scope: !3414, file: !3414, line: 188, type: !12302, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !12304)
!12302 = !DISubroutineType(types: !12303)
!12303 = !{null, !12298}
!12304 = !{!12305}
!12305 = !DILocalVariable(name: "thread", arg: 1, scope: !12301, file: !3414, line: 188, type: !12298)
!12306 = !DILocation(line: 0, scope: !12301)
!12307 = !DILocation(line: 197, column: 2, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12301, file: !3414, line: 197, column: 2)
!12309 = !{i64 2155438562}
!12310 = !DILocation(line: 198, column: 2, scope: !12301)
!12311 = !DILocation(line: 199, column: 1, scope: !12301)
!12312 = distinct !DISubprogram(name: "z_current_get", scope: !3414, file: !3414, line: 173, type: !12296, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !162)
!12313 = !DILocation(line: 180, column: 2, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12312, file: !3414, line: 180, column: 2)
!12315 = !{i64 2155438494}
!12316 = !DILocation(line: 181, column: 9, scope: !12312)
!12317 = !DILocation(line: 181, column: 2, scope: !12312)
!12318 = distinct !DISubprogram(name: "z_early_memset", scope: !1823, file: !1823, line: 108, type: !12319, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12321)
!12319 = !DISubroutineType(types: !12320)
!12320 = !{null, !102, !103, !120}
!12321 = !{!12322, !12323, !12324}
!12322 = !DILocalVariable(name: "dst", arg: 1, scope: !12318, file: !1823, line: 108, type: !102)
!12323 = !DILocalVariable(name: "c", arg: 2, scope: !12318, file: !1823, line: 108, type: !103)
!12324 = !DILocalVariable(name: "n", arg: 3, scope: !12318, file: !1823, line: 108, type: !120)
!12325 = !DILocation(line: 0, scope: !12318)
!12326 = !DILocation(line: 110, column: 9, scope: !12318)
!12327 = !DILocation(line: 111, column: 1, scope: !12318)
!12328 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1823, file: !1823, line: 121, type: !12329, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12331)
!12329 = !DISubroutineType(types: !12330)
!12330 = !{null, !102, !13, !120}
!12331 = !{!12332, !12333, !12334}
!12332 = !DILocalVariable(name: "dst", arg: 1, scope: !12328, file: !1823, line: 121, type: !102)
!12333 = !DILocalVariable(name: "src", arg: 2, scope: !12328, file: !1823, line: 121, type: !13)
!12334 = !DILocalVariable(name: "n", arg: 3, scope: !12328, file: !1823, line: 121, type: !120)
!12335 = !DILocation(line: 0, scope: !12328)
!12336 = !DILocation(line: 123, column: 9, scope: !12328)
!12337 = !DILocation(line: 124, column: 1, scope: !12328)
!12338 = distinct !DISubprogram(name: "z_bss_zero", scope: !1823, file: !1823, line: 132, type: !2964, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !162)
!12339 = !DILocation(line: 143, column: 2, scope: !12338)
!12340 = !DILocation(line: 145, column: 2, scope: !12338)
!12341 = !DILocation(line: 168, column: 1, scope: !12338)
!12342 = distinct !DISubprogram(name: "z_init_cpu", scope: !1823, file: !1823, line: 372, type: !8082, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12343)
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "id", arg: 1, scope: !12342, file: !1823, line: 372, type: !103)
!12345 = !DILocation(line: 0, scope: !12342)
!12346 = !DILocation(line: 374, column: 2, scope: !12342)
!12347 = !DILocation(line: 375, column: 34, scope: !12342)
!12348 = !DILocation(line: 375, column: 19, scope: !12342)
!12349 = !DILocation(line: 375, column: 31, scope: !12342)
!12350 = !DILocation(line: 376, column: 24, scope: !12342)
!12351 = !DILocation(line: 376, column: 19, scope: !12342)
!12352 = !DILocation(line: 376, column: 22, scope: !12342)
!12353 = !DILocation(line: 378, column: 26, scope: !12342)
!12354 = !DILocation(line: 378, column: 4, scope: !12342)
!12355 = !DILocation(line: 378, column: 50, scope: !12342)
!12356 = !DILocation(line: 377, column: 19, scope: !12342)
!12357 = !DILocation(line: 377, column: 29, scope: !12342)
!12358 = !DILocation(line: 384, column: 1, scope: !12342)
!12359 = distinct !DISubprogram(name: "init_idle_thread", scope: !1823, file: !1823, line: 343, type: !8082, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12360)
!12360 = !{!12361, !12362, !12363, !12366}
!12361 = !DILocalVariable(name: "i", arg: 1, scope: !12359, file: !1823, line: 343, type: !103)
!12362 = !DILocalVariable(name: "thread", scope: !12359, file: !1823, line: 345, type: !1916)
!12363 = !DILocalVariable(name: "stack", scope: !12359, file: !1823, line: 346, type: !12364)
!12364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12365, size: 32)
!12365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3293, line: 44, baseType: !2030)
!12366 = !DILocalVariable(name: "tname", scope: !12359, file: !1823, line: 358, type: !1046)
!12367 = !DILocation(line: 0, scope: !12359)
!12368 = !DILocation(line: 345, column: 29, scope: !12359)
!12369 = !DILocation(line: 346, column: 28, scope: !12359)
!12370 = !DILocation(line: 362, column: 37, scope: !12359)
!12371 = !DILocation(line: 362, column: 36, scope: !12359)
!12372 = !DILocation(line: 361, column: 2, scope: !12359)
!12373 = !DILocation(line: 365, column: 2, scope: !12359)
!12374 = !DILocation(line: 370, column: 1, scope: !12359)
!12375 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2031, file: !2031, line: 331, type: !12376, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12378)
!12376 = !DISubroutineType(types: !12377)
!12377 = !{!1046, !12364}
!12378 = !{!12379}
!12379 = !DILocalVariable(name: "sym", arg: 1, scope: !12375, file: !2031, line: 331, type: !12364)
!12380 = !DILocation(line: 0, scope: !12375)
!12381 = !DILocation(line: 333, column: 21, scope: !12375)
!12382 = !DILocation(line: 333, column: 2, scope: !12375)
!12383 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12384, file: !12384, line: 155, type: !12385, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12387)
!12384 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12385 = !DISubroutineType(types: !12386)
!12386 = !{null, !1916}
!12387 = !{!12388}
!12388 = !DILocalVariable(name: "thread", arg: 1, scope: !12383, file: !12384, line: 155, type: !1916)
!12389 = !DILocation(line: 0, scope: !12383)
!12390 = !DILocation(line: 157, column: 15, scope: !12383)
!12391 = !DILocation(line: 157, column: 28, scope: !12383)
!12392 = !DILocation(line: 158, column: 1, scope: !12383)
!12393 = distinct !DISubprogram(name: "z_cstart", scope: !1823, file: !1823, line: 501, type: !2964, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12394)
!12394 = !{!12395}
!12395 = !DILocalVariable(name: "dummy_thread", scope: !12393, file: !1823, line: 518, type: !1917)
!12396 = !DILocation(line: 507, column: 2, scope: !12393)
!12397 = !DILocation(line: 43, column: 14, scope: !12398, inlinedAt: !12402)
!12398 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12399, file: !12399, line: 40, type: !2964, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12400)
!12399 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12400 = !{!12401}
!12401 = !DILocalVariable(name: "msp", scope: !12398, file: !12399, line: 42, type: !137)
!12402 = distinct !DILocation(line: 44, column: 2, scope: !12403, inlinedAt: !12405)
!12403 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12404, file: !12404, line: 42, type: !2964, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !162)
!12404 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12405 = distinct !DILocation(line: 510, column: 2, scope: !12393)
!12406 = !DILocation(line: 43, column: 3, scope: !12398, inlinedAt: !12402)
!12407 = !DILocation(line: 43, column: 60, scope: !12398, inlinedAt: !12402)
!12408 = !DILocation(line: 0, scope: !12398, inlinedAt: !12402)
!12409 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12410, file: !6440, line: 1153, type: !137)
!12410 = distinct !DISubprogram(name: "__set_MSP", scope: !6440, file: !6440, line: 1153, type: !6529, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12411)
!12411 = !{!12409}
!12412 = !DILocation(line: 0, scope: !12410, inlinedAt: !12413)
!12413 = distinct !DILocation(line: 46, column: 2, scope: !12398, inlinedAt: !12402)
!12414 = !DILocation(line: 1155, column: 3, scope: !12410, inlinedAt: !12413)
!12415 = !{i64 4130514}
!12416 = !DILocation(line: 62, column: 11, scope: !12398, inlinedAt: !12402)
!12417 = !DILocation(line: 102, column: 2, scope: !12418, inlinedAt: !12419)
!12418 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7232, file: !7232, line: 97, type: !2964, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !162)
!12419 = distinct !DILocation(line: 45, column: 2, scope: !12403, inlinedAt: !12405)
!12420 = !DILocation(line: 108, column: 2, scope: !12418, inlinedAt: !12419)
!12421 = !DILocation(line: 112, column: 2, scope: !12418, inlinedAt: !12419)
!12422 = !DILocation(line: 113, column: 2, scope: !12418, inlinedAt: !12419)
!12423 = !DILocation(line: 114, column: 2, scope: !12418, inlinedAt: !12419)
!12424 = !DILocation(line: 116, column: 2, scope: !12418, inlinedAt: !12419)
!12425 = !DILocation(line: 123, column: 13, scope: !12418, inlinedAt: !12419)
!12426 = !DILocation(line: 46, column: 2, scope: !12403, inlinedAt: !12405)
!12427 = !DILocation(line: 47, column: 2, scope: !12403, inlinedAt: !12405)
!12428 = !DILocation(line: 174, column: 12, scope: !12429, inlinedAt: !12430)
!12429 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7232, file: !7232, line: 169, type: !2964, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !162)
!12430 = distinct !DILocation(line: 48, column: 2, scope: !12403, inlinedAt: !12405)
!12431 = !DILocation(line: 179, column: 12, scope: !12429, inlinedAt: !12430)
!12432 = !DILocation(line: 50, column: 2, scope: !12403, inlinedAt: !12405)
!12433 = !DILocation(line: 57, column: 2, scope: !12403, inlinedAt: !12405)
!12434 = !DILocation(line: 518, column: 2, scope: !12393)
!12435 = !DILocation(line: 518, column: 18, scope: !12393)
!12436 = !DILocation(line: 520, column: 2, scope: !12393)
!12437 = !DILocation(line: 523, column: 2, scope: !12393)
!12438 = !DILocation(line: 526, column: 2, scope: !12393)
!12439 = !DILocation(line: 527, column: 2, scope: !12393)
!12440 = !DILocation(line: 543, column: 24, scope: !12393)
!12441 = !DILocation(line: 543, column: 2, scope: !12393)
!12442 = !DILocation(line: 0, scope: !2050)
!12443 = !DILocation(line: 246, column: 15, scope: !2068)
!12444 = !DILocation(line: 246, column: 36, scope: !2067)
!12445 = !DILocation(line: 246, column: 2, scope: !2068)
!12446 = !DILocation(line: 247, column: 37, scope: !2066)
!12447 = !DILocation(line: 0, scope: !2066)
!12448 = !DILocation(line: 248, column: 19, scope: !2066)
!12449 = !DILocation(line: 248, column: 12, scope: !2066)
!12450 = !DILocation(line: 250, column: 11, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !2066, file: !1823, line: 250, column: 7)
!12452 = !DILocation(line: 250, column: 7, scope: !2066)
!12453 = !DILocation(line: 254, column: 11, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !1823, line: 254, column: 8)
!12455 = distinct !DILexicalBlock(scope: !12451, file: !1823, line: 250, column: 20)
!12456 = !DILocation(line: 254, column: 8, scope: !12455)
!12457 = !DILocation(line: 255, column: 9, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12454, file: !1823, line: 254, column: 17)
!12459 = !DILocation(line: 258, column: 9, scope: !12458)
!12460 = !DILocation(line: 261, column: 28, scope: !12458)
!12461 = !DILocation(line: 261, column: 10, scope: !12458)
!12462 = !DILocation(line: 261, column: 17, scope: !12458)
!12463 = !DILocation(line: 261, column: 26, scope: !12458)
!12464 = !DILocation(line: 262, column: 4, scope: !12458)
!12465 = !DILocation(line: 263, column: 9, scope: !12455)
!12466 = !DILocation(line: 263, column: 16, scope: !12455)
!12467 = !DILocation(line: 263, column: 28, scope: !12455)
!12468 = !DILocation(line: 264, column: 3, scope: !12455)
!12469 = !DILocation(line: 246, column: 60, scope: !2067)
!12470 = distinct !{!12470, !12445, !12471}
!12471 = !DILocation(line: 265, column: 2, scope: !2068)
!12472 = !DILocation(line: 266, column: 1, scope: !2050)
!12473 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6474, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12474)
!12474 = !{!12475, !12476}
!12475 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12473, file: !402, line: 1814, type: !669)
!12476 = !DILocalVariable(name: "priority", arg: 2, scope: !12473, file: !402, line: 1814, type: !137)
!12477 = !DILocation(line: 0, scope: !12473)
!12478 = !DILocation(line: 1822, column: 48, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !402, line: 1821, column: 3)
!12480 = distinct !DILexicalBlock(scope: !12473, file: !402, line: 1816, column: 7)
!12481 = !DILocation(line: 1822, column: 32, scope: !12479)
!12482 = !DILocation(line: 1822, column: 40, scope: !12479)
!12483 = !DILocation(line: 1822, column: 5, scope: !12479)
!12484 = !DILocation(line: 1822, column: 46, scope: !12479)
!12485 = !DILocation(line: 1824, column: 1, scope: !12473)
!12486 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12404, file: !12404, line: 32, type: !2964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12487 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12488, file: !12488, line: 215, type: !12385, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12489)
!12488 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12489 = !{!12490}
!12490 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12487, file: !12488, line: 215, type: !1916)
!12491 = !DILocation(line: 0, scope: !12487)
!12492 = !DILocation(line: 217, column: 21, scope: !12487)
!12493 = !DILocation(line: 217, column: 34, scope: !12487)
!12494 = !DILocation(line: 221, column: 21, scope: !12487)
!12495 = !DILocation(line: 221, column: 34, scope: !12487)
!12496 = !DILocation(line: 223, column: 27, scope: !12487)
!12497 = !DILocation(line: 223, column: 33, scope: !12487)
!12498 = !DILocation(line: 224, column: 27, scope: !12487)
!12499 = !DILocation(line: 224, column: 32, scope: !12487)
!12500 = !DILocation(line: 232, column: 16, scope: !12487)
!12501 = !DILocation(line: 232, column: 30, scope: !12487)
!12502 = !DILocation(line: 239, column: 24, scope: !12487)
!12503 = !DILocation(line: 240, column: 1, scope: !12487)
!12504 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1823, file: !1823, line: 399, type: !12505, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12507)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{!1046}
!12507 = !{!12508}
!12508 = !DILocalVariable(name: "stack_ptr", scope: !12504, file: !1823, line: 401, type: !1046)
!12509 = !DILocation(line: 404, column: 2, scope: !12504)
!12510 = !DILocation(line: 416, column: 24, scope: !12504)
!12511 = !DILocation(line: 418, column: 14, scope: !12504)
!12512 = !DILocation(line: 0, scope: !12504)
!12513 = !DILocation(line: 423, column: 2, scope: !12504)
!12514 = !DILocation(line: 424, column: 2, scope: !12504)
!12515 = !DILocation(line: 426, column: 2, scope: !12504)
!12516 = !DILocation(line: 428, column: 2, scope: !12504)
!12517 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1823, file: !1823, line: 432, type: !12518, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12520)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{null, !1046}
!12520 = !{!12521}
!12521 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12517, file: !1823, line: 432, type: !1046)
!12522 = !DILocation(line: 0, scope: !12517)
!12523 = !DILocation(line: 435, column: 2, scope: !12517)
!12524 = !DILocation(line: 445, column: 2, scope: !12517)
!12525 = distinct !DISubprogram(name: "bg_thread_main", scope: !1823, file: !1823, line: 277, type: !3295, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12526)
!12526 = !{!12527, !12528, !12529}
!12527 = !DILocalVariable(name: "unused1", arg: 1, scope: !12525, file: !1823, line: 277, type: !102)
!12528 = !DILocalVariable(name: "unused2", arg: 2, scope: !12525, file: !1823, line: 277, type: !102)
!12529 = !DILocalVariable(name: "unused3", arg: 3, scope: !12525, file: !1823, line: 277, type: !102)
!12530 = !DILocation(line: 0, scope: !12525)
!12531 = !DILocation(line: 291, column: 20, scope: !12525)
!12532 = !DILocation(line: 293, column: 2, scope: !12525)
!12533 = !DILocation(line: 297, column: 2, scope: !12525)
!12534 = !DILocation(line: 305, column: 2, scope: !12525)
!12535 = !DILocation(line: 307, column: 2, scope: !12525)
!12536 = !DILocation(line: 330, column: 8, scope: !12525)
!12537 = !DILocation(line: 333, column: 34, scope: !12525)
!12538 = !DILocation(line: 339, column: 1, scope: !12525)
!12539 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2079, file: !2079, line: 45, type: !12540, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12548)
!12540 = !DISubroutineType(types: !12541)
!12541 = !{null, !12542, !102}
!12542 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !357, line: 103, baseType: !12543)
!12543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12544, size: 32)
!12544 = !DISubroutineType(types: !12545)
!12545 = !{null, !12546, !102}
!12546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12547, size: 32)
!12547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2084)
!12548 = !{!12549, !12550}
!12549 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12539, file: !2079, line: 45, type: !12542)
!12550 = !DILocalVariable(name: "user_data", arg: 2, scope: !12539, file: !2079, line: 45, type: !102)
!12551 = !DILocation(line: 0, scope: !12539)
!12552 = !DILocation(line: 71, column: 1, scope: !12539)
!12553 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2079, file: !2079, line: 73, type: !12540, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12554)
!12554 = !{!12555, !12556}
!12555 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12553, file: !2079, line: 73, type: !12542)
!12556 = !DILocalVariable(name: "user_data", arg: 2, scope: !12553, file: !2079, line: 73, type: !102)
!12557 = !DILocation(line: 0, scope: !12553)
!12558 = !DILocation(line: 95, column: 1, scope: !12553)
!12559 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2079, file: !2079, line: 97, type: !7233, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !162)
!12560 = !DILocation(line: 1031, column: 3, scope: !12561, inlinedAt: !12564)
!12561 = distinct !DISubprogram(name: "__get_IPSR", scope: !6440, file: !6440, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12562)
!12562 = !{!12563}
!12563 = !DILocalVariable(name: "result", scope: !12561, file: !6440, line: 1029, type: !137)
!12564 = distinct !DILocation(line: 48, column: 10, scope: !12565, inlinedAt: !12566)
!12565 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7232, file: !7232, line: 46, type: !7233, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !162)
!12566 = distinct !DILocation(line: 99, column: 9, scope: !12559)
!12567 = !{i64 4136165}
!12568 = !DILocation(line: 0, scope: !12561, inlinedAt: !12564)
!12569 = !DILocation(line: 48, column: 9, scope: !12565, inlinedAt: !12566)
!12570 = !DILocation(line: 99, column: 2, scope: !12559)
!12571 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2079, file: !2079, line: 106, type: !2964, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !162)
!12572 = !DILocation(line: 108, column: 2, scope: !12571)
!12573 = !DILocation(line: 108, column: 17, scope: !12571)
!12574 = !DILocation(line: 108, column: 30, scope: !12571)
!12575 = !DILocation(line: 109, column: 1, scope: !12571)
!12576 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2079, file: !2079, line: 116, type: !2964, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !162)
!12577 = !DILocation(line: 118, column: 2, scope: !12576)
!12578 = !DILocation(line: 118, column: 17, scope: !12576)
!12579 = !DILocation(line: 118, column: 30, scope: !12576)
!12580 = !DILocation(line: 119, column: 1, scope: !12576)
!12581 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2079, file: !2079, line: 126, type: !7233, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !162)
!12582 = !DILocation(line: 128, column: 10, scope: !12581)
!12583 = !DILocation(line: 128, column: 25, scope: !12581)
!12584 = !DILocation(line: 128, column: 38, scope: !12581)
!12585 = !DILocation(line: 128, column: 53, scope: !12581)
!12586 = !DILocation(line: 128, column: 2, scope: !12581)
!12587 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2079, file: !2079, line: 187, type: !12588, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12590)
!12588 = !DISubroutineType(types: !12589)
!12589 = !{!103, !2083, !199}
!12590 = !{!12591, !12592}
!12591 = !DILocalVariable(name: "thread", arg: 1, scope: !12587, file: !2079, line: 187, type: !2083)
!12592 = !DILocalVariable(name: "value", arg: 2, scope: !12587, file: !2079, line: 187, type: !199)
!12593 = !DILocation(line: 0, scope: !12587)
!12594 = !DILocation(line: 206, column: 2, scope: !12587)
!12595 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2079, file: !2079, line: 238, type: !12596, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12598)
!12596 = !DISubroutineType(types: !12597)
!12597 = !{!199, !2083}
!12598 = !{!12599}
!12599 = !DILocalVariable(name: "thread", arg: 1, scope: !12595, file: !2079, line: 238, type: !2083)
!12600 = !DILocation(line: 0, scope: !12595)
!12601 = !DILocation(line: 244, column: 2, scope: !12595)
!12602 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2079, file: !2079, line: 248, type: !12603, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12605)
!12603 = !DISubroutineType(types: !12604)
!12604 = !{!103, !2082, !1046, !120}
!12605 = !{!12606, !12607, !12608}
!12606 = !DILocalVariable(name: "thread", arg: 1, scope: !12602, file: !2079, line: 248, type: !2082)
!12607 = !DILocalVariable(name: "buf", arg: 2, scope: !12602, file: !2079, line: 248, type: !1046)
!12608 = !DILocalVariable(name: "size", arg: 3, scope: !12602, file: !2079, line: 248, type: !120)
!12609 = !DILocation(line: 0, scope: !12602)
!12610 = !DILocation(line: 257, column: 2, scope: !12602)
!12611 = !DILocation(line: 0, scope: !2078)
!12612 = !DILocation(line: 281, column: 11, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !2078, file: !2079, line: 281, column: 6)
!12614 = !DILocation(line: 281, column: 20, scope: !12613)
!12615 = !DILocation(line: 275, column: 45, scope: !2078)
!12616 = !DILocation(line: 285, column: 10, scope: !2078)
!12617 = !DILocation(line: 0, scope: !2199)
!12618 = !DILocation(line: 293, column: 39, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !2199, file: !2079, line: 293, column: 2)
!12620 = !DILocation(line: 293, column: 2, scope: !2199)
!12621 = !DILocation(line: 273, column: 14, scope: !2078)
!12622 = !DILocation(line: 309, column: 2, scope: !2078)
!12623 = !DILocation(line: 309, column: 11, scope: !2078)
!12624 = !DILocation(line: 311, column: 2, scope: !2078)
!12625 = !DILocation(line: 293, column: 26, scope: !12619)
!12626 = !DILocation(line: 294, column: 9, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12619, file: !2079, line: 293, column: 54)
!12628 = !DILocation(line: 295, column: 21, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12627, file: !2079, line: 295, column: 7)
!12630 = !DILocation(line: 295, column: 28, scope: !12629)
!12631 = !DILocation(line: 295, column: 7, scope: !12627)
!12632 = !DILocation(line: 299, column: 25, scope: !12627)
!12633 = !DILocation(line: 299, column: 41, scope: !12627)
!12634 = !DILocation(line: 300, column: 7, scope: !12627)
!12635 = !DILocation(line: 300, column: 26, scope: !12627)
!12636 = !DILocation(line: 299, column: 10, scope: !12627)
!12637 = !DILocation(line: 299, column: 7, scope: !12627)
!12638 = !DILocation(line: 302, column: 16, scope: !12627)
!12639 = !DILocation(line: 304, column: 20, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12627, file: !2079, line: 304, column: 7)
!12641 = !DILocation(line: 304, column: 7, scope: !12627)
!12642 = !DILocation(line: 305, column: 26, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12640, file: !2079, line: 304, column: 26)
!12644 = !DILocation(line: 305, column: 42, scope: !12643)
!12645 = !DILocation(line: 305, column: 11, scope: !12643)
!12646 = !DILocation(line: 305, column: 8, scope: !12643)
!12647 = !DILocation(line: 306, column: 3, scope: !12643)
!12648 = !DILocation(line: 293, column: 50, scope: !12619)
!12649 = !DILocation(line: 312, column: 1, scope: !2078)
!12650 = distinct !DISubprogram(name: "copy_bytes", scope: !2079, file: !2079, line: 261, type: !12651, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!120, !1046, !120, !199, !120}
!12653 = !{!12654, !12655, !12656, !12657, !12658}
!12654 = !DILocalVariable(name: "dest", arg: 1, scope: !12650, file: !2079, line: 261, type: !1046)
!12655 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12650, file: !2079, line: 261, type: !120)
!12656 = !DILocalVariable(name: "src", arg: 3, scope: !12650, file: !2079, line: 261, type: !199)
!12657 = !DILocalVariable(name: "src_size", arg: 4, scope: !12650, file: !2079, line: 261, type: !120)
!12658 = !DILocalVariable(name: "bytes_to_copy", scope: !12650, file: !2079, line: 263, type: !120)
!12659 = !DILocation(line: 0, scope: !12650)
!12660 = !DILocation(line: 265, column: 18, scope: !12650)
!12661 = !DILocation(line: 266, column: 2, scope: !12650)
!12662 = !DILocation(line: 268, column: 2, scope: !12650)
!12663 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2079, file: !2079, line: 383, type: !12664, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12666)
!12664 = !DISubroutineType(types: !12665)
!12665 = !{null, !2083}
!12666 = !{!12667}
!12667 = !DILocalVariable(name: "thread", arg: 1, scope: !12663, file: !2079, line: 383, type: !2083)
!12668 = !DILocation(line: 0, scope: !12663)
!12669 = !DILocation(line: 387, column: 2, scope: !12663)
!12670 = !DILocation(line: 388, column: 1, scope: !12663)
!12671 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2079, file: !2079, line: 528, type: !12672, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12679)
!12672 = !DISubroutineType(types: !12673)
!12673 = !{!1046, !2083, !12674, !120, !3292, !102, !102, !102, !103, !137, !199}
!12674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12675, size: 32)
!12675 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3293, line: 44, baseType: !12676)
!12676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2031, line: 47, size: 8, elements: !12677)
!12677 = !{!12678}
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12676, file: !2031, line: 48, baseType: !109, size: 8)
!12679 = !{!12680, !12681, !12682, !12683, !12684, !12685, !12686, !12687, !12688, !12689, !12690}
!12680 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12671, file: !2079, line: 528, type: !2083)
!12681 = !DILocalVariable(name: "stack", arg: 2, scope: !12671, file: !2079, line: 529, type: !12674)
!12682 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12671, file: !2079, line: 529, type: !120)
!12683 = !DILocalVariable(name: "entry", arg: 4, scope: !12671, file: !2079, line: 530, type: !3292)
!12684 = !DILocalVariable(name: "p1", arg: 5, scope: !12671, file: !2079, line: 531, type: !102)
!12685 = !DILocalVariable(name: "p2", arg: 6, scope: !12671, file: !2079, line: 531, type: !102)
!12686 = !DILocalVariable(name: "p3", arg: 7, scope: !12671, file: !2079, line: 531, type: !102)
!12687 = !DILocalVariable(name: "prio", arg: 8, scope: !12671, file: !2079, line: 532, type: !103)
!12688 = !DILocalVariable(name: "options", arg: 9, scope: !12671, file: !2079, line: 532, type: !137)
!12689 = !DILocalVariable(name: "name", arg: 10, scope: !12671, file: !2079, line: 532, type: !199)
!12690 = !DILocalVariable(name: "stack_ptr", scope: !12671, file: !2079, line: 534, type: !1046)
!12691 = !DILocation(line: 0, scope: !12671)
!12692 = !DILocation(line: 550, column: 28, scope: !12671)
!12693 = !DILocation(line: 550, column: 2, scope: !12671)
!12694 = !DILocation(line: 553, column: 34, scope: !12671)
!12695 = !DILocation(line: 553, column: 2, scope: !12671)
!12696 = !DILocation(line: 554, column: 14, scope: !12671)
!12697 = !DILocation(line: 564, column: 2, scope: !12671)
!12698 = !DILocation(line: 567, column: 14, scope: !12671)
!12699 = !DILocation(line: 567, column: 24, scope: !12671)
!12700 = !DILocation(line: 612, column: 7, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12671, file: !2079, line: 612, column: 6)
!12702 = !DILocation(line: 612, column: 6, scope: !12671)
!12703 = !DILocation(line: 627, column: 40, scope: !12671)
!12704 = !DILocation(line: 637, column: 2, scope: !12671)
!12705 = !DILocation(line: 613, column: 15, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12701, file: !2079, line: 612, column: 17)
!12707 = !DILocation(line: 613, column: 29, scope: !12706)
!12708 = !DILocation(line: 638, column: 1, scope: !12671)
!12709 = distinct !DISubprogram(name: "z_waitq_init", scope: !12710, file: !12710, line: 47, type: !12711, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12713)
!12710 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12711 = !DISubroutineType(types: !12712)
!12712 = !{null, !2114}
!12713 = !{!12714}
!12714 = !DILocalVariable(name: "w", arg: 1, scope: !12709, file: !12710, line: 47, type: !2114)
!12715 = !DILocation(line: 0, scope: !12709)
!12716 = !DILocation(line: 49, column: 21, scope: !12709)
!12717 = !DILocation(line: 49, column: 2, scope: !12709)
!12718 = !DILocation(line: 50, column: 1, scope: !12709)
!12719 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2079, file: !2079, line: 791, type: !12720, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12723)
!12720 = !DISubroutineType(types: !12721)
!12721 = !{null, !12722, !103, !137, !32}
!12722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!12723 = !{!12724, !12725, !12726, !12727}
!12724 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12719, file: !2079, line: 791, type: !12722)
!12725 = !DILocalVariable(name: "priority", arg: 2, scope: !12719, file: !2079, line: 791, type: !103)
!12726 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12719, file: !2079, line: 792, type: !137)
!12727 = !DILocalVariable(name: "options", arg: 4, scope: !12719, file: !2079, line: 792, type: !32)
!12728 = !DILocation(line: 0, scope: !12719)
!12729 = !DILocation(line: 795, column: 15, scope: !12719)
!12730 = !DILocation(line: 795, column: 25, scope: !12719)
!12731 = !DILocation(line: 796, column: 30, scope: !12719)
!12732 = !DILocation(line: 796, column: 15, scope: !12719)
!12733 = !DILocation(line: 796, column: 28, scope: !12719)
!12734 = !DILocation(line: 797, column: 30, scope: !12719)
!12735 = !DILocation(line: 797, column: 15, scope: !12719)
!12736 = !DILocation(line: 797, column: 28, scope: !12719)
!12737 = !DILocation(line: 799, column: 22, scope: !12719)
!12738 = !DILocation(line: 799, column: 15, scope: !12719)
!12739 = !DILocation(line: 799, column: 20, scope: !12719)
!12740 = !DILocation(line: 801, column: 15, scope: !12719)
!12741 = !DILocation(line: 801, column: 28, scope: !12719)
!12742 = !DILocation(line: 814, column: 2, scope: !12719)
!12743 = !DILocation(line: 815, column: 1, scope: !12719)
!12744 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2079, file: !2079, line: 449, type: !12745, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12747)
!12745 = !DISubroutineType(types: !12746)
!12746 = !{!1046, !2083, !12674, !120}
!12747 = !{!12748, !12749, !12750, !12751, !12752, !12753, !12754, !12755}
!12748 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12744, file: !2079, line: 449, type: !2083)
!12749 = !DILocalVariable(name: "stack", arg: 2, scope: !12744, file: !2079, line: 450, type: !12674)
!12750 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12744, file: !2079, line: 450, type: !120)
!12751 = !DILocalVariable(name: "stack_obj_size", scope: !12744, file: !2079, line: 452, type: !120)
!12752 = !DILocalVariable(name: "stack_buf_size", scope: !12744, file: !2079, line: 452, type: !120)
!12753 = !DILocalVariable(name: "stack_ptr", scope: !12744, file: !2079, line: 453, type: !1046)
!12754 = !DILocalVariable(name: "stack_buf_start", scope: !12744, file: !2079, line: 453, type: !1046)
!12755 = !DILocalVariable(name: "delta", scope: !12744, file: !2079, line: 454, type: !120)
!12756 = !DILocation(line: 0, scope: !12744)
!12757 = !DILocation(line: 465, column: 20, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12744, file: !2079, line: 463, column: 2)
!12759 = !DILocation(line: 466, column: 21, scope: !12758)
!12760 = !DILocation(line: 473, column: 28, scope: !12744)
!12761 = !DILocation(line: 514, column: 33, scope: !12744)
!12762 = !DILocation(line: 514, column: 25, scope: !12744)
!12763 = !DILocation(line: 514, column: 31, scope: !12744)
!12764 = !DILocation(line: 515, column: 25, scope: !12744)
!12765 = !DILocation(line: 515, column: 30, scope: !12744)
!12766 = !DILocation(line: 516, column: 25, scope: !12744)
!12767 = !DILocation(line: 516, column: 31, scope: !12744)
!12768 = !DILocation(line: 520, column: 2, scope: !12744)
!12769 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2031, file: !2031, line: 331, type: !12770, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12772)
!12770 = !DISubroutineType(types: !12771)
!12771 = !{!1046, !12674}
!12772 = !{!12773}
!12773 = !DILocalVariable(name: "sym", arg: 1, scope: !12769, file: !2031, line: 331, type: !12674)
!12774 = !DILocation(line: 0, scope: !12769)
!12775 = !DILocation(line: 333, column: 21, scope: !12769)
!12776 = !DILocation(line: 333, column: 2, scope: !12769)
!12777 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12778, file: !12778, line: 40, type: !12779, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12781)
!12778 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12779 = !DISubroutineType(types: !12780)
!12780 = !{null, !12722}
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12777, file: !12778, line: 40, type: !12722)
!12783 = !DILocation(line: 0, scope: !12777)
!12784 = !DILocation(line: 42, column: 31, scope: !12777)
!12785 = !DILocation(line: 42, column: 2, scope: !12777)
!12786 = !DILocation(line: 43, column: 1, scope: !12777)
!12787 = distinct !DISubprogram(name: "z_init_timeout", scope: !12778, file: !12778, line: 25, type: !2140, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12788)
!12788 = !{!12789}
!12789 = !DILocalVariable(name: "to", arg: 1, scope: !12787, file: !12778, line: 25, type: !2142)
!12790 = !DILocation(line: 0, scope: !12787)
!12791 = !DILocation(line: 27, column: 22, scope: !12787)
!12792 = !DILocation(line: 27, column: 2, scope: !12787)
!12793 = !DILocation(line: 28, column: 1, scope: !12787)
!12794 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !12795, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12797)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{null, !2186}
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "node", arg: 1, scope: !12794, file: !273, line: 211, type: !2186)
!12799 = !DILocation(line: 0, scope: !12794)
!12800 = !DILocation(line: 213, column: 8, scope: !12794)
!12801 = !DILocation(line: 213, column: 13, scope: !12794)
!12802 = !DILocation(line: 214, column: 8, scope: !12794)
!12803 = !DILocation(line: 214, column: 13, scope: !12794)
!12804 = !DILocation(line: 215, column: 1, scope: !12794)
!12805 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !12806, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12809)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{null, !12808}
!12808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!12809 = !{!12810}
!12810 = !DILocalVariable(name: "list", arg: 1, scope: !12805, file: !273, line: 197, type: !12808)
!12811 = !DILocation(line: 0, scope: !12805)
!12812 = !DILocation(line: 199, column: 8, scope: !12805)
!12813 = !DILocation(line: 199, column: 13, scope: !12805)
!12814 = !DILocation(line: 200, column: 8, scope: !12805)
!12815 = !DILocation(line: 200, column: 13, scope: !12805)
!12816 = !DILocation(line: 201, column: 1, scope: !12805)
!12817 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2079, file: !2079, line: 641, type: !12818, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12824)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{!2082, !2083, !12674, !120, !3292, !102, !102, !102, !103, !137, !12820}
!12820 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1560, line: 67, baseType: !12821)
!12821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1560, line: 65, size: 64, elements: !12822)
!12822 = !{!12823}
!12823 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12821, file: !1560, line: 66, baseType: !1559, size: 64)
!12824 = !{!12825, !12826, !12827, !12828, !12829, !12830, !12831, !12832, !12833, !12834}
!12825 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12817, file: !2079, line: 641, type: !2083)
!12826 = !DILocalVariable(name: "stack", arg: 2, scope: !12817, file: !2079, line: 642, type: !12674)
!12827 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12817, file: !2079, line: 643, type: !120)
!12828 = !DILocalVariable(name: "entry", arg: 4, scope: !12817, file: !2079, line: 643, type: !3292)
!12829 = !DILocalVariable(name: "p1", arg: 5, scope: !12817, file: !2079, line: 644, type: !102)
!12830 = !DILocalVariable(name: "p2", arg: 6, scope: !12817, file: !2079, line: 644, type: !102)
!12831 = !DILocalVariable(name: "p3", arg: 7, scope: !12817, file: !2079, line: 644, type: !102)
!12832 = !DILocalVariable(name: "prio", arg: 8, scope: !12817, file: !2079, line: 645, type: !103)
!12833 = !DILocalVariable(name: "options", arg: 9, scope: !12817, file: !2079, line: 645, type: !137)
!12834 = !DILocalVariable(name: "delay", arg: 10, scope: !12817, file: !2079, line: 645, type: !12820)
!12835 = !DILocation(line: 0, scope: !12817)
!12836 = !DILocation(line: 649, column: 2, scope: !12817)
!12837 = !DILocation(line: 652, column: 7, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12817, file: !2079, line: 652, column: 6)
!12839 = !DILocation(line: 652, column: 6, scope: !12817)
!12840 = !DILocation(line: 653, column: 3, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12838, file: !2079, line: 652, column: 39)
!12842 = !DILocation(line: 654, column: 2, scope: !12841)
!12843 = !DILocation(line: 656, column: 2, scope: !12817)
!12844 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2079, file: !2079, line: 401, type: !12845, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12847)
!12845 = !DISubroutineType(types: !12846)
!12846 = !{null, !2083, !12820}
!12847 = !{!12848, !12849}
!12848 = !DILocalVariable(name: "thread", arg: 1, scope: !12844, file: !2079, line: 401, type: !2083)
!12849 = !DILocalVariable(name: "delay", arg: 2, scope: !12844, file: !2079, line: 401, type: !12820)
!12850 = !DILocation(line: 0, scope: !12844)
!12851 = !DILocation(line: 404, column: 6, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12844, file: !2079, line: 404, column: 6)
!12853 = !DILocation(line: 404, column: 6, scope: !12844)
!12854 = !DILocation(line: 405, column: 3, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12852, file: !2079, line: 404, column: 38)
!12856 = !DILocation(line: 406, column: 2, scope: !12855)
!12857 = !DILocation(line: 407, column: 3, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12852, file: !2079, line: 406, column: 9)
!12859 = !DILocation(line: 413, column: 1, scope: !12844)
!12860 = distinct !DISubprogram(name: "k_thread_start", scope: !3414, file: !3414, line: 205, type: !12861, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12863)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !2082}
!12863 = !{!12864}
!12864 = !DILocalVariable(name: "thread", arg: 1, scope: !12860, file: !3414, line: 205, type: !2082)
!12865 = !DILocation(line: 0, scope: !12860)
!12866 = !DILocation(line: 214, column: 2, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12860, file: !3414, line: 214, column: 2)
!12868 = !{i64 2155463786}
!12869 = !DILocation(line: 215, column: 2, scope: !12860)
!12870 = !DILocation(line: 216, column: 1, scope: !12860)
!12871 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12778, file: !12778, line: 47, type: !12845, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12872)
!12872 = !{!12873, !12874}
!12873 = !DILocalVariable(name: "thread", arg: 1, scope: !12871, file: !12778, line: 47, type: !2083)
!12874 = !DILocalVariable(name: "ticks", arg: 2, scope: !12871, file: !12778, line: 47, type: !12820)
!12875 = !DILocation(line: 0, scope: !12871)
!12876 = !DILocation(line: 49, column: 30, scope: !12871)
!12877 = !DILocation(line: 49, column: 2, scope: !12871)
!12878 = !DILocation(line: 50, column: 1, scope: !12871)
!12879 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2079, file: !2079, line: 748, type: !2964, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12880)
!12880 = !{!12881, !12899}
!12881 = !DILocalVariable(name: "thread_data", scope: !12882, file: !2079, line: 750, type: !12883)
!12882 = distinct !DILexicalBlock(scope: !12879, file: !2079, line: 750, column: 2)
!12883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12884, size: 32)
!12884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !357, line: 620, size: 384, elements: !12885)
!12885 = !{!12886, !12887, !12888, !12889, !12890, !12891, !12892, !12893, !12894, !12895, !12896, !12898}
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12884, file: !357, line: 621, baseType: !2083, size: 32)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12884, file: !357, line: 622, baseType: !12674, size: 32, offset: 32)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12884, file: !357, line: 623, baseType: !32, size: 32, offset: 64)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12884, file: !357, line: 624, baseType: !3292, size: 32, offset: 96)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12884, file: !357, line: 625, baseType: !102, size: 32, offset: 128)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12884, file: !357, line: 626, baseType: !102, size: 32, offset: 160)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12884, file: !357, line: 627, baseType: !102, size: 32, offset: 192)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12884, file: !357, line: 628, baseType: !103, size: 32, offset: 224)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12884, file: !357, line: 629, baseType: !137, size: 32, offset: 256)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12884, file: !357, line: 630, baseType: !643, size: 32, offset: 288)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12884, file: !357, line: 631, baseType: !12897, size: 32, offset: 320)
!12897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 32)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12884, file: !357, line: 632, baseType: !199, size: 32, offset: 352)
!12899 = !DILocalVariable(name: "thread_data", scope: !12900, file: !2079, line: 781, type: !12883)
!12900 = distinct !DILexicalBlock(scope: !12879, file: !2079, line: 781, column: 2)
!12901 = !DILocation(line: 0, scope: !12882)
!12902 = !DILocation(line: 750, column: 2, scope: !12882)
!12903 = !DILocation(line: 780, column: 2, scope: !12879)
!12904 = !DILocation(line: 0, scope: !12900)
!12905 = !DILocation(line: 781, column: 2, scope: !12900)
!12906 = !DILocation(line: 752, column: 17, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12908, file: !2079, line: 750, column: 38)
!12908 = distinct !DILexicalBlock(scope: !12882, file: !2079, line: 750, column: 2)
!12909 = !DILocation(line: 753, column: 17, scope: !12907)
!12910 = !DILocation(line: 754, column: 17, scope: !12907)
!12911 = !DILocation(line: 755, column: 17, scope: !12907)
!12912 = !DILocation(line: 756, column: 17, scope: !12907)
!12913 = !DILocation(line: 757, column: 17, scope: !12907)
!12914 = !DILocation(line: 758, column: 17, scope: !12907)
!12915 = !DILocation(line: 759, column: 17, scope: !12907)
!12916 = !DILocation(line: 760, column: 17, scope: !12907)
!12917 = !DILocation(line: 751, column: 3, scope: !12907)
!12918 = !DILocation(line: 763, column: 16, scope: !12907)
!12919 = !DILocation(line: 763, column: 29, scope: !12907)
!12920 = !DILocation(line: 763, column: 39, scope: !12907)
!12921 = !DILocation(line: 750, column: 2, scope: !12908)
!12922 = !DILocation(line: 750, column: 2, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12908, file: !2079, line: 750, column: 2)
!12924 = distinct !{!12924, !12902, !12925}
!12925 = !DILocation(line: 764, column: 2, scope: !12882)
!12926 = !DILocation(line: 787, column: 2, scope: !12879)
!12927 = !DILocation(line: 788, column: 1, scope: !12879)
!12928 = !DILocation(line: 782, column: 20, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !2079, line: 782, column: 7)
!12930 = distinct !DILexicalBlock(scope: !12931, file: !2079, line: 781, column: 38)
!12931 = distinct !DILexicalBlock(scope: !12900, file: !2079, line: 781, column: 2)
!12932 = !DILocation(line: 782, column: 31, scope: !12929)
!12933 = !DILocation(line: 782, column: 7, scope: !12930)
!12934 = !DILocation(line: 783, column: 37, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12929, file: !2079, line: 782, column: 51)
!12936 = !DILocation(line: 784, column: 10, scope: !12935)
!12937 = !DILocation(line: 783, column: 4, scope: !12935)
!12938 = !DILocation(line: 785, column: 3, scope: !12935)
!12939 = !DILocation(line: 781, column: 2, scope: !12931)
!12940 = !DILocation(line: 781, column: 2, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12931, file: !2079, line: 781, column: 2)
!12942 = distinct !{!12942, !12905, !12943}
!12943 = !DILocation(line: 786, column: 2, scope: !12900)
!12944 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12945, file: !12945, line: 403, type: !12946, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12948)
!12945 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12946 = !DISubroutineType(types: !12947)
!12947 = !{!163, !163}
!12948 = !{!12949}
!12949 = !DILocalVariable(name: "t", arg: 1, scope: !12944, file: !12945, line: 403, type: !163)
!12950 = !DILocation(line: 0, scope: !12944)
!12951 = !DILocalVariable(name: "t", arg: 1, scope: !12952, file: !12945, line: 102, type: !163)
!12952 = distinct !DISubprogram(name: "z_tmcvt", scope: !12945, file: !12945, line: 102, type: !12953, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12955)
!12953 = !DISubroutineType(types: !12954)
!12954 = !{!163, !163, !137, !137, !211, !211, !211, !211}
!12955 = !{!12951, !12956, !12957, !12958, !12959, !12960, !12961, !12962, !12963, !12964, !12965}
!12956 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12952, file: !12945, line: 102, type: !137)
!12957 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12952, file: !12945, line: 103, type: !137)
!12958 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12952, file: !12945, line: 103, type: !211)
!12959 = !DILocalVariable(name: "result32", arg: 5, scope: !12952, file: !12945, line: 104, type: !211)
!12960 = !DILocalVariable(name: "round_up", arg: 6, scope: !12952, file: !12945, line: 104, type: !211)
!12961 = !DILocalVariable(name: "round_off", arg: 7, scope: !12952, file: !12945, line: 105, type: !211)
!12962 = !DILocalVariable(name: "mul_ratio", scope: !12952, file: !12945, line: 107, type: !211)
!12963 = !DILocalVariable(name: "div_ratio", scope: !12952, file: !12945, line: 109, type: !211)
!12964 = !DILocalVariable(name: "off", scope: !12952, file: !12945, line: 116, type: !163)
!12965 = !DILocalVariable(name: "rdivisor", scope: !12966, file: !12945, line: 119, type: !137)
!12966 = distinct !DILexicalBlock(scope: !12967, file: !12945, line: 118, column: 18)
!12967 = distinct !DILexicalBlock(scope: !12952, file: !12945, line: 118, column: 6)
!12968 = !DILocation(line: 0, scope: !12952, inlinedAt: !12969)
!12969 = distinct !DILocation(line: 406, column: 9, scope: !12944)
!12970 = !DILocation(line: 145, column: 13, scope: !12971, inlinedAt: !12969)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !12945, line: 144, column: 10)
!12972 = distinct !DILexicalBlock(scope: !12973, file: !12945, line: 142, column: 7)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !12945, line: 141, column: 24)
!12974 = distinct !DILexicalBlock(scope: !12975, file: !12945, line: 141, column: 13)
!12975 = distinct !DILexicalBlock(scope: !12952, file: !12945, line: 134, column: 6)
!12976 = !DILocation(line: 406, column: 2, scope: !12944)
!12977 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2079, file: !2079, line: 817, type: !3290, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12978)
!12978 = !{!12979, !12980, !12981, !12982}
!12979 = !DILocalVariable(name: "entry", arg: 1, scope: !12977, file: !2079, line: 817, type: !3292)
!12980 = !DILocalVariable(name: "p1", arg: 2, scope: !12977, file: !2079, line: 818, type: !102)
!12981 = !DILocalVariable(name: "p2", arg: 3, scope: !12977, file: !2079, line: 818, type: !102)
!12982 = !DILocalVariable(name: "p3", arg: 4, scope: !12977, file: !2079, line: 818, type: !102)
!12983 = !DILocation(line: 0, scope: !12977)
!12984 = !DILocation(line: 822, column: 2, scope: !12977)
!12985 = !DILocation(line: 822, column: 17, scope: !12977)
!12986 = !DILocation(line: 822, column: 30, scope: !12977)
!12987 = !DILocation(line: 823, column: 2, scope: !12977)
!12988 = !DILocation(line: 845, column: 2, scope: !12977)
!12989 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2079, file: !2079, line: 888, type: !12990, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12992)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{!103, !2083}
!12992 = !{!12993}
!12993 = !DILocalVariable(name: "thread", arg: 1, scope: !12989, file: !2079, line: 888, type: !2083)
!12994 = !DILocation(line: 0, scope: !12989)
!12995 = !DILocation(line: 893, column: 2, scope: !12989)
!12996 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2079, file: !2079, line: 897, type: !12997, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !12999)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{!103, !2083, !32}
!12999 = !{!13000, !13001}
!13000 = !DILocalVariable(name: "thread", arg: 1, scope: !12996, file: !2079, line: 897, type: !2083)
!13001 = !DILocalVariable(name: "options", arg: 2, scope: !12996, file: !2079, line: 897, type: !32)
!13002 = !DILocation(line: 0, scope: !12996)
!13003 = !DILocation(line: 902, column: 2, scope: !12996)
!13004 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2079, file: !2079, line: 1072, type: !13005, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !13010)
!13005 = !DISubroutineType(types: !13006)
!13006 = !{!103, !2082, !13007}
!13007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13008, size: 32)
!13008 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !263, line: 234, baseType: !13009)
!13009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !263, line: 192, elements: !162)
!13010 = !{!13011, !13012}
!13011 = !DILocalVariable(name: "thread", arg: 1, scope: !13004, file: !2079, line: 1072, type: !2082)
!13012 = !DILocalVariable(name: "stats", arg: 2, scope: !13004, file: !2079, line: 1073, type: !13007)
!13013 = !DILocation(line: 0, scope: !13004)
!13014 = !DILocation(line: 1075, column: 14, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13004, file: !2079, line: 1075, column: 6)
!13016 = !DILocation(line: 1075, column: 23, scope: !13015)
!13017 = !DILocation(line: 1086, column: 1, scope: !13004)
!13018 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2079, file: !2079, line: 1088, type: !13019, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2183, retainedNodes: !13021)
!13019 = !DISubroutineType(types: !13020)
!13020 = !{!103, !13007}
!13021 = !{!13022}
!13022 = !DILocalVariable(name: "stats", arg: 1, scope: !13018, file: !2079, line: 1088, type: !13007)
!13023 = !DILocation(line: 0, scope: !13018)
!13024 = !DILocation(line: 1094, column: 12, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13018, file: !2079, line: 1094, column: 6)
!13026 = !DILocation(line: 1120, column: 1, scope: !13018)
!13027 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13028, file: !13028, line: 20, type: !2964, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !162)
!13028 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13029 = !DILocation(line: 30, column: 2, scope: !13027)
!13030 = !DILocation(line: 31, column: 1, scope: !13027)
!13031 = distinct !DISubprogram(name: "idle", scope: !13028, file: !13028, line: 33, type: !3295, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !13032)
!13032 = !{!13033, !13034, !13035}
!13033 = !DILocalVariable(name: "unused1", arg: 1, scope: !13031, file: !13028, line: 33, type: !102)
!13034 = !DILocalVariable(name: "unused2", arg: 2, scope: !13031, file: !13028, line: 33, type: !102)
!13035 = !DILocalVariable(name: "unused3", arg: 3, scope: !13031, file: !13028, line: 33, type: !102)
!13036 = !DILocation(line: 0, scope: !13031)
!13037 = !DILocation(line: 41, column: 2, scope: !13031)
!13038 = !DILocation(line: 55, column: 2, scope: !13039, inlinedAt: !13043)
!13039 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !13040)
!13040 = !{!13041, !13042}
!13041 = !DILocalVariable(name: "key", scope: !13039, file: !6266, line: 44, type: !32)
!13042 = !DILocalVariable(name: "tmp", scope: !13039, file: !6266, line: 53, type: !32)
!13043 = distinct !DILocation(line: 62, column: 10, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13031, file: !13028, line: 41, column: 15)
!13045 = !{i64 2593260}
!13046 = !DILocation(line: 0, scope: !13039, inlinedAt: !13043)
!13047 = !DILocation(line: 86, column: 3, scope: !13044)
!13048 = distinct !{!13048, !13037, !13049}
!13049 = !DILocation(line: 105, column: 2, scope: !13031)
!13050 = distinct !DISubprogram(name: "k_cpu_idle", scope: !357, file: !357, line: 5627, type: !2964, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !162)
!13051 = !DILocation(line: 5629, column: 2, scope: !13050)
!13052 = !DILocation(line: 5630, column: 1, scope: !13050)
!13053 = !DISubprogram(name: "arch_cpu_idle", scope: !3293, file: !3293, line: 167, type: !2964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!13054 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2311, file: !2311, line: 93, type: !13055, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{!643, !2206, !2206}
!13057 = !{!13058, !13059, !13060, !13061}
!13058 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13054, file: !2311, line: 93, type: !2206)
!13059 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13054, file: !2311, line: 94, type: !2206)
!13060 = !DILocalVariable(name: "b1", scope: !13054, file: !2311, line: 97, type: !643)
!13061 = !DILocalVariable(name: "b2", scope: !13054, file: !2311, line: 98, type: !643)
!13062 = !DILocation(line: 0, scope: !13054)
!13063 = !DILocation(line: 97, column: 30, scope: !13054)
!13064 = !DILocation(line: 98, column: 30, scope: !13054)
!13065 = !DILocation(line: 100, column: 9, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13054, file: !2311, line: 100, column: 6)
!13067 = !DILocation(line: 100, column: 6, scope: !13054)
!13068 = !DILocation(line: 125, column: 1, scope: !13054)
!13069 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2311, file: !2311, line: 428, type: !13070, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13072)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{null, !2206}
!13072 = !{!13073}
!13073 = !DILocalVariable(name: "curr", arg: 1, scope: !13069, file: !2311, line: 428, type: !2206)
!13074 = !DILocation(line: 0, scope: !13069)
!13075 = !DILocation(line: 434, column: 6, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13069, file: !2311, line: 434, column: 6)
!13077 = !DILocation(line: 434, column: 23, scope: !13076)
!13078 = !DILocation(line: 434, column: 6, scope: !13069)
!13079 = !DILocation(line: 435, column: 50, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13076, file: !2311, line: 434, column: 29)
!13081 = !DILocation(line: 435, column: 48, scope: !13080)
!13082 = !DILocation(line: 435, column: 29, scope: !13080)
!13083 = !DILocation(line: 436, column: 24, scope: !13080)
!13084 = !DILocation(line: 436, column: 3, scope: !13080)
!13085 = !DILocation(line: 437, column: 2, scope: !13080)
!13086 = !DILocation(line: 438, column: 1, scope: !13069)
!13087 = distinct !DISubprogram(name: "slice_time", scope: !2311, file: !2311, line: 407, type: !13088, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13090)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{!103, !2206}
!13090 = !{!13091, !13092}
!13091 = !DILocalVariable(name: "curr", arg: 1, scope: !13087, file: !2311, line: 407, type: !2206)
!13092 = !DILocalVariable(name: "ret", scope: !13087, file: !2311, line: 409, type: !103)
!13093 = !DILocation(line: 0, scope: !13087)
!13094 = !DILocation(line: 409, column: 12, scope: !13087)
!13095 = !DILocation(line: 416, column: 2, scope: !13087)
!13096 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2311, file: !2311, line: 440, type: !13097, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{null, !643, !103}
!13099 = !{!13100, !13101, !13102, !13108}
!13100 = !DILocalVariable(name: "slice", arg: 1, scope: !13096, file: !2311, line: 440, type: !643)
!13101 = !DILocalVariable(name: "prio", arg: 2, scope: !13096, file: !2311, line: 440, type: !103)
!13102 = !DILocalVariable(name: "__i", scope: !13103, file: !2311, line: 442, type: !13104)
!13103 = distinct !DILexicalBlock(scope: !13096, file: !2311, line: 442, column: 2)
!13104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !13105)
!13105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !13106)
!13106 = !{!13107}
!13107 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13105, file: !368, line: 33, baseType: !103, size: 32)
!13108 = !DILocalVariable(name: "__key", scope: !13103, file: !2311, line: 442, type: !13104)
!13109 = !DILocation(line: 0, scope: !13096)
!13110 = !DILocation(line: 0, scope: !13103)
!13111 = !DILocalVariable(name: "l", arg: 1, scope: !13112, file: !368, line: 136, type: !13115)
!13112 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !13113, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13116)
!13113 = !DISubroutineType(types: !13114)
!13114 = !{!13104, !13115}
!13115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!13116 = !{!13111, !13117}
!13117 = !DILocalVariable(name: "k", scope: !13112, file: !368, line: 139, type: !13104)
!13118 = !DILocation(line: 0, scope: !13112, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 442, column: 2, scope: !13103)
!13120 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13125)
!13121 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13122)
!13122 = !{!13123, !13124}
!13123 = !DILocalVariable(name: "key", scope: !13121, file: !6266, line: 44, type: !32)
!13124 = !DILocalVariable(name: "tmp", scope: !13121, file: !6266, line: 53, type: !32)
!13125 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13119)
!13126 = !{i64 2637231}
!13127 = !DILocation(line: 0, scope: !13121, inlinedAt: !13125)
!13128 = !DILocation(line: 443, column: 29, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !2311, line: 442, column: 26)
!13130 = distinct !DILexicalBlock(scope: !13103, file: !2311, line: 442, column: 2)
!13131 = !DILocation(line: 444, column: 17, scope: !13129)
!13132 = !DILocation(line: 445, column: 51, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13129, file: !2311, line: 445, column: 7)
!13134 = !DILocation(line: 445, column: 7, scope: !13129)
!13135 = !DILocation(line: 0, scope: !13129)
!13136 = !DILocation(line: 451, column: 18, scope: !13129)
!13137 = !DILocation(line: 452, column: 3, scope: !13129)
!13138 = !DILocalVariable(name: "key", arg: 2, scope: !13139, file: !368, line: 190, type: !13104)
!13139 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !13140, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13142)
!13140 = !DISubroutineType(types: !13141)
!13141 = !{null, !13115, !13104}
!13142 = !{!13143, !13138}
!13143 = !DILocalVariable(name: "l", arg: 1, scope: !13139, file: !368, line: 189, type: !13115)
!13144 = !DILocation(line: 0, scope: !13139, inlinedAt: !13145)
!13145 = distinct !DILocation(line: 442, column: 2, scope: !13130)
!13146 = !DILocalVariable(name: "key", arg: 1, scope: !13147, file: !6266, line: 84, type: !32)
!13147 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13148)
!13148 = !{!13146}
!13149 = !DILocation(line: 0, scope: !13147, inlinedAt: !13150)
!13150 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13145)
!13151 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13150)
!13152 = !{i64 2638048}
!13153 = !DILocation(line: 454, column: 1, scope: !13096)
!13154 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12945, file: !12945, line: 389, type: !7445, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13155)
!13155 = !{!13156}
!13156 = !DILocalVariable(name: "t", arg: 1, scope: !13154, file: !12945, line: 389, type: !137)
!13157 = !DILocation(line: 0, scope: !13154)
!13158 = !DILocalVariable(name: "t", arg: 1, scope: !13159, file: !12945, line: 102, type: !163)
!13159 = distinct !DISubprogram(name: "z_tmcvt", scope: !12945, file: !12945, line: 102, type: !12953, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13160)
!13160 = !{!13158, !13161, !13162, !13163, !13164, !13165, !13166, !13167, !13168, !13169, !13170}
!13161 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13159, file: !12945, line: 102, type: !137)
!13162 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13159, file: !12945, line: 103, type: !137)
!13163 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13159, file: !12945, line: 103, type: !211)
!13164 = !DILocalVariable(name: "result32", arg: 5, scope: !13159, file: !12945, line: 104, type: !211)
!13165 = !DILocalVariable(name: "round_up", arg: 6, scope: !13159, file: !12945, line: 104, type: !211)
!13166 = !DILocalVariable(name: "round_off", arg: 7, scope: !13159, file: !12945, line: 105, type: !211)
!13167 = !DILocalVariable(name: "mul_ratio", scope: !13159, file: !12945, line: 107, type: !211)
!13168 = !DILocalVariable(name: "div_ratio", scope: !13159, file: !12945, line: 109, type: !211)
!13169 = !DILocalVariable(name: "off", scope: !13159, file: !12945, line: 116, type: !163)
!13170 = !DILocalVariable(name: "rdivisor", scope: !13171, file: !12945, line: 119, type: !137)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !12945, line: 118, column: 18)
!13172 = distinct !DILexicalBlock(scope: !13159, file: !12945, line: 118, column: 6)
!13173 = !DILocation(line: 0, scope: !13159, inlinedAt: !13174)
!13174 = distinct !DILocation(line: 392, column: 9, scope: !13154)
!13175 = !DILocation(line: 143, column: 25, scope: !13176, inlinedAt: !13174)
!13176 = distinct !DILexicalBlock(scope: !13177, file: !12945, line: 142, column: 17)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !12945, line: 142, column: 7)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !12945, line: 141, column: 24)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !12945, line: 141, column: 13)
!13180 = distinct !DILexicalBlock(scope: !13159, file: !12945, line: 134, column: 6)
!13181 = !DILocation(line: 392, column: 2, scope: !13154)
!13182 = distinct !DISubprogram(name: "z_time_slice", scope: !2311, file: !2311, line: 502, type: !8082, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13183)
!13183 = !{!13184, !13185}
!13184 = !DILocalVariable(name: "ticks", arg: 1, scope: !13182, file: !2311, line: 502, type: !103)
!13185 = !DILocalVariable(name: "key", scope: !13182, file: !2311, line: 511, type: !13104)
!13186 = !DILocation(line: 0, scope: !13182)
!13187 = !DILocation(line: 0, scope: !13112, inlinedAt: !13188)
!13188 = distinct !DILocation(line: 511, column: 25, scope: !13182)
!13189 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13190)
!13190 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13188)
!13191 = !DILocation(line: 0, scope: !13121, inlinedAt: !13190)
!13192 = !DILocation(line: 514, column: 6, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13182, file: !2311, line: 514, column: 6)
!13194 = !DILocation(line: 514, column: 25, scope: !13193)
!13195 = !DILocation(line: 514, column: 22, scope: !13193)
!13196 = !DILocation(line: 514, column: 6, scope: !13182)
!13197 = !DILocation(line: 515, column: 3, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13193, file: !2311, line: 514, column: 35)
!13199 = !DILocation(line: 0, scope: !13139, inlinedAt: !13200)
!13200 = distinct !DILocation(line: 516, column: 3, scope: !13198)
!13201 = !DILocation(line: 0, scope: !13147, inlinedAt: !13202)
!13202 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13200)
!13203 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13202)
!13204 = !DILocation(line: 517, column: 3, scope: !13198)
!13205 = !DILocation(line: 519, column: 18, scope: !13182)
!13206 = !DILocation(line: 522, column: 6, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13182, file: !2311, line: 522, column: 6)
!13208 = !DILocation(line: 522, column: 27, scope: !13207)
!13209 = !DILocation(line: 522, column: 30, scope: !13207)
!13210 = !DILocation(line: 522, column: 6, scope: !13182)
!13211 = !DILocation(line: 523, column: 30, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13213, file: !2311, line: 523, column: 7)
!13213 = distinct !DILexicalBlock(scope: !13207, file: !2311, line: 522, column: 51)
!13214 = !DILocation(line: 523, column: 13, scope: !13212)
!13215 = !DILocation(line: 523, column: 7, scope: !13213)
!13216 = !DILocation(line: 530, column: 10, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13212, file: !2311, line: 523, column: 43)
!13218 = !DILocation(line: 531, column: 3, scope: !13217)
!13219 = !DILocation(line: 532, column: 30, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13212, file: !2311, line: 531, column: 10)
!13221 = !DILocation(line: 535, column: 29, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13207, file: !2311, line: 534, column: 9)
!13223 = !DILocation(line: 0, scope: !13139, inlinedAt: !13224)
!13224 = distinct !DILocation(line: 537, column: 2, scope: !13182)
!13225 = !DILocation(line: 0, scope: !13147, inlinedAt: !13226)
!13226 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13224)
!13227 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13226)
!13228 = !DILocation(line: 538, column: 1, scope: !13182)
!13229 = distinct !DISubprogram(name: "sliceable", scope: !2311, file: !2311, line: 468, type: !13230, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13232)
!13230 = !DISubroutineType(types: !13231)
!13231 = !{!211, !2206}
!13232 = !{!13233, !13234}
!13233 = !DILocalVariable(name: "thread", arg: 1, scope: !13229, file: !2311, line: 468, type: !2206)
!13234 = !DILocalVariable(name: "ret", scope: !13229, file: !2311, line: 470, type: !211)
!13235 = !DILocation(line: 0, scope: !13229)
!13236 = !DILocation(line: 470, column: 13, scope: !13229)
!13237 = !DILocation(line: 471, column: 3, scope: !13229)
!13238 = !DILocation(line: 471, column: 7, scope: !13229)
!13239 = !DILocation(line: 472, column: 3, scope: !13229)
!13240 = !DILocation(line: 472, column: 37, scope: !13229)
!13241 = !DILocation(line: 472, column: 24, scope: !13229)
!13242 = !DILocation(line: 472, column: 43, scope: !13229)
!13243 = !DILocation(line: 472, column: 7, scope: !13229)
!13244 = !DILocation(line: 473, column: 3, scope: !13229)
!13245 = !DILocation(line: 473, column: 7, scope: !13229)
!13246 = !DILocation(line: 473, column: 6, scope: !13229)
!13247 = !DILocation(line: 479, column: 2, scope: !13229)
!13248 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2311, file: !2311, line: 482, type: !13249, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13251)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!13104, !13104}
!13251 = !{!13252, !13253}
!13252 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13248, file: !2311, line: 482, type: !13104)
!13253 = !DILocalVariable(name: "curr", scope: !13248, file: !2311, line: 484, type: !2206)
!13254 = !DILocation(line: 0, scope: !13248)
!13255 = !DILocation(line: 484, column: 26, scope: !13248)
!13256 = !DILocation(line: 493, column: 7, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13248, file: !2311, line: 493, column: 6)
!13258 = !DILocation(line: 493, column: 6, scope: !13248)
!13259 = !DILocation(line: 494, column: 3, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13257, file: !2311, line: 493, column: 49)
!13261 = !DILocation(line: 495, column: 2, scope: !13260)
!13262 = !DILocation(line: 496, column: 2, scope: !13248)
!13263 = !DILocation(line: 499, column: 1, scope: !13248)
!13264 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12384, file: !12384, line: 106, type: !13230, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13265)
!13265 = !{!13266, !13267}
!13266 = !DILocalVariable(name: "thread", arg: 1, scope: !13264, file: !12384, line: 106, type: !2206)
!13267 = !DILocalVariable(name: "state", scope: !13264, file: !12384, line: 108, type: !208)
!13268 = !DILocation(line: 0, scope: !13264)
!13269 = !DILocation(line: 108, column: 31, scope: !13264)
!13270 = !DILocation(line: 110, column: 16, scope: !13264)
!13271 = !DILocation(line: 111, column: 41, scope: !13264)
!13272 = !DILocation(line: 110, column: 2, scope: !13264)
!13273 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2311, file: !2311, line: 393, type: !13070, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13274)
!13274 = !{!13275}
!13275 = !DILocalVariable(name: "thread", arg: 1, scope: !13273, file: !2311, line: 393, type: !2206)
!13276 = !DILocation(line: 0, scope: !13273)
!13277 = !DILocation(line: 395, column: 6, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13273, file: !2311, line: 395, column: 6)
!13279 = !DILocation(line: 395, column: 6, scope: !13273)
!13280 = !DILocalVariable(name: "thread", arg: 1, scope: !13281, file: !2311, line: 264, type: !2206)
!13281 = distinct !DISubprogram(name: "dequeue_thread", scope: !2311, file: !2311, line: 264, type: !13070, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13282)
!13282 = !{!13280}
!13283 = !DILocation(line: 0, scope: !13281, inlinedAt: !13284)
!13284 = distinct !DILocation(line: 396, column: 3, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13278, file: !2311, line: 395, column: 34)
!13286 = !DILocation(line: 266, column: 15, scope: !13281, inlinedAt: !13284)
!13287 = !DILocation(line: 266, column: 28, scope: !13281, inlinedAt: !13284)
!13288 = !DILocalVariable(name: "thread", arg: 1, scope: !13289, file: !2311, line: 232, type: !2206)
!13289 = distinct !DISubprogram(name: "runq_remove", scope: !2311, file: !2311, line: 232, type: !13070, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13290)
!13290 = !{!13288}
!13291 = !DILocation(line: 0, scope: !13289, inlinedAt: !13292)
!13292 = distinct !DILocation(line: 268, column: 3, scope: !13293, inlinedAt: !13284)
!13293 = distinct !DILexicalBlock(scope: !13294, file: !2311, line: 267, column: 35)
!13294 = distinct !DILexicalBlock(scope: !13281, file: !2311, line: 267, column: 6)
!13295 = !DILocation(line: 234, column: 2, scope: !13289, inlinedAt: !13292)
!13296 = !DILocation(line: 397, column: 2, scope: !13285)
!13297 = !DILocalVariable(name: "thread", arg: 1, scope: !13298, file: !2311, line: 250, type: !2206)
!13298 = distinct !DISubprogram(name: "queue_thread", scope: !2311, file: !2311, line: 250, type: !13070, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13299)
!13299 = !{!13297}
!13300 = !DILocation(line: 0, scope: !13298, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 398, column: 2, scope: !13273)
!13302 = !DILocation(line: 252, column: 15, scope: !13298, inlinedAt: !13301)
!13303 = !DILocation(line: 252, column: 28, scope: !13298, inlinedAt: !13301)
!13304 = !DILocalVariable(name: "thread", arg: 1, scope: !13305, file: !2311, line: 227, type: !2206)
!13305 = distinct !DISubprogram(name: "runq_add", scope: !2311, file: !2311, line: 227, type: !13070, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13306)
!13306 = !{!13304}
!13307 = !DILocation(line: 0, scope: !13305, inlinedAt: !13308)
!13308 = distinct !DILocation(line: 254, column: 3, scope: !13309, inlinedAt: !13301)
!13309 = distinct !DILexicalBlock(scope: !13310, file: !2311, line: 253, column: 35)
!13310 = distinct !DILexicalBlock(scope: !13298, file: !2311, line: 253, column: 6)
!13311 = !DILocalVariable(name: "pq", arg: 1, scope: !13312, file: !2311, line: 181, type: !13315)
!13312 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2311, file: !2311, line: 181, type: !13313, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13316)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{null, !13315, !2206}
!13315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!13316 = !{!13311, !13317, !13318}
!13317 = !DILocalVariable(name: "thread", arg: 2, scope: !13312, file: !2311, line: 182, type: !2206)
!13318 = !DILocalVariable(name: "t", scope: !13312, file: !2311, line: 184, type: !2206)
!13319 = !DILocation(line: 0, scope: !13312, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 229, column: 2, scope: !13305, inlinedAt: !13308)
!13321 = !DILocation(line: 188, column: 2, scope: !13322, inlinedAt: !13320)
!13322 = distinct !DILexicalBlock(scope: !13312, file: !2311, line: 188, column: 2)
!13323 = !DILocation(line: 188, column: 2, scope: !13324, inlinedAt: !13320)
!13324 = distinct !DILexicalBlock(scope: !13322, file: !2311, line: 188, column: 2)
!13325 = !DILocation(line: 0, scope: !13322, inlinedAt: !13320)
!13326 = !DILocation(line: 189, column: 7, scope: !13327, inlinedAt: !13320)
!13327 = distinct !DILexicalBlock(scope: !13328, file: !2311, line: 189, column: 7)
!13328 = distinct !DILexicalBlock(scope: !13324, file: !2311, line: 188, column: 56)
!13329 = !DILocation(line: 189, column: 35, scope: !13327, inlinedAt: !13320)
!13330 = !DILocation(line: 189, column: 7, scope: !13328, inlinedAt: !13320)
!13331 = !DILocation(line: 191, column: 21, scope: !13332, inlinedAt: !13320)
!13332 = distinct !DILexicalBlock(scope: !13327, file: !2311, line: 189, column: 40)
!13333 = !DILocation(line: 190, column: 4, scope: !13332, inlinedAt: !13320)
!13334 = !DILocation(line: 192, column: 4, scope: !13332, inlinedAt: !13320)
!13335 = distinct !{!13335, !13321, !13336}
!13336 = !DILocation(line: 194, column: 2, scope: !13322, inlinedAt: !13320)
!13337 = !DILocation(line: 196, column: 37, scope: !13312, inlinedAt: !13320)
!13338 = !DILocation(line: 196, column: 2, scope: !13312, inlinedAt: !13320)
!13339 = !DILocation(line: 197, column: 1, scope: !13312, inlinedAt: !13320)
!13340 = !DILocation(line: 399, column: 25, scope: !13273)
!13341 = !DILocation(line: 399, column: 22, scope: !13273)
!13342 = !DILocation(line: 399, column: 2, scope: !13273)
!13343 = !DILocation(line: 400, column: 1, scope: !13273)
!13344 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12384, file: !12384, line: 136, type: !13230, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13345)
!13345 = !{!13346}
!13346 = !DILocalVariable(name: "thread", arg: 1, scope: !13344, file: !12384, line: 136, type: !2206)
!13347 = !DILocation(line: 0, scope: !13344)
!13348 = !DILocation(line: 138, column: 9, scope: !13344)
!13349 = !DILocation(line: 138, column: 2, scope: !13344)
!13350 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2311, file: !2311, line: 1137, type: !13313, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13351)
!13351 = !{!13352, !13353}
!13352 = !DILocalVariable(name: "pq", arg: 1, scope: !13350, file: !2311, line: 1137, type: !13315)
!13353 = !DILocalVariable(name: "thread", arg: 2, scope: !13350, file: !2311, line: 1137, type: !2206)
!13354 = !DILocation(line: 0, scope: !13350)
!13355 = !DILocation(line: 1141, column: 33, scope: !13350)
!13356 = !DILocation(line: 1141, column: 2, scope: !13350)
!13357 = !DILocation(line: 1142, column: 1, scope: !13350)
!13358 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !13359, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!2307, !13315}
!13361 = !{!13362}
!13362 = !DILocalVariable(name: "list", arg: 1, scope: !13358, file: !273, line: 294, type: !13315)
!13363 = !DILocation(line: 0, scope: !13358)
!13364 = !DILocation(line: 296, column: 9, scope: !13358)
!13365 = !DILocation(line: 296, column: 49, scope: !13358)
!13366 = !DILocation(line: 296, column: 2, scope: !13358)
!13367 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !13368, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13370)
!13368 = !DISubroutineType(types: !13369)
!13369 = !{null, !2307, !2307}
!13370 = !{!13371, !13372, !13373}
!13371 = !DILocalVariable(name: "successor", arg: 1, scope: !13367, file: !273, line: 443, type: !2307)
!13372 = !DILocalVariable(name: "node", arg: 2, scope: !13367, file: !273, line: 443, type: !2307)
!13373 = !DILocalVariable(name: "prev", scope: !13367, file: !273, line: 445, type: !13374)
!13374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2307)
!13375 = !DILocation(line: 0, scope: !13367)
!13376 = !DILocation(line: 445, column: 39, scope: !13367)
!13377 = !DILocation(line: 447, column: 8, scope: !13367)
!13378 = !DILocation(line: 447, column: 13, scope: !13367)
!13379 = !DILocation(line: 448, column: 8, scope: !13367)
!13380 = !DILocation(line: 448, column: 13, scope: !13367)
!13381 = !DILocation(line: 449, column: 8, scope: !13367)
!13382 = !DILocation(line: 449, column: 13, scope: !13367)
!13383 = !DILocation(line: 450, column: 18, scope: !13367)
!13384 = !DILocation(line: 451, column: 1, scope: !13367)
!13385 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !13386, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13388)
!13386 = !DISubroutineType(types: !13387)
!13387 = !{!2307, !13315, !2307}
!13388 = !{!13389, !13390}
!13389 = !DILocalVariable(name: "list", arg: 1, scope: !13385, file: !273, line: 341, type: !13315)
!13390 = !DILocalVariable(name: "node", arg: 2, scope: !13385, file: !273, line: 342, type: !2307)
!13391 = !DILocation(line: 0, scope: !13385)
!13392 = !DILocation(line: 344, column: 15, scope: !13385)
!13393 = !DILocation(line: 344, column: 9, scope: !13385)
!13394 = !DILocation(line: 344, column: 26, scope: !13385)
!13395 = !DILocation(line: 344, column: 2, scope: !13385)
!13396 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !13397, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13399)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{null, !13315, !2307}
!13399 = !{!13400, !13401, !13402}
!13400 = !DILocalVariable(name: "list", arg: 1, scope: !13396, file: !273, line: 404, type: !13315)
!13401 = !DILocalVariable(name: "node", arg: 2, scope: !13396, file: !273, line: 404, type: !2307)
!13402 = !DILocalVariable(name: "tail", scope: !13396, file: !273, line: 406, type: !13374)
!13403 = !DILocation(line: 0, scope: !13396)
!13404 = !DILocation(line: 406, column: 34, scope: !13396)
!13405 = !DILocation(line: 408, column: 8, scope: !13396)
!13406 = !DILocation(line: 408, column: 13, scope: !13396)
!13407 = !DILocation(line: 409, column: 8, scope: !13396)
!13408 = !DILocation(line: 409, column: 13, scope: !13396)
!13409 = !DILocation(line: 411, column: 8, scope: !13396)
!13410 = !DILocation(line: 411, column: 13, scope: !13396)
!13411 = !DILocation(line: 412, column: 13, scope: !13396)
!13412 = !DILocation(line: 413, column: 1, scope: !13396)
!13413 = distinct !DISubprogram(name: "update_cache", scope: !2311, file: !2311, line: 559, type: !8082, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13414)
!13414 = !{!13415, !13416}
!13415 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13413, file: !2311, line: 559, type: !103)
!13416 = !DILocalVariable(name: "thread", scope: !13413, file: !2311, line: 562, type: !2206)
!13417 = !DILocation(line: 0, scope: !13413)
!13418 = !DILocation(line: 239, column: 9, scope: !13419, inlinedAt: !13422)
!13419 = distinct !DISubprogram(name: "runq_best", scope: !2311, file: !2311, line: 237, type: !13420, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!13420 = !DISubroutineType(types: !13421)
!13421 = !{!2206}
!13422 = distinct !DILocation(line: 314, column: 28, scope: !13423, inlinedAt: !13426)
!13423 = distinct !DISubprogram(name: "next_up", scope: !2311, file: !2311, line: 312, type: !13420, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13424)
!13424 = !{!13425}
!13425 = !DILocalVariable(name: "thread", scope: !13423, file: !2311, line: 314, type: !2206)
!13426 = distinct !DILocation(line: 562, column: 28, scope: !13413)
!13427 = !DILocation(line: 0, scope: !13423, inlinedAt: !13426)
!13428 = !DILocation(line: 340, column: 17, scope: !13423, inlinedAt: !13426)
!13429 = !DILocation(line: 340, column: 9, scope: !13423, inlinedAt: !13426)
!13430 = !DILocalVariable(name: "thread", arg: 1, scope: !13431, file: !2311, line: 127, type: !2206)
!13431 = distinct !DISubprogram(name: "should_preempt", scope: !2311, file: !2311, line: 127, type: !13432, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13434)
!13432 = !DISubroutineType(types: !13433)
!13433 = !{!211, !2206, !103}
!13434 = !{!13430, !13435}
!13435 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13431, file: !2311, line: 128, type: !103)
!13436 = !DILocation(line: 0, scope: !13431, inlinedAt: !13437)
!13437 = distinct !DILocation(line: 564, column: 6, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13413, file: !2311, line: 564, column: 6)
!13439 = !DILocation(line: 133, column: 17, scope: !13440, inlinedAt: !13437)
!13440 = distinct !DILexicalBlock(scope: !13431, file: !2311, line: 133, column: 6)
!13441 = !DILocation(line: 0, scope: !13438)
!13442 = !DILocation(line: 133, column: 6, scope: !13431, inlinedAt: !13437)
!13443 = !DILocation(line: 140, column: 6, scope: !13444, inlinedAt: !13437)
!13444 = distinct !DILexicalBlock(scope: !13431, file: !2311, line: 140, column: 6)
!13445 = !DILocation(line: 140, column: 6, scope: !13431, inlinedAt: !13437)
!13446 = !DILocation(line: 150, column: 9, scope: !13447, inlinedAt: !13437)
!13447 = distinct !DILexicalBlock(scope: !13431, file: !2311, line: 149, column: 6)
!13448 = !DILocation(line: 149, column: 6, scope: !13431, inlinedAt: !13437)
!13449 = !DILocation(line: 157, column: 6, scope: !13450, inlinedAt: !13437)
!13450 = distinct !DILexicalBlock(scope: !13431, file: !2311, line: 157, column: 6)
!13451 = !DILocation(line: 564, column: 6, scope: !13413)
!13452 = !DILocation(line: 566, column: 14, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !2311, line: 566, column: 7)
!13454 = distinct !DILexicalBlock(scope: !13438, file: !2311, line: 564, column: 42)
!13455 = !DILocation(line: 566, column: 7, scope: !13454)
!13456 = !DILocation(line: 567, column: 4, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13453, file: !2311, line: 566, column: 27)
!13458 = !DILocation(line: 568, column: 3, scope: !13457)
!13459 = !DILocation(line: 585, column: 1, scope: !13413)
!13460 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2311, file: !2311, line: 1144, type: !13461, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13463)
!13461 = !DISubroutineType(types: !13462)
!13462 = !{!2206, !13315}
!13463 = !{!13464, !13465, !13466}
!13464 = !DILocalVariable(name: "pq", arg: 1, scope: !13460, file: !2311, line: 1144, type: !13315)
!13465 = !DILocalVariable(name: "thread", scope: !13460, file: !2311, line: 1146, type: !2206)
!13466 = !DILocalVariable(name: "n", scope: !13460, file: !2311, line: 1147, type: !2307)
!13467 = !DILocation(line: 0, scope: !13460)
!13468 = !DILocation(line: 1147, column: 19, scope: !13460)
!13469 = !DILocation(line: 1152, column: 2, scope: !13460)
!13470 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12384, file: !12384, line: 115, type: !13230, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13471)
!13471 = !{!13472}
!13472 = !DILocalVariable(name: "thread", arg: 1, scope: !13470, file: !12384, line: 115, type: !2206)
!13473 = !DILocation(line: 0, scope: !13470)
!13474 = !DILocation(line: 117, column: 46, scope: !13470)
!13475 = !DILocation(line: 117, column: 10, scope: !13470)
!13476 = !DILocation(line: 117, column: 9, scope: !13470)
!13477 = !DILocation(line: 117, column: 2, scope: !13470)
!13478 = distinct !DISubprogram(name: "is_preempt", scope: !2311, file: !2311, line: 62, type: !13088, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13479)
!13479 = !{!13480}
!13480 = !DILocalVariable(name: "thread", arg: 1, scope: !13478, file: !2311, line: 62, type: !2206)
!13481 = !DILocation(line: 0, scope: !13478)
!13482 = !DILocation(line: 65, column: 22, scope: !13478)
!13483 = !DILocation(line: 65, column: 30, scope: !13478)
!13484 = !DILocation(line: 65, column: 2, scope: !13478)
!13485 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12778, file: !12778, line: 35, type: !13486, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13490)
!13486 = !DISubroutineType(types: !13487)
!13487 = !{!211, !13488}
!13488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13489, size: 32)
!13489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2257)
!13490 = !{!13491}
!13491 = !DILocalVariable(name: "to", arg: 1, scope: !13485, file: !12778, line: 35, type: !13488)
!13492 = !DILocation(line: 0, scope: !13485)
!13493 = !DILocation(line: 37, column: 35, scope: !13485)
!13494 = !DILocation(line: 37, column: 10, scope: !13485)
!13495 = !DILocation(line: 37, column: 9, scope: !13485)
!13496 = !DILocation(line: 37, column: 2, scope: !13485)
!13497 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !13498, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13502)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{!211, !13500}
!13500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13501, size: 32)
!13501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2216)
!13502 = !{!13503}
!13503 = !DILocalVariable(name: "node", arg: 1, scope: !13497, file: !273, line: 225, type: !13500)
!13504 = !DILocation(line: 0, scope: !13497)
!13505 = !DILocation(line: 227, column: 15, scope: !13497)
!13506 = !DILocation(line: 227, column: 20, scope: !13497)
!13507 = !DILocation(line: 227, column: 2, scope: !13497)
!13508 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !13386, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13509)
!13509 = !{!13510, !13511}
!13510 = !DILocalVariable(name: "list", arg: 1, scope: !13508, file: !273, line: 325, type: !13315)
!13511 = !DILocalVariable(name: "node", arg: 2, scope: !13508, file: !273, line: 326, type: !2307)
!13512 = !DILocation(line: 0, scope: !13508)
!13513 = !DILocation(line: 328, column: 24, scope: !13508)
!13514 = !DILocation(line: 328, column: 15, scope: !13508)
!13515 = !DILocation(line: 328, column: 9, scope: !13508)
!13516 = !DILocation(line: 328, column: 45, scope: !13508)
!13517 = !DILocation(line: 328, column: 2, scope: !13508)
!13518 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !13519, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13521)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{!211, !13315}
!13521 = !{!13522}
!13522 = !DILocalVariable(name: "list", arg: 1, scope: !13518, file: !273, line: 266, type: !13315)
!13523 = !DILocation(line: 0, scope: !13518)
!13524 = !DILocation(line: 268, column: 15, scope: !13518)
!13525 = !DILocation(line: 268, column: 20, scope: !13518)
!13526 = !DILocation(line: 268, column: 2, scope: !13518)
!13527 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !13528, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13530)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{null, !2307}
!13530 = !{!13531, !13532, !13533}
!13531 = !DILocalVariable(name: "node", arg: 1, scope: !13527, file: !273, line: 496, type: !2307)
!13532 = !DILocalVariable(name: "prev", scope: !13527, file: !273, line: 498, type: !13374)
!13533 = !DILocalVariable(name: "next", scope: !13527, file: !273, line: 499, type: !13374)
!13534 = !DILocation(line: 0, scope: !13527)
!13535 = !DILocation(line: 498, column: 34, scope: !13527)
!13536 = !DILocation(line: 499, column: 34, scope: !13527)
!13537 = !DILocation(line: 501, column: 8, scope: !13527)
!13538 = !DILocation(line: 501, column: 13, scope: !13527)
!13539 = !DILocation(line: 502, column: 8, scope: !13527)
!13540 = !DILocation(line: 502, column: 13, scope: !13527)
!13541 = !DILocation(line: 503, column: 2, scope: !13527)
!13542 = !DILocation(line: 504, column: 1, scope: !13527)
!13543 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !13528, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13544)
!13544 = !{!13545}
!13545 = !DILocalVariable(name: "node", arg: 1, scope: !13543, file: !273, line: 211, type: !2307)
!13546 = !DILocation(line: 0, scope: !13543)
!13547 = !DILocation(line: 213, column: 8, scope: !13543)
!13548 = !DILocation(line: 213, column: 13, scope: !13543)
!13549 = !DILocation(line: 214, column: 8, scope: !13543)
!13550 = !DILocation(line: 214, column: 13, scope: !13543)
!13551 = !DILocation(line: 215, column: 1, scope: !13543)
!13552 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12384, file: !12384, line: 131, type: !13553, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13555)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{!211, !2206, !137}
!13555 = !{!13556, !13557}
!13556 = !DILocalVariable(name: "thread", arg: 1, scope: !13552, file: !12384, line: 131, type: !2206)
!13557 = !DILocalVariable(name: "state", arg: 2, scope: !13552, file: !12384, line: 131, type: !137)
!13558 = !DILocation(line: 0, scope: !13552)
!13559 = !DILocation(line: 133, column: 23, scope: !13552)
!13560 = !DILocation(line: 133, column: 45, scope: !13552)
!13561 = !DILocation(line: 133, column: 2, scope: !13552)
!13562 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12384, file: !12384, line: 211, type: !13563, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{!211, !103, !103}
!13565 = !{!13566, !13567}
!13566 = !DILocalVariable(name: "prio", arg: 1, scope: !13562, file: !12384, line: 211, type: !103)
!13567 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13562, file: !12384, line: 211, type: !103)
!13568 = !DILocation(line: 0, scope: !13562)
!13569 = !DILocation(line: 213, column: 9, scope: !13562)
!13570 = !DILocation(line: 213, column: 2, scope: !13562)
!13571 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12384, file: !12384, line: 83, type: !13230, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13572)
!13572 = !{!13573}
!13573 = !DILocalVariable(name: "thread", arg: 1, scope: !13571, file: !12384, line: 83, type: !2206)
!13574 = !DILocation(line: 0, scope: !13571)
!13575 = !DILocation(line: 89, column: 16, scope: !13571)
!13576 = !DILocation(line: 89, column: 2, scope: !13571)
!13577 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12384, file: !12384, line: 206, type: !13563, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13578)
!13578 = !{!13579, !13580}
!13579 = !DILocalVariable(name: "prio1", arg: 1, scope: !13577, file: !12384, line: 206, type: !103)
!13580 = !DILocalVariable(name: "prio2", arg: 2, scope: !13577, file: !12384, line: 206, type: !103)
!13581 = !DILocation(line: 0, scope: !13577)
!13582 = !DILocation(line: 208, column: 15, scope: !13577)
!13583 = !DILocation(line: 208, column: 2, scope: !13577)
!13584 = distinct !DISubprogram(name: "z_ready_thread", scope: !2311, file: !2311, line: 635, type: !13070, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13585)
!13585 = !{!13586, !13587, !13589}
!13586 = !DILocalVariable(name: "thread", arg: 1, scope: !13584, file: !2311, line: 635, type: !2206)
!13587 = !DILocalVariable(name: "__i", scope: !13588, file: !2311, line: 637, type: !13104)
!13588 = distinct !DILexicalBlock(scope: !13584, file: !2311, line: 637, column: 2)
!13589 = !DILocalVariable(name: "__key", scope: !13588, file: !2311, line: 637, type: !13104)
!13590 = !DILocation(line: 0, scope: !13584)
!13591 = !DILocation(line: 0, scope: !13588)
!13592 = !DILocation(line: 0, scope: !13112, inlinedAt: !13593)
!13593 = distinct !DILocation(line: 637, column: 2, scope: !13588)
!13594 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13595)
!13595 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13593)
!13596 = !DILocation(line: 0, scope: !13121, inlinedAt: !13595)
!13597 = !DILocation(line: 639, column: 4, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13599, file: !2311, line: 638, column: 41)
!13599 = distinct !DILexicalBlock(scope: !13600, file: !2311, line: 638, column: 7)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !2311, line: 637, column: 26)
!13601 = distinct !DILexicalBlock(scope: !13588, file: !2311, line: 637, column: 2)
!13602 = !DILocation(line: 0, scope: !13139, inlinedAt: !13603)
!13603 = distinct !DILocation(line: 637, column: 2, scope: !13601)
!13604 = !DILocation(line: 0, scope: !13147, inlinedAt: !13605)
!13605 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13603)
!13606 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13605)
!13607 = !DILocation(line: 642, column: 1, scope: !13584)
!13608 = distinct !DISubprogram(name: "ready_thread", scope: !2311, file: !2311, line: 617, type: !13070, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13609)
!13609 = !{!13610}
!13610 = !DILocalVariable(name: "thread", arg: 1, scope: !13608, file: !2311, line: 617, type: !2206)
!13611 = !DILocation(line: 0, scope: !13608)
!13612 = !DILocation(line: 626, column: 7, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13608, file: !2311, line: 626, column: 6)
!13614 = !DILocation(line: 626, column: 34, scope: !13613)
!13615 = !DILocation(line: 626, column: 37, scope: !13613)
!13616 = !DILocation(line: 626, column: 6, scope: !13608)
!13617 = !DILocation(line: 0, scope: !13298, inlinedAt: !13618)
!13618 = distinct !DILocation(line: 629, column: 3, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13613, file: !2311, line: 626, column: 64)
!13620 = !DILocation(line: 252, column: 15, scope: !13298, inlinedAt: !13618)
!13621 = !DILocation(line: 252, column: 28, scope: !13298, inlinedAt: !13618)
!13622 = !DILocation(line: 0, scope: !13305, inlinedAt: !13623)
!13623 = distinct !DILocation(line: 254, column: 3, scope: !13309, inlinedAt: !13618)
!13624 = !DILocation(line: 0, scope: !13312, inlinedAt: !13625)
!13625 = distinct !DILocation(line: 229, column: 2, scope: !13305, inlinedAt: !13623)
!13626 = !DILocation(line: 188, column: 2, scope: !13322, inlinedAt: !13625)
!13627 = !DILocation(line: 188, column: 2, scope: !13324, inlinedAt: !13625)
!13628 = !DILocation(line: 0, scope: !13322, inlinedAt: !13625)
!13629 = !DILocation(line: 189, column: 7, scope: !13327, inlinedAt: !13625)
!13630 = !DILocation(line: 189, column: 35, scope: !13327, inlinedAt: !13625)
!13631 = !DILocation(line: 189, column: 7, scope: !13328, inlinedAt: !13625)
!13632 = !DILocation(line: 191, column: 21, scope: !13332, inlinedAt: !13625)
!13633 = !DILocation(line: 190, column: 4, scope: !13332, inlinedAt: !13625)
!13634 = !DILocation(line: 192, column: 4, scope: !13332, inlinedAt: !13625)
!13635 = distinct !{!13635, !13626, !13636}
!13636 = !DILocation(line: 194, column: 2, scope: !13322, inlinedAt: !13625)
!13637 = !DILocation(line: 196, column: 37, scope: !13312, inlinedAt: !13625)
!13638 = !DILocation(line: 196, column: 2, scope: !13312, inlinedAt: !13625)
!13639 = !DILocation(line: 197, column: 1, scope: !13312, inlinedAt: !13625)
!13640 = !DILocation(line: 630, column: 3, scope: !13619)
!13641 = !DILocation(line: 632, column: 2, scope: !13619)
!13642 = !DILocation(line: 633, column: 1, scope: !13608)
!13643 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12384, file: !12384, line: 120, type: !13230, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13644)
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "thread", arg: 1, scope: !13643, file: !12384, line: 120, type: !2206)
!13646 = !DILocation(line: 0, scope: !13643)
!13647 = !DILocation(line: 122, column: 12, scope: !13643)
!13648 = !DILocation(line: 122, column: 62, scope: !13643)
!13649 = !DILocation(line: 123, column: 4, scope: !13643)
!13650 = !DILocation(line: 122, column: 2, scope: !13643)
!13651 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2311, file: !2311, line: 644, type: !13070, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13652)
!13652 = !{!13653, !13654, !13656}
!13653 = !DILocalVariable(name: "thread", arg: 1, scope: !13651, file: !2311, line: 644, type: !2206)
!13654 = !DILocalVariable(name: "__i", scope: !13655, file: !2311, line: 646, type: !13104)
!13655 = distinct !DILexicalBlock(scope: !13651, file: !2311, line: 646, column: 2)
!13656 = !DILocalVariable(name: "__key", scope: !13655, file: !2311, line: 646, type: !13104)
!13657 = !DILocation(line: 0, scope: !13651)
!13658 = !DILocation(line: 0, scope: !13655)
!13659 = !DILocation(line: 0, scope: !13112, inlinedAt: !13660)
!13660 = distinct !DILocation(line: 646, column: 2, scope: !13655)
!13661 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13662)
!13662 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13660)
!13663 = !DILocation(line: 0, scope: !13121, inlinedAt: !13662)
!13664 = !DILocation(line: 647, column: 3, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !2311, line: 646, column: 26)
!13666 = distinct !DILexicalBlock(scope: !13655, file: !2311, line: 646, column: 2)
!13667 = !DILocation(line: 0, scope: !13139, inlinedAt: !13668)
!13668 = distinct !DILocation(line: 646, column: 2, scope: !13666)
!13669 = !DILocation(line: 0, scope: !13147, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13668)
!13671 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13670)
!13672 = !DILocation(line: 649, column: 1, scope: !13651)
!13673 = distinct !DISubprogram(name: "z_sched_start", scope: !2311, file: !2311, line: 651, type: !13070, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13674)
!13674 = !{!13675, !13676}
!13675 = !DILocalVariable(name: "thread", arg: 1, scope: !13673, file: !2311, line: 651, type: !2206)
!13676 = !DILocalVariable(name: "key", scope: !13673, file: !2311, line: 653, type: !13104)
!13677 = !DILocation(line: 0, scope: !13673)
!13678 = !DILocation(line: 0, scope: !13112, inlinedAt: !13679)
!13679 = distinct !DILocation(line: 653, column: 25, scope: !13673)
!13680 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13681)
!13681 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13679)
!13682 = !DILocation(line: 0, scope: !13121, inlinedAt: !13681)
!13683 = !DILocation(line: 655, column: 6, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13673, file: !2311, line: 655, column: 6)
!13685 = !DILocation(line: 655, column: 6, scope: !13673)
!13686 = !DILocation(line: 0, scope: !13139, inlinedAt: !13687)
!13687 = distinct !DILocation(line: 656, column: 3, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !2311, line: 655, column: 36)
!13689 = !DILocation(line: 0, scope: !13147, inlinedAt: !13690)
!13690 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13687)
!13691 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13690)
!13692 = !DILocation(line: 657, column: 3, scope: !13688)
!13693 = !DILocation(line: 660, column: 2, scope: !13673)
!13694 = !DILocation(line: 661, column: 2, scope: !13673)
!13695 = !DILocation(line: 662, column: 2, scope: !13673)
!13696 = !DILocation(line: 663, column: 1, scope: !13673)
!13697 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12384, file: !12384, line: 126, type: !13230, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13698)
!13698 = !{!13699}
!13699 = !DILocalVariable(name: "thread", arg: 1, scope: !13697, file: !12384, line: 126, type: !2206)
!13700 = !DILocation(line: 0, scope: !13697)
!13701 = !DILocation(line: 128, column: 23, scope: !13697)
!13702 = !DILocation(line: 128, column: 36, scope: !13697)
!13703 = !DILocation(line: 128, column: 56, scope: !13697)
!13704 = !DILocation(line: 128, column: 2, scope: !13697)
!13705 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12384, file: !12384, line: 155, type: !13070, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13706)
!13706 = !{!13707}
!13707 = !DILocalVariable(name: "thread", arg: 1, scope: !13705, file: !12384, line: 155, type: !2206)
!13708 = !DILocation(line: 0, scope: !13705)
!13709 = !DILocation(line: 157, column: 15, scope: !13705)
!13710 = !DILocation(line: 157, column: 28, scope: !13705)
!13711 = !DILocation(line: 158, column: 1, scope: !13705)
!13712 = distinct !DISubprogram(name: "z_reschedule", scope: !2311, file: !2311, line: 967, type: !13140, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13713)
!13713 = !{!13714, !13715}
!13714 = !DILocalVariable(name: "lock", arg: 1, scope: !13712, file: !2311, line: 967, type: !13115)
!13715 = !DILocalVariable(name: "key", arg: 2, scope: !13712, file: !2311, line: 967, type: !13104)
!13716 = !DILocation(line: 0, scope: !13712)
!13717 = !DILocation(line: 969, column: 6, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13712, file: !2311, line: 969, column: 6)
!13719 = !DILocation(line: 969, column: 23, scope: !13718)
!13720 = !DILocation(line: 969, column: 26, scope: !13718)
!13721 = !DILocation(line: 969, column: 6, scope: !13712)
!13722 = !DILocalVariable(name: "key", arg: 2, scope: !13723, file: !12488, line: 193, type: !13104)
!13723 = distinct !DISubprogram(name: "z_swap", scope: !12488, file: !12488, line: 193, type: !13724, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13726)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{!103, !13115, !13104}
!13726 = !{!13727, !13722}
!13727 = !DILocalVariable(name: "lock", arg: 1, scope: !13723, file: !12488, line: 193, type: !13115)
!13728 = !DILocation(line: 0, scope: !13723, inlinedAt: !13729)
!13729 = distinct !DILocation(line: 970, column: 3, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13718, file: !2311, line: 969, column: 39)
!13731 = !DILocation(line: 196, column: 9, scope: !13723, inlinedAt: !13729)
!13732 = !DILocation(line: 971, column: 2, scope: !13730)
!13733 = !DILocation(line: 0, scope: !13139, inlinedAt: !13734)
!13734 = distinct !DILocation(line: 972, column: 3, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13718, file: !2311, line: 971, column: 9)
!13736 = !DILocation(line: 0, scope: !13147, inlinedAt: !13737)
!13737 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13734)
!13738 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13737)
!13739 = !DILocation(line: 975, column: 1, scope: !13712)
!13740 = distinct !DISubprogram(name: "resched", scope: !2311, file: !2311, line: 940, type: !13741, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13743)
!13741 = !DISubroutineType(types: !13742)
!13742 = !{!211, !137}
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "key", arg: 1, scope: !13740, file: !2311, line: 940, type: !137)
!13745 = !DILocation(line: 0, scope: !13740)
!13746 = !DILocalVariable(name: "key", arg: 1, scope: !13747, file: !6266, line: 112, type: !32)
!13747 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6266, file: !6266, line: 112, type: !13748, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13750)
!13748 = !DISubroutineType(types: !13749)
!13749 = !{!211, !32}
!13750 = !{!13746}
!13751 = !DILocation(line: 0, scope: !13747, inlinedAt: !13752)
!13752 = distinct !DILocation(line: 946, column: 9, scope: !13740)
!13753 = !DILocation(line: 115, column: 13, scope: !13747, inlinedAt: !13752)
!13754 = !DILocation(line: 946, column: 32, scope: !13740)
!13755 = !DILocation(line: 1031, column: 3, scope: !13756, inlinedAt: !13759)
!13756 = distinct !DISubprogram(name: "__get_IPSR", scope: !6440, file: !6440, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13757)
!13757 = !{!13758}
!13758 = !DILocalVariable(name: "result", scope: !13756, file: !6440, line: 1029, type: !137)
!13759 = distinct !DILocation(line: 48, column: 10, scope: !13760, inlinedAt: !13761)
!13760 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7232, file: !7232, line: 46, type: !7233, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!13761 = distinct !DILocation(line: 946, column: 36, scope: !13740)
!13762 = !{i64 4153322}
!13763 = !DILocation(line: 0, scope: !13756, inlinedAt: !13759)
!13764 = !DILocation(line: 48, column: 9, scope: !13760, inlinedAt: !13761)
!13765 = !DILocation(line: 946, column: 2, scope: !13740)
!13766 = distinct !DISubprogram(name: "need_swap", scope: !2311, file: !2311, line: 953, type: !7233, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13767)
!13767 = !{!13768}
!13768 = !DILocalVariable(name: "new_thread", scope: !13766, file: !2311, line: 959, type: !2206)
!13769 = !DILocation(line: 962, column: 31, scope: !13766)
!13770 = !DILocation(line: 0, scope: !13766)
!13771 = !DILocation(line: 963, column: 23, scope: !13766)
!13772 = !DILocation(line: 963, column: 20, scope: !13766)
!13773 = !DILocation(line: 963, column: 2, scope: !13766)
!13774 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12488, file: !12488, line: 181, type: !6450, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13775)
!13775 = !{!13776, !13777}
!13776 = !DILocalVariable(name: "key", arg: 1, scope: !13774, file: !12488, line: 181, type: !32)
!13777 = !DILocalVariable(name: "ret", scope: !13774, file: !12488, line: 183, type: !103)
!13778 = !DILocation(line: 0, scope: !13774)
!13779 = !DILocation(line: 185, column: 8, scope: !13774)
!13780 = !DILocation(line: 186, column: 2, scope: !13774)
!13781 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2311, file: !2311, line: 665, type: !13070, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13782)
!13782 = !{!13783, !13784, !13786}
!13783 = !DILocalVariable(name: "thread", arg: 1, scope: !13781, file: !2311, line: 665, type: !2206)
!13784 = !DILocalVariable(name: "__i", scope: !13785, file: !2311, line: 671, type: !13104)
!13785 = distinct !DILexicalBlock(scope: !13781, file: !2311, line: 671, column: 2)
!13786 = !DILocalVariable(name: "__key", scope: !13785, file: !2311, line: 671, type: !13104)
!13787 = !DILocation(line: 0, scope: !13781)
!13788 = !DILocation(line: 669, column: 8, scope: !13781)
!13789 = !DILocation(line: 0, scope: !13785)
!13790 = !DILocation(line: 0, scope: !13112, inlinedAt: !13791)
!13791 = distinct !DILocation(line: 671, column: 2, scope: !13785)
!13792 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13791)
!13794 = !DILocation(line: 0, scope: !13121, inlinedAt: !13793)
!13795 = !DILocation(line: 672, column: 7, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13797, file: !2311, line: 672, column: 7)
!13797 = distinct !DILexicalBlock(scope: !13798, file: !2311, line: 671, column: 26)
!13798 = distinct !DILexicalBlock(scope: !13785, file: !2311, line: 671, column: 2)
!13799 = !DILocation(line: 672, column: 7, scope: !13797)
!13800 = !DILocation(line: 0, scope: !13281, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 673, column: 4, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13796, file: !2311, line: 672, column: 35)
!13803 = !DILocation(line: 266, column: 15, scope: !13281, inlinedAt: !13801)
!13804 = !DILocation(line: 266, column: 28, scope: !13281, inlinedAt: !13801)
!13805 = !DILocation(line: 0, scope: !13289, inlinedAt: !13806)
!13806 = distinct !DILocation(line: 268, column: 3, scope: !13293, inlinedAt: !13801)
!13807 = !DILocation(line: 234, column: 2, scope: !13289, inlinedAt: !13806)
!13808 = !DILocation(line: 674, column: 3, scope: !13802)
!13809 = !DILocation(line: 675, column: 3, scope: !13797)
!13810 = !DILocation(line: 676, column: 26, scope: !13797)
!13811 = !DILocation(line: 676, column: 23, scope: !13797)
!13812 = !DILocation(line: 676, column: 3, scope: !13797)
!13813 = !DILocation(line: 0, scope: !13139, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 671, column: 2, scope: !13798)
!13815 = !DILocation(line: 0, scope: !13147, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13814)
!13817 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13816)
!13818 = !DILocation(line: 679, column: 16, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13781, file: !2311, line: 679, column: 6)
!13820 = !DILocation(line: 679, column: 13, scope: !13819)
!13821 = !DILocation(line: 679, column: 6, scope: !13781)
!13822 = !DILocation(line: 680, column: 3, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13819, file: !2311, line: 679, column: 26)
!13824 = !DILocation(line: 681, column: 2, scope: !13823)
!13825 = !DILocation(line: 684, column: 1, scope: !13781)
!13826 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12778, file: !12778, line: 52, type: !13088, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13827)
!13827 = !{!13828}
!13828 = !DILocalVariable(name: "thread", arg: 1, scope: !13826, file: !12778, line: 52, type: !2206)
!13829 = !DILocation(line: 0, scope: !13826)
!13830 = !DILocation(line: 54, column: 39, scope: !13826)
!13831 = !DILocation(line: 54, column: 9, scope: !13826)
!13832 = !DILocation(line: 54, column: 2, scope: !13826)
!13833 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12384, file: !12384, line: 141, type: !13070, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13834)
!13834 = !{!13835}
!13835 = !DILocalVariable(name: "thread", arg: 1, scope: !13833, file: !12384, line: 141, type: !2206)
!13836 = !DILocation(line: 0, scope: !13833)
!13837 = !DILocation(line: 143, column: 15, scope: !13833)
!13838 = !DILocation(line: 143, column: 28, scope: !13833)
!13839 = !DILocation(line: 146, column: 1, scope: !13833)
!13840 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12384, file: !12384, line: 73, type: !2964, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!13841 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13842)
!13842 = distinct !DILocation(line: 75, column: 30, scope: !13840)
!13843 = !DILocation(line: 0, scope: !13121, inlinedAt: !13842)
!13844 = !DILocation(line: 75, column: 9, scope: !13840)
!13845 = !DILocation(line: 76, column: 1, scope: !13840)
!13846 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2311, file: !2311, line: 977, type: !6529, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13847)
!13847 = !{!13848}
!13848 = !DILocalVariable(name: "key", arg: 1, scope: !13846, file: !2311, line: 977, type: !137)
!13849 = !DILocation(line: 0, scope: !13846)
!13850 = !DILocation(line: 979, column: 6, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13846, file: !2311, line: 979, column: 6)
!13852 = !DILocation(line: 979, column: 6, scope: !13846)
!13853 = !DILocation(line: 980, column: 3, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13851, file: !2311, line: 979, column: 20)
!13855 = !DILocation(line: 981, column: 2, scope: !13854)
!13856 = !DILocation(line: 0, scope: !13147, inlinedAt: !13857)
!13857 = distinct !DILocation(line: 982, column: 3, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13851, file: !2311, line: 981, column: 9)
!13859 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13857)
!13860 = !DILocation(line: 985, column: 1, scope: !13846)
!13861 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2311, file: !2311, line: 695, type: !13070, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13862)
!13862 = !{!13863, !13864}
!13863 = !DILocalVariable(name: "thread", arg: 1, scope: !13861, file: !2311, line: 695, type: !2206)
!13864 = !DILocalVariable(name: "key", scope: !13861, file: !2311, line: 699, type: !13104)
!13865 = !DILocation(line: 0, scope: !13861)
!13866 = !DILocation(line: 0, scope: !13112, inlinedAt: !13867)
!13867 = distinct !DILocation(line: 699, column: 25, scope: !13861)
!13868 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13867)
!13870 = !DILocation(line: 0, scope: !13121, inlinedAt: !13869)
!13871 = !DILocation(line: 702, column: 7, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13861, file: !2311, line: 702, column: 6)
!13873 = !DILocation(line: 702, column: 6, scope: !13861)
!13874 = !DILocation(line: 0, scope: !13139, inlinedAt: !13875)
!13875 = distinct !DILocation(line: 703, column: 3, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13872, file: !2311, line: 702, column: 38)
!13877 = !DILocation(line: 0, scope: !13147, inlinedAt: !13878)
!13878 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13875)
!13879 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13878)
!13880 = !DILocation(line: 704, column: 3, scope: !13876)
!13881 = !DILocation(line: 707, column: 2, scope: !13861)
!13882 = !DILocation(line: 708, column: 2, scope: !13861)
!13883 = !DILocation(line: 710, column: 2, scope: !13861)
!13884 = !DILocation(line: 713, column: 1, scope: !13861)
!13885 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12384, file: !12384, line: 96, type: !13230, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13886)
!13886 = !{!13887}
!13887 = !DILocalVariable(name: "thread", arg: 1, scope: !13885, file: !12384, line: 96, type: !2206)
!13888 = !DILocation(line: 0, scope: !13885)
!13889 = !DILocation(line: 98, column: 23, scope: !13885)
!13890 = !DILocation(line: 98, column: 36, scope: !13885)
!13891 = !DILocation(line: 98, column: 57, scope: !13885)
!13892 = !DILocation(line: 98, column: 2, scope: !13885)
!13893 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12384, file: !12384, line: 148, type: !13070, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13894)
!13894 = !{!13895}
!13895 = !DILocalVariable(name: "thread", arg: 1, scope: !13893, file: !12384, line: 148, type: !2206)
!13896 = !DILocation(line: 0, scope: !13893)
!13897 = !DILocation(line: 150, column: 15, scope: !13893)
!13898 = !DILocation(line: 150, column: 28, scope: !13893)
!13899 = !DILocation(line: 153, column: 1, scope: !13893)
!13900 = distinct !DISubprogram(name: "z_pend_thread", scope: !2311, file: !2311, line: 770, type: !13901, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13907)
!13901 = !DISubroutineType(types: !13902)
!13902 = !{null, !2206, !2237, !13903}
!13903 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1560, line: 67, baseType: !13904)
!13904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1560, line: 65, size: 64, elements: !13905)
!13905 = !{!13906}
!13906 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13904, file: !1560, line: 66, baseType: !1559, size: 64)
!13907 = !{!13908, !13909, !13910, !13911, !13913}
!13908 = !DILocalVariable(name: "thread", arg: 1, scope: !13900, file: !2311, line: 770, type: !2206)
!13909 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13900, file: !2311, line: 770, type: !2237)
!13910 = !DILocalVariable(name: "timeout", arg: 3, scope: !13900, file: !2311, line: 771, type: !13903)
!13911 = !DILocalVariable(name: "__i", scope: !13912, file: !2311, line: 774, type: !13104)
!13912 = distinct !DILexicalBlock(scope: !13900, file: !2311, line: 774, column: 2)
!13913 = !DILocalVariable(name: "__key", scope: !13912, file: !2311, line: 774, type: !13104)
!13914 = !DILocation(line: 0, scope: !13900)
!13915 = !DILocation(line: 0, scope: !13912)
!13916 = !DILocation(line: 0, scope: !13112, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 774, column: 2, scope: !13912)
!13918 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !13917)
!13920 = !DILocation(line: 0, scope: !13121, inlinedAt: !13919)
!13921 = !DILocation(line: 775, column: 3, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !2311, line: 774, column: 26)
!13923 = distinct !DILexicalBlock(scope: !13912, file: !2311, line: 774, column: 2)
!13924 = !DILocation(line: 0, scope: !13139, inlinedAt: !13925)
!13925 = distinct !DILocation(line: 774, column: 2, scope: !13923)
!13926 = !DILocation(line: 0, scope: !13147, inlinedAt: !13927)
!13927 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !13925)
!13928 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !13927)
!13929 = !DILocation(line: 777, column: 1, scope: !13900)
!13930 = distinct !DISubprogram(name: "pend_locked", scope: !2311, file: !2311, line: 760, type: !13901, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13931)
!13931 = !{!13932, !13933, !13934}
!13932 = !DILocalVariable(name: "thread", arg: 1, scope: !13930, file: !2311, line: 760, type: !2206)
!13933 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13930, file: !2311, line: 760, type: !2237)
!13934 = !DILocalVariable(name: "timeout", arg: 3, scope: !13930, file: !2311, line: 761, type: !13903)
!13935 = !DILocation(line: 0, scope: !13930)
!13936 = !DILocation(line: 766, column: 2, scope: !13930)
!13937 = !DILocation(line: 767, column: 2, scope: !13930)
!13938 = !DILocation(line: 768, column: 1, scope: !13930)
!13939 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2311, file: !2311, line: 740, type: !13940, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !2206, !2237}
!13942 = !{!13943, !13944}
!13943 = !DILocalVariable(name: "thread", arg: 1, scope: !13939, file: !2311, line: 740, type: !2206)
!13944 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13939, file: !2311, line: 740, type: !2237)
!13945 = !DILocation(line: 0, scope: !13939)
!13946 = !DILocation(line: 742, column: 2, scope: !13939)
!13947 = !DILocation(line: 743, column: 2, scope: !13939)
!13948 = !DILocation(line: 747, column: 13, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13939, file: !2311, line: 747, column: 6)
!13950 = !DILocation(line: 747, column: 6, scope: !13939)
!13951 = !DILocation(line: 748, column: 16, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13949, file: !2311, line: 747, column: 22)
!13953 = !DILocation(line: 748, column: 26, scope: !13952)
!13954 = !DILocation(line: 749, column: 28, scope: !13952)
!13955 = !DILocation(line: 0, scope: !13312, inlinedAt: !13956)
!13956 = distinct !DILocation(line: 749, column: 3, scope: !13952)
!13957 = !DILocation(line: 188, column: 2, scope: !13322, inlinedAt: !13956)
!13958 = !DILocation(line: 188, column: 2, scope: !13324, inlinedAt: !13956)
!13959 = !DILocation(line: 0, scope: !13322, inlinedAt: !13956)
!13960 = !DILocation(line: 189, column: 7, scope: !13327, inlinedAt: !13956)
!13961 = !DILocation(line: 189, column: 35, scope: !13327, inlinedAt: !13956)
!13962 = !DILocation(line: 189, column: 7, scope: !13328, inlinedAt: !13956)
!13963 = !DILocation(line: 191, column: 21, scope: !13332, inlinedAt: !13956)
!13964 = !DILocation(line: 190, column: 4, scope: !13332, inlinedAt: !13956)
!13965 = !DILocation(line: 192, column: 4, scope: !13332, inlinedAt: !13956)
!13966 = distinct !{!13966, !13957, !13967}
!13967 = !DILocation(line: 194, column: 2, scope: !13322, inlinedAt: !13956)
!13968 = !DILocation(line: 196, column: 37, scope: !13312, inlinedAt: !13956)
!13969 = !DILocation(line: 196, column: 2, scope: !13312, inlinedAt: !13956)
!13970 = !DILocation(line: 197, column: 1, scope: !13312, inlinedAt: !13956)
!13971 = !DILocation(line: 751, column: 1, scope: !13939)
!13972 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2311, file: !2311, line: 753, type: !13973, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13975)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{null, !2206, !13903}
!13975 = !{!13976, !13977}
!13976 = !DILocalVariable(name: "thread", arg: 1, scope: !13972, file: !2311, line: 753, type: !2206)
!13977 = !DILocalVariable(name: "timeout", arg: 2, scope: !13972, file: !2311, line: 753, type: !13903)
!13978 = !DILocation(line: 0, scope: !13972)
!13979 = !DILocation(line: 755, column: 7, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13972, file: !2311, line: 755, column: 6)
!13981 = !DILocation(line: 755, column: 6, scope: !13972)
!13982 = !DILocation(line: 756, column: 3, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13980, file: !2311, line: 755, column: 41)
!13984 = !DILocation(line: 757, column: 2, scope: !13983)
!13985 = !DILocation(line: 758, column: 1, scope: !13972)
!13986 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12778, file: !12778, line: 47, type: !13973, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13987)
!13987 = !{!13988, !13989}
!13988 = !DILocalVariable(name: "thread", arg: 1, scope: !13986, file: !12778, line: 47, type: !2206)
!13989 = !DILocalVariable(name: "ticks", arg: 2, scope: !13986, file: !12778, line: 47, type: !13903)
!13990 = !DILocation(line: 0, scope: !13986)
!13991 = !DILocation(line: 49, column: 30, scope: !13986)
!13992 = !DILocation(line: 49, column: 2, scope: !13986)
!13993 = !DILocation(line: 50, column: 1, scope: !13986)
!13994 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2311, file: !2311, line: 795, type: !2263, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !13995)
!13995 = !{!13996, !13997, !13998, !14000, !14001}
!13996 = !DILocalVariable(name: "timeout", arg: 1, scope: !13994, file: !2311, line: 795, type: !2265)
!13997 = !DILocalVariable(name: "thread", scope: !13994, file: !2311, line: 797, type: !2206)
!13998 = !DILocalVariable(name: "__i", scope: !13999, file: !2311, line: 800, type: !13104)
!13999 = distinct !DILexicalBlock(scope: !13994, file: !2311, line: 800, column: 2)
!14000 = !DILocalVariable(name: "__key", scope: !13999, file: !2311, line: 800, type: !13104)
!14001 = !DILocalVariable(name: "killed", scope: !14002, file: !2311, line: 801, type: !211)
!14002 = distinct !DILexicalBlock(scope: !14003, file: !2311, line: 800, column: 26)
!14003 = distinct !DILexicalBlock(scope: !13999, file: !2311, line: 800, column: 2)
!14004 = !DILocation(line: 0, scope: !13994)
!14005 = !DILocation(line: 797, column: 28, scope: !13994)
!14006 = !DILocation(line: 0, scope: !13999)
!14007 = !DILocation(line: 0, scope: !13112, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 800, column: 2, scope: !13999)
!14009 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14010)
!14010 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14008)
!14011 = !DILocation(line: 0, scope: !13121, inlinedAt: !14010)
!14012 = !DILocation(line: 801, column: 27, scope: !14002)
!14013 = !DILocation(line: 801, column: 32, scope: !14002)
!14014 = !DILocation(line: 801, column: 61, scope: !14002)
!14015 = !DILocation(line: 0, scope: !14002)
!14016 = !DILocation(line: 804, column: 7, scope: !14002)
!14017 = !DILocation(line: 805, column: 21, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14019, file: !2311, line: 805, column: 8)
!14019 = distinct !DILexicalBlock(scope: !14020, file: !2311, line: 804, column: 16)
!14020 = distinct !DILexicalBlock(scope: !14002, file: !2311, line: 804, column: 7)
!14021 = !DILocation(line: 805, column: 31, scope: !14018)
!14022 = !DILocation(line: 805, column: 8, scope: !14019)
!14023 = !DILocation(line: 806, column: 5, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14018, file: !2311, line: 805, column: 40)
!14025 = !DILocation(line: 807, column: 4, scope: !14024)
!14026 = !DILocation(line: 808, column: 4, scope: !14019)
!14027 = !DILocation(line: 809, column: 4, scope: !14019)
!14028 = !DILocation(line: 810, column: 4, scope: !14019)
!14029 = !DILocation(line: 811, column: 3, scope: !14019)
!14030 = !DILocation(line: 0, scope: !13139, inlinedAt: !14031)
!14031 = distinct !DILocation(line: 800, column: 2, scope: !14003)
!14032 = !DILocation(line: 0, scope: !13147, inlinedAt: !14033)
!14033 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14031)
!14034 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14033)
!14035 = !DILocation(line: 813, column: 1, scope: !13994)
!14036 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2311, file: !2311, line: 779, type: !13070, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14037)
!14037 = !{!14038}
!14038 = !DILocalVariable(name: "thread", arg: 1, scope: !14036, file: !2311, line: 779, type: !2206)
!14039 = !DILocation(line: 0, scope: !14036)
!14040 = !DILocation(line: 781, column: 2, scope: !14036)
!14041 = !DILocation(line: 782, column: 2, scope: !14036)
!14042 = !DILocation(line: 783, column: 15, scope: !14036)
!14043 = !DILocation(line: 783, column: 25, scope: !14036)
!14044 = !DILocation(line: 784, column: 1, scope: !14036)
!14045 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12384, file: !12384, line: 165, type: !13070, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14046)
!14046 = !{!14047}
!14047 = !DILocalVariable(name: "thread", arg: 1, scope: !14045, file: !12384, line: 165, type: !2206)
!14048 = !DILocation(line: 0, scope: !14045)
!14049 = !DILocation(line: 167, column: 15, scope: !14045)
!14050 = !DILocation(line: 167, column: 28, scope: !14045)
!14051 = !DILocation(line: 168, column: 1, scope: !14045)
!14052 = distinct !DISubprogram(name: "unready_thread", scope: !2311, file: !2311, line: 731, type: !13070, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14053)
!14053 = !{!14054}
!14054 = !DILocalVariable(name: "thread", arg: 1, scope: !14052, file: !2311, line: 731, type: !2206)
!14055 = !DILocation(line: 0, scope: !14052)
!14056 = !DILocation(line: 733, column: 6, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14052, file: !2311, line: 733, column: 6)
!14058 = !DILocation(line: 733, column: 6, scope: !14052)
!14059 = !DILocation(line: 0, scope: !13281, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 734, column: 3, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14057, file: !2311, line: 733, column: 34)
!14062 = !DILocation(line: 266, column: 15, scope: !13281, inlinedAt: !14060)
!14063 = !DILocation(line: 266, column: 28, scope: !13281, inlinedAt: !14060)
!14064 = !DILocation(line: 0, scope: !13289, inlinedAt: !14065)
!14065 = distinct !DILocation(line: 268, column: 3, scope: !13293, inlinedAt: !14060)
!14066 = !DILocation(line: 234, column: 2, scope: !13289, inlinedAt: !14065)
!14067 = !DILocation(line: 735, column: 2, scope: !14061)
!14068 = !DILocation(line: 736, column: 25, scope: !14052)
!14069 = !DILocation(line: 736, column: 22, scope: !14052)
!14070 = !DILocation(line: 736, column: 2, scope: !14052)
!14071 = !DILocation(line: 737, column: 1, scope: !14052)
!14072 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12384, file: !12384, line: 160, type: !13070, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14073)
!14073 = !{!14074}
!14074 = !DILocalVariable(name: "thread", arg: 1, scope: !14072, file: !12384, line: 160, type: !2206)
!14075 = !DILocation(line: 0, scope: !14072)
!14076 = !DILocation(line: 162, column: 15, scope: !14072)
!14077 = !DILocation(line: 162, column: 28, scope: !14072)
!14078 = !DILocation(line: 163, column: 1, scope: !14072)
!14079 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2311, file: !2311, line: 786, type: !13070, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14080)
!14080 = !{!14081, !14082, !14084}
!14081 = !DILocalVariable(name: "thread", arg: 1, scope: !14079, file: !2311, line: 786, type: !2206)
!14082 = !DILocalVariable(name: "__i", scope: !14083, file: !2311, line: 788, type: !13104)
!14083 = distinct !DILexicalBlock(scope: !14079, file: !2311, line: 788, column: 2)
!14084 = !DILocalVariable(name: "__key", scope: !14083, file: !2311, line: 788, type: !13104)
!14085 = !DILocation(line: 0, scope: !14079)
!14086 = !DILocation(line: 0, scope: !14083)
!14087 = !DILocation(line: 0, scope: !13112, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 788, column: 2, scope: !14083)
!14089 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14088)
!14091 = !DILocation(line: 0, scope: !13121, inlinedAt: !14090)
!14092 = !DILocation(line: 789, column: 3, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14094, file: !2311, line: 788, column: 26)
!14094 = distinct !DILexicalBlock(scope: !14083, file: !2311, line: 788, column: 2)
!14095 = !DILocation(line: 0, scope: !13139, inlinedAt: !14096)
!14096 = distinct !DILocation(line: 788, column: 2, scope: !14094)
!14097 = !DILocation(line: 0, scope: !13147, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14096)
!14099 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14098)
!14100 = !DILocation(line: 791, column: 1, scope: !14079)
!14101 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2311, file: !2311, line: 816, type: !14102, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14104)
!14102 = !DISubroutineType(types: !14103)
!14103 = !{!103, !137, !2237, !13903}
!14104 = !{!14105, !14106, !14107, !14108, !14109, !14111}
!14105 = !DILocalVariable(name: "key", arg: 1, scope: !14101, file: !2311, line: 816, type: !137)
!14106 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14101, file: !2311, line: 816, type: !2237)
!14107 = !DILocalVariable(name: "timeout", arg: 3, scope: !14101, file: !2311, line: 816, type: !13903)
!14108 = !DILocalVariable(name: "ret", scope: !14101, file: !2311, line: 828, type: !103)
!14109 = !DILocalVariable(name: "__i", scope: !14110, file: !2311, line: 829, type: !13104)
!14110 = distinct !DILexicalBlock(scope: !14101, file: !2311, line: 829, column: 2)
!14111 = !DILocalVariable(name: "__key", scope: !14110, file: !2311, line: 829, type: !13104)
!14112 = !DILocation(line: 0, scope: !14101)
!14113 = !DILocation(line: 823, column: 14, scope: !14101)
!14114 = !DILocation(line: 823, column: 2, scope: !14101)
!14115 = !DILocation(line: 826, column: 20, scope: !14101)
!14116 = !DILocation(line: 826, column: 18, scope: !14101)
!14117 = !DILocation(line: 828, column: 12, scope: !14101)
!14118 = !DILocation(line: 0, scope: !14110)
!14119 = !DILocation(line: 0, scope: !13112, inlinedAt: !14120)
!14120 = distinct !DILocation(line: 829, column: 2, scope: !14110)
!14121 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14122)
!14122 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14120)
!14123 = !DILocation(line: 0, scope: !13121, inlinedAt: !14122)
!14124 = !DILocation(line: 830, column: 7, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14126, file: !2311, line: 830, column: 7)
!14126 = distinct !DILexicalBlock(scope: !14127, file: !2311, line: 829, column: 26)
!14127 = distinct !DILexicalBlock(scope: !14110, file: !2311, line: 829, column: 2)
!14128 = !DILocation(line: 830, column: 26, scope: !14125)
!14129 = !DILocation(line: 830, column: 23, scope: !14125)
!14130 = !DILocation(line: 830, column: 7, scope: !14126)
!14131 = !DILocation(line: 831, column: 20, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14125, file: !2311, line: 830, column: 36)
!14133 = !DILocation(line: 832, column: 3, scope: !14132)
!14134 = !DILocation(line: 0, scope: !13139, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 829, column: 2, scope: !14127)
!14136 = !DILocation(line: 0, scope: !13147, inlinedAt: !14137)
!14137 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14135)
!14138 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14137)
!14139 = !DILocation(line: 834, column: 2, scope: !14101)
!14140 = distinct !DISubprogram(name: "z_pend_curr", scope: !2311, file: !2311, line: 840, type: !14141, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14143)
!14141 = !DISubroutineType(types: !14142)
!14142 = !{!103, !13115, !13104, !2237, !13903}
!14143 = !{!14144, !14145, !14146, !14147}
!14144 = !DILocalVariable(name: "lock", arg: 1, scope: !14140, file: !2311, line: 840, type: !13115)
!14145 = !DILocalVariable(name: "key", arg: 2, scope: !14140, file: !2311, line: 840, type: !13104)
!14146 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14140, file: !2311, line: 841, type: !2237)
!14147 = !DILocalVariable(name: "timeout", arg: 4, scope: !14140, file: !2311, line: 841, type: !13903)
!14148 = !DILocation(line: 0, scope: !14140)
!14149 = !DILocation(line: 844, column: 20, scope: !14140)
!14150 = !DILocation(line: 844, column: 18, scope: !14140)
!14151 = !DILocation(line: 0, scope: !13112, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 856, column: 9, scope: !14140)
!14153 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14154)
!14154 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14152)
!14155 = !DILocation(line: 0, scope: !13121, inlinedAt: !14154)
!14156 = !DILocation(line: 857, column: 14, scope: !14140)
!14157 = !DILocation(line: 857, column: 2, scope: !14140)
!14158 = !DILocation(line: 0, scope: !13723, inlinedAt: !14159)
!14159 = distinct !DILocation(line: 859, column: 9, scope: !14140)
!14160 = !DILocation(line: 196, column: 9, scope: !13723, inlinedAt: !14159)
!14161 = !DILocation(line: 859, column: 2, scope: !14140)
!14162 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2311, file: !2311, line: 862, type: !14163, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14165)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{!2206, !2237}
!14165 = !{!14166, !14167, !14168, !14170}
!14166 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14162, file: !2311, line: 862, type: !2237)
!14167 = !DILocalVariable(name: "thread", scope: !14162, file: !2311, line: 864, type: !2206)
!14168 = !DILocalVariable(name: "__i", scope: !14169, file: !2311, line: 866, type: !13104)
!14169 = distinct !DILexicalBlock(scope: !14162, file: !2311, line: 866, column: 2)
!14170 = !DILocalVariable(name: "__key", scope: !14169, file: !2311, line: 866, type: !13104)
!14171 = !DILocation(line: 0, scope: !14162)
!14172 = !DILocation(line: 0, scope: !14169)
!14173 = !DILocation(line: 0, scope: !13112, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 866, column: 2, scope: !14169)
!14175 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14176)
!14176 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14174)
!14177 = !DILocation(line: 0, scope: !13121, inlinedAt: !14176)
!14178 = !DILocation(line: 867, column: 12, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !2311, line: 866, column: 26)
!14180 = distinct !DILexicalBlock(scope: !14169, file: !2311, line: 866, column: 2)
!14181 = !DILocation(line: 869, column: 14, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14179, file: !2311, line: 869, column: 7)
!14183 = !DILocation(line: 869, column: 7, scope: !14179)
!14184 = !DILocation(line: 870, column: 4, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14182, file: !2311, line: 869, column: 23)
!14186 = !DILocation(line: 871, column: 3, scope: !14185)
!14187 = !DILocation(line: 0, scope: !13139, inlinedAt: !14188)
!14188 = distinct !DILocation(line: 866, column: 2, scope: !14180)
!14189 = !DILocation(line: 0, scope: !13147, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14188)
!14191 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14190)
!14192 = !DILocation(line: 874, column: 2, scope: !14162)
!14193 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2311, file: !2311, line: 877, type: !14163, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14194)
!14194 = !{!14195, !14196, !14197, !14199}
!14195 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14193, file: !2311, line: 877, type: !2237)
!14196 = !DILocalVariable(name: "thread", scope: !14193, file: !2311, line: 879, type: !2206)
!14197 = !DILocalVariable(name: "__i", scope: !14198, file: !2311, line: 881, type: !13104)
!14198 = distinct !DILexicalBlock(scope: !14193, file: !2311, line: 881, column: 2)
!14199 = !DILocalVariable(name: "__key", scope: !14198, file: !2311, line: 881, type: !13104)
!14200 = !DILocation(line: 0, scope: !14193)
!14201 = !DILocation(line: 0, scope: !14198)
!14202 = !DILocation(line: 0, scope: !13112, inlinedAt: !14203)
!14203 = distinct !DILocation(line: 881, column: 2, scope: !14198)
!14204 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14205)
!14205 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14203)
!14206 = !DILocation(line: 0, scope: !13121, inlinedAt: !14205)
!14207 = !DILocation(line: 882, column: 12, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !2311, line: 881, column: 26)
!14209 = distinct !DILexicalBlock(scope: !14198, file: !2311, line: 881, column: 2)
!14210 = !DILocation(line: 884, column: 14, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14208, file: !2311, line: 884, column: 7)
!14212 = !DILocation(line: 884, column: 7, scope: !14208)
!14213 = !DILocation(line: 885, column: 4, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14211, file: !2311, line: 884, column: 23)
!14215 = !DILocation(line: 886, column: 10, scope: !14214)
!14216 = !DILocation(line: 887, column: 3, scope: !14214)
!14217 = !DILocation(line: 0, scope: !13139, inlinedAt: !14218)
!14218 = distinct !DILocation(line: 881, column: 2, scope: !14209)
!14219 = !DILocation(line: 0, scope: !13147, inlinedAt: !14220)
!14220 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14218)
!14221 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14220)
!14222 = !DILocation(line: 890, column: 2, scope: !14193)
!14223 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2311, file: !2311, line: 893, type: !13070, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14224)
!14224 = !{!14225}
!14225 = !DILocalVariable(name: "thread", arg: 1, scope: !14223, file: !2311, line: 893, type: !2206)
!14226 = !DILocation(line: 0, scope: !14223)
!14227 = !DILocation(line: 0, scope: !14079, inlinedAt: !14228)
!14228 = distinct !DILocation(line: 895, column: 2, scope: !14223)
!14229 = !DILocation(line: 0, scope: !14083, inlinedAt: !14228)
!14230 = !DILocation(line: 0, scope: !13112, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 788, column: 2, scope: !14083, inlinedAt: !14228)
!14232 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14231)
!14234 = !DILocation(line: 0, scope: !13121, inlinedAt: !14233)
!14235 = !DILocation(line: 789, column: 3, scope: !14093, inlinedAt: !14228)
!14236 = !DILocation(line: 0, scope: !13139, inlinedAt: !14237)
!14237 = distinct !DILocation(line: 788, column: 2, scope: !14094, inlinedAt: !14228)
!14238 = !DILocation(line: 0, scope: !13147, inlinedAt: !14239)
!14239 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14237)
!14240 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14239)
!14241 = !DILocation(line: 896, column: 8, scope: !14223)
!14242 = !DILocation(line: 897, column: 1, scope: !14223)
!14243 = distinct !DISubprogram(name: "z_set_prio", scope: !2311, file: !2311, line: 902, type: !13432, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14244)
!14244 = !{!14245, !14246, !14247, !14248, !14250}
!14245 = !DILocalVariable(name: "thread", arg: 1, scope: !14243, file: !2311, line: 902, type: !2206)
!14246 = !DILocalVariable(name: "prio", arg: 2, scope: !14243, file: !2311, line: 902, type: !103)
!14247 = !DILocalVariable(name: "need_sched", scope: !14243, file: !2311, line: 904, type: !211)
!14248 = !DILocalVariable(name: "__i", scope: !14249, file: !2311, line: 906, type: !13104)
!14249 = distinct !DILexicalBlock(scope: !14243, file: !2311, line: 906, column: 2)
!14250 = !DILocalVariable(name: "__key", scope: !14249, file: !2311, line: 906, type: !13104)
!14251 = !DILocation(line: 0, scope: !14243)
!14252 = !DILocation(line: 0, scope: !14249)
!14253 = !DILocation(line: 0, scope: !13112, inlinedAt: !14254)
!14254 = distinct !DILocation(line: 906, column: 2, scope: !14249)
!14255 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14256)
!14256 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14254)
!14257 = !DILocation(line: 0, scope: !13121, inlinedAt: !14256)
!14258 = !DILocation(line: 907, column: 16, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14260, file: !2311, line: 906, column: 26)
!14260 = distinct !DILexicalBlock(scope: !14249, file: !2311, line: 906, column: 2)
!14261 = !DILocation(line: 909, column: 7, scope: !14259)
!14262 = !DILocation(line: 0, scope: !13281, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 912, column: 5, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !2311, line: 911, column: 63)
!14265 = distinct !DILexicalBlock(scope: !14266, file: !2311, line: 911, column: 8)
!14266 = distinct !DILexicalBlock(scope: !14267, file: !2311, line: 909, column: 19)
!14267 = distinct !DILexicalBlock(scope: !14259, file: !2311, line: 909, column: 7)
!14268 = !DILocation(line: 266, column: 28, scope: !13281, inlinedAt: !14263)
!14269 = !DILocation(line: 0, scope: !13289, inlinedAt: !14270)
!14270 = distinct !DILocation(line: 268, column: 3, scope: !13293, inlinedAt: !14263)
!14271 = !DILocation(line: 234, column: 2, scope: !13289, inlinedAt: !14270)
!14272 = !DILocation(line: 913, column: 23, scope: !14264)
!14273 = !DILocation(line: 0, scope: !13298, inlinedAt: !14274)
!14274 = distinct !DILocation(line: 914, column: 5, scope: !14264)
!14275 = !DILocation(line: 252, column: 28, scope: !13298, inlinedAt: !14274)
!14276 = !DILocation(line: 0, scope: !13305, inlinedAt: !14277)
!14277 = distinct !DILocation(line: 254, column: 3, scope: !13309, inlinedAt: !14274)
!14278 = !DILocation(line: 0, scope: !13312, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 229, column: 2, scope: !13305, inlinedAt: !14277)
!14280 = !DILocation(line: 188, column: 2, scope: !13322, inlinedAt: !14279)
!14281 = !DILocation(line: 188, column: 2, scope: !13324, inlinedAt: !14279)
!14282 = !DILocation(line: 0, scope: !13322, inlinedAt: !14279)
!14283 = !DILocation(line: 189, column: 7, scope: !13327, inlinedAt: !14279)
!14284 = !DILocation(line: 189, column: 35, scope: !13327, inlinedAt: !14279)
!14285 = !DILocation(line: 189, column: 7, scope: !13328, inlinedAt: !14279)
!14286 = !DILocation(line: 190, column: 4, scope: !13332, inlinedAt: !14279)
!14287 = !DILocation(line: 192, column: 4, scope: !13332, inlinedAt: !14279)
!14288 = distinct !{!14288, !14280, !14289}
!14289 = !DILocation(line: 194, column: 2, scope: !13322, inlinedAt: !14279)
!14290 = !DILocation(line: 196, column: 2, scope: !13312, inlinedAt: !14279)
!14291 = !DILocation(line: 197, column: 1, scope: !13312, inlinedAt: !14279)
!14292 = !DILocation(line: 918, column: 4, scope: !14266)
!14293 = !DILocation(line: 919, column: 3, scope: !14266)
!14294 = !DILocation(line: 920, column: 22, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14267, file: !2311, line: 919, column: 10)
!14296 = !DILocation(line: 0, scope: !13139, inlinedAt: !14297)
!14297 = distinct !DILocation(line: 906, column: 2, scope: !14260)
!14298 = !DILocation(line: 0, scope: !13147, inlinedAt: !14299)
!14299 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14297)
!14300 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14299)
!14301 = !DILocation(line: 926, column: 2, scope: !14243)
!14302 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2311, file: !2311, line: 929, type: !14303, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14305)
!14303 = !DISubroutineType(types: !14304)
!14304 = !{null, !2206, !103}
!14305 = !{!14306, !14307, !14308}
!14306 = !DILocalVariable(name: "thread", arg: 1, scope: !14302, file: !2311, line: 929, type: !2206)
!14307 = !DILocalVariable(name: "prio", arg: 2, scope: !14302, file: !2311, line: 929, type: !103)
!14308 = !DILocalVariable(name: "need_sched", scope: !14302, file: !2311, line: 931, type: !211)
!14309 = !DILocation(line: 0, scope: !14302)
!14310 = !DILocation(line: 931, column: 20, scope: !14302)
!14311 = !DILocation(line: 935, column: 17, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14302, file: !2311, line: 935, column: 6)
!14313 = !DILocation(line: 935, column: 20, scope: !14312)
!14314 = !DILocation(line: 935, column: 35, scope: !14312)
!14315 = !DILocation(line: 935, column: 48, scope: !14312)
!14316 = !DILocation(line: 935, column: 6, scope: !14302)
!14317 = !DILocation(line: 936, column: 3, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14312, file: !2311, line: 935, column: 55)
!14319 = !DILocation(line: 937, column: 2, scope: !14318)
!14320 = !DILocation(line: 938, column: 1, scope: !14302)
!14321 = distinct !DISubprogram(name: "k_sched_lock", scope: !2311, file: !2311, line: 987, type: !2964, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14322)
!14322 = !{!14323, !14325}
!14323 = !DILocalVariable(name: "__i", scope: !14324, file: !2311, line: 989, type: !13104)
!14324 = distinct !DILexicalBlock(scope: !14321, file: !2311, line: 989, column: 2)
!14325 = !DILocalVariable(name: "__key", scope: !14324, file: !2311, line: 989, type: !13104)
!14326 = !DILocation(line: 0, scope: !14324)
!14327 = !DILocation(line: 0, scope: !13112, inlinedAt: !14328)
!14328 = distinct !DILocation(line: 989, column: 2, scope: !14324)
!14329 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14330)
!14330 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14328)
!14331 = !DILocation(line: 0, scope: !13121, inlinedAt: !14330)
!14332 = !DILocation(line: 992, column: 3, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14334, file: !2311, line: 989, column: 26)
!14334 = distinct !DILexicalBlock(scope: !14324, file: !2311, line: 989, column: 2)
!14335 = !DILocation(line: 0, scope: !13139, inlinedAt: !14336)
!14336 = distinct !DILocation(line: 989, column: 2, scope: !14334)
!14337 = !DILocation(line: 0, scope: !13147, inlinedAt: !14338)
!14338 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14336)
!14339 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14338)
!14340 = !DILocation(line: 994, column: 1, scope: !14321)
!14341 = distinct !DISubprogram(name: "z_sched_lock", scope: !12384, file: !12384, line: 251, type: !2964, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14342 = !DILocation(line: 256, column: 4, scope: !14341)
!14343 = !DILocation(line: 256, column: 19, scope: !14341)
!14344 = !DILocation(line: 256, column: 2, scope: !14341)
!14345 = !DILocation(line: 258, column: 2, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14341, file: !12384, line: 258, column: 2)
!14347 = !{i64 2155562962}
!14348 = !DILocation(line: 259, column: 1, scope: !14341)
!14349 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2311, file: !2311, line: 996, type: !2964, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14350)
!14350 = !{!14351, !14353}
!14351 = !DILocalVariable(name: "__i", scope: !14352, file: !2311, line: 998, type: !13104)
!14352 = distinct !DILexicalBlock(scope: !14349, file: !2311, line: 998, column: 2)
!14353 = !DILocalVariable(name: "__key", scope: !14352, file: !2311, line: 998, type: !13104)
!14354 = !DILocation(line: 0, scope: !14352)
!14355 = !DILocation(line: 0, scope: !13112, inlinedAt: !14356)
!14356 = distinct !DILocation(line: 998, column: 2, scope: !14352)
!14357 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14358)
!14358 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14356)
!14359 = !DILocation(line: 0, scope: !13121, inlinedAt: !14358)
!14360 = !DILocation(line: 1002, column: 5, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !2311, line: 998, column: 26)
!14362 = distinct !DILexicalBlock(scope: !14352, file: !2311, line: 998, column: 2)
!14363 = !DILocation(line: 1002, column: 20, scope: !14361)
!14364 = !DILocation(line: 1002, column: 3, scope: !14361)
!14365 = !DILocation(line: 1003, column: 3, scope: !14361)
!14366 = !DILocation(line: 0, scope: !13139, inlinedAt: !14367)
!14367 = distinct !DILocation(line: 998, column: 2, scope: !14362)
!14368 = !DILocation(line: 0, scope: !13147, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14367)
!14370 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14369)
!14371 = !DILocation(line: 1011, column: 2, scope: !14349)
!14372 = !DILocation(line: 1012, column: 1, scope: !14349)
!14373 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2311, file: !2311, line: 1014, type: !13420, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14374 = !DILocation(line: 1028, column: 25, scope: !14373)
!14375 = !DILocation(line: 1028, column: 2, scope: !14373)
!14376 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2311, file: !2311, line: 1155, type: !14377, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14379)
!14377 = !DISubroutineType(types: !14378)
!14378 = !{!211, !2235, !2235}
!14379 = !{!14380, !14381, !14382, !14383, !14384}
!14380 = !DILocalVariable(name: "a", arg: 1, scope: !14376, file: !2311, line: 1155, type: !2235)
!14381 = !DILocalVariable(name: "b", arg: 2, scope: !14376, file: !2311, line: 1155, type: !2235)
!14382 = !DILocalVariable(name: "thread_a", scope: !14376, file: !2311, line: 1157, type: !2206)
!14383 = !DILocalVariable(name: "thread_b", scope: !14376, file: !2311, line: 1157, type: !2206)
!14384 = !DILocalVariable(name: "cmp", scope: !14376, file: !2311, line: 1158, type: !643)
!14385 = !DILocation(line: 0, scope: !14376)
!14386 = !DILocation(line: 1160, column: 13, scope: !14376)
!14387 = !DILocation(line: 1161, column: 13, scope: !14376)
!14388 = !DILocation(line: 1163, column: 8, scope: !14376)
!14389 = !DILocation(line: 1165, column: 10, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14376, file: !2311, line: 1165, column: 6)
!14391 = !DILocation(line: 1165, column: 6, scope: !14376)
!14392 = !DILocation(line: 1167, column: 17, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14390, file: !2311, line: 1167, column: 13)
!14394 = !DILocation(line: 1167, column: 13, scope: !14390)
!14395 = !DILocation(line: 1170, column: 25, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14393, file: !2311, line: 1169, column: 9)
!14397 = !DILocation(line: 1170, column: 52, scope: !14396)
!14398 = !DILocation(line: 1170, column: 35, scope: !14396)
!14399 = !DILocation(line: 1170, column: 3, scope: !14396)
!14400 = !DILocation(line: 0, scope: !14390)
!14401 = !DILocation(line: 1173, column: 1, scope: !14376)
!14402 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2311, file: !2311, line: 1175, type: !14403, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14418)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{null, !14405, !2206}
!14405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14406, size: 32)
!14406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14407, line: 37, size: 128, elements: !14408)
!14407 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14408 = !{!14409, !14417}
!14409 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14406, file: !14407, line: 38, baseType: !14410, size: 96)
!14410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !289, line: 83, size: 96, elements: !14411)
!14411 = !{!14412, !14413, !14416}
!14412 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14410, file: !289, line: 84, baseType: !2235, size: 32)
!14413 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14410, file: !289, line: 85, baseType: !14414, size: 32, offset: 32)
!14414 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !289, line: 81, baseType: !14415)
!14415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14377, size: 32)
!14416 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14410, file: !289, line: 86, baseType: !103, size: 32, offset: 64)
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14406, file: !14407, line: 39, baseType: !103, size: 32, offset: 96)
!14418 = !{!14419, !14420, !14421, !14422, !14431}
!14419 = !DILocalVariable(name: "pq", arg: 1, scope: !14402, file: !2311, line: 1175, type: !14405)
!14420 = !DILocalVariable(name: "thread", arg: 2, scope: !14402, file: !2311, line: 1175, type: !2206)
!14421 = !DILocalVariable(name: "t", scope: !14402, file: !2311, line: 1177, type: !2206)
!14422 = !DILocalVariable(name: "__f", scope: !14423, file: !2311, line: 1190, type: !14426)
!14423 = distinct !DILexicalBlock(scope: !14424, file: !2311, line: 1190, column: 3)
!14424 = distinct !DILexicalBlock(scope: !14425, file: !2311, line: 1189, column: 27)
!14425 = distinct !DILexicalBlock(scope: !14402, file: !2311, line: 1189, column: 6)
!14426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !289, line: 155, size: 96, elements: !14427)
!14427 = !{!14428, !14429, !14430}
!14428 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14426, file: !289, line: 156, baseType: !2306, size: 32)
!14429 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14426, file: !289, line: 157, baseType: !1856, size: 32, offset: 32)
!14430 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14426, file: !289, line: 158, baseType: !643, size: 32, offset: 64)
!14431 = !DILocalVariable(name: "n", scope: !14432, file: !2311, line: 1190, type: !2235)
!14432 = distinct !DILexicalBlock(scope: !14433, file: !2311, line: 1190, column: 3)
!14433 = distinct !DILexicalBlock(scope: !14423, file: !2311, line: 1190, column: 3)
!14434 = !DILocation(line: 0, scope: !14402)
!14435 = !DILocation(line: 1181, column: 31, scope: !14402)
!14436 = !DILocation(line: 1181, column: 45, scope: !14402)
!14437 = !DILocation(line: 1181, column: 15, scope: !14402)
!14438 = !DILocation(line: 1181, column: 25, scope: !14402)
!14439 = !DILocation(line: 1189, column: 11, scope: !14425)
!14440 = !DILocation(line: 1189, column: 7, scope: !14425)
!14441 = !DILocation(line: 1189, column: 6, scope: !14402)
!14442 = !DILocation(line: 1190, column: 3, scope: !14423)
!14443 = !DILocation(line: 1190, column: 3, scope: !14432)
!14444 = !DILocation(line: 0, scope: !14432)
!14445 = !DILocation(line: 1190, column: 3, scope: !14433)
!14446 = !DILocation(line: 1193, column: 2, scope: !14424)
!14447 = !DILocation(line: 1191, column: 42, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14433, file: !2311, line: 1190, column: 54)
!14449 = !DILocation(line: 1191, column: 12, scope: !14448)
!14450 = !DILocation(line: 1191, column: 22, scope: !14448)
!14451 = distinct !{!14451, !14442, !14452}
!14452 = !DILocation(line: 1192, column: 3, scope: !14423)
!14453 = !DILocation(line: 1195, column: 17, scope: !14402)
!14454 = !DILocation(line: 1195, column: 37, scope: !14402)
!14455 = !DILocation(line: 1195, column: 2, scope: !14402)
!14456 = !DILocation(line: 1196, column: 1, scope: !14402)
!14457 = !DISubprogram(name: "z_rb_foreach_next", scope: !289, file: !289, line: 176, type: !14458, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14458 = !DISubroutineType(types: !14459)
!14459 = !{!2235, !14460, !14461}
!14460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14410, size: 32)
!14461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14426, size: 32)
!14462 = !DISubprogram(name: "rb_insert", scope: !289, file: !289, line: 105, type: !14463, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{null, !14460, !2235}
!14465 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2311, file: !2311, line: 1198, type: !14403, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14466)
!14466 = !{!14467, !14468}
!14467 = !DILocalVariable(name: "pq", arg: 1, scope: !14465, file: !2311, line: 1198, type: !14405)
!14468 = !DILocalVariable(name: "thread", arg: 2, scope: !14465, file: !2311, line: 1198, type: !2206)
!14469 = !DILocation(line: 0, scope: !14465)
!14470 = !DILocation(line: 1202, column: 17, scope: !14465)
!14471 = !DILocation(line: 1202, column: 37, scope: !14465)
!14472 = !DILocation(line: 1202, column: 2, scope: !14465)
!14473 = !DILocation(line: 1204, column: 16, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14465, file: !2311, line: 1204, column: 6)
!14475 = !DILocation(line: 1204, column: 7, scope: !14474)
!14476 = !DILocation(line: 1204, column: 6, scope: !14465)
!14477 = !DILocation(line: 1205, column: 7, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14474, file: !2311, line: 1204, column: 22)
!14479 = !DILocation(line: 1205, column: 22, scope: !14478)
!14480 = !DILocation(line: 1206, column: 2, scope: !14478)
!14481 = !DILocation(line: 1207, column: 1, scope: !14465)
!14482 = !DISubprogram(name: "rb_remove", scope: !289, file: !289, line: 110, type: !14463, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14483 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2311, file: !2311, line: 1209, type: !14484, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14486)
!14484 = !DISubroutineType(types: !14485)
!14485 = !{!2206, !14405}
!14486 = !{!14487, !14488, !14489}
!14487 = !DILocalVariable(name: "pq", arg: 1, scope: !14483, file: !2311, line: 1209, type: !14405)
!14488 = !DILocalVariable(name: "thread", scope: !14483, file: !2311, line: 1211, type: !2206)
!14489 = !DILocalVariable(name: "n", scope: !14483, file: !2311, line: 1212, type: !2235)
!14490 = !DILocation(line: 0, scope: !14483)
!14491 = !DILocation(line: 1212, column: 37, scope: !14483)
!14492 = !DILocation(line: 1212, column: 21, scope: !14483)
!14493 = !DILocation(line: 1217, column: 2, scope: !14483)
!14494 = distinct !DISubprogram(name: "rb_get_min", scope: !289, file: !289, line: 115, type: !14495, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14497)
!14495 = !DISubroutineType(types: !14496)
!14496 = !{!2235, !14460}
!14497 = !{!14498}
!14498 = !DILocalVariable(name: "tree", arg: 1, scope: !14494, file: !289, line: 115, type: !14460)
!14499 = !DILocation(line: 0, scope: !14494)
!14500 = !DILocation(line: 117, column: 9, scope: !14494)
!14501 = !DILocation(line: 117, column: 2, scope: !14494)
!14502 = !DISubprogram(name: "z_rb_get_minmax", scope: !289, file: !289, line: 100, type: !14503, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{!2235, !14460, !208}
!14505 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2311, file: !2311, line: 1246, type: !14506, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14516)
!14506 = !DISubroutineType(types: !14507)
!14507 = !{!2206, !14508}
!14508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14509, size: 32)
!14509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14407, line: 53, size: 2080, elements: !14510)
!14510 = !{!14511, !14515}
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14509, file: !14407, line: 54, baseType: !14512, size: 2048)
!14512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2242, size: 2048, elements: !14513)
!14513 = !{!14514}
!14514 = !DISubrange(count: 32)
!14515 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14509, file: !14407, line: 55, baseType: !32, size: 32, offset: 2048)
!14516 = !{!14517, !14518, !14519, !14520}
!14517 = !DILocalVariable(name: "pq", arg: 1, scope: !14505, file: !2311, line: 1246, type: !14508)
!14518 = !DILocalVariable(name: "thread", scope: !14505, file: !2311, line: 1252, type: !2206)
!14519 = !DILocalVariable(name: "l", scope: !14505, file: !2311, line: 1253, type: !13315)
!14520 = !DILocalVariable(name: "n", scope: !14505, file: !2311, line: 1254, type: !2307)
!14521 = !DILocation(line: 0, scope: !14505)
!14522 = !DILocation(line: 1248, column: 11, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14505, file: !2311, line: 1248, column: 6)
!14524 = !DILocation(line: 1248, column: 7, scope: !14523)
!14525 = !DILocation(line: 1248, column: 6, scope: !14505)
!14526 = !DILocation(line: 1253, column: 31, scope: !14505)
!14527 = !DILocation(line: 1253, column: 20, scope: !14505)
!14528 = !DILocation(line: 1254, column: 19, scope: !14505)
!14529 = !DILocation(line: 1260, column: 1, scope: !14505)
!14530 = distinct !DISubprogram(name: "z_unpend_all", scope: !2311, file: !2311, line: 1262, type: !14531, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14533)
!14531 = !DISubroutineType(types: !14532)
!14532 = !{!103, !2237}
!14533 = !{!14534, !14535, !14536}
!14534 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14530, file: !2311, line: 1262, type: !2237)
!14535 = !DILocalVariable(name: "need_sched", scope: !14530, file: !2311, line: 1264, type: !103)
!14536 = !DILocalVariable(name: "thread", scope: !14530, file: !2311, line: 1265, type: !2206)
!14537 = !DILocation(line: 0, scope: !14530)
!14538 = !DILocation(line: 1267, column: 19, scope: !14530)
!14539 = !DILocation(line: 1267, column: 41, scope: !14530)
!14540 = !DILocation(line: 1267, column: 2, scope: !14530)
!14541 = !DILocation(line: 1268, column: 3, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14530, file: !2311, line: 1267, column: 50)
!14543 = !DILocation(line: 1269, column: 3, scope: !14542)
!14544 = distinct !{!14544, !14540, !14545}
!14545 = !DILocation(line: 1271, column: 2, scope: !14530)
!14546 = !DILocation(line: 1273, column: 2, scope: !14530)
!14547 = distinct !DISubprogram(name: "z_waitq_head", scope: !12710, file: !12710, line: 52, type: !14163, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14548)
!14548 = !{!14549}
!14549 = !DILocalVariable(name: "w", arg: 1, scope: !14547, file: !12710, line: 52, type: !2237)
!14550 = !DILocation(line: 0, scope: !14547)
!14551 = !DILocation(line: 54, column: 52, scope: !14547)
!14552 = !DILocation(line: 54, column: 28, scope: !14547)
!14553 = !DILocation(line: 54, column: 9, scope: !14547)
!14554 = !DILocation(line: 54, column: 2, scope: !14547)
!14555 = distinct !DISubprogram(name: "init_ready_q", scope: !2311, file: !2311, line: 1276, type: !14556, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14563)
!14556 = !DISubroutineType(types: !14557)
!14557 = !{null, !14558}
!14558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14559, size: 32)
!14559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !14560)
!14560 = !{!14561, !14562}
!14561 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14559, file: !299, line: 86, baseType: !2206, size: 32)
!14562 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14559, file: !299, line: 90, baseType: !2242, size: 64, offset: 32)
!14563 = !{!14564}
!14564 = !DILocalVariable(name: "rq", arg: 1, scope: !14555, file: !2311, line: 1276, type: !14558)
!14565 = !DILocation(line: 0, scope: !14555)
!14566 = !DILocation(line: 1289, column: 22, scope: !14555)
!14567 = !DILocation(line: 1289, column: 2, scope: !14555)
!14568 = !DILocation(line: 1291, column: 1, scope: !14555)
!14569 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !14570, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{null, !13315}
!14572 = !{!14573}
!14573 = !DILocalVariable(name: "list", arg: 1, scope: !14569, file: !273, line: 197, type: !13315)
!14574 = !DILocation(line: 0, scope: !14569)
!14575 = !DILocation(line: 199, column: 8, scope: !14569)
!14576 = !DILocation(line: 199, column: 13, scope: !14569)
!14577 = !DILocation(line: 200, column: 8, scope: !14569)
!14578 = !DILocation(line: 200, column: 13, scope: !14569)
!14579 = !DILocation(line: 201, column: 1, scope: !14569)
!14580 = distinct !DISubprogram(name: "z_sched_init", scope: !2311, file: !2311, line: 1293, type: !2964, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14581 = !DILocation(line: 1302, column: 2, scope: !14580)
!14582 = !DILocation(line: 1306, column: 2, scope: !14580)
!14583 = !DILocation(line: 1309, column: 1, scope: !14580)
!14584 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2311, file: !2311, line: 1311, type: !14585, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14588)
!14585 = !DISubroutineType(types: !14586)
!14586 = !{!103, !14587}
!14587 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2206)
!14588 = !{!14589}
!14589 = !DILocalVariable(name: "thread", arg: 1, scope: !14584, file: !2311, line: 1311, type: !14587)
!14590 = !DILocation(line: 0, scope: !14584)
!14591 = !DILocation(line: 1313, column: 22, scope: !14584)
!14592 = !DILocation(line: 1313, column: 9, scope: !14584)
!14593 = !DILocation(line: 1313, column: 2, scope: !14584)
!14594 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2311, file: !2311, line: 1325, type: !14595, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14597)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{null, !14587, !103}
!14597 = !{!14598, !14599, !14600}
!14598 = !DILocalVariable(name: "thread", arg: 1, scope: !14594, file: !2311, line: 1325, type: !14587)
!14599 = !DILocalVariable(name: "prio", arg: 2, scope: !14594, file: !2311, line: 1325, type: !103)
!14600 = !DILocalVariable(name: "th", scope: !14594, file: !2311, line: 1334, type: !2206)
!14601 = !DILocation(line: 0, scope: !14594)
!14602 = !DILocation(line: 1336, column: 2, scope: !14594)
!14603 = !DILocation(line: 1337, column: 1, scope: !14594)
!14604 = distinct !DISubprogram(name: "k_can_yield", scope: !2311, file: !2311, line: 1384, type: !7233, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14605 = !DILocation(line: 1386, column: 11, scope: !14604)
!14606 = !DILocation(line: 1386, column: 29, scope: !14604)
!14607 = !DILocation(line: 1386, column: 32, scope: !14604)
!14608 = !DILocation(line: 1386, column: 46, scope: !14604)
!14609 = !DILocation(line: 1387, column: 28, scope: !14604)
!14610 = !DILocation(line: 1387, column: 4, scope: !14604)
!14611 = !DILocation(line: 1386, column: 2, scope: !14604)
!14612 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !357, file: !357, line: 989, type: !7233, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14613 = !DILocation(line: 993, column: 10, scope: !14612)
!14614 = !DILocation(line: 993, column: 2, scope: !14612)
!14615 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2311, file: !2311, line: 1390, type: !2964, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14616)
!14616 = !{!14617}
!14617 = !DILocalVariable(name: "key", scope: !14615, file: !2311, line: 1396, type: !13104)
!14618 = !DILocation(line: 0, scope: !13112, inlinedAt: !14619)
!14619 = distinct !DILocation(line: 1396, column: 25, scope: !14615)
!14620 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14619)
!14622 = !DILocation(line: 0, scope: !13121, inlinedAt: !14621)
!14623 = !DILocation(line: 0, scope: !14615)
!14624 = !DILocation(line: 1400, column: 18, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !2311, line: 1399, column: 36)
!14626 = distinct !DILexicalBlock(scope: !14615, file: !2311, line: 1398, column: 6)
!14627 = !DILocation(line: 0, scope: !13281, inlinedAt: !14628)
!14628 = distinct !DILocation(line: 1400, column: 3, scope: !14625)
!14629 = !DILocation(line: 266, column: 15, scope: !13281, inlinedAt: !14628)
!14630 = !DILocation(line: 266, column: 28, scope: !13281, inlinedAt: !14628)
!14631 = !DILocation(line: 0, scope: !13289, inlinedAt: !14632)
!14632 = distinct !DILocation(line: 268, column: 3, scope: !13293, inlinedAt: !14628)
!14633 = !DILocation(line: 234, column: 2, scope: !13289, inlinedAt: !14632)
!14634 = !DILocation(line: 1402, column: 15, scope: !14615)
!14635 = !DILocation(line: 0, scope: !13298, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 1402, column: 2, scope: !14615)
!14637 = !DILocation(line: 252, column: 15, scope: !13298, inlinedAt: !14636)
!14638 = !DILocation(line: 252, column: 28, scope: !13298, inlinedAt: !14636)
!14639 = !DILocation(line: 0, scope: !13305, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 254, column: 3, scope: !13309, inlinedAt: !14636)
!14641 = !DILocation(line: 0, scope: !13312, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 229, column: 2, scope: !13305, inlinedAt: !14640)
!14643 = !DILocation(line: 188, column: 2, scope: !13322, inlinedAt: !14642)
!14644 = !DILocation(line: 188, column: 2, scope: !13324, inlinedAt: !14642)
!14645 = !DILocation(line: 0, scope: !13322, inlinedAt: !14642)
!14646 = !DILocation(line: 189, column: 7, scope: !13327, inlinedAt: !14642)
!14647 = !DILocation(line: 189, column: 35, scope: !13327, inlinedAt: !14642)
!14648 = !DILocation(line: 189, column: 7, scope: !13328, inlinedAt: !14642)
!14649 = !DILocation(line: 191, column: 21, scope: !13332, inlinedAt: !14642)
!14650 = !DILocation(line: 190, column: 4, scope: !13332, inlinedAt: !14642)
!14651 = !DILocation(line: 192, column: 4, scope: !13332, inlinedAt: !14642)
!14652 = distinct !{!14652, !14643, !14653}
!14653 = !DILocation(line: 194, column: 2, scope: !13322, inlinedAt: !14642)
!14654 = !DILocation(line: 196, column: 37, scope: !13312, inlinedAt: !14642)
!14655 = !DILocation(line: 196, column: 2, scope: !13312, inlinedAt: !14642)
!14656 = !DILocation(line: 197, column: 1, scope: !13312, inlinedAt: !14642)
!14657 = !DILocation(line: 1403, column: 2, scope: !14615)
!14658 = !DILocation(line: 0, scope: !13723, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 1404, column: 2, scope: !14615)
!14660 = !DILocation(line: 196, column: 9, scope: !13723, inlinedAt: !14659)
!14661 = !DILocation(line: 1405, column: 1, scope: !14615)
!14662 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2311, file: !2311, line: 1459, type: !14663, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14665)
!14663 = !DISubroutineType(types: !14664)
!14664 = !{!643, !13903}
!14665 = !{!14666, !14667, !14668}
!14666 = !DILocalVariable(name: "timeout", arg: 1, scope: !14662, file: !2311, line: 1459, type: !13903)
!14667 = !DILocalVariable(name: "ticks", scope: !14662, file: !2311, line: 1461, type: !1559)
!14668 = !DILocalVariable(name: "ret", scope: !14662, file: !2311, line: 1480, type: !643)
!14669 = !DILocation(line: 0, scope: !14662)
!14670 = !DILocation(line: 1468, column: 6, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14662, file: !2311, line: 1468, column: 6)
!14672 = !DILocation(line: 1468, column: 6, scope: !14662)
!14673 = !DILocation(line: 1469, column: 20, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14671, file: !2311, line: 1468, column: 40)
!14675 = !DILocation(line: 1469, column: 3, scope: !14674)
!14676 = !DILocation(line: 1473, column: 3, scope: !14674)
!14677 = !DILocation(line: 1478, column: 10, scope: !14662)
!14678 = !DILocation(line: 1480, column: 16, scope: !14662)
!14679 = !DILocation(line: 1485, column: 1, scope: !14662)
!14680 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3414, file: !3414, line: 310, type: !14681, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14683)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{null, !14587}
!14683 = !{!14684}
!14684 = !DILocalVariable(name: "thread", arg: 1, scope: !14680, file: !3414, line: 310, type: !14587)
!14685 = !DILocation(line: 0, scope: !14680)
!14686 = !DILocation(line: 319, column: 2, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14680, file: !3414, line: 319, column: 2)
!14688 = !{i64 2155481351}
!14689 = !DILocation(line: 320, column: 2, scope: !14680)
!14690 = !DILocation(line: 321, column: 1, scope: !14680)
!14691 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2311, file: !2311, line: 1415, type: !14692, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{!643, !1559}
!14694 = !{!14695, !14696, !14697, !14698}
!14695 = !DILocalVariable(name: "ticks", arg: 1, scope: !14691, file: !2311, line: 1415, type: !1559)
!14696 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14691, file: !2311, line: 1418, type: !137)
!14697 = !DILocalVariable(name: "timeout", scope: !14691, file: !2311, line: 1430, type: !13903)
!14698 = !DILocalVariable(name: "key", scope: !14691, file: !2311, line: 1437, type: !13104)
!14699 = !DILocation(line: 0, scope: !14691)
!14700 = !DILocation(line: 1425, column: 12, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14691, file: !2311, line: 1425, column: 6)
!14702 = !DILocation(line: 1425, column: 6, scope: !14691)
!14703 = !DILocation(line: 1426, column: 3, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14701, file: !2311, line: 1425, column: 18)
!14705 = !DILocation(line: 1427, column: 3, scope: !14704)
!14706 = !DILocation(line: 1431, column: 24, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14691, file: !2311, line: 1431, column: 6)
!14708 = !DILocation(line: 1431, column: 6, scope: !14691)
!14709 = !DILocation(line: 1432, column: 35, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14707, file: !2311, line: 1431, column: 30)
!14711 = !DILocation(line: 1432, column: 27, scope: !14710)
!14712 = !DILocation(line: 1433, column: 2, scope: !14710)
!14713 = !DILocation(line: 1434, column: 27, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14707, file: !2311, line: 1433, column: 9)
!14715 = !DILocation(line: 0, scope: !14707)
!14716 = !DILocation(line: 0, scope: !13112, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 1437, column: 25, scope: !14691)
!14718 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14717)
!14720 = !DILocation(line: 0, scope: !13121, inlinedAt: !14719)
!14721 = !DILocation(line: 1440, column: 20, scope: !14691)
!14722 = !DILocation(line: 1440, column: 18, scope: !14691)
!14723 = !DILocation(line: 1442, column: 2, scope: !14691)
!14724 = !DILocation(line: 1443, column: 23, scope: !14691)
!14725 = !DILocation(line: 1443, column: 2, scope: !14691)
!14726 = !DILocation(line: 1444, column: 29, scope: !14691)
!14727 = !DILocation(line: 1444, column: 2, scope: !14691)
!14728 = !DILocation(line: 0, scope: !13723, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 1446, column: 8, scope: !14691)
!14730 = !DILocation(line: 196, column: 9, scope: !13723, inlinedAt: !14729)
!14731 = !DILocation(line: 1450, column: 10, scope: !14691)
!14732 = !DILocation(line: 1450, column: 45, scope: !14691)
!14733 = !DILocation(line: 1450, column: 43, scope: !14691)
!14734 = !DILocation(line: 1451, column: 6, scope: !14691)
!14735 = !DILocation(line: 1457, column: 1, scope: !14691)
!14736 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12945, file: !12945, line: 1103, type: !12946, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14737)
!14737 = !{!14738}
!14738 = !DILocalVariable(name: "t", arg: 1, scope: !14736, file: !12945, line: 1103, type: !163)
!14739 = !DILocation(line: 0, scope: !14736)
!14740 = !DILocation(line: 0, scope: !13159, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 1106, column: 9, scope: !14736)
!14742 = !DILocation(line: 139, column: 13, scope: !14743, inlinedAt: !14741)
!14743 = distinct !DILexicalBlock(scope: !14744, file: !12945, line: 138, column: 10)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !12945, line: 136, column: 7)
!14745 = distinct !DILexicalBlock(scope: !13180, file: !12945, line: 134, column: 17)
!14746 = !DILocation(line: 1106, column: 2, scope: !14736)
!14747 = distinct !DISubprogram(name: "k_yield", scope: !3414, file: !3414, line: 140, type: !2964, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14748 = !DILocation(line: 148, column: 2, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14747, file: !3414, line: 148, column: 2)
!14750 = !{i64 2155480671}
!14751 = !DILocation(line: 149, column: 2, scope: !14747)
!14752 = !DILocation(line: 150, column: 1, scope: !14747)
!14753 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2311, file: !2311, line: 1495, type: !14754, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14756)
!14754 = !DISubroutineType(types: !14755)
!14755 = !{!643, !103}
!14756 = !{!14757, !14758}
!14757 = !DILocalVariable(name: "us", arg: 1, scope: !14753, file: !2311, line: 1495, type: !103)
!14758 = !DILocalVariable(name: "ticks", scope: !14753, file: !2311, line: 1497, type: !643)
!14759 = !DILocation(line: 0, scope: !14753)
!14760 = !DILocation(line: 1501, column: 31, scope: !14753)
!14761 = !DILocation(line: 1501, column: 10, scope: !14753)
!14762 = !DILocation(line: 1502, column: 23, scope: !14753)
!14763 = !DILocation(line: 1502, column: 10, scope: !14753)
!14764 = !DILocation(line: 1506, column: 31, scope: !14753)
!14765 = !DILocation(line: 1506, column: 9, scope: !14753)
!14766 = !DILocation(line: 1506, column: 2, scope: !14753)
!14767 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12945, file: !12945, line: 571, type: !12946, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14768)
!14768 = !{!14769}
!14769 = !DILocalVariable(name: "t", arg: 1, scope: !14767, file: !12945, line: 571, type: !163)
!14770 = !DILocation(line: 0, scope: !14767)
!14771 = !DILocation(line: 0, scope: !13159, inlinedAt: !14772)
!14772 = distinct !DILocation(line: 574, column: 9, scope: !14767)
!14773 = !DILocation(line: 135, column: 5, scope: !14745, inlinedAt: !14772)
!14774 = !DILocation(line: 139, column: 13, scope: !14743, inlinedAt: !14772)
!14775 = !DILocation(line: 574, column: 2, scope: !14767)
!14776 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12945, file: !12945, line: 1187, type: !12946, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14777)
!14777 = !{!14778}
!14778 = !DILocalVariable(name: "t", arg: 1, scope: !14776, file: !12945, line: 1187, type: !163)
!14779 = !DILocation(line: 0, scope: !14776)
!14780 = !DILocation(line: 0, scope: !13159, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 1190, column: 9, scope: !14776)
!14782 = !DILocation(line: 145, column: 13, scope: !14783, inlinedAt: !14781)
!14783 = distinct !DILexicalBlock(scope: !13177, file: !12945, line: 144, column: 10)
!14784 = !DILocation(line: 1190, column: 2, scope: !14776)
!14785 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2311, file: !2311, line: 1517, type: !14681, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14786)
!14786 = !{!14787}
!14787 = !DILocalVariable(name: "thread", arg: 1, scope: !14785, file: !2311, line: 1517, type: !14587)
!14788 = !DILocation(line: 0, scope: !14785)
!14789 = !DILocation(line: 1521, column: 6, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14785, file: !2311, line: 1521, column: 6)
!14791 = !DILocation(line: 1521, column: 6, scope: !14785)
!14792 = !DILocation(line: 1525, column: 6, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14785, file: !2311, line: 1525, column: 6)
!14794 = !DILocation(line: 1525, column: 37, scope: !14793)
!14795 = !DILocation(line: 1525, column: 6, scope: !14785)
!14796 = !DILocation(line: 1527, column: 20, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14798, file: !2311, line: 1527, column: 7)
!14798 = distinct !DILexicalBlock(scope: !14793, file: !2311, line: 1525, column: 42)
!14799 = !DILocation(line: 1527, column: 33, scope: !14797)
!14800 = !DILocation(line: 1527, column: 7, scope: !14798)
!14801 = !DILocation(line: 1532, column: 2, scope: !14785)
!14802 = !DILocation(line: 1533, column: 2, scope: !14785)
!14803 = !DILocation(line: 1031, column: 3, scope: !13756, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 48, column: 10, scope: !13760, inlinedAt: !14805)
!14805 = distinct !DILocation(line: 1537, column: 7, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14785, file: !2311, line: 1537, column: 6)
!14807 = !DILocation(line: 0, scope: !13756, inlinedAt: !14804)
!14808 = !DILocation(line: 48, column: 9, scope: !13760, inlinedAt: !14805)
!14809 = !DILocation(line: 1537, column: 6, scope: !14785)
!14810 = !DILocation(line: 1538, column: 3, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14806, file: !2311, line: 1537, column: 25)
!14812 = !DILocation(line: 1539, column: 2, scope: !14811)
!14813 = !DILocation(line: 1540, column: 1, scope: !14785)
!14814 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12384, file: !12384, line: 101, type: !13230, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14815)
!14815 = !{!14816}
!14816 = !DILocalVariable(name: "thread", arg: 1, scope: !14814, file: !12384, line: 101, type: !2206)
!14817 = !DILocation(line: 0, scope: !14814)
!14818 = !DILocation(line: 103, column: 23, scope: !14814)
!14819 = !DILocation(line: 103, column: 36, scope: !14814)
!14820 = !DILocation(line: 103, column: 55, scope: !14814)
!14821 = !DILocation(line: 103, column: 2, scope: !14814)
!14822 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2311, file: !2311, line: 1567, type: !14823, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14825)
!14823 = !DISubroutineType(types: !14824)
!14824 = !{!14587}
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "ret", scope: !14822, file: !2311, line: 1577, type: !14587)
!14827 = !DILocation(line: 1577, column: 30, scope: !14822)
!14828 = !DILocation(line: 0, scope: !14822)
!14829 = !DILocation(line: 1582, column: 2, scope: !14822)
!14830 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2311, file: !2311, line: 1593, type: !7507, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !162)
!14831 = !DILocation(line: 1031, column: 3, scope: !13756, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 48, column: 10, scope: !13760, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 1595, column: 10, scope: !14830)
!14834 = !DILocation(line: 0, scope: !13756, inlinedAt: !14832)
!14835 = !DILocation(line: 48, column: 9, scope: !13760, inlinedAt: !14833)
!14836 = !DILocation(line: 1595, column: 27, scope: !14830)
!14837 = !DILocation(line: 1595, column: 41, scope: !14830)
!14838 = !DILocation(line: 1595, column: 30, scope: !14830)
!14839 = !DILocation(line: 1595, column: 2, scope: !14830)
!14840 = distinct !DISubprogram(name: "z_thread_abort", scope: !2311, file: !2311, line: 1725, type: !13070, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14841)
!14841 = !{!14842, !14843}
!14842 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !2311, line: 1725, type: !2206)
!14843 = !DILocalVariable(name: "key", scope: !14840, file: !2311, line: 1727, type: !13104)
!14844 = !DILocation(line: 0, scope: !14840)
!14845 = !DILocation(line: 0, scope: !13112, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 1727, column: 25, scope: !14840)
!14847 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14848)
!14848 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14846)
!14849 = !DILocation(line: 0, scope: !13121, inlinedAt: !14848)
!14850 = !DILocation(line: 1729, column: 20, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14840, file: !2311, line: 1729, column: 6)
!14852 = !DILocation(line: 1729, column: 33, scope: !14851)
!14853 = !DILocation(line: 1729, column: 48, scope: !14851)
!14854 = !DILocation(line: 1729, column: 6, scope: !14840)
!14855 = !DILocation(line: 0, scope: !13139, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 1730, column: 3, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14851, file: !2311, line: 1729, column: 54)
!14858 = !DILocation(line: 0, scope: !13147, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14856)
!14860 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14859)
!14861 = !DILocation(line: 1732, column: 3, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14857, file: !2311, line: 1732, column: 3)
!14863 = !{i64 2156218081, i64 2156218097, i64 2156218123, i64 2156218151, i64 2156218171}
!14864 = !DILocation(line: 1733, column: 3, scope: !14857)
!14865 = !DILocation(line: 1736, column: 20, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14840, file: !2311, line: 1736, column: 6)
!14867 = !DILocation(line: 1736, column: 33, scope: !14866)
!14868 = !DILocation(line: 1736, column: 49, scope: !14866)
!14869 = !DILocation(line: 1736, column: 6, scope: !14840)
!14870 = !DILocation(line: 0, scope: !13139, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 1737, column: 3, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14866, file: !2311, line: 1736, column: 56)
!14873 = !DILocation(line: 0, scope: !13147, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14871)
!14875 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14874)
!14876 = !DILocation(line: 1738, column: 3, scope: !14872)
!14877 = !DILocation(line: 1775, column: 2, scope: !14840)
!14878 = !DILocation(line: 1776, column: 16, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14840, file: !2311, line: 1776, column: 6)
!14880 = !DILocation(line: 1776, column: 13, scope: !14879)
!14881 = !DILocation(line: 1776, column: 25, scope: !14879)
!14882 = !DILocation(line: 1031, column: 3, scope: !13756, inlinedAt: !14883)
!14883 = distinct !DILocation(line: 48, column: 10, scope: !13760, inlinedAt: !14884)
!14884 = distinct !DILocation(line: 1776, column: 29, scope: !14879)
!14885 = !DILocation(line: 0, scope: !13756, inlinedAt: !14883)
!14886 = !DILocation(line: 48, column: 9, scope: !13760, inlinedAt: !14884)
!14887 = !DILocation(line: 1776, column: 6, scope: !14840)
!14888 = !DILocation(line: 0, scope: !13723, inlinedAt: !14889)
!14889 = distinct !DILocation(line: 1777, column: 3, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14879, file: !2311, line: 1776, column: 47)
!14891 = !DILocation(line: 196, column: 9, scope: !13723, inlinedAt: !14889)
!14892 = !DILocation(line: 1779, column: 2, scope: !14890)
!14893 = !DILocation(line: 0, scope: !13139, inlinedAt: !14894)
!14894 = distinct !DILocation(line: 1780, column: 2, scope: !14840)
!14895 = !DILocation(line: 0, scope: !13147, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !14894)
!14897 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !14896)
!14898 = !DILocation(line: 1781, column: 1, scope: !14840)
!14899 = distinct !DISubprogram(name: "end_thread", scope: !2311, file: !2311, line: 1690, type: !13070, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14900)
!14900 = !{!14901}
!14901 = !DILocalVariable(name: "thread", arg: 1, scope: !14899, file: !2311, line: 1690, type: !2206)
!14902 = !DILocation(line: 0, scope: !14899)
!14903 = !DILocation(line: 1695, column: 20, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14899, file: !2311, line: 1695, column: 6)
!14905 = !DILocation(line: 1695, column: 33, scope: !14904)
!14906 = !DILocation(line: 1695, column: 49, scope: !14904)
!14907 = !DILocation(line: 1695, column: 6, scope: !14899)
!14908 = !DILocation(line: 1697, column: 29, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14904, file: !2311, line: 1695, column: 56)
!14910 = !DILocation(line: 1698, column: 7, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14909, file: !2311, line: 1698, column: 7)
!14912 = !DILocation(line: 1698, column: 7, scope: !14909)
!14913 = !DILocation(line: 0, scope: !13281, inlinedAt: !14914)
!14914 = distinct !DILocation(line: 1699, column: 4, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !2311, line: 1698, column: 35)
!14916 = !DILocation(line: 266, column: 28, scope: !13281, inlinedAt: !14914)
!14917 = !DILocation(line: 0, scope: !13289, inlinedAt: !14918)
!14918 = distinct !DILocation(line: 268, column: 3, scope: !13293, inlinedAt: !14914)
!14919 = !DILocation(line: 234, column: 2, scope: !13289, inlinedAt: !14918)
!14920 = !DILocation(line: 1700, column: 3, scope: !14915)
!14921 = !DILocation(line: 1701, column: 20, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14909, file: !2311, line: 1701, column: 7)
!14923 = !DILocation(line: 1701, column: 30, scope: !14922)
!14924 = !DILocation(line: 1701, column: 7, scope: !14909)
!14925 = !DILocation(line: 1702, column: 4, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14922, file: !2311, line: 1701, column: 39)
!14927 = !DILocation(line: 1703, column: 3, scope: !14926)
!14928 = !DILocation(line: 1704, column: 9, scope: !14909)
!14929 = !DILocation(line: 1705, column: 23, scope: !14909)
!14930 = !DILocation(line: 1705, column: 3, scope: !14909)
!14931 = !DILocation(line: 1706, column: 3, scope: !14909)
!14932 = !DILocation(line: 1722, column: 2, scope: !14909)
!14933 = !DILocation(line: 1723, column: 1, scope: !14899)
!14934 = distinct !DISubprogram(name: "unpend_all", scope: !2311, file: !2311, line: 1674, type: !14935, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14937)
!14935 = !DISubroutineType(types: !14936)
!14936 = !{null, !2237}
!14937 = !{!14938, !14939}
!14938 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14934, file: !2311, line: 1674, type: !2237)
!14939 = !DILocalVariable(name: "thread", scope: !14934, file: !2311, line: 1676, type: !2206)
!14940 = !DILocation(line: 0, scope: !14934)
!14941 = !DILocation(line: 1678, column: 19, scope: !14934)
!14942 = !DILocation(line: 1678, column: 41, scope: !14934)
!14943 = !DILocation(line: 1678, column: 2, scope: !14934)
!14944 = !DILocation(line: 1679, column: 3, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14934, file: !2311, line: 1678, column: 50)
!14946 = !DILocation(line: 1680, column: 9, scope: !14945)
!14947 = !DILocalVariable(name: "thread", arg: 1, scope: !14948, file: !12404, line: 65, type: !2206)
!14948 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12404, file: !12404, line: 65, type: !14949, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14951)
!14949 = !DISubroutineType(types: !14950)
!14950 = !{null, !2206, !32}
!14951 = !{!14947, !14952}
!14952 = !DILocalVariable(name: "value", arg: 2, scope: !14948, file: !12404, line: 65, type: !32)
!14953 = !DILocation(line: 0, scope: !14948, inlinedAt: !14954)
!14954 = distinct !DILocation(line: 1681, column: 3, scope: !14945)
!14955 = !DILocation(line: 67, column: 15, scope: !14948, inlinedAt: !14954)
!14956 = !DILocation(line: 67, column: 33, scope: !14948, inlinedAt: !14954)
!14957 = !DILocation(line: 1682, column: 3, scope: !14945)
!14958 = distinct !{!14958, !14943, !14959}
!14959 = !DILocation(line: 1683, column: 2, scope: !14934)
!14960 = !DILocation(line: 1684, column: 1, scope: !14934)
!14961 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2311, file: !2311, line: 1794, type: !14962, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !14964)
!14962 = !DISubroutineType(types: !14963)
!14963 = !{!103, !2206, !13903}
!14964 = !{!14965, !14966, !14967, !14968}
!14965 = !DILocalVariable(name: "thread", arg: 1, scope: !14961, file: !2311, line: 1794, type: !2206)
!14966 = !DILocalVariable(name: "timeout", arg: 2, scope: !14961, file: !2311, line: 1794, type: !13903)
!14967 = !DILocalVariable(name: "key", scope: !14961, file: !2311, line: 1796, type: !13104)
!14968 = !DILocalVariable(name: "ret", scope: !14961, file: !2311, line: 1797, type: !103)
!14969 = !DILocation(line: 0, scope: !14961)
!14970 = !DILocation(line: 0, scope: !13112, inlinedAt: !14971)
!14971 = distinct !DILocation(line: 1796, column: 25, scope: !14961)
!14972 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !14973)
!14973 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !14971)
!14974 = !DILocation(line: 0, scope: !13121, inlinedAt: !14973)
!14975 = !DILocation(line: 1801, column: 20, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14961, file: !2311, line: 1801, column: 6)
!14977 = !DILocation(line: 1801, column: 33, scope: !14976)
!14978 = !DILocation(line: 1801, column: 49, scope: !14976)
!14979 = !DILocation(line: 1801, column: 6, scope: !14961)
!14980 = !DILocation(line: 1803, column: 13, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14976, file: !2311, line: 1803, column: 13)
!14982 = !DILocation(line: 1803, column: 13, scope: !14976)
!14983 = !DILocation(line: 1805, column: 24, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14981, file: !2311, line: 1805, column: 13)
!14985 = !DILocation(line: 1805, column: 21, scope: !14984)
!14986 = !DILocation(line: 1805, column: 34, scope: !14984)
!14987 = !DILocation(line: 1806, column: 20, scope: !14984)
!14988 = !DILocation(line: 1806, column: 44, scope: !14984)
!14989 = !DILocation(line: 1806, column: 30, scope: !14984)
!14990 = !DILocation(line: 1805, column: 13, scope: !14981)
!14991 = !DILocation(line: 1810, column: 42, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14984, file: !2311, line: 1808, column: 9)
!14993 = !DILocation(line: 1810, column: 3, scope: !14992)
!14994 = !DILocation(line: 1811, column: 22, scope: !14992)
!14995 = !DILocation(line: 1811, column: 3, scope: !14992)
!14996 = !DILocation(line: 0, scope: !13723, inlinedAt: !14997)
!14997 = distinct !DILocation(line: 1814, column: 9, scope: !14992)
!14998 = !DILocation(line: 196, column: 9, scope: !13723, inlinedAt: !14997)
!14999 = !DILocation(line: 1817, column: 3, scope: !14992)
!15000 = !DILocation(line: 0, scope: !14976)
!15001 = !DILocation(line: 0, scope: !13139, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 1822, column: 2, scope: !14961)
!15003 = !DILocation(line: 0, scope: !13147, inlinedAt: !15004)
!15004 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !15002)
!15005 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !15004)
!15006 = !DILocation(line: 1823, column: 2, scope: !14961)
!15007 = !DILocation(line: 1824, column: 1, scope: !14961)
!15008 = distinct !DISubprogram(name: "z_sched_wake", scope: !2311, file: !2311, line: 1882, type: !15009, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !15011)
!15009 = !DISubroutineType(types: !15010)
!15010 = !{!211, !2237, !103, !102}
!15011 = !{!15012, !15013, !15014, !15015, !15016, !15017, !15019}
!15012 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15008, file: !2311, line: 1882, type: !2237)
!15013 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15008, file: !2311, line: 1882, type: !103)
!15014 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15008, file: !2311, line: 1882, type: !102)
!15015 = !DILocalVariable(name: "thread", scope: !15008, file: !2311, line: 1884, type: !2206)
!15016 = !DILocalVariable(name: "ret", scope: !15008, file: !2311, line: 1885, type: !211)
!15017 = !DILocalVariable(name: "__i", scope: !15018, file: !2311, line: 1887, type: !13104)
!15018 = distinct !DILexicalBlock(scope: !15008, file: !2311, line: 1887, column: 2)
!15019 = !DILocalVariable(name: "__key", scope: !15018, file: !2311, line: 1887, type: !13104)
!15020 = !DILocation(line: 0, scope: !15008)
!15021 = !DILocation(line: 0, scope: !15018)
!15022 = !DILocation(line: 0, scope: !13112, inlinedAt: !15023)
!15023 = distinct !DILocation(line: 1887, column: 2, scope: !15018)
!15024 = !DILocation(line: 55, column: 2, scope: !13121, inlinedAt: !15025)
!15025 = distinct !DILocation(line: 145, column: 10, scope: !13112, inlinedAt: !15023)
!15026 = !DILocation(line: 0, scope: !13121, inlinedAt: !15025)
!15027 = !DILocation(line: 1888, column: 12, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15029, file: !2311, line: 1887, column: 26)
!15029 = distinct !DILexicalBlock(scope: !15018, file: !2311, line: 1887, column: 2)
!15030 = !DILocation(line: 1890, column: 14, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15028, file: !2311, line: 1890, column: 7)
!15032 = !DILocation(line: 1890, column: 7, scope: !15028)
!15033 = !DILocalVariable(name: "thread", arg: 1, scope: !15034, file: !15035, line: 134, type: !2206)
!15034 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15035, file: !15035, line: 134, type: !15036, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !15038)
!15035 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15036 = !DISubroutineType(types: !15037)
!15037 = !{null, !2206, !32, !102}
!15038 = !{!15033, !15039, !15040}
!15039 = !DILocalVariable(name: "value", arg: 2, scope: !15034, file: !15035, line: 135, type: !32)
!15040 = !DILocalVariable(name: "data", arg: 3, scope: !15034, file: !15035, line: 136, type: !102)
!15041 = !DILocation(line: 0, scope: !15034, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 1891, column: 4, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15031, file: !2311, line: 1890, column: 23)
!15044 = !DILocation(line: 0, scope: !14948, inlinedAt: !15045)
!15045 = distinct !DILocation(line: 138, column: 2, scope: !15034, inlinedAt: !15042)
!15046 = !DILocation(line: 67, column: 15, scope: !14948, inlinedAt: !15045)
!15047 = !DILocation(line: 67, column: 33, scope: !14948, inlinedAt: !15045)
!15048 = !DILocation(line: 139, column: 15, scope: !15034, inlinedAt: !15042)
!15049 = !DILocation(line: 139, column: 25, scope: !15034, inlinedAt: !15042)
!15050 = !DILocation(line: 1894, column: 4, scope: !15043)
!15051 = !DILocation(line: 1895, column: 10, scope: !15043)
!15052 = !DILocation(line: 1896, column: 4, scope: !15043)
!15053 = !DILocation(line: 1898, column: 3, scope: !15043)
!15054 = !DILocation(line: 0, scope: !13139, inlinedAt: !15055)
!15055 = distinct !DILocation(line: 1887, column: 2, scope: !15029)
!15056 = !DILocation(line: 0, scope: !13147, inlinedAt: !15057)
!15057 = distinct !DILocation(line: 215, column: 2, scope: !13139, inlinedAt: !15055)
!15058 = !DILocation(line: 95, column: 2, scope: !13147, inlinedAt: !15057)
!15059 = !DILocation(line: 1901, column: 2, scope: !15008)
!15060 = distinct !DISubprogram(name: "z_sched_wait", scope: !2311, file: !2311, line: 1904, type: !15061, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2203, retainedNodes: !15064)
!15061 = !DISubroutineType(types: !15062)
!15062 = !{!103, !13115, !13104, !2237, !13903, !15063}
!15063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15064 = !{!15065, !15066, !15067, !15068, !15069, !15070}
!15065 = !DILocalVariable(name: "lock", arg: 1, scope: !15060, file: !2311, line: 1904, type: !13115)
!15066 = !DILocalVariable(name: "key", arg: 2, scope: !15060, file: !2311, line: 1904, type: !13104)
!15067 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15060, file: !2311, line: 1905, type: !2237)
!15068 = !DILocalVariable(name: "timeout", arg: 4, scope: !15060, file: !2311, line: 1905, type: !13903)
!15069 = !DILocalVariable(name: "data", arg: 5, scope: !15060, file: !2311, line: 1905, type: !15063)
!15070 = !DILocalVariable(name: "ret", scope: !15060, file: !2311, line: 1907, type: !103)
!15071 = !DILocation(line: 0, scope: !15060)
!15072 = !DILocation(line: 1907, column: 12, scope: !15060)
!15073 = !DILocation(line: 1909, column: 11, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15060, file: !2311, line: 1909, column: 6)
!15075 = !DILocation(line: 1909, column: 6, scope: !15060)
!15076 = !DILocation(line: 1910, column: 11, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15074, file: !2311, line: 1909, column: 20)
!15078 = !DILocation(line: 1910, column: 26, scope: !15077)
!15079 = !DILocation(line: 1910, column: 9, scope: !15077)
!15080 = !DILocation(line: 1911, column: 2, scope: !15077)
!15081 = !DILocation(line: 1912, column: 2, scope: !15060)
!15082 = distinct !DISubprogram(name: "z_data_copy", scope: !15083, file: !15083, line: 22, type: !2964, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !162)
!15083 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15084 = !DILocation(line: 24, column: 2, scope: !15082)
!15085 = !DILocation(line: 27, column: 2, scope: !15082)
!15086 = !DILocation(line: 31, column: 2, scope: !15082)
!15087 = !DILocation(line: 71, column: 1, scope: !15082)
!15088 = distinct !DISubprogram(name: "z_add_timeout", scope: !2348, file: !2348, line: 88, type: !15089, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15095)
!15089 = !DISubroutineType(types: !15090)
!15090 = !{null, !2321, !2340, !15091}
!15091 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1560, line: 67, baseType: !15092)
!15092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1560, line: 65, size: 64, elements: !15093)
!15093 = !{!15094}
!15094 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15092, file: !1560, line: 66, baseType: !1559, size: 64)
!15095 = !{!15096, !15097, !15098, !15099, !15105, !15106, !15109, !15112}
!15096 = !DILocalVariable(name: "to", arg: 1, scope: !15088, file: !2348, line: 88, type: !2321)
!15097 = !DILocalVariable(name: "fn", arg: 2, scope: !15088, file: !2348, line: 88, type: !2340)
!15098 = !DILocalVariable(name: "timeout", arg: 3, scope: !15088, file: !2348, line: 89, type: !15091)
!15099 = !DILocalVariable(name: "__i", scope: !15100, file: !2348, line: 102, type: !15101)
!15100 = distinct !DILexicalBlock(scope: !15088, file: !2348, line: 102, column: 2)
!15101 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !15102)
!15102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !15103)
!15103 = !{!15104}
!15104 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15102, file: !368, line: 33, baseType: !103, size: 32)
!15105 = !DILocalVariable(name: "__key", scope: !15100, file: !2348, line: 102, type: !15101)
!15106 = !DILocalVariable(name: "t", scope: !15107, file: !2348, line: 103, type: !2321)
!15107 = distinct !DILexicalBlock(scope: !15108, file: !2348, line: 102, column: 24)
!15108 = distinct !DILexicalBlock(scope: !15100, file: !2348, line: 102, column: 2)
!15109 = !DILocalVariable(name: "ticks", scope: !15110, file: !2348, line: 107, type: !1559)
!15110 = distinct !DILexicalBlock(scope: !15111, file: !2348, line: 106, column: 39)
!15111 = distinct !DILexicalBlock(scope: !15107, file: !2348, line: 105, column: 7)
!15112 = !DILocalVariable(name: "next_time", scope: !15113, file: !2348, line: 137, type: !643)
!15113 = distinct !DILexicalBlock(scope: !15114, file: !2348, line: 127, column: 22)
!15114 = distinct !DILexicalBlock(scope: !15107, file: !2348, line: 127, column: 7)
!15115 = !DILocation(line: 0, scope: !15088)
!15116 = !DILocation(line: 91, column: 6, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15088, file: !2348, line: 91, column: 6)
!15118 = !DILocation(line: 91, column: 6, scope: !15088)
!15119 = !DILocation(line: 100, column: 6, scope: !15088)
!15120 = !DILocation(line: 100, column: 9, scope: !15088)
!15121 = !DILocation(line: 0, scope: !15100)
!15122 = !DILocalVariable(name: "l", arg: 1, scope: !15123, file: !368, line: 136, type: !15126)
!15123 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !15124, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15127)
!15124 = !DISubroutineType(types: !15125)
!15125 = !{!15101, !15126}
!15126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!15127 = !{!15122, !15128}
!15128 = !DILocalVariable(name: "k", scope: !15123, file: !368, line: 139, type: !15101)
!15129 = !DILocation(line: 0, scope: !15123, inlinedAt: !15130)
!15130 = distinct !DILocation(line: 102, column: 2, scope: !15100)
!15131 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15136)
!15132 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6266, file: !6266, line: 42, type: !6267, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15133)
!15133 = !{!15134, !15135}
!15134 = !DILocalVariable(name: "key", scope: !15132, file: !6266, line: 44, type: !32)
!15135 = !DILocalVariable(name: "tmp", scope: !15132, file: !6266, line: 53, type: !32)
!15136 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15130)
!15137 = !{i64 2598773}
!15138 = !DILocation(line: 0, scope: !15132, inlinedAt: !15136)
!15139 = !DILocation(line: 106, column: 33, scope: !15111)
!15140 = !DILocation(line: 105, column: 7, scope: !15107)
!15141 = !DILocation(line: 107, column: 50, scope: !15110)
!15142 = !DILocation(line: 107, column: 48, scope: !15110)
!15143 = !DILocation(line: 0, scope: !15110)
!15144 = !DILocation(line: 109, column: 17, scope: !15110)
!15145 = !DILocation(line: 110, column: 3, scope: !15110)
!15146 = !DILocation(line: 111, column: 31, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15111, file: !2348, line: 110, column: 10)
!15148 = !DILocation(line: 111, column: 37, scope: !15147)
!15149 = !DILocation(line: 111, column: 35, scope: !15147)
!15150 = !DILocation(line: 0, scope: !15111)
!15151 = !DILocation(line: 109, column: 8, scope: !15110)
!15152 = !DILocation(line: 109, column: 15, scope: !15110)
!15153 = !DILocation(line: 114, column: 12, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15107, file: !2348, line: 114, column: 3)
!15155 = !DILocation(line: 0, scope: !15107)
!15156 = !DILocation(line: 114, column: 3, scope: !15154)
!15157 = !DILocation(line: 115, column: 24, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15159, file: !2348, line: 115, column: 8)
!15159 = distinct !DILexicalBlock(scope: !15160, file: !2348, line: 114, column: 45)
!15160 = distinct !DILexicalBlock(scope: !15154, file: !2348, line: 114, column: 3)
!15161 = !DILocation(line: 115, column: 11, scope: !15158)
!15162 = !DILocation(line: 115, column: 18, scope: !15158)
!15163 = !DILocation(line: 115, column: 8, scope: !15159)
!15164 = !DILocation(line: 116, column: 15, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15158, file: !2348, line: 115, column: 32)
!15166 = !DILocation(line: 117, column: 26, scope: !15165)
!15167 = !DILocation(line: 117, column: 37, scope: !15165)
!15168 = !DILocation(line: 117, column: 5, scope: !15165)
!15169 = !DILocation(line: 123, column: 7, scope: !15107)
!15170 = !DILocation(line: 120, column: 15, scope: !15159)
!15171 = !DILocation(line: 114, column: 36, scope: !15160)
!15172 = distinct !{!15172, !15156, !15173}
!15173 = !DILocation(line: 121, column: 3, scope: !15154)
!15174 = !DILocation(line: 124, column: 41, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15176, file: !2348, line: 123, column: 18)
!15176 = distinct !DILexicalBlock(scope: !15107, file: !2348, line: 123, column: 7)
!15177 = !DILocation(line: 124, column: 4, scope: !15175)
!15178 = !DILocation(line: 125, column: 3, scope: !15175)
!15179 = !DILocation(line: 127, column: 13, scope: !15114)
!15180 = !DILocation(line: 127, column: 10, scope: !15114)
!15181 = !DILocation(line: 127, column: 7, scope: !15107)
!15182 = !DILocation(line: 137, column: 24, scope: !15113)
!15183 = !DILocation(line: 0, scope: !15113)
!15184 = !DILocation(line: 139, column: 18, scope: !15185)
!15185 = distinct !DILexicalBlock(scope: !15113, file: !2348, line: 139, column: 8)
!15186 = !DILocation(line: 139, column: 23, scope: !15185)
!15187 = !DILocation(line: 141, column: 5, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15185, file: !2348, line: 140, column: 48)
!15189 = !DILocation(line: 142, column: 4, scope: !15188)
!15190 = !DILocalVariable(name: "key", arg: 2, scope: !15191, file: !368, line: 190, type: !15101)
!15191 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !15192, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15194)
!15192 = !DISubroutineType(types: !15193)
!15193 = !{null, !15126, !15101}
!15194 = !{!15195, !15190}
!15195 = !DILocalVariable(name: "l", arg: 1, scope: !15191, file: !368, line: 189, type: !15126)
!15196 = !DILocation(line: 0, scope: !15191, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 102, column: 2, scope: !15108)
!15198 = !DILocalVariable(name: "key", arg: 1, scope: !15199, file: !6266, line: 84, type: !32)
!15199 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6266, file: !6266, line: 84, type: !6277, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15200)
!15200 = !{!15198}
!15201 = !DILocation(line: 0, scope: !15199, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15197)
!15203 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15202)
!15204 = !{i64 2599590}
!15205 = !DILocation(line: 148, column: 1, scope: !15088)
!15206 = distinct !DISubprogram(name: "elapsed", scope: !2348, file: !2348, line: 62, type: !15207, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !162)
!15207 = !DISubroutineType(types: !15208)
!15208 = !{!643}
!15209 = !DILocation(line: 64, column: 9, scope: !15206)
!15210 = !DILocation(line: 64, column: 28, scope: !15206)
!15211 = !DILocation(line: 64, column: 35, scope: !15206)
!15212 = !DILocation(line: 64, column: 2, scope: !15206)
!15213 = distinct !DISubprogram(name: "first", scope: !2348, file: !2348, line: 39, type: !15214, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15216)
!15214 = !DISubroutineType(types: !15215)
!15215 = !{!2321}
!15216 = !{!15217}
!15217 = !DILocalVariable(name: "t", scope: !15213, file: !2348, line: 41, type: !15218)
!15218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!15219 = !DILocation(line: 41, column: 19, scope: !15213)
!15220 = !DILocation(line: 0, scope: !15213)
!15221 = !DILocation(line: 43, column: 9, scope: !15213)
!15222 = !DILocation(line: 43, column: 2, scope: !15213)
!15223 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !15224, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15226)
!15224 = !DISubroutineType(types: !15225)
!15225 = !{null, !15218, !15218}
!15226 = !{!15227, !15228, !15229}
!15227 = !DILocalVariable(name: "successor", arg: 1, scope: !15223, file: !273, line: 443, type: !15218)
!15228 = !DILocalVariable(name: "node", arg: 2, scope: !15223, file: !273, line: 443, type: !15218)
!15229 = !DILocalVariable(name: "prev", scope: !15223, file: !273, line: 445, type: !15230)
!15230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15218)
!15231 = !DILocation(line: 0, scope: !15223)
!15232 = !DILocation(line: 445, column: 39, scope: !15223)
!15233 = !DILocation(line: 447, column: 8, scope: !15223)
!15234 = !DILocation(line: 447, column: 13, scope: !15223)
!15235 = !DILocation(line: 448, column: 8, scope: !15223)
!15236 = !DILocation(line: 448, column: 13, scope: !15223)
!15237 = !DILocation(line: 449, column: 8, scope: !15223)
!15238 = !DILocation(line: 449, column: 13, scope: !15223)
!15239 = !DILocation(line: 450, column: 18, scope: !15223)
!15240 = !DILocation(line: 451, column: 1, scope: !15223)
!15241 = distinct !DISubprogram(name: "next", scope: !2348, file: !2348, line: 46, type: !15242, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15244)
!15242 = !DISubroutineType(types: !15243)
!15243 = !{!2321, !2321}
!15244 = !{!15245, !15246}
!15245 = !DILocalVariable(name: "t", arg: 1, scope: !15241, file: !2348, line: 46, type: !2321)
!15246 = !DILocalVariable(name: "n", scope: !15241, file: !2348, line: 48, type: !15218)
!15247 = !DILocation(line: 0, scope: !15241)
!15248 = !DILocation(line: 48, column: 58, scope: !15241)
!15249 = !DILocation(line: 48, column: 19, scope: !15241)
!15250 = !DILocation(line: 50, column: 9, scope: !15241)
!15251 = !DILocation(line: 50, column: 2, scope: !15241)
!15252 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !15253, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15256)
!15253 = !DISubroutineType(types: !15254)
!15254 = !{null, !15255, !15218}
!15255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!15256 = !{!15257, !15258, !15259}
!15257 = !DILocalVariable(name: "list", arg: 1, scope: !15252, file: !273, line: 404, type: !15255)
!15258 = !DILocalVariable(name: "node", arg: 2, scope: !15252, file: !273, line: 404, type: !15218)
!15259 = !DILocalVariable(name: "tail", scope: !15252, file: !273, line: 406, type: !15230)
!15260 = !DILocation(line: 0, scope: !15252)
!15261 = !DILocation(line: 406, column: 34, scope: !15252)
!15262 = !DILocation(line: 408, column: 8, scope: !15252)
!15263 = !DILocation(line: 408, column: 13, scope: !15252)
!15264 = !DILocation(line: 409, column: 8, scope: !15252)
!15265 = !DILocation(line: 409, column: 13, scope: !15252)
!15266 = !DILocation(line: 411, column: 8, scope: !15252)
!15267 = !DILocation(line: 411, column: 13, scope: !15252)
!15268 = !DILocation(line: 412, column: 13, scope: !15252)
!15269 = !DILocation(line: 413, column: 1, scope: !15252)
!15270 = distinct !DISubprogram(name: "next_timeout", scope: !2348, file: !2348, line: 67, type: !15207, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15271)
!15271 = !{!15272, !15273, !15274}
!15272 = !DILocalVariable(name: "to", scope: !15270, file: !2348, line: 69, type: !2321)
!15273 = !DILocalVariable(name: "ticks_elapsed", scope: !15270, file: !2348, line: 70, type: !643)
!15274 = !DILocalVariable(name: "ret", scope: !15270, file: !2348, line: 71, type: !643)
!15275 = !DILocation(line: 69, column: 24, scope: !15270)
!15276 = !DILocation(line: 0, scope: !15270)
!15277 = !DILocation(line: 70, column: 26, scope: !15270)
!15278 = !DILocation(line: 73, column: 10, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15270, file: !2348, line: 73, column: 6)
!15280 = !DILocation(line: 73, column: 19, scope: !15279)
!15281 = !DILocation(line: 74, column: 21, scope: !15279)
!15282 = !DILocation(line: 74, column: 30, scope: !15279)
!15283 = !DILocation(line: 74, column: 28, scope: !15279)
!15284 = !DILocation(line: 74, column: 45, scope: !15279)
!15285 = !DILocation(line: 73, column: 6, scope: !15270)
!15286 = !DILocation(line: 77, column: 9, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15279, file: !2348, line: 76, column: 9)
!15288 = !DILocation(line: 0, scope: !15279)
!15289 = !DILocation(line: 81, column: 20, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15270, file: !2348, line: 81, column: 6)
!15291 = !DILocation(line: 81, column: 6, scope: !15290)
!15292 = !DILocation(line: 81, column: 32, scope: !15290)
!15293 = !DILocation(line: 85, column: 2, scope: !15270)
!15294 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !15295, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15297)
!15295 = !DISubroutineType(types: !15296)
!15296 = !{!15218, !15255, !15218}
!15297 = !{!15298, !15299}
!15298 = !DILocalVariable(name: "list", arg: 1, scope: !15294, file: !273, line: 341, type: !15255)
!15299 = !DILocalVariable(name: "node", arg: 2, scope: !15294, file: !273, line: 342, type: !15218)
!15300 = !DILocation(line: 0, scope: !15294)
!15301 = !DILocation(line: 344, column: 15, scope: !15294)
!15302 = !DILocation(line: 344, column: 9, scope: !15294)
!15303 = !DILocation(line: 344, column: 26, scope: !15294)
!15304 = !DILocation(line: 344, column: 2, scope: !15294)
!15305 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !15295, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15306)
!15306 = !{!15307, !15308}
!15307 = !DILocalVariable(name: "list", arg: 1, scope: !15305, file: !273, line: 325, type: !15255)
!15308 = !DILocalVariable(name: "node", arg: 2, scope: !15305, file: !273, line: 326, type: !15218)
!15309 = !DILocation(line: 0, scope: !15305)
!15310 = !DILocation(line: 328, column: 24, scope: !15305)
!15311 = !DILocation(line: 328, column: 15, scope: !15305)
!15312 = !DILocation(line: 328, column: 9, scope: !15305)
!15313 = !DILocation(line: 328, column: 45, scope: !15305)
!15314 = !DILocation(line: 328, column: 2, scope: !15305)
!15315 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !15316, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15318)
!15316 = !DISubroutineType(types: !15317)
!15317 = !{!15218, !15255}
!15318 = !{!15319}
!15319 = !DILocalVariable(name: "list", arg: 1, scope: !15315, file: !273, line: 294, type: !15255)
!15320 = !DILocation(line: 0, scope: !15315)
!15321 = !DILocation(line: 296, column: 9, scope: !15315)
!15322 = !DILocation(line: 296, column: 2, scope: !15315)
!15323 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !15324, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15326)
!15324 = !DISubroutineType(types: !15325)
!15325 = !{!211, !15255}
!15326 = !{!15327}
!15327 = !DILocalVariable(name: "list", arg: 1, scope: !15323, file: !273, line: 266, type: !15255)
!15328 = !DILocation(line: 0, scope: !15323)
!15329 = !DILocation(line: 268, column: 15, scope: !15323)
!15330 = !DILocation(line: 268, column: 20, scope: !15323)
!15331 = !DILocation(line: 268, column: 2, scope: !15323)
!15332 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2348, file: !2348, line: 150, type: !15333, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15335)
!15333 = !DISubroutineType(types: !15334)
!15334 = !{!103, !2321}
!15335 = !{!15336, !15337, !15338, !15340}
!15336 = !DILocalVariable(name: "to", arg: 1, scope: !15332, file: !2348, line: 150, type: !2321)
!15337 = !DILocalVariable(name: "ret", scope: !15332, file: !2348, line: 152, type: !103)
!15338 = !DILocalVariable(name: "__i", scope: !15339, file: !2348, line: 154, type: !15101)
!15339 = distinct !DILexicalBlock(scope: !15332, file: !2348, line: 154, column: 2)
!15340 = !DILocalVariable(name: "__key", scope: !15339, file: !2348, line: 154, type: !15101)
!15341 = !DILocation(line: 0, scope: !15332)
!15342 = !DILocation(line: 0, scope: !15339)
!15343 = !DILocation(line: 0, scope: !15123, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 154, column: 2, scope: !15339)
!15345 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15346)
!15346 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15344)
!15347 = !DILocation(line: 0, scope: !15132, inlinedAt: !15346)
!15348 = !DILocation(line: 155, column: 7, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !2348, line: 155, column: 7)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !2348, line: 154, column: 24)
!15351 = distinct !DILexicalBlock(scope: !15339, file: !2348, line: 154, column: 2)
!15352 = !DILocation(line: 155, column: 7, scope: !15350)
!15353 = !DILocation(line: 156, column: 4, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15349, file: !2348, line: 155, column: 39)
!15355 = !DILocation(line: 158, column: 3, scope: !15354)
!15356 = !DILocation(line: 0, scope: !15191, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 154, column: 2, scope: !15351)
!15358 = !DILocation(line: 0, scope: !15199, inlinedAt: !15359)
!15359 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15357)
!15360 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15359)
!15361 = !DILocation(line: 161, column: 2, scope: !15332)
!15362 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !15363, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15367)
!15363 = !DISubroutineType(types: !15364)
!15364 = !{!211, !15365}
!15365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15366, size: 32)
!15366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2325)
!15367 = !{!15368}
!15368 = !DILocalVariable(name: "node", arg: 1, scope: !15362, file: !273, line: 225, type: !15365)
!15369 = !DILocation(line: 0, scope: !15362)
!15370 = !DILocation(line: 227, column: 15, scope: !15362)
!15371 = !DILocation(line: 227, column: 20, scope: !15362)
!15372 = !DILocation(line: 227, column: 2, scope: !15362)
!15373 = distinct !DISubprogram(name: "remove_timeout", scope: !2348, file: !2348, line: 53, type: !2342, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15374)
!15374 = !{!15375}
!15375 = !DILocalVariable(name: "t", arg: 1, scope: !15373, file: !2348, line: 53, type: !2321)
!15376 = !DILocation(line: 0, scope: !15373)
!15377 = !DILocation(line: 55, column: 6, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15373, file: !2348, line: 55, column: 6)
!15379 = !DILocation(line: 55, column: 14, scope: !15378)
!15380 = !DILocation(line: 55, column: 6, scope: !15373)
!15381 = !DILocation(line: 56, column: 25, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15378, file: !2348, line: 55, column: 23)
!15383 = !DILocation(line: 56, column: 12, scope: !15382)
!15384 = !DILocation(line: 56, column: 19, scope: !15382)
!15385 = !DILocation(line: 57, column: 2, scope: !15382)
!15386 = !DILocation(line: 59, column: 23, scope: !15373)
!15387 = !DILocation(line: 59, column: 2, scope: !15373)
!15388 = !DILocation(line: 60, column: 1, scope: !15373)
!15389 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !15390, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15392)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{null, !15218}
!15392 = !{!15393, !15394, !15395}
!15393 = !DILocalVariable(name: "node", arg: 1, scope: !15389, file: !273, line: 496, type: !15218)
!15394 = !DILocalVariable(name: "prev", scope: !15389, file: !273, line: 498, type: !15230)
!15395 = !DILocalVariable(name: "next", scope: !15389, file: !273, line: 499, type: !15230)
!15396 = !DILocation(line: 0, scope: !15389)
!15397 = !DILocation(line: 498, column: 34, scope: !15389)
!15398 = !DILocation(line: 499, column: 34, scope: !15389)
!15399 = !DILocation(line: 501, column: 8, scope: !15389)
!15400 = !DILocation(line: 501, column: 13, scope: !15389)
!15401 = !DILocation(line: 502, column: 8, scope: !15389)
!15402 = !DILocation(line: 502, column: 13, scope: !15389)
!15403 = !DILocation(line: 503, column: 2, scope: !15389)
!15404 = !DILocation(line: 504, column: 1, scope: !15389)
!15405 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !15390, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15406)
!15406 = !{!15407}
!15407 = !DILocalVariable(name: "node", arg: 1, scope: !15405, file: !273, line: 211, type: !15218)
!15408 = !DILocation(line: 0, scope: !15405)
!15409 = !DILocation(line: 213, column: 8, scope: !15405)
!15410 = !DILocation(line: 213, column: 13, scope: !15405)
!15411 = !DILocation(line: 214, column: 8, scope: !15405)
!15412 = !DILocation(line: 214, column: 13, scope: !15405)
!15413 = !DILocation(line: 215, column: 1, scope: !15405)
!15414 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2348, file: !2348, line: 183, type: !15415, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15419)
!15415 = !DISubroutineType(types: !15416)
!15416 = !{!1559, !15417}
!15417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15418, size: 32)
!15418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2322)
!15419 = !{!15420, !15421, !15422, !15424}
!15420 = !DILocalVariable(name: "timeout", arg: 1, scope: !15414, file: !2348, line: 183, type: !15417)
!15421 = !DILocalVariable(name: "ticks", scope: !15414, file: !2348, line: 185, type: !1559)
!15422 = !DILocalVariable(name: "__i", scope: !15423, file: !2348, line: 187, type: !15101)
!15423 = distinct !DILexicalBlock(scope: !15414, file: !2348, line: 187, column: 2)
!15424 = !DILocalVariable(name: "__key", scope: !15423, file: !2348, line: 187, type: !15101)
!15425 = !DILocation(line: 0, scope: !15414)
!15426 = !DILocation(line: 0, scope: !15423)
!15427 = !DILocation(line: 0, scope: !15123, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 187, column: 2, scope: !15423)
!15429 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15428)
!15431 = !DILocation(line: 0, scope: !15132, inlinedAt: !15430)
!15432 = !DILocation(line: 188, column: 11, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15434, file: !2348, line: 187, column: 24)
!15434 = distinct !DILexicalBlock(scope: !15423, file: !2348, line: 187, column: 2)
!15435 = !DILocation(line: 0, scope: !15191, inlinedAt: !15436)
!15436 = distinct !DILocation(line: 187, column: 2, scope: !15434)
!15437 = !DILocation(line: 0, scope: !15199, inlinedAt: !15438)
!15438 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15436)
!15439 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15438)
!15440 = !DILocation(line: 191, column: 2, scope: !15414)
!15441 = distinct !DISubprogram(name: "timeout_rem", scope: !2348, file: !2348, line: 165, type: !15415, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15442)
!15442 = !{!15443, !15444, !15445}
!15443 = !DILocalVariable(name: "timeout", arg: 1, scope: !15441, file: !2348, line: 165, type: !15417)
!15444 = !DILocalVariable(name: "ticks", scope: !15441, file: !2348, line: 167, type: !1559)
!15445 = !DILocalVariable(name: "t", scope: !15446, file: !2348, line: 173, type: !2321)
!15446 = distinct !DILexicalBlock(scope: !15441, file: !2348, line: 173, column: 2)
!15447 = !DILocation(line: 0, scope: !15441)
!15448 = !DILocation(line: 169, column: 6, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15441, file: !2348, line: 169, column: 6)
!15450 = !DILocation(line: 169, column: 6, scope: !15441)
!15451 = !DILocation(line: 173, column: 28, scope: !15446)
!15452 = !DILocation(line: 0, scope: !15446)
!15453 = !DILocation(line: 173, column: 39, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15446, file: !2348, line: 173, column: 2)
!15455 = !DILocation(line: 173, column: 2, scope: !15446)
!15456 = !DILocation(line: 174, column: 15, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15454, file: !2348, line: 173, column: 61)
!15458 = !DILocation(line: 174, column: 9, scope: !15457)
!15459 = !DILocation(line: 175, column: 15, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15457, file: !2348, line: 175, column: 7)
!15461 = !DILocation(line: 175, column: 7, scope: !15457)
!15462 = !DILocation(line: 173, column: 52, scope: !15454)
!15463 = distinct !{!15463, !15455, !15464}
!15464 = !DILocation(line: 178, column: 2, scope: !15446)
!15465 = !DILocation(line: 180, column: 17, scope: !15441)
!15466 = !DILocation(line: 180, column: 15, scope: !15441)
!15467 = !DILocation(line: 180, column: 2, scope: !15441)
!15468 = !DILocation(line: 181, column: 1, scope: !15441)
!15469 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12778, file: !12778, line: 35, type: !15470, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15472)
!15470 = !DISubroutineType(types: !15471)
!15471 = !{!211, !15417}
!15472 = !{!15473}
!15473 = !DILocalVariable(name: "to", arg: 1, scope: !15469, file: !12778, line: 35, type: !15417)
!15474 = !DILocation(line: 0, scope: !15469)
!15475 = !DILocation(line: 37, column: 35, scope: !15469)
!15476 = !DILocation(line: 37, column: 10, scope: !15469)
!15477 = !DILocation(line: 37, column: 9, scope: !15469)
!15478 = !DILocation(line: 37, column: 2, scope: !15469)
!15479 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2348, file: !2348, line: 194, type: !15415, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15480)
!15480 = !{!15481, !15482, !15483, !15485}
!15481 = !DILocalVariable(name: "timeout", arg: 1, scope: !15479, file: !2348, line: 194, type: !15417)
!15482 = !DILocalVariable(name: "ticks", scope: !15479, file: !2348, line: 196, type: !1559)
!15483 = !DILocalVariable(name: "__i", scope: !15484, file: !2348, line: 198, type: !15101)
!15484 = distinct !DILexicalBlock(scope: !15479, file: !2348, line: 198, column: 2)
!15485 = !DILocalVariable(name: "__key", scope: !15484, file: !2348, line: 198, type: !15101)
!15486 = !DILocation(line: 0, scope: !15479)
!15487 = !DILocation(line: 0, scope: !15484)
!15488 = !DILocation(line: 0, scope: !15123, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 198, column: 2, scope: !15484)
!15490 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15489)
!15492 = !DILocation(line: 0, scope: !15132, inlinedAt: !15491)
!15493 = !DILocation(line: 199, column: 11, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15495, file: !2348, line: 198, column: 24)
!15495 = distinct !DILexicalBlock(scope: !15484, file: !2348, line: 198, column: 2)
!15496 = !DILocation(line: 199, column: 23, scope: !15494)
!15497 = !DILocation(line: 0, scope: !15191, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 198, column: 2, scope: !15495)
!15499 = !DILocation(line: 0, scope: !15199, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15498)
!15501 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15500)
!15502 = !DILocation(line: 199, column: 21, scope: !15494)
!15503 = !DILocation(line: 202, column: 2, scope: !15479)
!15504 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2348, file: !2348, line: 205, type: !15207, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15505)
!15505 = !{!15506, !15507, !15509}
!15506 = !DILocalVariable(name: "ret", scope: !15504, file: !2348, line: 207, type: !643)
!15507 = !DILocalVariable(name: "__i", scope: !15508, file: !2348, line: 209, type: !15101)
!15508 = distinct !DILexicalBlock(scope: !15504, file: !2348, line: 209, column: 2)
!15509 = !DILocalVariable(name: "__key", scope: !15508, file: !2348, line: 209, type: !15101)
!15510 = !DILocation(line: 0, scope: !15504)
!15511 = !DILocation(line: 0, scope: !15508)
!15512 = !DILocation(line: 0, scope: !15123, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 209, column: 2, scope: !15508)
!15514 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15513)
!15516 = !DILocation(line: 0, scope: !15132, inlinedAt: !15515)
!15517 = !DILocation(line: 210, column: 9, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15519, file: !2348, line: 209, column: 24)
!15519 = distinct !DILexicalBlock(scope: !15508, file: !2348, line: 209, column: 2)
!15520 = !DILocation(line: 0, scope: !15191, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 209, column: 2, scope: !15519)
!15522 = !DILocation(line: 0, scope: !15199, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15521)
!15524 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15523)
!15525 = !DILocation(line: 212, column: 2, scope: !15504)
!15526 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2348, file: !2348, line: 215, type: !10375, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15527)
!15527 = !{!15528, !15529, !15530, !15532, !15533, !15536, !15537}
!15528 = !DILocalVariable(name: "ticks", arg: 1, scope: !15526, file: !2348, line: 215, type: !643)
!15529 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15526, file: !2348, line: 215, type: !211)
!15530 = !DILocalVariable(name: "__i", scope: !15531, file: !2348, line: 217, type: !15101)
!15531 = distinct !DILexicalBlock(scope: !15526, file: !2348, line: 217, column: 2)
!15532 = !DILocalVariable(name: "__key", scope: !15531, file: !2348, line: 217, type: !15101)
!15533 = !DILocalVariable(name: "next_to", scope: !15534, file: !2348, line: 218, type: !103)
!15534 = distinct !DILexicalBlock(scope: !15535, file: !2348, line: 217, column: 24)
!15535 = distinct !DILexicalBlock(scope: !15531, file: !2348, line: 217, column: 2)
!15536 = !DILocalVariable(name: "sooner", scope: !15534, file: !2348, line: 219, type: !211)
!15537 = !DILocalVariable(name: "imminent", scope: !15534, file: !2348, line: 221, type: !211)
!15538 = !DILocation(line: 0, scope: !15526)
!15539 = !DILocation(line: 0, scope: !15531)
!15540 = !DILocation(line: 0, scope: !15123, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 217, column: 2, scope: !15531)
!15542 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15541)
!15544 = !DILocation(line: 0, scope: !15132, inlinedAt: !15543)
!15545 = !DILocation(line: 218, column: 17, scope: !15534)
!15546 = !DILocation(line: 0, scope: !15534)
!15547 = !DILocation(line: 221, column: 27, scope: !15534)
!15548 = !DILocation(line: 233, column: 17, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15534, file: !2348, line: 233, column: 7)
!15550 = !DILocation(line: 234, column: 26, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15549, file: !2348, line: 233, column: 56)
!15552 = !DILocation(line: 234, column: 4, scope: !15551)
!15553 = !DILocation(line: 235, column: 3, scope: !15551)
!15554 = !DILocation(line: 0, scope: !15191, inlinedAt: !15555)
!15555 = distinct !DILocation(line: 217, column: 2, scope: !15535)
!15556 = !DILocation(line: 0, scope: !15199, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15555)
!15558 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15557)
!15559 = !DILocation(line: 237, column: 1, scope: !15526)
!15560 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2348, file: !2348, line: 239, type: !15561, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15563)
!15561 = !DISubroutineType(types: !15562)
!15562 = !{null, !643}
!15563 = !{!15564, !15565, !15566, !15568}
!15564 = !DILocalVariable(name: "ticks", arg: 1, scope: !15560, file: !2348, line: 239, type: !643)
!15565 = !DILocalVariable(name: "key", scope: !15560, file: !2348, line: 245, type: !15101)
!15566 = !DILocalVariable(name: "t", scope: !15567, file: !2348, line: 262, type: !2321)
!15567 = distinct !DILexicalBlock(scope: !15560, file: !2348, line: 261, column: 67)
!15568 = !DILocalVariable(name: "dt", scope: !15567, file: !2348, line: 263, type: !103)
!15569 = !DILocation(line: 0, scope: !15560)
!15570 = !DILocation(line: 242, column: 2, scope: !15560)
!15571 = !DILocation(line: 0, scope: !15123, inlinedAt: !15572)
!15572 = distinct !DILocation(line: 245, column: 25, scope: !15560)
!15573 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15574)
!15574 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15572)
!15575 = !DILocation(line: 0, scope: !15132, inlinedAt: !15574)
!15576 = !DILocation(line: 261, column: 9, scope: !15560)
!15577 = !DILocation(line: 261, column: 17, scope: !15560)
!15578 = !DILocation(line: 261, column: 25, scope: !15560)
!15579 = !DILocation(line: 261, column: 37, scope: !15560)
!15580 = !DILocation(line: 261, column: 47, scope: !15560)
!15581 = !DILocation(line: 261, column: 44, scope: !15560)
!15582 = !DILocation(line: 261, column: 2, scope: !15560)
!15583 = !DILocation(line: 0, scope: !15567)
!15584 = !DILocation(line: 263, column: 12, scope: !15567)
!15585 = !DILocation(line: 265, column: 16, scope: !15567)
!15586 = !DILocation(line: 265, column: 13, scope: !15567)
!15587 = !DILocation(line: 266, column: 13, scope: !15567)
!15588 = !DILocation(line: 267, column: 3, scope: !15567)
!15589 = !DILocation(line: 0, scope: !15191, inlinedAt: !15590)
!15590 = distinct !DILocation(line: 269, column: 3, scope: !15567)
!15591 = !DILocation(line: 0, scope: !15199, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15590)
!15593 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15592)
!15594 = !DILocation(line: 270, column: 6, scope: !15567)
!15595 = !DILocation(line: 270, column: 3, scope: !15567)
!15596 = !DILocation(line: 0, scope: !15123, inlinedAt: !15597)
!15597 = distinct !DILocation(line: 271, column: 9, scope: !15567)
!15598 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15597)
!15600 = !DILocation(line: 0, scope: !15132, inlinedAt: !15599)
!15601 = !DILocation(line: 272, column: 22, scope: !15567)
!15602 = distinct !{!15602, !15582, !15603}
!15603 = !DILocation(line: 273, column: 2, scope: !15560)
!15604 = !DILocation(line: 276, column: 19, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2348, line: 275, column: 23)
!15606 = distinct !DILexicalBlock(scope: !15560, file: !2348, line: 275, column: 6)
!15607 = !DILocation(line: 277, column: 2, scope: !15605)
!15608 = !DILocation(line: 279, column: 15, scope: !15560)
!15609 = !DILocation(line: 279, column: 12, scope: !15560)
!15610 = !DILocation(line: 280, column: 21, scope: !15560)
!15611 = !DILocation(line: 282, column: 24, scope: !15560)
!15612 = !DILocation(line: 282, column: 2, scope: !15560)
!15613 = !DILocation(line: 0, scope: !15191, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 284, column: 2, scope: !15560)
!15615 = !DILocation(line: 0, scope: !15199, inlinedAt: !15616)
!15616 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15614)
!15617 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15616)
!15618 = !DILocation(line: 285, column: 1, scope: !15560)
!15619 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2348, file: !2348, line: 287, type: !15620, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15622)
!15620 = !DISubroutineType(types: !15621)
!15621 = !{!330}
!15622 = !{!15623, !15624, !15626}
!15623 = !DILocalVariable(name: "t", scope: !15619, file: !2348, line: 289, type: !163)
!15624 = !DILocalVariable(name: "__i", scope: !15625, file: !2348, line: 291, type: !15101)
!15625 = distinct !DILexicalBlock(scope: !15619, file: !2348, line: 291, column: 2)
!15626 = !DILocalVariable(name: "__key", scope: !15625, file: !2348, line: 291, type: !15101)
!15627 = !DILocation(line: 0, scope: !15619)
!15628 = !DILocation(line: 0, scope: !15625)
!15629 = !DILocation(line: 0, scope: !15123, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 291, column: 2, scope: !15625)
!15631 = !DILocation(line: 55, column: 2, scope: !15132, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 145, column: 10, scope: !15123, inlinedAt: !15630)
!15633 = !DILocation(line: 0, scope: !15132, inlinedAt: !15632)
!15634 = !DILocation(line: 292, column: 7, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15636, file: !2348, line: 291, column: 24)
!15636 = distinct !DILexicalBlock(scope: !15625, file: !2348, line: 291, column: 2)
!15637 = !DILocation(line: 292, column: 19, scope: !15635)
!15638 = !DILocation(line: 0, scope: !15191, inlinedAt: !15639)
!15639 = distinct !DILocation(line: 291, column: 2, scope: !15636)
!15640 = !DILocation(line: 0, scope: !15199, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 215, column: 2, scope: !15191, inlinedAt: !15639)
!15642 = !DILocation(line: 95, column: 2, scope: !15199, inlinedAt: !15641)
!15643 = !DILocation(line: 292, column: 17, scope: !15635)
!15644 = !DILocation(line: 294, column: 2, scope: !15619)
!15645 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2348, file: !2348, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !162)
!15646 = !DILocation(line: 300, column: 19, scope: !15645)
!15647 = !DILocation(line: 300, column: 9, scope: !15645)
!15648 = !DILocation(line: 300, column: 2, scope: !15645)
!15649 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2348, file: !2348, line: 306, type: !15620, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !162)
!15650 = !DILocation(line: 308, column: 9, scope: !15649)
!15651 = !DILocation(line: 308, column: 2, scope: !15649)
!15652 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2348, file: !2348, line: 319, type: !6529, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15653)
!15653 = !{!15654, !15655, !15656, !15657}
!15654 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15652, file: !2348, line: 319, type: !137)
!15655 = !DILocalVariable(name: "start_cycles", scope: !15652, file: !2348, line: 328, type: !137)
!15656 = !DILocalVariable(name: "cycles_to_wait", scope: !15652, file: !2348, line: 331, type: !137)
!15657 = !DILocalVariable(name: "current_cycles", scope: !15658, file: !2348, line: 338, type: !137)
!15658 = distinct !DILexicalBlock(scope: !15659, file: !2348, line: 337, column: 11)
!15659 = distinct !DILexicalBlock(scope: !15660, file: !2348, line: 337, column: 2)
!15660 = distinct !DILexicalBlock(scope: !15652, file: !2348, line: 337, column: 2)
!15661 = !DILocation(line: 0, scope: !15652)
!15662 = !DILocation(line: 322, column: 19, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15652, file: !2348, line: 322, column: 6)
!15664 = !DILocation(line: 322, column: 6, scope: !15652)
!15665 = !DILocation(line: 328, column: 26, scope: !15652)
!15666 = !DILocation(line: 333, column: 43, scope: !15652)
!15667 = !DILocation(line: 337, column: 2, scope: !15652)
!15668 = !DILocation(line: 338, column: 29, scope: !15658)
!15669 = !DILocation(line: 0, scope: !15658)
!15670 = !DILocation(line: 341, column: 23, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15658, file: !2348, line: 341, column: 7)
!15672 = !DILocation(line: 341, column: 39, scope: !15671)
!15673 = !DILocation(line: 349, column: 1, scope: !15652)
!15674 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !357, file: !357, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !162)
!15675 = !DILocation(line: 1677, column: 9, scope: !15674)
!15676 = !DILocation(line: 1677, column: 2, scope: !15674)
!15677 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15678, file: !15678, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !162)
!15678 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15679 = !DILocation(line: 26, column: 9, scope: !15677)
!15680 = !DILocation(line: 26, column: 2, scope: !15677)
!15681 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2348, file: !2348, line: 364, type: !15682, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2318, retainedNodes: !15684)
!15682 = !DISubroutineType(types: !15683)
!15683 = !{!163, !15091}
!15684 = !{!15685, !15686}
!15685 = !DILocalVariable(name: "timeout", arg: 1, scope: !15681, file: !2348, line: 364, type: !15091)
!15686 = !DILocalVariable(name: "dt", scope: !15681, file: !2348, line: 366, type: !1559)
!15687 = !DILocation(line: 0, scope: !15681)
!15688 = !DILocation(line: 368, column: 6, scope: !15681)
!15689 = !DILocation(line: 371, column: 10, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15691, file: !2348, line: 370, column: 47)
!15691 = distinct !DILexicalBlock(scope: !15692, file: !2348, line: 370, column: 13)
!15692 = distinct !DILexicalBlock(scope: !15681, file: !2348, line: 368, column: 6)
!15693 = !DILocation(line: 371, column: 3, scope: !15690)
!15694 = !DILocation(line: 376, column: 58, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15696, file: !2348, line: 376, column: 7)
!15696 = distinct !DILexicalBlock(scope: !15691, file: !2348, line: 372, column: 9)
!15697 = !DILocation(line: 376, column: 7, scope: !15696)
!15698 = !DILocation(line: 376, column: 43, scope: !15695)
!15699 = !DILocation(line: 377, column: 4, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15695, file: !2348, line: 376, column: 64)
!15701 = !DILocation(line: 379, column: 10, scope: !15696)
!15702 = !DILocation(line: 379, column: 33, scope: !15696)
!15703 = !DILocation(line: 379, column: 31, scope: !15696)
!15704 = !DILocation(line: 379, column: 3, scope: !15696)
!15705 = !DILocation(line: 0, scope: !15692)
!15706 = !DILocation(line: 381, column: 1, scope: !15681)
!15707 = distinct !DISubprogram(name: "boot_banner", scope: !15708, file: !15708, line: 26, type: !2964, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !162)
!15708 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15709 = !DILocation(line: 34, column: 2, scope: !15707)
!15710 = !DILocation(line: 36, column: 1, scope: !15707)
