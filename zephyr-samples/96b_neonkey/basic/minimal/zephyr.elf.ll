; ModuleID = 'build/96b_neonkey/minimal/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134227993 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134227973 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134227963 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228063 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228053 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228043 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228033 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228023 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228013 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134228003 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229840 to i8*), void (i8*)* inttoptr (i32 134227983 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.25 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !593
@.str.26 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !554
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !537
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !510
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !526
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !556
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !570
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !572
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !574
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !576
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !578
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !580
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !582
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !584
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !586
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !588
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !598
@.str.28 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !625
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !722
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !711
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !763
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !618
@.str.37 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !829
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1106
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1076
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1062
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1007
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !616
@.str.1.38 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1108
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1080
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1078
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1024
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !614
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1121
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1084
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1082
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1030
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !612
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1123
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1088
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1086
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1036
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !610
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1125
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1092
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1090
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1042
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !608
@.str.5 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1127
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1096
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1094
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1048
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !606
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1129
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1100
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1098
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !604
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1131
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1104
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1102
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1060
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !620
@.str.44 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1133
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1328
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1289
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1330
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1280
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1282
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1291
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1299
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1322
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1325
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !695
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1352
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1461
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1463
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1459
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1430
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1465
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1005
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.38, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1022
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1028
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1034
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1040
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1046
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1052
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1058
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1555
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1597
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1600
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1607
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1614
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1824
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1833
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1840
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1845
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.91 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.94, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.95, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.96, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.97, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.98, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.92, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.99, i32 0, i32 0)], align 4, !dbg !1873
@.str.93 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.94 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.95 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.96 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.97 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.98 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.92 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.99 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1985
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !1998
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2106
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2109
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2111
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1838
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1835
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2113
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2149
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1702
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2147
@.str.152 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2736 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2740, !srcloc !2741
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2742, !srcloc !2743
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2744, !srcloc !2745
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2746, !srcloc !2747
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2748, !srcloc !2749
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2750, !srcloc !2751
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2752, !srcloc !2753
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2754, !srcloc !2755
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2756, !srcloc !2757
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2758, !srcloc !2759
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2760, !srcloc !2761
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2762, !srcloc !2763
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2764, !srcloc !2765
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2766, !srcloc !2767
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2768, !srcloc !2769
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2770, !srcloc !2771
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2772, !srcloc !2773
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2774, !srcloc !2775
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2776, !srcloc !2777
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2778, !srcloc !2779
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2780, !srcloc !2781
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2782, !srcloc !2783
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2784, !srcloc !2785
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2786, !srcloc !2787
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2788, !srcloc !2789
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2790, !srcloc !2791
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2792, !srcloc !2793
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2794, !srcloc !2797
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2798, !srcloc !2799
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2800, !srcloc !2801
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2802, !srcloc !2803
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2804, !srcloc !2805
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2806, !srcloc !2807
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2808, !srcloc !2809
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2810, !srcloc !2811
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2812, !srcloc !2813
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2814, !srcloc !2815
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2816, !srcloc !2817
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2818, !srcloc !2819
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2820, !srcloc !2821
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2822, !srcloc !2823
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2824, !srcloc !2825
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2826, !srcloc !2827
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2828, !srcloc !2829
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2830, !srcloc !2831
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2832, !srcloc !2833
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2834, !srcloc !2835
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2836, !srcloc !2837
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2838, !srcloc !2839
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2840, !srcloc !2841
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2842, !srcloc !2843
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2844, !srcloc !2845
  ret void, !dbg !2846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @main() local_unnamed_addr #2 !dbg !2849 {
  ret void, !dbg !2851
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2854, metadata !DIExpression()), !dbg !2855
  ret i32 0, !dbg !2856
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2857 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2861, metadata !DIExpression()), !dbg !2862
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2863
  ret void, !dbg !2864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2865 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2868
  ret i8* %1, !dbg !2869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2870 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2882, metadata !DIExpression()), !dbg !2893
  call void @llvm.dbg.value(metadata i8* %0, metadata !2881, metadata !DIExpression()), !dbg !2893
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !2894
  ret void, !dbg !2896
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2901, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.value(metadata i8* %1, metadata !2902, metadata !DIExpression()), !dbg !2903
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2904
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !2904
  ret i32 %4, !dbg !2905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2906 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2918, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2915, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.value(metadata i8* %1, metadata !2916, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.value(metadata i8* %2, metadata !2917, metadata !DIExpression()), !dbg !2919
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !2920
  ret void, !dbg !2921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !2922 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2926, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.value(metadata i32 %1, metadata !2927, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.value(metadata i32 0, metadata !2928, metadata !DIExpression()), !dbg !2929
  %3 = icmp eq i32 %1, 0, !dbg !2930
  br i1 %3, label %13, label %4, !dbg !2933

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2928, metadata !DIExpression()), !dbg !2929
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2934
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !2936
  %8 = load i8, i8* %7, align 1, !dbg !2936
  %9 = zext i8 %8 to i32, !dbg !2936
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !2934
  %11 = add nuw i32 %5, 1, !dbg !2937
  call void @llvm.dbg.value(metadata i32 %11, metadata !2928, metadata !DIExpression()), !dbg !2929
  %12 = icmp eq i32 %11, %1, !dbg !2930
  br i1 %12, label %13, label %4, !dbg !2933, !llvm.loop !2938

13:                                               ; preds = %4, %2
  ret void, !dbg !2940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !2941 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2945, metadata !DIExpression()), !dbg !2947
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !2948
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !2948
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2946, metadata !DIExpression()), !dbg !2949
  call void @llvm.va_start(i8* nonnull %3), !dbg !2950
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !2951
  %5 = load i32, i32* %4, align 4, !dbg !2951
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !2951
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !2951
  call void @llvm.va_end(i8* nonnull %3), !dbg !2952
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !2953
  ret void, !dbg !2953
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !2954 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2958, metadata !DIExpression()), !dbg !2963
  call void @llvm.dbg.value(metadata i32 %1, metadata !2959, metadata !DIExpression()), !dbg !2963
  call void @llvm.dbg.value(metadata i8* %2, metadata !2960, metadata !DIExpression()), !dbg !2963
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2964
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !2964
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2961, metadata !DIExpression()), !dbg !2965
  call void @llvm.va_start(i8* nonnull %5), !dbg !2966
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2967
  %7 = load i32, i32* %6, align 4, !dbg !2967
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2967
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !2967
  call void @llvm.dbg.value(metadata i32 %9, metadata !2962, metadata !DIExpression()), !dbg !2963
  call void @llvm.va_end(i8* nonnull %5), !dbg !2968
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !2969
  ret i32 %9, !dbg !2970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !2971 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !2978, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.value(metadata i8* %0, metadata !2975, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.value(metadata i32 %1, metadata !2976, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.value(metadata i8* %2, metadata !2977, metadata !DIExpression()), !dbg !2985
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !2986
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !2986
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !2979, metadata !DIExpression()), !dbg !2987
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !2988
  store i8* %0, i8** %7, align 4, !dbg !2988
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !2988
  store i32 %1, i32* %8, align 4, !dbg !2988
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !2988
  store i32 0, i32* %9, align 4, !dbg !2988
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !2989
  %10 = load i32, i32* %9, align 4, !dbg !2990
  %11 = load i32, i32* %8, align 4, !dbg !2992
  %12 = icmp slt i32 %10, %11, !dbg !2993
  br i1 %12, label %13, label %15, !dbg !2994

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !2995
  store i8 0, i8* %14, align 1, !dbg !2997
  br label %15, !dbg !2998

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !2999
  ret i32 %10, !dbg !3000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3006, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3007, metadata !DIExpression()), !dbg !3008
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3009
  %4 = load i8*, i8** %3, align 4, !dbg !3009
  %5 = icmp eq i8* %4, null, !dbg !3011
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3012
  br i1 %5, label %12, label %8, !dbg !3013

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3014
  %10 = load i32, i32* %9, align 4, !dbg !3014
  %11 = icmp slt i32 %7, %10, !dbg !3015
  br i1 %11, label %15, label %12, !dbg !3016

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3017
  %14 = add nsw i32 %7, 1, !dbg !3019
  store i32 %14, i32* %13, align 4, !dbg !3019
  br label %25, !dbg !3020

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3021
  %17 = icmp eq i32 %7, %16, !dbg !3023
  br i1 %17, label %18, label %21, !dbg !3024

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3025
  store i32 %19, i32* %6, align 4, !dbg !3025
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3027
  store i8 0, i8* %20, align 1, !dbg !3028
  br label %25, !dbg !3029

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3030
  %23 = add nsw i32 %7, 1, !dbg !3032
  store i32 %23, i32* %6, align 4, !dbg !3032
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3033
  store i8 %22, i8* %24, align 1, !dbg !3034
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3035
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #9 !dbg !3036 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3046, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i8* %1, metadata !3047, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i8* %2, metadata !3048, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i8* %3, metadata !3049, metadata !DIExpression()), !dbg !3050
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3051
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3052
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3053
  unreachable, !dbg !3054
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3055 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3159
  ret %struct.k_thread* %1, !dbg !3160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3161 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3166, metadata !DIExpression()), !dbg !3167
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3168, !srcloc !3170
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3171
  ret void, !dbg !3172
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !3173 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3174, !srcloc !3176
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3177
  ret %struct.k_thread* %1, !dbg !3178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3179 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3192, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3189, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %1, metadata !3190, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %2, metadata !3191, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %4, metadata !3193, metadata !DIExpression()), !dbg !3320
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3321
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3321
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3194, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata i32 0, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i1 undef, metadata !3200, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3320
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3323

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3323

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3324
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3192, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %30, metadata !3191, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %29, metadata !3198, metadata !DIExpression()), !dbg !3320
  %31 = load i8, i8* %30, align 1, !dbg !3325
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3323

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3325
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3326
  call void @llvm.dbg.value(metadata i8* %34, metadata !3191, metadata !DIExpression()), !dbg !3320
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !3326
  call void @llvm.dbg.value(metadata i32 %35, metadata !3202, metadata !DIExpression()), !dbg !3327
  %36 = icmp slt i32 %35, 0, !dbg !3328
  %37 = add i32 %29, 1, !dbg !3326
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %36, label %365, label %28, !llvm.loop !3330

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3332
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3207, metadata !DIExpression()), !dbg !3333
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3333
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3252, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3255, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* %30, metadata !3258, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i32 -1, metadata !3259, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i32 -1, metadata !3260, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* null, metadata !3261, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* %14, metadata !3262, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8 0, metadata !3263, metadata !DIExpression()), !dbg !3334
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !3335
  call void @llvm.dbg.value(metadata i8* %39, metadata !3191, metadata !DIExpression()), !dbg !3320
  %40 = load i24, i24* %15, align 8, !dbg !3336
  %41 = and i24 %40, 256, !dbg !3336
  %42 = icmp eq i24 %41, 0, !dbg !3336
  br i1 %42, label %51, label %43, !dbg !3338

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3339
  call void @llvm.dbg.value(metadata i8* %44, metadata !3192, metadata !DIExpression()), !dbg !3320
  %45 = bitcast i8* %27 to i32*, !dbg !3339
  %46 = load i32, i32* %45, align 4, !dbg !3339
  call void @llvm.dbg.value(metadata i32 %46, metadata !3259, metadata !DIExpression()), !dbg !3334
  %47 = icmp slt i32 %46, 0, !dbg !3341
  br i1 %47, label %48, label %56, !dbg !3343

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3344
  store i24 %49, i24* %15, align 8, !dbg !3344
  %50 = sub nsw i32 0, %46, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %50, metadata !3259, metadata !DIExpression()), !dbg !3334
  br label %56, !dbg !3347

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3348
  %53 = icmp eq i24 %52, 0, !dbg !3348
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3350
  br label %56, !dbg !3350

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3351
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3334
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3192, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %58, metadata !3259, metadata !DIExpression()), !dbg !3334
  %60 = and i24 %57, 1024, !dbg !3351
  %61 = icmp eq i24 %60, 0, !dbg !3351
  br i1 %61, label %69, label %62, !dbg !3352

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3353
  call void @llvm.dbg.value(metadata i8* %63, metadata !3192, metadata !DIExpression()), !dbg !3320
  %64 = bitcast i8* %59 to i32*, !dbg !3353
  %65 = load i32, i32* %64, align 4, !dbg !3353
  call void @llvm.dbg.value(metadata i32 %65, metadata !3264, metadata !DIExpression()), !dbg !3354
  %66 = icmp slt i32 %65, 0, !dbg !3355
  br i1 %66, label %67, label %74, !dbg !3357

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3358
  store i24 %68, i24* %15, align 8, !dbg !3358
  br label %74, !dbg !3360

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3361
  %71 = icmp eq i24 %70, 0, !dbg !3361
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3363
  br label %74, !dbg !3363

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3364
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3334
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3334
  call void @llvm.dbg.value(metadata i8* %77, metadata !3192, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %76, metadata !3260, metadata !DIExpression()), !dbg !3334
  store i32 0, i32* %16, align 4, !dbg !3365
  store i32 0, i32* %17, align 8, !dbg !3366
  %78 = lshr i24 %75, 16, !dbg !3364
  call void @llvm.dbg.value(metadata i24 %78, metadata !3267, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3334
  %79 = lshr i24 %75, 11, !dbg !3367
  %80 = and i24 %79, 15, !dbg !3367
  %81 = zext i24 %80 to i32, !dbg !3367
  call void @llvm.dbg.value(metadata i32 %81, metadata !3268, metadata !DIExpression()), !dbg !3334
  %82 = trunc i24 %78 to i3, !dbg !3368
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3368

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3369

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3372
  call void @llvm.dbg.value(metadata i8* %85, metadata !3192, metadata !DIExpression()), !dbg !3320
  %86 = bitcast i8* %77 to i32*, !dbg !3372
  %87 = load i32, i32* %86, align 4, !dbg !3372
  %88 = sext i32 %87 to i64, !dbg !3372
  store i64 %88, i64* %20, align 8, !dbg !3374
  br label %115, !dbg !3375

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3376
  call void @llvm.dbg.value(metadata i8* %90, metadata !3192, metadata !DIExpression()), !dbg !3320
  %91 = bitcast i8* %77 to i32*, !dbg !3376
  %92 = load i32, i32* %91, align 4, !dbg !3376
  %93 = sext i32 %92 to i64, !dbg !3376
  store i64 %93, i64* %20, align 8, !dbg !3379
  br label %115, !dbg !3380

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3381
  %96 = add i32 %95, 7, !dbg !3381
  %97 = and i32 %96, -8, !dbg !3381
  %98 = inttoptr i32 %97 to i8*, !dbg !3381
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3381
  call void @llvm.dbg.value(metadata i8* %99, metadata !3192, metadata !DIExpression()), !dbg !3320
  %100 = inttoptr i32 %97 to i64*, !dbg !3381
  %101 = load i64, i64* %100, align 8, !dbg !3381
  store i64 %101, i64* %20, align 8, !dbg !3382
  br label %115, !dbg !3383

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3384
  %104 = add i32 %103, 7, !dbg !3384
  %105 = and i32 %104, -8, !dbg !3384
  %106 = inttoptr i32 %105 to i8*, !dbg !3384
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3384
  call void @llvm.dbg.value(metadata i8* %107, metadata !3192, metadata !DIExpression()), !dbg !3320
  %108 = inttoptr i32 %105 to i64*, !dbg !3384
  %109 = load i64, i64* %108, align 8, !dbg !3384
  store i64 %109, i64* %20, align 8, !dbg !3385
  br label %115, !dbg !3386

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3387
  call void @llvm.dbg.value(metadata i8* %111, metadata !3192, metadata !DIExpression()), !dbg !3320
  %112 = bitcast i8* %77 to i32*, !dbg !3387
  %113 = load i32, i32* %112, align 4, !dbg !3387
  %114 = sext i32 %113 to i64, !dbg !3388
  store i64 %114, i64* %20, align 8, !dbg !3389
  br label %115, !dbg !3390

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3391
  call void @llvm.dbg.value(metadata i8* %117, metadata !3192, metadata !DIExpression()), !dbg !3320
  %118 = trunc i24 %79 to i4, !dbg !3392
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3392

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3393
  %121 = ashr exact i64 %120, 56, !dbg !3393
  store i64 %121, i64* %20, align 8, !dbg !3396
  br label %177, !dbg !3397

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3398
  %124 = ashr exact i64 %123, 48, !dbg !3398
  store i64 %124, i64* %20, align 8, !dbg !3401
  br label %177, !dbg !3402

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3403

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3406
  call void @llvm.dbg.value(metadata i8* %127, metadata !3192, metadata !DIExpression()), !dbg !3320
  %128 = bitcast i8* %77 to i32*, !dbg !3406
  %129 = load i32, i32* %128, align 4, !dbg !3406
  %130 = zext i32 %129 to i64, !dbg !3406
  store i64 %130, i64* %20, align 8, !dbg !3408
  br label %157, !dbg !3409

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3410
  call void @llvm.dbg.value(metadata i8* %132, metadata !3192, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %132, metadata !3192, metadata !DIExpression()), !dbg !3320
  %133 = bitcast i8* %77 to i32*, !dbg !3410
  %134 = load i32, i32* %133, align 4, !dbg !3410
  %135 = zext i32 %134 to i64, !dbg !3410
  store i64 %135, i64* %20, align 8, !dbg !3410
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3412
  %138 = add i32 %137, 7, !dbg !3412
  %139 = and i32 %138, -8, !dbg !3412
  %140 = inttoptr i32 %139 to i8*, !dbg !3412
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3412
  call void @llvm.dbg.value(metadata i8* %141, metadata !3192, metadata !DIExpression()), !dbg !3320
  %142 = inttoptr i32 %139 to i64*, !dbg !3412
  %143 = load i64, i64* %142, align 8, !dbg !3412
  store i64 %143, i64* %20, align 8, !dbg !3413
  br label %157, !dbg !3414

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3415
  %146 = add i32 %145, 7, !dbg !3415
  %147 = and i32 %146, -8, !dbg !3415
  %148 = inttoptr i32 %147 to i8*, !dbg !3415
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3415
  call void @llvm.dbg.value(metadata i8* %149, metadata !3192, metadata !DIExpression()), !dbg !3320
  %150 = inttoptr i32 %147 to i64*, !dbg !3415
  %151 = load i64, i64* %150, align 8, !dbg !3415
  store i64 %151, i64* %20, align 8, !dbg !3416
  br label %157, !dbg !3417

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3418
  call void @llvm.dbg.value(metadata i8* %153, metadata !3192, metadata !DIExpression()), !dbg !3320
  %154 = bitcast i8* %77 to i32*, !dbg !3418
  %155 = load i32, i32* %154, align 4, !dbg !3418
  %156 = zext i32 %155 to i64, !dbg !3419
  store i64 %156, i64* %20, align 8, !dbg !3420
  br label %157, !dbg !3421

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3422
  call void @llvm.dbg.value(metadata i8* %159, metadata !3192, metadata !DIExpression()), !dbg !3320
  %160 = trunc i24 %79 to i4, !dbg !3423
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3423

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3424
  store i64 %162, i64* %20, align 8, !dbg !3427
  br label %177, !dbg !3428

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3429
  store i64 %164, i64* %20, align 8, !dbg !3432
  br label %177, !dbg !3433

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3434
  %167 = add i32 %166, 7, !dbg !3434
  %168 = and i32 %167, -8, !dbg !3434
  %169 = inttoptr i32 %168 to i8*, !dbg !3434
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3434
  call void @llvm.dbg.value(metadata i8* %170, metadata !3192, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %170, metadata !3192, metadata !DIExpression()), !dbg !3320
  %171 = inttoptr i32 %168 to double*, !dbg !3434
  %172 = load double, double* %171, align 8, !dbg !3434
  store double %172, double* %19, align 8, !dbg !3434
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3438
  call void @llvm.dbg.value(metadata i8* %174, metadata !3192, metadata !DIExpression()), !dbg !3320
  %175 = bitcast i8* %77 to i8**, !dbg !3438
  %176 = load i8*, i8** %175, align 4, !dbg !3438
  store i8* %176, i8** %18, align 8, !dbg !3441
  br label %177, !dbg !3442

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3334
  call void @llvm.dbg.value(metadata i8* %178, metadata !3192, metadata !DIExpression()), !dbg !3320
  %179 = and i24 %75, 3, !dbg !3443
  %180 = icmp eq i24 %179, 0, !dbg !3443
  br i1 %180, label %185, label %181, !dbg !3443

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !3444
  call void @llvm.dbg.value(metadata i32 %182, metadata !3269, metadata !DIExpression()), !dbg !3445
  %183 = icmp slt i32 %182, 0, !dbg !3446
  %184 = add i32 %182, %29, !dbg !3444
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3448
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3449

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %188, metadata !3273, metadata !DIExpression()), !dbg !3451
  %189 = icmp slt i32 %188, 0, !dbg !3452
  %190 = add i32 %29, 1, !dbg !3450
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3454
  call void @llvm.dbg.value(metadata i8* %192, metadata !3261, metadata !DIExpression()), !dbg !3334
  %193 = icmp sgt i32 %76, -1, !dbg !3455
  br i1 %193, label %194, label %196, !dbg !3457

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %195, metadata !3276, metadata !DIExpression()), !dbg !3460
  br label %241, !dbg !3461

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %197, metadata !3276, metadata !DIExpression()), !dbg !3460
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3261, metadata !DIExpression()), !dbg !3334
  %199 = load i64, i64* %20, align 8, !dbg !3464
  %200 = trunc i64 %199 to i8, !dbg !3465
  store i8 %200, i8* %10, align 1, !dbg !3466
  call void @llvm.dbg.value(metadata i8* %23, metadata !3262, metadata !DIExpression()), !dbg !3334
  br label %245, !dbg !3467

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3468
  %203 = icmp eq i24 %202, 0, !dbg !3468
  %204 = trunc i24 %75 to i8, !dbg !3470
  %205 = shl i8 %204, 1, !dbg !3470
  %206 = and i8 %205, 32, !dbg !3470
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3470
  call void @llvm.dbg.value(metadata i8 %207, metadata !3263, metadata !DIExpression()), !dbg !3334
  %208 = load i64, i64* %20, align 8, !dbg !3471
  call void @llvm.dbg.value(metadata i64 %208, metadata !3199, metadata !DIExpression()), !dbg !3320
  %209 = icmp slt i64 %208, 0, !dbg !3472
  br i1 %209, label %210, label %212, !dbg !3474

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3263, metadata !DIExpression()), !dbg !3334
  %211 = sub nsw i64 0, %208, !dbg !3475
  store i64 %211, i64* %20, align 8, !dbg !3477
  br label %212, !dbg !3478

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3334
  call void @llvm.dbg.value(metadata i8 %213, metadata !3263, metadata !DIExpression()), !dbg !3334
  %214 = load i64, i64* %20, align 8, !dbg !3479
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3480
  call void @llvm.dbg.value(metadata i8* %215, metadata !3261, metadata !DIExpression()), !dbg !3334
  br label %216, !dbg !3481

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3482
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3483
  call void @llvm.dbg.value(metadata i8* %218, metadata !3261, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8 %217, metadata !3263, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.label(metadata !3319), !dbg !3484
  %219 = icmp sgt i32 %76, -1, !dbg !3485
  br i1 %219, label %222, label %220, !dbg !3486

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3487
  br label %245, !dbg !3486

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3489
  %224 = sub i32 %22, %223, !dbg !3489
  call void @llvm.dbg.value(metadata i32 %224, metadata !3278, metadata !DIExpression()), !dbg !3490
  %225 = load i24, i24* %15, align 8, !dbg !3491
  %226 = and i24 %225, -65, !dbg !3491
  store i24 %226, i24* %15, align 8, !dbg !3491
  %227 = icmp ugt i32 %76, %224, !dbg !3492
  br i1 %227, label %228, label %245, !dbg !3494

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3495
  store i32 %229, i32* %16, align 4, !dbg !3497
  br label %245, !dbg !3498

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3499
  %232 = icmp eq i8* %231, null, !dbg !3501
  br i1 %232, label %245, label %233, !dbg !3502

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3503
  %235 = zext i32 %234 to i64, !dbg !3503
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3505
  call void @llvm.dbg.value(metadata i8* %236, metadata !3261, metadata !DIExpression()), !dbg !3334
  %237 = load i24, i24* %15, align 8, !dbg !3506
  %238 = or i24 %237, 1048576, !dbg !3506
  store i24 %238, i24* %15, align 8, !dbg !3506
  store i8 120, i8* %21, align 1, !dbg !3507
  br label %216, !dbg !3508

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3509
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !3512
  br label %363, !dbg !3513

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3514
  call void @llvm.dbg.value(metadata i32 %242, metadata !3276, metadata !DIExpression()), !dbg !3460
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3515
  call void @llvm.dbg.value(metadata i32 -1, metadata !3260, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i32 %29, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8* %192, metadata !3261, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* %243, metadata !3262, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8 0, metadata !3263, metadata !DIExpression()), !dbg !3334
  %244 = icmp eq i8* %192, null, !dbg !3516
  br i1 %244, label %363, label %245, !dbg !3518, !llvm.loop !3330

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3487
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3334
  call void @llvm.dbg.value(metadata i32 0, metadata !3282, metadata !DIExpression()), !dbg !3334
  %250 = zext i8 %249 to i32, !dbg !3519
  %251 = icmp eq i8 %249, 0, !dbg !3521
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3334
  %252 = icmp sgt i32 %58, 0, !dbg !3522
  br i1 %252, label %253, label %302, !dbg !3523

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3487
  %255 = icmp eq i24 %254, 0, !dbg !3487
  %256 = ptrtoint i8* %248 to i32, !dbg !3524
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  %257 = ptrtoint i8* %247 to i32, !dbg !3524
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  %258 = xor i1 %251, true, !dbg !3525
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  %259 = sext i1 %258 to i32, !dbg !3525
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  %260 = lshr i24 %246, 19, !dbg !3526
  %261 = and i24 %260, 1, !dbg !3526
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3526
  %263 = zext i24 %262 to i32, !dbg !3526
  %264 = add i32 %257, %259, !dbg !3526
  %265 = add i32 %256, %263, !dbg !3526
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  %266 = and i24 %246, 4194304, !dbg !3527
  %267 = icmp eq i24 %266, 0, !dbg !3527
  %268 = load i32, i32* %16, align 4, !dbg !3529
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3334
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3334
  %269 = load i32, i32* %17, align 8, !dbg !3530
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3530
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3334
  %271 = add i32 %264, %58, !dbg !3530
  %272 = add i32 %265, %268, !dbg !3530
  %273 = add i32 %272, %270, !dbg !3531
  %274 = sub i32 %271, %273, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %274, metadata !3259, metadata !DIExpression()), !dbg !3334
  %275 = and i24 %246, 4, !dbg !3532
  %276 = icmp eq i24 %275, 0, !dbg !3532
  br i1 %276, label %277, label %302, !dbg !3533

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3283, metadata !DIExpression()), !dbg !3534
  %278 = and i24 %246, 64, !dbg !3535
  %279 = icmp eq i24 %278, 0, !dbg !3535
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3536
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3536
  %282 = select i1 %279, i32 32, i32 48, !dbg !3536
  br i1 %280, label %287, label %283, !dbg !3536

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !3537
  call void @llvm.dbg.value(metadata i32 %284, metadata !3288, metadata !DIExpression()), !dbg !3538
  %285 = icmp slt i32 %284, 0, !dbg !3539
  %286 = add i32 %29, 1, !dbg !3537
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3334
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %290, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i8 undef, metadata !3283, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i8 %288, metadata !3263, metadata !DIExpression()), !dbg !3334
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3541
  %292 = add i32 %291, -1, !dbg !3541
  br label %293, !dbg !3541

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3542
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %295, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %294, metadata !3259, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i32 %294, metadata !3259, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3334
  %296 = icmp sgt i32 %294, 0, !dbg !3543
  br i1 %296, label %297, label %302, !dbg !3541

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3544
  call void @llvm.dbg.value(metadata i32 %298, metadata !3259, metadata !DIExpression()), !dbg !3334
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %299, metadata !3294, metadata !DIExpression()), !dbg !3546
  %300 = icmp slt i32 %299, 0, !dbg !3547
  %301 = add i32 %295, 1, !dbg !3545
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %300, label %361, label %293, !llvm.loop !3549

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3334
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3334
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %305, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %304, metadata !3259, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8 %303, metadata !3263, metadata !DIExpression()), !dbg !3334
  %306 = icmp eq i8 %303, 0, !dbg !3551
  br i1 %306, label %312, label %307, !dbg !3552

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3553
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !3554
  call void @llvm.dbg.value(metadata i32 %309, metadata !3297, metadata !DIExpression()), !dbg !3555
  %310 = icmp slt i32 %309, 0, !dbg !3556
  %311 = add i32 %305, 1, !dbg !3554
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %313, metadata !3198, metadata !DIExpression()), !dbg !3320
  %314 = lshr i24 %246, 20, !dbg !3558
  %315 = lshr i24 %246, 19, !dbg !3559
  %316 = or i24 %314, %315, !dbg !3560
  %317 = and i24 %316, 1, !dbg !3560
  %318 = icmp eq i24 %317, 0, !dbg !3560
  br i1 %318, label %323, label %319, !dbg !3561

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %320, metadata !3301, metadata !DIExpression()), !dbg !3563
  %321 = icmp slt i32 %320, 0, !dbg !3564
  %322 = add i32 %313, 1, !dbg !3562
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %324, metadata !3198, metadata !DIExpression()), !dbg !3320
  %325 = and i24 %246, 1048576, !dbg !3566
  %326 = icmp eq i24 %325, 0, !dbg !3566
  br i1 %326, label %333, label %327, !dbg !3567

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3568
  %329 = zext i8 %328 to i32, !dbg !3568
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %330, metadata !3307, metadata !DIExpression()), !dbg !3569
  %331 = icmp slt i32 %330, 0, !dbg !3570
  %332 = add i32 %324, 1, !dbg !3568
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %334, metadata !3198, metadata !DIExpression()), !dbg !3320
  %335 = load i32, i32* %16, align 4, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %335, metadata !3282, metadata !DIExpression()), !dbg !3334
  br label %336, !dbg !3573

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3574
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %338, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %337, metadata !3282, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3334
  %339 = icmp sgt i32 %337, 0, !dbg !3575
  br i1 %339, label %340, label %345, !dbg !3573

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %341, metadata !3282, metadata !DIExpression()), !dbg !3334
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3577
  call void @llvm.dbg.value(metadata i32 %342, metadata !3311, metadata !DIExpression()), !dbg !3578
  %343 = icmp slt i32 %342, 0, !dbg !3579
  %344 = add i32 %338, 1, !dbg !3577
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %343, label %361, label %336, !llvm.loop !3581

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !3583
  call void @llvm.dbg.value(metadata i32 %346, metadata !3314, metadata !DIExpression()), !dbg !3584
  %347 = icmp slt i32 %346, 0, !dbg !3585
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3583
  call void @llvm.dbg.value(metadata i32 %349, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %304, metadata !3259, metadata !DIExpression()), !dbg !3334
  %350 = icmp sgt i32 %304, 0, !dbg !3587
  br i1 %350, label %351, label %363, !dbg !3588

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3588
  %353 = add i32 %352, %338, !dbg !3588
  br label %354, !dbg !3588

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %355, metadata !3259, metadata !DIExpression()), !dbg !3334
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !3589
  call void @llvm.dbg.value(metadata i32 %356, metadata !3316, metadata !DIExpression()), !dbg !3590
  %357 = icmp slt i32 %356, 0, !dbg !3591
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3593
  call void @llvm.dbg.value(metadata i32 undef, metadata !3198, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3320
  call void @llvm.dbg.value(metadata i32 %359, metadata !3259, metadata !DIExpression()), !dbg !3334
  %360 = icmp sgt i32 %355, 1, !dbg !3587
  br i1 %360, label %354, label %363, !dbg !3588, !llvm.loop !3594

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3331
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %364, metadata !3198, metadata !DIExpression()), !dbg !3320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3331
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3320
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3596
  ret i32 %366, !dbg !3596
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #11

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !3597 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3601, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i8* %1, metadata !3602, metadata !DIExpression()), !dbg !3603
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3604
  store i24 0, i24* %3, align 4, !dbg !3604
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3604
  store i8 0, i8* %4, align 1, !dbg !3604
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3604
  store i32 0, i32* %5, align 4, !dbg !3604
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3604
  store i32 0, i32* %6, align 4, !dbg !3604
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %7, metadata !3602, metadata !DIExpression()), !dbg !3603
  %8 = load i8, i8* %7, align 1, !dbg !3606
  %9 = icmp eq i8 %8, 37, !dbg !3608
  br i1 %9, label %10, label %12, !dbg !3609

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3610
  call void @llvm.dbg.value(metadata i8* %11, metadata !3602, metadata !DIExpression()), !dbg !3603
  store i8 37, i8* %4, align 1, !dbg !3612
  br label %18, !dbg !3613

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %13, metadata !3602, metadata !DIExpression()), !dbg !3603
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !3615
  call void @llvm.dbg.value(metadata i8* %14, metadata !3602, metadata !DIExpression()), !dbg !3603
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !3616
  call void @llvm.dbg.value(metadata i8* %15, metadata !3602, metadata !DIExpression()), !dbg !3603
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !3617
  call void @llvm.dbg.value(metadata i8* %16, metadata !3602, metadata !DIExpression()), !dbg !3603
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !3618
  call void @llvm.dbg.value(metadata i8* %17, metadata !3602, metadata !DIExpression()), !dbg !3603
  br label %18, !dbg !3619

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3603
  ret i8* %19, !dbg !3620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3621 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3625, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* %1, metadata !3626, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* %2, metadata !3627, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* %3, metadata !3628, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 0, metadata !3629, metadata !DIExpression()), !dbg !3632
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3633

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3634
  call void @llvm.dbg.value(metadata i32 %9, metadata !3629, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* %8, metadata !3627, metadata !DIExpression()), !dbg !3632
  %10 = icmp ult i8* %8, %3, !dbg !3635
  br i1 %10, label %11, label %13, !dbg !3636

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3637
  br label %17, !dbg !3636

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3638

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3639
  %16 = icmp eq i8 %15, 0, !dbg !3638
  br i1 %16, label %24, label %17, !dbg !3633

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3637
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3640
  call void @llvm.dbg.value(metadata i8* %19, metadata !3627, metadata !DIExpression()), !dbg !3632
  %20 = zext i8 %18 to i32, !dbg !3641
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !3642
  call void @llvm.dbg.value(metadata i32 %21, metadata !3630, metadata !DIExpression()), !dbg !3643
  %22 = icmp slt i32 %21, 0, !dbg !3644
  %23 = add i32 %9, 1, !dbg !3646
  call void @llvm.dbg.value(metadata i32 undef, metadata !3629, metadata !DIExpression()), !dbg !3632
  br i1 %22, label %24, label %7, !llvm.loop !3647

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3632
  ret i32 %25, !dbg !3649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !3650 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3654, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3655, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i8* %2, metadata !3656, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i8* %3, metadata !3657, metadata !DIExpression()), !dbg !3664
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3665
  %6 = load i8, i8* %5, align 1, !dbg !3665
  %7 = zext i8 %6 to i32, !dbg !3666
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !3667
  %9 = icmp eq i32 %8, 0, !dbg !3667
  call void @llvm.dbg.value(metadata i1 %9, metadata !3658, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3664
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %10, metadata !3659, metadata !DIExpression()), !dbg !3664
  %11 = ptrtoint i8* %3 to i32, !dbg !3669
  %12 = ptrtoint i8* %2 to i32, !dbg !3669
  %13 = sub i32 %11, %12, !dbg !3669
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3670
  call void @llvm.dbg.value(metadata i8* %14, metadata !3661, metadata !DIExpression()), !dbg !3664
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3671

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3664
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3654, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i8* %18, metadata !3661, metadata !DIExpression()), !dbg !3664
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3672
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %25, metadata !3662, metadata !DIExpression()), !dbg !3674
  %26 = icmp ult i32 %25, 10, !dbg !3675
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3676
  %28 = add i32 %27, %25, !dbg !3674
  %29 = trunc i32 %28 to i8, !dbg !3676
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3677
  call void @llvm.dbg.value(metadata i8* %30, metadata !3661, metadata !DIExpression()), !dbg !3664
  store i8 %29, i8* %30, align 1, !dbg !3678
  call void @llvm.dbg.value(metadata i64 %22, metadata !3654, metadata !DIExpression()), !dbg !3664
  %31 = icmp uge i64 %19, %15, !dbg !3679
  %32 = icmp ugt i8* %30, %2, !dbg !3680
  %33 = and i1 %31, %32, !dbg !3680
  br i1 %33, label %17, label %34, !dbg !3681, !llvm.loop !3682

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3684
  %36 = load i24, i24* %35, align 4, !dbg !3684
  %37 = and i24 %36, 32, !dbg !3684
  %38 = icmp eq i24 %37, 0, !dbg !3684
  br i1 %38, label %44, label %39, !dbg !3686

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3687

40:                                               ; preds = %39
  br label %41, !dbg !3689

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3693
  store i24 %43, i24* %35, align 4, !dbg !3693
  br label %44, !dbg !3694

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3694
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !3695 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3701, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8* %1, metadata !3702, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 %2, metadata !3703, metadata !DIExpression()), !dbg !3704
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3705
  %5 = load i24, i24* %4, align 4, !dbg !3705
  %6 = lshr i24 %5, 11, !dbg !3705
  %7 = and i24 %6, 15, !dbg !3705
  %8 = zext i24 %7 to i32, !dbg !3705
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3706

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3707
  store i32 %2, i32* %10, align 4, !dbg !3709
  br label %28, !dbg !3710

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3711
  store i8 %12, i8* %1, align 1, !dbg !3712
  br label %28, !dbg !3713

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3714
  %15 = bitcast i8* %1 to i16*, !dbg !3715
  store i16 %14, i16* %15, align 2, !dbg !3716
  br label %28, !dbg !3717

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3718
  store i32 %2, i32* %17, align 4, !dbg !3719
  br label %28, !dbg !3720

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3721
  %20 = bitcast i8* %1 to i64*, !dbg !3722
  store i64 %19, i64* %20, align 8, !dbg !3723
  br label %28, !dbg !3724

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3725
  %23 = bitcast i8* %1 to i64*, !dbg !3726
  store i64 %22, i64* %23, align 8, !dbg !3727
  br label %28, !dbg !3728

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3729
  store i32 %2, i32* %25, align 4, !dbg !3730
  br label %28, !dbg !3731

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3732
  store i32 %2, i32* %27, align 4, !dbg !3733
  br label %28, !dbg !3734

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3735
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !3736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3739, metadata !DIExpression()), !dbg !3740
  %2 = add i32 %0, -65, !dbg !3741
  %3 = icmp ult i32 %2, 26, !dbg !3742
  %4 = zext i1 %3 to i32, !dbg !3742
  ret i32 %4, !dbg !3743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3744 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3748, metadata !DIExpression()), !dbg !3749
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3750

2:                                                ; preds = %1
  br label %4, !dbg !3751

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3753

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3754
  ret i32 %5, !dbg !3755
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !3756 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3758, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %1, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 1, metadata !3760, metadata !DIExpression()), !dbg !3761
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3762

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %5, metadata !3759, metadata !DIExpression()), !dbg !3761
  %6 = load i8, i8* %5, align 1, !dbg !3763
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3765

7:                                                ; preds = %4
  br label %11, !dbg !3766

8:                                                ; preds = %4
  br label %11, !dbg !3768

9:                                                ; preds = %4
  br label %11, !dbg !3769

10:                                               ; preds = %4
  br label %11, !dbg !3770

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3771
  %14 = or i24 %13, %12, !dbg !3771
  store i24 %14, i24* %3, align 4, !dbg !3771
  call void @llvm.dbg.value(metadata i8 poison, metadata !3760, metadata !DIExpression()), !dbg !3761
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3759, metadata !DIExpression()), !dbg !3761
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %15, metadata !3759, metadata !DIExpression()), !dbg !3761
  %17 = load i24, i24* %3, align 4, !dbg !3772
  %18 = and i24 %17, 68, !dbg !3774
  %19 = icmp eq i24 %18, 68, !dbg !3774
  br i1 %19, label %20, label %22, !dbg !3774

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3775
  store i24 %21, i24* %3, align 4, !dbg !3775
  br label %22, !dbg !3777

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !3779 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3781, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %1, metadata !3782, metadata !DIExpression()), !dbg !3785
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3786
  %5 = load i24, i24* %4, align 4, !dbg !3787
  %6 = or i24 %5, 128, !dbg !3787
  store i24 %6, i24* %4, align 4, !dbg !3787
  call void @llvm.dbg.value(metadata i8* %1, metadata !3782, metadata !DIExpression()), !dbg !3785
  %7 = load i8, i8* %1, align 1, !dbg !3788
  %8 = icmp eq i8 %7, 42, !dbg !3790
  br i1 %8, label %9, label %12, !dbg !3791

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3792
  store i24 %10, i24* %4, align 4, !dbg !3792
  call void @llvm.dbg.value(metadata i8* %1, metadata !3782, metadata !DIExpression()), !dbg !3785
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3794
  call void @llvm.dbg.value(metadata i8* %11, metadata !3782, metadata !DIExpression()), !dbg !3785
  store i8* %11, i8** %3, align 4, !dbg !3794
  br label %29, !dbg !3795

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3783, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8** %3, metadata !3782, metadata !DIExpression(DW_OP_deref)), !dbg !3785
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %13, metadata !3784, metadata !DIExpression()), !dbg !3785
  %14 = load i8*, i8** %3, align 4, !dbg !3797
  call void @llvm.dbg.value(metadata i8* %14, metadata !3782, metadata !DIExpression()), !dbg !3785
  %15 = icmp eq i8* %14, %1, !dbg !3799
  br i1 %15, label %29, label %16, !dbg !3800

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3801
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3803
  store i32 %13, i32* %18, align 4, !dbg !3804
  %19 = lshr i32 %13, 31, !dbg !3805
  %20 = lshr i24 %17, 1, !dbg !3806
  %21 = and i24 %20, 1, !dbg !3806
  %22 = zext i24 %21 to i32, !dbg !3806
  %23 = or i32 %19, %22, !dbg !3806
  %24 = trunc i32 %23 to i24, !dbg !3806
  %25 = shl nuw nsw i24 %24, 1, !dbg !3806
  %26 = and i24 %17, -131, !dbg !3806
  %27 = or i24 %26, 128, !dbg !3806
  %28 = or i24 %25, %27, !dbg !3806
  store i24 %28, i24* %4, align 4, !dbg !3806
  br label %29, !dbg !3807

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3785
  ret i8* %30, !dbg !3808
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !3809 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3811, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i8* %1, metadata !3812, metadata !DIExpression()), !dbg !3814
  %4 = load i8, i8* %1, align 1, !dbg !3815
  %5 = icmp eq i8 %4, 46, !dbg !3816
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !3817
  %7 = load i24, i24* %6, align 4, !dbg !3818
  %8 = select i1 %5, i24 512, i24 0, !dbg !3818
  %9 = and i24 %7, -513, !dbg !3818
  %10 = or i24 %9, %8, !dbg !3818
  store i24 %10, i24* %6, align 4, !dbg !3818
  br i1 %5, label %11, label %32, !dbg !3819

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3812, metadata !DIExpression()), !dbg !3814
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %12, metadata !3812, metadata !DIExpression()), !dbg !3814
  store i8* %12, i8** %3, align 4, !dbg !3820
  %13 = load i8, i8* %12, align 1, !dbg !3821
  %14 = icmp eq i8 %13, 42, !dbg !3823
  br i1 %14, label %15, label %18, !dbg !3824

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !3825
  store i24 %16, i24* %6, align 4, !dbg !3825
  call void @llvm.dbg.value(metadata i8* %12, metadata !3812, metadata !DIExpression()), !dbg !3814
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3827
  call void @llvm.dbg.value(metadata i8* %17, metadata !3812, metadata !DIExpression()), !dbg !3814
  store i8* %17, i8** %3, align 4, !dbg !3827
  br label %32, !dbg !3828

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !3812, metadata !DIExpression(DW_OP_deref)), !dbg !3814
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %19, metadata !3813, metadata !DIExpression()), !dbg !3814
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3830
  store i32 %19, i32* %20, align 4, !dbg !3831
  %21 = lshr i32 %19, 31, !dbg !3832
  %22 = load i24, i24* %6, align 4, !dbg !3833
  %23 = lshr i24 %22, 1, !dbg !3833
  %24 = and i24 %23, 1, !dbg !3833
  %25 = zext i24 %24 to i32, !dbg !3833
  %26 = or i32 %21, %25, !dbg !3833
  %27 = trunc i32 %26 to i24, !dbg !3833
  %28 = shl nuw nsw i24 %27, 1, !dbg !3833
  %29 = and i24 %22, -3, !dbg !3833
  %30 = or i24 %28, %29, !dbg !3833
  store i24 %30, i24* %6, align 4, !dbg !3833
  %31 = load i8*, i8** %3, align 4, !dbg !3834
  call void @llvm.dbg.value(metadata i8* %31, metadata !3812, metadata !DIExpression()), !dbg !3814
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !3814
  ret i8* %33, !dbg !3835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !3836 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3838, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i8* %1, metadata !3839, metadata !DIExpression()), !dbg !3840
  %3 = load i8, i8* %1, align 1, !dbg !3841
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !3842

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3843
  call void @llvm.dbg.value(metadata i8* %5, metadata !3839, metadata !DIExpression()), !dbg !3840
  %6 = load i8, i8* %5, align 1, !dbg !3846
  %7 = icmp eq i8 %6, 104, !dbg !3847
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3848
  %9 = load i24, i24* %8, align 4, !dbg !3848
  %10 = and i24 %9, -30721, !dbg !3848
  br i1 %7, label %11, label %14, !dbg !3849

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !3850
  store i24 %12, i24* %8, align 4, !dbg !3850
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3852
  call void @llvm.dbg.value(metadata i8* %13, metadata !3839, metadata !DIExpression()), !dbg !3840
  br label %56, !dbg !3853

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !3854
  store i24 %15, i24* %8, align 4, !dbg !3854
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3856
  call void @llvm.dbg.value(metadata i8* %17, metadata !3839, metadata !DIExpression()), !dbg !3840
  %18 = load i8, i8* %17, align 1, !dbg !3858
  %19 = icmp eq i8 %18, 108, !dbg !3859
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !3860
  %21 = load i24, i24* %20, align 4, !dbg !3860
  %22 = and i24 %21, -30721, !dbg !3860
  br i1 %19, label %23, label %26, !dbg !3861

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !3862
  store i24 %24, i24* %20, align 4, !dbg !3862
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %25, metadata !3839, metadata !DIExpression()), !dbg !3840
  br label %56, !dbg !3865

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !3866
  store i24 %27, i24* %20, align 4, !dbg !3866
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !3868
  %30 = load i24, i24* %29, align 4, !dbg !3869
  %31 = and i24 %30, -30721, !dbg !3869
  %32 = or i24 %31, 10240, !dbg !3869
  store i24 %32, i24* %29, align 4, !dbg !3869
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3870
  call void @llvm.dbg.value(metadata i8* %33, metadata !3839, metadata !DIExpression()), !dbg !3840
  br label %56, !dbg !3871

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !3872
  %36 = load i24, i24* %35, align 4, !dbg !3873
  %37 = and i24 %36, -30721, !dbg !3873
  %38 = or i24 %37, 12288, !dbg !3873
  store i24 %38, i24* %35, align 4, !dbg !3873
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %39, metadata !3839, metadata !DIExpression()), !dbg !3840
  br label %56, !dbg !3875

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !3876
  %42 = load i24, i24* %41, align 4, !dbg !3877
  %43 = and i24 %42, -30721, !dbg !3877
  %44 = or i24 %43, 14336, !dbg !3877
  store i24 %44, i24* %41, align 4, !dbg !3877
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3878
  call void @llvm.dbg.value(metadata i8* %45, metadata !3839, metadata !DIExpression()), !dbg !3840
  br label %56, !dbg !3879

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !3880
  %48 = load i24, i24* %47, align 4, !dbg !3881
  %49 = and i24 %48, -30723, !dbg !3881
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3882
  call void @llvm.dbg.value(metadata i8* %50, metadata !3839, metadata !DIExpression()), !dbg !3840
  %51 = or i24 %49, 16386, !dbg !3883
  store i24 %51, i24* %47, align 4, !dbg !3883
  br label %56, !dbg !3884

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !3885
  %54 = load i24, i24* %53, align 4, !dbg !3886
  %55 = and i24 %54, -30721, !dbg !3886
  store i24 %55, i24* %53, align 4, !dbg !3886
  br label %56, !dbg !3887

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !3839, metadata !DIExpression()), !dbg !3840
  ret i8* %57, !dbg !3888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !3889 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3891, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i8* %1, metadata !3892, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i8 0, metadata !3893, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i8* %1, metadata !3892, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3896
  %3 = load i8, i8* %1, align 1, !dbg !3897
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3898
  store i8 %3, i8* %4, align 1, !dbg !3899
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !3900

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !3901

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3902
  %9 = load i24, i24* %8, align 4, !dbg !3902
  %10 = and i24 %9, -458753, !dbg !3902
  %11 = or i24 %10, %7, !dbg !3902
  call void @llvm.dbg.label(metadata !3894), !dbg !3903
  %12 = and i24 %9, 30720, !dbg !3904
  %13 = icmp eq i24 %12, 16384, !dbg !3904
  %14 = zext i1 %13 to i24, !dbg !3906
  %15 = or i24 %11, %14, !dbg !3906
  %16 = icmp eq i8 %3, 99, !dbg !3907
  br i1 %16, label %17, label %43, !dbg !3909

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !3910
  %19 = icmp ne i24 %18, 0, !dbg !3910
  call void @llvm.dbg.value(metadata i1 %19, metadata !3893, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3896
  br label %43, !dbg !3912

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !3913
  %22 = load i24, i24* %21, align 4, !dbg !3914
  %23 = and i24 %22, -458753, !dbg !3914
  %24 = or i24 %23, 262144, !dbg !3914
  call void @llvm.dbg.value(metadata i8 1, metadata !3893, metadata !DIExpression()), !dbg !3896
  br label %43, !dbg !3915

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !3918
  %27 = load i24, i24* %26, align 4, !dbg !3919
  %28 = and i24 %27, -458753, !dbg !3919
  %29 = or i24 %28, 196608, !dbg !3919
  %30 = and i24 %27, 30720, !dbg !3920
  %31 = icmp eq i24 %30, 16384, !dbg !3920
  br label %43, !dbg !3922

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !3923
  %34 = load i24, i24* %33, align 4, !dbg !3924
  %35 = and i24 %34, -458753, !dbg !3924
  %36 = or i24 %35, 196608, !dbg !3924
  %37 = and i24 %34, 30720, !dbg !3925
  %38 = icmp ne i24 %37, 0, !dbg !3925
  br label %43, !dbg !3927

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !3928
  %41 = load i24, i24* %40, align 4, !dbg !3929
  %42 = or i24 %41, 1, !dbg !3929
  br label %43, !dbg !3930

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !3931
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !3932
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3933
  call void @llvm.dbg.value(metadata i8* %48, metadata !3892, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i8 poison, metadata !3893, metadata !DIExpression()), !dbg !3896
  %49 = lshr i24 %44, 1, !dbg !3931
  %50 = and i24 %49, 1, !dbg !3931
  %51 = zext i24 %50 to i32, !dbg !3931
  %52 = or i32 %51, %47, !dbg !3931
  %53 = trunc i32 %52 to i24, !dbg !3931
  %54 = shl nuw nsw i24 %53, 1, !dbg !3931
  %55 = and i24 %44, -3, !dbg !3931
  %56 = or i24 %54, %55, !dbg !3931
  store i24 %56, i24* %46, align 4, !dbg !3931
  ret i8* %48, !dbg !3934
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !3935 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !3940, metadata !DIExpression()), !dbg !3943
  %2 = load i8*, i8** %0, align 4, !dbg !3944
  call void @llvm.dbg.value(metadata i8* %2, metadata !3941, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 0, metadata !3942, metadata !DIExpression()), !dbg !3943
  %3 = load i8, i8* %2, align 1, !dbg !3945
  %4 = zext i8 %3 to i32, !dbg !3946
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !3947
  %6 = icmp eq i32 %5, 0, !dbg !3948
  br i1 %6, label %19, label %7, !dbg !3948

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3942, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i8* %10, metadata !3941, metadata !DIExpression()), !dbg !3943
  %11 = mul i32 %9, 10, !dbg !3949
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !3951
  call void @llvm.dbg.value(metadata i8* %12, metadata !3941, metadata !DIExpression()), !dbg !3943
  %13 = add i32 %11, -48, !dbg !3952
  %14 = add i32 %13, %8, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %14, metadata !3942, metadata !DIExpression()), !dbg !3943
  %15 = load i8, i8* %12, align 1, !dbg !3945
  %16 = zext i8 %15 to i32, !dbg !3946
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !3947
  %18 = icmp eq i32 %17, 0, !dbg !3948
  br i1 %18, label %19, label %7, !dbg !3948, !llvm.loop !3954

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !3943
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !3943
  store i8* %20, i8** %0, align 4, !dbg !3956
  ret i32 %21, !dbg !3957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !3958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3960, metadata !DIExpression()), !dbg !3961
  %2 = add i32 %0, -48, !dbg !3962
  %3 = icmp ult i32 %2, 10, !dbg !3963
  %4 = zext i1 %3 to i32, !dbg !3963
  ret i32 %4, !dbg !3964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !3965 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !3967, !srcloc !3968
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !3969, !srcloc !3970
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !3971, !srcloc !3972
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !3973, !srcloc !3974
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !3975, !srcloc !3976
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !3977, !srcloc !3978
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !3979, !srcloc !3980
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !3981, !srcloc !3982
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !3983, !srcloc !3984
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !3985, !srcloc !3986
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !3987, !srcloc !3988
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !3989, !srcloc !3990
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !3991, !srcloc !3992
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !3993, !srcloc !3994
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !3995, !srcloc !3996
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !3997, !srcloc !3998
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !3999, !srcloc !4000
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4001, !srcloc !4002
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4003, !srcloc !4004
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4005, !srcloc !4006
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4007, !srcloc !4008
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4009, !srcloc !4010
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4011, !srcloc !4012
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4013, !srcloc !4014
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4015, !srcloc !4016
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4017, !srcloc !4018
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4019, !srcloc !4020
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4021, !srcloc !4022
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4023, !srcloc !4024
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4025, !srcloc !4026
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4027, !srcloc !4028
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4029, !srcloc !4030
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4031, !srcloc !4032
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4033, !srcloc !4034
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4035, !srcloc !4036
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4037, !srcloc !4038
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4039, !srcloc !4040
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4041, !srcloc !4042
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4043, !srcloc !4044
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4045, !srcloc !4046
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4047, !srcloc !4048
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4049, !srcloc !4050
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4051, !srcloc !4052
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4053, !srcloc !4054
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4055, !srcloc !4056
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4057, !srcloc !4058
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !4059, !srcloc !4060
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4061, !srcloc !4062
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4063, !srcloc !4064
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4065, !srcloc !4066
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4067, !srcloc !4068
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4069, !srcloc !4070
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4071, !srcloc !4072
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4073, !srcloc !4074
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4075, !srcloc !4076
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4077, !srcloc !4078
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4079, !srcloc !4080
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4081, !srcloc !4082
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4083, !srcloc !4084
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4085, !srcloc !4086
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4087, !srcloc !4088
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4089, !srcloc !4090
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4091, !srcloc !4092
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4093, !srcloc !4094
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4095, !srcloc !4096
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4097, !srcloc !4098
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4099, !srcloc !4100
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4101, !srcloc !4102
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4103, !srcloc !4104
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4105, !srcloc !4106
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4107, !srcloc !4108
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4109, !srcloc !4110
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4111, !srcloc !4112
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4113, !srcloc !4114
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4115, !srcloc !4116
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4117, !srcloc !4118
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4119, !srcloc !4120
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4121, !srcloc !4122
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4123, !srcloc !4124
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4125, !srcloc !4126
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4127, !srcloc !4128
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !4129, !srcloc !4130
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4131, !srcloc !4132
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4133, !srcloc !4134
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4135, !srcloc !4136
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4137, !srcloc !4138
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4139, !srcloc !4140
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !4141, !srcloc !4142
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4143, !srcloc !4144
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4145, !srcloc !4146
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4147, !srcloc !4148
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4149, !srcloc !4150
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4151, !srcloc !4152
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4153, !srcloc !4154
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4155, !srcloc !4156
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4157, !srcloc !4158
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4159, !srcloc !4160
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4161, !srcloc !4162
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4163, !srcloc !4164
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4165, !srcloc !4166
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4167, !srcloc !4168
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4169, !srcloc !4170
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4171, !srcloc !4172
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4173, !srcloc !4174
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4175, !srcloc !4176
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4177, !srcloc !4178
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4179, !srcloc !4180
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4181, !srcloc !4182
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4183, !srcloc !4184
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4185, !srcloc !4186
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4187, !srcloc !4188
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4189, !srcloc !4190
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4191, !srcloc !4192
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4193, !srcloc !4194
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4195, !srcloc !4196
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4197, !srcloc !4198
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4199, !srcloc !4200
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4201, !srcloc !4202
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4203, !srcloc !4204
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4205, !srcloc !4206
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4207, !srcloc !4208
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4209, !srcloc !4210
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4211, !srcloc !4212
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4213, !srcloc !4214
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4215, !srcloc !4216
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4217, !srcloc !4218
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4219, !srcloc !4220
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4221, !srcloc !4222
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4223, !srcloc !4224
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4225, !srcloc !4226
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4227, !srcloc !4228
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4229, !srcloc !4230
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4231, !srcloc !4232
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4233, !srcloc !4234
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4235, !srcloc !4236
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4237, !srcloc !4238
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4239, !srcloc !4240
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4241, !srcloc !4242
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4243, !srcloc !4244
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4245, !srcloc !4246
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4247, !srcloc !4248
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4249, !srcloc !4250
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4251, !srcloc !4252
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4253, !srcloc !4254
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4255, !srcloc !4256
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4257, !srcloc !4258
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4259, !srcloc !4260
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4261, !srcloc !4262
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4263, !srcloc !4264
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4265, !srcloc !4266
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4267, !srcloc !4268
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4269, !srcloc !4270
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4271, !srcloc !4272
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4273, !srcloc !4274
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4275, !srcloc !4276
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4277, !srcloc !4278
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4279, !srcloc !4280
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4281, !srcloc !4282
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4283, !srcloc !4284
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4285, !srcloc !4286
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4287, !srcloc !4288
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4289, !srcloc !4290
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4291, !srcloc !4292
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4293, !srcloc !4294
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4295, !srcloc !4296
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4297, !srcloc !4298
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4299, !srcloc !4300
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4301, !srcloc !4302
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4303, !srcloc !4304
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4305, !srcloc !4306
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4307, !srcloc !4308
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4309, !srcloc !4310
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4311, !srcloc !4312
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4313, !srcloc !4314
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4315, !srcloc !4316
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4317, !srcloc !4318
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4319, !srcloc !4320
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4321, !srcloc !4322
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4323, !srcloc !4324
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4325, !srcloc !4326
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4327, !srcloc !4328
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4329, !srcloc !4330
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4331, !srcloc !4332
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4333, !srcloc !4334
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4335, !srcloc !4336
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4337, !srcloc !4338
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4339, !srcloc !4340
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4341, !srcloc !4342
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4343, !srcloc !4344
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4345, !srcloc !4346
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4347, !srcloc !4348
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4349, !srcloc !4350
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4351, !srcloc !4352
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4353, !srcloc !4354
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4355, !srcloc !4356
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4357, !srcloc !4358
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4359, !srcloc !4360
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4361, !srcloc !4362
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4363, !srcloc !4364
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4365, !srcloc !4366
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4367, !srcloc !4368
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4369, !srcloc !4370
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4371, !srcloc !4372
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4373, !srcloc !4374
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4375, !srcloc !4376
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4511, !srcloc !4512
  ret void, !dbg !4513
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4516, metadata !DIExpression()), !dbg !4518
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !4519
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !4520
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4521, !srcloc !4530
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %3, metadata !4527, metadata !DIExpression()) #23, !dbg !4531
  call void @llvm.dbg.value(metadata i32 undef, metadata !4528, metadata !DIExpression()) #23, !dbg !4531
  call void @llvm.dbg.value(metadata i32 %3, metadata !4517, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.value(metadata i32 %3, metadata !4532, metadata !DIExpression()) #23, !dbg !4537
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4539, !srcloc !4540
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4541
  ret i32 0, !dbg !4542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4543 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4545
  %2 = or i32 %1, 512, !dbg !4545
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4545
  ret void, !dbg !4546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4547 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4548
  %2 = or i32 %1, 1024, !dbg !4548
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4548
  ret void, !dbg !4549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !4550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4552, metadata !DIExpression()), !dbg !4553
  ret i32 0, !dbg !4554
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4604, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4605, metadata !DIExpression()), !dbg !4606
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !4607
  ret void, !dbg !4608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4609 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4626, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4627, metadata !DIExpression()), !dbg !4629
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4630
  %4 = load i32, i32* %3, align 4, !dbg !4630
  call void @llvm.dbg.value(metadata i32 %4, metadata !4628, metadata !DIExpression()), !dbg !4629
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !4631
  ret void, !dbg !4632
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !4633 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4637, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.value(metadata i8* %0, metadata !4638, metadata !DIExpression()), !dbg !4640
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4641
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4641
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4639, metadata !DIExpression()), !dbg !4642
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4642
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4643
  %5 = bitcast i8* %4 to i32*, !dbg !4643
  %6 = load i32, i32* %5, align 4, !dbg !4643
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4644
  store i32 %6, i32* %7, align 4, !dbg !4645
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !4646
  unreachable, !dbg !4647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4651, metadata !DIExpression()), !dbg !4652
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !4653
  ret void, !dbg !4654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4659, metadata !DIExpression()), !dbg !4660
  %2 = icmp sgt i32 %0, -1, !dbg !4661
  br i1 %2, label %3, label %8, !dbg !4663

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4664, !srcloc !4666
  %4 = and i32 %0, 31, !dbg !4667
  %5 = shl nuw i32 1, %4, !dbg !4668
  %6 = lshr i32 %0, 5, !dbg !4669
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4670
  store volatile i32 %5, i32* %7, align 4, !dbg !4671
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4672, !srcloc !4673
  br label %8, !dbg !4674

8:                                                ; preds = %3, %1
  ret void, !dbg !4675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4678, metadata !DIExpression()), !dbg !4679
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !4680
  ret void, !dbg !4681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4684, metadata !DIExpression()), !dbg !4685
  %2 = icmp sgt i32 %0, -1, !dbg !4686
  br i1 %2, label %3, label %8, !dbg !4688

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4689
  %5 = shl nuw i32 1, %4, !dbg !4691
  %6 = lshr i32 %0, 5, !dbg !4692
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4693
  store volatile i32 %5, i32* %7, align 4, !dbg !4694
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4695, !srcloc !4699
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4700, !srcloc !4703
  br label %8, !dbg !4704

8:                                                ; preds = %3, %1
  ret void, !dbg !4705
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4710, metadata !DIExpression()), !dbg !4711
  %2 = lshr i32 %0, 5, !dbg !4712
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4713
  %4 = load volatile i32, i32* %3, align 4, !dbg !4713
  %5 = and i32 %0, 31, !dbg !4714
  %6 = shl nuw i32 1, %5, !dbg !4714
  %7 = and i32 %4, %6, !dbg !4715
  ret i32 %7, !dbg !4716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4721, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i32 %1, metadata !4722, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i32 %2, metadata !4723, metadata !DIExpression()), !dbg !4724
  %4 = add i32 %1, 1, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %4, metadata !4722, metadata !DIExpression()), !dbg !4724
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !4728
  ret void, !dbg !4729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4734, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 %1, metadata !4735, metadata !DIExpression()), !dbg !4736
  %3 = trunc i32 %1 to i8, !dbg !4737
  %4 = shl i8 %3, 4, !dbg !4737
  %5 = and i32 %0, 15, !dbg !4739
  %6 = add nsw i32 %5, -4, !dbg !4739
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4739
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4739
  %9 = icmp slt i32 %0, 0, !dbg !4739
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4739
  store volatile i8 %4, i8* %10, align 1, !dbg !4737
  ret void, !dbg !4740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4743, metadata !DIExpression()), !dbg !4744
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !4745
  ret void, !dbg !4746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4747 {
  tail call void @z_SysNmiOnReset() #25, !dbg !4749
  tail call void @z_arm_int_exit() #25, !dbg !4750
  ret void, !dbg !4751
}

; Function Attrs: optsize
declare !dbg !4752 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4753 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #9 !dbg !4755 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !4757
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !4758
  tail call void @z_bss_zero() #25, !dbg !4759
  tail call void @z_data_copy() #25, !dbg !4760
  tail call void @z_arm_interrupt_init() #25, !dbg !4761
  tail call void @z_cstart() #27, !dbg !4762
  unreachable, !dbg !4762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4763 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4764
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4765, !srcloc !4768
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4769, !srcloc !4772
  ret void, !dbg !4773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !4774 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4775
  %2 = and i32 %1, -15728641, !dbg !4775
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4775
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !4776, !srcloc !4783
  call void @llvm.dbg.value(metadata i32 %3, metadata !4781, metadata !DIExpression()) #23, !dbg !4784
  %4 = and i32 %3, -5, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %4, metadata !4786, metadata !DIExpression()) #23, !dbg !4791
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !4793, !srcloc !4794
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4795, !srcloc !4772
  ret void, !dbg !4797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !4798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4801, metadata !DIExpression()), !dbg !4802
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4803
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !4804
  store i32 %0, i32* %3, align 4, !dbg !4805
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !4806
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !4807
  store i32 %4, i32* %5, align 4, !dbg !4808
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4809
  %7 = or i32 %6, 268435456, !dbg !4809
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4809
  call void @llvm.dbg.value(metadata i32 0, metadata !4810, metadata !DIExpression()) #23, !dbg !4813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !4815, !srcloc !4816
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4817
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !4818
  %10 = load i32, i32* %9, align 4, !dbg !4818
  ret i32 %10, !dbg !4819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !4820 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4930, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !4931, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %2, metadata !4932, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !4933, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %4, metadata !4934, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %5, metadata !4935, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %6, metadata !4936, metadata !DIExpression()), !dbg !4938
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !4939
  call void @llvm.dbg.value(metadata i8* %8, metadata !4937, metadata !DIExpression()), !dbg !4938
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !4940
  %10 = bitcast i8* %9 to i32*, !dbg !4940
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !4941
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !4942
  %12 = bitcast i8* %8 to i32*, !dbg !4943
  store i32 %11, i32* %12, align 4, !dbg !4944
  %13 = ptrtoint i8* %4 to i32, !dbg !4945
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !4946
  %15 = bitcast i8* %14 to i32*, !dbg !4946
  store i32 %13, i32* %15, align 4, !dbg !4947
  %16 = ptrtoint i8* %5 to i32, !dbg !4948
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !4949
  %18 = bitcast i8* %17 to i32*, !dbg !4949
  store i32 %16, i32* %18, align 4, !dbg !4950
  %19 = ptrtoint i8* %6 to i32, !dbg !4951
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !4952
  %21 = bitcast i8* %20 to i32*, !dbg !4952
  store i32 %19, i32* %21, align 4, !dbg !4953
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !4954
  %23 = bitcast i8* %22 to i32*, !dbg !4954
  store i32 16777216, i32* %23, align 4, !dbg !4955
  %24 = ptrtoint i8* %8 to i32, !dbg !4956
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !4957
  store i32 %24, i32* %25, align 8, !dbg !4958
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !4959
  store i32 0, i32* %26, align 4, !dbg !4960
  ret void, !dbg !4961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !4962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4967, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i32 %1, metadata !4968, metadata !DIExpression()), !dbg !4973
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4974
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !4969, metadata !DIExpression()), !dbg !4973
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !4975
  br i1 %4, label %19, label %5, !dbg !4977

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !4972, metadata !DIExpression()), !dbg !4973
  %6 = icmp eq i32 %0, -22, !dbg !4978
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !4978
  %8 = load i32, i32* %7, align 4, !dbg !4978
  br i1 %6, label %16, label %9, !dbg !4980

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !4978
  %11 = icmp ule i32 %10, %0, !dbg !4978
  %12 = icmp ugt i32 %8, %0, !dbg !4978
  %13 = and i1 %12, %11, !dbg !4978
  %14 = icmp ugt i32 %8, %1, !dbg !4978
  %15 = and i1 %14, %13, !dbg !4978
  br i1 %15, label %18, label %19, !dbg !4978

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !4978
  br i1 %17, label %18, label %19, !dbg !4980

18:                                               ; preds = %9, %16
  br label %19, !dbg !4981

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !4973
  ret i32 %20, !dbg !4983
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #9 !dbg !4984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4988, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i8* %1, metadata !4989, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !4990, metadata !DIExpression()), !dbg !4991
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4992
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !4993
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !4994, !srcloc !4995
  unreachable, !dbg !4996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !4997 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5015, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i32 %1, metadata !5016, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i32 %2, metadata !5017, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5018, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i32 0, metadata !5019, metadata !DIExpression()), !dbg !5025
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5026
  %9 = and i32 %8, 511, !dbg !5027
  call void @llvm.dbg.value(metadata i32 %9, metadata !5020, metadata !DIExpression()), !dbg !5025
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5028
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5028
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5029
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5029
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5024, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 0, metadata !5031, metadata !DIExpression()) #23, !dbg !5034
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5036, !srcloc !5037
  call void @llvm.dbg.value(metadata i8* %6, metadata !5022, metadata !DIExpression(DW_OP_deref)), !dbg !5025
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5038
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5023, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i8* %5, metadata !5021, metadata !DIExpression(DW_OP_deref)), !dbg !5025
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5039
  call void @llvm.dbg.value(metadata i32 %12, metadata !5019, metadata !DIExpression()), !dbg !5025
  %13 = load i8, i8* %5, align 1, !dbg !5040, !range !5042
  call void @llvm.dbg.value(metadata i8 %13, metadata !5021, metadata !DIExpression()), !dbg !5025
  %14 = icmp eq i8 %13, 0, !dbg !5040
  br i1 %14, label %15, label %32, !dbg !5043

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5044
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5045
  %18 = load i8, i8* %6, align 1, !dbg !5046, !range !5042
  call void @llvm.dbg.value(metadata i8 %18, metadata !5022, metadata !DIExpression()), !dbg !5025
  %19 = icmp eq i8 %18, 0, !dbg !5046
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5048
  %21 = load i32, i32* %20, align 4, !dbg !5048
  br i1 %19, label %27, label %22, !dbg !5049

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5050
  %24 = icmp eq i32 %23, 0, !dbg !5053
  br i1 %24, label %25, label %31, !dbg !5054

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5055
  br label %29, !dbg !5057

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5058
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5048
  br label %31, !dbg !5060

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5060
  br label %32, !dbg !5061

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5061
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5061
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5061
  ret void, !dbg !5061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5067, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i32 %1, metadata !5068, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i32 %2, metadata !5069, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %3, metadata !5070, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8 0, metadata !5071, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5072, metadata !DIExpression()), !dbg !5073
  store i8 0, i8* %3, align 1, !dbg !5074
  %5 = icmp ult i32 %2, -16777216, !dbg !5075
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5077
  br i1 %8, label %16, label %9, !dbg !5077

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5078
  %11 = icmp eq i32 %10, 0, !dbg !5078
  br i1 %11, label %12, label %13, !dbg !5080

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5072, metadata !DIExpression()), !dbg !5073
  store i8 1, i8* %3, align 1, !dbg !5083
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5073
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5072, metadata !DIExpression()), !dbg !5073
  br label %16, !dbg !5086

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5073
  ret %struct.__esf* %17, !dbg !5087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5088 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5092, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %1, metadata !5093, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i8* %2, metadata !5094, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 0, metadata !5095, metadata !DIExpression()), !dbg !5096
  store i8 0, i8* %2, align 1, !dbg !5097
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5098

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5099
  call void @llvm.dbg.value(metadata i32 %5, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %11, !dbg !5101

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %7, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %11, !dbg !5103

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5104
  call void @llvm.dbg.value(metadata i32 0, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %11, !dbg !5105

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5106
  call void @llvm.dbg.value(metadata i32 0, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %11, !dbg !5107

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5108
  br label %11, !dbg !5109

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5111 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5115, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5116, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i32 0, metadata !5117, metadata !DIExpression()), !dbg !5118
  store i8 0, i8* %1, align 1, !dbg !5119
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5120
  %4 = and i32 %3, 2, !dbg !5122
  %5 = icmp eq i32 %4, 0, !dbg !5123
  br i1 %5, label %6, label %33, !dbg !5124

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5125
  %8 = icmp sgt i32 %7, -1, !dbg !5127
  br i1 %8, label %9, label %33, !dbg !5128

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5129
  %11 = and i32 %10, 1073741824, !dbg !5131
  %12 = icmp eq i32 %11, 0, !dbg !5132
  br i1 %12, label %33, label %13, !dbg !5133

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5134
  br i1 %14, label %15, label %18, !dbg !5137

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5138
  %17 = load i32, i32* %16, align 4, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %17, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %33, !dbg !5140

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5141
  %20 = and i32 %19, 255, !dbg !5143
  %21 = icmp eq i32 %20, 0, !dbg !5144
  br i1 %21, label %24, label %22, !dbg !5145

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %23, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %33, !dbg !5148

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5149
  %26 = and i32 %25, 65280, !dbg !5151
  %27 = icmp eq i32 %26, 0, !dbg !5152
  br i1 %27, label %29, label %28, !dbg !5153

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5154
  call void @llvm.dbg.value(metadata i32 0, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %33, !dbg !5156

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5157
  %31 = icmp ult i32 %30, 65536, !dbg !5159
  br i1 %31, label %33, label %32, !dbg !5160

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5161
  call void @llvm.dbg.value(metadata i32 0, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %33, !dbg !5163

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5118
  call void @llvm.dbg.value(metadata i32 %34, metadata !5117, metadata !DIExpression()), !dbg !5118
  ret i32 %34, !dbg !5164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5165 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5167, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i32 %1, metadata !5168, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i8* %2, metadata !5169, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i32 0, metadata !5170, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i32 -22, metadata !5171, metadata !DIExpression()), !dbg !5180
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5181
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5183
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5185
  %7 = and i32 %6, 2, !dbg !5186
  %8 = icmp eq i32 %7, 0, !dbg !5187
  br i1 %8, label %19, label %9, !dbg !5188

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5189
  call void @llvm.dbg.value(metadata i32 %10, metadata !5172, metadata !DIExpression()), !dbg !5190
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5191
  %12 = and i32 %11, 128, !dbg !5193
  %13 = icmp eq i32 %12, 0, !dbg !5194
  br i1 %13, label %19, label %14, !dbg !5195

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5171, metadata !DIExpression()), !dbg !5180
  %15 = icmp eq i32 %1, 0, !dbg !5196
  br i1 %15, label %19, label %16, !dbg !5199

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5200
  %18 = and i32 %17, -129, !dbg !5200
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5200
  br label %19, !dbg !5202

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5180
  call void @llvm.dbg.value(metadata i32 %20, metadata !5171, metadata !DIExpression()), !dbg !5180
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5203
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5205
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5207
  %24 = and i32 %23, 16, !dbg !5208
  %25 = icmp eq i32 %24, 0, !dbg !5208
  br i1 %25, label %26, label %30, !dbg !5209

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5210
  %28 = and i32 %27, 2, !dbg !5211
  %29 = icmp eq i32 %28, 0, !dbg !5211
  br i1 %29, label %39, label %30, !dbg !5212

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5213
  %32 = and i32 %31, 2048, !dbg !5214
  %33 = icmp eq i32 %32, 0, !dbg !5214
  br i1 %33, label %39, label %34, !dbg !5215

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5216
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %36, metadata !5175, metadata !DIExpression()), !dbg !5218
  %37 = icmp eq i32 %36, 0, !dbg !5219
  br i1 %37, label %39, label %38, !dbg !5221

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5222, metadata !DIExpression()) #23, !dbg !5225
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5228, !srcloc !5229
  call void @llvm.dbg.value(metadata i32 2, metadata !5170, metadata !DIExpression()), !dbg !5180
  br label %39, !dbg !5230

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5180
  call void @llvm.dbg.value(metadata i32 %40, metadata !5170, metadata !DIExpression()), !dbg !5180
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5231
  %42 = and i32 %41, 32, !dbg !5233
  %43 = icmp eq i32 %42, 0, !dbg !5234
  br i1 %43, label %47, label %44, !dbg !5235

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5236
  %46 = and i32 %45, -8193, !dbg !5236
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5236
  br label %47, !dbg !5238

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5239
  %49 = or i32 %48, 255, !dbg !5239
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5239
  store i8 0, i8* %2, align 1, !dbg !5240
  ret i32 %40, !dbg !5241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5242 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5246, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i32 %0, metadata !5247, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i8* %1, metadata !5248, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i32 0, metadata !5249, metadata !DIExpression()), !dbg !5253
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5254
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5256
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5258
  %6 = and i32 %5, 512, !dbg !5259
  %7 = icmp eq i32 %6, 0, !dbg !5259
  br i1 %7, label %18, label %8, !dbg !5260

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %9, metadata !5250, metadata !DIExpression()), !dbg !5262
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5263
  %11 = and i32 %10, 32768, !dbg !5265
  %12 = icmp ne i32 %11, 0, !dbg !5266
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5267
  br i1 %14, label %15, label %18, !dbg !5267

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5268
  %17 = and i32 %16, -32769, !dbg !5268
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5268
  br label %18, !dbg !5272

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5273
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5275
  %21 = and i32 %20, 256, !dbg !5277
  %22 = icmp eq i32 %21, 0, !dbg !5278
  br i1 %22, label %23, label %25, !dbg !5279

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5280
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5282
  %27 = or i32 %26, 65280, !dbg !5282
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5282
  store i8 0, i8* %1, align 1, !dbg !5283
  ret void, !dbg !5284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5285 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5291, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.value(metadata i32 0, metadata !5292, metadata !DIExpression()), !dbg !5293
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5294
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5296
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5298
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5300
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5302
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5304
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5306
  %8 = or i32 %7, -65536, !dbg !5306
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5306
  ret void, !dbg !5307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !5308 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5312, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i8* %0, metadata !5313, metadata !DIExpression()), !dbg !5314
  store i8 0, i8* %0, align 1, !dbg !5315
  ret void, !dbg !5316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5317 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5321, metadata !DIExpression()), !dbg !5324
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5325
  %3 = load i32, i32* %2, align 4, !dbg !5325
  %4 = inttoptr i32 %3 to i16*, !dbg !5326
  call void @llvm.dbg.value(metadata i16* %4, metadata !5322, metadata !DIExpression()), !dbg !5324
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5327
  %6 = or i32 %5, 256, !dbg !5327
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5327
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5328, !srcloc !5331
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5332, !srcloc !5335
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5336
  %8 = load i16, i16* %7, align 2, !dbg !5337
  call void @llvm.dbg.value(metadata i16 %8, metadata !5323, metadata !DIExpression()), !dbg !5324
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5338
  %10 = and i32 %9, -257, !dbg !5338
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5338
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5339, !srcloc !5331
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5341, !srcloc !5335
  %11 = icmp eq i16 %8, -8446, !dbg !5343
  ret i1 %11, !dbg !5345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5346 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5347
  %2 = or i32 %1, 16, !dbg !5347
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5347
  ret void, !dbg !5348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5349 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5352, metadata !DIExpression()), !dbg !5353
  br label %1, !dbg !5354

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5352, metadata !DIExpression()), !dbg !5353
  tail call fastcc void @__NVIC_SetPriority.8(i32 noundef %2) #24, !dbg !5356
  %3 = add nuw nsw i32 %2, 1, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %3, metadata !5352, metadata !DIExpression()), !dbg !5353
  %4 = icmp eq i32 %3, 86, !dbg !5360
  br i1 %4, label %5, label %1, !dbg !5354, !llvm.loop !5361

5:                                                ; preds = %1
  ret void, !dbg !5363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.8(i32 noundef %0) unnamed_addr #13 !dbg !5364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5366, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 1, metadata !5367, metadata !DIExpression()), !dbg !5368
  %2 = and i32 %0, 15, !dbg !5369
  %3 = add nsw i32 %2, -4, !dbg !5369
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5369
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5369
  %6 = icmp slt i32 %0, 0, !dbg !5369
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5369
  store volatile i8 16, i8* %7, align 1, !dbg !5370
  ret void, !dbg !5372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5479, metadata !DIExpression()), !dbg !5480
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5481
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5483
  br i1 %3, label %4, label %12, !dbg !5484

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5485, !srcloc !5497
  call void @llvm.dbg.value(metadata i32 %5, metadata !5488, metadata !DIExpression()) #23, !dbg !5498
  %6 = icmp eq i32 %5, 0, !dbg !5499
  br i1 %6, label %12, label %7, !dbg !5500

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5501
  %9 = or i32 %8, 268435456, !dbg !5501
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5501
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5503
  %11 = and i32 %10, -32769, !dbg !5503
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5503
  br label %12, !dbg !5504

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5505
  ret void, !dbg !5506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5507 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !5508
  ret void, !dbg !5509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !5510
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5511
  %3 = load i32, i32* %2, align 4, !dbg !5511
  %4 = add i32 %3, -64, !dbg !5513
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !5510
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5514
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5515
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5516
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !5510
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !5517
  ret void, !dbg !5518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5519 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5520
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5521, !srcloc !5524
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5525, !srcloc !5528
  ret void, !dbg !5529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5530 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5531, !srcloc !5534
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5535
  ret void, !dbg !5536
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5537 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5552, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.value(metadata i8 %1, metadata !5553, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.value(metadata i32 %2, metadata !5554, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.value(metadata i32 %3, metadata !5555, metadata !DIExpression()), !dbg !5556
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5557
  ret void, !dbg !5559
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5560 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5565, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i8 %1, metadata !5566, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i32 undef, metadata !5567, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i32 undef, metadata !5568, metadata !DIExpression()), !dbg !5570
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5571
  call void @llvm.dbg.value(metadata i8 %3, metadata !5569, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5570
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %4, metadata !5569, metadata !DIExpression()), !dbg !5570
  %5 = trunc i32 %4 to i8, !dbg !5573
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5574
  ret void, !dbg !5575
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5576 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5580, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i8 %1, metadata !5581, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i8 %2, metadata !5582, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i1 %3, metadata !5583, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5586
  %5 = zext i8 %2 to i32, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %5, metadata !5585, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i32 0, metadata !5584, metadata !DIExpression()), !dbg !5586
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5585, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i32 0, metadata !5584, metadata !DIExpression()), !dbg !5586
  %7 = icmp eq i8 %1, 0, !dbg !5588
  br i1 %7, label %29, label %8, !dbg !5591

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5585, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i32 %10, metadata !5584, metadata !DIExpression()), !dbg !5586
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5592
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5595
  %13 = load i32, i32* %12, align 4, !dbg !5595
  %14 = icmp eq i32 %13, 0, !dbg !5596
  br i1 %14, label %25, label %15, !dbg !5597

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5598

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5600
  %18 = icmp eq i32 %17, 0, !dbg !5600
  br i1 %18, label %29, label %19, !dbg !5601

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5602
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %21, metadata !5585, metadata !DIExpression()), !dbg !5586
  %22 = icmp eq i32 %21, -22, !dbg !5604
  br i1 %22, label %29, label %23, !dbg !5606

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %24, metadata !5585, metadata !DIExpression()), !dbg !5586
  br label %25, !dbg !5608

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5586
  call void @llvm.dbg.value(metadata i32 %26, metadata !5585, metadata !DIExpression()), !dbg !5586
  %27 = add nuw nsw i32 %10, 1, !dbg !5609
  call void @llvm.dbg.value(metadata i32 %27, metadata !5584, metadata !DIExpression()), !dbg !5586
  %28 = icmp eq i32 %27, %6, !dbg !5588
  br i1 %28, label %29, label %8, !dbg !5591, !llvm.loop !5610

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5586
  ret i32 %30, !dbg !5612
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5613 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5617, metadata !DIExpression()), !dbg !5619
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5620
  %3 = load i32, i32* %2, align 4, !dbg !5620
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5621, !range !5622
  %5 = icmp ult i32 %4, 2, !dbg !5621
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5623
  br i1 %7, label %8, label %15, !dbg !5623

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5624
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5625
  %11 = load i32, i32* %10, align 4, !dbg !5625
  %12 = and i32 %11, %9, !dbg !5626
  %13 = icmp eq i32 %12, 0, !dbg !5627
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5618, metadata !DIExpression()), !dbg !5619
  ret i32 %16, !dbg !5628
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5629 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5633, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5634, metadata !DIExpression()), !dbg !5636
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5637
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5637
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5635, metadata !DIExpression()), !dbg !5638
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5639
  %6 = load i32, i32* %5, align 4, !dbg !5639
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5640
  store i32 %6, i32* %7, align 4, !dbg !5641
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5642
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5643
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5644
  %11 = load i32, i32* %10, align 4, !dbg !5644
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #24, !dbg !5645
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !5646
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5647
  ret i32 %12, !dbg !5648
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5649 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5656, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5657, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.value(metadata i32 undef, metadata !5658, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.value(metadata i32 %2, metadata !5659, metadata !DIExpression()), !dbg !5660
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5661
  %5 = load i32, i32* %4, align 4, !dbg !5661
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !5662
  %7 = or i32 %6, %5, !dbg !5663
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5664
  store i32 %7, i32* %8, align 4, !dbg !5665
  ret void, !dbg !5666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5667 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5671, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5672, metadata !DIExpression()), !dbg !5673
  %3 = zext i8 %0 to i32, !dbg !5674
  %4 = icmp ugt i8 %0, 7, !dbg !5676
  br i1 %4, label %6, label %5, !dbg !5677

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !5678
  br label %6, !dbg !5679

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5673
  ret i32 %7, !dbg !5680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5685, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5686, metadata !DIExpression()), !dbg !5687
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !5688
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5689
  %4 = load i32, i32* %3, align 4, !dbg !5689
  %5 = and i32 %4, -32, !dbg !5690
  %6 = or i32 %5, %0, !dbg !5691
  %7 = or i32 %6, 16, !dbg !5691
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5692
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5693
  %9 = load i32, i32* %8, align 4, !dbg !5693
  %10 = or i32 %9, 1, !dbg !5694
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5695
  ret void, !dbg !5696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5700, metadata !DIExpression()), !dbg !5701
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5702
  ret void, !dbg !5703
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #10 !dbg !5704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5708, metadata !DIExpression()), !dbg !5709
  %2 = icmp ult i32 %0, 33, !dbg !5710
  br i1 %2, label %11, label %3, !dbg !5712

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5713
  br i1 %4, label %11, label %5, !dbg !5715

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5716
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5717, !range !5622
  %8 = mul nsw i32 %7, -2, !dbg !5718
  %9 = add nsw i32 %8, 62, !dbg !5718
  %10 = and i32 %9, 62, !dbg !5719
  br label %11, !dbg !5720

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5709
  ret i32 %12, !dbg !5721
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5722 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5726, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.value(metadata i8 %1, metadata !5727, metadata !DIExpression()), !dbg !5728
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5729
  ret void, !dbg !5731
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5732 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5736, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 %1, metadata !5737, metadata !DIExpression()), !dbg !5743
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5744
  call void @llvm.dbg.value(metadata i8 %3, metadata !5738, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5743
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !5745
  call void @llvm.dbg.value(metadata i32 %4, metadata !5738, metadata !DIExpression()), !dbg !5743
  %5 = icmp ne i32 %4, -22, !dbg !5746
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %4, metadata !5739, metadata !DIExpression()), !dbg !5748
  br i1 %7, label %8, label %12, !dbg !5747

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5739, metadata !DIExpression()), !dbg !5748
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !5749
  %10 = add i32 %9, 1, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %10, metadata !5739, metadata !DIExpression()), !dbg !5748
  %11 = icmp eq i32 %10, 8, !dbg !5753
  br i1 %11, label %12, label %8, !dbg !5754, !llvm.loop !5755

12:                                               ; preds = %8, %2
  ret void, !dbg !5757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !5758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5761, metadata !DIExpression()), !dbg !5762
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5763
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !5766 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !5771
  %2 = icmp ugt i32 %1, 8, !dbg !5773
  br i1 %2, label %14, label %3, !dbg !5774

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !5775
  call void @llvm.dbg.value(metadata i32 0, metadata !5770, metadata !DIExpression()), !dbg !5776
  %4 = icmp eq i32 %1, 0, !dbg !5777
  br i1 %4, label %12, label %5, !dbg !5780

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !5780

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5770, metadata !DIExpression()), !dbg !5776
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !5781
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !5783
  %10 = add nuw i32 %8, 1, !dbg !5784
  call void @llvm.dbg.value(metadata i32 %10, metadata !5770, metadata !DIExpression()), !dbg !5776
  %11 = icmp eq i32 %10, %1, !dbg !5777
  br i1 %11, label %12, label %7, !dbg !5780, !llvm.loop !5785

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !5787
  store i8 %13, i8* @static_regions_num, align 1, !dbg !5788
  tail call void @arm_core_mpu_enable() #24, !dbg !5789
  br label %14, !dbg !5790

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !5776
  ret i32 %15, !dbg !5791
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !5792 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5799, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.value(metadata i8* %1, metadata !5800, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.value(metadata i8* %0, metadata !5801, metadata !DIExpression()), !dbg !5802
  %3 = load i8, i8* %1, align 1, !dbg !5803
  %4 = icmp eq i8 %3, 0, !dbg !5804
  br i1 %4, label %13, label %5, !dbg !5805

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !5799, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.value(metadata i8* %8, metadata !5800, metadata !DIExpression()), !dbg !5802
  store i8 %6, i8* %7, align 1, !dbg !5806
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5808
  call void @llvm.dbg.value(metadata i8* %9, metadata !5799, metadata !DIExpression()), !dbg !5802
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5809
  call void @llvm.dbg.value(metadata i8* %10, metadata !5800, metadata !DIExpression()), !dbg !5802
  %11 = load i8, i8* %10, align 1, !dbg !5803
  %12 = icmp eq i8 %11, 0, !dbg !5804
  br i1 %12, label %13, label %5, !dbg !5805, !llvm.loop !5810

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !5812
  ret i8* %0, !dbg !5813
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !5814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5818, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8* %1, metadata !5819, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 %2, metadata !5820, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8* %0, metadata !5821, metadata !DIExpression()), !dbg !5822
  %4 = icmp eq i32 %2, 0, !dbg !5823
  br i1 %4, label %22, label %5, !dbg !5824

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !5818, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 %7, metadata !5820, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8* %8, metadata !5819, metadata !DIExpression()), !dbg !5822
  %9 = load i8, i8* %8, align 1, !dbg !5825
  %10 = icmp eq i8 %9, 0, !dbg !5826
  br i1 %10, label %16, label %11, !dbg !5827

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !5828
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5830
  call void @llvm.dbg.value(metadata i8* %12, metadata !5819, metadata !DIExpression()), !dbg !5822
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5831
  call void @llvm.dbg.value(metadata i8* %13, metadata !5818, metadata !DIExpression()), !dbg !5822
  %14 = add i32 %7, -1, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %14, metadata !5820, metadata !DIExpression()), !dbg !5822
  %15 = icmp eq i32 %14, 0, !dbg !5823
  br i1 %15, label %22, label %5, !dbg !5824, !llvm.loop !5833

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !5818, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 %18, metadata !5820, metadata !DIExpression()), !dbg !5822
  store i8 0, i8* %17, align 1, !dbg !5835
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !5837
  call void @llvm.dbg.value(metadata i8* %19, metadata !5818, metadata !DIExpression()), !dbg !5822
  %20 = add i32 %18, -1, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %20, metadata !5820, metadata !DIExpression()), !dbg !5822
  %21 = icmp eq i32 %20, 0, !dbg !5839
  br i1 %21, label %22, label %16, !dbg !5840, !llvm.loop !5841

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !5843
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5844 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5848, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.value(metadata i32 %1, metadata !5849, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.value(metadata i32 %1, metadata !5850, metadata !DIExpression()), !dbg !5851
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5852

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !5848, metadata !DIExpression()), !dbg !5851
  %6 = load i8, i8* %5, align 1, !dbg !5853
  %7 = icmp eq i8 %6, %3, !dbg !5854
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !5855
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5856
  call void @llvm.dbg.value(metadata i8* %10, metadata !5848, metadata !DIExpression()), !dbg !5851
  br i1 %9, label %11, label %4, !dbg !5855, !llvm.loop !5858

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !5860
  ret i8* %12, !dbg !5861
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5862 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5864, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.value(metadata i32 %1, metadata !5865, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.value(metadata i8* null, metadata !5866, metadata !DIExpression()), !dbg !5867
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5868

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !5867
  call void @llvm.dbg.value(metadata i8* %6, metadata !5866, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.value(metadata i8* %5, metadata !5864, metadata !DIExpression()), !dbg !5867
  %7 = load i8, i8* %5, align 1, !dbg !5869
  %8 = icmp eq i8 %7, %3, !dbg !5872
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !5873
  call void @llvm.dbg.value(metadata i8* %9, metadata !5866, metadata !DIExpression()), !dbg !5867
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5874
  call void @llvm.dbg.value(metadata i8* %10, metadata !5864, metadata !DIExpression()), !dbg !5867
  %11 = icmp eq i8 %7, 0, !dbg !5875
  br i1 %11, label %12, label %4, !dbg !5875, !llvm.loop !5876

12:                                               ; preds = %4
  ret i8* %9, !dbg !5878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !5879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5883, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i32 0, metadata !5884, metadata !DIExpression()), !dbg !5885
  %2 = load i8, i8* %0, align 1, !dbg !5886
  %3 = icmp eq i8 %2, 0, !dbg !5887
  br i1 %3, label %11, label %4, !dbg !5888

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5884, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i8* %6, metadata !5883, metadata !DIExpression()), !dbg !5885
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5889
  call void @llvm.dbg.value(metadata i8* %7, metadata !5883, metadata !DIExpression()), !dbg !5885
  %8 = add i32 %5, 1, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %8, metadata !5884, metadata !DIExpression()), !dbg !5885
  %9 = load i8, i8* %7, align 1, !dbg !5886
  %10 = icmp eq i8 %9, 0, !dbg !5887
  br i1 %10, label %11, label %4, !dbg !5888, !llvm.loop !5892

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !5885
  ret i32 %12, !dbg !5894
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5899, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i32 %1, metadata !5900, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i32 0, metadata !5901, metadata !DIExpression()), !dbg !5902
  %3 = load i8, i8* %0, align 1, !dbg !5903
  %4 = icmp ne i8 %3, 0, !dbg !5904
  %5 = icmp ne i32 %1, 0, !dbg !5905
  %6 = and i1 %4, %5, !dbg !5905
  br i1 %6, label %7, label %16, !dbg !5906

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i8* %9, metadata !5899, metadata !DIExpression()), !dbg !5902
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5907
  call void @llvm.dbg.value(metadata i8* %10, metadata !5899, metadata !DIExpression()), !dbg !5902
  %11 = add nuw i32 %8, 1, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %11, metadata !5901, metadata !DIExpression()), !dbg !5902
  %12 = load i8, i8* %10, align 1, !dbg !5903
  %13 = icmp ne i8 %12, 0, !dbg !5904
  %14 = icmp ult i32 %11, %1, !dbg !5905
  %15 = select i1 %13, i1 %14, i1 false, !dbg !5905
  br i1 %15, label %7, label %16, !dbg !5906, !llvm.loop !5910

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !5902
  ret i32 %17, !dbg !5912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !5913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5917, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %1, metadata !5918, metadata !DIExpression()), !dbg !5919
  %3 = load i8, i8* %0, align 1, !dbg !5920
  %4 = load i8, i8* %1, align 1, !dbg !5921
  %5 = icmp ne i8 %3, %4, !dbg !5922
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !5923
  br i1 %7, label %18, label %8, !dbg !5923

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %10, metadata !5917, metadata !DIExpression()), !dbg !5919
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5924
  call void @llvm.dbg.value(metadata i8* %11, metadata !5917, metadata !DIExpression()), !dbg !5919
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5926
  call void @llvm.dbg.value(metadata i8* %12, metadata !5918, metadata !DIExpression()), !dbg !5919
  %13 = load i8, i8* %11, align 1, !dbg !5920
  %14 = load i8, i8* %12, align 1, !dbg !5921
  %15 = icmp ne i8 %13, %14, !dbg !5922
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !5923
  br i1 %17, label %18, label %8, !dbg !5923, !llvm.loop !5927

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !5920
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !5921
  %21 = zext i8 %19 to i32, !dbg !5930
  %22 = zext i8 %20 to i32, !dbg !5931
  %23 = sub nsw i32 %21, %22, !dbg !5932
  ret i32 %23, !dbg !5933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !5934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5938, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i8* %1, metadata !5939, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i32 %2, metadata !5940, metadata !DIExpression()), !dbg !5941
  %4 = icmp eq i32 %2, 0, !dbg !5942
  br i1 %4, label %23, label %5, !dbg !5942

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5940, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i8* %7, metadata !5939, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i8* %8, metadata !5938, metadata !DIExpression()), !dbg !5941
  %9 = load i8, i8* %8, align 1, !dbg !5943
  %10 = load i8, i8* %7, align 1, !dbg !5944
  %11 = icmp ne i8 %9, %10, !dbg !5945
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !5946
  br i1 %13, label %19, label %14, !dbg !5946

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5947
  call void @llvm.dbg.value(metadata i8* %15, metadata !5938, metadata !DIExpression()), !dbg !5941
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5949
  call void @llvm.dbg.value(metadata i8* %16, metadata !5939, metadata !DIExpression()), !dbg !5941
  %17 = add i32 %6, -1, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %17, metadata !5940, metadata !DIExpression()), !dbg !5941
  %18 = icmp eq i32 %17, 0, !dbg !5942
  br i1 %18, label %23, label %5, !dbg !5942, !llvm.loop !5951

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !5954
  %21 = zext i8 %10 to i32, !dbg !5955
  %22 = sub nsw i32 %20, %21, !dbg !5956
  br label %23, !dbg !5957

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !5957
  ret i32 %24, !dbg !5958
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !5959 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5964, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8* %1, metadata !5965, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8** %2, metadata !5966, metadata !DIExpression()), !dbg !5969
  %4 = icmp eq i8* %0, null, !dbg !5970
  br i1 %4, label %5, label %7, !dbg !5970

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !5971
  br label %7, !dbg !5970

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !5970
  call void @llvm.dbg.value(metadata i8* %8, metadata !5967, metadata !DIExpression()), !dbg !5969
  %9 = load i8, i8* %8, align 1, !dbg !5972
  %10 = icmp eq i8 %9, 0, !dbg !5972
  br i1 %10, label %33, label %11, !dbg !5973

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5967, metadata !DIExpression()), !dbg !5969
  %14 = zext i8 %12 to i32, !dbg !5972
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !5974
  %16 = icmp eq i8* %15, null, !dbg !5973
  br i1 %16, label %21, label %17, !dbg !5975

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5976
  call void @llvm.dbg.value(metadata i8* %18, metadata !5967, metadata !DIExpression()), !dbg !5969
  %19 = load i8, i8* %18, align 1, !dbg !5972
  %20 = icmp eq i8 %19, 0, !dbg !5972
  br i1 %20, label %33, label %11, !dbg !5973, !llvm.loop !5978

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !5968, metadata !DIExpression()), !dbg !5969
  %24 = zext i8 %22 to i32, !dbg !5980
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !5981
  %26 = icmp eq i8* %25, null, !dbg !5982
  br i1 %26, label %27, label %31, !dbg !5983

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5984
  call void @llvm.dbg.value(metadata i8* %28, metadata !5968, metadata !DIExpression()), !dbg !5969
  %29 = load i8, i8* %28, align 1, !dbg !5980
  %30 = icmp eq i8 %29, 0, !dbg !5980
  br i1 %30, label %33, label %21, !dbg !5986, !llvm.loop !5987

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !5989
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5992
  br label %33, !dbg !5993

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !5969
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !5969
  store i8* %34, i8** %2, align 4, !dbg !5969
  ret i8* %35, !dbg !5994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !5995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5997, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.value(metadata i8* %1, metadata !5998, metadata !DIExpression()), !dbg !5999
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6000
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6001
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6002
  ret i8* %0, !dbg !6003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6006, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i8* %1, metadata !6007, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i32 %2, metadata !6008, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i8* %0, metadata !6009, metadata !DIExpression()), !dbg !6011
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6012
  call void @llvm.dbg.value(metadata i32 %4, metadata !6010, metadata !DIExpression()), !dbg !6011
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6013
  call void @llvm.dbg.value(metadata i8* %5, metadata !6006, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i8* %1, metadata !6007, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i32 %2, metadata !6008, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i32 %2, metadata !6008, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6011
  %6 = icmp eq i32 %2, 0, !dbg !6014
  br i1 %6, label %18, label %7, !dbg !6015

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %9, metadata !6006, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i8* %10, metadata !6007, metadata !DIExpression()), !dbg !6011
  %12 = load i8, i8* %10, align 1, !dbg !6017
  %13 = icmp eq i8 %12, 0, !dbg !6018
  br i1 %13, label %18, label %14, !dbg !6019

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %15, metadata !6007, metadata !DIExpression()), !dbg !6011
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6022
  call void @llvm.dbg.value(metadata i8* %16, metadata !6006, metadata !DIExpression()), !dbg !6011
  store i8 %12, i8* %9, align 1, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %11, metadata !6008, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i32 %11, metadata !6008, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6011
  %17 = icmp eq i32 %11, 0, !dbg !6014
  br i1 %17, label %18, label %7, !dbg !6015, !llvm.loop !6024

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6011
  store i8 0, i8* %19, align 1, !dbg !6026
  ret i8* %0, !dbg !6027
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6028 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6032, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %1, metadata !6033, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i32 %2, metadata !6034, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %0, metadata !6035, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %1, metadata !6036, metadata !DIExpression()), !dbg !6037
  %4 = icmp eq i32 %2, 0, !dbg !6038
  br i1 %4, label %31, label %5, !dbg !6040

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %0, metadata !6035, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i32 %2, metadata !6034, metadata !DIExpression()), !dbg !6037
  %6 = add i32 %2, -1, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %6, metadata !6034, metadata !DIExpression()), !dbg !6037
  %7 = icmp eq i32 %6, 0, !dbg !6042
  br i1 %7, label %23, label %8, !dbg !6043

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6044
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6044
  br label %11, !dbg !6044

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %14, metadata !6035, metadata !DIExpression()), !dbg !6037
  %15 = load i8, i8* %14, align 1, !dbg !6045
  %16 = load i8, i8* %13, align 1, !dbg !6046
  %17 = icmp eq i8 %15, %16, !dbg !6047
  br i1 %17, label %18, label %23, !dbg !6044

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6048
  call void @llvm.dbg.value(metadata i8* %19, metadata !6035, metadata !DIExpression()), !dbg !6037
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6050
  call void @llvm.dbg.value(metadata i8* %20, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i32 %12, metadata !6034, metadata !DIExpression()), !dbg !6037
  %21 = add i32 %12, -1, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %21, metadata !6034, metadata !DIExpression()), !dbg !6037
  %22 = icmp eq i32 %21, 0, !dbg !6042
  br i1 %22, label %23, label %11, !dbg !6043, !llvm.loop !6051

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6037
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6037
  %26 = load i8, i8* %24, align 1, !dbg !6053
  %27 = zext i8 %26 to i32, !dbg !6053
  %28 = load i8, i8* %25, align 1, !dbg !6054
  %29 = zext i8 %28 to i32, !dbg !6054
  %30 = sub nsw i32 %27, %29, !dbg !6055
  br label %31, !dbg !6056

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6037
  ret i32 %32, !dbg !6057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6062, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i8* %1, metadata !6063, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i32 %2, metadata !6064, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i8* %0, metadata !6065, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i8* %1, metadata !6066, metadata !DIExpression()), !dbg !6067
  %4 = ptrtoint i8* %0 to i32, !dbg !6068
  %5 = ptrtoint i8* %1 to i32, !dbg !6068
  %6 = sub i32 %4, %5, !dbg !6068
  %7 = icmp ult i32 %6, %2, !dbg !6070
  br i1 %7, label %10, label %8, !dbg !6071

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6066, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i8* %0, metadata !6065, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i32 %2, metadata !6064, metadata !DIExpression()), !dbg !6067
  %9 = icmp eq i32 %2, 0, !dbg !6072
  br i1 %9, label %26, label %17, !dbg !6074

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6064, metadata !DIExpression()), !dbg !6067
  %12 = add i32 %11, -1, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %12, metadata !6064, metadata !DIExpression()), !dbg !6067
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6078
  %14 = load i8, i8* %13, align 1, !dbg !6078
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6079
  store i8 %14, i8* %15, align 1, !dbg !6080
  %16 = icmp eq i32 %12, 0, !dbg !6081
  br i1 %16, label %26, label %10, !dbg !6082, !llvm.loop !6083

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6066, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i8* %19, metadata !6065, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i32 %20, metadata !6064, metadata !DIExpression()), !dbg !6067
  %21 = load i8, i8* %18, align 1, !dbg !6085
  store i8 %21, i8* %19, align 1, !dbg !6087
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6088
  call void @llvm.dbg.value(metadata i8* %22, metadata !6065, metadata !DIExpression()), !dbg !6067
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6089
  call void @llvm.dbg.value(metadata i8* %23, metadata !6066, metadata !DIExpression()), !dbg !6067
  %24 = add i32 %20, -1, !dbg !6090
  call void @llvm.dbg.value(metadata i32 %24, metadata !6064, metadata !DIExpression()), !dbg !6067
  %25 = icmp eq i32 %24, 0, !dbg !6072
  br i1 %25, label %26, label %17, !dbg !6074, !llvm.loop !6091

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6093
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6094 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6100, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %1, metadata !6101, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i32 %2, metadata !6102, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %0, metadata !6103, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %1, metadata !6104, metadata !DIExpression()), !dbg !6105
  %4 = icmp eq i32 %2, 0, !dbg !6106
  br i1 %4, label %14, label %5, !dbg !6107

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6104, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i8* %7, metadata !6103, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata i32 %8, metadata !6102, metadata !DIExpression()), !dbg !6105
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %9, metadata !6104, metadata !DIExpression()), !dbg !6105
  %10 = load i8, i8* %6, align 1, !dbg !6110
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6111
  call void @llvm.dbg.value(metadata i8* %11, metadata !6103, metadata !DIExpression()), !dbg !6105
  store i8 %10, i8* %7, align 1, !dbg !6112
  %12 = add i32 %8, -1, !dbg !6113
  call void @llvm.dbg.value(metadata i32 %12, metadata !6102, metadata !DIExpression()), !dbg !6105
  %13 = icmp eq i32 %12, 0, !dbg !6106
  br i1 %13, label %14, label %5, !dbg !6107, !llvm.loop !6114

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6116
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6121, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %1, metadata !6122, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %2, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %0, metadata !6124, metadata !DIExpression()), !dbg !6126
  %4 = trunc i32 %1 to i8, !dbg !6127
  call void @llvm.dbg.value(metadata i8 %4, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %2, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %0, metadata !6124, metadata !DIExpression()), !dbg !6126
  %5 = icmp eq i32 %2, 0, !dbg !6128
  br i1 %5, label %12, label %6, !dbg !6129

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %8, metadata !6124, metadata !DIExpression()), !dbg !6126
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6130
  call void @llvm.dbg.value(metadata i8* %9, metadata !6124, metadata !DIExpression()), !dbg !6126
  store i8 %4, i8* %8, align 1, !dbg !6132
  %10 = add i32 %7, -1, !dbg !6133
  call void @llvm.dbg.value(metadata i32 %10, metadata !6123, metadata !DIExpression()), !dbg !6126
  %11 = icmp eq i32 %10, 0, !dbg !6128
  br i1 %11, label %12, label %6, !dbg !6129, !llvm.loop !6134

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6136
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6141, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i32 %1, metadata !6142, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i32 %2, metadata !6143, metadata !DIExpression()), !dbg !6147
  %4 = icmp eq i32 %2, 0, !dbg !6148
  br i1 %4, label %17, label %5, !dbg !6149

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6150

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6151
  call void @llvm.dbg.value(metadata i8* %9, metadata !6144, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i32 %8, metadata !6143, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i8* %9, metadata !6144, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6151
  %10 = load i8, i8* %9, align 1, !dbg !6152
  %11 = icmp eq i8 %10, %6, !dbg !6155
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6156
  call void @llvm.dbg.value(metadata i8* %12, metadata !6144, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i32 %13, metadata !6143, metadata !DIExpression()), !dbg !6147
  br i1 %15, label %16, label %7, !dbg !6156, !llvm.loop !6157

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6159

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6147
  ret i8* %19, !dbg !6160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6161 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6163, metadata !DIExpression()), !dbg !6164
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6165
  ret void, !dbg !6166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !6167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6169, metadata !DIExpression()), !dbg !6170
  ret i32 -1, !dbg !6171
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6176, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32* %1, metadata !6177, metadata !DIExpression()), !dbg !6178
  %3 = ptrtoint i32* %1 to i32, !dbg !6179
  %4 = and i32 %3, -2, !dbg !6179
  %5 = icmp eq i32 %4, 2, !dbg !6179
  br i1 %5, label %6, label %9, !dbg !6179

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6180
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6180
  br label %9, !dbg !6181

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6181
  ret i32 %10, !dbg !6182
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6185, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32* %1, metadata !6186, metadata !DIExpression()), !dbg !6187
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6188
  ret i32 %3, !dbg !6189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6193, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i32* %1, metadata !6194, metadata !DIExpression()), !dbg !6195
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6196, !srcloc !6198
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6199
  ret i32 %3, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6206, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata i32* %1, metadata !6207, metadata !DIExpression()), !dbg !6210
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %3, metadata !6208, metadata !DIExpression()), !dbg !6210
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %4, metadata !6209, metadata !DIExpression()), !dbg !6210
  %5 = icmp ne i32 %3, %4, !dbg !6213
  %6 = sext i1 %5 to i32, !dbg !6214
  ret i32 %6, !dbg !6215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6220, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %1, metadata !6221, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %2, metadata !6222, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32* %3, metadata !6223, metadata !DIExpression()), !dbg !6224
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6225
  ret i32 %5, !dbg !6226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6229, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %1, metadata !6230, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %2, metadata !6231, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32* %3, metadata !6232, metadata !DIExpression()), !dbg !6233
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6234, !srcloc !6236
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6237
  ret i32 %5, !dbg !6238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6241, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %1, metadata !6242, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %2, metadata !6243, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32* %3, metadata !6244, metadata !DIExpression()), !dbg !6249
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6250
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6252
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6252
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6252
  br i1 %11, label %33, label %12, !dbg !6252

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6249
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6249
  call void @llvm.dbg.value(metadata i8* %14, metadata !6247, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %13, metadata !6245, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %1, metadata !6246, metadata !DIExpression()), !dbg !6249
  br label %15, !dbg !6253

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6255
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6249
  call void @llvm.dbg.value(metadata i8* %17, metadata !6247, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %16, metadata !6246, metadata !DIExpression()), !dbg !6249
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6256
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %19, metadata !6247, metadata !DIExpression()), !dbg !6249
  %20 = load i8, i8* %17, align 1, !dbg !6260
  %21 = zext i8 %20 to i32, !dbg !6261
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6256
  %23 = icmp eq i32 %22, -1, !dbg !6262
  br i1 %23, label %30, label %24, !dbg !6263

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6264
  call void @llvm.dbg.value(metadata i32 %25, metadata !6246, metadata !DIExpression()), !dbg !6249
  %26 = icmp eq i32 %25, 0, !dbg !6265
  br i1 %26, label %27, label %15, !dbg !6266, !llvm.loop !6267

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6269
  call void @llvm.dbg.value(metadata i32 %28, metadata !6245, metadata !DIExpression()), !dbg !6249
  %29 = icmp eq i32 %28, 0, !dbg !6270
  br i1 %29, label %30, label %12, !dbg !6271, !llvm.loop !6272

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6249
  call void @llvm.dbg.value(metadata i32 %31, metadata !6245, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.label(metadata !6248), !dbg !6275
  %32 = sub i32 %2, %31, !dbg !6276
  br label %33, !dbg !6277

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6249
  ret i32 %34, !dbg !6278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6283, metadata !DIExpression()), !dbg !6284
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6285
  %3 = icmp eq i32 %2, -1, !dbg !6287
  br i1 %3, label %8, label %4, !dbg !6288

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6289
  %6 = icmp eq i32 %5, -1, !dbg !6290
  %7 = sext i1 %6 to i32, !dbg !6289
  br label %8, !dbg !6291

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6284
  ret i32 %9, !dbg !6292
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6295, metadata !DIExpression()), !dbg !6296
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !6297
  ret void, !dbg !6298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6303, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 %1, metadata !6304, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6305, metadata !DIExpression()), !dbg !6309
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6310
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6310
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6310
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6306, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  %7 = icmp slt i32 %0, %1, !dbg !6311
  br i1 %7, label %8, label %22, !dbg !6314

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6308, metadata !DIExpression()), !dbg !6309
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !6315
  %11 = icmp eq i32 %10, 0, !dbg !6315
  br i1 %11, label %19, label %12, !dbg !6318

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !6319
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6321
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6321
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6323
  br i1 %15, label %19, label %16, !dbg !6324

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6325
  %18 = load i8*, i8** %17, align 4, !dbg !6325
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !6326
  br label %19, !dbg !6327

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6328
  call void @llvm.dbg.value(metadata i32 %20, metadata !6308, metadata !DIExpression()), !dbg !6309
  %21 = icmp eq i32 %20, %1, !dbg !6311
  br i1 %21, label %22, label %8, !dbg !6314, !llvm.loop !6329

22:                                               ; preds = %19, %3
  ret void, !dbg !6331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6334, metadata !DIExpression()), !dbg !6335
  %2 = shl nuw i32 1, %0, !dbg !6336
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !6339
  ret i32 %3, !dbg !6340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6345, metadata !DIExpression()), !dbg !6346
  %2 = shl nuw i32 1, %0, !dbg !6347
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6355, metadata !DIExpression()), !dbg !6356
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6357
  ret void, !dbg !6358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6361, metadata !DIExpression()), !dbg !6362
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6363
  %3 = and i32 %2, %0, !dbg !6363
  %4 = icmp eq i32 %3, %0, !dbg !6364
  %5 = zext i1 %4 to i32, !dbg !6364
  ret i32 %5, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6368, metadata !DIExpression()), !dbg !6369
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !6370
  ret void, !dbg !6371
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6374, metadata !DIExpression()), !dbg !6375
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !6376
  ret void, !dbg !6377
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6380, metadata !DIExpression()), !dbg !6381
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !6382
  ret void, !dbg !6383
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6384 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6386, metadata !DIExpression()), !dbg !6387
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !6388
  ret void, !dbg !6389
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6392, metadata !DIExpression()), !dbg !6393
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !6394
  ret void, !dbg !6395
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6398, metadata !DIExpression()), !dbg !6399
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !6400
  ret void, !dbg !6401
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6402 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6404, metadata !DIExpression()), !dbg !6405
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !6406
  ret void, !dbg !6407
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6410, metadata !DIExpression()), !dbg !6411
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !6412
  ret void, !dbg !6413
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6416, metadata !DIExpression()), !dbg !6417
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !6418
  ret void, !dbg !6419
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6422, metadata !DIExpression()), !dbg !6423
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !6424
  ret void, !dbg !6425
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6428, metadata !DIExpression()), !dbg !6429
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !6430
  ret i32 0, !dbg !6431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !558 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !562, metadata !DIExpression()), !dbg !6432
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !6433
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !6435
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !6437
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !6439
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !6441
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !6443
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !6445
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !6447
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !6449
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !6451
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !6453
  ret void, !dbg !6455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6458, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 0, metadata !6459, metadata !DIExpression()), !dbg !6460
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6461
  %3 = load i32, i32* %2, align 4, !dbg !6461
  call void @llvm.dbg.value(metadata i32 %3, metadata !6459, metadata !DIExpression()), !dbg !6460
  %4 = shl nuw i32 1, %0, !dbg !6462
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !6463
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !6464
  ret void, !dbg !6465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6468, metadata !DIExpression()), !dbg !6469
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6470
  %3 = or i32 %2, %0, !dbg !6470
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6470
  ret void, !dbg !6471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6474, metadata !DIExpression()), !dbg !6475
  %2 = icmp slt i32 %0, 32, !dbg !6476
  br i1 %2, label %3, label %5, !dbg !6478

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6479
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !6481
  br label %5, !dbg !6482

5:                                                ; preds = %1, %3
  ret void, !dbg !6483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6486, metadata !DIExpression()), !dbg !6487
  %2 = xor i32 %0, -1, !dbg !6488
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6488
  %4 = and i32 %3, %2, !dbg !6488
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6494, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.value(metadata i32 %1, metadata !6495, metadata !DIExpression()), !dbg !6496
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6497

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6498
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !6500
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !6501
  br label %11, !dbg !6502

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6503
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !6504
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !6505
  br label %11, !dbg !6506

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6507
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !6508
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !6509
  br label %11, !dbg !6510

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6511
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !6512
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !6513
  br label %11, !dbg !6514

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6518, metadata !DIExpression()), !dbg !6519
  %2 = xor i32 %0, -1, !dbg !6520
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6520
  %4 = and i32 %3, %2, !dbg !6520
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6520
  ret void, !dbg !6521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6524, metadata !DIExpression()), !dbg !6525
  %2 = xor i32 %0, -1, !dbg !6526
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6526
  %4 = and i32 %3, %2, !dbg !6526
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6526
  ret void, !dbg !6527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6530, metadata !DIExpression()), !dbg !6531
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6532
  %3 = or i32 %2, %0, !dbg !6532
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6532
  ret void, !dbg !6533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6536, metadata !DIExpression()), !dbg !6537
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6538
  %3 = or i32 %2, %0, !dbg !6538
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6538
  ret void, !dbg !6539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !6540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6544, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6545, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i8* %2, metadata !6546, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !6547, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6549, metadata !DIExpression()), !dbg !6550
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6551
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6551
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6553
  br i1 %6, label %7, label %9, !dbg !6554

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6555
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6556
  store i8* %2, i8** %8, align 4, !dbg !6557
  br label %9, !dbg !6558

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6550
  ret i32 %10, !dbg !6559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !6560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6562, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !6563, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6564, metadata !DIExpression()), !dbg !6565
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6566
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6567
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6568
  store i8* null, i8** %3, align 4, !dbg !6569
  ret void, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6573, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata i8* %1, metadata !6574, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata i8* %1, metadata !6575, metadata !DIExpression()), !dbg !6578
  %3 = bitcast i8* %1 to i32*, !dbg !6579
  %4 = load i32, i32* %3, align 4, !dbg !6579
  %5 = add i32 %4, -169, !dbg !6579
  %6 = icmp ult i32 %5, -121, !dbg !6579
  br i1 %6, label %15, label %7, !dbg !6581

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6582
  %9 = inttoptr i32 %8 to i32*, !dbg !6583
  call void @llvm.dbg.value(metadata i32* %9, metadata !6576, metadata !DIExpression()), !dbg !6578
  %10 = load volatile i32, i32* %9, align 4, !dbg !6584
  call void @llvm.dbg.value(metadata i32 %10, metadata !6577, metadata !DIExpression()), !dbg !6578
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6585
  %12 = bitcast i8* %11 to i32*, !dbg !6585
  %13 = load i32, i32* %12, align 4, !dbg !6585
  %14 = or i32 %13, %10, !dbg !6586
  call void @llvm.dbg.value(metadata i32 %14, metadata !6577, metadata !DIExpression()), !dbg !6578
  store volatile i32 %14, i32* %9, align 4, !dbg !6587
  br label %15, !dbg !6588

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6578
  ret i32 %16, !dbg !6589
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6592, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.value(metadata i8* %1, metadata !6593, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.value(metadata i8* %1, metadata !6594, metadata !DIExpression()), !dbg !6597
  %3 = bitcast i8* %1 to i32*, !dbg !6598
  %4 = load i32, i32* %3, align 4, !dbg !6598
  %5 = add i32 %4, -169, !dbg !6598
  %6 = icmp ult i32 %5, -121, !dbg !6598
  br i1 %6, label %16, label %7, !dbg !6600

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6601
  %9 = inttoptr i32 %8 to i32*, !dbg !6602
  call void @llvm.dbg.value(metadata i32* %9, metadata !6595, metadata !DIExpression()), !dbg !6597
  %10 = load volatile i32, i32* %9, align 4, !dbg !6603
  call void @llvm.dbg.value(metadata i32 %10, metadata !6596, metadata !DIExpression()), !dbg !6597
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6604
  %12 = bitcast i8* %11 to i32*, !dbg !6604
  %13 = load i32, i32* %12, align 4, !dbg !6604
  %14 = xor i32 %13, -1, !dbg !6605
  %15 = and i32 %10, %14, !dbg !6606
  call void @llvm.dbg.value(metadata i32 %15, metadata !6596, metadata !DIExpression()), !dbg !6597
  store volatile i32 %15, i32* %9, align 4, !dbg !6607
  br label %16, !dbg !6608

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6597
  ret i32 %17, !dbg !6609
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6612, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i8* %1, metadata !6613, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32* %2, metadata !6614, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i8* %1, metadata !6615, metadata !DIExpression()), !dbg !6620
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6621
  call void @llvm.dbg.value(metadata i32 %4, metadata !6616, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 undef, metadata !6618, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 %4, metadata !6619, metadata !DIExpression()), !dbg !6620
  %5 = bitcast i8* %1 to i32*, !dbg !6622
  %6 = load i32, i32* %5, align 4, !dbg !6622
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !6623

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !6624
  call void @llvm.dbg.value(metadata i32 %8, metadata !6617, metadata !DIExpression()), !dbg !6620
  br label %16, !dbg !6625

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !6627
  call void @llvm.dbg.value(metadata i32 %10, metadata !6618, metadata !DIExpression()), !dbg !6620
  br label %16, !dbg !6628

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6629
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !6630
  br label %16, !dbg !6631

14:                                               ; preds = %3
  br label %16, !dbg !6632

15:                                               ; preds = %3
  br label %16, !dbg !6633

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !6634
  br label %18, !dbg !6635

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !6620
  ret i32 %19, !dbg !6635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6638, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata i8* %1, metadata !6639, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata i8* %2, metadata !6640, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata i8* %1, metadata !6641, metadata !DIExpression()), !dbg !6646
  %4 = bitcast i8* %1 to i32*, !dbg !6647
  %5 = load i32, i32* %4, align 4, !dbg !6647
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %6, metadata !6645, metadata !DIExpression()), !dbg !6646
  %7 = icmp slt i32 %6, 0, !dbg !6649
  br i1 %7, label %22, label %8, !dbg !6651

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6641, metadata !DIExpression()), !dbg !6646
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6652
  %10 = bitcast i8* %9 to i32*, !dbg !6652
  %11 = load i32, i32* %10, align 4, !dbg !6652
  %12 = lshr i32 %11, 16, !dbg !6652
  %13 = and i32 %12, 7, !dbg !6652
  %14 = lshr i32 %11, 8, !dbg !6653
  %15 = and i32 %14, 31, !dbg !6653
  %16 = shl i32 %13, %15, !dbg !6654
  call void @llvm.dbg.value(metadata i32 %16, metadata !6644, metadata !DIExpression()), !dbg !6646
  %17 = and i32 %11, 255, !dbg !6655
  %18 = or i32 %17, 1073887232, !dbg !6656
  %19 = inttoptr i32 %18 to i32*, !dbg !6657
  call void @llvm.dbg.value(metadata i32* %19, metadata !6642, metadata !DIExpression()), !dbg !6646
  %20 = load volatile i32, i32* %19, align 4, !dbg !6658
  call void @llvm.dbg.value(metadata i32 %20, metadata !6643, metadata !DIExpression()), !dbg !6646
  %21 = or i32 %16, %20, !dbg !6659
  call void @llvm.dbg.value(metadata i32 %21, metadata !6643, metadata !DIExpression()), !dbg !6646
  store volatile i32 %21, i32* %19, align 4, !dbg !6660
  br label %22, !dbg !6661

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6646
  ret i32 %23, !dbg !6662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !6663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6667, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 0, metadata !6668, metadata !DIExpression()), !dbg !6669
  %2 = add i32 %0, -1, !dbg !6670
  %3 = icmp ult i32 %2, 6, !dbg !6670
  br i1 %3, label %4, label %7, !dbg !6670

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6670
  %6 = load i32, i32* %5, align 4, !dbg !6670
  call void @llvm.dbg.value(metadata i32 %6, metadata !6668, metadata !DIExpression()), !dbg !6669
  br label %7, !dbg !6671

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6669
  ret i32 %8, !dbg !6672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6677, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i32 %1, metadata !6678, metadata !DIExpression()), !dbg !6679
  %3 = udiv i32 %0, %1, !dbg !6680
  ret i32 %3, !dbg !6681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #2 !dbg !6682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6686, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i32 16, metadata !6687, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i32 336, metadata !6688, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i32 4, metadata !6689, metadata !DIExpression()), !dbg !6690
  %2 = mul i32 %0, 336, !dbg !6691
  %3 = lshr i32 %2, 6, !dbg !6692
  ret i32 %3, !dbg !6693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6694 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6696, metadata !DIExpression()), !dbg !6699
  tail call void @config_enable_default_clocks() #25, !dbg !6700
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !6701
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !6701
  %4 = lshr i32 %3, 4, !dbg !6701
  %5 = and i32 %4, 15, !dbg !6701
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6701
  %7 = load i8, i8* %6, align 1, !dbg !6701
  %8 = zext i8 %7 to i32, !dbg !6701
  %9 = lshr i32 %2, %8, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %9, metadata !6697, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6698, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6699
  %10 = icmp ult i32 %9, 84000000, !dbg !6702
  br i1 %10, label %11, label %13, !dbg !6704

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !6705
  br label %13, !dbg !6707

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !6708
  tail call fastcc void @set_up_plls() #24, !dbg !6709
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !6710
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !6713
  br label %14, !dbg !6714

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6715
  %16 = icmp eq i32 %15, 8, !dbg !6716
  br i1 %16, label %17, label %14, !dbg !6714, !llvm.loop !6717

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6719
  br i1 %18, label %19, label %21, !dbg !6721

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !6722
  br label %21, !dbg !6724

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !6725
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !6726
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !6727
  ret i32 0, !dbg !6728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6729 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6731
  %2 = and i32 %1, 240, !dbg !6731
  ret i32 %2, !dbg !6732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6733 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !6734
  %2 = icmp eq i32 %1, 1, !dbg !6738
  br i1 %2, label %7, label %3, !dbg !6739

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !6740
  br label %4, !dbg !6742

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !6743
  %6 = icmp eq i32 %5, 1, !dbg !6744
  br i1 %6, label %7, label %4, !dbg !6742, !llvm.loop !6745

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !6747
  br label %8, !dbg !6750

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !6751
  %10 = icmp eq i32 %9, 1, !dbg !6752
  br i1 %10, label %11, label %8, !dbg !6750, !llvm.loop !6753

11:                                               ; preds = %8
  ret void, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6756 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6757
  %2 = icmp eq i32 %1, 8, !dbg !6759
  br i1 %2, label %3, label %4, !dbg !6760

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !6761
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !6763
  br label %4, !dbg !6764

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !6765
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6766
  %6 = and i32 %5, -196609, !dbg !6766
  %7 = or i32 %6, 65536, !dbg !6766
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6766
  tail call void @config_pll_sysclock() #25, !dbg !6767
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !6768
  br label %8, !dbg !6769

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !6770
  %10 = icmp eq i32 %9, 1, !dbg !6771
  br i1 %10, label %11, label %8, !dbg !6769, !llvm.loop !6772

11:                                               ; preds = %8
  ret void, !dbg !6774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6779
  %2 = and i32 %1, -241, !dbg !6779
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6779
  ret void, !dbg !6780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !6781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6783, metadata !DIExpression()), !dbg !6784
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6785
  %3 = and i32 %2, -4, !dbg !6785
  %4 = or i32 %3, %0, !dbg !6785
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6785
  ret void, !dbg !6786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !6787 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6788
  %2 = and i32 %1, 12, !dbg !6788
  ret i32 %2, !dbg !6789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !6790 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !6792, metadata !DIExpression()), !dbg !6793
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6794
  %2 = and i32 %1, -7169, !dbg !6794
  %3 = or i32 %2, 4096, !dbg !6794
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6794
  ret void, !dbg !6795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !6796 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6798, metadata !DIExpression()), !dbg !6799
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6800
  %2 = and i32 %1, -57345, !dbg !6800
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6800
  ret void, !dbg !6801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !6802 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !6803
  %2 = icmp eq i32 %1, 1, !dbg !6805
  br i1 %2, label %7, label %3, !dbg !6806

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !6807
  br label %4, !dbg !6809

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !6810
  %6 = icmp eq i32 %5, 1, !dbg !6811
  br i1 %6, label %7, label %4, !dbg !6809, !llvm.loop !6812

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !6814
  br label %8, !dbg !6815

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6816
  %10 = icmp eq i32 %9, 0, !dbg !6817
  br i1 %10, label %11, label %8, !dbg !6815, !llvm.loop !6818

11:                                               ; preds = %8
  ret void, !dbg !6820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !6821 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6822
  %2 = and i32 %1, -16777217, !dbg !6822
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6822
  ret void, !dbg !6823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !6824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6825
  %2 = or i32 %1, 16777216, !dbg !6825
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6825
  ret void, !dbg !6826
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !6827 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6828
  %2 = lshr i32 %1, 25, !dbg !6829
  %3 = and i32 %2, 1, !dbg !6829
  ret i32 %3, !dbg !6830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !6831 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6832
  %2 = lshr i32 %1, 1, !dbg !6833
  %3 = and i32 %2, 1, !dbg !6833
  ret i32 %3, !dbg !6834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !6835 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6836
  %2 = or i32 %1, 1, !dbg !6836
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6836
  ret void, !dbg !6837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !6838 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6839
  %2 = or i32 %1, 1, !dbg !6839
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6839
  ret void, !dbg !6840
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !6841 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6842
  %2 = lshr i32 %1, 1, !dbg !6843
  %3 = and i32 %2, 1, !dbg !6843
  ret i32 %3, !dbg !6844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !6845 {
  ret i32 16000000, !dbg !6847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !6850 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !6851
  ret void, !dbg !6852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !6853 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6857, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata i32 16, metadata !6858, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata i32 336, metadata !6859, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata i32 65536, metadata !6860, metadata !DIExpression()), !dbg !6861
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6862
  %2 = and i32 %1, -4227072, !dbg !6862
  %3 = or i32 %2, 21520, !dbg !6862
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6862
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6863
  %5 = and i32 %4, -196609, !dbg !6863
  %6 = or i32 %5, 65536, !dbg !6863
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6863
  ret void, !dbg !6864
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !6865 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !6866
  ret void, !dbg !6867
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !6868 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6871, metadata !DIExpression()), !dbg !6873
  %2 = bitcast i32* %1 to i8*, !dbg !6874
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6874
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6872, metadata !DIExpression()), !dbg !6875
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6876
  %4 = or i32 %3, 268435456, !dbg !6876
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6876
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6877
  %6 = and i32 %5, 268435456, !dbg !6877
  store volatile i32 %6, i32* %1, align 4, !dbg !6878
  %7 = load volatile i32, i32* %1, align 4, !dbg !6879
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6880
  ret void, !dbg !6880
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6883, metadata !DIExpression()), !dbg !6884
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !6885
  br i1 %2, label %3, label %4, !dbg !6887

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !6888
  br label %4, !dbg !6889

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !6884
  ret i32 %5, !dbg !6890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6891 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6896, metadata !DIExpression()), !dbg !6897
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6898, !srcloc !6900
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !6901
  ret i1 %1, !dbg !6902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !6903 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !6904
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !6905
  ret void, !dbg !6906
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !6907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6909, metadata !DIExpression()), !dbg !6910
  %2 = icmp eq i32 %0, 10, !dbg !6911
  br i1 %2, label %3, label %4, !dbg !6913

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !6914
  br label %4, !dbg !6916

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !6917
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !6918
  ret i32 %0, !dbg !6919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !6920 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i8 %0, metadata !6924, metadata !DIExpression()), !dbg !6925
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6926, !srcloc !6928
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !6929
  ret void, !dbg !6930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !6931 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6933, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.value(metadata i8 %0, metadata !6934, metadata !DIExpression()), !dbg !6936
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6937
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !6935, metadata !DIExpression()), !dbg !6936
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !6938
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !6938
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6941 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6943, metadata !DIExpression()), !dbg !6944
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6945
  ret i1 %1, !dbg !6946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !6947 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !6994, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !6995, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !6996, metadata !DIExpression()), !dbg !6997
  ret void, !dbg !6998
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !6999 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7001, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8 %1, metadata !7002, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 %2, metadata !7003, metadata !DIExpression()), !dbg !7006
  %5 = bitcast i32* %4 to i8*, !dbg !7007
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7007
  call void @llvm.dbg.value(metadata i32* %4, metadata !7005, metadata !DIExpression(DW_OP_deref)), !dbg !7006
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7008
  call void @llvm.dbg.value(metadata i32 %6, metadata !7004, metadata !DIExpression()), !dbg !7006
  %7 = icmp eq i32 %6, 0, !dbg !7009
  br i1 %7, label %8, label %31, !dbg !7011

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7004, metadata !DIExpression()), !dbg !7006
  %9 = and i32 %2, 131072, !dbg !7012
  %10 = icmp eq i32 %9, 0, !dbg !7014
  br i1 %10, label %28, label %11, !dbg !7015

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7016
  %13 = icmp eq i32 %12, 0, !dbg !7019
  br i1 %13, label %18, label %14, !dbg !7020

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7021
  %16 = shl nuw i32 1, %15, !dbg !7021
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7023
  br label %25, !dbg !7024

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7025
  %20 = icmp eq i32 %19, 0, !dbg !7027
  %21 = zext i8 %1 to i32, !dbg !7006
  br i1 %20, label %25, label %22, !dbg !7028

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7029
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7031
  br label %25, !dbg !7032

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7033
  %27 = load i32, i32* %4, align 4, !dbg !7034
  call void @llvm.dbg.value(metadata i32 %30, metadata !7005, metadata !DIExpression()), !dbg !7006
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7035
  br label %31, !dbg !7036

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7033
  %30 = load i32, i32* %4, align 4, !dbg !7034
  call void @llvm.dbg.value(metadata i32 %30, metadata !7005, metadata !DIExpression()), !dbg !7006
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7035
  call void @llvm.dbg.value(metadata i32 0, metadata !7004, metadata !DIExpression()), !dbg !7006
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7037
  ret i32 %6, !dbg !7037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7042, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i32* %1, metadata !7043, metadata !DIExpression()), !dbg !7047
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7048
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7048
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7048
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7044, metadata !DIExpression()), !dbg !7047
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7049
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7049
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7049
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7046, metadata !DIExpression()), !dbg !7047
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7050
  store i32 %9, i32* %1, align 4, !dbg !7051
  ret i32 0, !dbg !7052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7053 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7055, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.value(metadata i32 %1, metadata !7056, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.value(metadata i32 %2, metadata !7057, metadata !DIExpression()), !dbg !7061
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7062
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7062
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7062
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7058, metadata !DIExpression()), !dbg !7061
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7063
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7063
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7063
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7059, metadata !DIExpression()), !dbg !7061
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7064
  call void @llvm.dbg.value(metadata i32 %10, metadata !7060, metadata !DIExpression()), !dbg !7061
  %11 = xor i32 %1, -1, !dbg !7065
  %12 = and i32 %10, %11, !dbg !7066
  %13 = and i32 %2, %1, !dbg !7067
  %14 = or i32 %12, %13, !dbg !7068
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7069
  ret i32 0, !dbg !7070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7073, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i32 %1, metadata !7074, metadata !DIExpression()), !dbg !7077
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7078
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7078
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7078
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7075, metadata !DIExpression()), !dbg !7077
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7079
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7079
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7079
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7076, metadata !DIExpression()), !dbg !7077
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7080
  store volatile i32 %1, i32* %9, align 4, !dbg !7080
  ret i32 0, !dbg !7081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7084, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i32 %1, metadata !7085, metadata !DIExpression()), !dbg !7088
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7089
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7089
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7089
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7086, metadata !DIExpression()), !dbg !7088
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7090
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7090
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7090
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7087, metadata !DIExpression()), !dbg !7088
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7091
  ret i32 0, !dbg !7092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7095, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i32 %1, metadata !7096, metadata !DIExpression()), !dbg !7099
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7100
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7100
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7100
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7097, metadata !DIExpression()), !dbg !7099
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7101
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7101
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7101
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7098, metadata !DIExpression()), !dbg !7099
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7102
  %10 = load volatile i32, i32* %9, align 4, !dbg !7102
  %11 = xor i32 %10, %1, !dbg !7102
  store volatile i32 %11, i32* %9, align 4, !dbg !7102
  ret i32 0, !dbg !7103
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7106, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i8 %1, metadata !7107, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i32 %2, metadata !7108, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i32 %3, metadata !7109, metadata !DIExpression()), !dbg !7116
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7117
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7117
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7117
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7110, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i8* undef, metadata !7111, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i32 0, metadata !7113, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i32 0, metadata !7114, metadata !DIExpression()), !dbg !7116
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7118

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7119
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7123
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7124
  %12 = load i32, i32* %11, align 4, !dbg !7124
  %13 = icmp eq i32 %10, %12, !dbg !7125
  br i1 %13, label %14, label %29, !dbg !7126

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !7127
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !7129
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !7130
  br label %29, !dbg !7131

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7132
  %17 = load i8*, i8** %16, align 4, !dbg !7132
  call void @llvm.dbg.value(metadata i8* %17, metadata !7111, metadata !DIExpression()), !dbg !7116
  %18 = zext i8 %1 to i32, !dbg !7133
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !7135
  %20 = icmp eq i32 %19, 0, !dbg !7136
  br i1 %20, label %21, label %29, !dbg !7137

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7138
  %23 = load i32, i32* %22, align 4, !dbg !7138
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7139
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7140

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7113, metadata !DIExpression()), !dbg !7116
  br label %27, !dbg !7141

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7113, metadata !DIExpression()), !dbg !7116
  br label %27, !dbg !7143

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7113, metadata !DIExpression()), !dbg !7116
  br label %27, !dbg !7144

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7116
  call void @llvm.dbg.value(metadata i32 %28, metadata !7113, metadata !DIExpression()), !dbg !7116
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !7145
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !7146
  br label %29, !dbg !7146

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7116
  call void @llvm.dbg.value(metadata i32 %30, metadata !7114, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.label(metadata !7115), !dbg !7147
  ret i32 %30, !dbg !7148
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #12 !dbg !7149 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7151, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7152, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i1 %2, metadata !7153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7155
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7156
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7156
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7156
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7154, metadata !DIExpression()), !dbg !7155
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7157
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7158
  ret i32 %8, !dbg !7159
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #12 !dbg !7160 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7166, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7167, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.value(metadata i1 %2, metadata !7168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7169
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7170
  br i1 %4, label %10, label %5, !dbg !7172

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7173
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7176
  %8 = or i1 %7, %2, !dbg !7177
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7177
  br i1 %2, label %11, label %13, !dbg !7177

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7178

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7179
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7182
  br label %13, !dbg !7183

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7169
  ret i32 %14, !dbg !7184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7185 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7189, metadata !DIExpression()), !dbg !7190
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7191
  %3 = icmp eq %struct._snode* %2, null, !dbg !7191
  ret i1 %3, !dbg !7191
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !7192 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7196, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7197, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7198, metadata !DIExpression()), !dbg !7200
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7201
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7198, metadata !DIExpression()), !dbg !7200
  %4 = icmp eq %struct._snode* %3, null, !dbg !7203
  br i1 %4, label %15, label %5, !dbg !7201

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7198, metadata !DIExpression()), !dbg !7200
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7205
  br i1 %6, label %9, label %11, !dbg !7208

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7198, metadata !DIExpression()), !dbg !7200
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7205
  br i1 %8, label %9, label %11, !dbg !7208, !llvm.loop !7209

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7210
  br label %15, !dbg !7210

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7198, metadata !DIExpression()), !dbg !7200
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7203
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7199, metadata !DIExpression()), !dbg !7200
  %14 = icmp eq %struct._snode* %13, null, !dbg !7203
  br i1 %14, label %15, label %7, !dbg !7201, !llvm.loop !7209

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !7213 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7217, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7218, metadata !DIExpression()), !dbg !7219
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7220
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7220
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7220
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7221
  %5 = icmp eq %struct._snode* %4, null, !dbg !7221
  br i1 %5, label %6, label %8, !dbg !7220

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7223
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7223
  br label %8, !dbg !7223

8:                                                ; preds = %6, %2
  ret void, !dbg !7220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7225 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7229, metadata !DIExpression()), !dbg !7230
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7231
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7231
  ret %struct._snode* %3, !dbg !7232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7233 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7237, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7238, metadata !DIExpression()), !dbg !7239
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7240
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7241
  ret void, !dbg !7242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7243 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7245, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7246, metadata !DIExpression()), !dbg !7247
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7248
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7251 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7253, metadata !DIExpression()), !dbg !7254
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7255
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7255
  ret %struct._snode* %3, !dbg !7256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7257 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7259, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7260, metadata !DIExpression()), !dbg !7261
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7262
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7263
  ret void, !dbg !7264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !7265 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7269, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7270, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7271, metadata !DIExpression()), !dbg !7272
  %4 = icmp eq %struct._snode* %1, null, !dbg !7273
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7275
  br i1 %4, label %6, label %11, !dbg !7276

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7277
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7279
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7279
  br i1 %8, label %9, label %15, !dbg !7277

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7281
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7281
  br label %15, !dbg !7281

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7283
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7285
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7285
  br i1 %13, label %14, label %15, !dbg !7283

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7287
  br label %15, !dbg !7287

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7276
  ret void, !dbg !7276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7289 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7293, metadata !DIExpression()), !dbg !7294
  %2 = icmp eq %struct._snode* %0, null, !dbg !7295
  br i1 %2, label %5, label %3, !dbg !7295

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7295
  br label %5, !dbg !7295

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7295
  ret %struct._snode* %6, !dbg !7295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7296 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7298, metadata !DIExpression()), !dbg !7299
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7300
  ret %struct._snode* %2, !dbg !7300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7301 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7303, metadata !DIExpression()), !dbg !7304
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7305
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7305
  ret %struct._snode* %3, !dbg !7306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7309, metadata !DIExpression()), !dbg !7312
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7313, !range !7314
  call void @llvm.dbg.value(metadata i32 %2, metadata !7310, metadata !DIExpression()), !dbg !7312
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !7315
  call void @llvm.dbg.value(metadata i32 %3, metadata !7311, metadata !DIExpression()), !dbg !7312
  ret i32 %3, !dbg !7316
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7319, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %1, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %1, metadata !7321, metadata !DIExpression()), !dbg !7322
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7323
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7323
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7324
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7324
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7324
  %8 = shl nuw i32 1, %0, !dbg !7325
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !7326
  ret void, !dbg !7327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7328 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7332, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %1, metadata !7333, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7334, metadata !DIExpression()), !dbg !7338
  %4 = bitcast i64* %3 to i8*, !dbg !7339
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7339
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7336, metadata !DIExpression()), !dbg !7338
  store i64 70368744177732, i64* %3, align 8, !dbg !7340
  call void @llvm.dbg.value(metadata i64* %3, metadata !7336, metadata !DIExpression(DW_OP_deref)), !dbg !7338
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !7341
  call void @llvm.dbg.value(metadata i32 %5, metadata !7337, metadata !DIExpression()), !dbg !7338
  %6 = icmp eq i32 %5, 0, !dbg !7342
  br i1 %6, label %7, label %8, !dbg !7344

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !7345
  br label %8, !dbg !7346

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7347
  ret void, !dbg !7347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7348 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7350, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.value(metadata i8* %0, metadata !7351, metadata !DIExpression()), !dbg !7353
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7354
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7352, metadata !DIExpression()), !dbg !7353
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7355
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7355
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !7356
  ret i32 %5, !dbg !7357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7360, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata i32 %1, metadata !7361, metadata !DIExpression()), !dbg !7363
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !7364
  call void @llvm.dbg.value(metadata i32 %3, metadata !7362, metadata !DIExpression()), !dbg !7363
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !7365
  ret void, !dbg !7366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !7367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7371, metadata !DIExpression()), !dbg !7372
  %2 = sdiv i32 %0, 4, !dbg !7373
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7374
  %6 = add nsw i32 %5, 16, !dbg !7375
  %7 = shl i32 15, %6, !dbg !7376
  %8 = or i32 %7, %2, !dbg !7377
  ret i32 %8, !dbg !7378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7383, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i32 %1, metadata !7384, metadata !DIExpression()), !dbg !7385
  %3 = and i32 %1, 255, !dbg !7386
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7386
  %5 = load volatile i32, i32* %4, align 4, !dbg !7386
  %6 = lshr i32 %1, 16, !dbg !7386
  %7 = xor i32 %6, -1, !dbg !7386
  %8 = and i32 %5, %7, !dbg !7386
  call void @llvm.dbg.value(metadata i32 %6, metadata !7387, metadata !DIExpression()) #23, !dbg !7391
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7393, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %9, metadata !7390, metadata !DIExpression()) #23, !dbg !7391
  call void @llvm.dbg.value(metadata i32 %9, metadata !7395, metadata !DIExpression()) #23, !dbg !7400
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7402, !range !5622
  %11 = shl i32 %0, %10, !dbg !7386
  %12 = or i32 %11, %8, !dbg !7386
  store volatile i32 %12, i32* %4, align 4, !dbg !7386
  ret void, !dbg !7403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7404 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7408, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7409, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata i32 %2, metadata !7410, metadata !DIExpression()), !dbg !7413
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7414
  %5 = icmp eq %struct._snode* %4, null, !dbg !7414
  br i1 %5, label %21, label %6, !dbg !7414

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7416
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7412, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7411, metadata !DIExpression()), !dbg !7413
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7417
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7417
  %11 = load i32, i32* %10, align 4, !dbg !7417
  %12 = and i32 %11, %2, !dbg !7421
  %13 = icmp eq i32 %12, 0, !dbg !7421
  br i1 %13, label %19, label %14, !dbg !7422

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7411, metadata !DIExpression()), !dbg !7413
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7423
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7423
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7423
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !7425
  br label %19, !dbg !7426

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7411, metadata !DIExpression()), !dbg !7413
  %20 = icmp eq %struct._snode* %8, null, !dbg !7427
  br i1 %20, label %21, label %6, !dbg !7427

21:                                               ; preds = %19, %3
  ret void, !dbg !7428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7431, metadata !DIExpression()), !dbg !7432
  %2 = and i32 %0, 255, !dbg !7433
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7433
  %4 = load volatile i32, i32* %3, align 4, !dbg !7433
  %5 = lshr i32 %0, 16, !dbg !7433
  %6 = and i32 %4, %5, !dbg !7433
  call void @llvm.dbg.value(metadata i32 %5, metadata !7387, metadata !DIExpression()) #23, !dbg !7434
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7436, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %7, metadata !7390, metadata !DIExpression()) #23, !dbg !7434
  call void @llvm.dbg.value(metadata i32 %7, metadata !7395, metadata !DIExpression()) #23, !dbg !7437
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7439, !range !5622
  %9 = lshr i32 %6, %8, !dbg !7440
  ret i32 %9, !dbg !7441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7442 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7447, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 %1, metadata !7448, metadata !DIExpression()), !dbg !7449
  %3 = shl i32 %1, 16, !dbg !7450
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7450
  store volatile i32 %3, i32* %4, align 4, !dbg !7450
  ret void, !dbg !7451
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7452 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7456, metadata !DIExpression()), !dbg !7457
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7458
  %3 = load volatile i32, i32* %2, align 4, !dbg !7458
  ret i32 %3, !dbg !7459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7460 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7462, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i32 %1, metadata !7463, metadata !DIExpression()), !dbg !7464
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7465
  store volatile i32 %1, i32* %3, align 4, !dbg !7465
  ret void, !dbg !7466
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7467 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7469, metadata !DIExpression()), !dbg !7470
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7471
  %3 = load volatile i32, i32* %2, align 4, !dbg !7471
  ret i32 %3, !dbg !7472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !7473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7477, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i32* %1, metadata !7478, metadata !DIExpression()), !dbg !7479
  %3 = and i32 %0, 131072, !dbg !7480
  %4 = icmp eq i32 %3, 0, !dbg !7482
  br i1 %4, label %22, label %5, !dbg !7483

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7484
  %6 = and i32 %0, 2, !dbg !7486
  %7 = icmp eq i32 %6, 0, !dbg !7488
  br i1 %7, label %11, label %8, !dbg !7489

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7490
  %10 = icmp eq i32 %9, 0, !dbg !7490
  br i1 %10, label %33, label %11, !dbg !7493

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7494
  store i32 %12, i32* %1, align 4, !dbg !7494
  %13 = and i32 %0, 16, !dbg !7495
  %14 = icmp eq i32 %13, 0, !dbg !7497
  br i1 %14, label %17, label %15, !dbg !7498

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7499
  br label %31, !dbg !7501

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7502
  %19 = icmp eq i32 %18, 0, !dbg !7504
  br i1 %19, label %33, label %20, !dbg !7505

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7506
  br label %31, !dbg !7508

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7509
  %24 = icmp eq i32 %23, 0, !dbg !7511
  br i1 %24, label %31, label %25, !dbg !7512

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7513
  %27 = icmp eq i32 %26, 0, !dbg !7516
  br i1 %27, label %28, label %31, !dbg !7517

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7518
  br label %33, !dbg !7519

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7479
  ret i32 %34, !dbg !7519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7524, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %1, metadata !7525, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7526, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %3, metadata !7527, metadata !DIExpression()), !dbg !7535
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7536
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7536
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7536
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7528, metadata !DIExpression()), !dbg !7535
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7537
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7537
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7537
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7529, metadata !DIExpression()), !dbg !7535
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !7538
  call void @llvm.dbg.value(metadata i32 %11, metadata !7530, metadata !DIExpression()), !dbg !7535
  %12 = and i32 %2, 48, !dbg !7539
  call void @llvm.dbg.value(metadata i32 %12, metadata !7531, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7532, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7533, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7534, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7535
  %13 = lshr i32 %2, 6, !dbg !7540
  %14 = and i32 %13, 1, !dbg !7540
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !7541
  %15 = lshr i32 %2, 7, !dbg !7542
  %16 = and i32 %15, 3, !dbg !7542
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !7543
  %17 = lshr i32 %2, 9, !dbg !7544
  %18 = and i32 %17, 3, !dbg !7544
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !7545
  %19 = icmp eq i32 %12, 32, !dbg !7546
  br i1 %19, label %20, label %24, !dbg !7548

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7549
  br i1 %21, label %22, label %23, !dbg !7552

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7553
  br label %24, !dbg !7555

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7556
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7558
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !7559
  ret void, !dbg !7560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !7561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7563, metadata !DIExpression()), !dbg !7565
  %2 = shl nuw i32 1, %0, !dbg !7566
  call void @llvm.dbg.value(metadata i32 %2, metadata !7564, metadata !DIExpression()), !dbg !7565
  ret i32 %2, !dbg !7567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7568 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7572, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 %1, metadata !7573, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 %2, metadata !7574, metadata !DIExpression()), !dbg !7575
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7576
  %5 = load volatile i32, i32* %4, align 4, !dbg !7576
  %6 = xor i32 %1, -1, !dbg !7576
  %7 = and i32 %5, %6, !dbg !7576
  %8 = mul i32 %2, %1, !dbg !7576
  %9 = or i32 %7, %8, !dbg !7576
  store volatile i32 %9, i32* %4, align 4, !dbg !7576
  ret void, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7578 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7580, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i32 %1, metadata !7581, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i32 %2, metadata !7582, metadata !DIExpression()), !dbg !7583
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7584
  %5 = load volatile i32, i32* %4, align 4, !dbg !7584
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7585
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7587, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7585
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7588
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7590, !range !5622
  %8 = shl nuw nsw i32 %7, 1, !dbg !7584
  %9 = shl i32 3, %8, !dbg !7584
  %10 = xor i32 %9, -1, !dbg !7584
  %11 = and i32 %5, %10, !dbg !7584
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7591
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7591
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7593
  %12 = shl i32 %2, %8, !dbg !7584
  %13 = or i32 %11, %12, !dbg !7584
  store volatile i32 %13, i32* %4, align 4, !dbg !7584
  ret void, !dbg !7595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7596 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7598, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 %1, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 %2, metadata !7600, metadata !DIExpression()), !dbg !7601
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7602
  %5 = load volatile i32, i32* %4, align 4, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7603
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7605, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7603
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7606
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7608, !range !5622
  %8 = shl nuw nsw i32 %7, 1, !dbg !7602
  %9 = shl i32 3, %8, !dbg !7602
  %10 = xor i32 %9, -1, !dbg !7602
  %11 = and i32 %5, %10, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7611
  %12 = shl i32 %2, %8, !dbg !7602
  %13 = or i32 %11, %12, !dbg !7602
  store volatile i32 %13, i32* %4, align 4, !dbg !7602
  ret void, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7614 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7616, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %1, metadata !7617, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %2, metadata !7618, metadata !DIExpression()), !dbg !7619
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7620
  %5 = load volatile i32, i32* %4, align 4, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7621
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7623, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7621
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7624
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7626, !range !5622
  %8 = shl nuw nsw i32 %7, 2, !dbg !7620
  %9 = shl i32 15, %8, !dbg !7620
  %10 = xor i32 %9, -1, !dbg !7620
  %11 = and i32 %5, %10, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7627
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7627
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7629
  %12 = shl i32 %2, %8, !dbg !7620
  %13 = or i32 %11, %12, !dbg !7620
  store volatile i32 %13, i32* %4, align 4, !dbg !7620
  ret void, !dbg !7631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7632 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7634, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %1, metadata !7635, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %2, metadata !7636, metadata !DIExpression()), !dbg !7637
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7638
  %5 = load volatile i32, i32* %4, align 4, !dbg !7638
  %6 = lshr i32 %1, 8, !dbg !7638
  call void @llvm.dbg.value(metadata i32 %6, metadata !7387, metadata !DIExpression()) #23, !dbg !7639
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7641, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %7, metadata !7390, metadata !DIExpression()) #23, !dbg !7639
  call void @llvm.dbg.value(metadata i32 %7, metadata !7395, metadata !DIExpression()) #23, !dbg !7642
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7644, !range !5622
  %9 = shl nuw nsw i32 %8, 2, !dbg !7638
  %10 = shl i32 15, %9, !dbg !7638
  %11 = xor i32 %10, -1, !dbg !7638
  %12 = and i32 %5, %11, !dbg !7638
  call void @llvm.dbg.value(metadata i32 %6, metadata !7387, metadata !DIExpression()) #23, !dbg !7645
  call void @llvm.dbg.value(metadata i32 %7, metadata !7390, metadata !DIExpression()) #23, !dbg !7645
  call void @llvm.dbg.value(metadata i32 %7, metadata !7395, metadata !DIExpression()) #23, !dbg !7647
  %13 = shl i32 %2, %9, !dbg !7638
  %14 = or i32 %12, %13, !dbg !7638
  store volatile i32 %14, i32* %4, align 4, !dbg !7638
  ret void, !dbg !7649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7650 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7652, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i32 %1, metadata !7653, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i32 %2, metadata !7654, metadata !DIExpression()), !dbg !7655
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7656
  %5 = load volatile i32, i32* %4, align 4, !dbg !7656
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7657
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7659, !srcloc !7394
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7657
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7660
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7662, !range !5622
  %8 = shl nuw nsw i32 %7, 1, !dbg !7656
  %9 = shl i32 3, %8, !dbg !7656
  %10 = xor i32 %9, -1, !dbg !7656
  %11 = and i32 %5, %10, !dbg !7656
  call void @llvm.dbg.value(metadata i32 %1, metadata !7387, metadata !DIExpression()) #23, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()) #23, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()) #23, !dbg !7665
  %12 = shl i32 %2, %8, !dbg !7656
  %13 = or i32 %11, %12, !dbg !7656
  store volatile i32 %13, i32* %4, align 4, !dbg !7656
  ret void, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7670, metadata !DIExpression()), !dbg !7673
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7674
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7674
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7674
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7671, metadata !DIExpression()), !dbg !7673
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7675
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7676
  %6 = tail call fastcc zeroext i1 @device_is_ready.40() #24, !dbg !7677
  br i1 %6, label %7, label %11, !dbg !7679

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !7680
  call void @llvm.dbg.value(metadata i32 %8, metadata !7672, metadata !DIExpression()), !dbg !7673
  %9 = icmp slt i32 %8, 0, !dbg !7681
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7683
  br label %11, !dbg !7683

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7673
  ret i32 %12, !dbg !7684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.40() unnamed_addr #1 !dbg !7685 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7689, metadata !DIExpression()), !dbg !7690
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7691, !srcloc !7693
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.41() #24, !dbg !7694
  ret i1 %1, !dbg !7695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7700, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata i8 1, metadata !7701, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7702, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata i32 0, metadata !7703, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7704, metadata !DIExpression()), !dbg !7705
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7706
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7706
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7706
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7702, metadata !DIExpression()), !dbg !7705
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7707
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7710
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %7, metadata !7703, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata i32 %7, metadata !7703, metadata !DIExpression()), !dbg !7705
  ret i32 %7, !dbg !7712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.41() unnamed_addr #1 !dbg !7713 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7715, metadata !DIExpression()), !dbg !7716
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !7717
  ret i1 %1, !dbg !7718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7723, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 %1, metadata !7724, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 %2, metadata !7725, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 %3, metadata !7726, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 0, metadata !7727, metadata !DIExpression()), !dbg !7731
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !7732
  %5 = icmp eq i32 %3, 17, !dbg !7733
  br i1 %5, label %6, label %14, !dbg !7734

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %7, metadata !7728, metadata !DIExpression()), !dbg !7736
  %8 = icmp eq i32 %7, 0, !dbg !7737
  %9 = shl nuw i32 1, %1, !dbg !7739
  br i1 %8, label %12, label %10, !dbg !7740

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !7741
  br label %14, !dbg !7743

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !7744
  br label %14, !dbg !7747

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7748
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !7749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7751, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata i8* %1, metadata !7752, metadata !DIExpression()), !dbg !7755
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7756
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7756
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7756
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7753, metadata !DIExpression()), !dbg !7755
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7757
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7757
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !7759
  %9 = icmp eq i32 %8, 0, !dbg !7759
  br i1 %9, label %12, label %10, !dbg !7760

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7761
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !7763
  br label %12, !dbg !7764

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7765
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !7767
  %15 = icmp eq i32 %14, 0, !dbg !7767
  br i1 %15, label %19, label %16, !dbg !7768

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7769
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !7770
  store i8 %18, i8* %1, align 1, !dbg !7771
  br label %19, !dbg !7772

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7755
  ret i32 %20, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7776, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.value(metadata i8 %1, metadata !7777, metadata !DIExpression()), !dbg !7780
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7781
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7781
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7781
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7778, metadata !DIExpression()), !dbg !7780
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !7782

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7783
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !7786
  %10 = icmp eq i32 %9, 0, !dbg !7786
  br i1 %10, label %18, label %11, !dbg !7787

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7788, !srcloc !7795
  call void @llvm.dbg.value(metadata i32 undef, metadata !7791, metadata !DIExpression()) #23, !dbg !7796
  call void @llvm.dbg.value(metadata i32 undef, metadata !7792, metadata !DIExpression()) #23, !dbg !7796
  call void @llvm.dbg.value(metadata i32 undef, metadata !7779, metadata !DIExpression()), !dbg !7780
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7797
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !7799
  %15 = icmp eq i32 %14, 0, !dbg !7799
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !7788
  br i1 %15, label %17, label %19, !dbg !7800

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !7791, metadata !DIExpression()) #23, !dbg !7796
  call void @llvm.dbg.value(metadata i32 %16, metadata !7779, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.value(metadata i32 undef, metadata !7801, metadata !DIExpression()) #23, !dbg !7804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !7806, !srcloc !7807
  br label %18, !dbg !7808

18:                                               ; preds = %17, %7
  br label %7, !dbg !7783, !llvm.loop !7809

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !7788
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7811
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %20, metadata !7801, metadata !DIExpression()) #23, !dbg !7813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !7815, !srcloc !7807
  ret void, !dbg !7816
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !7817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7819, metadata !DIExpression()), !dbg !7822
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7823
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !7823
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !7823
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !7820, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i32 0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !7824
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7824
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !7826
  %8 = icmp ne i32 %7, 0, !dbg !7826
  %9 = zext i1 %8 to i32, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %9, metadata !7821, metadata !DIExpression()), !dbg !7822
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7828
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !7830
  %12 = icmp eq i32 %11, 0, !dbg !7830
  %13 = or i32 %9, 2, !dbg !7831
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %14, metadata !7821, metadata !DIExpression()), !dbg !7822
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7832
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !7834
  %17 = icmp eq i32 %16, 0, !dbg !7834
  %18 = or i32 %14, 4, !dbg !7835
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %19, metadata !7821, metadata !DIExpression()), !dbg !7822
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7836
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !7838
  %22 = icmp eq i32 %21, 0, !dbg !7838
  %23 = or i32 %19, 8, !dbg !7839
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %24, metadata !7821, metadata !DIExpression()), !dbg !7822
  %25 = and i32 %24, 8, !dbg !7840
  %26 = icmp eq i32 %25, 0, !dbg !7840
  br i1 %26, label %29, label %27, !dbg !7842

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7843
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !7845
  br label %29, !dbg !7846

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !7847
  %31 = icmp eq i32 %30, 0, !dbg !7847
  br i1 %31, label %34, label %32, !dbg !7849

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7850
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !7852
  br label %34, !dbg !7853

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !7854
  %36 = icmp eq i32 %35, 0, !dbg !7854
  br i1 %36, label %39, label %37, !dbg !7856

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7857
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !7859
  br label %39, !dbg !7860

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !7861
  %41 = icmp eq i32 %40, 0, !dbg !7861
  br i1 %41, label %44, label %42, !dbg !7863

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7864
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !7866
  br label %44, !dbg !7867

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7868
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !7869
  ret i32 %24, !dbg !7870
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !7871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7873, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7874, metadata !DIExpression()), !dbg !7882
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7883
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7883
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7883
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7875, metadata !DIExpression()), !dbg !7882
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7884
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !7884
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !7884
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !7876, metadata !DIExpression()), !dbg !7882
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7885
  %10 = load i8, i8* %9, align 4, !dbg !7885
  %11 = zext i8 %10 to i32, !dbg !7886
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !7887
  call void @llvm.dbg.value(metadata i32 %12, metadata !7878, metadata !DIExpression()), !dbg !7882
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7888
  %14 = load i8, i8* %13, align 1, !dbg !7888
  %15 = zext i8 %14 to i32, !dbg !7889
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %16, metadata !7879, metadata !DIExpression()), !dbg !7882
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7891
  %18 = load i8, i8* %17, align 2, !dbg !7891
  %19 = zext i8 %18 to i32, !dbg !7892
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %20, metadata !7880, metadata !DIExpression()), !dbg !7882
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7894
  %22 = load i8, i8* %21, align 1, !dbg !7894
  %23 = zext i8 %22 to i32, !dbg !7895
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %24, metadata !7881, metadata !DIExpression()), !dbg !7882
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !7897

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !7899
  br i1 %26, label %69, label %27, !dbg !7901

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !7902

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !7903
  br i1 %29, label %65, label %30, !dbg !7903

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !7905
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !7882
  br i1 %31, label %38, label %34, !dbg !7907

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !7908
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !7908

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !7911
  br i1 %37, label %38, label %69, !dbg !7912

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7913
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !7914
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !7915
  %41 = icmp eq i32 %12, %40, !dbg !7917
  br i1 %41, label %43, label %42, !dbg !7918

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !7919
  br label %43, !dbg !7921

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !7922
  %45 = icmp eq i32 %16, %44, !dbg !7924
  br i1 %45, label %47, label %46, !dbg !7925

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !7926
  br label %47, !dbg !7928

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !7929
  %49 = icmp eq i32 %20, %48, !dbg !7931
  br i1 %49, label %51, label %50, !dbg !7932

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !7933
  br label %51, !dbg !7935

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !7936
  %53 = icmp eq i32 %24, %52, !dbg !7938
  br i1 %53, label %55, label %54, !dbg !7939

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !7940
  br label %55, !dbg !7942

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7943
  %57 = load i32, i32* %56, align 4, !dbg !7943
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !7945
  %59 = load i32, i32* %58, align 4, !dbg !7945
  %60 = icmp eq i32 %57, %59, !dbg !7946
  br i1 %60, label %63, label %61, !dbg !7947

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !7948
  %62 = load i32, i32* %56, align 4, !dbg !7950
  store i32 %62, i32* %58, align 4, !dbg !7951
  br label %63, !dbg !7952

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !7953
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !7954
  br label %69, !dbg !7955

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !7903
  %67 = and i8 %66, 1, !dbg !7903
  %68 = icmp eq i8 %67, 0, !dbg !7903
  br i1 %68, label %30, label %69, !dbg !7903

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !7882
  ret i32 %70, !dbg !7956
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !7957 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7959, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7960, metadata !DIExpression()), !dbg !7962
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7963
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !7963
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !7963
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !7961, metadata !DIExpression()), !dbg !7962
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !7964
  %7 = load i32, i32* %6, align 4, !dbg !7964
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7965
  store i32 %7, i32* %8, align 4, !dbg !7966
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !7967, !range !7968
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !7969
  %11 = trunc i32 %10 to i8, !dbg !7969
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7970
  store i8 %11, i8* %12, align 4, !dbg !7971
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !7972, !range !7973
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !7974
  %15 = trunc i32 %14 to i8, !dbg !7974
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7975
  store i8 %15, i8* %16, align 1, !dbg !7976
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !7977
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !7978, !range !7968
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !7979
  %20 = trunc i32 %19 to i8, !dbg !7979
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7980
  store i8 %20, i8* %21, align 2, !dbg !7981
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !7982, !range !7983
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !7984
  %24 = trunc i32 %23 to i8, !dbg !7984
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7985
  store i8 %24, i8* %25, align 1, !dbg !7986
  ret i32 0, !dbg !7987
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !7988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7992, metadata !DIExpression()), !dbg !7994
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7995
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !7995
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !7995
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !7993, metadata !DIExpression()), !dbg !7994
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !7996
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7996
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !7997
  ret i32 %7, !dbg !7998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !7999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8003, metadata !DIExpression()), !dbg !8004
  %2 = icmp eq i32 %0, 1024, !dbg !8005
  %3 = select i1 %2, i32 2, i32 0, !dbg !8005
  %4 = icmp eq i32 %0, 1536, !dbg !8005
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8005
  ret i32 %5, !dbg !8006
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8009, metadata !DIExpression()), !dbg !8011
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8012
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8012
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8012
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8010, metadata !DIExpression()), !dbg !8011
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8013
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8013
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8014
  ret i32 %7, !dbg !8015
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #10 !dbg !8016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8020, metadata !DIExpression()), !dbg !8021
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8022
  %3 = icmp ult i32 %2, 4, !dbg !8022
  br i1 %3, label %4, label %7, !dbg !8022

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8022
  %6 = load i32, i32* %5, align 4, !dbg !8022
  br label %7, !dbg !8022

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8023
  ret i32 %8, !dbg !8025
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8028, metadata !DIExpression()), !dbg !8030
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8031
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8031
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8031
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8029, metadata !DIExpression()), !dbg !8030
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8032
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8032
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8033
  ret i32 %7, !dbg !8034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8039, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32 %1, metadata !8040, metadata !DIExpression()), !dbg !8041
  %3 = icmp eq i32 %0, 4096, !dbg !8042
  %4 = icmp eq i32 %1, 0, !dbg !8042
  %5 = select i1 %4, i32 4, i32 3, !dbg !8042
  %6 = select i1 %4, i32 3, i32 2, !dbg !8042
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8042
  ret i32 %7, !dbg !8043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8046, metadata !DIExpression()), !dbg !8048
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8049
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8049
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8049
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8047, metadata !DIExpression()), !dbg !8048
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8050
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8050
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8051
  ret i32 %7, !dbg !8052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !8053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8057, metadata !DIExpression()), !dbg !8058
  %2 = icmp eq i32 %0, 768, !dbg !8059
  %3 = zext i1 %2 to i32, !dbg !8058
  ret i32 %3, !dbg !8061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8062 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8067, metadata !DIExpression()), !dbg !8068
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8069
  %3 = load volatile i32, i32* %2, align 4, !dbg !8069
  %4 = and i32 %3, 768, !dbg !8069
  ret i32 %4, !dbg !8070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8071 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8073, metadata !DIExpression()), !dbg !8074
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8075
  %3 = load volatile i32, i32* %2, align 4, !dbg !8075
  %4 = and i32 %3, 4096, !dbg !8075
  ret i32 %4, !dbg !8076
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8077 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8079, metadata !DIExpression()), !dbg !8080
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8081
  %3 = load volatile i32, i32* %2, align 4, !dbg !8081
  %4 = and i32 %3, 12288, !dbg !8081
  ret i32 %4, !dbg !8082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8083 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8085, metadata !DIExpression()), !dbg !8086
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8087
  %3 = load volatile i32, i32* %2, align 4, !dbg !8087
  %4 = and i32 %3, 1536, !dbg !8087
  ret i32 %4, !dbg !8088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !8089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8093, metadata !DIExpression()), !dbg !8094
  %2 = icmp eq i32 %0, 2, !dbg !8095
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8095
  %4 = icmp eq i32 %0, 1, !dbg !8095
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8095
  ret i32 %5, !dbg !8096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !8097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8101, metadata !DIExpression()), !dbg !8102
  %2 = icmp ult i32 %0, 3, !dbg !8103
  br i1 %2, label %3, label %6, !dbg !8103

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8103
  %5 = load i32, i32* %4, align 4, !dbg !8103
  br label %6, !dbg !8103

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8104
  ret i32 %7, !dbg !8106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !8107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8111, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %1, metadata !8112, metadata !DIExpression()), !dbg !8113
  %3 = icmp eq i32 %0, 4, !dbg !8114
  %4 = icmp eq i32 %1, 0, !dbg !8114
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8114
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8114
  ret i32 %6, !dbg !8115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !8116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8120, metadata !DIExpression()), !dbg !8121
  %2 = icmp eq i32 %0, 1, !dbg !8122
  %3 = select i1 %2, i32 768, i32 0, !dbg !8121
  ret i32 %3, !dbg !8124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8125 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8129, metadata !DIExpression()), !dbg !8130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8131
  %3 = load volatile i32, i32* %2, align 4, !dbg !8131
  %4 = and i32 %3, -8193, !dbg !8131
  store volatile i32 %4, i32* %2, align 4, !dbg !8131
  ret void, !dbg !8132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8137, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 %1, metadata !8138, metadata !DIExpression()), !dbg !8140
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8141
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8141
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8141
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8139, metadata !DIExpression()), !dbg !8140
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8142
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8142
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8143
  ret void, !dbg !8144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8145 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8147, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %1, metadata !8148, metadata !DIExpression()), !dbg !8150
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8151
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8151
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8151
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8149, metadata !DIExpression()), !dbg !8150
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8152
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8152
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8153
  ret void, !dbg !8154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8157, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 %1, metadata !8158, metadata !DIExpression()), !dbg !8160
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8161
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8161
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8161
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8159, metadata !DIExpression()), !dbg !8160
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8162
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8162
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8163
  ret void, !dbg !8164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8165 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8167, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32 %1, metadata !8168, metadata !DIExpression()), !dbg !8170
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8171
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8171
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8171
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8169, metadata !DIExpression()), !dbg !8170
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8172
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8172
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8173
  ret void, !dbg !8174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8175 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8177, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.value(metadata i32 %1, metadata !8178, metadata !DIExpression()), !dbg !8182
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8183
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8183
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8183
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8179, metadata !DIExpression()), !dbg !8182
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8184
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8184
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8184
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8180, metadata !DIExpression()), !dbg !8182
  %10 = bitcast i32* %3 to i8*, !dbg !8185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8185
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8186
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8186
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8190
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8190
  %15 = load i8*, i8** %14, align 4, !dbg !8190
  call void @llvm.dbg.value(metadata i32* %3, metadata !8181, metadata !DIExpression(DW_OP_deref)), !dbg !8182
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8191
  %17 = icmp slt i32 %16, 0, !dbg !8192
  br i1 %17, label %23, label %18, !dbg !8193

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8194
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8194
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8195
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8196
  %22 = load i32, i32* %3, align 4, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %22, metadata !8181, metadata !DIExpression()), !dbg !8182
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8198
  br label %23, !dbg !8199

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8199
  ret void, !dbg !8199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8200 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8202, metadata !DIExpression()), !dbg !8203
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8204
  %3 = load volatile i32, i32* %2, align 4, !dbg !8204
  %4 = or i32 %3, 8192, !dbg !8204
  store volatile i32 %4, i32* %2, align 4, !dbg !8204
  ret void, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8208, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.value(metadata i8* %1, metadata !8209, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.value(metadata i32* %2, metadata !8210, metadata !DIExpression()), !dbg !8212
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8213
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8213
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8213
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8211, metadata !DIExpression()), !dbg !8212
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8214
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8214
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8216
  br i1 %9, label %12, label %10, !dbg !8217

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !8218
  br label %12, !dbg !8219

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8212
  ret i32 %13, !dbg !8220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8221 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8225, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 0, metadata !8226, metadata !DIExpression()), !dbg !8227
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8228
  %3 = load volatile i32, i32* %2, align 4, !dbg !8228
  %4 = and i32 %3, -32769, !dbg !8228
  store volatile i32 %4, i32* %2, align 4, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8230 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8234, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i32 %1, metadata !8235, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i32 0, metadata !8236, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i32 %2, metadata !8237, metadata !DIExpression()), !dbg !8238
  %4 = zext i32 %1 to i64, !dbg !8239
  %5 = mul nuw nsw i64 %4, 25, !dbg !8239
  %6 = zext i32 %2 to i64, !dbg !8239
  %7 = shl nuw nsw i64 %6, 2, !dbg !8239
  %8 = udiv i64 %5, %7, !dbg !8239
  %9 = trunc i64 %8 to i32, !dbg !8239
  %10 = udiv i32 %9, 100, !dbg !8239
  %11 = shl nuw nsw i32 %10, 4, !dbg !8239
  %12 = mul i32 %10, -100, !dbg !8239
  %13 = add i32 %12, %9, !dbg !8239
  %14 = shl i32 %13, 4, !dbg !8239
  %15 = add i32 %14, 50, !dbg !8239
  %16 = udiv i32 %15, 100, !dbg !8239
  %17 = and i32 %16, 240, !dbg !8239
  %18 = add nuw nsw i32 %17, %11, !dbg !8239
  %19 = and i32 %16, 15, !dbg !8239
  %20 = and i32 %18, 65520, !dbg !8242
  %21 = or i32 %20, %19, !dbg !8242
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8243
  store volatile i32 %21, i32* %22, align 4, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8246 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8248, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i32 %1, metadata !8249, metadata !DIExpression()), !dbg !8250
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8251
  %4 = load volatile i32, i32* %3, align 4, !dbg !8251
  %5 = and i32 %4, -769, !dbg !8251
  %6 = or i32 %5, %1, !dbg !8251
  store volatile i32 %6, i32* %3, align 4, !dbg !8251
  ret void, !dbg !8252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8253 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32 %1, metadata !8256, metadata !DIExpression()), !dbg !8257
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8258
  %4 = load volatile i32, i32* %3, align 4, !dbg !8258
  %5 = and i32 %4, -4097, !dbg !8258
  %6 = or i32 %5, %1, !dbg !8258
  store volatile i32 %6, i32* %3, align 4, !dbg !8258
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %1, metadata !8263, metadata !DIExpression()), !dbg !8264
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8265
  %4 = load volatile i32, i32* %3, align 4, !dbg !8265
  %5 = and i32 %4, -12289, !dbg !8265
  %6 = or i32 %5, %1, !dbg !8265
  store volatile i32 %6, i32* %3, align 4, !dbg !8265
  ret void, !dbg !8266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8267 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8272
  %4 = load volatile i32, i32* %3, align 4, !dbg !8272
  %5 = and i32 %4, -1537, !dbg !8272
  %6 = or i32 %5, %1, !dbg !8272
  store volatile i32 %6, i32* %3, align 4, !dbg !8272
  ret void, !dbg !8273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8276, metadata !DIExpression()), !dbg !8277
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8278
  %3 = load volatile i32, i32* %2, align 4, !dbg !8278
  %4 = lshr i32 %3, 3, !dbg !8279
  %5 = and i32 %4, 1, !dbg !8279
  ret i32 %5, !dbg !8280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8281 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8283, metadata !DIExpression()), !dbg !8284
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8285
  %3 = load volatile i32, i32* %2, align 4, !dbg !8285
  %4 = and i32 %3, 1, !dbg !8285
  ret i32 %4, !dbg !8286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8287 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8289, metadata !DIExpression()), !dbg !8290
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8291
  %3 = load volatile i32, i32* %2, align 4, !dbg !8291
  %4 = lshr i32 %3, 1, !dbg !8292
  %5 = and i32 %4, 1, !dbg !8292
  ret i32 %5, !dbg !8293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8294 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8296, metadata !DIExpression()), !dbg !8297
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8298
  %3 = load volatile i32, i32* %2, align 4, !dbg !8298
  %4 = lshr i32 %3, 8, !dbg !8299
  %5 = and i32 %4, 1, !dbg !8299
  ret i32 %5, !dbg !8300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8301 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8303, metadata !DIExpression()), !dbg !8304
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8305
  store volatile i32 -257, i32* %2, align 4, !dbg !8305
  ret void, !dbg !8306
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8307 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8309, metadata !DIExpression()), !dbg !8311
  %3 = bitcast i32* %2 to i8*, !dbg !8312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8312
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8310, metadata !DIExpression()), !dbg !8313
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8314
  %5 = load volatile i32, i32* %4, align 4, !dbg !8314
  store volatile i32 %5, i32* %2, align 4, !dbg !8315
  %6 = load volatile i32, i32* %2, align 4, !dbg !8316
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8317
  %8 = load volatile i32, i32* %7, align 4, !dbg !8317
  store volatile i32 %8, i32* %2, align 4, !dbg !8318
  %9 = load volatile i32, i32* %2, align 4, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8320
  ret void, !dbg !8320
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8321 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8323, metadata !DIExpression()), !dbg !8325
  %3 = bitcast i32* %2 to i8*, !dbg !8326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8326
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8324, metadata !DIExpression()), !dbg !8327
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8328
  %5 = load volatile i32, i32* %4, align 4, !dbg !8328
  store volatile i32 %5, i32* %2, align 4, !dbg !8329
  %6 = load volatile i32, i32* %2, align 4, !dbg !8330
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8331
  %8 = load volatile i32, i32* %7, align 4, !dbg !8331
  store volatile i32 %8, i32* %2, align 4, !dbg !8332
  %9 = load volatile i32, i32* %2, align 4, !dbg !8333
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8334
  ret void, !dbg !8334
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8335 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8337, metadata !DIExpression()), !dbg !8339
  %3 = bitcast i32* %2 to i8*, !dbg !8340
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8338, metadata !DIExpression()), !dbg !8341
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8342
  %5 = load volatile i32, i32* %4, align 4, !dbg !8342
  store volatile i32 %5, i32* %2, align 4, !dbg !8343
  %6 = load volatile i32, i32* %2, align 4, !dbg !8344
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8345
  %8 = load volatile i32, i32* %7, align 4, !dbg !8345
  store volatile i32 %8, i32* %2, align 4, !dbg !8346
  %9 = load volatile i32, i32* %2, align 4, !dbg !8347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8348
  ret void, !dbg !8348
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8349 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8351, metadata !DIExpression()), !dbg !8353
  %3 = bitcast i32* %2 to i8*, !dbg !8354
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8354
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8352, metadata !DIExpression()), !dbg !8355
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8356
  %5 = load volatile i32, i32* %4, align 4, !dbg !8356
  store volatile i32 %5, i32* %2, align 4, !dbg !8357
  %6 = load volatile i32, i32* %2, align 4, !dbg !8358
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8359
  %8 = load volatile i32, i32* %7, align 4, !dbg !8359
  store volatile i32 %8, i32* %2, align 4, !dbg !8360
  %9 = load volatile i32, i32* %2, align 4, !dbg !8361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8362
  ret void, !dbg !8362
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8363 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8365, metadata !DIExpression()), !dbg !8366
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8367
  %3 = load volatile i32, i32* %2, align 4, !dbg !8367
  %4 = lshr i32 %3, 7, !dbg !8368
  %5 = and i32 %4, 1, !dbg !8368
  ret i32 %5, !dbg !8369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i8 %1, metadata !8375, metadata !DIExpression()), !dbg !8376
  %3 = zext i8 %1 to i32, !dbg !8377
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8378
  store volatile i32 %3, i32* %4, align 4, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8383, metadata !DIExpression()), !dbg !8384
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8385
  %3 = load volatile i32, i32* %2, align 4, !dbg !8385
  %4 = lshr i32 %3, 5, !dbg !8386
  %5 = and i32 %4, 1, !dbg !8386
  ret i32 %5, !dbg !8387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8394
  %3 = load volatile i32, i32* %2, align 4, !dbg !8394
  %4 = trunc i32 %3 to i8, !dbg !8395
  ret i8 %4, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8399, metadata !DIExpression()), !dbg !8405
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8406
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8406
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8406
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8400, metadata !DIExpression()), !dbg !8405
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8407
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8407
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8407
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8401, metadata !DIExpression()), !dbg !8405
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !8408
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8409
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8409
  %10 = tail call fastcc zeroext i1 @device_is_ready.46(%struct.device* noundef %9) #24, !dbg !8411
  br i1 %10, label %11, label %49, !dbg !8412

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8413
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8414
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8414
  %15 = load i8*, i8** %14, align 4, !dbg !8414
  %16 = tail call fastcc i32 @clock_control_on.47(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %16, metadata !8404, metadata !DIExpression()), !dbg !8405
  %17 = icmp eq i32 %16, 0, !dbg !8416
  br i1 %17, label %18, label %49, !dbg !8418

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8419
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8419
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %21, metadata !8404, metadata !DIExpression()), !dbg !8405
  %22 = icmp slt i32 %21, 0, !dbg !8421
  br i1 %22, label %49, label %23, !dbg !8423

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8424
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8424
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !8425
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8426
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !8427
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8428
  %28 = load i32, i32* %27, align 4, !dbg !8428
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8430

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8402, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata i32 4096, metadata !8403, metadata !DIExpression()), !dbg !8405
  br label %31, !dbg !8431

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8402, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata i32 0, metadata !8403, metadata !DIExpression()), !dbg !8405
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8434
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8434
  call void @llvm.dbg.value(metadata i32 %33, metadata !8403, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata i32 %32, metadata !8402, metadata !DIExpression()), !dbg !8405
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8435
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !8436
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8437
  %36 = load i8, i8* %35, align 4, !dbg !8437, !range !5042
  %37 = icmp eq i8 %36, 0, !dbg !8437
  br i1 %37, label %39, label %38, !dbg !8439

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !8440
  br label %39, !dbg !8442

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8443
  %41 = load i32, i32* %40, align 4, !dbg !8443
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !8444
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8445
  %43 = load i8, i8* %42, align 4, !dbg !8445, !range !5042
  %44 = icmp eq i8 %43, 0, !dbg !8445
  br i1 %44, label %47, label %45, !dbg !8447

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8448
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !8450
  br label %47, !dbg !8451

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8452
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !8453
  br label %49, !dbg !8454

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8405
  ret i32 %50, !dbg !8455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8460, metadata !DIExpression()), !dbg !8464
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8465
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8465
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8465
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8461, metadata !DIExpression()), !dbg !8464
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8462, metadata !DIExpression()), !dbg !8464
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8466
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.46(%struct.device* noundef %0) unnamed_addr #1 !dbg !8469 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8473, metadata !DIExpression()), !dbg !8474
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8475, !srcloc !8477
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48(%struct.device* noundef %0) #24, !dbg !8478
  ret i1 %2, !dbg !8479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.47(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8482, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i8* %1, metadata !8483, metadata !DIExpression()), !dbg !8485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8486
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8486
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8484, metadata !DIExpression()), !dbg !8485
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8487
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8487
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !8488
  ret i32 %8, !dbg !8489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8490 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8494, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata i8 0, metadata !8495, metadata !DIExpression()), !dbg !8498
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8499
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8497, metadata !DIExpression(DW_OP_deref)), !dbg !8498
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %4, metadata !8496, metadata !DIExpression()), !dbg !8498
  %5 = icmp slt i32 %4, 0, !dbg !8501
  br i1 %5, label %9, label %6, !dbg !8503

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8504
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8497, metadata !DIExpression()), !dbg !8498
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8505
  br label %9, !dbg !8506

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8498
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8507
  ret i32 %10, !dbg !8507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8508 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8510, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i32 12, metadata !8511, metadata !DIExpression()), !dbg !8514
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8515

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8516, metadata !DIExpression()) #23, !dbg !8522
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8525, !srcloc !8526
  call void @llvm.dbg.value(metadata i32 %4, metadata !8521, metadata !DIExpression()) #23, !dbg !8522
  %5 = or i32 %4, 12, !dbg !8527
  call void @llvm.dbg.value(metadata i32 %5, metadata !8512, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.value(metadata i32 %5, metadata !8529, metadata !DIExpression()) #23, !dbg !8536
  call void @llvm.dbg.value(metadata i32* %2, metadata !8534, metadata !DIExpression()) #23, !dbg !8536
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8538, !srcloc !8539
  call void @llvm.dbg.value(metadata i32 %6, metadata !8535, metadata !DIExpression()) #23, !dbg !8536
  %7 = icmp eq i32 %6, 0, !dbg !8515
  br i1 %7, label %8, label %3, !dbg !8527, !llvm.loop !8540

8:                                                ; preds = %3
  ret void, !dbg !8541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8542 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8544, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 %1, metadata !8545, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 %2, metadata !8546, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 0, metadata !8547, metadata !DIExpression()), !dbg !8548
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8549
  %5 = load volatile i32, i32* %4, align 4, !dbg !8549
  %6 = and i32 %5, -5633, !dbg !8549
  %7 = or i32 %2, %1, !dbg !8549
  %8 = or i32 %7, %6, !dbg !8549
  store volatile i32 %8, i32* %4, align 4, !dbg !8549
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8550
  %10 = load volatile i32, i32* %9, align 4, !dbg !8550
  %11 = and i32 %10, -12289, !dbg !8550
  store volatile i32 %11, i32* %9, align 4, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8554, metadata !DIExpression()), !dbg !8555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8556
  %3 = load volatile i32, i32* %2, align 4, !dbg !8556
  %4 = or i32 %3, 8, !dbg !8556
  store volatile i32 %4, i32* %2, align 4, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8558 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8563, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 0, metadata !8564, metadata !DIExpression()), !dbg !8565
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8566
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8566
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8567
  %5 = load i8, i8* %4, align 4, !dbg !8567
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !8568
  ret i32 %6, !dbg !8569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48(%struct.device* noundef %0) unnamed_addr #1 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8572, metadata !DIExpression()), !dbg !8573
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8574
  ret i1 %2, !dbg !8575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8578, metadata !DIExpression()), !dbg !8579
  tail call fastcc void @__NVIC_SetPriority.50() #24, !dbg !8580
  store i32 8399, i32* @last_load, align 4, !dbg !8581
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8582
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8583
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8584
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8585
  %3 = or i32 %2, 7, !dbg !8585
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8585
  ret i32 0, !dbg !8586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.50() unnamed_addr #13 !dbg !8587 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8589, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i32 1, metadata !8590, metadata !DIExpression()), !dbg !8591
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8592
  ret void, !dbg !8595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8598, metadata !DIExpression()), !dbg !8600
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !8601
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8602
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8603
  %5 = add i32 %4, %3, !dbg !8603
  store i32 %5, i32* @cycle_count, align 4, !dbg !8603
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8604
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8605
  %7 = sub i32 %5, %6, !dbg !8608
  %8 = udiv i32 %7, 8400, !dbg !8609
  call void @llvm.dbg.value(metadata i32 %8, metadata !8599, metadata !DIExpression()), !dbg !8600
  %9 = mul nuw i32 %8, 8400, !dbg !8610
  %10 = add i32 %9, %6, !dbg !8611
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8611
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !8612
  tail call void @z_arm_int_exit() #25, !dbg !8613
  ret void, !dbg !8614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8615 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8620
  call void @llvm.dbg.value(metadata i32 %1, metadata !8617, metadata !DIExpression()), !dbg !8621
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8622
  call void @llvm.dbg.value(metadata i32 %2, metadata !8618, metadata !DIExpression()), !dbg !8621
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8623
  call void @llvm.dbg.value(metadata i32 %3, metadata !8619, metadata !DIExpression()), !dbg !8621
  %4 = and i32 %2, 65536, !dbg !8624
  %5 = icmp ne i32 %4, 0, !dbg !8624
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8626
  %8 = load i32, i32* @last_load, align 4, !dbg !8621
  br i1 %7, label %9, label %13, !dbg !8626

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8627
  %11 = add i32 %10, %8, !dbg !8627
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8627
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8629
  br label %13, !dbg !8630

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8631
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8632
  %16 = add i32 %14, %15, !dbg !8633
  ret i32 %16, !dbg !8634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8639, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.value(metadata i1 %1, metadata !8640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8652
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8653
  br i1 %4, label %5, label %8, !dbg !8653

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8655
  %7 = and i32 %6, -2, !dbg !8655
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8655
  store i32 -16777216, i32* @last_load, align 4, !dbg !8657
  br label %54, !dbg !8658

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %9, metadata !8644, metadata !DIExpression()), !dbg !8652
  br i1 %3, label %18, label %10, !dbg !8660

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8660
  call void @llvm.dbg.value(metadata i32 undef, metadata !8639, metadata !DIExpression()), !dbg !8652
  %12 = icmp slt i32 %11, 1, !dbg !8661
  br i1 %12, label %18, label %13, !dbg !8661

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8661
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8661
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8661
  %17 = add nuw nsw i32 %16, 8399, !dbg !8661
  br label %18, !dbg !8661

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8639, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8662, metadata !DIExpression()) #23, !dbg !8669
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8671, !srcloc !8677
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %21, metadata !8674, metadata !DIExpression()) #23, !dbg !8678
  call void @llvm.dbg.value(metadata i32 undef, metadata !8675, metadata !DIExpression()) #23, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %21, metadata !8668, metadata !DIExpression()) #23, !dbg !8669
  call void @llvm.dbg.value(metadata i32 %21, metadata !8645, metadata !DIExpression()), !dbg !8652
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !8679
  call void @llvm.dbg.value(metadata i32 %22, metadata !8650, metadata !DIExpression()), !dbg !8652
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %23, metadata !8642, metadata !DIExpression()), !dbg !8652
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8681
  %25 = add i32 %24, %22, !dbg !8681
  store i32 %25, i32* @cycle_count, align 4, !dbg !8681
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8682
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8683
  %27 = sub i32 %25, %26, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %27, metadata !8651, metadata !DIExpression()), !dbg !8652
  %28 = icmp slt i32 %27, 0, !dbg !8685
  br i1 %28, label %38, label %29, !dbg !8687

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8641, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.value(metadata i32 undef, metadata !8641, metadata !DIExpression()), !dbg !8652
  %30 = add nuw i32 %19, %27, !dbg !8688
  %31 = urem i32 %30, 8400, !dbg !8690
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8641, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8652
  %32 = sub nuw nsw i32 %19, %31, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %32, metadata !8641, metadata !DIExpression()), !dbg !8652
  %33 = icmp ugt i32 %32, 1024, !dbg !8692
  br i1 %33, label %34, label %36, !dbg !8692

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8641, metadata !DIExpression()), !dbg !8652
  %35 = icmp ugt i32 %32, 16766400, !dbg !8693
  br i1 %35, label %38, label %36, !dbg !8695

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8696
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8697
  call void @llvm.dbg.value(metadata i32 %40, metadata !8643, metadata !DIExpression()), !dbg !8652
  %41 = add nsw i32 %39, -1, !dbg !8698
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8699
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8700
  %42 = icmp ult i32 %23, %40, !dbg !8701
  br i1 %42, label %43, label %48, !dbg !8703

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8704
  %45 = add i32 %23, %9, !dbg !8706
  %46 = sub i32 %45, %40, !dbg !8707
  %47 = add i32 %46, %44, !dbg !8704
  br label %52, !dbg !8708

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8709
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8711
  %51 = add i32 %49, %50, !dbg !8711
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8712
  store i32 %53, i32* @cycle_count, align 4, !dbg !8712
  call void @llvm.dbg.value(metadata i32 %21, metadata !8713, metadata !DIExpression()) #23, !dbg !8719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8718, metadata !DIExpression()) #23, !dbg !8719
  call void @llvm.dbg.value(metadata i32 %21, metadata !8721, metadata !DIExpression()) #23, !dbg !8724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8726, !srcloc !8727
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8728
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8729 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8662, metadata !DIExpression()) #23, !dbg !8733
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8735, !srcloc !8677
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8735
  call void @llvm.dbg.value(metadata i32 %2, metadata !8674, metadata !DIExpression()) #23, !dbg !8737
  call void @llvm.dbg.value(metadata i32 undef, metadata !8675, metadata !DIExpression()) #23, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %2, metadata !8668, metadata !DIExpression()) #23, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %2, metadata !8731, metadata !DIExpression()), !dbg !8738
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !8739
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8740
  %5 = add i32 %4, %3, !dbg !8741
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8742
  %7 = sub i32 %5, %6, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %7, metadata !8732, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 %2, metadata !8713, metadata !DIExpression()) #23, !dbg !8744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8718, metadata !DIExpression()) #23, !dbg !8744
  call void @llvm.dbg.value(metadata i32 %2, metadata !8721, metadata !DIExpression()) #23, !dbg !8746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8748, !srcloc !8727
  %8 = udiv i32 %7, 8400, !dbg !8749
  ret i32 %8, !dbg !8750
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8751 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8662, metadata !DIExpression()) #23, !dbg !8755
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8757, !srcloc !8677
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %2, metadata !8674, metadata !DIExpression()) #23, !dbg !8759
  call void @llvm.dbg.value(metadata i32 undef, metadata !8675, metadata !DIExpression()) #23, !dbg !8759
  call void @llvm.dbg.value(metadata i32 %2, metadata !8668, metadata !DIExpression()) #23, !dbg !8755
  call void @llvm.dbg.value(metadata i32 %2, metadata !8753, metadata !DIExpression()), !dbg !8760
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !8761
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8762
  %5 = add i32 %4, %3, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %5, metadata !8754, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.value(metadata i32 %2, metadata !8713, metadata !DIExpression()) #23, !dbg !8764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8718, metadata !DIExpression()) #23, !dbg !8764
  call void @llvm.dbg.value(metadata i32 %2, metadata !8721, metadata !DIExpression()) #23, !dbg !8766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8768, !srcloc !8727
  ret i32 %5, !dbg !8769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !8770 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8771
  %2 = icmp eq i32 %1, -16777216, !dbg !8773
  br i1 %2, label %3, label %6, !dbg !8774

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8775
  %5 = or i32 %4, 1, !dbg !8775
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8775
  br label %6, !dbg !8777

6:                                                ; preds = %3, %0
  ret void, !dbg !8778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !8779 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8780
  %2 = and i32 %1, -2, !dbg !8780
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8780
  ret void, !dbg !8781
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8808, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 %1, metadata !8809, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8810, metadata !DIExpression()), !dbg !8811
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8812
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8812
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8811
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8813
  %8 = load i8, i8* %6, align 4, !dbg !8814
  %9 = zext i8 %8 to i32, !dbg !8815
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8815
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8816
  br i1 %11, label %18, label %24, !dbg !8817

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8811
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8813
  %14 = load i8, i8* %6, align 4, !dbg !8814
  %15 = zext i8 %14 to i32, !dbg !8815
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8815
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8816
  br i1 %17, label %18, label %24, !dbg !8817, !llvm.loop !8818

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8820
  %21 = load i8, i8* %20, align 1, !dbg !8820
  %22 = icmp eq i8 %21, %1, !dbg !8823
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8824
  br i1 %22, label %24, label %12, !dbg !8825

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8811
  ret i32 %25, !dbg !8826
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8827 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !8838, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8 %1, metadata !8839, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %2, metadata !8840, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 0, metadata !8843, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i8 0, metadata !8845, metadata !DIExpression()), !dbg !8855
  %4 = icmp eq i8 %1, 0, !dbg !8856
  br i1 %4, label %35, label %5, !dbg !8857

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8856
  br label %9, !dbg !8857

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !8845, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %29, metadata !8843, metadata !DIExpression()), !dbg !8854
  %8 = icmp eq i32 %34, %6, !dbg !8856
  br i1 %8, label %35, label %9, !dbg !8857, !llvm.loop !8858

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8845, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %11, metadata !8843, metadata !DIExpression()), !dbg !8854
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !8860
  %13 = load i32, i32* %12, align 4, !dbg !8860
  call void @llvm.dbg.value(metadata i32 %13, metadata !8842, metadata !DIExpression()), !dbg !8854
  %14 = and i32 %13, 31, !dbg !8861
  %15 = icmp ult i32 %14, 16, !dbg !8862
  br i1 %15, label %16, label %20, !dbg !8863

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8864
  %18 = load i32, i32* %17, align 4, !dbg !8864
  %19 = or i32 %18, 32, !dbg !8866
  call void @llvm.dbg.value(metadata i32 %19, metadata !8843, metadata !DIExpression()), !dbg !8854
  br label %28, !dbg !8867

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !8868

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8869
  %23 = load i32, i32* %22, align 4, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %23, metadata !8847, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !8870
  %24 = lshr i32 %23, 7, !dbg !8871
  %25 = and i32 %24, 16, !dbg !8871
  %26 = or i32 %25, %23, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %26, metadata !8843, metadata !DIExpression()), !dbg !8854
  br label %28, !dbg !8872

27:                                               ; preds = %20
  br label %28, !dbg !8873

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !8854
  call void @llvm.dbg.value(metadata i32 %29, metadata !8843, metadata !DIExpression()), !dbg !8854
  %30 = lshr i32 %13, 5, !dbg !8873
  %31 = and i32 %30, 255, !dbg !8873
  call void @llvm.dbg.value(metadata i32 %31, metadata !8841, metadata !DIExpression()), !dbg !8854
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !8874
  call void @llvm.dbg.value(metadata i32 %32, metadata !8844, metadata !DIExpression()), !dbg !8854
  %33 = icmp slt i32 %32, 0, !dbg !8875
  %34 = add nuw nsw i32 %10, 1, !dbg !8877
  call void @llvm.dbg.value(metadata i32 %34, metadata !8845, metadata !DIExpression()), !dbg !8855
  br i1 %33, label %35, label %7, !dbg !8878

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !8879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8884, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %1, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8886, metadata !DIExpression()), !dbg !8888
  %4 = icmp ugt i32 %0, 175, !dbg !8889
  br i1 %4, label %16, label %5, !dbg !8891

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !8892
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !8893
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !8893
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !8887, metadata !DIExpression()), !dbg !8888
  %9 = add nsw i32 %6, -8, !dbg !8894
  %10 = icmp ult i32 %9, 3, !dbg !8894
  br i1 %10, label %16, label %11, !dbg !8896

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.55(%struct.device* noundef %8) #24, !dbg !8897
  br i1 %12, label %13, label %16, !dbg !8898

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !8899
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !8900
  br label %16, !dbg !8901

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !8888
  ret i32 %17, !dbg !8902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.55(%struct.device* noundef %0) unnamed_addr #1 !dbg !8903 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8907, metadata !DIExpression()), !dbg !8908
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8909, !srcloc !8911
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.56(%struct.device* noundef %0) #24, !dbg !8912
  ret i1 %2, !dbg !8913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.56(%struct.device* noundef %0) unnamed_addr #1 !dbg !8914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8916, metadata !DIExpression()), !dbg !8917
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8918
  ret i1 %2, !dbg !8919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !8920 {
  ret void, !dbg !8921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !8922 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8924, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8925, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 2, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 2, metadata !8928, metadata !DIExpression()), !dbg !8929
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8930
  %2 = and i32 %1, 12, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %2, metadata !8924, metadata !DIExpression()), !dbg !8929
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !8932

3:                                                ; preds = %0
  br label %21, !dbg !8933

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8935
  call void @llvm.dbg.value(metadata i32 %5, metadata !8927, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8929
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8936
  %7 = and i32 %6, 63, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %7, metadata !8928, metadata !DIExpression()), !dbg !8929
  %8 = and i32 %5, 4194304, !dbg !8938
  %9 = icmp eq i32 %8, 0, !dbg !8938
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !8940
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8940
  %13 = lshr i32 %12, 6, !dbg !8940
  %14 = and i32 %13, 511, !dbg !8940
  %15 = mul i32 %14, %11, !dbg !8940
  call void @llvm.dbg.value(metadata i32 %15, metadata !8925, metadata !DIExpression()), !dbg !8929
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8941
  %17 = lshr i32 %16, 15, !dbg !8942
  %18 = and i32 %17, 6, !dbg !8942
  %19 = add nuw nsw i32 %18, 2, !dbg !8942
  call void @llvm.dbg.value(metadata i32 %19, metadata !8926, metadata !DIExpression()), !dbg !8929
  %20 = udiv i32 %15, %19, !dbg !8943
  br label %21, !dbg !8944

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !8945
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8946
  %24 = lshr i32 %23, 4, !dbg !8947
  %25 = and i32 %24, 15, !dbg !8947
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !8948
  %27 = load i8, i8* %26, align 1, !dbg !8948
  %28 = zext i8 %27 to i32, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %28, metadata !8924, metadata !DIExpression()), !dbg !8929
  %29 = lshr i32 %22, %28, !dbg !8949
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !8949
  ret void, !dbg !8950
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !8951 {
  ret i32 0, !dbg !8956
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !8957 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !8983, metadata !DIExpression()), !dbg !8994
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !8995
  br i1 %3, label %311, label %4, !dbg !8997

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !8998
  %6 = load i32, i32* %5, align 4, !dbg !8998
  %7 = and i32 %6, 1, !dbg !9000
  %8 = icmp eq i32 %7, 0, !dbg !9001
  br i1 %8, label %66, label %9, !dbg !9002

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9003
  %11 = and i32 %10, 12, !dbg !9003
  %12 = icmp eq i32 %11, 4, !dbg !9006
  br i1 %12, label %21, label %13, !dbg !9007

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9008
  %15 = and i32 %14, 12, !dbg !9008
  %16 = icmp eq i32 %15, 8, !dbg !9009
  br i1 %16, label %17, label %29, !dbg !9010

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9011
  %19 = and i32 %18, 4194304, !dbg !9012
  %20 = icmp eq i32 %19, 0, !dbg !9013
  br i1 %20, label %29, label %21, !dbg !9014

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9015
  %23 = and i32 %22, 131072, !dbg !9015
  %24 = icmp eq i32 %23, 0, !dbg !9015
  br i1 %24, label %66, label %25, !dbg !9018

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9019
  %27 = load i32, i32* %26, align 4, !dbg !9019
  %28 = icmp eq i32 %27, 0, !dbg !9020
  br i1 %28, label %311, label %66, !dbg !9021

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9022
  %31 = load i32, i32* %30, align 4, !dbg !9022
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9026

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9027
  %34 = or i32 %33, 65536, !dbg !9027
  br label %45, !dbg !9027

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9029
  %37 = or i32 %36, 262144, !dbg !9029
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9029
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9029
  %39 = or i32 %38, 65536, !dbg !9029
  br label %45, !dbg !9029

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9032
  %42 = and i32 %41, -65537, !dbg !9032
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9032
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9032
  %44 = and i32 %43, -262145, !dbg !9032
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9034
  %47 = load i32, i32* %30, align 4, !dbg !9035
  %48 = icmp eq i32 %47, 0, !dbg !9037
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !9038
  call void @llvm.dbg.value(metadata i32 %49, metadata !8984, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i32 %49, metadata !8984, metadata !DIExpression()), !dbg !8994
  br i1 %48, label %58, label %50, !dbg !9039

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9040
  %52 = and i32 %51, 131072, !dbg !9042
  %53 = icmp eq i32 %52, 0, !dbg !9042
  br i1 %53, label %54, label %66, !dbg !9043

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !9044
  %56 = sub i32 %55, %49, !dbg !9047
  %57 = icmp ugt i32 %56, 100, !dbg !9048
  br i1 %57, label %311, label %50, !dbg !9049, !llvm.loop !9050

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9052
  %60 = and i32 %59, 131072, !dbg !9052
  %61 = icmp eq i32 %60, 0, !dbg !9052
  br i1 %61, label %66, label %62, !dbg !9054

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !9055
  %64 = sub i32 %63, %49, !dbg !9058
  %65 = icmp ugt i32 %64, 100, !dbg !9059
  br i1 %65, label %311, label %58, !dbg !9060, !llvm.loop !9061

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9063
  %68 = and i32 %67, 2, !dbg !9065
  %69 = icmp eq i32 %68, 0, !dbg !9066
  br i1 %69, label %121, label %70, !dbg !9067

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9068
  %72 = and i32 %71, 12, !dbg !9068
  %73 = icmp eq i32 %72, 0, !dbg !9071
  br i1 %73, label %82, label %74, !dbg !9072

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9073
  %76 = and i32 %75, 12, !dbg !9073
  %77 = icmp eq i32 %76, 8, !dbg !9074
  br i1 %77, label %78, label %90, !dbg !9075

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9076
  %80 = and i32 %79, 4194304, !dbg !9077
  %81 = icmp eq i32 %80, 0, !dbg !9078
  br i1 %81, label %82, label %90, !dbg !9079

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9080
  %84 = and i32 %83, 2, !dbg !9080
  %85 = icmp eq i32 %84, 0, !dbg !9080
  br i1 %85, label %114, label %86, !dbg !9083

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9084
  %88 = load i32, i32* %87, align 4, !dbg !9084
  %89 = icmp eq i32 %88, 1, !dbg !9085
  br i1 %89, label %114, label %311, !dbg !9086

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9087
  %92 = load i32, i32* %91, align 4, !dbg !9087
  %93 = icmp eq i32 %92, 0, !dbg !9090
  br i1 %93, label %104, label %94, !dbg !9091

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9092
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !9094
  call void @llvm.dbg.value(metadata i32 %95, metadata !8984, metadata !DIExpression()), !dbg !8994
  br label %96, !dbg !9095

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9096
  %98 = and i32 %97, 2, !dbg !9097
  %99 = icmp eq i32 %98, 0, !dbg !9097
  br i1 %99, label %100, label %114, !dbg !9095

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !9098
  %102 = sub i32 %101, %95, !dbg !9101
  %103 = icmp ugt i32 %102, 2, !dbg !9102
  br i1 %103, label %311, label %96, !dbg !9103, !llvm.loop !9104

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9106
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %105, metadata !8984, metadata !DIExpression()), !dbg !8994
  br label %106, !dbg !9109

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9110
  %108 = and i32 %107, 2, !dbg !9110
  %109 = icmp eq i32 %108, 0, !dbg !9110
  br i1 %109, label %121, label %110, !dbg !9109

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !9111
  %112 = sub i32 %111, %105, !dbg !9114
  %113 = icmp ugt i32 %112, 2, !dbg !9115
  br i1 %113, label %311, label %106, !dbg !9116, !llvm.loop !9117

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9119
  %116 = and i32 %115, -249, !dbg !9119
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9119
  %118 = load i32, i32* %117, align 4, !dbg !9119
  %119 = shl i32 %118, 3, !dbg !9119
  %120 = or i32 %119, %116, !dbg !9119
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9119
  br label %121, !dbg !9120

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !9120
  %123 = and i32 %122, 8, !dbg !9122
  %124 = icmp eq i32 %123, 0, !dbg !9123
  br i1 %124, label %149, label %125, !dbg !9124

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9125
  %127 = load i32, i32* %126, align 4, !dbg !9125
  %128 = icmp eq i32 %127, 0, !dbg !9128
  br i1 %128, label %139, label %129, !dbg !9129

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9130
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !9132
  call void @llvm.dbg.value(metadata i32 %130, metadata !8984, metadata !DIExpression()), !dbg !8994
  br label %131, !dbg !9133

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9134
  %133 = and i32 %132, 2, !dbg !9135
  %134 = icmp eq i32 %133, 0, !dbg !9135
  br i1 %134, label %135, label %149, !dbg !9133

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !9136
  %137 = sub i32 %136, %130, !dbg !9139
  %138 = icmp ugt i32 %137, 2, !dbg !9140
  br i1 %138, label %311, label %131, !dbg !9141, !llvm.loop !9142

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9144
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !9146
  call void @llvm.dbg.value(metadata i32 %140, metadata !8984, metadata !DIExpression()), !dbg !8994
  br label %141, !dbg !9147

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9148
  %143 = and i32 %142, 2, !dbg !9148
  %144 = icmp eq i32 %143, 0, !dbg !9148
  br i1 %144, label %149, label %145, !dbg !9147

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !9149
  %147 = sub i32 %146, %140, !dbg !9152
  %148 = icmp ugt i32 %147, 2, !dbg !9153
  br i1 %148, label %311, label %141, !dbg !9154, !llvm.loop !9155

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !9157
  %151 = and i32 %150, 4, !dbg !9158
  %152 = icmp eq i32 %151, 0, !dbg !9159
  br i1 %152, label %221, label %153, !dbg !9160

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !8986, metadata !DIExpression()), !dbg !9161
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9162
  %155 = and i32 %154, 268435456, !dbg !9162
  %156 = icmp eq i32 %155, 0, !dbg !9162
  br i1 %156, label %157, label %164, !dbg !9163

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !9164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !9164
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8990, metadata !DIExpression()), !dbg !9164
  store volatile i32 0, i32* %2, align 4, !dbg !9164
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9164
  %160 = or i32 %159, 268435456, !dbg !9164
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9164
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9164
  %162 = and i32 %161, 268435456, !dbg !9164
  store volatile i32 %162, i32* %2, align 4, !dbg !9164
  %163 = load volatile i32, i32* %2, align 4, !dbg !9164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !9165
  call void @llvm.dbg.value(metadata i32 1, metadata !8986, metadata !DIExpression()), !dbg !9161
  br label %164, !dbg !9166

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !8986, metadata !DIExpression()), !dbg !9161
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9167
  %166 = and i32 %165, 256, !dbg !9167
  %167 = icmp eq i32 %166, 0, !dbg !9167
  br i1 %167, label %168, label %180, !dbg !9169

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9170
  %170 = or i32 %169, 256, !dbg !9170
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9170
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %171, metadata !8984, metadata !DIExpression()), !dbg !8994
  br label %172, !dbg !9173

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9174
  %174 = and i32 %173, 256, !dbg !9174
  %175 = icmp eq i32 %174, 0, !dbg !9174
  br i1 %175, label %176, label %180, !dbg !9173

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !9175
  %178 = sub i32 %177, %171, !dbg !9178
  %179 = icmp ugt i32 %178, 2, !dbg !9179
  br i1 %179, label %311, label %172, !dbg !9180, !llvm.loop !9181

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9183
  %182 = load i32, i32* %181, align 4, !dbg !9183
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !9186

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9187
  %185 = or i32 %184, 1, !dbg !9187
  br label %196, !dbg !9187

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9189
  %188 = or i32 %187, 4, !dbg !9189
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9189
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9189
  %190 = or i32 %189, 1, !dbg !9189
  br label %196, !dbg !9189

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9192
  %193 = and i32 %192, -2, !dbg !9192
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9192
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9192
  %195 = and i32 %194, -5, !dbg !9192
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9194
  %198 = load i32, i32* %181, align 4, !dbg !9195
  %199 = icmp eq i32 %198, 0, !dbg !9197
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %200, metadata !8984, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i32 %200, metadata !8984, metadata !DIExpression()), !dbg !8994
  br i1 %199, label %209, label %201, !dbg !9199

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9200
  %203 = and i32 %202, 2, !dbg !9202
  %204 = icmp eq i32 %203, 0, !dbg !9202
  br i1 %204, label %205, label %217, !dbg !9203

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !9204
  %207 = sub i32 %206, %200, !dbg !9207
  %208 = icmp ugt i32 %207, 5000, !dbg !9208
  br i1 %208, label %311, label %201, !dbg !9209, !llvm.loop !9210

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9212
  %211 = and i32 %210, 2, !dbg !9212
  %212 = icmp eq i32 %211, 0, !dbg !9212
  br i1 %212, label %217, label %213, !dbg !9214

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !9215
  %215 = sub i32 %214, %200, !dbg !9218
  %216 = icmp ugt i32 %215, 5000, !dbg !9219
  br i1 %216, label %311, label %209, !dbg !9220, !llvm.loop !9221

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !9223

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9224
  %220 = and i32 %219, -268435457, !dbg !9224
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9224
  br label %221, !dbg !9227

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9228
  %223 = load i32, i32* %222, align 4, !dbg !9228
  %224 = icmp eq i32 %223, 0, !dbg !9230
  br i1 %224, label %310, label %225, !dbg !9231

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9232
  %227 = and i32 %226, 12, !dbg !9232
  %228 = icmp eq i32 %227, 8, !dbg !9235
  br i1 %228, label %277, label %229, !dbg !9236

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !9237
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9240
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %231, metadata !8984, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i32 %231, metadata !8984, metadata !DIExpression()), !dbg !8994
  br i1 %230, label %232, label %269, !dbg !9241

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9242
  %234 = and i32 %233, 33554432, !dbg !9242
  %235 = icmp eq i32 %234, 0, !dbg !9242
  br i1 %235, label %240, label %236, !dbg !9244

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !9245
  %238 = sub i32 %237, %231, !dbg !9248
  %239 = icmp ugt i32 %238, 2, !dbg !9249
  br i1 %239, label %311, label %232, !dbg !9250, !llvm.loop !9251

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9253
  %242 = load i32, i32* %241, align 4, !dbg !9253
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9253
  %244 = load i32, i32* %243, align 4, !dbg !9253
  %245 = or i32 %244, %242, !dbg !9253
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9253
  %247 = load i32, i32* %246, align 4, !dbg !9253
  %248 = shl i32 %247, 6, !dbg !9253
  %249 = or i32 %245, %248, !dbg !9253
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9253
  %251 = load i32, i32* %250, align 4, !dbg !9253
  %252 = shl i32 %251, 15, !dbg !9253
  %253 = add i32 %252, -65536, !dbg !9253
  %254 = and i32 %253, -65536, !dbg !9253
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9253
  %256 = load i32, i32* %255, align 4, !dbg !9253
  %257 = shl i32 %256, 24, !dbg !9253
  %258 = or i32 %249, %257, !dbg !9253
  %259 = or i32 %258, %254, !dbg !9253
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9253
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9254
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %260, metadata !8984, metadata !DIExpression()), !dbg !8994
  br label %261, !dbg !9256

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9257
  %263 = and i32 %262, 33554432, !dbg !9258
  %264 = icmp eq i32 %263, 0, !dbg !9258
  br i1 %264, label %265, label %310, !dbg !9256

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !9259
  %267 = sub i32 %266, %260, !dbg !9262
  %268 = icmp ugt i32 %267, 2, !dbg !9263
  br i1 %268, label %311, label %261, !dbg !9264, !llvm.loop !9265

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9267
  %271 = and i32 %270, 33554432, !dbg !9267
  %272 = icmp eq i32 %271, 0, !dbg !9267
  br i1 %272, label %310, label %273, !dbg !9269

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !9270
  %275 = sub i32 %274, %231, !dbg !9273
  %276 = icmp ugt i32 %275, 2, !dbg !9274
  br i1 %276, label %311, label %269, !dbg !9275, !llvm.loop !9276

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !9278
  br i1 %278, label %311, label %279, !dbg !9281

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9282
  call void @llvm.dbg.value(metadata i32 %280, metadata !8985, metadata !DIExpression()), !dbg !8994
  %281 = and i32 %280, 4194304, !dbg !9284
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9286
  %283 = load i32, i32* %282, align 4, !dbg !9286
  %284 = icmp eq i32 %281, %283, !dbg !9287
  br i1 %284, label %285, label %311, !dbg !9288

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !9289
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9290
  %288 = load i32, i32* %287, align 4, !dbg !9290
  %289 = icmp eq i32 %286, %288, !dbg !9291
  br i1 %289, label %290, label %311, !dbg !9292

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !9293
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9294
  %293 = load i32, i32* %292, align 4, !dbg !9294
  %294 = shl i32 %293, 6, !dbg !9295
  %295 = icmp eq i32 %291, %294, !dbg !9296
  br i1 %295, label %296, label %311, !dbg !9297

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !9298
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9299
  %299 = load i32, i32* %298, align 4, !dbg !9299
  %300 = shl i32 %299, 15, !dbg !9300
  %301 = add i32 %300, -65536, !dbg !9300
  %302 = and i32 %301, -65536, !dbg !9300
  %303 = icmp eq i32 %297, %302, !dbg !9301
  br i1 %303, label %304, label %311, !dbg !9302

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !9303
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9304
  %307 = load i32, i32* %306, align 4, !dbg !9304
  %308 = shl i32 %307, 24, !dbg !9305
  %309 = icmp eq i32 %305, %308, !dbg !9306
  br i1 %309, label %310, label %311, !dbg !9307

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !9308

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !8994
  ret i32 %312, !dbg !9309
}

; Function Attrs: optsize
declare !dbg !9310 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9325, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i32 %1, metadata !9326, metadata !DIExpression()), !dbg !9328
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !9329
  br i1 %3, label %115, label %4, !dbg !9331

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9332
  %6 = and i32 %5, 7, !dbg !9332
  %7 = icmp ult i32 %6, %1, !dbg !9334
  br i1 %7, label %8, label %13, !dbg !9335

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !9336
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9336
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9338
  %11 = and i32 %10, 7, !dbg !9338
  %12 = icmp eq i32 %11, %1, !dbg !9340
  br i1 %12, label %13, label %115, !dbg !9341

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9342
  %15 = load i32, i32* %14, align 4, !dbg !9342
  %16 = and i32 %15, 2, !dbg !9344
  %17 = icmp eq i32 %16, 0, !dbg !9345
  br i1 %17, label %39, label %18, !dbg !9346

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !9347
  %20 = icmp eq i32 %19, 0, !dbg !9350
  br i1 %20, label %25, label %21, !dbg !9351

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9352
  %23 = or i32 %22, 7168, !dbg !9352
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9352
  %24 = load i32, i32* %14, align 4, !dbg !9354
  br label %25, !dbg !9356

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !9354
  %27 = and i32 %26, 8, !dbg !9357
  %28 = icmp eq i32 %27, 0, !dbg !9358
  br i1 %28, label %32, label %29, !dbg !9359

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9360
  %31 = or i32 %30, 57344, !dbg !9360
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9360
  br label %32, !dbg !9362

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9363
  %34 = and i32 %33, -241, !dbg !9363
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9363
  %36 = load i32, i32* %35, align 4, !dbg !9363
  %37 = or i32 %34, %36, !dbg !9363
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9363
  %38 = load i32, i32* %14, align 4, !dbg !9364
  br label %39, !dbg !9366

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !9364
  %41 = and i32 %40, 1, !dbg !9367
  %42 = icmp eq i32 %41, 0, !dbg !9368
  br i1 %42, label %73, label %43, !dbg !9369

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9370
  %45 = load i32, i32* %44, align 4, !dbg !9370
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !9373

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9374
  %48 = and i32 %47, 131072, !dbg !9377
  %49 = icmp eq i32 %48, 0, !dbg !9377
  br i1 %49, label %115, label %58, !dbg !9378

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9379
  %52 = and i32 %51, 33554432, !dbg !9383
  %53 = icmp eq i32 %52, 0, !dbg !9383
  br i1 %53, label %115, label %58, !dbg !9384

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9385
  %56 = and i32 %55, 2, !dbg !9388
  %57 = icmp eq i32 %56, 0, !dbg !9388
  br i1 %57, label %115, label %58, !dbg !9389

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9390
  %60 = and i32 %59, -4, !dbg !9390
  %61 = or i32 %60, %45, !dbg !9390
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9390
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %62, metadata !9327, metadata !DIExpression()), !dbg !9328
  br label %63, !dbg !9392

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9393
  %65 = and i32 %64, 12, !dbg !9393
  %66 = load i32, i32* %44, align 4, !dbg !9394
  %67 = shl i32 %66, 2, !dbg !9395
  %68 = icmp eq i32 %65, %67, !dbg !9396
  br i1 %68, label %73, label %69, !dbg !9392

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !9397
  %71 = sub i32 %70, %62, !dbg !9400
  %72 = icmp ugt i32 %71, 5000, !dbg !9401
  br i1 %72, label %115, label %63, !dbg !9402, !llvm.loop !9403

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9405
  %75 = and i32 %74, 7, !dbg !9405
  %76 = icmp ugt i32 %75, %1, !dbg !9407
  br i1 %76, label %77, label %82, !dbg !9408

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !9409
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9409
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9411
  %80 = and i32 %79, 7, !dbg !9411
  %81 = icmp eq i32 %80, %1, !dbg !9413
  br i1 %81, label %82, label %115, !dbg !9414

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !9415
  %84 = and i32 %83, 4, !dbg !9417
  %85 = icmp eq i32 %84, 0, !dbg !9418
  br i1 %85, label %93, label %86, !dbg !9419

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9420
  %88 = and i32 %87, -7169, !dbg !9420
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9420
  %90 = load i32, i32* %89, align 4, !dbg !9420
  %91 = or i32 %88, %90, !dbg !9420
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9420
  %92 = load i32, i32* %14, align 4, !dbg !9422
  br label %93, !dbg !9424

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !9422
  %95 = and i32 %94, 8, !dbg !9425
  %96 = icmp eq i32 %95, 0, !dbg !9426
  br i1 %96, label %104, label %97, !dbg !9427

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9428
  %99 = and i32 %98, -57345, !dbg !9428
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9428
  %101 = load i32, i32* %100, align 4, !dbg !9428
  %102 = shl i32 %101, 3, !dbg !9428
  %103 = or i32 %102, %99, !dbg !9428
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9428
  br label %104, !dbg !9430

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !9431
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9432
  %107 = lshr i32 %106, 4, !dbg !9433
  %108 = and i32 %107, 15, !dbg !9433
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !9434
  %110 = load i8, i8* %109, align 1, !dbg !9434
  %111 = zext i8 %110 to i32, !dbg !9434
  %112 = lshr i32 %105, %111, !dbg !9435
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !9436
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !9437
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !9438
  br label %115, !dbg !9439

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !9328
  ret i32 %116, !dbg !9440
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !9441 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9443, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata i32 0, metadata !9444, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata i32 0, metadata !9445, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata i32 0, metadata !9446, metadata !DIExpression()), !dbg !9447
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9448
  %2 = and i32 %1, 12, !dbg !9449
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9450

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !9446, metadata !DIExpression()), !dbg !9447
  br label %29, !dbg !9451

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9454
  %6 = and i32 %5, 63, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %6, metadata !9443, metadata !DIExpression()), !dbg !9447
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9457
  %8 = and i32 %7, 4194304, !dbg !9457
  %9 = icmp eq i32 %8, 0, !dbg !9459
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9460
  %11 = lshr i32 %10, 6, !dbg !9460
  %12 = and i32 %11, 511, !dbg !9460
  br i1 %9, label %16, label %13, !dbg !9461

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !9462
  %15 = udiv i32 %14, %6, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %15, metadata !9444, metadata !DIExpression()), !dbg !9447
  br label %22, !dbg !9465

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !9466
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !9468
  %19 = zext i32 %6 to i64, !dbg !9469
  %20 = udiv i64 %18, %19, !dbg !9470
  %21 = trunc i64 %20 to i32, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %21, metadata !9444, metadata !DIExpression()), !dbg !9447
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !9460
  call void @llvm.dbg.value(metadata i32 %23, metadata !9444, metadata !DIExpression()), !dbg !9447
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9472
  %25 = lshr i32 %24, 15, !dbg !9473
  %26 = and i32 %25, 6, !dbg !9473
  %27 = add nuw nsw i32 %26, 2, !dbg !9473
  call void @llvm.dbg.value(metadata i32 %27, metadata !9445, metadata !DIExpression()), !dbg !9447
  %28 = udiv i32 %23, %27, !dbg !9474
  call void @llvm.dbg.value(metadata i32 %28, metadata !9446, metadata !DIExpression()), !dbg !9447
  br label %29, !dbg !9475

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !9476
  call void @llvm.dbg.value(metadata i32 %30, metadata !9446, metadata !DIExpression()), !dbg !9447
  ret i32 %30, !dbg !9477
}

; Function Attrs: optsize
declare !dbg !9478 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9481 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9485, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %1, metadata !9486, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %2, metadata !9487, metadata !DIExpression()), !dbg !9505
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !9506
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !9506
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !9488, metadata !DIExpression()), !dbg !9507
  %8 = icmp eq i32 %0, 0, !dbg !9508
  br i1 %8, label %9, label %23, !dbg !9509

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !9510
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !9510
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9498, metadata !DIExpression()), !dbg !9510
  store volatile i32 0, i32* %5, align 4, !dbg !9510
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9510
  %12 = or i32 %11, 1, !dbg !9510
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9510
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9510
  %14 = and i32 %13, 1, !dbg !9510
  store volatile i32 %14, i32* %5, align 4, !dbg !9510
  %15 = load volatile i32, i32* %5, align 4, !dbg !9510
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !9511
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9512
  store i32 256, i32* %16, align 4, !dbg !9513
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9514
  store i32 2, i32* %17, align 4, !dbg !9515
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9516
  store i32 3, i32* %18, align 4, !dbg !9517
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9518
  store i32 0, i32* %19, align 4, !dbg !9519
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9520
  store i32 0, i32* %20, align 4, !dbg !9521
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !9522
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9523
  %22 = and i32 %21, -123731969, !dbg !9523
  br label %38, !dbg !9524

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !9525
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !9525
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9502, metadata !DIExpression()), !dbg !9525
  store volatile i32 0, i32* %6, align 4, !dbg !9525
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9525
  %26 = or i32 %25, 4, !dbg !9525
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9525
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9525
  %28 = and i32 %27, 4, !dbg !9525
  store volatile i32 %28, i32* %6, align 4, !dbg !9525
  %29 = load volatile i32, i32* %6, align 4, !dbg !9525
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !9526
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9527
  store i32 512, i32* %30, align 4, !dbg !9528
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9529
  store i32 2, i32* %31, align 4, !dbg !9530
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9531
  store i32 3, i32* %32, align 4, !dbg !9532
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9533
  store i32 0, i32* %33, align 4, !dbg !9534
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9535
  store i32 0, i32* %34, align 4, !dbg !9536
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !9537
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9538
  %36 = and i32 %35, 134217727, !dbg !9538
  %37 = shl i32 %2, 3, !dbg !9538
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !9539
  %42 = or i32 %41, %40, !dbg !9539
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9539
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !9540
  ret void, !dbg !9540
}

; Function Attrs: optsize
declare !dbg !9541 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !9545 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9546
  ret void, !dbg !9547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !9548 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9549
  ret void, !dbg !9550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !9551 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !9552
  ret i32 %1, !dbg !9553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !9554 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !9555
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9556
  %3 = lshr i32 %2, 10, !dbg !9557
  %4 = and i32 %3, 7, !dbg !9557
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9558
  %6 = load i8, i8* %5, align 1, !dbg !9558
  %7 = zext i8 %6 to i32, !dbg !9558
  %8 = lshr i32 %1, %7, !dbg !9559
  ret i32 %8, !dbg !9560
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !9561 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !9562
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9563
  %3 = lshr i32 %2, 13, !dbg !9564
  %4 = and i32 %3, 7, !dbg !9564
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9565
  %6 = load i8, i8* %5, align 1, !dbg !9565
  %7 = zext i8 %6 to i32, !dbg !9565
  %8 = lshr i32 %1, %7, !dbg !9566
  ret i32 %8, !dbg !9567
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9572, metadata !DIExpression()), !dbg !9573
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9574
  store i32 15, i32* %2, align 4, !dbg !9575
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9576
  %4 = and i32 %3, 262144, !dbg !9578
  %5 = icmp eq i32 %4, 0, !dbg !9579
  br i1 %5, label %8, label %6, !dbg !9580

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9581
  store i32 327680, i32* %7, align 4, !dbg !9583
  br label %15, !dbg !9584

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9585
  %10 = and i32 %9, 65536, !dbg !9587
  %11 = icmp eq i32 %10, 0, !dbg !9588
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9589
  br i1 %11, label %14, label %13, !dbg !9590

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !9591
  br label %15, !dbg !9593

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !9594
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9596
  %17 = and i32 %16, 1, !dbg !9598
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9599
  store i32 %17, i32* %18, align 4, !dbg !9601
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9602
  %20 = lshr i32 %19, 3, !dbg !9603
  %21 = and i32 %20, 31, !dbg !9603
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9604
  store i32 %21, i32* %22, align 4, !dbg !9605
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9606
  %24 = and i32 %23, 4, !dbg !9608
  %25 = icmp eq i32 %24, 0, !dbg !9609
  br i1 %25, label %28, label %26, !dbg !9610

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9611
  store i32 5, i32* %27, align 4, !dbg !9613
  br label %35, !dbg !9614

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9615
  %30 = and i32 %29, 1, !dbg !9617
  %31 = icmp eq i32 %30, 0, !dbg !9618
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9619
  br i1 %31, label %34, label %33, !dbg !9620

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !9621
  br label %35, !dbg !9623

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !9624
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9626
  %37 = and i32 %36, 1, !dbg !9628
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9629
  store i32 %37, i32* %38, align 4, !dbg !9631
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9632
  %40 = and i32 %39, 16777216, !dbg !9634
  %41 = icmp eq i32 %40, 0, !dbg !9635
  %42 = select i1 %41, i32 1, i32 2, !dbg !9636
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9637
  store i32 %42, i32* %43, align 4, !dbg !9639
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9640
  %45 = and i32 %44, 4194304, !dbg !9641
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9642
  store i32 %45, i32* %46, align 4, !dbg !9643
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9644
  %48 = and i32 %47, 63, !dbg !9645
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9646
  store i32 %48, i32* %49, align 4, !dbg !9647
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9648
  %51 = lshr i32 %50, 6, !dbg !9649
  %52 = and i32 %51, 511, !dbg !9649
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9650
  store i32 %52, i32* %53, align 4, !dbg !9651
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9652
  %55 = shl i32 %54, 1, !dbg !9653
  %56 = and i32 %55, 393216, !dbg !9653
  %57 = add nuw nsw i32 %56, 131072, !dbg !9653
  %58 = lshr exact i32 %57, 16, !dbg !9654
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9655
  store i32 %58, i32* %59, align 4, !dbg !9656
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9657
  %61 = lshr i32 %60, 24, !dbg !9658
  %62 = and i32 %61, 15, !dbg !9658
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9659
  store i32 %62, i32* %63, align 4, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9666, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32* %1, metadata !9667, metadata !DIExpression()), !dbg !9668
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9669
  store i32 15, i32* %3, align 4, !dbg !9670
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9671
  %5 = and i32 %4, 3, !dbg !9672
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9673
  store i32 %5, i32* %6, align 4, !dbg !9674
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9675
  %8 = and i32 %7, 240, !dbg !9676
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9677
  store i32 %8, i32* %9, align 4, !dbg !9678
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9679
  %11 = and i32 %10, 7168, !dbg !9680
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9681
  store i32 %11, i32* %12, align 4, !dbg !9682
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9683
  %14 = lshr i32 %13, 3, !dbg !9684
  %15 = and i32 %14, 7168, !dbg !9684
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9685
  store i32 %15, i32* %16, align 4, !dbg !9686
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9687
  %18 = and i32 %17, 7, !dbg !9688
  store i32 %18, i32* %1, align 4, !dbg !9689
  ret void, !dbg !9690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !9691 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9692
  %2 = and i32 %1, 128, !dbg !9692
  %3 = icmp eq i32 %2, 0, !dbg !9692
  br i1 %3, label %5, label %4, !dbg !9694

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !9695
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !9697
  br label %5, !dbg !9698

5:                                                ; preds = %4, %0
  ret void, !dbg !9699
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !9700 {
  ret void, !dbg !9701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !9702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9705, metadata !DIExpression()), !dbg !9706
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !9707
  ret void, !dbg !9708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !9709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9712, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.value(metadata i32 1000, metadata !9713, metadata !DIExpression()), !dbg !9714
  %2 = udiv i32 %0, 1000, !dbg !9715
  %3 = add nsw i32 %2, -1, !dbg !9716
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9717
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9718
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9719
  ret void, !dbg !9720
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !9721 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9723, metadata !DIExpression()), !dbg !9725
  %3 = bitcast i32* %2 to i8*, !dbg !9726
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9726
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9724, metadata !DIExpression()), !dbg !9727
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9728
  store volatile i32 %4, i32* %2, align 4, !dbg !9727
  %5 = load volatile i32, i32* %2, align 4, !dbg !9729
  %6 = icmp eq i32 %0, -1, !dbg !9730
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9723, metadata !DIExpression()), !dbg !9725
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !9725
  call void @llvm.dbg.value(metadata i32 %8, metadata !9723, metadata !DIExpression()), !dbg !9725
  br label %9, !dbg !9732

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9723, metadata !DIExpression()), !dbg !9725
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9733
  call void @llvm.dbg.value(metadata i32 undef, metadata !9723, metadata !DIExpression()), !dbg !9725
  %12 = shl i32 %11, 15, !dbg !9725
  %13 = ashr i32 %12, 31, !dbg !9725
  %14 = add i32 %13, %10, !dbg !9725
  call void @llvm.dbg.value(metadata i32 %14, metadata !9723, metadata !DIExpression()), !dbg !9725
  %15 = icmp eq i32 %14, 0, !dbg !9732
  br i1 %15, label %16, label %9, !dbg !9732

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9736
  ret void, !dbg !9736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !9737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9739, metadata !DIExpression()), !dbg !9740
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !9741
  ret void, !dbg !9742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !9743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9748, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 0, metadata !9751, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 0, metadata !9752, metadata !DIExpression()), !dbg !9753
  %2 = icmp eq i32 %0, 0, !dbg !9754
  br i1 %2, label %50, label %3, !dbg !9756

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !9757
  %5 = icmp eq i32 %4, 49152, !dbg !9760
  br i1 %5, label %6, label %15, !dbg !9761

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !9751, metadata !DIExpression()), !dbg !9753
  %7 = add i32 %0, -64000001, !dbg !9762
  %8 = icmp ult i32 %7, 26000000, !dbg !9762
  br i1 %8, label %15, label %9, !dbg !9762

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !9765
  %11 = select i1 %10, i32 0, i32 3, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %11, metadata !9751, metadata !DIExpression()), !dbg !9753
  %12 = add i32 %0, -30000001, !dbg !9768
  %13 = icmp ult i32 %12, 60000000, !dbg !9768
  %14 = select i1 %13, i32 1, i32 %11, !dbg !9768
  call void @llvm.dbg.value(metadata i32 %14, metadata !9751, metadata !DIExpression()), !dbg !9753
  br label %15, !dbg !9768

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !9753
  call void @llvm.dbg.value(metadata i32 %16, metadata !9751, metadata !DIExpression()), !dbg !9753
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !9771
  %18 = icmp eq i32 %17, 32768, !dbg !9773
  br i1 %18, label %19, label %27, !dbg !9774

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !9775
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !9778
  br i1 %22, label %27, label %23, !dbg !9778

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !9779
  %25 = and i1 %24, %21, !dbg !9782
  %26 = select i1 %25, i32 1, i32 %16, !dbg !9782
  call void @llvm.dbg.value(metadata i32 %26, metadata !9751, metadata !DIExpression()), !dbg !9753
  br label %27, !dbg !9782

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !9783
  call void @llvm.dbg.value(metadata i32 %28, metadata !9751, metadata !DIExpression()), !dbg !9753
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !9784
  %30 = icmp eq i32 %29, 16384, !dbg !9786
  br i1 %30, label %31, label %39, !dbg !9787

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !9788
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !9791
  br i1 %34, label %39, label %35, !dbg !9791

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !9792
  %37 = select i1 %36, i1 %33, i1 false, !dbg !9795
  %38 = select i1 %37, i32 1, i32 %28, !dbg !9795
  call void @llvm.dbg.value(metadata i32 %38, metadata !9751, metadata !DIExpression()), !dbg !9753
  br label %39, !dbg !9795

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !9783
  call void @llvm.dbg.value(metadata i32 %40, metadata !9751, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !9796
  call void @llvm.dbg.value(metadata i32 2, metadata !9749, metadata !DIExpression()), !dbg !9753
  br label %41, !dbg !9797

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !9783
  call void @llvm.dbg.value(metadata i32 %42, metadata !9749, metadata !DIExpression()), !dbg !9753
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !9798
  call void @llvm.dbg.value(metadata i32 %43, metadata !9750, metadata !DIExpression()), !dbg !9753
  %44 = add nsw i32 %42, -1, !dbg !9800
  call void @llvm.dbg.value(metadata i32 %44, metadata !9749, metadata !DIExpression()), !dbg !9753
  %45 = icmp ne i32 %43, %40, !dbg !9801
  %46 = icmp ne i32 %44, 0, !dbg !9802
  %47 = select i1 %45, i1 %46, i1 false, !dbg !9802
  br i1 %47, label %41, label %48, !dbg !9803, !llvm.loop !9804

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !9806
  call void @llvm.dbg.value(metadata i32 %51, metadata !9752, metadata !DIExpression()), !dbg !9753
  ret i32 %51, !dbg !9807
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !9808 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9810
  %2 = and i32 %1, 49152, !dbg !9810
  ret i32 %2, !dbg !9811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !9812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9814, metadata !DIExpression()), !dbg !9815
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9816
  %3 = and i32 %2, -8, !dbg !9816
  %4 = or i32 %3, %0, !dbg !9816
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9816
  ret void, !dbg !9817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !9818 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9819
  %2 = and i32 %1, 7, !dbg !9819
  ret i32 %2, !dbg !9820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !9839, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !9840, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i32 0, metadata !9841, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i32 0, metadata !9842, metadata !DIExpression()), !dbg !9843
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !9844
  %4 = icmp eq i32 %3, 0, !dbg !9846
  br i1 %4, label %5, label %21, !dbg !9847

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !9848
  call void @llvm.dbg.value(metadata i32 %6, metadata !9842, metadata !DIExpression()), !dbg !9843
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.65() #24, !dbg !9850
  %8 = icmp eq i32 %7, 1, !dbg !9852
  br i1 %8, label %13, label %9, !dbg !9853

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.66() #24, !dbg !9854
  br label %10, !dbg !9856

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.65() #24, !dbg !9857
  %12 = icmp eq i32 %11, 1, !dbg !9858
  br i1 %12, label %13, label %10, !dbg !9856, !llvm.loop !9859

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !9861
  %15 = load i32, i32* %14, align 4, !dbg !9861
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !9862
  %17 = load i32, i32* %16, align 4, !dbg !9862
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !9863
  %19 = load i32, i32* %18, align 4, !dbg !9863
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.67(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !9864
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %20, metadata !9841, metadata !DIExpression()), !dbg !9843
  br label %21, !dbg !9866

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !9867
  call void @llvm.dbg.value(metadata i32 %22, metadata !9841, metadata !DIExpression()), !dbg !9843
  ret i32 %22, !dbg !9868
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !9869 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9873, metadata !DIExpression()), !dbg !9874
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.69() #24, !dbg !9875
  %2 = icmp ne i32 %1, 0, !dbg !9877
  call void @llvm.dbg.value(metadata i1 %2, metadata !9873, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9874
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !9878
  %4 = icmp ne i32 %3, 0, !dbg !9880
  %5 = select i1 %4, i1 true, i1 %2, !dbg !9881
  %6 = zext i1 %5 to i32, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %6, metadata !9873, metadata !DIExpression()), !dbg !9874
  ret i32 %6, !dbg !9882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !9883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9887, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !9888, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i32 0, metadata !9889, metadata !DIExpression()), !dbg !9890
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !9891
  %4 = load i32, i32* %3, align 4, !dbg !9891
  %5 = and i32 %4, 63, !dbg !9892
  %6 = udiv i32 %0, %5, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %6, metadata !9889, metadata !DIExpression()), !dbg !9890
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !9894
  %8 = load i32, i32* %7, align 4, !dbg !9894
  %9 = and i32 %8, 511, !dbg !9895
  %10 = mul i32 %9, %6, !dbg !9896
  call void @llvm.dbg.value(metadata i32 %10, metadata !9889, metadata !DIExpression()), !dbg !9890
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !9897
  %12 = load i32, i32* %11, align 4, !dbg !9897
  %13 = lshr i32 %12, 15, !dbg !9898
  %14 = and i32 %13, 131070, !dbg !9898
  %15 = add nuw nsw i32 %14, 2, !dbg !9898
  %16 = udiv i32 %10, %15, !dbg !9899
  call void @llvm.dbg.value(metadata i32 %16, metadata !9889, metadata !DIExpression()), !dbg !9890
  ret i32 %16, !dbg !9900
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.65() unnamed_addr #14 !dbg !9901 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9902
  %2 = lshr i32 %1, 1, !dbg !9903
  %3 = and i32 %2, 1, !dbg !9903
  ret i32 %3, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.66() unnamed_addr #13 !dbg !9905 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9906
  %2 = or i32 %1, 1, !dbg !9906
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9906
  ret void, !dbg !9907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.67(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !9908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9910, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 %1, metadata !9911, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 %2, metadata !9912, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 %3, metadata !9913, metadata !DIExpression()), !dbg !9914
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9915
  %6 = and i32 %5, -4227072, !dbg !9915
  %7 = or i32 %1, %0, !dbg !9915
  %8 = shl i32 %2, 6, !dbg !9915
  %9 = or i32 %7, %8, !dbg !9915
  %10 = or i32 %9, %6, !dbg !9915
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9915
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9916
  %12 = and i32 %11, -196609, !dbg !9916
  %13 = or i32 %12, %3, !dbg !9916
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9916
  ret void, !dbg !9917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !9918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9922, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !9923, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 0, metadata !9924, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 0, metadata !9925, metadata !DIExpression()), !dbg !9926
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !9927
  %4 = load i32, i32* %3, align 4, !dbg !9927
  %5 = lshr i32 %4, 4, !dbg !9927
  %6 = and i32 %5, 15, !dbg !9927
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !9927
  %8 = load i8, i8* %7, align 1, !dbg !9927
  %9 = zext i8 %8 to i32, !dbg !9927
  %10 = lshr i32 %0, %9, !dbg !9927
  call void @llvm.dbg.value(metadata i32 %10, metadata !9925, metadata !DIExpression()), !dbg !9926
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !9928
  %12 = icmp ult i32 %11, %10, !dbg !9930
  br i1 %12, label %13, label %16, !dbg !9931

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !9932
  call void @llvm.dbg.value(metadata i32 %14, metadata !9924, metadata !DIExpression()), !dbg !9926
  %15 = icmp eq i32 %14, 0, !dbg !9934
  br i1 %15, label %16, label %30, !dbg !9936

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.68() #24, !dbg !9937
  br label %17, !dbg !9939

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.69() #24, !dbg !9940
  %19 = icmp eq i32 %18, 1, !dbg !9941
  br i1 %19, label %20, label %17, !dbg !9939, !llvm.loop !9942

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !9944
  tail call fastcc void @LL_RCC_SetAHBPrescaler.70(i32 noundef %21) #24, !dbg !9945
  tail call fastcc void @LL_RCC_SetSysClkSource.71() #24, !dbg !9946
  br label %22, !dbg !9947

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.72() #24, !dbg !9948
  %24 = icmp eq i32 %23, 8, !dbg !9949
  br i1 %24, label %25, label %22, !dbg !9947, !llvm.loop !9950

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !9952
  %27 = load i32, i32* %26, align 4, !dbg !9952
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.73(i32 noundef %27) #24, !dbg !9953
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !9954
  %29 = load i32, i32* %28, align 4, !dbg !9954
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.74(i32 noundef %29) #24, !dbg !9955
  br label %30, !dbg !9956

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !9957
  %33 = icmp ugt i32 %32, %10, !dbg !9959
  br i1 %33, label %34, label %36, !dbg !9960

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !9961
  call void @llvm.dbg.value(metadata i32 %35, metadata !9924, metadata !DIExpression()), !dbg !9926
  br label %36, !dbg !9963

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !9926
  call void @llvm.dbg.value(metadata i32 %37, metadata !9924, metadata !DIExpression()), !dbg !9926
  %38 = icmp eq i32 %37, 0, !dbg !9964
  br i1 %38, label %39, label %40, !dbg !9966

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !9967
  br label %40, !dbg !9969

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !9970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.68() unnamed_addr #13 !dbg !9971 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9972
  %2 = or i32 %1, 16777216, !dbg !9972
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9972
  ret void, !dbg !9973
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.69() unnamed_addr #14 !dbg !9974 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9975
  %2 = lshr i32 %1, 25, !dbg !9976
  %3 = and i32 %2, 1, !dbg !9976
  ret i32 %3, !dbg !9977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.70(i32 noundef %0) unnamed_addr #13 !dbg !9978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9980, metadata !DIExpression()), !dbg !9981
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9982
  %3 = and i32 %2, -241, !dbg !9982
  %4 = or i32 %3, %0, !dbg !9982
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.71() unnamed_addr #13 !dbg !9984 {
  call void @llvm.dbg.value(metadata i32 2, metadata !9986, metadata !DIExpression()), !dbg !9987
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9988
  %2 = and i32 %1, -4, !dbg !9988
  %3 = or i32 %2, 2, !dbg !9988
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9988
  ret void, !dbg !9989
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.72() unnamed_addr #14 !dbg !9990 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9991
  %2 = and i32 %1, 12, !dbg !9991
  ret i32 %2, !dbg !9992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.73(i32 noundef %0) unnamed_addr #13 !dbg !9993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9997
  %3 = and i32 %2, -7169, !dbg !9997
  %4 = or i32 %3, %0, !dbg !9997
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9997
  ret void, !dbg !9998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.74(i32 noundef %0) unnamed_addr #13 !dbg !9999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10001, metadata !DIExpression()), !dbg !10002
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10003
  %3 = and i32 %2, -57345, !dbg !10003
  %4 = or i32 %3, %0, !dbg !10003
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10003
  ret void, !dbg !10004
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10005 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10006
  %2 = lshr i32 %1, 27, !dbg !10007
  %3 = and i32 %2, 1, !dbg !10007
  ret i32 %3, !dbg !10008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10013, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %1, metadata !10014, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10015, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10018, metadata !DIExpression()), !dbg !10019
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10020
  %6 = icmp eq i32 %5, 0, !dbg !10022
  br i1 %6, label %7, label %27, !dbg !10023

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %8, metadata !10018, metadata !DIExpression()), !dbg !10019
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10026
  %10 = icmp eq i32 %9, 1, !dbg !10028
  br i1 %10, label %19, label %11, !dbg !10029

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10030
  br i1 %12, label %13, label %14, !dbg !10033

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !10034
  br label %15, !dbg !10036

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10037
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10039
  br label %16, !dbg !10040

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10041
  %18 = icmp eq i32 %17, 1, !dbg !10042
  br i1 %18, label %19, label %16, !dbg !10040, !llvm.loop !10043

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10045
  %21 = load i32, i32* %20, align 4, !dbg !10045
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10046
  %23 = load i32, i32* %22, align 4, !dbg !10046
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10047
  %25 = load i32, i32* %24, align 4, !dbg !10047
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.67(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !10048
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !10049
  call void @llvm.dbg.value(metadata i32 %26, metadata !10017, metadata !DIExpression()), !dbg !10019
  br label %27, !dbg !10050

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10051
  call void @llvm.dbg.value(metadata i32 %28, metadata !10017, metadata !DIExpression()), !dbg !10019
  ret i32 %28, !dbg !10052
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !10053 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10054
  %2 = lshr i32 %1, 17, !dbg !10055
  %3 = and i32 %2, 1, !dbg !10055
  ret i32 %3, !dbg !10056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10057 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10058
  %2 = or i32 %1, 262144, !dbg !10058
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10058
  ret void, !dbg !10059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !10060 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10061
  %2 = and i32 %1, -262145, !dbg !10061
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10061
  ret void, !dbg !10062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !10063 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10064
  %2 = or i32 %1, 65536, !dbg !10064
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10064
  ret void, !dbg !10065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10066 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10069, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata i32 undef, metadata !10069, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata i32 undef, metadata !10069, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10085
  ret void, !dbg !10086
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10091, metadata !DIExpression()), !dbg !10093
  %2 = icmp eq i8* %0, null, !dbg !10094
  br i1 %2, label %29, label %3, !dbg !10096

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10097
  %5 = icmp eq i8 %4, 0, !dbg !10098
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10099
  br i1 %6, label %29, label %8, !dbg !10099

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10092, metadata !DIExpression()), !dbg !10093
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10100

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10092, metadata !DIExpression()), !dbg !10093
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !10102
  br i1 %10, label %11, label %15, !dbg !10107

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10108
  %13 = load i8*, i8** %12, align 4, !dbg !10108
  %14 = icmp eq i8* %13, %0, !dbg !10109
  br i1 %14, label %29, label %15, !dbg !10110

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10111
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10092, metadata !DIExpression()), !dbg !10093
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10112
  br i1 %17, label %7, label %8, !dbg !10113, !llvm.loop !10114

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10092, metadata !DIExpression()), !dbg !10093
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !10116
  br i1 %20, label %21, label %26, !dbg !10120

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10121
  %23 = load i8*, i8** %22, align 4, !dbg !10121
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !10122
  %25 = icmp eq i32 %24, 0, !dbg !10123
  br i1 %25, label %29, label %26, !dbg !10124

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10125
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10092, metadata !DIExpression()), !dbg !10093
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10126
  br i1 %28, label %29, label %18, !dbg !10100, !llvm.loop !10127

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10093
  ret %struct.device* %30, !dbg !10129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10134, metadata !DIExpression()), !dbg !10135
  %2 = icmp eq %struct.device* %0, null, !dbg !10136
  br i1 %2, label %14, label %3, !dbg !10138

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10139
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10139
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10140
  %7 = load i8, i8* %6, align 1, !dbg !10140
  %8 = and i8 %7, 1, !dbg !10140
  %9 = icmp eq i8 %8, 0, !dbg !10140
  br i1 %9, label %14, label %10, !dbg !10141

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10142
  %12 = load i8, i8* %11, align 1, !dbg !10142
  %13 = icmp eq i8 %12, 0, !dbg !10143
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10135
  ret i1 %15, !dbg !10144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10145 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10150, metadata !DIExpression()), !dbg !10151
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10152
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10154 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10162, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10163, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.value(metadata i8* %2, metadata !10164, metadata !DIExpression()), !dbg !10167
  %5 = bitcast i32* %4 to i8*, !dbg !10168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10168
  call void @llvm.dbg.value(metadata i32 0, metadata !10165, metadata !DIExpression()), !dbg !10167
  store i32 0, i32* %4, align 4, !dbg !10169
  call void @llvm.dbg.value(metadata i32* %4, metadata !10165, metadata !DIExpression(DW_OP_deref)), !dbg !10167
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10170
  call void @llvm.dbg.value(metadata i16* %6, metadata !10166, metadata !DIExpression()), !dbg !10167
  %7 = load i32, i32* %4, align 4, !dbg !10171
  call void @llvm.dbg.value(metadata i32 %7, metadata !10165, metadata !DIExpression()), !dbg !10167
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10173
  ret i32 %8, !dbg !10174
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !10175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10179, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32* %1, metadata !10180, metadata !DIExpression()), !dbg !10185
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10186
  %4 = load i16*, i16** %3, align 4, !dbg !10186
  call void @llvm.dbg.value(metadata i16* %4, metadata !10181, metadata !DIExpression()), !dbg !10185
  %5 = icmp eq i16* %4, null, !dbg !10187
  br i1 %5, label %14, label %6, !dbg !10188

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10189
  call void @llvm.dbg.value(metadata i32 %7, metadata !10182, metadata !DIExpression()), !dbg !10189
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10190
  %9 = load i16, i16* %8, align 2, !dbg !10190
  %10 = add i16 %9, -32767, !dbg !10191
  %11 = icmp ult i16 %10, 2, !dbg !10191
  %12 = add i32 %7, 1, !dbg !10192
  call void @llvm.dbg.value(metadata i32 %12, metadata !10182, metadata !DIExpression()), !dbg !10189
  br i1 %11, label %13, label %6, !dbg !10191, !llvm.loop !10194

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10197
  br label %14, !dbg !10198

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10200 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10204, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %1, metadata !10205, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10206, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i8* %3, metadata !10207, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 0, metadata !10208, metadata !DIExpression()), !dbg !10216
  %5 = icmp eq i32 %1, 0, !dbg !10217
  br i1 %5, label %16, label %8, !dbg !10218

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10208, metadata !DIExpression()), !dbg !10216
  %7 = icmp eq i32 %15, %1, !dbg !10217
  br i1 %7, label %16, label %8, !dbg !10218, !llvm.loop !10219

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10208, metadata !DIExpression()), !dbg !10216
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10221
  %11 = load i16, i16* %10, align 2, !dbg !10221
  call void @llvm.dbg.value(metadata i16 %11, metadata !10210, metadata !DIExpression()), !dbg !10222
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !10223
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10213, metadata !DIExpression()), !dbg !10222
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !10224
  call void @llvm.dbg.value(metadata i32 %13, metadata !10214, metadata !DIExpression()), !dbg !10222
  %14 = icmp slt i32 %13, 0, !dbg !10225
  %15 = add nuw i32 %9, 1, !dbg !10227
  call void @llvm.dbg.value(metadata i32 %15, metadata !10208, metadata !DIExpression()), !dbg !10216
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !10229 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10233, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10234, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10235, metadata !DIExpression()), !dbg !10236
  %2 = sext i16 %0 to i32, !dbg !10237
  %3 = icmp slt i16 %0, 1, !dbg !10239
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10240
  %6 = add nsw i32 %2, -1, !dbg !10240
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10240
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10240
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10234, metadata !DIExpression()), !dbg !10236
  ret %struct.device* %8, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10242 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10244, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10245, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i8* %2, metadata !10246, metadata !DIExpression()), !dbg !10249
  %5 = bitcast i32* %4 to i8*, !dbg !10250
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10250
  call void @llvm.dbg.value(metadata i32 0, metadata !10247, metadata !DIExpression()), !dbg !10249
  store i32 0, i32* %4, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata i32* %4, metadata !10247, metadata !DIExpression(DW_OP_deref)), !dbg !10249
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10252
  call void @llvm.dbg.value(metadata i16* %6, metadata !10248, metadata !DIExpression()), !dbg !10249
  %7 = load i32, i32* %4, align 4, !dbg !10253
  call void @llvm.dbg.value(metadata i32 %7, metadata !10247, metadata !DIExpression()), !dbg !10249
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10254
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10255
  ret i32 %8, !dbg !10256
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !10257 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10259, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i32* %1, metadata !10260, metadata !DIExpression()), !dbg !10264
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10265
  %4 = load i16*, i16** %3, align 4, !dbg !10265
  call void @llvm.dbg.value(metadata i16* %4, metadata !10261, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i32 0, metadata !10262, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i32 0, metadata !10263, metadata !DIExpression()), !dbg !10264
  %5 = icmp eq i16* %4, null, !dbg !10266
  br i1 %5, label %22, label %6, !dbg !10268

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10262, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i16* %8, metadata !10261, metadata !DIExpression()), !dbg !10264
  %9 = load i16, i16* %8, align 2, !dbg !10269
  %10 = icmp eq i16 %9, -32768, !dbg !10273
  call void @llvm.dbg.value(metadata i32 undef, metadata !10262, metadata !DIExpression()), !dbg !10264
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10274
  call void @llvm.dbg.value(metadata i16* %11, metadata !10261, metadata !DIExpression()), !dbg !10264
  %12 = zext i1 %10 to i32, !dbg !10275
  %13 = add i32 %7, %12, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %13, metadata !10262, metadata !DIExpression()), !dbg !10264
  %14 = icmp eq i32 %13, 2, !dbg !10276
  br i1 %14, label %15, label %6, !dbg !10277

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10264
  call void @llvm.dbg.value(metadata i32 %16, metadata !10263, metadata !DIExpression()), !dbg !10264
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10278
  %18 = load i16, i16* %17, align 2, !dbg !10278
  %19 = icmp eq i16 %18, 32767, !dbg !10279
  %20 = add i32 %16, 1, !dbg !10280
  call void @llvm.dbg.value(metadata i32 %20, metadata !10263, metadata !DIExpression()), !dbg !10264
  br i1 %19, label %21, label %15, !dbg !10282, !llvm.loop !10283

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10285
  br label %22, !dbg !10286

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10287
  call void @llvm.dbg.value(metadata i16* %23, metadata !10261, metadata !DIExpression()), !dbg !10264
  ret i16* %23, !dbg !10288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10289 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10292
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10293
  ret i32* %2, !dbg !10294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !10295 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10443, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10444, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10445, metadata !DIExpression()), !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !10448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10452, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32 %1, metadata !10453, metadata !DIExpression()), !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !10456 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10460, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 %1, metadata !10461, metadata !DIExpression()), !dbg !10462
  ret void, !dbg !10463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !10464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8* %1, metadata !10469, metadata !DIExpression()), !dbg !10470
  ret i32 -134, !dbg !10471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !10472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10476, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i8* %1, metadata !10477, metadata !DIExpression()), !dbg !10478
  ret i32 -134, !dbg !10479
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #9 !dbg !10480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10483, metadata !DIExpression()), !dbg !10484
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10485, !srcloc !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10488, metadata !DIExpression()) #23, !dbg !10492
  call void @llvm.dbg.value(metadata i32 undef, metadata !10489, metadata !DIExpression()) #23, !dbg !10492
  br label %3, !dbg !10493

3:                                                ; preds = %3, %1
  br label %3, !dbg !10494, !llvm.loop !10497
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10505, metadata !DIExpression()), !dbg !10506
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10507
  unreachable, !dbg !10507
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #9 !dbg !10508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10510, metadata !DIExpression()), !dbg !10511
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10512
  unreachable, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10515, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10516, metadata !DIExpression()), !dbg !10519
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10520, !srcloc !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10488, metadata !DIExpression()) #23, !dbg !10522
  call void @llvm.dbg.value(metadata i32 undef, metadata !10489, metadata !DIExpression()) #23, !dbg !10522
  call void @llvm.dbg.value(metadata i32 undef, metadata !10517, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10518, metadata !DIExpression()), !dbg !10519
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10523
  br i1 %4, label %6, label %5, !dbg !10525

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !10526
  br label %7, !dbg !10527

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !10526
  br label %7, !dbg !10530

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %8, metadata !10488, metadata !DIExpression()) #23, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %8, metadata !10517, metadata !DIExpression()), !dbg !10519
  %9 = tail call fastcc %struct.k_thread* @k_current_get.81() #26, !dbg !10532
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10518, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata i32 undef, metadata !10533, metadata !DIExpression()) #23, !dbg !10536
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10538, !srcloc !10539
  tail call fastcc void @k_thread_abort.82(%struct.k_thread* noundef %9) #24, !dbg !10540
  ret void, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.81() unnamed_addr #10 !dbg !10544 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.83() #26, !dbg !10548
  ret %struct.k_thread* %1, !dbg !10549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.82(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10554, metadata !DIExpression()), !dbg !10555
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10556, !srcloc !10558
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !10559
  ret void, !dbg !10560
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.83() unnamed_addr #10 !dbg !10561 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10562, !srcloc !10564
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !10565
  ret %struct.k_thread* %1, !dbg !10566
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10571, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i32 %1, metadata !10572, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i32 %2, metadata !10573, metadata !DIExpression()), !dbg !10574
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !10575
  ret void, !dbg !10576
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10577 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10581, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i8* %1, metadata !10582, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i32 %2, metadata !10583, metadata !DIExpression()), !dbg !10584
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !10585
  ret void, !dbg !10586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10587 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !10588
  ret void, !dbg !10589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10592, metadata !DIExpression()), !dbg !10593
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !10594
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10595
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10596
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10597
  %4 = trunc i32 %0 to i8, !dbg !10598
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10599
  store i8 %4, i8* %5, align 4, !dbg !10600
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10601
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !10602
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10603
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10604
  store i8* %8, i8** %9, align 4, !dbg !10605
  ret void, !dbg !10606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10609, metadata !DIExpression()), !dbg !10615
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10616
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10610, metadata !DIExpression()), !dbg !10615
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10617
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10611, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i8* null, metadata !10614, metadata !DIExpression()), !dbg !10615
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10618
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10619
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !10620
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !10621
  ret void, !dbg !10622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !10623 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10627, metadata !DIExpression()), !dbg !10628
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !10629
  ret i8* %2, !dbg !10630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !10631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10636, metadata !DIExpression()), !dbg !10637
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10638
  %3 = load i8, i8* %2, align 1, !dbg !10639
  %4 = and i8 %3, -5, !dbg !10639
  store i8 %4, i8* %2, align 1, !dbg !10639
  ret void, !dbg !10640
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #9 !dbg !10641 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !10644
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !10645
  %3 = ptrtoint i8* %2 to i32, !dbg !10654
  %4 = add i32 %3, 2048, !dbg !10655
  call void @llvm.dbg.value(metadata i32 %4, metadata !10649, metadata !DIExpression()) #23, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %4, metadata !10657, metadata !DIExpression()) #23, !dbg !10660
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10662, !srcloc !10663
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10664
  %6 = or i32 %5, 512, !dbg !10664
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10664
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -2, i32 noundef 255) #25, !dbg !10665
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -5, i32 noundef 0) #25, !dbg !10668
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -12, i32 noundef 0) #25, !dbg !10669
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -11, i32 noundef 0) #25, !dbg !10670
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -10, i32 noundef 0) #25, !dbg !10671
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -4, i32 noundef 0) #25, !dbg !10672
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10673
  %8 = or i32 %7, 458752, !dbg !10673
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10673
  tail call void @z_arm_fault_init() #25, !dbg !10674
  tail call void @z_arm_cpu_idle_init() #25, !dbg !10675
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10676
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10679
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !10680
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !10681
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10682
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !10682
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10643, metadata !DIExpression()), !dbg !10683
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !10684
  call void @z_device_state_init() #25, !dbg !10685
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !10686
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !10687
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !10688
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10689
  unreachable, !dbg !10689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1851, metadata !DIExpression()), !dbg !10690
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10691
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1852, metadata !DIExpression()), !dbg !10690
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1852, metadata !DIExpression()), !dbg !10690
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10692
  br i1 %7, label %8, label %35, !dbg !10693

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1852, metadata !DIExpression()), !dbg !10690
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10694
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10694
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1862, metadata !DIExpression()), !dbg !10695
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10696
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10696
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !10697
  call void @llvm.dbg.value(metadata i32 %14, metadata !1866, metadata !DIExpression()), !dbg !10695
  %15 = icmp eq %struct.device* %11, null, !dbg !10698
  br i1 %15, label %32, label %16, !dbg !10700

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10701
  br i1 %17, label %26, label %18, !dbg !10704

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10705
  call void @llvm.dbg.value(metadata i32 %19, metadata !1866, metadata !DIExpression()), !dbg !10695
  %20 = icmp ult i32 %19, 255, !dbg !10707
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %21, metadata !1866, metadata !DIExpression()), !dbg !10695
  %22 = trunc i32 %21 to i8, !dbg !10708
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10709
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10709
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10710
  store i8 %22, i8* %25, align 1, !dbg !10711
  br label %26, !dbg !10712

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10713
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10713
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10714
  %30 = load i8, i8* %29, align 1, !dbg !10715
  %31 = or i8 %30, 1, !dbg !10715
  store i8 %31, i8* %29, align 1, !dbg !10715
  br label %32, !dbg !10716

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10717
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1852, metadata !DIExpression()), !dbg !10690
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10692
  br i1 %34, label %8, label %35, !dbg !10693, !llvm.loop !10718

35:                                               ; preds = %32, %1
  ret void, !dbg !10720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.90(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !10721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10723, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.value(metadata i32 %1, metadata !10724, metadata !DIExpression()), !dbg !10725
  %3 = trunc i32 %1 to i8, !dbg !10726
  %4 = shl i8 %3, 4, !dbg !10726
  %5 = and i32 %0, 15, !dbg !10729
  %6 = add nsw i32 %5, -4, !dbg !10730
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10731
  store volatile i8 %4, i8* %7, align 1, !dbg !10732
  ret void, !dbg !10733
}

; Function Attrs: optsize
declare !dbg !10734 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !10735 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10738, metadata !DIExpression()), !dbg !10739
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10740
  store i8 1, i8* %2, align 1, !dbg !10741
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10742
  store i8 1, i8* %3, align 4, !dbg !10743
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10744
  store i32 0, i32* %4, align 4, !dbg !10745
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10746
  store i32 0, i32* %5, align 4, !dbg !10747
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10748
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10749
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10750
  ret void, !dbg !10751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10752 {
  tail call void @z_sched_init() #25, !dbg !10757
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10758
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0)) #25, !dbg !10759
  call void @llvm.dbg.value(metadata i8* %1, metadata !10756, metadata !DIExpression()), !dbg !10760
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10761
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10762
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !10763
  ret i8* %1, !dbg !10764
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #9 !dbg !10765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10769, metadata !DIExpression()), !dbg !10770
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !10771
  unreachable, !dbg !10772
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10775, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i8* %1, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i8* %2, metadata !10777, metadata !DIExpression()), !dbg !10778
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10779
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !10780
  tail call void @boot_banner() #25, !dbg !10781
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !10782
  tail call void @z_init_static_threads() #25, !dbg !10783
  tail call void @main() #25, !dbg !10784
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10785
  %5 = and i8 %4, -2, !dbg !10785
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10785
  ret void, !dbg !10786
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !10787 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10797, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.value(metadata i8* %1, metadata !10798, metadata !DIExpression()), !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !10801 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10803, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i8* %1, metadata !10804, metadata !DIExpression()), !dbg !10805
  ret void, !dbg !10806
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10807 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10808, !srcloc !10815
  call void @llvm.dbg.value(metadata i32 %1, metadata !10811, metadata !DIExpression()) #23, !dbg !10816
  %2 = icmp ne i32 %1, 0, !dbg !10817
  ret i1 %2, !dbg !10818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !10819 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10820
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10821
  %3 = load i8, i8* %2, align 4, !dbg !10822
  %4 = or i8 %3, 1, !dbg !10822
  store i8 %4, i8* %2, align 4, !dbg !10822
  ret void, !dbg !10823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !10824 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10825
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10826
  %3 = load i8, i8* %2, align 4, !dbg !10827
  %4 = and i8 %3, -2, !dbg !10827
  store i8 %4, i8* %2, align 4, !dbg !10827
  ret void, !dbg !10828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !10829 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10830
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10831
  %3 = load i8, i8* %2, align 4, !dbg !10831
  %4 = and i8 %3, 1, !dbg !10832
  %5 = icmp ne i8 %4, 0, !dbg !10833
  ret i1 %5, !dbg !10834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10839, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.value(metadata i8* %1, metadata !10840, metadata !DIExpression()), !dbg !10841
  ret i32 -88, !dbg !10842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !10843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10847, metadata !DIExpression()), !dbg !10848
  ret i8* null, !dbg !10849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #2 !dbg !10850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10854, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata i8* %1, metadata !10855, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata i32 %2, metadata !10856, metadata !DIExpression()), !dbg !10857
  ret i32 -88, !dbg !10858
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1989, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8* %1, metadata !1990, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i32 %2, metadata !1991, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i32 0, metadata !1992, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8 undef, metadata !1994, metadata !DIExpression()), !dbg !10859
  %4 = icmp eq i8* %1, null, !dbg !10860
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !10862
  br i1 %6, label %46, label %7, !dbg !10862

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10863
  %9 = load i8, i8* %8, align 1, !dbg !10863
  call void @llvm.dbg.value(metadata i8 %9, metadata !1994, metadata !DIExpression()), !dbg !10859
  %10 = add i32 %2, -1, !dbg !10864
  call void @llvm.dbg.value(metadata i32 %10, metadata !1991, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8 0, metadata !1995, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i8 %9, metadata !1994, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i32 0, metadata !1992, metadata !DIExpression()), !dbg !10859
  %11 = icmp eq i8 %9, 0, !dbg !10866
  br i1 %11, label %12, label %15, !dbg !10868

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !10869
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !10870
  store i8 0, i8* %14, align 1, !dbg !10871
  br label %46, !dbg !10872

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1995, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i8 %17, metadata !1994, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i32 %18, metadata !1992, metadata !DIExpression()), !dbg !10859
  %19 = zext i8 %17 to i32, !dbg !10873
  %20 = zext i8 %16 to i32, !dbg !10874
  %21 = shl nuw i32 1, %20, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %21, metadata !1993, metadata !DIExpression()), !dbg !10859
  %22 = and i32 %21, %19, !dbg !10876
  %23 = icmp eq i32 %22, 0, !dbg !10878
  br i1 %23, label %42, label %24, !dbg !10879

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !10880
  %26 = sub i32 %10, %18, !dbg !10881
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !10882
  %28 = load i8*, i8** %27, align 4, !dbg !10882
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !10883
  %30 = load i32, i32* %29, align 4, !dbg !10883
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !10884
  %32 = add i32 %31, %18, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %32, metadata !1992, metadata !DIExpression()), !dbg !10859
  %33 = trunc i32 %21 to i8, !dbg !10886
  %34 = xor i8 %33, -1, !dbg !10886
  %35 = and i8 %17, %34, !dbg !10886
  call void @llvm.dbg.value(metadata i8 %35, metadata !1994, metadata !DIExpression()), !dbg !10859
  %36 = icmp eq i8 %35, 0, !dbg !10887
  br i1 %36, label %12, label %37, !dbg !10889

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !10890
  %39 = sub i32 %10, %32, !dbg !10892
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !10893
  %41 = add i32 %40, %32, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %41, metadata !1992, metadata !DIExpression()), !dbg !10859
  br label %42, !dbg !10895

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !10859
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !10859
  call void @llvm.dbg.value(metadata i8 %44, metadata !1994, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i32 %43, metadata !1992, metadata !DIExpression()), !dbg !10859
  %45 = add i8 %16, 1, !dbg !10896
  call void @llvm.dbg.value(metadata i8 %45, metadata !1995, metadata !DIExpression()), !dbg !10865
  br label %15, !dbg !10868

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.92, i32 0, i32 0), %3 ], !dbg !10859
  ret i8* %47, !dbg !10897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10902, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.value(metadata i32 %1, metadata !10903, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.value(metadata i8* %2, metadata !10904, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.value(metadata i32 %3, metadata !10905, metadata !DIExpression()), !dbg !10907
  %5 = icmp ult i32 %1, %3, !dbg !10908
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %6, metadata !10906, metadata !DIExpression()), !dbg !10907
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !10909
  ret i32 %6, !dbg !10910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10915, metadata !DIExpression()), !dbg !10916
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !10917
  ret void, !dbg !10918
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !10919 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10928, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10929, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 %2, metadata !10930, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10931, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i8* %4, metadata !10932, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i8* %5, metadata !10933, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i8* %6, metadata !10934, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 %7, metadata !10935, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 %8, metadata !10936, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i8* undef, metadata !10937, metadata !DIExpression()), !dbg !10939
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !10940
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !10941
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !10942
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !10943
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !10944
  call void @llvm.dbg.value(metadata i8* %13, metadata !10938, metadata !DIExpression()), !dbg !10939
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !10945
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !10946
  store i8* null, i8** %14, align 4, !dbg !10947
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10948
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !10948
  br i1 %16, label %20, label %17, !dbg !10950

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !10951
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !10951
  br label %20, !dbg !10952

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !10939
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10953
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !10955
  ret i8* %13, !dbg !10956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !10957 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !10964
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !10965
  ret void, !dbg !10966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !10967 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10972, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %1, metadata !10973, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %2, metadata !10974, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %3, metadata !10975, metadata !DIExpression()), !dbg !10976
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !10977
  store %union.anon* null, %union.anon** %5, align 8, !dbg !10978
  %6 = trunc i32 %3 to i8, !dbg !10979
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !10980
  store i8 %6, i8* %7, align 4, !dbg !10981
  %8 = trunc i32 %2 to i8, !dbg !10982
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !10983
  store i8 %8, i8* %9, align 1, !dbg !10984
  %10 = trunc i32 %1 to i8, !dbg !10985
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !10986
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !10986
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !10986
  store i8 %10, i8* %13, align 2, !dbg !10987
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !10988
  store i8 0, i8* %14, align 1, !dbg !10989
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !10990
  ret void, !dbg !10991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !10992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10996, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10997, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata i32 %2, metadata !10998, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata i32 0, metadata !11003, metadata !DIExpression()), !dbg !11004
  %4 = add i32 %2, 7, !dbg !11005
  %5 = and i32 %4, -8, !dbg !11005
  %6 = add i32 %5, 64, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %6, metadata !10999, metadata !DIExpression()), !dbg !11004
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.102(%struct.z_thread_stack_element* noundef %1) #24, !dbg !11007
  call void @llvm.dbg.value(metadata i8* %7, metadata !11002, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata i32 %5, metadata !11000, metadata !DIExpression()), !dbg !11004
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11008
  call void @llvm.dbg.value(metadata i8* %8, metadata !11001, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata i32 0, metadata !11003, metadata !DIExpression()), !dbg !11004
  %9 = ptrtoint i8* %7 to i32, !dbg !11009
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11010
  store i32 %9, i32* %10, align 4, !dbg !11011
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11012
  store i32 %5, i32* %11, align 4, !dbg !11013
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11014
  store i32 0, i32* %12, align 4, !dbg !11015
  call void @llvm.dbg.value(metadata i8* %8, metadata !11001, metadata !DIExpression()), !dbg !11004
  ret i8* %8, !dbg !11016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.102(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !11017 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11021, metadata !DIExpression()), !dbg !11022
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11023
  ret i8* %2, !dbg !11024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11030, metadata !DIExpression()), !dbg !11031
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11032
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11033
  ret void, !dbg !11034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11035 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11037, metadata !DIExpression()), !dbg !11038
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11039
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !11040
  ret void, !dbg !11041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11042 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11046, metadata !DIExpression()), !dbg !11047
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11048
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11049
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11050
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11051
  ret void, !dbg !11052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11053 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11058, metadata !DIExpression()), !dbg !11059
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11060
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11061
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11062
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11063
  ret void, !dbg !11064
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11065 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11082, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11073, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11074, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i32 %2, metadata !11075, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11076, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8* %4, metadata !11077, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8* %5, metadata !11078, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8* %6, metadata !11079, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i32 %7, metadata !11080, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i32 %8, metadata !11081, metadata !DIExpression()), !dbg !11083
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !11084
  %13 = icmp eq i64 %11, -1, !dbg !11085
  br i1 %13, label %15, label %14, !dbg !11087

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !11088
  br label %15, !dbg !11090

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11092 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11097, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11096, metadata !DIExpression()), !dbg !11098
  %4 = icmp eq i64 %3, 0, !dbg !11099
  br i1 %4, label %5, label %6, !dbg !11101

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11102
  br label %7, !dbg !11104

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !11105
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11112, metadata !DIExpression()), !dbg !11113
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11114, !srcloc !11116
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11117
  ret void, !dbg !11118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11119 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11122, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11121, metadata !DIExpression()), !dbg !11123
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11124
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !11125
  ret void, !dbg !11126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11127 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11129, metadata !DIExpression()), !dbg !11149
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11150

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !11151
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11147, metadata !DIExpression()), !dbg !11152
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11153

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11129, metadata !DIExpression()), !dbg !11149
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11154
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11154
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11157
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11157
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11158
  %9 = load i32, i32* %8, align 4, !dbg !11158
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11159
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11159
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11160
  %13 = load i8*, i8** %12, align 4, !dbg !11160
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11161
  %15 = load i8*, i8** %14, align 4, !dbg !11161
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11162
  %17 = load i8*, i8** %16, align 4, !dbg !11162
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11163
  %19 = load i32, i32* %18, align 4, !dbg !11163
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11164
  %21 = load i32, i32* %20, align 4, !dbg !11164
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !11165
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11166
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11167
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11168
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11168
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11169
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11129, metadata !DIExpression()), !dbg !11149
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11170
  br i1 %27, label %2, label %1, !dbg !11150, !llvm.loop !11172

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !11151
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11147, metadata !DIExpression()), !dbg !11152
  br label %29, !dbg !11153

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !11174
  ret void, !dbg !11175

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11147, metadata !DIExpression()), !dbg !11152
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11176
  %33 = load i32, i32* %32, align 4, !dbg !11176
  %34 = icmp eq i32 %33, -1, !dbg !11180
  br i1 %34, label %43, label %35, !dbg !11181

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11182
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11182
  %38 = icmp sgt i32 %33, 0, !dbg !11184
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11184
  %40 = zext i32 %39 to i64, !dbg !11184
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #24, !dbg !11184
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11185
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !11185
  br label %43, !dbg !11186

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11187
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11147, metadata !DIExpression()), !dbg !11152
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11188
  br i1 %45, label %30, label %29, !dbg !11153, !llvm.loop !11190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !11192 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i64 %0, metadata !11199, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 1000, metadata !11204, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 10000, metadata !11205, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 1, metadata !11206, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 0, metadata !11207, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 1, metadata !11208, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 0, metadata !11209, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 1, metadata !11210, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 0, metadata !11211, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i64 0, metadata !11212, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i64 0, metadata !11212, metadata !DIExpression()), !dbg !11216
  %2 = mul i64 %0, 10, !dbg !11218
  ret i64 %2, !dbg !11224
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #9 !dbg !11225 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11227, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i8* %1, metadata !11228, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i8* %2, metadata !11229, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i8* %3, metadata !11230, metadata !DIExpression()), !dbg !11231
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11232
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11233
  %7 = load i8, i8* %6, align 4, !dbg !11234
  %8 = or i8 %7, 4, !dbg !11234
  store i8 %8, i8* %6, align 4, !dbg !11234
  tail call void @z_thread_essential_clear() #24, !dbg !11235
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11236
  unreachable, !dbg !11236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !11237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11241, metadata !DIExpression()), !dbg !11242
  ret i32 -134, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11244 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11248, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.value(metadata i32 %1, metadata !11249, metadata !DIExpression()), !dbg !11250
  ret i32 -134, !dbg !11251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #2 !dbg !11252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11259, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11260, metadata !DIExpression()), !dbg !11261
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11262
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11264
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11261
  ret i32 %6, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #2 !dbg !11266 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11272
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11271
  ret i32 %3, !dbg !11274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11275 {
  tail call void @sys_clock_idle_exit() #25, !dbg !11277
  ret void, !dbg !11278
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #9 !dbg !11279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11281, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i8* %1, metadata !11282, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i8* %2, metadata !11283, metadata !DIExpression()), !dbg !11284
  br label %4, !dbg !11285

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11286, !srcloc !11293
  call void @llvm.dbg.value(metadata i32 undef, metadata !11289, metadata !DIExpression()) #23, !dbg !11294
  call void @llvm.dbg.value(metadata i32 undef, metadata !11290, metadata !DIExpression()) #23, !dbg !11294
  tail call fastcc void @k_cpu_idle() #24, !dbg !11295
  br label %4, !dbg !11285, !llvm.loop !11296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11298 {
  tail call void @arch_cpu_idle() #25, !dbg !11299
  ret void, !dbg !11300
}

; Function Attrs: optsize
declare !dbg !11301 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11302 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11306, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11307, metadata !DIExpression()), !dbg !11310
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11311
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11311
  %5 = load i8, i8* %4, align 2, !dbg !11311
  call void @llvm.dbg.value(metadata i8 %5, metadata !11308, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11310
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11312
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11312
  %8 = load i8, i8* %7, align 2, !dbg !11312
  call void @llvm.dbg.value(metadata i8 %8, metadata !11309, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11310
  %9 = icmp eq i8 %8, %5, !dbg !11313
  %10 = sext i8 %5 to i32, !dbg !11315
  %11 = sext i8 %8 to i32, !dbg !11315
  %12 = sub nsw i32 %11, %10, !dbg !11315
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11315
  ret i32 %13, !dbg !11316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11321, metadata !DIExpression()), !dbg !11322
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !11323
  %3 = icmp eq i32 %2, 0, !dbg !11325
  br i1 %3, label %8, label %4, !dbg !11326

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !11327
  %6 = add i32 %5, %2, !dbg !11329
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11330
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !11331
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !11332
  br label %8, !dbg !11333

8:                                                ; preds = %4, %1
  ret void, !dbg !11334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !11335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11339, metadata !DIExpression()), !dbg !11341
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11342
  call void @llvm.dbg.value(metadata i32 %1, metadata !11340, metadata !DIExpression()), !dbg !11341
  ret i32 %1, !dbg !11343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11348, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 %1, metadata !11349, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 0, metadata !11350, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !11366
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11368, !srcloc !11374
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %4, metadata !11371, metadata !DIExpression()) #23, !dbg !11375
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !11375
  call void @llvm.dbg.value(metadata i32 %4, metadata !11365, metadata !DIExpression()) #23, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %4, metadata !11356, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 undef, metadata !11350, metadata !DIExpression()), !dbg !11358
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11376
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !11379
  %6 = icmp sgt i32 %0, 0, !dbg !11380
  %7 = icmp sgt i32 %5, 2, !dbg !11382
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11382
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11382
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11383
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11384
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11385
  call void @llvm.dbg.value(metadata i32 %4, metadata !11386, metadata !DIExpression()) #23, !dbg !11392
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %4, metadata !11394, metadata !DIExpression()) #23, !dbg !11397
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11399, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !11350, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 undef, metadata !11350, metadata !DIExpression()), !dbg !11358
  ret void, !dbg !11401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !11402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11404, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 %0, metadata !11406, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11421
  call void @llvm.dbg.value(metadata i32 1000, metadata !11409, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata i32 10000, metadata !11410, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata i8 1, metadata !11411, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata i1 true, metadata !11412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11421
  call void @llvm.dbg.value(metadata i1 true, metadata !11413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11421
  call void @llvm.dbg.value(metadata i8 0, metadata !11414, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata i1 true, metadata !11415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11421
  call void @llvm.dbg.value(metadata i1 false, metadata !11416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11421
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !11421
  %2 = mul i32 %0, 10, !dbg !11423
  ret i32 %2, !dbg !11429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !11435
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11437, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11437
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !11439
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !11439
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !11435
  call void @llvm.dbg.value(metadata i32 %3, metadata !11433, metadata !DIExpression()), !dbg !11434
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11440
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11442
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11443
  br i1 %6, label %7, label %8, !dbg !11444

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11445
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !11447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11447
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !11449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11451, !srcloc !11400
  br label %24, !dbg !11452

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11453
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !11454
  %10 = icmp eq i32 %9, 0, !dbg !11454
  br i1 %10, label %21, label %11, !dbg !11456

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !11457
  br i1 %12, label %13, label %21, !dbg !11458

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11459
  %15 = icmp sgt i32 %14, %0, !dbg !11462
  br i1 %15, label %19, label %16, !dbg !11463

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11464
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !11464
  call void @llvm.dbg.value(metadata i32 %18, metadata !11433, metadata !DIExpression()), !dbg !11434
  br label %22, !dbg !11466

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11467
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11467
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11469
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11434
  call void @llvm.dbg.value(metadata i32 %23, metadata !11433, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i32 %23, metadata !11386, metadata !DIExpression()) #23, !dbg !11471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %23, metadata !11394, metadata !DIExpression()) #23, !dbg !11473
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11475, !srcloc !11400
  br label %24, !dbg !11476

24:                                               ; preds = %22, %7
  ret void, !dbg !11476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11481, metadata !DIExpression()), !dbg !11483
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !11484
  %3 = icmp eq i32 %2, 0, !dbg !11484
  br i1 %3, label %16, label %4, !dbg !11485

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !11486
  br i1 %5, label %16, label %6, !dbg !11487

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11488
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11488
  %9 = load i8, i8* %8, align 2, !dbg !11488
  %10 = sext i8 %9 to i32, !dbg !11489
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11490
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !11491
  br i1 %12, label %16, label %13, !dbg !11492

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !11493
  %15 = xor i1 %14, true, !dbg !11494
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11483
  call void @llvm.dbg.value(metadata i1 %17, metadata !11482, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11483
  ret i1 %17, !dbg !11495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11496 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11500, metadata !DIExpression()), !dbg !11502
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11503
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11501, metadata !DIExpression()), !dbg !11502
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !11504
  br i1 %3, label %5, label %4, !dbg !11506

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !11507
  br label %5, !dbg !11509

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11500, metadata !DIExpression()), !dbg !11502
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11510
  ret i32 %6, !dbg !11511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11514, metadata !DIExpression()), !dbg !11516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11517
  %3 = load i8, i8* %2, align 1, !dbg !11517
  call void @llvm.dbg.value(metadata i8 %3, metadata !11515, metadata !DIExpression()), !dbg !11516
  %4 = and i8 %3, 31, !dbg !11518
  %5 = icmp ne i8 %4, 0, !dbg !11519
  ret i1 %5, !dbg !11520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11523, metadata !DIExpression()), !dbg !11524
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11525
  br i1 %2, label %3, label %7, !dbg !11527

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11528, metadata !DIExpression()) #23, !dbg !11531
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11534
  %5 = load i8, i8* %4, align 1, !dbg !11535
  %6 = and i8 %5, 127, !dbg !11535
  store i8 %6, i8* %4, align 1, !dbg !11535
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11536, metadata !DIExpression()) #23, !dbg !11539
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !11543
  br label %7, !dbg !11544

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11545, metadata !DIExpression()) #23, !dbg !11548
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11550
  %9 = load i8, i8* %8, align 1, !dbg !11551
  %10 = or i8 %9, -128, !dbg !11551
  store i8 %10, i8* %8, align 1, !dbg !11551
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11552, metadata !DIExpression()) #23, !dbg !11555
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11559, metadata !DIExpression()) #23, !dbg !11567
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11565, metadata !DIExpression()) #23, !dbg !11567
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11569
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11566, metadata !DIExpression()) #23, !dbg !11567
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11571
  br i1 %12, label %23, label %13, !dbg !11569

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11566, metadata !DIExpression()) #23, !dbg !11567
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11573
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11566, metadata !DIExpression()) #23, !dbg !11567
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !11574
  %17 = icmp sgt i32 %16, 0, !dbg !11577
  br i1 %17, label %18, label %20, !dbg !11578

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11579
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !11581
  br label %25, !dbg !11582

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !11571
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11566, metadata !DIExpression()) #23, !dbg !11567
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11571
  br i1 %22, label %23, label %13, !dbg !11569, !llvm.loop !11583

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11585
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !11586
  br label %25, !dbg !11587

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11588
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11589
  %28 = zext i1 %27 to i32, !dbg !11589
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !11590
  ret void, !dbg !11591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11594, metadata !DIExpression()), !dbg !11595
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !11596
  ret i1 %2, !dbg !11597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !11598 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11600, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11601, metadata !DIExpression()), !dbg !11602
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11603
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !11604
  ret void, !dbg !11605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !11606 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11610, metadata !DIExpression()), !dbg !11611
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !11612
  br i1 %2, label %6, label %3, !dbg !11612

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11613
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11613
  br label %6, !dbg !11612

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11612
  ret %struct._dnode* %7, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11619, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11620, metadata !DIExpression()), !dbg !11623
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11624
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11624
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11621, metadata !DIExpression()), !dbg !11623
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11625
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11626
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11627
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11628
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11629
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11630
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11631
  ret void, !dbg !11632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11633 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11638, metadata !DIExpression()), !dbg !11639
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11640
  br i1 %3, label %6, label %4, !dbg !11641

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !11642
  br label %6, !dbg !11641

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11641
  ret %struct._dnode* %7, !dbg !11643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !11644 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11648, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11649, metadata !DIExpression()), !dbg !11651
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11652
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11652
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11650, metadata !DIExpression()), !dbg !11651
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11653
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11654
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11655
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11656
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11657
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11658
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11663, metadata !DIExpression()), !dbg !11665
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11666
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11673, metadata !DIExpression()) #23, !dbg !11675
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11676
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11677
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11677
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11664, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11678, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %0, metadata !11683, metadata !DIExpression()) #23, !dbg !11684
  %6 = icmp eq i32 %0, 0, !dbg !11687
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11689
  br i1 %6, label %8, label %15, !dbg !11690

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !11691
  br i1 %9, label %15, label %10, !dbg !11693

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !11694
  br i1 %11, label %15, label %12, !dbg !11696

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !11697
  %14 = icmp eq i32 %13, 0, !dbg !11697
  br i1 %14, label %18, label %15, !dbg !11699

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11700
  br i1 %16, label %18, label %17, !dbg !11703

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11704
  br label %18, !dbg !11706

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11689
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11689
  ret void, !dbg !11707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !11708 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11712, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11713, metadata !DIExpression()), !dbg !11715
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !11716
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11714, metadata !DIExpression()), !dbg !11715
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11713, metadata !DIExpression()), !dbg !11715
  ret %struct.k_thread* %3, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11722
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11723
  %4 = xor i1 %3, true, !dbg !11724
  ret i1 %4, !dbg !11725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11728, metadata !DIExpression()), !dbg !11729
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11730
  %3 = load i16, i16* %2, align 2, !dbg !11730
  %4 = icmp ult i16 %3, 128, !dbg !11731
  %5 = zext i1 %4 to i32, !dbg !11731
  ret i32 %5, !dbg !11732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11733 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11739, metadata !DIExpression()), !dbg !11740
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11741
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !11742
  %4 = xor i1 %3, true, !dbg !11743
  ret i1 %4, !dbg !11744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11745 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11751, metadata !DIExpression()), !dbg !11752
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11753
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11753
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11754
  ret i1 %4, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11758, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11759, metadata !DIExpression()), !dbg !11760
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11761
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11761
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !11762
  br i1 %5, label %9, label %6, !dbg !11763

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11764
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !11764
  br label %9, !dbg !11763

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !11763
  ret %struct._dnode* %10, !dbg !11765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !11766 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11770, metadata !DIExpression()), !dbg !11771
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11772
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11772
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11773
  ret i1 %4, !dbg !11774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !11775 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11779, metadata !DIExpression()), !dbg !11782
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11783
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11783
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11780, metadata !DIExpression()), !dbg !11782
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11784
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11784
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11781, metadata !DIExpression()), !dbg !11782
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11785
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11786
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !11787
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !11788
  tail call fastcc void @sys_dnode_init.107(%struct._dnode* noundef %0) #24, !dbg !11789
  ret void, !dbg !11790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.107(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11791 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11793, metadata !DIExpression()), !dbg !11794
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11795
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11796
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11797
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11798
  ret void, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11804, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 128, metadata !11805, metadata !DIExpression()), !dbg !11806
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11807
  %3 = load i8, i8* %2, align 1, !dbg !11807
  %4 = icmp slt i8 %3, 0, !dbg !11808
  ret i1 %4, !dbg !11809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !11810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11814, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i32 %1, metadata !11815, metadata !DIExpression()), !dbg !11816
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !11817
  ret i1 %3, !dbg !11818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !11819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11821, metadata !DIExpression()), !dbg !11822
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !11823
  ret i1 %2, !dbg !11824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !11825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11827, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 %1, metadata !11828, metadata !DIExpression()), !dbg !11829
  %3 = icmp slt i32 %0, %1, !dbg !11830
  ret i1 %3, !dbg !11831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11834, metadata !DIExpression()), !dbg !11838
  call void @llvm.dbg.value(metadata i32 0, metadata !11835, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !11840
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11842, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11842
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !11844
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %3, metadata !11837, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.value(metadata i32 undef, metadata !11835, metadata !DIExpression()), !dbg !11839
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !11850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !11852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11854, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !11835, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.value(metadata i32 undef, metadata !11835, metadata !DIExpression()), !dbg !11839
  ret void, !dbg !11855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11858, metadata !DIExpression()), !dbg !11859
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11860
  br i1 %2, label %24, label %3, !dbg !11862

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !11863
  br i1 %4, label %5, label %24, !dbg !11864

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11545, metadata !DIExpression()) #23, !dbg !11865
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11868
  %7 = load i8, i8* %6, align 1, !dbg !11869
  %8 = or i8 %7, -128, !dbg !11869
  store i8 %8, i8* %6, align 1, !dbg !11869
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11552, metadata !DIExpression()) #23, !dbg !11870
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11559, metadata !DIExpression()) #23, !dbg !11872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11565, metadata !DIExpression()) #23, !dbg !11872
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11874
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11566, metadata !DIExpression()) #23, !dbg !11872
  %10 = icmp eq %struct._dnode* %9, null, !dbg !11875
  br i1 %10, label %21, label %11, !dbg !11874

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11566, metadata !DIExpression()) #23, !dbg !11872
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !11876
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11566, metadata !DIExpression()) #23, !dbg !11872
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !11877
  %15 = icmp sgt i32 %14, 0, !dbg !11878
  br i1 %15, label %16, label %18, !dbg !11879

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11880
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !11881
  br label %23, !dbg !11882

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !11875
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11566, metadata !DIExpression()) #23, !dbg !11872
  %20 = icmp eq %struct._dnode* %19, null, !dbg !11875
  br i1 %20, label %21, label %11, !dbg !11874, !llvm.loop !11883

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11885
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !11886
  br label %23, !dbg !11887

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !11888
  br label %24, !dbg !11889

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !11890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11893, metadata !DIExpression()), !dbg !11894
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !11895
  br i1 %2, label %6, label %3, !dbg !11896

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !11897
  %5 = xor i1 %4, true, !dbg !11896
  br label %6, !dbg !11896

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !11898
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11901, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11902, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !11907
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11909, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !11911
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !11911
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !11907
  call void @llvm.dbg.value(metadata i32 %3, metadata !11904, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.value(metadata i32 undef, metadata !11902, metadata !DIExpression()), !dbg !11906
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !11912
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !11915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !11917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11919, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !11902, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.value(metadata i32 undef, metadata !11902, metadata !DIExpression()), !dbg !11906
  ret void, !dbg !11920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11923, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !11926
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11928, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11928
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !11930
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !11930
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %3, metadata !11924, metadata !DIExpression()), !dbg !11925
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !11931
  br i1 %4, label %5, label %6, !dbg !11933

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !11934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !11937
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11939, !srcloc !11400
  br label %8, !dbg !11940

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.112(%struct.k_thread* noundef %0) #24, !dbg !11941
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !11942
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11943
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !11943
  br label %8, !dbg !11944

8:                                                ; preds = %6, %5
  ret void, !dbg !11944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11947, metadata !DIExpression()), !dbg !11948
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11949
  %3 = load i8, i8* %2, align 1, !dbg !11949
  %4 = and i8 %3, 4, !dbg !11950
  %5 = icmp eq i8 %4, 0, !dbg !11951
  ret i1 %5, !dbg !11952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.112(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11955, metadata !DIExpression()), !dbg !11956
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11957
  %3 = load i8, i8* %2, align 1, !dbg !11958
  %4 = and i8 %3, -5, !dbg !11958
  store i8 %4, i8* %2, align 1, !dbg !11958
  ret void, !dbg !11959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !11960 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !11963, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11962, metadata !DIExpression()), !dbg !11964
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !11965
  br i1 %4, label %5, label %9, !dbg !11967

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !11968
  br i1 %6, label %7, label %9, !dbg !11969

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !11970, metadata !DIExpression()) #23, !dbg !11976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11975, metadata !DIExpression()) #23, !dbg !11976
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !11979
  br label %10, !dbg !11980

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !11981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !11984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11986, !srcloc !11400
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !11987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !11988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11992, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.value(metadata i32 %0, metadata !11994, metadata !DIExpression()), !dbg !11999
  %2 = icmp eq i32 %0, 0, !dbg !12001
  br i1 %2, label %3, label %6, !dbg !12002

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12003, !srcloc !12010
  call void @llvm.dbg.value(metadata i32 %4, metadata !12006, metadata !DIExpression()) #23, !dbg !12011
  %5 = icmp eq i32 %4, 0, !dbg !12012
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !11993
  ret i1 %7, !dbg !12013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12014 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12017
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12016, metadata !DIExpression()), !dbg !12018
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12019
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12020
  ret i1 %3, !dbg !12021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12024, metadata !DIExpression()), !dbg !12026
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %2, metadata !12025, metadata !DIExpression()), !dbg !12026
  ret i32 %2, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12031, metadata !DIExpression()), !dbg !12035
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12036
  call void @llvm.dbg.value(metadata i32 0, metadata !12032, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12038
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12040, !srcloc !11374
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %4, metadata !11371, metadata !DIExpression()) #23, !dbg !12042
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %4, metadata !11365, metadata !DIExpression()) #23, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %4, metadata !12034, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 undef, metadata !12032, metadata !DIExpression()), !dbg !12037
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12043
  br i1 %5, label %6, label %10, !dbg !12047

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11528, metadata !DIExpression()) #23, !dbg !12048
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12051
  %8 = load i8, i8* %7, align 1, !dbg !12052
  %9 = and i8 %8, 127, !dbg !12052
  store i8 %9, i8* %7, align 1, !dbg !12052
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11536, metadata !DIExpression()) #23, !dbg !12053
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12055
  br label %10, !dbg !12056

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12057
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12058
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12059
  %13 = zext i1 %12 to i32, !dbg !12059
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %4, metadata !11386, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %4, metadata !11394, metadata !DIExpression()) #23, !dbg !12063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12065, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12032, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 undef, metadata !12032, metadata !DIExpression()), !dbg !12037
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12066
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12068
  br i1 %15, label %16, label %17, !dbg !12069

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12070
  br label %17, !dbg !12072

17:                                               ; preds = %16, %10
  ret void, !dbg !12073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12074 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12076, metadata !DIExpression()), !dbg !12077
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12078
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12079
  ret i32 %3, !dbg !12080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12083, metadata !DIExpression()), !dbg !12084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12085
  %3 = load i8, i8* %2, align 1, !dbg !12086
  %4 = or i8 %3, 16, !dbg !12086
  store i8 %4, i8* %2, align 1, !dbg !12086
  ret void, !dbg !12087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12088 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12089, !srcloc !11374
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %2, metadata !11371, metadata !DIExpression()) #23, !dbg !12091
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12091
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !12092
  ret void, !dbg !12093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12096, metadata !DIExpression()), !dbg !12097
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !12098
  br i1 %2, label %3, label %5, !dbg !12100

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12101
  br label %6, !dbg !12103

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11394, metadata !DIExpression()) #23, !dbg !12104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12107, !srcloc !11400
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12111, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12114
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12116, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12116
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !12118
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12118
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !12114
  call void @llvm.dbg.value(metadata i32 %3, metadata !12112, metadata !DIExpression()), !dbg !12113
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !12119
  br i1 %4, label %6, label %5, !dbg !12121

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !12122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !12125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12127, !srcloc !11400
  br label %8, !dbg !12128

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !12129
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12130
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12131
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12131
  br label %8, !dbg !12132

8:                                                ; preds = %6, %5
  ret void, !dbg !12132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12135, metadata !DIExpression()), !dbg !12136
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12137
  %3 = load i8, i8* %2, align 1, !dbg !12137
  %4 = and i8 %3, 16, !dbg !12138
  %5 = icmp ne i8 %4, 0, !dbg !12139
  ret i1 %5, !dbg !12140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12143, metadata !DIExpression()), !dbg !12144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12145
  %3 = load i8, i8* %2, align 1, !dbg !12146
  %4 = and i8 %3, -17, !dbg !12146
  store i8 %4, i8* %2, align 1, !dbg !12146
  ret void, !dbg !12147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12148 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12158, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12156, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12157, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.value(metadata i32 0, metadata !12159, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12164
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12166, !srcloc !11374
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12166
  call void @llvm.dbg.value(metadata i32 %5, metadata !11371, metadata !DIExpression()) #23, !dbg !12168
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %5, metadata !11365, metadata !DIExpression()) #23, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %5, metadata !12161, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 undef, metadata !12159, metadata !DIExpression()), !dbg !12163
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %5, metadata !11386, metadata !DIExpression()) #23, !dbg !12172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %5, metadata !11394, metadata !DIExpression()) #23, !dbg !12174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12176, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12159, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 undef, metadata !12159, metadata !DIExpression()), !dbg !12163
  ret void, !dbg !12177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12178 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12182, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12180, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12181, metadata !DIExpression()), !dbg !12183
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !12184
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !12185
  ret void, !dbg !12186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12191, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12192, metadata !DIExpression()), !dbg !12193
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !12194
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !12195
  %3 = icmp eq %union.anon* %1, null, !dbg !12196
  br i1 %3, label %21, label %4, !dbg !12198

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12199
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12201
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12202
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11559, metadata !DIExpression()) #23, !dbg !12203
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11565, metadata !DIExpression()) #23, !dbg !12203
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !12205
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11566, metadata !DIExpression()) #23, !dbg !12203
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12206
  br i1 %8, label %19, label %9, !dbg !12205

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11566, metadata !DIExpression()) #23, !dbg !12203
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12207
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11566, metadata !DIExpression()) #23, !dbg !12203
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !12208
  %13 = icmp sgt i32 %12, 0, !dbg !12209
  br i1 %13, label %14, label %16, !dbg !12210

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12211
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !12212
  br label %21, !dbg !12213

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !12206
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11566, metadata !DIExpression()) #23, !dbg !12203
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12206
  br i1 %18, label %19, label %9, !dbg !12205, !llvm.loop !12214

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12216
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !12217
  br label %21, !dbg !12218

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12220 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12225, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()), !dbg !12226
  %4 = icmp eq i64 %3, -1, !dbg !12227
  br i1 %4, label %6, label %5, !dbg !12229

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.113(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12230
  br label %6, !dbg !12232

6:                                                ; preds = %5, %2
  ret void, !dbg !12233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.113(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12234 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12237, metadata !DIExpression()), !dbg !12238
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12236, metadata !DIExpression()), !dbg !12238
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12239
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12240
  ret void, !dbg !12241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12242 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12244, metadata !DIExpression()), !dbg !12252
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12253
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12253
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12245, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 0, metadata !12246, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12255
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12257, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12255
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.value(metadata i32 undef, metadata !12246, metadata !DIExpression()), !dbg !12254
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12260
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12261
  %7 = load i8, i8* %6, align 1, !dbg !12261
  %8 = and i8 %7, 40, !dbg !12262
  %9 = icmp eq i8 %8, 0, !dbg !12262
  call void @llvm.dbg.value(metadata i1 %9, metadata !12249, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12263
  br i1 %9, label %10, label %17, !dbg !12264

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12265
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12265
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12265
  %14 = icmp eq %union.anon* %13, null, !dbg !12269
  br i1 %14, label %16, label %15, !dbg !12270

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !12271
  br label %16, !dbg !12273

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.112(%struct.k_thread* noundef nonnull %3) #24, !dbg !12274
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !12275
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !12276
  br label %17, !dbg !12277

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12257
  call void @llvm.dbg.value(metadata i32 %18, metadata !11371, metadata !DIExpression()) #23, !dbg !12259
  call void @llvm.dbg.value(metadata i32 %18, metadata !11365, metadata !DIExpression()) #23, !dbg !12255
  call void @llvm.dbg.value(metadata i32 %18, metadata !12248, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()) #23, !dbg !12278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !11394, metadata !DIExpression()) #23, !dbg !12280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12282, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12246, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.value(metadata i32 undef, metadata !12246, metadata !DIExpression()), !dbg !12254
  ret void, !dbg !12283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12286, metadata !DIExpression()), !dbg !12287
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12288
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !12289
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12290
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12291
  ret void, !dbg !12292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12295, metadata !DIExpression()), !dbg !12296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12297
  %3 = load i8, i8* %2, align 1, !dbg !12298
  %4 = and i8 %3, -3, !dbg !12298
  store i8 %4, i8* %2, align 1, !dbg !12298
  ret void, !dbg !12299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12302, metadata !DIExpression()), !dbg !12303
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12304
  br i1 %2, label %3, label %7, !dbg !12306

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11528, metadata !DIExpression()) #23, !dbg !12307
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12310
  %5 = load i8, i8* %4, align 1, !dbg !12311
  %6 = and i8 %5, 127, !dbg !12311
  store i8 %6, i8* %4, align 1, !dbg !12311
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11536, metadata !DIExpression()) #23, !dbg !12312
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12314
  br label %7, !dbg !12315

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12316
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12317
  %10 = zext i1 %9 to i32, !dbg !12317
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !12318
  ret void, !dbg !12319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12322, metadata !DIExpression()), !dbg !12323
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12324
  %3 = load i8, i8* %2, align 1, !dbg !12325
  %4 = or i8 %3, 2, !dbg !12325
  store i8 %4, i8* %2, align 1, !dbg !12325
  ret void, !dbg !12326
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !12327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12329, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.value(metadata i32 0, metadata !12330, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12335
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12337, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12337
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !12339
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12339
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !12335
  call void @llvm.dbg.value(metadata i32 %3, metadata !12332, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()), !dbg !12334
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !12343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12343
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !12345
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12347, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12330, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()), !dbg !12334
  ret void, !dbg !12348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12349 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12355, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 %0, metadata !12353, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12354, metadata !DIExpression()), !dbg !12360
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12361
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12362
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12363
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12364
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12365
  call void @llvm.dbg.value(metadata i32 %6, metadata !12356, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 0, metadata !12357, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12367
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12369, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12371
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12371
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12359, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i32 undef, metadata !12357, metadata !DIExpression()), !dbg !12366
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12372
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12376
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12377
  br i1 %10, label %11, label %12, !dbg !12378

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12379
  br label %12, !dbg !12381

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12369
  call void @llvm.dbg.value(metadata i32 %13, metadata !11371, metadata !DIExpression()) #23, !dbg !12371
  call void @llvm.dbg.value(metadata i32 %13, metadata !11365, metadata !DIExpression()) #23, !dbg !12367
  call void @llvm.dbg.value(metadata i32 %13, metadata !12359, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()) #23, !dbg !12382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12382
  call void @llvm.dbg.value(metadata i32 undef, metadata !11394, metadata !DIExpression()) #23, !dbg !12384
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12386, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12357, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i32 undef, metadata !12357, metadata !DIExpression()), !dbg !12366
  ret i32 %6, !dbg !12387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12388 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12393, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.value(metadata i64 undef, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12392, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12394, metadata !DIExpression()), !dbg !12396
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12397
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12399
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12401, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12403
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12403
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12399
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12404
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !12405
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !11970, metadata !DIExpression()) #23, !dbg !12406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11975, metadata !DIExpression()) #23, !dbg !12406
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !12408
  ret i32 %9, !dbg !12409
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12410 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12414, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12415, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12416, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12421
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12423, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12425
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12425
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12421
  call void @llvm.dbg.value(metadata i32 undef, metadata !12418, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12415, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 undef, metadata !12416, metadata !DIExpression()), !dbg !12420
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !12426
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12415, metadata !DIExpression()), !dbg !12419
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12429
  br i1 %5, label %7, label %6, !dbg !12431

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12432
  br label %7, !dbg !12434

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12423
  call void @llvm.dbg.value(metadata i32 %8, metadata !11371, metadata !DIExpression()) #23, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %8, metadata !11365, metadata !DIExpression()) #23, !dbg !12421
  call void @llvm.dbg.value(metadata i32 %8, metadata !12418, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()) #23, !dbg !12435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12435
  call void @llvm.dbg.value(metadata i32 undef, metadata !11394, metadata !DIExpression()) #23, !dbg !12437
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12439, !srcloc !11400
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12415, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 undef, metadata !12416, metadata !DIExpression()), !dbg !12420
  ret %struct.k_thread* %4, !dbg !12440
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12441 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12443, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12444, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i32 0, metadata !12445, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12450
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12452, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12454
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12454
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12450
  call void @llvm.dbg.value(metadata i32 undef, metadata !12447, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12444, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i32 undef, metadata !12445, metadata !DIExpression()), !dbg !12449
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !12455
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12444, metadata !DIExpression()), !dbg !12448
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12458
  br i1 %5, label %8, label %6, !dbg !12460

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12461
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12463
  br label %8, !dbg !12464

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %9, metadata !11371, metadata !DIExpression()) #23, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %9, metadata !11365, metadata !DIExpression()) #23, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %9, metadata !12447, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()) #23, !dbg !12465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12465
  call void @llvm.dbg.value(metadata i32 undef, metadata !11394, metadata !DIExpression()) #23, !dbg !12467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12469, !srcloc !11400
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12444, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i32 undef, metadata !12445, metadata !DIExpression()), !dbg !12449
  ret %struct.k_thread* %4, !dbg !12470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12473, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12329, metadata !DIExpression()) #23, !dbg !12475
  call void @llvm.dbg.value(metadata i32 0, metadata !12330, metadata !DIExpression()) #23, !dbg !12477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12478
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12480, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !12482
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !12478
  call void @llvm.dbg.value(metadata i32 %3, metadata !12332, metadata !DIExpression()) #23, !dbg !12477
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #23, !dbg !12477
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12483
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !12484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12484
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !12486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12488, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12330, metadata !DIExpression()) #23, !dbg !12477
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #23, !dbg !12477
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12489
  ret void, !dbg !12490
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12493, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata i32 %1, metadata !12494, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata i8 0, metadata !12495, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata i32 0, metadata !12496, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12501
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12503, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12505
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12505
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12501
  call void @llvm.dbg.value(metadata i32 undef, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i8 poison, metadata !12495, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12496, metadata !DIExpression()), !dbg !12500
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12506
  call void @llvm.dbg.value(metadata i1 %6, metadata !12495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12499
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12509

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11528, metadata !DIExpression()) #23, !dbg !12510
  %11 = load i8, i8* %4, align 1, !dbg !12516
  %12 = and i8 %11, 127, !dbg !12516
  store i8 %12, i8* %4, align 1, !dbg !12516
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11536, metadata !DIExpression()) #23, !dbg !12517
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12519
  store i8 %9, i8* %8, align 2, !dbg !12520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11545, metadata !DIExpression()) #23, !dbg !12521
  %13 = load i8, i8* %4, align 1, !dbg !12523
  %14 = or i8 %13, -128, !dbg !12523
  store i8 %14, i8* %4, align 1, !dbg !12523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11552, metadata !DIExpression()) #23, !dbg !12524
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11559, metadata !DIExpression()) #23, !dbg !12526
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11565, metadata !DIExpression()) #23, !dbg !12526
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12528
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11566, metadata !DIExpression()) #23, !dbg !12526
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12529
  br i1 %16, label %26, label %17, !dbg !12528

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11566, metadata !DIExpression()) #23, !dbg !12526
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12530
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11566, metadata !DIExpression()) #23, !dbg !12526
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !12531
  %21 = icmp sgt i32 %20, 0, !dbg !12532
  br i1 %21, label %22, label %23, !dbg !12533

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !12534
  br label %27, !dbg !12535

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !12529
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11566, metadata !DIExpression()) #23, !dbg !12526
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12529
  br i1 %25, label %26, label %17, !dbg !12528, !llvm.loop !12536

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !12538
  br label %27, !dbg !12539

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !12540
  br label %29, !dbg !12541

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12542
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %30, metadata !11371, metadata !DIExpression()) #23, !dbg !12505
  call void @llvm.dbg.value(metadata i32 %30, metadata !11365, metadata !DIExpression()) #23, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %30, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()) #23, !dbg !12544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12544
  call void @llvm.dbg.value(metadata i32 undef, metadata !11394, metadata !DIExpression()) #23, !dbg !12546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !12548, !srcloc !11400
  call void @llvm.dbg.value(metadata i8 poison, metadata !12495, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12496, metadata !DIExpression()), !dbg !12500
  ret i1 %6, !dbg !12549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12554, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 %1, metadata !12555, metadata !DIExpression()), !dbg !12557
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !12558
  call void @llvm.dbg.value(metadata i1 %3, metadata !12556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12557
  br i1 %3, label %4, label %12, !dbg !12559

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12561
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12562
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12562
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12562
  %9 = load i8, i8* %8, align 1, !dbg !12562
  %10 = icmp eq i8 %9, 0, !dbg !12563
  br i1 %10, label %11, label %12, !dbg !12564

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12565
  br label %12, !dbg !12567

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12569 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12571, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12575
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12577, !srcloc !11374
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %2, metadata !11371, metadata !DIExpression()) #23, !dbg !12579
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12579
  call void @llvm.dbg.value(metadata i32 %2, metadata !11365, metadata !DIExpression()) #23, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %2, metadata !12573, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata i32 undef, metadata !12571, metadata !DIExpression()), !dbg !12574
  tail call fastcc void @z_sched_lock() #24, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %2, metadata !11386, metadata !DIExpression()) #23, !dbg !12583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12583
  call void @llvm.dbg.value(metadata i32 %2, metadata !11394, metadata !DIExpression()) #23, !dbg !12585
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12587, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12571, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata i32 undef, metadata !12571, metadata !DIExpression()), !dbg !12574
  ret void, !dbg !12588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12589 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12591
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12591
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12591
  %5 = load i8, i8* %4, align 1, !dbg !12592
  %6 = add i8 %5, -1, !dbg !12592
  store i8 %6, i8* %4, align 1, !dbg !12592
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12593, !srcloc !12595
  ret void, !dbg !12596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12597 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12599, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12603
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12605, !srcloc !11374
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %2, metadata !11371, metadata !DIExpression()) #23, !dbg !12607
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12607
  call void @llvm.dbg.value(metadata i32 %2, metadata !11365, metadata !DIExpression()) #23, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %2, metadata !12601, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12599, metadata !DIExpression()), !dbg !12602
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12608
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12611
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12611
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12611
  %7 = load i8, i8* %6, align 1, !dbg !12612
  %8 = add i8 %7, 1, !dbg !12612
  store i8 %8, i8* %6, align 1, !dbg !12612
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %2, metadata !11386, metadata !DIExpression()) #23, !dbg !12614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %2, metadata !11394, metadata !DIExpression()) #23, !dbg !12616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12618, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 1, metadata !12599, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12599, metadata !DIExpression()), !dbg !12602
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12619
  ret void, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !12621 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12622
  ret %struct.k_thread* %1, !dbg !12623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12624 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12628, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12629, metadata !DIExpression()), !dbg !12633
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12634
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12630, metadata !DIExpression()), !dbg !12633
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12635
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12631, metadata !DIExpression()), !dbg !12633
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !12636
  call void @llvm.dbg.value(metadata i32 %5, metadata !12632, metadata !DIExpression()), !dbg !12633
  %6 = icmp sgt i32 %5, 0, !dbg !12637
  br i1 %6, label %17, label %7, !dbg !12639

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12640
  br i1 %8, label %17, label %9, !dbg !12642

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12643
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12643
  %12 = load i32, i32* %11, align 8, !dbg !12643
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12645
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12645
  %15 = load i32, i32* %14, align 8, !dbg !12645
  %16 = icmp ult i32 %12, %15, !dbg !12646
  br label %17, !dbg !12647

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12648
  ret i1 %18, !dbg !12649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12650 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12667, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12668, metadata !DIExpression()), !dbg !12682
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12683
  %5 = load i32, i32* %4, align 4, !dbg !12684
  %6 = add nsw i32 %5, 1, !dbg !12684
  store i32 %6, i32* %4, align 4, !dbg !12684
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12685
  store i32 %5, i32* %7, align 8, !dbg !12686
  %8 = load i32, i32* %4, align 4, !dbg !12687
  %9 = icmp eq i32 %8, 0, !dbg !12688
  br i1 %9, label %10, label %32, !dbg !12689

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12690
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12690
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12670, metadata !DIExpression()), !dbg !12690
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12690
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12690
  %14 = load i32, i32* %13, align 4, !dbg !12690
  %15 = shl i32 %14, 2, !dbg !12690
  %16 = alloca i8, i32 %15, align 8, !dbg !12690
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12690
  store i8* %16, i8** %17, align 4, !dbg !12690
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12690
  %19 = alloca i8, i32 %14, align 8, !dbg !12690
  store i8* %19, i8** %18, align 4, !dbg !12690
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12690
  store i32 -1, i32* %20, align 4, !dbg !12690
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !12691
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12679, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12669, metadata !DIExpression()), !dbg !12682
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12693
  br i1 %22, label %23, label %24, !dbg !12690

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12693
  br label %32, !dbg !12694

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12669, metadata !DIExpression()), !dbg !12682
  %26 = load i32, i32* %4, align 4, !dbg !12695
  %27 = add nsw i32 %26, 1, !dbg !12695
  store i32 %27, i32* %4, align 4, !dbg !12695
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12697
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12697
  store i32 %26, i32* %29, align 8, !dbg !12698
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !12691
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12679, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12669, metadata !DIExpression()), !dbg !12682
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12693
  br i1 %31, label %23, label %24, !dbg !12690, !llvm.loop !12699

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12701
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12702
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !12703
  ret void, !dbg !12704
}

; Function Attrs: optsize
declare !dbg !12705 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12710 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12713 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12715, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12716, metadata !DIExpression()), !dbg !12717
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12718
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12719
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !12720
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12721
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12721
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12723
  br i1 %7, label %8, label %10, !dbg !12724

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12725
  store i32 0, i32* %9, align 4, !dbg !12727
  br label %10, !dbg !12728

10:                                               ; preds = %8, %2
  ret void, !dbg !12729
}

; Function Attrs: optsize
declare !dbg !12730 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12731 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12735, metadata !DIExpression()), !dbg !12738
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12736, metadata !DIExpression()), !dbg !12738
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12739
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !12740
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12737, metadata !DIExpression()), !dbg !12738
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12736, metadata !DIExpression()), !dbg !12738
  ret %struct.k_thread* %4, !dbg !12741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12742 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12746, metadata !DIExpression()), !dbg !12747
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !12748
  ret %struct.rbnode* %2, !dbg !12749
}

; Function Attrs: optsize
declare !dbg !12750 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !12753 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !12765, metadata !DIExpression()), !dbg !12769
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !12770
  %3 = load i32, i32* %2, align 4, !dbg !12770
  %4 = icmp eq i32 %3, 0, !dbg !12772
  br i1 %4, label %10, label %5, !dbg !12773

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12766, metadata !DIExpression()), !dbg !12769
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !12774, !range !5622
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !12775
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12767, metadata !DIExpression()), !dbg !12769
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !12776
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !12768, metadata !DIExpression()), !dbg !12769
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12766, metadata !DIExpression()), !dbg !12769
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !12769
  ret %struct.k_thread* %11, !dbg !12777
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12778 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12782, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.value(metadata i32 0, metadata !12783, metadata !DIExpression()), !dbg !12785
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !12786
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12784, metadata !DIExpression()), !dbg !12785
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12787
  br i1 %3, label %8, label %4, !dbg !12788

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !12789
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !12791
  call void @llvm.dbg.value(metadata i32 1, metadata !12783, metadata !DIExpression()), !dbg !12785
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !12786
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12784, metadata !DIExpression()), !dbg !12785
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12787
  br i1 %7, label %8, label %4, !dbg !12788, !llvm.loop !12792

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !12785
  ret i32 %9, !dbg !12794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !12795 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12797, metadata !DIExpression()), !dbg !12798
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12799
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !12800
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !12801
  ret %struct.k_thread* %4, !dbg !12802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !12812, metadata !DIExpression()), !dbg !12813
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !12814
  tail call fastcc void @sys_dlist_init.120(%struct._dnode* noundef nonnull %2) #24, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.120(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12817 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12821, metadata !DIExpression()), !dbg !12822
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12823
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12824
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12825
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12826
  ret void, !dbg !12827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !12828 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !12829
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !12830
  ret void, !dbg !12831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12837, metadata !DIExpression()), !dbg !12838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12839
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !12839
  %4 = load i8, i8* %3, align 2, !dbg !12839
  %5 = sext i8 %4 to i32, !dbg !12840
  ret i32 %5, !dbg !12841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12846, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata i32 %1, metadata !12847, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12848, metadata !DIExpression()), !dbg !12849
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !12850
  ret void, !dbg !12851
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !12852 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !12853
  br i1 %1, label %8, label %2, !dbg !12854

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !12855
  br i1 %3, label %8, label %4, !dbg !12856

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12857
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !12858
  %7 = xor i1 %6, true, !dbg !12856
  br label %8, !dbg !12856

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !12860 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !12861, !range !5042
  %2 = icmp eq i8 %1, 0, !dbg !12861
  ret i1 %2, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !12863 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12866
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12868, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !12870
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12870
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !12866
  call void @llvm.dbg.value(metadata i32 undef, metadata !12865, metadata !DIExpression()), !dbg !12871
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12872
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11528, metadata !DIExpression()) #23, !dbg !12875
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !12877
  %4 = load i8, i8* %3, align 1, !dbg !12878
  %5 = and i8 %4, 127, !dbg !12878
  store i8 %5, i8* %3, align 1, !dbg !12878
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11536, metadata !DIExpression()) #23, !dbg !12879
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !12881
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12882
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11545, metadata !DIExpression()) #23, !dbg !12883
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !12885
  %8 = load i8, i8* %7, align 1, !dbg !12886
  %9 = or i8 %8, -128, !dbg !12886
  store i8 %9, i8* %7, align 1, !dbg !12886
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11552, metadata !DIExpression()) #23, !dbg !12887
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11559, metadata !DIExpression()) #23, !dbg !12889
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11565, metadata !DIExpression()) #23, !dbg !12889
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12891
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11566, metadata !DIExpression()) #23, !dbg !12889
  %11 = icmp eq %struct._dnode* %10, null, !dbg !12892
  br i1 %11, label %22, label %12, !dbg !12891

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11566, metadata !DIExpression()) #23, !dbg !12889
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !12893
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11566, metadata !DIExpression()) #23, !dbg !12889
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !12894
  %16 = icmp sgt i32 %15, 0, !dbg !12895
  br i1 %16, label %17, label %19, !dbg !12896

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !12897
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !12898
  br label %24, !dbg !12899

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !12892
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11566, metadata !DIExpression()) #23, !dbg !12889
  %21 = icmp eq %struct._dnode* %20, null, !dbg !12892
  br i1 %21, label %22, label %12, !dbg !12891, !llvm.loop !12900

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !12902
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !12903
  br label %24, !dbg !12904

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %25, metadata !11371, metadata !DIExpression()) #23, !dbg !12870
  call void @llvm.dbg.value(metadata i32 %25, metadata !11365, metadata !DIExpression()) #23, !dbg !12866
  call void @llvm.dbg.value(metadata i32 %25, metadata !12865, metadata !DIExpression()), !dbg !12871
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !12905
  call void @llvm.dbg.value(metadata i32 undef, metadata !11970, metadata !DIExpression()) #23, !dbg !12906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11975, metadata !DIExpression()) #23, !dbg !12906
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !12908
  ret void, !dbg !12909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !12910 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !12914, metadata !DIExpression()), !dbg !12917
  %3 = icmp eq i64 %2, -1, !dbg !12918
  br i1 %3, label %4, label %6, !dbg !12920

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12921
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !12923
  br label %11, !dbg !12924

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !12915, metadata !DIExpression()), !dbg !12917
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !12925
  %8 = sext i32 %7 to i64, !dbg !12925
  call void @llvm.dbg.value(metadata i64 %8, metadata !12915, metadata !DIExpression()), !dbg !12917
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !12926
  %10 = trunc i64 %9 to i32, !dbg !12926
  call void @llvm.dbg.value(metadata i32 %10, metadata !12916, metadata !DIExpression()), !dbg !12917
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !12917
  ret i32 %12, !dbg !12927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12932, metadata !DIExpression()), !dbg !12933
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12934, !srcloc !12936
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !12937
  ret void, !dbg !12938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !12939 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12943, metadata !DIExpression()), !dbg !12947
  %2 = icmp eq i64 %0, 0, !dbg !12948
  br i1 %2, label %3, label %4, !dbg !12950

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !12951
  br label %29, !dbg !12953

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !12945, metadata !DIExpression()), !dbg !12947
  %5 = icmp sgt i64 %0, -3, !dbg !12954
  br i1 %5, label %6, label %10, !dbg !12956

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !12957
  %8 = trunc i64 %0 to i32, !dbg !12959
  %9 = add i32 %7, %8, !dbg !12959
  call void @llvm.dbg.value(metadata i32 %9, metadata !12944, metadata !DIExpression()), !dbg !12947
  br label %13, !dbg !12960

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !12961
  %12 = sub i32 -2, %11, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %12, metadata !12944, metadata !DIExpression()), !dbg !12947
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !12963
  call void @llvm.dbg.value(metadata i32 %14, metadata !12944, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !12964
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12966, !srcloc !11374
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !12966
  call void @llvm.dbg.value(metadata i32 %16, metadata !11371, metadata !DIExpression()) #23, !dbg !12968
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !12968
  call void @llvm.dbg.value(metadata i32 %16, metadata !11365, metadata !DIExpression()) #23, !dbg !12964
  call void @llvm.dbg.value(metadata i32 %16, metadata !12946, metadata !DIExpression()), !dbg !12947
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12969
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !12970
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !12971
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12972
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !12973
  tail call fastcc void @z_add_thread_timeout.113(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !12973
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12974
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %16, metadata !11970, metadata !DIExpression()) #23, !dbg !12976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11975, metadata !DIExpression()) #23, !dbg !12976
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !12978
  %22 = zext i32 %14 to i64, !dbg !12979
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !12980
  %24 = zext i32 %23 to i64, !dbg !12980
  %25 = sub nsw i64 %22, %24, !dbg !12981
  call void @llvm.dbg.value(metadata i64 %25, metadata !12943, metadata !DIExpression()), !dbg !12947
  %26 = icmp sgt i64 %25, 0, !dbg !12982
  %27 = select i1 %26, i64 %25, i64 0, !dbg !12982
  %28 = trunc i64 %27 to i32, !dbg !12982
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !12947
  ret i32 %30, !dbg !12983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !12984 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12986, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.value(metadata i64 %0, metadata !11406, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i32 10000, metadata !11409, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i32 1000, metadata !11410, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i8 1, metadata !11411, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i1 false, metadata !11412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12988
  call void @llvm.dbg.value(metadata i1 false, metadata !11413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12988
  call void @llvm.dbg.value(metadata i8 0, metadata !11414, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i1 false, metadata !11415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12988
  call void @llvm.dbg.value(metadata i1 true, metadata !11416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12988
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i64 %0, metadata !11406, metadata !DIExpression()), !dbg !12988
  %2 = udiv i64 %0, 10, !dbg !12990
  ret i64 %2, !dbg !12994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !12995 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12996, !srcloc !12998
  tail call void @z_impl_k_yield() #24, !dbg !12999
  ret void, !dbg !13000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13005, metadata !DIExpression()), !dbg !13007
  %2 = sext i32 %0 to i64, !dbg !13008
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !13009
  call void @llvm.dbg.value(metadata i64 %3, metadata !13006, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13007
  %4 = shl i64 %3, 32, !dbg !13010
  %5 = ashr exact i64 %4, 32, !dbg !13010
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !13011
  call void @llvm.dbg.value(metadata i32 %6, metadata !13006, metadata !DIExpression()), !dbg !13007
  %7 = sext i32 %6 to i64, !dbg !13012
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !13013
  %9 = trunc i64 %8 to i32, !dbg !13013
  ret i32 %9, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !13015 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13017, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.value(metadata i64 %0, metadata !11406, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11409, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i32 10000, metadata !11410, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i8 1, metadata !11411, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i1 false, metadata !11412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13019
  call void @llvm.dbg.value(metadata i1 true, metadata !11413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13019
  call void @llvm.dbg.value(metadata i8 0, metadata !11414, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i1 false, metadata !11415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13019
  call void @llvm.dbg.value(metadata i1 true, metadata !11416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13019
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !13019
  %2 = add i64 %0, 99, !dbg !13021
  call void @llvm.dbg.value(metadata i64 %2, metadata !11406, metadata !DIExpression()), !dbg !13019
  %3 = udiv i64 %2, 100, !dbg !13022
  ret i64 %3, !dbg !13023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !13024 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13026, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata i64 %0, metadata !11406, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 10000, metadata !11409, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11410, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i8 1, metadata !11411, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i1 false, metadata !11412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13028
  call void @llvm.dbg.value(metadata i1 false, metadata !11413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13028
  call void @llvm.dbg.value(metadata i8 0, metadata !11414, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i1 true, metadata !11415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13028
  call void @llvm.dbg.value(metadata i1 false, metadata !11416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13028
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i64 0, metadata !11417, metadata !DIExpression()), !dbg !13028
  %2 = mul i64 %0, 100, !dbg !13030
  ret i64 %2, !dbg !13032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13035, metadata !DIExpression()), !dbg !13036
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !13037
  br i1 %2, label %14, label %3, !dbg !13039

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13040
  %5 = icmp slt i32 %4, 0, !dbg !13042
  br i1 %5, label %6, label %10, !dbg !13043

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13044
  %8 = load i8, i8* %7, align 1, !dbg !13044
  %9 = icmp eq i8 %8, 16, !dbg !13047
  br i1 %9, label %10, label %14, !dbg !13048

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13049
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13050
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13051, !srcloc !12010
  call void @llvm.dbg.value(metadata i32 %11, metadata !12006, metadata !DIExpression()) #23, !dbg !13055
  %12 = icmp eq i32 %11, 0, !dbg !13056
  br i1 %12, label %13, label %14, !dbg !13057

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13058
  br label %14, !dbg !13060

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13064, metadata !DIExpression()), !dbg !13065
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13066
  %3 = load i8, i8* %2, align 1, !dbg !13066
  %4 = and i8 %3, 2, !dbg !13067
  %5 = icmp ne i8 %4, 0, !dbg !13068
  ret i1 %5, !dbg !13069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13070 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13075
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13074, metadata !DIExpression()), !dbg !13076
  ret %struct.k_thread* %1, !dbg !13077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13078 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13079, !srcloc !12010
  call void @llvm.dbg.value(metadata i32 %1, metadata !12006, metadata !DIExpression()) #23, !dbg !13082
  %2 = icmp eq i32 %1, 0, !dbg !13083
  br i1 %2, label %3, label %8, !dbg !13084

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13085
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !13086
  %6 = icmp ne i32 %5, 0, !dbg !13084
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13090, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !13093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13095, !srcloc !11374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()) #23, !dbg !13097
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !13097
  call void @llvm.dbg.value(metadata i32 %3, metadata !11365, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 %3, metadata !13091, metadata !DIExpression()), !dbg !13092
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13098
  %5 = load i8, i8* %4, align 4, !dbg !13098
  %6 = and i8 %5, 1, !dbg !13100
  %7 = icmp eq i8 %6, 0, !dbg !13101
  br i1 %7, label %9, label %8, !dbg !13102

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !13103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !13103
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !13106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13108, !srcloc !11400
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13109, !srcloc !13111
  br label %24, !dbg !13112

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13113
  %11 = load i8, i8* %10, align 1, !dbg !13113
  %12 = and i8 %11, 8, !dbg !13115
  %13 = icmp eq i8 %12, 0, !dbg !13116
  br i1 %13, label %15, label %14, !dbg !13117

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !13121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13123, !srcloc !11400
  br label %24, !dbg !13124

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !13125
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13126
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13128
  br i1 %17, label %18, label %23, !dbg !13129

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13130, !srcloc !12010
  call void @llvm.dbg.value(metadata i32 %19, metadata !12006, metadata !DIExpression()) #23, !dbg !13133
  %20 = icmp eq i32 %19, 0, !dbg !13134
  br i1 %20, label %21, label %23, !dbg !13135

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !11970, metadata !DIExpression()) #23, !dbg !13136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11975, metadata !DIExpression()) #23, !dbg !13136
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13139
  br label %23, !dbg !13140

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11386, metadata !DIExpression()) #23, !dbg !13141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !13141
  call void @llvm.dbg.value(metadata i32 %3, metadata !11394, metadata !DIExpression()) #23, !dbg !13143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13145, !srcloc !11400
  br label %24, !dbg !13146

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13149, metadata !DIExpression()), !dbg !13150
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13151
  %3 = load i8, i8* %2, align 1, !dbg !13151
  %4 = and i8 %3, 8, !dbg !13153
  %5 = icmp eq i8 %4, 0, !dbg !13154
  br i1 %5, label %6, label %20, !dbg !13155

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13156
  %8 = or i8 %7, 8, !dbg !13156
  store i8 %8, i8* %2, align 1, !dbg !13156
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !13158
  br i1 %9, label %10, label %12, !dbg !13160

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11528, metadata !DIExpression()) #23, !dbg !13161
  %11 = and i8 %8, 95, !dbg !13164
  store i8 %11, i8* %2, align 1, !dbg !13164
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11536, metadata !DIExpression()) #23, !dbg !13165
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !13167
  br label %12, !dbg !13168

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13169
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13169
  %15 = icmp eq %union.anon* %14, null, !dbg !13171
  br i1 %15, label %17, label %16, !dbg !13172

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13173
  br label %17, !dbg !13175

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13176
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13177
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !13178
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13179
  br label %20, !dbg !13180

20:                                               ; preds = %17, %1
  ret void, !dbg !13181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13182 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13186, metadata !DIExpression()), !dbg !13188
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13189
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13187, metadata !DIExpression()), !dbg !13188
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13190
  br i1 %3, label %10, label %4, !dbg !13191

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13192
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13194
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13195, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i32 0, metadata !13200, metadata !DIExpression()), !dbg !13201
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13203
  store i32 0, i32* %7, align 4, !dbg !13204
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13205
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13189
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13187, metadata !DIExpression()), !dbg !13188
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13190
  br i1 %9, label %10, label %4, !dbg !13191, !llvm.loop !13206

10:                                               ; preds = %4, %1
  ret void, !dbg !13208
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13209 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13214, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13213, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !13218
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13220, !srcloc !11374
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13220
  call void @llvm.dbg.value(metadata i32 %4, metadata !11371, metadata !DIExpression()) #23, !dbg !13222
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !13222
  call void @llvm.dbg.value(metadata i32 %4, metadata !11365, metadata !DIExpression()) #23, !dbg !13218
  call void @llvm.dbg.value(metadata i32 %4, metadata !13215, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i32 0, metadata !13216, metadata !DIExpression()), !dbg !13217
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13223
  %6 = load i8, i8* %5, align 1, !dbg !13223
  %7 = and i8 %6, 8, !dbg !13225
  %8 = icmp eq i8 %7, 0, !dbg !13226
  br i1 %8, label %9, label %24, !dbg !13227

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13214, metadata !DIExpression()), !dbg !13217
  %11 = icmp eq i64 %10, 0, !dbg !13228
  br i1 %11, label %24, label %12, !dbg !13230

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13231
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13233
  br i1 %14, label %24, label %15, !dbg !13234

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13235
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13235
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13236
  %19 = icmp eq %union.anon* %17, %18, !dbg !13237
  br i1 %19, label %24, label %20, !dbg !13238

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13239
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !13241
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13242
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !13243
  call void @llvm.dbg.value(metadata i32 %4, metadata !11970, metadata !DIExpression()) #23, !dbg !13244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11975, metadata !DIExpression()) #23, !dbg !13244
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !13246
  call void @llvm.dbg.value(metadata i32 %23, metadata !13216, metadata !DIExpression()), !dbg !13217
  br label %26, !dbg !13247

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13248
  call void @llvm.dbg.value(metadata i32 %25, metadata !13216, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i32 %4, metadata !11386, metadata !DIExpression()) #23, !dbg !13249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !13249
  call void @llvm.dbg.value(metadata i32 %4, metadata !11394, metadata !DIExpression()) #23, !dbg !13251
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13253, !srcloc !11400
  br label %26, !dbg !13254

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13217
  ret i32 %27, !dbg !13255
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13256 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13260, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 %1, metadata !13261, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i8* %2, metadata !13262, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i8 0, metadata !13264, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 0, metadata !13265, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11359, metadata !DIExpression()) #23, !dbg !13270
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13272, !srcloc !11374
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !13274
  call void @llvm.dbg.value(metadata i32 undef, metadata !11372, metadata !DIExpression()) #23, !dbg !13274
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #23, !dbg !13270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13267, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i8 poison, metadata !13264, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 undef, metadata !13265, metadata !DIExpression()), !dbg !13269
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !13275
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13263, metadata !DIExpression()), !dbg !13268
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13278
  br i1 %7, label %12, label %8, !dbg !13280

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13281, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.value(metadata i32 %1, metadata !13287, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.value(metadata i8* %2, metadata !13288, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13195, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i32 %1, metadata !13200, metadata !DIExpression()), !dbg !13292
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13294
  store i32 %1, i32* %9, align 4, !dbg !13295
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13296
  store i8* %2, i8** %10, align 4, !dbg !13297
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13298
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13299
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !13300
  call void @llvm.dbg.value(metadata i8 1, metadata !13264, metadata !DIExpression()), !dbg !13268
  br label %12, !dbg !13301

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13272
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13272
  call void @llvm.dbg.value(metadata i32 %14, metadata !11371, metadata !DIExpression()) #23, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %14, metadata !11365, metadata !DIExpression()) #23, !dbg !13270
  call void @llvm.dbg.value(metadata i32 %14, metadata !13267, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i8 poison, metadata !13264, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()) #23, !dbg !13302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11391, metadata !DIExpression()) #23, !dbg !13302
  call void @llvm.dbg.value(metadata i32 undef, metadata !11394, metadata !DIExpression()) #23, !dbg !13304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13306, !srcloc !11400
  call void @llvm.dbg.value(metadata i32 undef, metadata !13265, metadata !DIExpression()), !dbg !13269
  ret i1 %13, !dbg !13307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13308 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i64 undef, metadata !13316, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13313, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13315, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i8** %4, metadata !13317, metadata !DIExpression()), !dbg !13319
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %6, metadata !13318, metadata !DIExpression()), !dbg !13319
  %7 = icmp eq i8** %4, null, !dbg !13321
  br i1 %7, label %12, label %8, !dbg !13323

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13324
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13326
  %11 = load i8*, i8** %10, align 4, !dbg !13326
  store i8* %11, i8** %4, align 4, !dbg !13327
  br label %12, !dbg !13328

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13330 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !13332
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !13333
  ret void, !dbg !13334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13335 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13345, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13343, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13344, metadata !DIExpression()), !dbg !13362
  %5 = icmp eq i64 %4, -1, !dbg !13363
  br i1 %5, label %55, label %6, !dbg !13365

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13366
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13367
  call void @llvm.dbg.value(metadata i32 0, metadata !13346, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13376
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13378, !srcloc !13384
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %9, metadata !13381, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %9, metadata !13375, metadata !DIExpression()) #23, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %9, metadata !13352, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()), !dbg !13368
  %10 = icmp slt i64 %4, -1, !dbg !13386
  br i1 %10, label %11, label %17, !dbg !13387

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13388
  %13 = add i64 %4, %12, !dbg !13389
  %14 = sub i64 -2, %13, !dbg !13389
  call void @llvm.dbg.value(metadata i64 %14, metadata !13356, metadata !DIExpression()), !dbg !13390
  %15 = icmp sgt i64 %14, 1, !dbg !13391
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13391
  br label %22, !dbg !13392

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13393
  %19 = tail call fastcc i32 @elapsed.131() #24, !dbg !13395
  %20 = sext i32 %19 to i64, !dbg !13395
  %21 = add nsw i64 %18, %20, !dbg !13396
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13397
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13398
  store i64 %23, i64* %24, align 8, !dbg !13399
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !13400
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13353, metadata !DIExpression()), !dbg !13402
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13403
  br i1 %26, label %42, label %27, !dbg !13403

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13404
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13353, metadata !DIExpression()), !dbg !13402
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13408
  %31 = load i64, i64* %30, align 8, !dbg !13408
  %32 = icmp slt i64 %28, %31, !dbg !13409
  br i1 %32, label %33, label %38, !dbg !13410

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13408
  %35 = sub nsw i64 %31, %28, !dbg !13411
  store i64 %35, i64* %34, align 8, !dbg !13411
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13413
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13414
  tail call fastcc void @sys_dlist_insert.132(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !13415
  br label %44, !dbg !13416

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13417
  store i64 %39, i64* %24, align 8, !dbg !13417
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !13418
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13353, metadata !DIExpression()), !dbg !13402
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13403
  br i1 %41, label %42, label %27, !dbg !13403, !llvm.loop !13419

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13421
  tail call fastcc void @sys_dlist_append.133(%struct._dnode* noundef %43) #24, !dbg !13424
  br label %44, !dbg !13425

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !13426
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13427
  br i1 %46, label %47, label %54, !dbg !13428

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !13429
  call void @llvm.dbg.value(metadata i32 %48, metadata !13359, metadata !DIExpression()), !dbg !13430
  %49 = icmp ne i32 %48, 0, !dbg !13431
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13433
  br i1 %52, label %54, label %53, !dbg !13433

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !13434
  br label %54, !dbg !13436

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13437, metadata !DIExpression()) #23, !dbg !13443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13443
  call void @llvm.dbg.value(metadata i32 %9, metadata !13445, metadata !DIExpression()) #23, !dbg !13448
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13450, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()), !dbg !13368
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.131() unnamed_addr #1 !dbg !13453 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13456
  %2 = icmp eq i32 %1, 0, !dbg !13457
  br i1 %2, label %3, label %5, !dbg !13456

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !13458
  br label %5, !dbg !13456

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13456
  ret i32 %6, !dbg !13459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !13460 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.136() #24, !dbg !13466
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13464, metadata !DIExpression()), !dbg !13467
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13468
  ret %struct._timeout* %2, !dbg !13469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.132(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13474, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13475, metadata !DIExpression()), !dbg !13478
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13479
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13479
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13476, metadata !DIExpression()), !dbg !13478
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13480
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13481
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13482
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13483
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13484
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13485
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13486
  ret void, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13492, metadata !DIExpression()), !dbg !13494
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13495
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.134(%struct._dnode* noundef %2) #24, !dbg !13496
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13493, metadata !DIExpression()), !dbg !13494
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13497
  ret %struct._timeout* %4, !dbg !13498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.133(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13499 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13504, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13505, metadata !DIExpression()), !dbg !13507
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13508
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13506, metadata !DIExpression()), !dbg !13507
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13509
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13510
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13511
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13512
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13513
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13514
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13515
  ret void, !dbg !13516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13517 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !13522
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13519, metadata !DIExpression()), !dbg !13523
  %2 = tail call fastcc i32 @elapsed.131() #24, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %2, metadata !13520, metadata !DIExpression()), !dbg !13523
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13525
  br i1 %3, label %14, label %4, !dbg !13527

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13528
  %6 = load i64, i64* %5, align 8, !dbg !13528
  %7 = sext i32 %2 to i64, !dbg !13529
  %8 = sub nsw i64 %6, %7, !dbg !13530
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13531
  br i1 %9, label %14, label %10, !dbg !13532

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13533
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13533
  %13 = trunc i64 %12 to i32, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %13, metadata !13521, metadata !DIExpression()), !dbg !13523
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13535
  call void @llvm.dbg.value(metadata i32 %15, metadata !13521, metadata !DIExpression()), !dbg !13523
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13536
  %17 = icmp ne i32 %16, 0, !dbg !13538
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13539
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13539
  call void @llvm.dbg.value(metadata i32 %20, metadata !13521, metadata !DIExpression()), !dbg !13523
  ret i32 %20, !dbg !13540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.134(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13541 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13545, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13546, metadata !DIExpression()), !dbg !13547
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13548
  br i1 %2, label %5, label %3, !dbg !13549

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.135(%struct._dnode* noundef nonnull %0) #24, !dbg !13550
  br label %5, !dbg !13549

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13549
  ret %struct._dnode* %6, !dbg !13551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.135(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13552 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13554, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13555, metadata !DIExpression()), !dbg !13556
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13557
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13558
  br i1 %3, label %7, label %4, !dbg !13559

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13560
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13560
  br label %7, !dbg !13559

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13559
  ret %struct._dnode* %8, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.136() unnamed_addr #5 !dbg !13562 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13566, metadata !DIExpression()), !dbg !13567
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.137() #24, !dbg !13568
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13568
  ret %struct._dnode* %3, !dbg !13569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.137() unnamed_addr #5 !dbg !13570 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13574, metadata !DIExpression()), !dbg !13575
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13576
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13577
  ret i1 %2, !dbg !13578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13579 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13583, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i32 -22, metadata !13584, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i32 0, metadata !13585, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13590
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13592, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !13594
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13594
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !13590
  call void @llvm.dbg.value(metadata i32 undef, metadata !13587, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 -22, metadata !13584, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i32 undef, metadata !13585, metadata !DIExpression()), !dbg !13589
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13584, metadata !DIExpression()), !dbg !13588
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.140(%struct._dnode* noundef %3) #24, !dbg !13595
  br i1 %4, label %5, label %6, !dbg !13599

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !13600
  call void @llvm.dbg.value(metadata i32 0, metadata !13584, metadata !DIExpression()), !dbg !13588
  br label %6, !dbg !13602

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13588
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %8, metadata !13381, metadata !DIExpression()) #23, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %8, metadata !13375, metadata !DIExpression()) #23, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %8, metadata !13587, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 %7, metadata !13584, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i32 undef, metadata !13437, metadata !DIExpression()) #23, !dbg !13603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13603
  call void @llvm.dbg.value(metadata i32 undef, metadata !13445, metadata !DIExpression()) #23, !dbg !13605
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13607, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13585, metadata !DIExpression()), !dbg !13589
  ret i32 %7, !dbg !13608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.140(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13609 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13615, metadata !DIExpression()), !dbg !13616
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13617
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13617
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13618
  ret i1 %4, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !13620 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13622, metadata !DIExpression()), !dbg !13623
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !13624
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13626
  br i1 %3, label %10, label %4, !dbg !13627

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13628
  %6 = load i64, i64* %5, align 8, !dbg !13628
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13630
  %8 = load i64, i64* %7, align 8, !dbg !13631
  %9 = add nsw i64 %8, %6, !dbg !13631
  store i64 %9, i64* %7, align 8, !dbg !13631
  br label %10, !dbg !13632

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13633
  tail call fastcc void @sys_dlist_remove.141(%struct._dnode* noundef %11) #24, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.141(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !13636 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13640, metadata !DIExpression()), !dbg !13643
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13644
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13644
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13641, metadata !DIExpression()), !dbg !13643
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13645
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13645
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13642, metadata !DIExpression()), !dbg !13643
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13646
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13647
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13648
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13649
  tail call fastcc void @sys_dnode_init.142(%struct._dnode* noundef %0) #24, !dbg !13650
  ret void, !dbg !13651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.142(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13652 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13654, metadata !DIExpression()), !dbg !13655
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13656
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13657
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13658
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13659
  ret void, !dbg !13660
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13661 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13667, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata i64 0, metadata !13668, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata i32 0, metadata !13669, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13674
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13676, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !13674
  call void @llvm.dbg.value(metadata i32 %3, metadata !13671, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.value(metadata i64 0, metadata !13668, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata i32 undef, metadata !13669, metadata !DIExpression()), !dbg !13673
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !13679
  call void @llvm.dbg.value(metadata i64 %4, metadata !13668, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata i32 %3, metadata !13437, metadata !DIExpression()) #23, !dbg !13682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %3, metadata !13445, metadata !DIExpression()) #23, !dbg !13684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13686, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13669, metadata !DIExpression()), !dbg !13673
  ret i64 %4, !dbg !13687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13688 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13690, metadata !DIExpression()), !dbg !13694
  call void @llvm.dbg.value(metadata i64 0, metadata !13691, metadata !DIExpression()), !dbg !13694
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.143(%struct._timeout* noundef %0) #24, !dbg !13695
  br i1 %2, label %21, label %3, !dbg !13697

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !13698
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13692, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i64 0, metadata !13691, metadata !DIExpression()), !dbg !13694
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13700
  br i1 %5, label %16, label %6, !dbg !13702

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13692, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i64 %8, metadata !13691, metadata !DIExpression()), !dbg !13694
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13703
  %10 = load i64, i64* %9, align 8, !dbg !13703
  %11 = add nsw i64 %10, %8, !dbg !13705
  call void @llvm.dbg.value(metadata i64 %11, metadata !13691, metadata !DIExpression()), !dbg !13694
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13706
  br i1 %12, label %16, label %13, !dbg !13708

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !13709
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13692, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata i64 %11, metadata !13691, metadata !DIExpression()), !dbg !13694
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13700
  br i1 %15, label %16, label %6, !dbg !13702, !llvm.loop !13710

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13694
  call void @llvm.dbg.value(metadata i64 %17, metadata !13691, metadata !DIExpression()), !dbg !13694
  %18 = tail call fastcc i32 @elapsed.131() #24, !dbg !13712
  %19 = sext i32 %18 to i64, !dbg !13712
  %20 = sub nsw i64 %17, %19, !dbg !13713
  br label %21, !dbg !13714

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13694
  ret i64 %22, !dbg !13715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.143(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13716 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13720, metadata !DIExpression()), !dbg !13721
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13722
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.140(%struct._dnode* noundef %2) #24, !dbg !13723
  %4 = xor i1 %3, true, !dbg !13724
  ret i1 %4, !dbg !13725
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13726 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13728, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.value(metadata i64 0, metadata !13729, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.value(metadata i32 0, metadata !13730, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13735
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13737, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !13739
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13739
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %3, metadata !13732, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.value(metadata i64 0, metadata !13729, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()), !dbg !13734
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13740
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !13743
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13729, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13733
  call void @llvm.dbg.value(metadata i32 %3, metadata !13437, metadata !DIExpression()) #23, !dbg !13744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13744
  call void @llvm.dbg.value(metadata i32 %3, metadata !13445, metadata !DIExpression()) #23, !dbg !13746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13748, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()), !dbg !13734
  %6 = add i64 %5, %4, !dbg !13749
  ret i64 %6, !dbg !13750
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13751 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13753, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.value(metadata i32 0, metadata !13754, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13759
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13761, !srcloc !13384
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13761
  call void @llvm.dbg.value(metadata i32 %2, metadata !13381, metadata !DIExpression()) #23, !dbg !13763
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13763
  call void @llvm.dbg.value(metadata i32 %2, metadata !13375, metadata !DIExpression()) #23, !dbg !13759
  call void @llvm.dbg.value(metadata i32 %2, metadata !13756, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata i32 -1, metadata !13753, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()), !dbg !13758
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %3, metadata !13753, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.value(metadata i32 %2, metadata !13437, metadata !DIExpression()) #23, !dbg !13767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13767
  call void @llvm.dbg.value(metadata i32 %2, metadata !13445, metadata !DIExpression()) #23, !dbg !13769
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13771, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()), !dbg !13758
  ret i32 %3, !dbg !13772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13775, metadata !DIExpression()), !dbg !13785
  call void @llvm.dbg.value(metadata i1 %1, metadata !13776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13785
  call void @llvm.dbg.value(metadata i32 0, metadata !13777, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13787
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13789, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !13787
  call void @llvm.dbg.value(metadata i32 undef, metadata !13779, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !13777, metadata !DIExpression()), !dbg !13786
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !13792
  call void @llvm.dbg.value(metadata i32 %4, metadata !13780, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i1 undef, metadata !13783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13793
  %5 = icmp slt i32 %4, 2, !dbg !13794
  call void @llvm.dbg.value(metadata i1 %5, metadata !13784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13793
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !13795
  call void @llvm.dbg.value(metadata i1 %6, metadata !13783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13793
  br i1 %7, label %11, label %8, !dbg !13795

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !13797
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !13797
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !13799
  br label %11, !dbg !13800

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %12, metadata !13381, metadata !DIExpression()) #23, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %12, metadata !13375, metadata !DIExpression()) #23, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %12, metadata !13779, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !13437, metadata !DIExpression()) #23, !dbg !13801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13801
  call void @llvm.dbg.value(metadata i32 undef, metadata !13445, metadata !DIExpression()) #23, !dbg !13803
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13805, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 1, metadata !13777, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !13777, metadata !DIExpression()), !dbg !13786
  ret void, !dbg !13806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !13807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13811, metadata !DIExpression()), !dbg !13816
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !13817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13818
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13820, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !13822
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13822
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !13818
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()), !dbg !13816
  store i32 %0, i32* @announce_remaining, align 4, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()), !dbg !13816
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !13823
  %4 = icmp eq %struct._timeout* %3, null, !dbg !13824
  br i1 %4, label %28, label %5, !dbg !13825

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !13826
  %10 = load i64, i64* %9, align 8, !dbg !13826
  %11 = sext i32 %8 to i64, !dbg !13827
  %12 = icmp sgt i64 %10, %11, !dbg !13828
  br i1 %12, label %26, label %13, !dbg !13829

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !13816
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !13813, metadata !DIExpression()), !dbg !13830
  %15 = trunc i64 %10 to i32, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %15, metadata !13815, metadata !DIExpression()), !dbg !13830
  %16 = sext i32 %15 to i64, !dbg !13832
  %17 = load i64, i64* @curr_tick, align 8, !dbg !13833
  %18 = add i64 %17, %16, !dbg !13833
  store i64 %18, i64* @curr_tick, align 8, !dbg !13833
  store i64 0, i64* %9, align 8, !dbg !13834
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %14, metadata !13437, metadata !DIExpression()) #23, !dbg !13836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13836
  call void @llvm.dbg.value(metadata i32 %14, metadata !13445, metadata !DIExpression()) #23, !dbg !13838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13840, !srcloc !13451
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !13841
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !13841
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !13842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13843
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13845, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !13843
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()), !dbg !13816
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !13848
  %23 = sub nsw i32 %22, %15, !dbg !13848
  store i32 %23, i32* @announce_remaining, align 4, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()), !dbg !13816
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !13823
  %25 = icmp eq %struct._timeout* %24, null, !dbg !13824
  br i1 %25, label %28, label %5, !dbg !13825, !llvm.loop !13849

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !13851
  store i64 %27, i64* %9, align 8, !dbg !13851
  br label %32, !dbg !13854

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !13816
  %31 = sext i32 %30 to i64, !dbg !13855
  br label %32, !dbg !13855

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !13855
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !13816
  %36 = load i64, i64* @curr_tick, align 8, !dbg !13856
  %37 = add i64 %36, %33, !dbg !13856
  store i64 %37, i64* @curr_tick, align 8, !dbg !13856
  store i32 0, i32* @announce_remaining, align 4, !dbg !13857
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !13858
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !13859
  call void @llvm.dbg.value(metadata i32 %35, metadata !13437, metadata !DIExpression()) #23, !dbg !13860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13860
  call void @llvm.dbg.value(metadata i32 %35, metadata !13445, metadata !DIExpression()) #23, !dbg !13862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !13864, !srcloc !13451
  ret void, !dbg !13865
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !13866 {
  call void @llvm.dbg.value(metadata i64 0, metadata !13870, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata i32 0, metadata !13871, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13876
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13878, !srcloc !13384
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13878
  call void @llvm.dbg.value(metadata i32 %2, metadata !13381, metadata !DIExpression()) #23, !dbg !13880
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13880
  call void @llvm.dbg.value(metadata i32 %2, metadata !13375, metadata !DIExpression()) #23, !dbg !13876
  call void @llvm.dbg.value(metadata i32 %2, metadata !13873, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i64 0, metadata !13870, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata i32 undef, metadata !13871, metadata !DIExpression()), !dbg !13875
  %3 = load i64, i64* @curr_tick, align 8, !dbg !13881
  %4 = tail call fastcc i32 @elapsed.131() #24, !dbg !13884
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !13870, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13874
  call void @llvm.dbg.value(metadata i32 %2, metadata !13437, metadata !DIExpression()) #23, !dbg !13885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13442, metadata !DIExpression()) #23, !dbg !13885
  call void @llvm.dbg.value(metadata i32 %2, metadata !13445, metadata !DIExpression()) #23, !dbg !13887
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13889, !srcloc !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13871, metadata !DIExpression()), !dbg !13875
  %5 = sext i32 %4 to i64, !dbg !13884
  %6 = add i64 %3, %5, !dbg !13890
  ret i64 %6, !dbg !13891
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !13892 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !13893
  %2 = trunc i64 %1 to i32, !dbg !13894
  ret i32 %2, !dbg !13895
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !13896 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !13897
  ret i64 %1, !dbg !13898
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !13899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13901, metadata !DIExpression()), !dbg !13908
  %2 = icmp eq i32 %0, 0, !dbg !13909
  br i1 %2, label %10, label %3, !dbg !13911

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %4, metadata !13902, metadata !DIExpression()), !dbg !13908
  %5 = mul i32 %0, 84, !dbg !13913
  call void @llvm.dbg.value(metadata i32 %5, metadata !13903, metadata !DIExpression()), !dbg !13908
  br label %6, !dbg !13914

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !13915
  call void @llvm.dbg.value(metadata i32 %7, metadata !13904, metadata !DIExpression()), !dbg !13916
  %8 = sub i32 %7, %4, !dbg !13917
  %9 = icmp ult i32 %8, %5, !dbg !13919
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !13920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !13921 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !13922
  ret i32 %1, !dbg !13923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !13924 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !13926
  ret i32 %1, !dbg !13927
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !13928 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13932, metadata !DIExpression()), !dbg !13934
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !13935

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !13936
  br label %14, !dbg !13940

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13933, metadata !DIExpression()), !dbg !13934
  %6 = icmp slt i64 %2, -1, !dbg !13941
  br i1 %6, label %7, label %9, !dbg !13944

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !13945
  br label %14, !dbg !13946

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !13948
  %11 = icmp ugt i64 %2, 1, !dbg !13949
  %12 = select i1 %11, i64 %2, i64 1, !dbg !13949
  %13 = add nsw i64 %10, %12, !dbg !13950
  br label %14, !dbg !13951

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !13952
  ret i64 %15, !dbg !13953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !13954 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.152, i32 0, i32 0)) #25, !dbg !13956
  ret void, !dbg !13957
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { argmemonly nofree nounwind willreturn writeonly }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!595, !2, !2152, !2154, !27, !2156, !2158, !2196, !111, !168, !2198, !2209, !2255, !2257, !2285, !2313, !2356, !2428, !2473, !197, !351, !2501, !387, !397, !422, !627, !2506, !765, !831, !1135, !1354, !2545, !1467, !1557, !2547, !2633, !2698, !1609, !2701, !1616, !1980, !2719, !2000, !2721, !2115, !2724}
!llvm.ident = !{!2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726, !2726}
!llvm.module.flags = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 252, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !506, line: 72, type: !590, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !492, globals: !503, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!455 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!456 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!457 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!458 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!459 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!460 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!461 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!462 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!463 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!464 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!465 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!466 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!467 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!468 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!469 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!470 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!471 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!472 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!473 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!474 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!475 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!476 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!477 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!478 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!479 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!480 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!481 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!482 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!483 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!484 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!485 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!486 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!487 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!488 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!489 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!490 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!491 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!492 = !{!200, !103, !102, !493}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 244, baseType: !495)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 236, size: 192, elements: !496)
!496 = !{!497, !498, !499, !500, !501, !502}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !495, file: !116, line: 238, baseType: !120, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !495, file: !116, line: 239, baseType: !120, size: 32, offset: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !495, file: !116, line: 240, baseType: !120, size: 32, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !495, file: !116, line: 241, baseType: !120, size: 32, offset: 96)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !495, file: !116, line: 242, baseType: !120, size: 32, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !495, file: !116, line: 243, baseType: !120, size: 32, offset: 160)
!503 = !{!504, !510, !526, !537, !554, !420, !556, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588}
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !422, file: !506, line: 424, type: !507, isLocal: false, isDefinition: true, align: 16)
!506 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 4)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !422, file: !506, line: 424, type: !512, isLocal: false, isDefinition: true, align: 32)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !514)
!514 = !{!515, !516, !517, !518, !524, !525}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !513, file: !141, line: 380, baseType: !144, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !513, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !513, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !513, file: !141, line: 386, baseType: !519, size: 32, offset: 96)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !521)
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !520, file: !141, line: 359, baseType: !154, size: 8)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !520, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !513, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !513, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !422, file: !506, line: 424, type: !528, isLocal: true, isDefinition: true, align: 32)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !529, file: !132, line: 60, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 32)
!533 = !DISubroutineType(types: !534)
!534 = !{!103, !535}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !529, file: !132, line: 65, baseType: !535, size: 32, offset: 32)
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !506, line: 423, type: !539, isLocal: true, isDefinition: true)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !506, line: 107, size: 1472, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !539, file: !506, line: 109, baseType: !542, size: 1472)
!542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 1472, elements: !552)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !506, line: 101, size: 64, elements: !544)
!544 = !{!545, !551}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !543, file: !506, line: 102, baseType: !546, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !547, line: 63, baseType: !548)
!547 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DISubroutineType(types: !550)
!550 = !{null, !103, !102}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !543, file: !506, line: 103, baseType: !102, size: 32, offset: 32)
!552 = !{!553}
!553 = !DISubrange(count: 23)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !422, file: !506, line: 424, type: !520, isLocal: true, isDefinition: true, align: 8)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !558, file: !506, line: 493, type: !563, isLocal: true, isDefinition: true, align: 32)
!558 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !506, file: !506, line: 460, type: !559, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !561)
!559 = !DISubroutineType(types: !560)
!560 = !{null, !535}
!561 = !{!562}
!562 = !DILocalVariable(name: "dev", arg: 1, scope: !558, file: !506, line: 460, type: !535)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !564)
!564 = !{!565, !567, !568, !569}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !563, file: !10, line: 55, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !563, file: !10, line: 57, baseType: !566, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !563, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !563, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !558, file: !506, line: 497, type: !563, isLocal: true, isDefinition: true, align: 32)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !558, file: !506, line: 507, type: !563, isLocal: true, isDefinition: true, align: 32)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !558, file: !506, line: 512, type: !563, isLocal: true, isDefinition: true, align: 32)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !558, file: !506, line: 516, type: !563, isLocal: true, isDefinition: true, align: 32)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !558, file: !506, line: 523, type: !563, isLocal: true, isDefinition: true, align: 32)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !558, file: !506, line: 527, type: !563, isLocal: true, isDefinition: true, align: 32)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !558, file: !506, line: 581, type: !563, isLocal: true, isDefinition: true, align: 32)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !558, file: !506, line: 586, type: !563, isLocal: true, isDefinition: true, align: 32)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !558, file: !506, line: 591, type: !563, isLocal: true, isDefinition: true, align: 32)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !558, file: !506, line: 595, type: !563, isLocal: true, isDefinition: true, align: 32)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 736, elements: !552)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !592)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 134, baseType: !425)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !595, file: !600, line: 22, type: !622, isLocal: false, isDefinition: true, align: 16)
!595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !596, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !597, splitDebugInlining: false, nameTableKind: None)
!596 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!597 = !{!598, !593, !604, !606, !608, !610, !612, !614, !616, !618, !620}
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !595, file: !600, line: 17, type: !601, isLocal: false, isDefinition: true, align: 16)
!600 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !602)
!602 = !{!603}
!603 = !DISubrange(count: 12)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !595, file: !600, line: 29, type: !507, isLocal: false, isDefinition: true, align: 16)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !595, file: !600, line: 36, type: !507, isLocal: false, isDefinition: true, align: 16)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !595, file: !600, line: 43, type: !507, isLocal: false, isDefinition: true, align: 16)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !595, file: !600, line: 50, type: !507, isLocal: false, isDefinition: true, align: 16)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !595, file: !600, line: 57, type: !507, isLocal: false, isDefinition: true, align: 16)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !595, file: !600, line: 64, type: !507, isLocal: false, isDefinition: true, align: 16)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !595, file: !600, line: 71, type: !507, isLocal: false, isDefinition: true, align: 16)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !595, file: !600, line: 78, type: !507, isLocal: false, isDefinition: true, align: 16)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !595, file: !600, line: 85, type: !507, isLocal: false, isDefinition: true, align: 16)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 3)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !627, file: !691, line: 398, type: !724, isLocal: true, isDefinition: true)
!627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !629, retainedTypes: !642, globals: !688, splitDebugInlining: false, nameTableKind: None)
!628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!629 = !{!630, !30, !635}
!630 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 197, baseType: !32, size: 32, elements: !632)
!631 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!632 = !{!633, !634}
!633 = !DIEnumerator(name: "SUCCESS", value: 0)
!634 = !DIEnumerator(name: "ERROR", value: 1)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !636, line: 44, baseType: !32, size: 32, elements: !637)
!636 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!637 = !{!638, !639, !640, !641}
!638 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!639 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!640 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!641 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!642 = !{!102, !103, !121, !643, !681, !687}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !646)
!646 = !{!647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !680}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !645, file: !116, line: 338, baseType: !120, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !645, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !645, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !645, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !645, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !645, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !645, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !645, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !645, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !645, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !645, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !645, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !645, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !645, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !645, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !645, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !645, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !645, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !645, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !645, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !645, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !645, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !645, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !645, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !645, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !645, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !645, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !645, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !645, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !645, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !645, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 32, elements: !345)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !645, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !684)
!683 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !682, file: !683, line: 344, baseType: !121, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !682, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!688 = !{!689, !695, !711, !722, !625}
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !627, file: !691, line: 752, type: !692, isLocal: false, isDefinition: true, align: 16)
!691 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 704, elements: !693)
!693 = !{!694}
!694 = !DISubrange(count: 44)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !627, file: !691, line: 752, type: !697, isLocal: false, isDefinition: true, align: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !699)
!699 = !{!700, !701, !702, !703, !709, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !141, line: 380, baseType: !144, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !698, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !698, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !698, file: !141, line: 386, baseType: !704, size: 32, offset: 96)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !706)
!706 = !{!707, !708}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !705, file: !141, line: 359, baseType: !154, size: 8)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !705, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !698, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !698, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !627, file: !691, line: 752, type: !713, isLocal: true, isDefinition: true, align: 32)
!713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !715)
!715 = !{!716, !721}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !714, file: !132, line: 60, baseType: !717, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = !DISubroutineType(types: !719)
!719 = !{!103, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !714, file: !132, line: 65, baseType: !720, size: 32, offset: 32)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !627, file: !691, line: 752, type: !705, isLocal: true, isDefinition: true, align: 8)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !725)
!725 = !{!726, !732, !733, !742, !747, !752, !758}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !724, file: !636, line: 101, baseType: !727, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !728)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DISubroutineType(types: !730)
!730 = !{!103, !720, !731}
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !636, line: 56, baseType: !102)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !724, file: !636, line: 102, baseType: !727, size: 32, offset: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !724, file: !636, line: 103, baseType: !734, size: 32, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!736 = !DISubroutineType(types: !737)
!737 = !{!103, !720, !731, !738, !102}
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !739)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DISubroutineType(types: !741)
!741 = !{null, !720, !731, !102}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !724, file: !636, line: 104, baseType: !743, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !744)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DISubroutineType(types: !746)
!746 = !{!103, !720, !731, !687}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !724, file: !636, line: 105, baseType: !748, size: 32, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!750 = !DISubroutineType(types: !751)
!751 = !{!635, !720, !731}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !724, file: !636, line: 106, baseType: !753, size: 32, offset: 160)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!755 = !DISubroutineType(types: !756)
!756 = !{!103, !720, !731, !757}
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !636, line: 64, baseType: !102)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !724, file: !636, line: 107, baseType: !759, size: 32, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 32)
!761 = !DISubroutineType(types: !762)
!762 = !{!103, !720, !731, !102}
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !765, file: !822, line: 603, type: !824, isLocal: true, isDefinition: true, align: 32)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !767, globals: !819, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!767 = !{!102, !103, !768}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !771, line: 336, size: 160, elements: !772)
!771 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!772 = !{!773, !793, !797, !801, !814}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !770, file: !771, line: 365, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DISubroutineType(types: !776)
!776 = !{!103, !777, !792}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !780)
!780 = !{!781, !782, !783, !784, !790, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !779, file: !141, line: 380, baseType: !144, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !779, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !779, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !779, file: !141, line: 386, baseType: !785, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !786, file: !141, line: 359, baseType: !154, size: 8)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !786, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !779, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !779, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !770, file: !771, line: 366, baseType: !794, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !777, !155}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !770, file: !771, line: 374, baseType: !798, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!103, !777}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !770, file: !771, line: 377, baseType: !802, size: 32, offset: 96)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DISubroutineType(types: !804)
!804 = !{!103, !777, !805}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !771, line: 122, size: 64, elements: !808)
!808 = !{!809, !810, !811, !812, !813}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !807, file: !771, line: 123, baseType: !121, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !807, file: !771, line: 124, baseType: !154, size: 8, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !807, file: !771, line: 125, baseType: !154, size: 8, offset: 40)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !807, file: !771, line: 126, baseType: !154, size: 8, offset: 48)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !807, file: !771, line: 127, baseType: !154, size: 8, offset: 56)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !770, file: !771, line: 379, baseType: !815, size: 32, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DISubroutineType(types: !817)
!817 = !{!103, !777, !818}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!819 = !{!763, !820}
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !765, file: !822, line: 38, type: !823, isLocal: true, isDefinition: true)
!822 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !825, file: !132, line: 60, baseType: !798, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !825, file: !132, line: 65, baseType: !777, size: 32, offset: 32)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !831, file: !1001, line: 762, type: !1110, isLocal: true, isDefinition: true)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !833, retainedTypes: !851, globals: !998, splitDebugInlining: false, nameTableKind: None)
!832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!833 = !{!30, !834, !840, !845, !635}
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !835, line: 506, baseType: !32, size: 32, elements: !836)
!835 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !{!837, !838, !839}
!837 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!838 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!839 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!840 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !835, line: 512, baseType: !32, size: 32, elements: !841)
!841 = !{!842, !843, !844}
!842 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!843 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!844 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !547, line: 43, baseType: !32, size: 32, elements: !846)
!846 = !{!847, !848, !849, !850}
!847 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!848 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!849 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!850 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!851 = !{!102, !103, !852, !922, !927, !887, !840, !834, !932, !933, !121, !947, !902, !957, !958, !959}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !835, line: 523, size: 288, elements: !855)
!855 = !{!856, !877, !883, !888, !892, !893, !894, !898, !918}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !854, file: !835, line: 524, baseType: !857, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{!103, !860, !875, !876}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !863)
!863 = !{!864, !865, !866, !867, !873, !874}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !862, file: !141, line: 380, baseType: !144, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !862, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !862, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !862, file: !141, line: 386, baseType: !868, size: 32, offset: 96)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !869, file: !141, line: 359, baseType: !154, size: 8)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !869, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !862, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !862, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !835, line: 237, baseType: !154)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !835, line: 257, baseType: !121)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !854, file: !835, line: 530, baseType: !878, size: 32, offset: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!103, !860, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !835, line: 229, baseType: !121)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !854, file: !835, line: 532, baseType: !884, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !860, !887, !882}
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !835, line: 216, baseType: !121)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !854, file: !835, line: 535, baseType: !889, size: 32, offset: 96)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{!103, !860, !887}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !854, file: !835, line: 537, baseType: !889, size: 32, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !854, file: !835, line: 539, baseType: !889, size: 32, offset: 160)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !854, file: !835, line: 541, baseType: !895, size: 32, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{!103, !860, !875, !834, !840}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !854, file: !835, line: 544, baseType: !899, size: 32, offset: 224)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = !DISubroutineType(types: !901)
!901 = !{!103, !860, !902, !157}
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !835, line: 478, size: 96, elements: !904)
!904 = !{!905, !912, !917}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !903, file: !835, line: 482, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !907, line: 33, baseType: !908)
!907 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !907, line: 29, size: 32, elements: !909)
!909 = !{!910}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !907, line: 30, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !903, file: !835, line: 485, baseType: !913, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !835, line: 464, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !860, !902, !887}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !903, file: !835, line: 493, baseType: !887, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !854, file: !835, line: 547, baseType: !919, size: 32, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!121, !860}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !835, line: 428, size: 32, elements: !925)
!925 = !{!926}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !924, file: !835, line: 434, baseType: !887, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !835, line: 441, size: 32, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !929, file: !835, line: 447, baseType: !887, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !936)
!936 = !{!937, !938, !939, !940, !941, !942, !943, !944, !945}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !935, file: !116, line: 267, baseType: !120, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !935, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !935, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !935, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !935, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !935, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !935, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !935, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !935, file: !116, line: 275, baseType: !946, size: 64, offset: 256)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 289, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 282, size: 288, elements: !950)
!950 = !{!951, !952, !953, !955, !956}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !949, file: !116, line: 284, baseType: !120, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !949, file: !116, line: 285, baseType: !120, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !949, file: !116, line: 286, baseType: !954, size: 128, offset: 64)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !508)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !949, file: !116, line: 287, baseType: !658, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !949, file: !116, line: 288, baseType: !120, size: 32, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !962)
!962 = !{!963, !968, !969, !978, !983, !988, !993}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !961, file: !636, line: 101, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!103, !860, !731}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !961, file: !636, line: 102, baseType: !964, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !961, file: !636, line: 103, baseType: !970, size: 32, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !971)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!103, !860, !731, !974, !102}
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !860, !731, !102}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !961, file: !636, line: 104, baseType: !979, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !860, !731, !687}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !961, file: !636, line: 105, baseType: !984, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!635, !860, !731}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !961, file: !636, line: 106, baseType: !989, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !860, !731, !757}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !961, file: !636, line: 107, baseType: !994, size: 32, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!103, !860, !731, !102}
!998 = !{!999, !1005, !1007, !1017, !1022, !1024, !1026, !1028, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !829, !1106, !1108, !1121, !1123, !1125, !1127, !1129, !1131}
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !831, file: !1001, line: 762, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1001 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1003)
!1003 = !{!1004}
!1004 = !DISubrange(count: 5)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !831, file: !1001, line: 762, type: !861, isLocal: false, isDefinition: true, align: 32)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !831, file: !1001, line: 762, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1011)
!1011 = !{!1012, !1016}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1010, file: !132, line: 60, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !860}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1010, file: !132, line: 65, baseType: !860, size: 32, offset: 32)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !831, file: !1001, line: 766, type: !1019, isLocal: false, isDefinition: true, align: 16)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 160, elements: !1020)
!1020 = !{!1021}
!1021 = !DISubrange(count: 10)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !831, file: !1001, line: 766, type: !861, isLocal: false, isDefinition: true, align: 32)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !831, file: !1001, line: 766, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !831, file: !1001, line: 770, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !831, file: !1001, line: 770, type: !861, isLocal: false, isDefinition: true, align: 32)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !831, file: !1001, line: 770, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !831, file: !1001, line: 774, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !831, file: !1001, line: 774, type: !861, isLocal: false, isDefinition: true, align: 32)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !831, file: !1001, line: 774, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !831, file: !1001, line: 778, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !831, file: !1001, line: 778, type: !861, isLocal: false, isDefinition: true, align: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !831, file: !1001, line: 778, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !831, file: !1001, line: 782, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !831, file: !1001, line: 782, type: !861, isLocal: false, isDefinition: true, align: 32)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !831, file: !1001, line: 782, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !831, file: !1001, line: 786, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !831, file: !1001, line: 786, type: !861, isLocal: false, isDefinition: true, align: 32)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !831, file: !1001, line: 786, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !831, file: !1001, line: 790, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !831, file: !1001, line: 790, type: !861, isLocal: false, isDefinition: true, align: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !831, file: !1001, line: 790, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !831, file: !1001, line: 762, type: !1064, isLocal: true, isDefinition: true)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1065, line: 237, size: 128, elements: !1066)
!1065 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1066 = !{!1067, !1068, !1069}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1064, file: !1065, line: 239, baseType: !929, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1064, file: !1065, line: 241, baseType: !860, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1064, file: !1065, line: 243, baseType: !1070, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !907, line: 40, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !907, line: 35, size: 64, elements: !1072)
!1072 = !{!1073, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1071, file: !907, line: 36, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1071, file: !907, line: 37, baseType: !1074, size: 32, offset: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !831, file: !1001, line: 762, type: !869, isLocal: true, isDefinition: true, align: 8)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !831, file: !1001, line: 766, type: !1064, isLocal: true, isDefinition: true)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !831, file: !1001, line: 766, type: !869, isLocal: true, isDefinition: true, align: 8)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !831, file: !1001, line: 770, type: !1064, isLocal: true, isDefinition: true)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !831, file: !1001, line: 770, type: !869, isLocal: true, isDefinition: true, align: 8)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !831, file: !1001, line: 774, type: !1064, isLocal: true, isDefinition: true)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !831, file: !1001, line: 774, type: !869, isLocal: true, isDefinition: true, align: 8)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !831, file: !1001, line: 778, type: !1064, isLocal: true, isDefinition: true)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !831, file: !1001, line: 778, type: !869, isLocal: true, isDefinition: true, align: 8)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !831, file: !1001, line: 782, type: !1064, isLocal: true, isDefinition: true)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !831, file: !1001, line: 782, type: !869, isLocal: true, isDefinition: true, align: 8)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !831, file: !1001, line: 786, type: !1064, isLocal: true, isDefinition: true)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !831, file: !1001, line: 786, type: !869, isLocal: true, isDefinition: true, align: 8)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !831, file: !1001, line: 790, type: !1064, isLocal: true, isDefinition: true)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !831, file: !1001, line: 790, type: !869, isLocal: true, isDefinition: true, align: 8)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !831, file: !1001, line: 656, type: !853, isLocal: true, isDefinition: true)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !831, file: !1001, line: 766, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1065, line: 224, size: 160, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !1065, line: 226, baseType: !924, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1111, file: !1065, line: 228, baseType: !687, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1111, file: !1065, line: 230, baseType: !103, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1111, file: !1065, line: 231, baseType: !1117, size: 64, offset: 96)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1117, file: !683, line: 344, baseType: !121, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1117, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !831, file: !1001, line: 770, type: !1110, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !831, file: !1001, line: 774, type: !1110, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !831, file: !1001, line: 778, type: !1110, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !831, file: !1001, line: 782, type: !1110, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !831, file: !1001, line: 786, type: !1110, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !831, file: !1001, line: 790, type: !1110, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1135, file: !1276, line: 1914, type: !1337, isLocal: true, isDefinition: true)
!1135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1137, retainedTypes: !1170, globals: !1273, splitDebugInlining: false, nameTableKind: None)
!1136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1137 = !{!30, !1138, !1145, !1152, !1159, !1165, !635}
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !771, line: 47, baseType: !32, size: 32, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144}
!1140 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1141 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1142 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1143 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1144 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !771, line: 75, baseType: !32, size: 32, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151}
!1147 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1148 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1149 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1150 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1151 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !771, line: 92, baseType: !32, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1155 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1156 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1157 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1158 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !771, line: 84, baseType: !32, size: 32, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164}
!1161 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1162 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1163 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1164 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !771, line: 107, baseType: !32, size: 32, elements: !1166)
!1166 = !{!1167, !1168, !1169}
!1167 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1168 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1169 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1170 = !{!102, !103, !1171, !155, !154, !1220, !121, !731, !1231, !265, !1270, !1272}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !771, line: 336, size: 160, elements: !1174)
!1174 = !{!1175, !1194, !1198, !1202, !1215}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1173, file: !771, line: 365, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!103, !1179, !792}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1192, !1193}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1181, file: !141, line: 380, baseType: !144, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1181, file: !141, line: 386, baseType: !1187, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1188, file: !141, line: 359, baseType: !154, size: 8)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1173, file: !771, line: 366, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1179, !155}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1173, file: !771, line: 374, baseType: !1199, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1179}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1173, file: !771, line: 377, baseType: !1203, size: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!103, !1179, !1206}
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !771, line: 122, size: 64, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1208, file: !771, line: 123, baseType: !121, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1208, file: !771, line: 124, baseType: !154, size: 8, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1208, file: !771, line: 125, baseType: !154, size: 8, offset: 40)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1208, file: !771, line: 126, baseType: !154, size: 8, offset: 48)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1208, file: !771, line: 127, baseType: !154, size: 8, offset: 56)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1173, file: !771, line: 379, baseType: !1216, size: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!103, !1179, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 508, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 499, size: 224, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1222, file: !116, line: 501, baseType: !120, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1222, file: !116, line: 502, baseType: !120, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1222, file: !116, line: 503, baseType: !120, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1222, file: !116, line: 504, baseType: !120, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1222, file: !116, line: 505, baseType: !120, size: 32, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1222, file: !116, line: 506, baseType: !120, size: 32, offset: 160)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1222, file: !116, line: 507, baseType: !120, size: 32, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !1234)
!1234 = !{!1235, !1240, !1241, !1250, !1255, !1260, !1265}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1233, file: !636, line: 101, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !1237)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1179, !731}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1233, file: !636, line: 102, baseType: !1236, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1233, file: !636, line: 103, baseType: !1242, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!103, !1179, !731, !1246, !102}
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1179, !731, !102}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1233, file: !636, line: 104, baseType: !1251, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!103, !1179, !731, !687}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1233, file: !636, line: 105, baseType: !1256, size: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!635, !1179, !731}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1233, file: !636, line: 106, baseType: !1261, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!103, !1179, !731, !757}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1233, file: !636, line: 107, baseType: !1266, size: 32, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1179, !731, !102}
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1271)
!1271 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1273 = !{!1274, !1280, !1282, !1289, !1133, !1291, !1299, !1322, !1325, !1328, !1330}
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 16)
!1276 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1180, isLocal: false, isDefinition: true, align: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1285, file: !132, line: 60, baseType: !1199, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1285, file: !132, line: 65, baseType: !1179, size: 32, offset: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1188, isLocal: true, isDefinition: true, align: 8)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1135, file: !1276, line: 1914, type: !1293, isLocal: true, isDefinition: true)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 64, elements: !345)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1295, file: !683, line: 344, baseType: !121, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1295, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1301, isLocal: true, isDefinition: true)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1303, line: 60, size: 64, elements: !1304)
!1303 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1304 = !{!1305, !1321}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1302, file: !1303, line: 69, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1303, line: 50, size: 64, elements: !1309)
!1309 = !{!1310, !1319, !1320}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1308, file: !1303, line: 52, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !1315)
!1314 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !1316)
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1315, file: !1314, line: 34, baseType: !121, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1315, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1308, file: !1303, line: 54, baseType: !154, size: 8, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1308, file: !1303, line: 56, baseType: !154, size: 8, offset: 40)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1302, file: !1303, line: 71, baseType: !154, size: 8, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 64, elements: !345)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1327, isLocal: true, isDefinition: true)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 128, elements: !242)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1135, file: !1276, line: 1539, type: !1172, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1135, file: !1276, line: 1914, type: !1332, isLocal: true, isDefinition: true)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1333, line: 74, size: 64, elements: !1334)
!1333 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1332, file: !1333, line: 76, baseType: !121, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1332, file: !1333, line: 78, baseType: !1179, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1333, line: 22, size: 224, elements: !1339)
!1339 = !{!1340, !1341, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1338, file: !1333, line: 24, baseType: !1220, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1338, file: !1333, line: 26, baseType: !1342, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1338, file: !1333, line: 28, baseType: !200, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1338, file: !1333, line: 30, baseType: !157, size: 8, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1338, file: !1333, line: 32, baseType: !103, size: 32, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1338, file: !1333, line: 34, baseType: !157, size: 8, offset: 160)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1338, file: !1333, line: 36, baseType: !157, size: 8, offset: 168)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1338, file: !1333, line: 38, baseType: !157, size: 8, offset: 176)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1338, file: !1333, line: 40, baseType: !157, size: 8, offset: 184)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1338, file: !1333, line: 41, baseType: !1351, size: 32, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1354, file: !1432, line: 65, type: !120, isLocal: true, isDefinition: true)
!1354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !1357, globals: !1429, splitDebugInlining: false, nameTableKind: None)
!1355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1356 = !{!425}
!1357 = !{!1358, !1360, !566, !154, !121, !1368, !1399}
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1359, line: 46, baseType: !280)
!1359 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1362, file: !356, line: 766, baseType: !120, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1362, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1362, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1362, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1371)
!1371 = !{!1372, !1374, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1389, !1394, !1398}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1370, file: !356, line: 413, baseType: !1373, size: 256)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1278)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1370, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1376)
!1376 = !{!1377}
!1377 = !DISubrange(count: 24)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1370, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1370, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1370, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1370, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1370, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1370, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1370, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1370, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1387)
!1387 = !{!1388}
!1388 = !DISubrange(count: 56)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1370, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 1920, elements: !1392)
!1391 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1392 = !{!1393}
!1393 = !DISubrange(count: 240)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1370, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1396)
!1396 = !{!1397}
!1397 = !DISubrange(count: 644)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1370, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1420, !1421, !1422, !1424, !1426, !1428}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1401, file: !356, line: 447, baseType: !360, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1401, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1401, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1401, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1401, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1401, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1401, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 96, elements: !602)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1401, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1401, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1401, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1401, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1401, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1401, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1401, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1401, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1401, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1401, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1401, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !508)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1401, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1003)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1401, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1003)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1401, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1429 = !{!1430, !1456, !1459, !1461, !1463, !1352}
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1354, file: !1432, line: 285, type: !1433, isLocal: true, isDefinition: true, align: 32)
!1432 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1435)
!1435 = !{!1436, !1455}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1434, file: !132, line: 60, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!103, !1440}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1453, !1454}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1442, file: !141, line: 380, baseType: !144, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1442, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1442, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1442, file: !141, line: 386, baseType: !1448, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1450)
!1450 = !{!1451, !1452}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1449, file: !141, line: 359, baseType: !154, size: 8)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1449, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1442, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1442, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1434, file: !132, line: 65, baseType: !1440, size: 32, offset: 32)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "lock", scope: !1354, file: !1432, line: 34, type: !1458, isLocal: true, isDefinition: true)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "last_load", scope: !1354, file: !1432, line: 36, type: !121, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1354, file: !1432, line: 48, type: !121, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1354, file: !1432, line: 54, type: !121, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1467, file: !1549, line: 22, type: !1551, isLocal: true, isDefinition: true)
!1467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1469, retainedTypes: !1470, globals: !1546, splitDebugInlining: false, nameTableKind: None)
!1468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1469 = !{!834, !840}
!1470 = !{!1471, !1535, !1540, !887, !840, !834, !1545, !102}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !835, line: 523, size: 288, elements: !1474)
!1474 = !{!1475, !1494, !1498, !1502, !1506, !1507, !1508, !1512, !1531}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1473, file: !835, line: 524, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!103, !1479, !875, !876}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1492, !1493}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1481, file: !141, line: 380, baseType: !144, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1481, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1481, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1481, file: !141, line: 386, baseType: !1487, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1489)
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1488, file: !141, line: 359, baseType: !154, size: 8)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1488, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1481, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1481, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1473, file: !835, line: 530, baseType: !1495, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!103, !1479, !881}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1473, file: !835, line: 532, baseType: !1499, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!103, !1479, !887, !882}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1473, file: !835, line: 535, baseType: !1503, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!103, !1479, !887}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1473, file: !835, line: 537, baseType: !1503, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1473, file: !835, line: 539, baseType: !1503, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1473, file: !835, line: 541, baseType: !1509, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!103, !1479, !875, !834, !840}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1473, file: !835, line: 544, baseType: !1513, size: 32, offset: 224)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!103, !1479, !1516, !157}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !835, line: 478, size: 96, elements: !1518)
!1518 = !{!1519, !1525, !1530}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1517, file: !835, line: 482, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !907, line: 33, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !907, line: 29, size: 32, elements: !1522)
!1522 = !{!1523}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1521, file: !907, line: 30, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1517, file: !835, line: 485, baseType: !1526, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !835, line: 464, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{null, !1479, !1516, !887}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1517, file: !835, line: 493, baseType: !887, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1473, file: !835, line: 547, baseType: !1532, size: 32, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!121, !1479}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !835, line: 428, size: 32, elements: !1538)
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1537, file: !835, line: 434, baseType: !887, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !835, line: 441, size: 32, elements: !1543)
!1543 = !{!1544}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1542, file: !835, line: 447, baseType: !887, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1546 = !{!1547, !1465}
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1548 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1467, file: !1549, line: 37, type: !1550, isLocal: true, isDefinition: true)
!1549 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 352, elements: !1553)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!1553 = !{!1554}
!1554 = !DISubrange(count: 11)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1557, file: !1599, line: 139, type: !1606, isLocal: false, isDefinition: true)
!1557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1559, globals: !1596, splitDebugInlining: false, nameTableKind: None)
!1558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1559 = !{!1560}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1562, file: !116, line: 338, baseType: !120, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1562, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1562, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1562, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1562, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1562, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1562, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1562, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1562, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1562, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1562, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1562, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1562, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1562, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1562, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1562, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1562, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1562, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1562, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1562, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1562, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1562, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1562, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1562, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1562, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1562, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1562, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1562, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1562, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1562, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1562, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1562, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!1596 = !{!1597, !1600, !1555}
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1557, file: !1599, line: 137, type: !121, isLocal: false, isDefinition: true)
!1599 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1557, file: !1599, line: 138, type: !1602, isLocal: false, isDefinition: true)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 128, elements: !1604)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1604 = !{!1605}
!1605 = !DISubrange(count: 16)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 64, elements: !1278)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1609, file: !1612, line: 23, type: !1613, isLocal: false, isDefinition: true)
!1609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1611 = !{!1607}
!1612 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1616, file: !1620, line: 86, type: !1870, isLocal: false, isDefinition: true, align: 512)
!1616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1618, retainedTypes: !1627, globals: !1701, splitDebugInlining: false, nameTableKind: None)
!1617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1618 = !{!1619, !30, !425}
!1619 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1620, line: 63, baseType: !32, size: 32, elements: !1621)
!1620 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1621 = !{!1622, !1623, !1624, !1625, !1626}
!1622 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1623 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1624 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1625 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1626 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1627 = !{!200, !102, !103, !1628, !957, !121, !1659, !566, !154, !1684}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1631, line: 51, size: 64, elements: !1632)
!1631 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !{!1633, !1654}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1630, file: !1631, line: 52, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1631, line: 38, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!103, !1638, !1653, !265}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1651, !1652}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1640, file: !141, line: 380, baseType: !144, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1640, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1640, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1640, file: !141, line: 386, baseType: !1646, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1647, file: !141, line: 359, baseType: !154, size: 8)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1647, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1640, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1640, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1630, file: !1631, line: 53, baseType: !1655, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1631, line: 47, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!103, !1638, !1653, !265, !121}
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1662)
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1661, file: !356, line: 447, baseType: !360, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1661, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1661, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1661, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1661, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1661, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1661, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1661, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1661, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1661, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1661, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1661, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1661, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1661, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1661, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1661, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1661, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1661, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1661, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1661, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1661, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1686, file: !356, line: 413, baseType: !1373, size: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1686, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1686, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1686, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1686, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1686, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1686, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1686, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1686, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1686, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1686, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1686, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1686, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1701 = !{!1702, !1824, !1833, !1835, !1614, !1838, !1840, !1845}
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "_kernel", scope: !1616, file: !1620, line: 40, type: !1704, isLocal: false, isDefinition: true)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1705)
!1705 = !{!1706, !1819}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1704, file: !247, line: 159, baseType: !1707, size: 192)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 192, elements: !345)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1813, !1814, !1815, !1816}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1708, file: !247, line: 102, baseType: !121, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1708, file: !247, line: 105, baseType: !957, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1708, file: !247, line: 108, baseType: !1713, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1715)
!1715 = !{!1716, !1774, !1786, !1787, !1788, !1789, !1795, !1808}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1714, file: !211, line: 247, baseType: !1717, size: 384)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1718)
!1718 = !{!1719, !1743, !1750, !1751, !1752, !1761, !1762, !1763}
!1719 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !211, line: 60, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !211, line: 60, size: 64, elements: !1721)
!1721 = !{!1722, !1737}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1720, file: !211, line: 61, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1725)
!1725 = !{!1726, !1732}
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !221, line: 38, baseType: !1727, size: 32)
!1727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !221, line: 38, size: 32, elements: !1728)
!1728 = !{!1729, !1731}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1727, file: !221, line: 39, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1727, file: !221, line: 40, baseType: !1730, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !221, line: 42, baseType: !1733, size: 32, offset: 32)
!1733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !221, line: 42, size: 32, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1733, file: !221, line: 43, baseType: !1730, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1733, file: !221, line: 44, baseType: !1730, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1720, file: !211, line: 62, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1739)
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1738, file: !237, line: 50, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 64, elements: !242)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1717, file: !211, line: 68, baseType: !1744, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1747)
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1746, file: !247, line: 232, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1724)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1717, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1717, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1752 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !211, line: 90, baseType: !1753, size: 16, offset: 112)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !211, line: 90, size: 16, elements: !1754)
!1754 = !{!1755, !1760}
!1755 = !DIDerivedType(tag: DW_TAG_member, scope: !1753, file: !211, line: 91, baseType: !1756, size: 16)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !211, line: 91, size: 16, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1756, file: !211, line: 96, baseType: !261, size: 8)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1756, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1753, file: !211, line: 100, baseType: !265, size: 16)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1717, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1717, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1717, file: !211, line: 131, baseType: !1764, size: 192, offset: 192)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1773}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1764, file: !247, line: 245, baseType: !1723, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1764, file: !247, line: 246, baseType: !1768, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1772}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1764, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1714, file: !211, line: 250, baseType: !1775, size: 288, offset: 384)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1775, file: !284, line: 26, baseType: !121, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1775, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1775, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1775, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1775, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1775, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1775, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1775, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1775, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1714, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1714, file: !211, line: 256, baseType: !1745, size: 64, offset: 704)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1714, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1714, file: !211, line: 300, baseType: !1790, size: 96, offset: 800)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1791)
!1791 = !{!1792, !1793, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1790, file: !211, line: 153, baseType: !22, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1790, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1790, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1714, file: !211, line: 325, baseType: !1796, size: 32, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1798)
!1798 = !{!1799, !1805, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1797, file: !307, line: 5074, baseType: !1800, size: 96)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1801)
!1801 = !{!1802, !1803, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1800, file: !311, line: 57, baseType: !314, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1800, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1800, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1797, file: !307, line: 5075, baseType: !1745, size: 64, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1797, file: !307, line: 5076, baseType: !1807, offset: 160)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1714, file: !211, line: 343, baseType: !1809, size: 64, offset: 928)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1809, file: !284, line: 63, baseType: !121, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1809, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1708, file: !247, line: 111, baseType: !1713, size: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1708, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1708, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1708, file: !247, line: 153, baseType: !1817, offset: 168)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1818, line: 33, elements: !322)
!1818 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1704, file: !247, line: 170, baseType: !1820, size: 96, offset: 192)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1820, file: !247, line: 86, baseType: !1713, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1820, file: !247, line: 90, baseType: !1749, size: 64, offset: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1616, file: !1620, line: 43, type: !1826, isLocal: false, isDefinition: true, align: 512)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 8704, elements: !1831)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !1829)
!1828 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1829 = !{!1830}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1827, file: !1828, line: 48, baseType: !146, size: 8)
!1831 = !{!1832}
!1832 = !DISubrange(count: 1088)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1616, file: !1620, line: 44, type: !1714, isLocal: false, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1616, file: !1620, line: 48, type: !1837, isLocal: false, isDefinition: true)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1714, size: 1024, elements: !345)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1616, file: !1620, line: 217, type: !157, isLocal: false, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1616, file: !1620, line: 50, type: !1842, isLocal: true, isDefinition: true, align: 512)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 3072, elements: !1843)
!1843 = !{!346, !1844}
!1844 = !DISubrange(count: 384)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "levels", scope: !1847, file: !1620, line: 232, type: !1867, isLocal: true, isDefinition: true)
!1847 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1620, file: !1620, line: 230, type: !1848, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !1850)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1619}
!1850 = !{!1851, !1852, !1862, !1866}
!1851 = !DILocalVariable(name: "level", arg: 1, scope: !1847, file: !1620, line: 230, type: !1619)
!1852 = !DILocalVariable(name: "entry", scope: !1847, file: !1620, line: 244, type: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1856)
!1856 = !{!1857, !1861}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1855, file: !132, line: 60, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!103, !1638}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1855, file: !132, line: 65, baseType: !1638, size: 32, offset: 32)
!1862 = !DILocalVariable(name: "dev", scope: !1863, file: !1620, line: 247, type: !1638)
!1863 = distinct !DILexicalBlock(scope: !1864, file: !1620, line: 246, column: 64)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !1620, line: 246, column: 2)
!1865 = distinct !DILexicalBlock(scope: !1847, file: !1620, line: 246, column: 2)
!1866 = !DILocalVariable(name: "rc", scope: !1863, file: !1620, line: 248, type: !103)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 192, elements: !1868)
!1868 = !{!1869}
!1869 = !DISubrange(count: 6)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 16896, elements: !1871)
!1871 = !{!346, !1872}
!1872 = !DISubrange(count: 2112)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "states_str", scope: !1875, file: !1876, line: 276, type: !1997, isLocal: true, isDefinition: true)
!1875 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1876, file: !1876, line: 271, type: !1877, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !1988)
!1876 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!144, !1879, !957, !200}
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1880)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1882)
!1882 = !{!1883, !1941, !1953, !1954, !1955, !1956, !1962, !1975}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1881, file: !211, line: 247, baseType: !1884, size: 384)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1885)
!1885 = !{!1886, !1910, !1917, !1918, !1919, !1928, !1929, !1930}
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !211, line: 60, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !211, line: 60, size: 64, elements: !1888)
!1888 = !{!1889, !1904}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1887, file: !211, line: 61, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1892)
!1892 = !{!1893, !1899}
!1893 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !221, line: 38, baseType: !1894, size: 32)
!1894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !221, line: 38, size: 32, elements: !1895)
!1895 = !{!1896, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1894, file: !221, line: 39, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1894, file: !221, line: 40, baseType: !1897, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !221, line: 42, baseType: !1900, size: 32, offset: 32)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !221, line: 42, size: 32, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1900, file: !221, line: 43, baseType: !1897, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1900, file: !221, line: 44, baseType: !1897, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1887, file: !211, line: 62, baseType: !1905, size: 64)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1905, file: !237, line: 50, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1909, size: 64, elements: !242)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1884, file: !211, line: 68, baseType: !1911, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1914)
!1914 = !{!1915}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1913, file: !247, line: 232, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1891)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1884, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1884, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !211, line: 90, baseType: !1920, size: 16, offset: 112)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !211, line: 90, size: 16, elements: !1921)
!1921 = !{!1922, !1927}
!1922 = !DIDerivedType(tag: DW_TAG_member, scope: !1920, file: !211, line: 91, baseType: !1923, size: 16)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1920, file: !211, line: 91, size: 16, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1923, file: !211, line: 96, baseType: !261, size: 8)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1923, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1920, file: !211, line: 100, baseType: !265, size: 16)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1884, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1884, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1884, file: !211, line: 131, baseType: !1931, size: 192, offset: 192)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1940}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1931, file: !247, line: 245, baseType: !1890, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1931, file: !247, line: 246, baseType: !1935, size: 32, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1931, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1881, file: !211, line: 250, baseType: !1942, size: 288, offset: 384)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1942, file: !284, line: 26, baseType: !121, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1942, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1942, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1942, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1942, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1942, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1942, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1942, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1942, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1881, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1881, file: !211, line: 256, baseType: !1912, size: 64, offset: 704)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1881, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1881, file: !211, line: 300, baseType: !1957, size: 96, offset: 800)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1957, file: !211, line: 153, baseType: !22, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1957, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1957, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1881, file: !211, line: 325, baseType: !1963, size: 32, offset: 896)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1965)
!1965 = !{!1966, !1972, !1973}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1964, file: !307, line: 5074, baseType: !1967, size: 96)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1968)
!1968 = !{!1969, !1970, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1967, file: !311, line: 57, baseType: !314, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1967, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1967, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1964, file: !307, line: 5075, baseType: !1912, size: 64, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1964, file: !307, line: 5076, baseType: !1974, offset: 160)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1881, file: !211, line: 343, baseType: !1976, size: 64, offset: 928)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1976, file: !284, line: 63, baseType: !121, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1976, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1980 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1981, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1982, globals: !1984, splitDebugInlining: false, nameTableKind: None)
!1981 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!1982 = !{!102, !144, !1358, !154, !103, !1983, !24, !200, !957, !22, !121, !1270}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1984 = !{!1873, !1985}
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "states_sz", scope: !1875, file: !1876, line: 279, type: !1987, isLocal: true, isDefinition: true)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1550, size: 256, elements: !1278)
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1989 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1875, file: !1876, line: 271, type: !1879)
!1990 = !DILocalVariable(name: "buf", arg: 2, scope: !1875, file: !1876, line: 271, type: !957)
!1991 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1875, file: !1876, line: 271, type: !200)
!1992 = !DILocalVariable(name: "off", scope: !1875, file: !1876, line: 273, type: !200)
!1993 = !DILocalVariable(name: "bit", scope: !1875, file: !1876, line: 274, type: !154)
!1994 = !DILocalVariable(name: "thread_state", scope: !1875, file: !1876, line: 275, type: !154)
!1995 = !DILocalVariable(name: "index", scope: !1996, file: !1876, line: 293, type: !154)
!1996 = distinct !DILexicalBlock(scope: !1875, file: !1876, line: 293, column: 2)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1278)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2000, file: !2108, line: 56, type: !2097, isLocal: false, isDefinition: true)
!2000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2002, globals: !2105, splitDebugInlining: false, nameTableKind: None)
!2001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2002 = !{!2003, !957, !102, !2103, !1653, !1358, !566, !103, !121, !1270, !2104}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2005)
!2005 = !{!2006, !2064, !2076, !2077, !2078, !2079, !2085, !2098}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2004, file: !211, line: 247, baseType: !2007, size: 384)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2008)
!2008 = !{!2009, !2033, !2040, !2041, !2042, !2051, !2052, !2053}
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !211, line: 60, baseType: !2010, size: 64)
!2010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2007, file: !211, line: 60, size: 64, elements: !2011)
!2011 = !{!2012, !2027}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2010, file: !211, line: 61, baseType: !2013, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2015)
!2015 = !{!2016, !2022}
!2016 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !221, line: 38, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !221, line: 38, size: 32, elements: !2018)
!2018 = !{!2019, !2021}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2017, file: !221, line: 39, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2017, file: !221, line: 40, baseType: !2020, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !221, line: 42, baseType: !2023, size: 32, offset: 32)
!2023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !221, line: 42, size: 32, elements: !2024)
!2024 = !{!2025, !2026}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2023, file: !221, line: 43, baseType: !2020, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2023, file: !221, line: 44, baseType: !2020, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2010, file: !211, line: 62, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2029)
!2029 = !{!2030}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2028, file: !237, line: 50, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 64, elements: !242)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2007, file: !211, line: 68, baseType: !2034, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2037)
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2036, file: !247, line: 232, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2014)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2007, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2007, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !211, line: 90, baseType: !2043, size: 16, offset: 112)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2007, file: !211, line: 90, size: 16, elements: !2044)
!2044 = !{!2045, !2050}
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !211, line: 91, baseType: !2046, size: 16)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2043, file: !211, line: 91, size: 16, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2046, file: !211, line: 96, baseType: !261, size: 8)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2046, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2043, file: !211, line: 100, baseType: !265, size: 16)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2007, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2007, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2007, file: !211, line: 131, baseType: !2054, size: 192, offset: 192)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2055)
!2055 = !{!2056, !2057, !2063}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2054, file: !247, line: 245, baseType: !2013, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2054, file: !247, line: 246, baseType: !2058, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{null, !2062}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2054, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2004, file: !211, line: 250, baseType: !2065, size: 288, offset: 384)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2065, file: !284, line: 26, baseType: !121, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2065, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2065, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2065, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2065, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2065, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2065, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2065, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2065, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2004, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2004, file: !211, line: 256, baseType: !2035, size: 64, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2004, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2004, file: !211, line: 300, baseType: !2080, size: 96, offset: 800)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2080, file: !211, line: 153, baseType: !22, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2080, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2080, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2004, file: !211, line: 325, baseType: !2086, size: 32, offset: 896)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2088)
!2088 = !{!2089, !2095, !2096}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2087, file: !307, line: 5074, baseType: !2090, size: 96)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2091)
!2091 = !{!2092, !2093, !2094}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2090, file: !311, line: 57, baseType: !314, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2090, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2090, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2087, file: !307, line: 5075, baseType: !2035, size: 64, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2087, file: !307, line: 5076, baseType: !2097, offset: 160)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2004, file: !211, line: 343, baseType: !2099, size: 64, offset: 928)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2099, file: !284, line: 63, baseType: !121, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2099, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2105 = !{!1998, !2106, !2109, !2111}
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2000, file: !2108, line: 404, type: !103, isLocal: true, isDefinition: true)
!2108 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2000, file: !2108, line: 405, type: !103, isLocal: true, isDefinition: true)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "pending_current", scope: !2000, file: !2108, line: 425, type: !2003, isLocal: true, isDefinition: true)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2115, file: !2145, line: 15, type: !1270, isLocal: true, isDefinition: true)
!2115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2117, globals: !2142, splitDebugInlining: false, nameTableKind: None)
!2116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2117 = !{!1358, !102, !566, !121, !1270, !103, !2118, !957, !280}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2120)
!2120 = !{!2121, !2136, !2141}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2119, file: !247, line: 245, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2124)
!2124 = !{!2125, !2131}
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !221, line: 38, baseType: !2126, size: 32)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2123, file: !221, line: 38, size: 32, elements: !2127)
!2127 = !{!2128, !2130}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2126, file: !221, line: 39, baseType: !2129, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2126, file: !221, line: 40, baseType: !2129, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !221, line: 42, baseType: !2132, size: 32, offset: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2123, file: !221, line: 42, size: 32, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2132, file: !221, line: 43, baseType: !2129, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2132, file: !221, line: 44, baseType: !2129, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2119, file: !247, line: 246, baseType: !2137, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2138)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !2118}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2119, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2142 = !{!2113, !2143, !2147, !2149}
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2115, file: !2145, line: 19, type: !2146, isLocal: true, isDefinition: true)
!2145 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2115, file: !2145, line: 25, type: !103, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2115, file: !2145, line: 17, type: !2151, isLocal: true, isDefinition: true)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2123)
!2152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/minimal/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2160, retainedTypes: !2180, splitDebugInlining: false, nameTableKind: None)
!2159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2160 = !{!2161, !2169}
!2161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2162, line: 69, baseType: !32, size: 32, elements: !2163)
!2162 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2163 = !{!2164, !2165, !2166, !2167, !2168}
!2164 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2165 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2166 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2167 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2168 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2162, line: 56, baseType: !32, size: 32, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179}
!2171 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2172 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2173 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2174 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2175 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2176 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2177 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2178 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2179 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2180 = !{!103, !2161, !2169, !2181, !262, !164, !2183, !2184, !155, !266, !144, !200, !102, !22, !32, !2186, !2187, !2188, !2189, !2190, !281, !2191, !2182, !2192, !2193, !2194, !2195}
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2162, line: 31, baseType: !2182)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2162, line: 32, baseType: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1271)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2197, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2200, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2200 = !{!2201, !30}
!2201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2202, line: 27, baseType: !32, size: 32, elements: !2203)
!2202 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2203 = !{!2204, !2205, !2206, !2207, !2208}
!2204 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2205 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2206 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2207 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2208 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2211, retainedTypes: !2212, splitDebugInlining: false, nameTableKind: None)
!2210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2211 = !{!425, !2201, !30}
!2212 = !{!592, !2213, !102, !103, !566, !121, !154, !2230}
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2215)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2216)
!2216 = !{!2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2215, file: !356, line: 413, baseType: !1373, size: 256)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2215, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2215, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2215, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2215, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2215, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2215, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2215, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2215, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2215, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2215, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2215, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2215, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2232)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2232, file: !356, line: 447, baseType: !360, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2232, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2232, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2232, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2232, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2232, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2232, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2232, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2232, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2232, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2232, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2232, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2232, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2232, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2232, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2232, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2232, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2232, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2232, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2232, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2232, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2255 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2256, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2256 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2258, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2259, splitDebugInlining: false, nameTableKind: None)
!2258 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2259 = !{!102, !103, !22, !2260}
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2262, file: !356, line: 447, baseType: !360, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2262, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2262, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2262, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2262, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2262, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2262, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2262, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2262, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2262, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2262, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2262, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2262, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2262, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2262, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2262, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2262, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2262, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2262, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2262, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2262, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2285 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2286, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2287, splitDebugInlining: false, nameTableKind: None)
!2286 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2287 = !{!2288, !102, !103}
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2290)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2291)
!2291 = !{!2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2290, file: !356, line: 447, baseType: !360, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2290, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2290, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2290, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2290, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2290, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2290, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2290, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2290, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2290, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2290, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2290, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2290, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2290, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2290, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2290, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2290, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2290, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2290, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2290, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2290, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2315, splitDebugInlining: false, nameTableKind: None)
!2314 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2315 = !{!2316, !121, !102, !103}
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2318, line: 98, size: 256, elements: !2319)
!2318 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2319 = !{!2320, !2325, !2330, !2335, !2340, !2345, !2350, !2355}
!2320 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 99, baseType: !2321, size: 32)
!2321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 99, size: 32, elements: !2322)
!2322 = !{!2323, !2324}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2321, file: !2318, line: 99, baseType: !121, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2321, file: !2318, line: 99, baseType: !121, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 100, baseType: !2326, size: 32, offset: 32)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 100, size: 32, elements: !2327)
!2327 = !{!2328, !2329}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2326, file: !2318, line: 100, baseType: !121, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2326, file: !2318, line: 100, baseType: !121, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 101, baseType: !2331, size: 32, offset: 64)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 101, size: 32, elements: !2332)
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2331, file: !2318, line: 101, baseType: !121, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2331, file: !2318, line: 101, baseType: !121, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 102, baseType: !2336, size: 32, offset: 96)
!2336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 102, size: 32, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2336, file: !2318, line: 102, baseType: !121, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2336, file: !2318, line: 102, baseType: !121, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 103, baseType: !2341, size: 32, offset: 128)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 103, size: 32, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2341, file: !2318, line: 103, baseType: !121, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2341, file: !2318, line: 103, baseType: !121, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 104, baseType: !2346, size: 32, offset: 160)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 104, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2346, file: !2318, line: 104, baseType: !121, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2346, file: !2318, line: 104, baseType: !121, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2318, line: 105, baseType: !2351, size: 32, offset: 192)
!2351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2318, line: 105, size: 32, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2351, file: !2318, line: 105, baseType: !121, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2351, file: !2318, line: 105, baseType: !121, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2317, file: !2318, line: 106, baseType: !121, size: 32, offset: 224)
!2356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2200, retainedTypes: !2358, splitDebugInlining: false, nameTableKind: None)
!2357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2358 = !{!2359, !102, !103, !2384, !2427, !121}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2362)
!2362 = !{!2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2361, file: !356, line: 447, baseType: !360, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2361, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2361, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2361, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2361, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2361, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2361, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2361, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2361, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2361, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2361, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2361, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2361, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2361, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2361, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2361, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2361, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2361, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2361, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2361, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2361, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2318, line: 141, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2318, line: 97, size: 256, elements: !2387)
!2387 = !{!2388}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2386, file: !2318, line: 107, baseType: !2389, size: 256)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2318, line: 98, size: 256, elements: !2390)
!2390 = !{!2391, !2396, !2401, !2406, !2411, !2416, !2421, !2426}
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 99, baseType: !2392, size: 32)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 99, size: 32, elements: !2393)
!2393 = !{!2394, !2395}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2392, file: !2318, line: 99, baseType: !121, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2392, file: !2318, line: 99, baseType: !121, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 100, baseType: !2397, size: 32, offset: 32)
!2397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 100, size: 32, elements: !2398)
!2398 = !{!2399, !2400}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2397, file: !2318, line: 100, baseType: !121, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2397, file: !2318, line: 100, baseType: !121, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 101, baseType: !2402, size: 32, offset: 64)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 101, size: 32, elements: !2403)
!2403 = !{!2404, !2405}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2402, file: !2318, line: 101, baseType: !121, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2402, file: !2318, line: 101, baseType: !121, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 102, baseType: !2407, size: 32, offset: 96)
!2407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 102, size: 32, elements: !2408)
!2408 = !{!2409, !2410}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2407, file: !2318, line: 102, baseType: !121, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2407, file: !2318, line: 102, baseType: !121, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 103, baseType: !2412, size: 32, offset: 128)
!2412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 103, size: 32, elements: !2413)
!2413 = !{!2414, !2415}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2412, file: !2318, line: 103, baseType: !121, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2412, file: !2318, line: 103, baseType: !121, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 104, baseType: !2417, size: 32, offset: 160)
!2417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 104, size: 32, elements: !2418)
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2417, file: !2318, line: 104, baseType: !121, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2417, file: !2318, line: 104, baseType: !121, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2318, line: 105, baseType: !2422, size: 32, offset: 192)
!2422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2318, line: 105, size: 32, elements: !2423)
!2423 = !{!2424, !2425}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2422, file: !2318, line: 105, baseType: !121, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2422, file: !2318, line: 105, baseType: !121, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2389, file: !2318, line: 106, baseType: !121, size: 32, offset: 224)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2428 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2429, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !2430, splitDebugInlining: false, nameTableKind: None)
!2429 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2430 = !{!592, !566, !154, !121, !2431, !2448}
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2433)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2434)
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2433, file: !356, line: 413, baseType: !1373, size: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2433, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2433, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2433, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2433, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2433, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2433, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2433, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2433, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2433, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2433, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2433, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2433, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2450, file: !356, line: 447, baseType: !360, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2450, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2450, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2450, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2450, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2450, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2450, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2450, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2450, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2450, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2450, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2450, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2450, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2450, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2450, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2450, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2450, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2450, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2450, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2450, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2450, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2473 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2474, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2475, splitDebugInlining: false, nameTableKind: None)
!2474 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2475 = !{!2476, !102, !103}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2478)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2478, file: !356, line: 447, baseType: !360, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2478, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2478, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2478, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2478, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2478, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2478, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2478, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2478, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2478, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2478, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2478, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2478, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2478, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2478, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2478, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2478, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2478, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2478, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2478, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2478, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2503, splitDebugInlining: false, nameTableKind: None)
!2502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2503 = !{!146, !957, !200, !792, !2504, !155, !102}
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2507, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2508, splitDebugInlining: false, nameTableKind: None)
!2507 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2511, file: !116, line: 338, baseType: !120, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2511, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2511, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2511, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2511, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2511, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2511, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2511, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2511, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2511, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2511, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2511, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2511, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2511, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2511, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2511, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2511, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2511, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2511, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2511, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2511, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2511, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2511, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2511, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2511, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2511, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2511, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2511, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2511, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2511, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2511, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2511, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2549, retainedTypes: !2565, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2549 = !{!2550, !2557, !2561}
!2550 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2551, line: 38, baseType: !32, size: 32, elements: !2552)
!2551 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2552 = !{!2553, !2554, !2555, !2556}
!2553 = !DIEnumerator(name: "HAL_OK", value: 0)
!2554 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2555 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2556 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2557 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 184, baseType: !32, size: 32, elements: !2558)
!2558 = !{!2559, !2560}
!2559 = !DIEnumerator(name: "RESET", value: 0)
!2560 = !DIEnumerator(name: "SET", value: 1)
!2561 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 190, baseType: !32, size: 32, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIEnumerator(name: "DISABLE", value: 0)
!2564 = !DIEnumerator(name: "ENABLE", value: 1)
!2565 = !{!102, !2566, !154, !121, !1272, !2602, !2608, !2619, !265, !2620, !1270}
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2568)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2568, file: !116, line: 338, baseType: !120, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2568, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2568, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2568, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2568, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2568, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2568, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2568, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2568, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2568, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2568, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2568, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2568, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2568, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2568, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2568, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2568, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2568, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2568, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2568, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2568, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2568, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2568, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2568, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2568, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2568, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2568, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2568, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2568, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2568, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2568, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2568, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2605)
!2605 = !{!2606, !2607}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2604, file: !116, line: 328, baseType: !120, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2604, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2611)
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2610, file: !116, line: 252, baseType: !120, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2610, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2610, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2610, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2610, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2610, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2610, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !2623)
!2623 = !{!2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2622, file: !116, line: 267, baseType: !120, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2622, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2622, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2622, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2622, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2622, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2622, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2622, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2622, file: !116, line: 275, baseType: !946, size: 64, offset: 256)
!2633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2635, retainedTypes: !2636, splitDebugInlining: false, nameTableKind: None)
!2634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2635 = !{!630}
!2636 = !{!2637, !121, !2645, !2651, !2662}
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2639, file: !356, line: 766, baseType: !120, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2639, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2639, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2639, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2648)
!2648 = !{!2649, !2650}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2647, file: !116, line: 328, baseType: !120, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2647, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2654)
!2654 = !{!2655, !2656, !2657, !2658, !2659, !2660, !2661}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2653, file: !116, line: 252, baseType: !120, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2653, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2653, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2653, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2653, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2653, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2653, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2664)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2664, file: !116, line: 338, baseType: !120, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2664, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2664, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2664, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2664, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2664, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2664, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2664, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2664, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2664, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2664, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2664, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2664, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2664, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2664, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2664, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2664, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2664, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2664, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2664, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2664, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2664, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2664, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2664, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2664, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2664, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2664, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2664, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2664, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2664, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2664, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2664, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2700, splitDebugInlining: false, nameTableKind: None)
!2699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2700 = !{!102, !200}
!2701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2703, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2703 = !{!2704, !2711, !30}
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2705, line: 14, baseType: !32, size: 32, elements: !2706)
!2705 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !{!2707, !2708, !2709, !2710}
!2707 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2708 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2709 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2710 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2705, line: 42, baseType: !32, size: 32, elements: !2712)
!2712 = !{!2713, !2714, !2715, !2716, !2717, !2718}
!2713 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2714 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2715 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2716 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2717 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2718 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2720 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2723, splitDebugInlining: false, nameTableKind: None)
!2722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2723 = !{!22, !102, !103}
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!2726 = !{!"Ubuntu clang version 14.0.6"}
!2727 = !{i32 7, !"Dwarf Version", i32 4}
!2728 = !{i32 2, !"Debug Info Version", i32 3}
!2729 = !{i32 1, !"wchar_size", i32 4}
!2730 = !{i32 1, !"min_enum_size", i32 4}
!2731 = !{i32 1, !"branch-target-enforcement", i32 0}
!2732 = !{i32 1, !"sign-return-address", i32 0}
!2733 = !{i32 1, !"sign-return-address-all", i32 0}
!2734 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2735 = !{i32 7, !"frame-pointer", i32 2}
!2736 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2737, file: !2737, line: 26, type: !2738, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !322)
!2737 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2738 = !DISubroutineType(types: !2739)
!2739 = !{null}
!2740 = !DILocation(line: 28, column: 1, scope: !2736)
!2741 = !{i64 2154340036, i64 2154340056, i64 2154340119}
!2742 = !DILocation(line: 29, column: 1, scope: !2736)
!2743 = !{i64 2154340451, i64 2154340471, i64 2154340534}
!2744 = !DILocation(line: 30, column: 1, scope: !2736)
!2745 = !{i64 2154340870, i64 2154340890, i64 2154340953}
!2746 = !DILocation(line: 31, column: 1, scope: !2736)
!2747 = !{i64 2154341289, i64 2154341309, i64 2154341372}
!2748 = !DILocation(line: 33, column: 1, scope: !2736)
!2749 = !{i64 2154341581, i64 2154341601, i64 2154341664}
!2750 = !DILocation(line: 35, column: 1, scope: !2736)
!2751 = !{i64 2154341906, i64 2154341926, i64 2154341989}
!2752 = !DILocation(line: 50, column: 1, scope: !2736)
!2753 = !{i64 2154342333, i64 2154342353, i64 2154342416}
!2754 = !DILocation(line: 54, column: 1, scope: !2736)
!2755 = !{i64 2154342772, i64 2154342792, i64 2154342855}
!2756 = !DILocation(line: 61, column: 1, scope: !2736)
!2757 = !{i64 2154343089, i64 2154343109, i64 2154343172}
!2758 = !DILocation(line: 63, column: 1, scope: !2736)
!2759 = !{i64 2154343469, i64 2154343489, i64 2154343552}
!2760 = !DILocation(line: 64, column: 1, scope: !2736)
!2761 = !{i64 2154343991, i64 2154344011, i64 2154344074}
!2762 = !DILocation(line: 65, column: 1, scope: !2736)
!2763 = !{i64 2154344489, i64 2154344509, i64 2154344572}
!2764 = !DILocation(line: 66, column: 1, scope: !2736)
!2765 = !{i64 2154344971, i64 2154344991, i64 2154345054}
!2766 = !DILocation(line: 67, column: 1, scope: !2736)
!2767 = !{i64 2154345478, i64 2154345498, i64 2154345561}
!2768 = !DILocation(line: 68, column: 1, scope: !2736)
!2769 = !{i64 2154345966, i64 2154345986, i64 2154346049}
!2770 = !DILocation(line: 70, column: 1, scope: !2736)
!2771 = !{i64 2154346434, i64 2154346454, i64 2154346517}
!2772 = !DILocation(line: 71, column: 1, scope: !2736)
!2773 = !{i64 2154346876, i64 2154346896, i64 2154346959}
!2774 = !DILocation(line: 72, column: 1, scope: !2736)
!2775 = !{i64 2154347334, i64 2154347354, i64 2154347417}
!2776 = !DILocation(line: 79, column: 1, scope: !2736)
!2777 = !{i64 2154347788, i64 2154347808, i64 2154347871}
!2778 = !DILocation(line: 80, column: 1, scope: !2736)
!2779 = !{i64 2154348299, i64 2154348319, i64 2154348382}
!2780 = !DILocation(line: 82, column: 1, scope: !2736)
!2781 = !{i64 2154352851, i64 2154352871, i64 2154352934}
!2782 = !DILocation(line: 97, column: 1, scope: !2736)
!2783 = !{i64 2154353188, i64 2154353208, i64 2154353271}
!2784 = !DILocation(line: 99, column: 1, scope: !2736)
!2785 = !{i64 2154353406, i64 2154353426, i64 2154353489}
!2786 = !DILocation(line: 102, column: 1, scope: !2736)
!2787 = !{i64 2154353663, i64 2154353683, i64 2154353746}
!2788 = !DILocation(line: 105, column: 1, scope: !2736)
!2789 = !{i64 2154353903, i64 2154353923, i64 2154353986}
!2790 = !DILocation(line: 115, column: 1, scope: !2736)
!2791 = !{i64 2154354242, i64 2154354262, i64 2154354325}
!2792 = !DILocation(line: 118, column: 1, scope: !2736)
!2793 = !{i64 2154354586, i64 2154354606, i64 2154354669}
!2794 = !DILocation(line: 32, column: 1, scope: !2795)
!2795 = !DILexicalBlockFile(scope: !2736, file: !2796, discriminator: 0)
!2796 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2797 = !{i64 2154354942, i64 2154354962, i64 2154355025}
!2798 = !DILocation(line: 33, column: 1, scope: !2795)
!2799 = !{i64 2154355454, i64 2154355474, i64 2154355537}
!2800 = !DILocation(line: 53, column: 1, scope: !2795)
!2801 = !{i64 2154355962, i64 2154355982, i64 2154356045}
!2802 = !DILocation(line: 54, column: 1, scope: !2795)
!2803 = !{i64 2154356380, i64 2154356400, i64 2154356463}
!2804 = !DILocation(line: 55, column: 1, scope: !2795)
!2805 = !{i64 2154356798, i64 2154356818, i64 2154356881}
!2806 = !DILocation(line: 56, column: 1, scope: !2795)
!2807 = !{i64 2154357216, i64 2154357236, i64 2154357299}
!2808 = !DILocation(line: 57, column: 1, scope: !2795)
!2809 = !{i64 2154357634, i64 2154357654, i64 2154357717}
!2810 = !DILocation(line: 58, column: 1, scope: !2795)
!2811 = !{i64 2154358052, i64 2154358072, i64 2154358135}
!2812 = !DILocation(line: 59, column: 1, scope: !2795)
!2813 = !{i64 2154358470, i64 2154358490, i64 2154358553}
!2814 = !DILocation(line: 60, column: 1, scope: !2795)
!2815 = !{i64 2154358894, i64 2154358914, i64 2154358977}
!2816 = !DILocation(line: 61, column: 1, scope: !2795)
!2817 = !{i64 2154359211, i64 2154359231, i64 2154359294}
!2818 = !DILocation(line: 70, column: 1, scope: !2795)
!2819 = !{i64 2154359440, i64 2154359460, i64 2154359523}
!2820 = !DILocation(line: 72, column: 1, scope: !2795)
!2821 = !{i64 2154359772, i64 2154359792, i64 2154359855}
!2822 = !DILocation(line: 73, column: 1, scope: !2795)
!2823 = !{i64 2154360222, i64 2154360242, i64 2154360305}
!2824 = !DILocation(line: 74, column: 1, scope: !2795)
!2825 = !{i64 2154360672, i64 2154360692, i64 2154360755}
!2826 = !DILocation(line: 75, column: 1, scope: !2795)
!2827 = !{i64 2154361122, i64 2154361142, i64 2154361205}
!2828 = !DILocation(line: 76, column: 1, scope: !2795)
!2829 = !{i64 2154361572, i64 2154361592, i64 2154361655}
!2830 = !DILocation(line: 77, column: 1, scope: !2795)
!2831 = !{i64 2154362022, i64 2154362042, i64 2154362105}
!2832 = !DILocation(line: 78, column: 1, scope: !2795)
!2833 = !{i64 2154366533, i64 2154366553, i64 2154366616}
!2834 = !DILocation(line: 79, column: 1, scope: !2795)
!2835 = !{i64 2154366983, i64 2154367003, i64 2154367066}
!2836 = !DILocation(line: 80, column: 1, scope: !2795)
!2837 = !{i64 2154367436, i64 2154367456, i64 2154367519}
!2838 = !DILocation(line: 84, column: 1, scope: !2795)
!2839 = !{i64 2154367768, i64 2154367788, i64 2154367851}
!2840 = !DILocation(line: 91, column: 1, scope: !2795)
!2841 = !{i64 2154368165, i64 2154368185, i64 2154368248}
!2842 = !DILocation(line: 93, column: 1, scope: !2795)
!2843 = !{i64 2154368532, i64 2154368552, i64 2154368615}
!2844 = !DILocation(line: 106, column: 1, scope: !2795)
!2845 = !{i64 2154368802, i64 2154368822, i64 2154368885}
!2846 = !DILocation(line: 11, column: 1, scope: !2847)
!2847 = !DILexicalBlockFile(scope: !2736, file: !2848, discriminator: 0)
!2848 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2849 = distinct !DISubprogram(name: "main", scope: !2850, file: !2850, line: 9, type: !2738, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !322)
!2850 = !DIFile(filename: "zephyr/samples/basic/minimal/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2851 = !DILocation(line: 11, column: 1, scope: !2849)
!2852 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2853)
!2853 = !{!2854}
!2854 = !DILocalVariable(name: "c", arg: 1, scope: !2852, file: !105, line: 45, type: !103)
!2855 = !DILocation(line: 0, scope: !2852)
!2856 = !DILocation(line: 50, column: 2, scope: !2852)
!2857 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !2858, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2860)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{null, !106}
!2860 = !{!2861}
!2861 = !DILocalVariable(name: "fn", arg: 1, scope: !2857, file: !105, line: 63, type: !106)
!2862 = !DILocation(line: 0, scope: !2857)
!2863 = !DILocation(line: 65, column: 12, scope: !2857)
!2864 = !DILocation(line: 66, column: 1, scope: !2857)
!2865 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !2866, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!102}
!2868 = !DILocation(line: 78, column: 9, scope: !2865)
!2869 = !DILocation(line: 78, column: 2, scope: !2865)
!2870 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !2871, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2880)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{null, !144, !2873}
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2874, line: 99, baseType: !2875)
!2874 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2874, line: 40, baseType: !2876)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2878)
!2878 = !{!2879}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2877, file: !105, line: 79, baseType: !102, size: 32)
!2880 = !{!2881, !2882, !2883}
!2881 = !DILocalVariable(name: "fmt", arg: 1, scope: !2870, file: !105, line: 113, type: !144)
!2882 = !DILocalVariable(name: "ap", arg: 2, scope: !2870, file: !105, line: 113, type: !2873)
!2883 = !DILocalVariable(name: "ctx", scope: !2884, file: !105, line: 121, type: !2886)
!2884 = distinct !DILexicalBlock(scope: !2885, file: !105, line: 120, column: 27)
!2885 = distinct !DILexicalBlock(scope: !2870, file: !105, line: 120, column: 6)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !2887)
!2887 = !{!2888, !2889}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2886, file: !105, line: 85, baseType: !32, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2886, file: !105, line: 86, baseType: !2890, offset: 32)
!2890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2891)
!2891 = !{!2892}
!2892 = !DISubrange(count: 0)
!2893 = !DILocation(line: 0, scope: !2870)
!2894 = !DILocation(line: 148, column: 3, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2885, file: !105, line: 138, column: 9)
!2896 = !DILocation(line: 155, column: 1, scope: !2870)
!2897 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !2898, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2900)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!103, !103, !102}
!2900 = !{!2901, !2902}
!2901 = !DILocalVariable(name: "c", arg: 1, scope: !2897, file: !105, line: 107, type: !103)
!2902 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2897, file: !105, line: 107, type: !102)
!2903 = !DILocation(line: 0, scope: !2897)
!2904 = !DILocation(line: 110, column: 9, scope: !2897)
!2905 = !DILocation(line: 110, column: 2, scope: !2897)
!2906 = distinct !DISubprogram(name: "cbvprintf", scope: !2907, file: !2907, line: 739, type: !2908, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2914)
!2907 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!103, !2910, !102, !144, !2873}
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2907, line: 297, baseType: !2911)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 32)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{!103, null}
!2914 = !{!2915, !2916, !2917, !2918}
!2915 = !DILocalVariable(name: "out", arg: 1, scope: !2906, file: !2907, line: 739, type: !2910)
!2916 = !DILocalVariable(name: "ctx", arg: 2, scope: !2906, file: !2907, line: 739, type: !102)
!2917 = !DILocalVariable(name: "format", arg: 3, scope: !2906, file: !2907, line: 739, type: !144)
!2918 = !DILocalVariable(name: "ap", arg: 4, scope: !2906, file: !2907, line: 739, type: !2873)
!2919 = !DILocation(line: 0, scope: !2906)
!2920 = !DILocation(line: 741, column: 9, scope: !2906)
!2921 = !DILocation(line: 741, column: 2, scope: !2906)
!2922 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !2923, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2925)
!2923 = !DISubroutineType(types: !2924)
!2924 = !{null, !957, !200}
!2925 = !{!2926, !2927, !2928}
!2926 = !DILocalVariable(name: "c", arg: 1, scope: !2922, file: !105, line: 157, type: !957)
!2927 = !DILocalVariable(name: "n", arg: 2, scope: !2922, file: !105, line: 157, type: !200)
!2928 = !DILocalVariable(name: "i", scope: !2922, file: !105, line: 159, type: !200)
!2929 = !DILocation(line: 0, scope: !2922)
!2930 = !DILocation(line: 164, column: 16, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2932, file: !105, line: 164, column: 2)
!2932 = distinct !DILexicalBlock(scope: !2922, file: !105, line: 164, column: 2)
!2933 = !DILocation(line: 164, column: 2, scope: !2932)
!2934 = !DILocation(line: 165, column: 3, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !105, line: 164, column: 26)
!2936 = !DILocation(line: 165, column: 13, scope: !2935)
!2937 = !DILocation(line: 164, column: 22, scope: !2931)
!2938 = distinct !{!2938, !2933, !2939}
!2939 = !DILocation(line: 166, column: 2, scope: !2932)
!2940 = !DILocation(line: 171, column: 1, scope: !2922)
!2941 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !2942, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2944)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{null, !144, null}
!2944 = !{!2945, !2946}
!2945 = !DILocalVariable(name: "fmt", arg: 1, scope: !2941, file: !105, line: 203, type: !144)
!2946 = !DILocalVariable(name: "ap", scope: !2941, file: !105, line: 205, type: !2873)
!2947 = !DILocation(line: 0, scope: !2941)
!2948 = !DILocation(line: 205, column: 2, scope: !2941)
!2949 = !DILocation(line: 205, column: 10, scope: !2941)
!2950 = !DILocation(line: 207, column: 2, scope: !2941)
!2951 = !DILocation(line: 209, column: 2, scope: !2941)
!2952 = !DILocation(line: 211, column: 2, scope: !2941)
!2953 = !DILocation(line: 212, column: 1, scope: !2941)
!2954 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !2955, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2957)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!103, !957, !200, !144, null}
!2957 = !{!2958, !2959, !2960, !2961, !2962}
!2958 = !DILocalVariable(name: "str", arg: 1, scope: !2954, file: !105, line: 239, type: !957)
!2959 = !DILocalVariable(name: "size", arg: 2, scope: !2954, file: !105, line: 239, type: !200)
!2960 = !DILocalVariable(name: "fmt", arg: 3, scope: !2954, file: !105, line: 239, type: !144)
!2961 = !DILocalVariable(name: "ap", scope: !2954, file: !105, line: 241, type: !2873)
!2962 = !DILocalVariable(name: "ret", scope: !2954, file: !105, line: 242, type: !103)
!2963 = !DILocation(line: 0, scope: !2954)
!2964 = !DILocation(line: 241, column: 2, scope: !2954)
!2965 = !DILocation(line: 241, column: 10, scope: !2954)
!2966 = !DILocation(line: 244, column: 2, scope: !2954)
!2967 = !DILocation(line: 245, column: 8, scope: !2954)
!2968 = !DILocation(line: 246, column: 2, scope: !2954)
!2969 = !DILocation(line: 249, column: 1, scope: !2954)
!2970 = !DILocation(line: 248, column: 2, scope: !2954)
!2971 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !2972, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2974)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!103, !957, !200, !144, !2873}
!2974 = !{!2975, !2976, !2977, !2978, !2979}
!2975 = !DILocalVariable(name: "str", arg: 1, scope: !2971, file: !105, line: 251, type: !957)
!2976 = !DILocalVariable(name: "size", arg: 2, scope: !2971, file: !105, line: 251, type: !200)
!2977 = !DILocalVariable(name: "fmt", arg: 3, scope: !2971, file: !105, line: 251, type: !144)
!2978 = !DILocalVariable(name: "ap", arg: 4, scope: !2971, file: !105, line: 251, type: !2873)
!2979 = !DILocalVariable(name: "ctx", scope: !2971, file: !105, line: 253, type: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !2981)
!2981 = !{!2982, !2983, !2984}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2980, file: !105, line: 218, baseType: !957, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2980, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2980, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!2985 = !DILocation(line: 0, scope: !2971)
!2986 = !DILocation(line: 253, column: 2, scope: !2971)
!2987 = !DILocation(line: 253, column: 21, scope: !2971)
!2988 = !DILocation(line: 253, column: 27, scope: !2971)
!2989 = !DILocation(line: 255, column: 2, scope: !2971)
!2990 = !DILocation(line: 257, column: 10, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2971, file: !105, line: 257, column: 6)
!2992 = !DILocation(line: 257, column: 22, scope: !2991)
!2993 = !DILocation(line: 257, column: 16, scope: !2991)
!2994 = !DILocation(line: 257, column: 6, scope: !2971)
!2995 = !DILocation(line: 258, column: 3, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2991, file: !105, line: 257, column: 27)
!2997 = !DILocation(line: 258, column: 18, scope: !2996)
!2998 = !DILocation(line: 259, column: 2, scope: !2996)
!2999 = !DILocation(line: 262, column: 1, scope: !2971)
!3000 = !DILocation(line: 261, column: 2, scope: !2971)
!3001 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3002, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3005)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!103, !103, !3004}
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 32)
!3005 = !{!3006, !3007}
!3006 = !DILocalVariable(name: "c", arg: 1, scope: !3001, file: !105, line: 223, type: !103)
!3007 = !DILocalVariable(name: "ctx", arg: 2, scope: !3001, file: !105, line: 223, type: !3004)
!3008 = !DILocation(line: 0, scope: !3001)
!3009 = !DILocation(line: 225, column: 11, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3001, file: !105, line: 225, column: 6)
!3011 = !DILocation(line: 225, column: 15, scope: !3010)
!3012 = !DILocation(line: 0, scope: !3010)
!3013 = !DILocation(line: 225, column: 23, scope: !3010)
!3014 = !DILocation(line: 225, column: 45, scope: !3010)
!3015 = !DILocation(line: 225, column: 37, scope: !3010)
!3016 = !DILocation(line: 225, column: 6, scope: !3001)
!3017 = !DILocation(line: 226, column: 8, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3010, file: !105, line: 225, column: 50)
!3019 = !DILocation(line: 226, column: 13, scope: !3018)
!3020 = !DILocation(line: 227, column: 3, scope: !3018)
!3021 = !DILocation(line: 230, column: 29, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3001, file: !105, line: 230, column: 6)
!3023 = !DILocation(line: 230, column: 17, scope: !3022)
!3024 = !DILocation(line: 230, column: 6, scope: !3001)
!3025 = !DILocation(line: 231, column: 22, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3022, file: !105, line: 230, column: 34)
!3027 = !DILocation(line: 231, column: 3, scope: !3026)
!3028 = !DILocation(line: 231, column: 26, scope: !3026)
!3029 = !DILocation(line: 232, column: 2, scope: !3026)
!3030 = !DILocation(line: 233, column: 28, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3022, file: !105, line: 232, column: 9)
!3032 = !DILocation(line: 233, column: 22, scope: !3031)
!3033 = !DILocation(line: 233, column: 3, scope: !3031)
!3034 = !DILocation(line: 233, column: 26, scope: !3031)
!3035 = !DILocation(line: 237, column: 1, scope: !3001)
!3036 = distinct !DISubprogram(name: "z_thread_entry", scope: !3037, file: !3037, line: 30, type: !3038, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !3045)
!3037 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3038 = !DISubroutineType(types: !3039)
!3039 = !{null, !3040, !102, !102, !102}
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3041, line: 46, baseType: !3042)
!3041 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{null, !102, !102, !102}
!3045 = !{!3046, !3047, !3048, !3049}
!3046 = !DILocalVariable(name: "entry", arg: 1, scope: !3036, file: !3037, line: 30, type: !3040)
!3047 = !DILocalVariable(name: "p1", arg: 2, scope: !3036, file: !3037, line: 31, type: !102)
!3048 = !DILocalVariable(name: "p2", arg: 3, scope: !3036, file: !3037, line: 31, type: !102)
!3049 = !DILocalVariable(name: "p3", arg: 4, scope: !3036, file: !3037, line: 31, type: !102)
!3050 = !DILocation(line: 0, scope: !3036)
!3051 = !DILocation(line: 36, column: 2, scope: !3036)
!3052 = !DILocation(line: 38, column: 17, scope: !3036)
!3053 = !DILocation(line: 38, column: 2, scope: !3036)
!3054 = !DILocation(line: 45, column: 2, scope: !3036)
!3055 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3056, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !322)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!3058}
!3058 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3059)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 32)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3061)
!3061 = !{!3062, !3120, !3132, !3133, !3134, !3135, !3141, !3154}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3060, file: !211, line: 247, baseType: !3063, size: 384)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3064)
!3064 = !{!3065, !3089, !3096, !3097, !3098, !3107, !3108, !3109}
!3065 = !DIDerivedType(tag: DW_TAG_member, scope: !3063, file: !211, line: 60, baseType: !3066, size: 64)
!3066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3063, file: !211, line: 60, size: 64, elements: !3067)
!3067 = !{!3068, !3083}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3066, file: !211, line: 61, baseType: !3069, size: 64)
!3069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3070)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3071)
!3071 = !{!3072, !3078}
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !221, line: 38, baseType: !3073, size: 32)
!3073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !221, line: 38, size: 32, elements: !3074)
!3074 = !{!3075, !3077}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3073, file: !221, line: 39, baseType: !3076, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3073, file: !221, line: 40, baseType: !3076, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !221, line: 42, baseType: !3079, size: 32, offset: 32)
!3079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !221, line: 42, size: 32, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3079, file: !221, line: 43, baseType: !3076, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3079, file: !221, line: 44, baseType: !3076, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3066, file: !211, line: 62, baseType: !3084, size: 64)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3085)
!3085 = !{!3086}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3084, file: !237, line: 50, baseType: !3087, size: 64)
!3087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3088, size: 64, elements: !242)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3063, file: !211, line: 68, baseType: !3090, size: 32, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3092)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3092, file: !247, line: 232, baseType: !3095, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3070)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3063, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3063, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !3063, file: !211, line: 90, baseType: !3099, size: 16, offset: 112)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3063, file: !211, line: 90, size: 16, elements: !3100)
!3100 = !{!3101, !3106}
!3101 = !DIDerivedType(tag: DW_TAG_member, scope: !3099, file: !211, line: 91, baseType: !3102, size: 16)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3099, file: !211, line: 91, size: 16, elements: !3103)
!3103 = !{!3104, !3105}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3102, file: !211, line: 96, baseType: !261, size: 8)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3102, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3099, file: !211, line: 100, baseType: !265, size: 16)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3063, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3063, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3063, file: !211, line: 131, baseType: !3110, size: 192, offset: 192)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3111)
!3111 = !{!3112, !3113, !3119}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3110, file: !247, line: 245, baseType: !3069, size: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3110, file: !247, line: 246, baseType: !3114, size: 32, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3115)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 32)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{null, !3118}
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3110, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3060, file: !211, line: 250, baseType: !3121, size: 288, offset: 384)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3121, file: !284, line: 26, baseType: !121, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3121, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3121, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3121, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3121, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3121, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3121, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3121, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3121, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3060, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3060, file: !211, line: 256, baseType: !3091, size: 64, offset: 704)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3060, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3060, file: !211, line: 300, baseType: !3136, size: 96, offset: 800)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3137)
!3137 = !{!3138, !3139, !3140}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3136, file: !211, line: 153, baseType: !22, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3136, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3136, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3060, file: !211, line: 325, baseType: !3142, size: 32, offset: 896)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 32)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3144)
!3144 = !{!3145, !3151, !3152}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3143, file: !307, line: 5074, baseType: !3146, size: 96)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3147)
!3147 = !{!3148, !3149, !3150}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3146, file: !311, line: 57, baseType: !314, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3146, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3146, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3143, file: !307, line: 5075, baseType: !3091, size: 64, offset: 96)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3143, file: !307, line: 5076, baseType: !3153, offset: 160)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3060, file: !211, line: 343, baseType: !3155, size: 64, offset: 928)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3156)
!3156 = !{!3157, !3158}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3155, file: !284, line: 63, baseType: !121, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3155, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3159 = !DILocation(line: 535, column: 9, scope: !3055)
!3160 = !DILocation(line: 535, column: 2, scope: !3055)
!3161 = distinct !DISubprogram(name: "k_thread_abort", scope: !3162, file: !3162, line: 188, type: !3163, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !3165)
!3162 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!3163 = !DISubroutineType(types: !3164)
!3164 = !{null, !3058}
!3165 = !{!3166}
!3166 = !DILocalVariable(name: "thread", arg: 1, scope: !3161, file: !3162, line: 188, type: !3058)
!3167 = !DILocation(line: 0, scope: !3161)
!3168 = !DILocation(line: 197, column: 2, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3161, file: !3162, line: 197, column: 2)
!3170 = !{i64 2154060995}
!3171 = !DILocation(line: 198, column: 2, scope: !3161)
!3172 = !DILocation(line: 199, column: 1, scope: !3161)
!3173 = distinct !DISubprogram(name: "z_current_get", scope: !3162, file: !3162, line: 173, type: !3056, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !322)
!3174 = !DILocation(line: 180, column: 2, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3173, file: !3162, line: 180, column: 2)
!3176 = !{i64 2154060927}
!3177 = !DILocation(line: 181, column: 9, scope: !3173)
!3178 = !DILocation(line: 181, column: 2, scope: !3173)
!3179 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2162, file: !2162, line: 1338, type: !3180, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3188)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!103, !2910, !102, !144, !3182, !121}
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2874, line: 99, baseType: !3183)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2874, line: 40, baseType: !3184)
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2162, baseType: !3185)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3186)
!3186 = !{!3187}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3185, file: !2162, baseType: !102, size: 32)
!3188 = !{!3189, !3190, !3191, !3192, !3193, !3194, !3198, !3199, !3200, !3202, !3207, !3252, !3255, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3267, !3268, !3269, !3273, !3276, !3278, !3281, !3282, !3283, !3288, !3294, !3297, !3301, !3307, !3311, !3314, !3316, !3319}
!3189 = !DILocalVariable(name: "out", arg: 1, scope: !3179, file: !2162, line: 1338, type: !2910)
!3190 = !DILocalVariable(name: "ctx", arg: 2, scope: !3179, file: !2162, line: 1338, type: !102)
!3191 = !DILocalVariable(name: "fp", arg: 3, scope: !3179, file: !2162, line: 1338, type: !144)
!3192 = !DILocalVariable(name: "ap", arg: 4, scope: !3179, file: !2162, line: 1339, type: !3182)
!3193 = !DILocalVariable(name: "flags", arg: 5, scope: !3179, file: !2162, line: 1339, type: !121)
!3194 = !DILocalVariable(name: "buf", scope: !3179, file: !2162, line: 1341, type: !3195)
!3195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !3196)
!3196 = !{!3197}
!3197 = !DISubrange(count: 22)
!3198 = !DILocalVariable(name: "count", scope: !3179, file: !2162, line: 1342, type: !200)
!3199 = !DILocalVariable(name: "sint", scope: !3179, file: !2162, line: 1343, type: !2181)
!3200 = !DILocalVariable(name: "tagged_ap", scope: !3179, file: !2162, line: 1345, type: !3201)
!3201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3202 = !DILocalVariable(name: "rc", scope: !3203, file: !2162, line: 1377, type: !103)
!3203 = distinct !DILexicalBlock(scope: !3204, file: !2162, line: 1377, column: 4)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !2162, line: 1376, column: 19)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1376, column: 7)
!3206 = distinct !DILexicalBlock(scope: !3179, file: !2162, line: 1375, column: 19)
!3207 = !DILocalVariable(name: "state", scope: !3206, file: !2162, line: 1395, type: !3208)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3179, file: !2162, line: 1392, size: 192, elements: !3209)
!3209 = !{!3210, !3220}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3208, file: !2162, line: 1393, baseType: !3211, size: 64)
!3211 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2162, line: 166, size: 64, elements: !3212)
!3212 = !{!3213, !3214, !3215, !3217, !3219}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3211, file: !2162, line: 168, baseType: !2181, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3211, file: !2162, line: 171, baseType: !2184, size: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3211, file: !2162, line: 174, baseType: !3216, size: 64)
!3216 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3211, file: !2162, line: 177, baseType: !3218, size: 64)
!3218 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3211, file: !2162, line: 180, baseType: !102, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3208, file: !2162, line: 1394, baseType: !3221, size: 96, offset: 64)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2162, line: 189, size: 96, elements: !3222)
!3222 = !{!3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3247}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3221, file: !2162, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3221, file: !2162, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3221, file: !2162, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3221, file: !2162, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3221, file: !2162, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3221, file: !2162, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3221, file: !2162, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3221, file: !2162, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3221, file: !2162, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3221, file: !2162, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3221, file: !2162, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3221, file: !2162, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3221, file: !2162, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3221, file: !2162, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3221, file: !2162, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3221, file: !2162, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3221, file: !2162, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3221, file: !2162, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3221, file: !2162, line: 260, baseType: !155, size: 8, offset: 24)
!3242 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !2162, line: 262, baseType: !3243, size: 32, offset: 32)
!3243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !2162, line: 262, size: 32, elements: !3244)
!3244 = !{!3245, !3246}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3243, file: !2162, line: 267, baseType: !103, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3243, file: !2162, line: 289, baseType: !103, size: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !2162, line: 292, baseType: !3248, size: 32, offset: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !2162, line: 292, size: 32, elements: !3249)
!3249 = !{!3250, !3251}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3248, file: !2162, line: 297, baseType: !103, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3248, file: !2162, line: 306, baseType: !103, size: 32)
!3252 = !DILocalVariable(name: "conv", scope: !3206, file: !2162, line: 1400, type: !3253)
!3253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3254)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 32)
!3255 = !DILocalVariable(name: "value", scope: !3206, file: !2162, line: 1401, type: !3256)
!3256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3257)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 32)
!3258 = !DILocalVariable(name: "sp", scope: !3206, file: !2162, line: 1402, type: !144)
!3259 = !DILocalVariable(name: "width", scope: !3206, file: !2162, line: 1403, type: !103)
!3260 = !DILocalVariable(name: "precision", scope: !3206, file: !2162, line: 1404, type: !103)
!3261 = !DILocalVariable(name: "bps", scope: !3206, file: !2162, line: 1405, type: !144)
!3262 = !DILocalVariable(name: "bpe", scope: !3206, file: !2162, line: 1406, type: !144)
!3263 = !DILocalVariable(name: "sign", scope: !3206, file: !2162, line: 1407, type: !146)
!3264 = !DILocalVariable(name: "arg", scope: !3265, file: !2162, line: 1432, type: !103)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !2162, line: 1431, column: 24)
!3266 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1431, column: 7)
!3267 = !DILocalVariable(name: "specifier_cat", scope: !3206, file: !2162, line: 1468, type: !2161)
!3268 = !DILocalVariable(name: "length_mod", scope: !3206, file: !2162, line: 1470, type: !2169)
!3269 = !DILocalVariable(name: "rc", scope: !3270, file: !2162, line: 1575, type: !103)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !2162, line: 1575, column: 4)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !2162, line: 1574, column: 43)
!3272 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1574, column: 7)
!3273 = !DILocalVariable(name: "rc", scope: !3274, file: !2162, line: 1584, type: !103)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1584, column: 4)
!3275 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1582, column: 28)
!3276 = !DILocalVariable(name: "len", scope: !3277, file: !2162, line: 1589, type: !200)
!3277 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1586, column: 13)
!3278 = !DILocalVariable(name: "len", scope: !3279, file: !2162, line: 1641, type: !200)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !2162, line: 1640, column: 24)
!3280 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1640, column: 8)
!3281 = !DILocalVariable(name: "nj_len", scope: !3206, file: !2162, line: 1722, type: !200)
!3282 = !DILocalVariable(name: "pad_len", scope: !3206, file: !2162, line: 1723, type: !103)
!3283 = !DILocalVariable(name: "pad", scope: !3284, file: !2162, line: 1751, type: !146)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !2162, line: 1750, column: 26)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !2162, line: 1750, column: 8)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !2162, line: 1747, column: 18)
!3287 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1747, column: 7)
!3288 = !DILocalVariable(name: "rc", scope: !3289, file: !2162, line: 1758, type: !103)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !2162, line: 1758, column: 7)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !2162, line: 1757, column: 21)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !2162, line: 1757, column: 10)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !2162, line: 1756, column: 26)
!3293 = distinct !DILexicalBlock(scope: !3284, file: !2162, line: 1756, column: 9)
!3294 = !DILocalVariable(name: "rc", scope: !3295, file: !2162, line: 1765, type: !103)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !2162, line: 1765, column: 6)
!3296 = distinct !DILexicalBlock(scope: !3284, file: !2162, line: 1764, column: 25)
!3297 = !DILocalVariable(name: "rc", scope: !3298, file: !2162, line: 1774, type: !103)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !2162, line: 1774, column: 4)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !2162, line: 1773, column: 18)
!3300 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1773, column: 7)
!3301 = !DILocalVariable(name: "rc", scope: !3302, file: !2162, line: 1819, type: !103)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !2162, line: 1819, column: 5)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !2162, line: 1818, column: 44)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !2162, line: 1818, column: 8)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !2162, line: 1817, column: 10)
!3306 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1777, column: 7)
!3307 = !DILocalVariable(name: "rc", scope: !3308, file: !2162, line: 1823, type: !103)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !2162, line: 1823, column: 5)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !2162, line: 1822, column: 26)
!3310 = distinct !DILexicalBlock(scope: !3305, file: !2162, line: 1822, column: 8)
!3311 = !DILocalVariable(name: "rc", scope: !3312, file: !2162, line: 1828, type: !103)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !2162, line: 1828, column: 5)
!3313 = distinct !DILexicalBlock(scope: !3305, file: !2162, line: 1827, column: 26)
!3314 = !DILocalVariable(name: "rc", scope: !3315, file: !2162, line: 1831, type: !103)
!3315 = distinct !DILexicalBlock(scope: !3305, file: !2162, line: 1831, column: 4)
!3316 = !DILocalVariable(name: "rc", scope: !3317, file: !2162, line: 1836, type: !103)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !2162, line: 1836, column: 4)
!3318 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1835, column: 21)
!3319 = !DILabel(scope: !3275, name: "prec_int_pad0", file: !2162, line: 1634)
!3320 = !DILocation(line: 0, scope: !3179)
!3321 = !DILocation(line: 1341, column: 2, scope: !3179)
!3322 = !DILocation(line: 1341, column: 7, scope: !3179)
!3323 = !DILocation(line: 1375, column: 2, scope: !3179)
!3324 = !DILocation(line: 1342, column: 9, scope: !3179)
!3325 = !DILocation(line: 1375, column: 9, scope: !3179)
!3326 = !DILocation(line: 1377, column: 4, scope: !3203)
!3327 = !DILocation(line: 0, scope: !3203)
!3328 = !DILocation(line: 1377, column: 4, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3203, file: !2162, line: 1377, column: 4)
!3330 = distinct !{!3330, !3323, !3331}
!3331 = !DILocation(line: 1839, column: 2, scope: !3179)
!3332 = !DILocation(line: 1392, column: 3, scope: !3206)
!3333 = !DILocation(line: 1395, column: 5, scope: !3206)
!3334 = !DILocation(line: 0, scope: !3206)
!3335 = !DILocation(line: 1409, column: 8, scope: !3206)
!3336 = !DILocation(line: 1414, column: 13, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1414, column: 7)
!3338 = !DILocation(line: 1414, column: 7, scope: !3206)
!3339 = !DILocation(line: 1415, column: 12, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3337, file: !2162, line: 1414, column: 25)
!3341 = !DILocation(line: 1417, column: 14, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3340, file: !2162, line: 1417, column: 8)
!3343 = !DILocation(line: 1417, column: 8, scope: !3340)
!3344 = !DILocation(line: 1418, column: 21, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !2162, line: 1417, column: 19)
!3346 = !DILocation(line: 1419, column: 13, scope: !3345)
!3347 = !DILocation(line: 1420, column: 4, scope: !3345)
!3348 = !DILocation(line: 1421, column: 20, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3337, file: !2162, line: 1421, column: 14)
!3350 = !DILocation(line: 1421, column: 14, scope: !3337)
!3351 = !DILocation(line: 1431, column: 13, scope: !3266)
!3352 = !DILocation(line: 1431, column: 7, scope: !3206)
!3353 = !DILocation(line: 1432, column: 14, scope: !3265)
!3354 = !DILocation(line: 0, scope: !3265)
!3355 = !DILocation(line: 1434, column: 12, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3265, file: !2162, line: 1434, column: 8)
!3357 = !DILocation(line: 1434, column: 8, scope: !3265)
!3358 = !DILocation(line: 1435, column: 24, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3356, file: !2162, line: 1434, column: 17)
!3360 = !DILocation(line: 1436, column: 4, scope: !3359)
!3361 = !DILocation(line: 1439, column: 20, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3266, file: !2162, line: 1439, column: 14)
!3363 = !DILocation(line: 1439, column: 14, scope: !3266)
!3364 = !DILocation(line: 1469, column: 37, scope: !3206)
!3365 = !DILocation(line: 1448, column: 20, scope: !3206)
!3366 = !DILocation(line: 1449, column: 22, scope: !3206)
!3367 = !DILocation(line: 1471, column: 34, scope: !3206)
!3368 = !DILocation(line: 1478, column: 7, scope: !3206)
!3369 = !DILocation(line: 1479, column: 4, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !2162, line: 1478, column: 40)
!3371 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1478, column: 7)
!3372 = !DILocation(line: 1484, column: 19, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3370, file: !2162, line: 1479, column: 24)
!3374 = !DILocation(line: 1484, column: 17, scope: !3373)
!3375 = !DILocation(line: 1485, column: 5, scope: !3373)
!3376 = !DILocation(line: 1492, column: 20, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !2162, line: 1491, column: 12)
!3378 = distinct !DILexicalBlock(scope: !3373, file: !2162, line: 1487, column: 9)
!3379 = !DILocation(line: 1492, column: 18, scope: !3377)
!3380 = !DILocation(line: 1494, column: 5, scope: !3373)
!3381 = !DILocation(line: 1497, column: 23, scope: !3373)
!3382 = !DILocation(line: 1496, column: 17, scope: !3373)
!3383 = !DILocation(line: 1498, column: 5, scope: !3373)
!3384 = !DILocation(line: 1501, column: 23, scope: !3373)
!3385 = !DILocation(line: 1500, column: 17, scope: !3373)
!3386 = !DILocation(line: 1502, column: 5, scope: !3373)
!3387 = !DILocation(line: 1513, column: 23, scope: !3373)
!3388 = !DILocation(line: 1513, column: 6, scope: !3373)
!3389 = !DILocation(line: 1512, column: 17, scope: !3373)
!3390 = !DILocation(line: 1514, column: 5, scope: !3373)
!3391 = !DILocation(line: 0, scope: !3373)
!3392 = !DILocation(line: 1516, column: 8, scope: !3370)
!3393 = !DILocation(line: 1517, column: 19, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !2162, line: 1516, column: 33)
!3395 = distinct !DILexicalBlock(scope: !3370, file: !2162, line: 1516, column: 8)
!3396 = !DILocation(line: 1517, column: 17, scope: !3394)
!3397 = !DILocation(line: 1518, column: 4, scope: !3394)
!3398 = !DILocation(line: 1519, column: 19, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !2162, line: 1518, column: 39)
!3400 = distinct !DILexicalBlock(scope: !3395, file: !2162, line: 1518, column: 15)
!3401 = !DILocation(line: 1519, column: 17, scope: !3399)
!3402 = !DILocation(line: 1520, column: 4, scope: !3399)
!3403 = !DILocation(line: 1522, column: 4, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !2162, line: 1521, column: 47)
!3405 = distinct !DILexicalBlock(scope: !3371, file: !2162, line: 1521, column: 14)
!3406 = !DILocation(line: 1527, column: 19, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3404, file: !2162, line: 1522, column: 24)
!3408 = !DILocation(line: 1527, column: 17, scope: !3407)
!3409 = !DILocation(line: 1528, column: 5, scope: !3407)
!3410 = !DILocation(line: 0, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3407, file: !2162, line: 1530, column: 9)
!3412 = !DILocation(line: 1540, column: 23, scope: !3407)
!3413 = !DILocation(line: 1539, column: 17, scope: !3407)
!3414 = !DILocation(line: 1542, column: 5, scope: !3407)
!3415 = !DILocation(line: 1545, column: 23, scope: !3407)
!3416 = !DILocation(line: 1544, column: 17, scope: !3407)
!3417 = !DILocation(line: 1547, column: 5, scope: !3407)
!3418 = !DILocation(line: 1551, column: 23, scope: !3407)
!3419 = !DILocation(line: 1551, column: 6, scope: !3407)
!3420 = !DILocation(line: 1550, column: 17, scope: !3407)
!3421 = !DILocation(line: 1552, column: 5, scope: !3407)
!3422 = !DILocation(line: 0, scope: !3407)
!3423 = !DILocation(line: 1554, column: 8, scope: !3404)
!3424 = !DILocation(line: 1555, column: 19, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !2162, line: 1554, column: 33)
!3426 = distinct !DILexicalBlock(scope: !3404, file: !2162, line: 1554, column: 8)
!3427 = !DILocation(line: 1555, column: 17, scope: !3425)
!3428 = !DILocation(line: 1556, column: 4, scope: !3425)
!3429 = !DILocation(line: 1557, column: 19, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !2162, line: 1556, column: 39)
!3431 = distinct !DILexicalBlock(scope: !3426, file: !2162, line: 1556, column: 15)
!3432 = !DILocation(line: 1557, column: 17, scope: !3430)
!3433 = !DILocation(line: 1558, column: 4, scope: !3430)
!3434 = !DILocation(line: 0, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !2162, line: 1560, column: 8)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !2162, line: 1559, column: 45)
!3437 = distinct !DILexicalBlock(scope: !3405, file: !2162, line: 1559, column: 14)
!3438 = !DILocation(line: 1566, column: 17, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !2162, line: 1565, column: 46)
!3440 = distinct !DILexicalBlock(scope: !3437, file: !2162, line: 1565, column: 14)
!3441 = !DILocation(line: 1566, column: 15, scope: !3439)
!3442 = !DILocation(line: 1567, column: 3, scope: !3439)
!3443 = !DILocation(line: 1574, column: 21, scope: !3272)
!3444 = !DILocation(line: 1575, column: 4, scope: !3270)
!3445 = !DILocation(line: 0, scope: !3270)
!3446 = !DILocation(line: 1575, column: 4, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3270, file: !2162, line: 1575, column: 4)
!3448 = !DILocation(line: 1582, column: 17, scope: !3206)
!3449 = !DILocation(line: 1582, column: 3, scope: !3206)
!3450 = !DILocation(line: 1584, column: 4, scope: !3274)
!3451 = !DILocation(line: 0, scope: !3274)
!3452 = !DILocation(line: 1584, column: 4, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3274, file: !2162, line: 1584, column: 4)
!3454 = !DILocation(line: 1587, column: 31, scope: !3277)
!3455 = !DILocation(line: 1591, column: 18, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3277, file: !2162, line: 1591, column: 8)
!3457 = !DILocation(line: 1591, column: 8, scope: !3277)
!3458 = !DILocation(line: 1592, column: 11, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !2162, line: 1591, column: 24)
!3460 = !DILocation(line: 0, scope: !3277)
!3461 = !DILocation(line: 1593, column: 4, scope: !3459)
!3462 = !DILocation(line: 1594, column: 11, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3456, file: !2162, line: 1593, column: 11)
!3464 = !DILocation(line: 1604, column: 51, scope: !3275)
!3465 = !DILocation(line: 1604, column: 13, scope: !3275)
!3466 = !DILocation(line: 1604, column: 11, scope: !3275)
!3467 = !DILocation(line: 1606, column: 4, scope: !3275)
!3468 = !DILocation(line: 1609, column: 14, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1609, column: 8)
!3470 = !DILocation(line: 1609, column: 8, scope: !3275)
!3471 = !DILocation(line: 1619, column: 18, scope: !3275)
!3472 = !DILocation(line: 1620, column: 13, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1620, column: 8)
!3474 = !DILocation(line: 1620, column: 8, scope: !3275)
!3475 = !DILocation(line: 1622, column: 36, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3473, file: !2162, line: 1620, column: 18)
!3477 = !DILocation(line: 1622, column: 17, scope: !3476)
!3478 = !DILocation(line: 1623, column: 4, scope: !3476)
!3479 = !DILocation(line: 1632, column: 29, scope: !3275)
!3480 = !DILocation(line: 1632, column: 10, scope: !3275)
!3481 = !DILocation(line: 1632, column: 4, scope: !3275)
!3482 = !DILocation(line: 1407, column: 8, scope: !3206)
!3483 = !DILocation(line: 0, scope: !3275)
!3484 = !DILocation(line: 1634, column: 3, scope: !3275)
!3485 = !DILocation(line: 1640, column: 18, scope: !3280)
!3486 = !DILocation(line: 1640, column: 8, scope: !3275)
!3487 = !DILocation(line: 1729, column: 13, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1729, column: 7)
!3489 = !DILocation(line: 1641, column: 22, scope: !3279)
!3490 = !DILocation(line: 0, scope: !3279)
!3491 = !DILocation(line: 1646, column: 21, scope: !3279)
!3492 = !DILocation(line: 1649, column: 13, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3279, file: !2162, line: 1649, column: 9)
!3494 = !DILocation(line: 1649, column: 9, scope: !3279)
!3495 = !DILocation(line: 1650, column: 35, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3493, file: !2162, line: 1649, column: 34)
!3497 = !DILocation(line: 1650, column: 23, scope: !3496)
!3498 = !DILocation(line: 1651, column: 5, scope: !3496)
!3499 = !DILocation(line: 1660, column: 15, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1660, column: 8)
!3501 = !DILocation(line: 1660, column: 19, scope: !3500)
!3502 = !DILocation(line: 1660, column: 8, scope: !3275)
!3503 = !DILocation(line: 1661, column: 23, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3500, file: !2162, line: 1660, column: 28)
!3505 = !DILocation(line: 1661, column: 11, scope: !3504)
!3506 = !DILocation(line: 1665, column: 22, scope: !3504)
!3507 = !DILocation(line: 1666, column: 21, scope: !3504)
!3508 = !DILocation(line: 1668, column: 5, scope: !3504)
!3509 = !DILocation(line: 1677, column: 30, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !2162, line: 1676, column: 49)
!3511 = distinct !DILexicalBlock(scope: !3275, file: !2162, line: 1676, column: 8)
!3512 = !DILocation(line: 1677, column: 5, scope: !3510)
!3513 = !DILocation(line: 1680, column: 4, scope: !3275)
!3514 = !DILocation(line: 0, scope: !3456)
!3515 = !DILocation(line: 1597, column: 14, scope: !3277)
!3516 = !DILocation(line: 1699, column: 11, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1699, column: 7)
!3518 = !DILocation(line: 1699, column: 7, scope: !3206)
!3519 = !DILocation(line: 1725, column: 7, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1725, column: 7)
!3521 = !DILocation(line: 1725, column: 12, scope: !3520)
!3522 = !DILocation(line: 1747, column: 13, scope: !3287)
!3523 = !DILocation(line: 1747, column: 7, scope: !3206)
!3524 = !DILocation(line: 1722, column: 24, scope: !3206)
!3525 = !DILocation(line: 1725, column: 7, scope: !3206)
!3526 = !DILocation(line: 1729, column: 7, scope: !3206)
!3527 = !DILocation(line: 1736, column: 13, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3206, file: !2162, line: 1736, column: 7)
!3529 = !DILocation(line: 1735, column: 19, scope: !3206)
!3530 = !DILocation(line: 1736, column: 7, scope: !3206)
!3531 = !DILocation(line: 1748, column: 10, scope: !3286)
!3532 = !DILocation(line: 1750, column: 15, scope: !3285)
!3533 = !DILocation(line: 1750, column: 8, scope: !3286)
!3534 = !DILocation(line: 0, scope: !3284)
!3535 = !DILocation(line: 1756, column: 15, scope: !3293)
!3536 = !DILocation(line: 1756, column: 9, scope: !3284)
!3537 = !DILocation(line: 1758, column: 7, scope: !3289)
!3538 = !DILocation(line: 0, scope: !3289)
!3539 = !DILocation(line: 1758, column: 7, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3289, file: !2162, line: 1758, column: 7)
!3541 = !DILocation(line: 1764, column: 5, scope: !3284)
!3542 = !DILocation(line: 0, scope: !3286)
!3543 = !DILocation(line: 1764, column: 20, scope: !3284)
!3544 = !DILocation(line: 1764, column: 17, scope: !3284)
!3545 = !DILocation(line: 1765, column: 6, scope: !3295)
!3546 = !DILocation(line: 0, scope: !3295)
!3547 = !DILocation(line: 1765, column: 6, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3295, file: !2162, line: 1765, column: 6)
!3549 = distinct !{!3549, !3541, !3550}
!3550 = !DILocation(line: 1766, column: 5, scope: !3284)
!3551 = !DILocation(line: 1773, column: 12, scope: !3300)
!3552 = !DILocation(line: 1773, column: 7, scope: !3206)
!3553 = !DILocation(line: 1773, column: 7, scope: !3300)
!3554 = !DILocation(line: 1774, column: 4, scope: !3298)
!3555 = !DILocation(line: 0, scope: !3298)
!3556 = !DILocation(line: 1774, column: 4, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3298, file: !2162, line: 1774, column: 4)
!3558 = !DILocation(line: 1818, column: 8, scope: !3304)
!3559 = !DILocation(line: 1818, column: 27, scope: !3304)
!3560 = !DILocation(line: 1818, column: 25, scope: !3304)
!3561 = !DILocation(line: 1818, column: 8, scope: !3305)
!3562 = !DILocation(line: 1819, column: 5, scope: !3302)
!3563 = !DILocation(line: 0, scope: !3302)
!3564 = !DILocation(line: 1819, column: 5, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3302, file: !2162, line: 1819, column: 5)
!3566 = !DILocation(line: 1822, column: 14, scope: !3310)
!3567 = !DILocation(line: 1822, column: 8, scope: !3305)
!3568 = !DILocation(line: 1823, column: 5, scope: !3308)
!3569 = !DILocation(line: 0, scope: !3308)
!3570 = !DILocation(line: 1823, column: 5, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3308, file: !2162, line: 1823, column: 5)
!3572 = !DILocation(line: 1826, column: 20, scope: !3305)
!3573 = !DILocation(line: 1827, column: 4, scope: !3305)
!3574 = !DILocation(line: 0, scope: !3305)
!3575 = !DILocation(line: 1827, column: 21, scope: !3305)
!3576 = !DILocation(line: 1827, column: 18, scope: !3305)
!3577 = !DILocation(line: 1828, column: 5, scope: !3312)
!3578 = !DILocation(line: 0, scope: !3312)
!3579 = !DILocation(line: 1828, column: 5, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3312, file: !2162, line: 1828, column: 5)
!3581 = distinct !{!3581, !3573, !3582}
!3582 = !DILocation(line: 1829, column: 4, scope: !3305)
!3583 = !DILocation(line: 1831, column: 4, scope: !3315)
!3584 = !DILocation(line: 0, scope: !3315)
!3585 = !DILocation(line: 1831, column: 4, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3315, file: !2162, line: 1831, column: 4)
!3587 = !DILocation(line: 1835, column: 16, scope: !3206)
!3588 = !DILocation(line: 1835, column: 3, scope: !3206)
!3589 = !DILocation(line: 1836, column: 4, scope: !3317)
!3590 = !DILocation(line: 0, scope: !3317)
!3591 = !DILocation(line: 1836, column: 4, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3317, file: !2162, line: 1836, column: 4)
!3593 = !DILocation(line: 1837, column: 4, scope: !3318)
!3594 = distinct !{!3594, !3588, !3595}
!3595 = !DILocation(line: 1838, column: 3, scope: !3206)
!3596 = !DILocation(line: 1844, column: 1, scope: !3179)
!3597 = distinct !DISubprogram(name: "extract_conversion", scope: !2162, file: !2162, line: 642, type: !3598, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3600)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!144, !3254, !144}
!3600 = !{!3601, !3602}
!3601 = !DILocalVariable(name: "conv", arg: 1, scope: !3597, file: !2162, line: 642, type: !3254)
!3602 = !DILocalVariable(name: "sp", arg: 2, scope: !3597, file: !2162, line: 643, type: !144)
!3603 = !DILocation(line: 0, scope: !3597)
!3604 = !DILocation(line: 645, column: 10, scope: !3597)
!3605 = !DILocation(line: 653, column: 2, scope: !3597)
!3606 = !DILocation(line: 654, column: 6, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3597, file: !2162, line: 654, column: 6)
!3608 = !DILocation(line: 654, column: 10, scope: !3607)
!3609 = !DILocation(line: 654, column: 6, scope: !3597)
!3610 = !DILocation(line: 655, column: 24, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3607, file: !2162, line: 654, column: 18)
!3612 = !DILocation(line: 655, column: 19, scope: !3611)
!3613 = !DILocation(line: 656, column: 3, scope: !3611)
!3614 = !DILocation(line: 659, column: 7, scope: !3597)
!3615 = !DILocation(line: 660, column: 7, scope: !3597)
!3616 = !DILocation(line: 661, column: 7, scope: !3597)
!3617 = !DILocation(line: 662, column: 7, scope: !3597)
!3618 = !DILocation(line: 663, column: 7, scope: !3597)
!3619 = !DILocation(line: 665, column: 2, scope: !3597)
!3620 = !DILocation(line: 666, column: 1, scope: !3597)
!3621 = distinct !DISubprogram(name: "outs", scope: !2162, file: !2162, line: 1319, type: !3622, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3624)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!103, !2910, !102, !144, !144}
!3624 = !{!3625, !3626, !3627, !3628, !3629, !3630}
!3625 = !DILocalVariable(name: "out", arg: 1, scope: !3621, file: !2162, line: 1319, type: !2910)
!3626 = !DILocalVariable(name: "ctx", arg: 2, scope: !3621, file: !2162, line: 1320, type: !102)
!3627 = !DILocalVariable(name: "sp", arg: 3, scope: !3621, file: !2162, line: 1321, type: !144)
!3628 = !DILocalVariable(name: "ep", arg: 4, scope: !3621, file: !2162, line: 1322, type: !144)
!3629 = !DILocalVariable(name: "count", scope: !3621, file: !2162, line: 1324, type: !200)
!3630 = !DILocalVariable(name: "rc", scope: !3631, file: !2162, line: 1327, type: !103)
!3631 = distinct !DILexicalBlock(scope: !3621, file: !2162, line: 1326, column: 45)
!3632 = !DILocation(line: 0, scope: !3621)
!3633 = !DILocation(line: 1326, column: 2, scope: !3621)
!3634 = !DILocation(line: 1324, column: 9, scope: !3621)
!3635 = !DILocation(line: 1326, column: 13, scope: !3621)
!3636 = !DILocation(line: 1326, column: 19, scope: !3621)
!3637 = !DILocation(line: 1327, column: 21, scope: !3631)
!3638 = !DILocation(line: 1326, column: 36, scope: !3621)
!3639 = !DILocation(line: 1326, column: 39, scope: !3621)
!3640 = !DILocation(line: 1327, column: 24, scope: !3631)
!3641 = !DILocation(line: 1327, column: 16, scope: !3631)
!3642 = !DILocation(line: 1327, column: 12, scope: !3631)
!3643 = !DILocation(line: 0, scope: !3631)
!3644 = !DILocation(line: 1329, column: 10, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3631, file: !2162, line: 1329, column: 7)
!3646 = !DILocation(line: 1329, column: 7, scope: !3631)
!3647 = distinct !{!3647, !3633, !3648}
!3648 = !DILocation(line: 1333, column: 2, scope: !3621)
!3649 = !DILocation(line: 1336, column: 1, scope: !3621)
!3650 = distinct !DISubprogram(name: "encode_uint", scope: !2162, file: !2162, line: 788, type: !3651, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3653)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!957, !2184, !3254, !957, !144}
!3653 = !{!3654, !3655, !3656, !3657, !3658, !3659, !3661, !3662}
!3654 = !DILocalVariable(name: "value", arg: 1, scope: !3650, file: !2162, line: 788, type: !2184)
!3655 = !DILocalVariable(name: "conv", arg: 2, scope: !3650, file: !2162, line: 789, type: !3254)
!3656 = !DILocalVariable(name: "bps", arg: 3, scope: !3650, file: !2162, line: 790, type: !957)
!3657 = !DILocalVariable(name: "bpe", arg: 4, scope: !3650, file: !2162, line: 791, type: !144)
!3658 = !DILocalVariable(name: "upcase", scope: !3650, file: !2162, line: 793, type: !157)
!3659 = !DILocalVariable(name: "radix", scope: !3650, file: !2162, line: 794, type: !3660)
!3660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3661 = !DILocalVariable(name: "bp", scope: !3650, file: !2162, line: 795, type: !957)
!3662 = !DILocalVariable(name: "lsv", scope: !3663, file: !2162, line: 798, type: !32)
!3663 = distinct !DILexicalBlock(scope: !3650, file: !2162, line: 797, column: 5)
!3664 = !DILocation(line: 0, scope: !3650)
!3665 = !DILocation(line: 793, column: 35, scope: !3650)
!3666 = !DILocation(line: 793, column: 24, scope: !3650)
!3667 = !DILocation(line: 793, column: 16, scope: !3650)
!3668 = !DILocation(line: 794, column: 29, scope: !3650)
!3669 = !DILocation(line: 795, column: 24, scope: !3650)
!3670 = !DILocation(line: 795, column: 17, scope: !3650)
!3671 = !DILocation(line: 797, column: 2, scope: !3650)
!3672 = !DILocation(line: 802, column: 9, scope: !3663)
!3673 = !DILocation(line: 798, column: 22, scope: !3663)
!3674 = !DILocation(line: 0, scope: !3663)
!3675 = !DILocation(line: 800, column: 16, scope: !3663)
!3676 = !DILocation(line: 800, column: 11, scope: !3663)
!3677 = !DILocation(line: 800, column: 4, scope: !3663)
!3678 = !DILocation(line: 800, column: 9, scope: !3663)
!3679 = !DILocation(line: 803, column: 18, scope: !3650)
!3680 = !DILocation(line: 803, column: 24, scope: !3650)
!3681 = !DILocation(line: 803, column: 2, scope: !3663)
!3682 = distinct !{!3682, !3671, !3683}
!3683 = !DILocation(line: 803, column: 37, scope: !3650)
!3684 = !DILocation(line: 808, column: 12, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3650, file: !2162, line: 808, column: 6)
!3686 = !DILocation(line: 808, column: 6, scope: !3650)
!3687 = !DILocation(line: 809, column: 7, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3685, file: !2162, line: 808, column: 23)
!3689 = !DILocation(line: 813, column: 3, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !2162, line: 811, column: 27)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !2162, line: 811, column: 14)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !2162, line: 809, column: 7)
!3693 = !DILocation(line: 0, scope: !3692)
!3694 = !DILocation(line: 818, column: 2, scope: !3650)
!3695 = distinct !DISubprogram(name: "store_count", scope: !2162, file: !2162, line: 1280, type: !3696, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3700)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{null, !3698, !102, !103}
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 32)
!3699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3221)
!3700 = !{!3701, !3702, !3703}
!3701 = !DILocalVariable(name: "conv", arg: 1, scope: !3695, file: !2162, line: 1280, type: !3698)
!3702 = !DILocalVariable(name: "dp", arg: 2, scope: !3695, file: !2162, line: 1281, type: !102)
!3703 = !DILocalVariable(name: "count", arg: 3, scope: !3695, file: !2162, line: 1282, type: !103)
!3704 = !DILocation(line: 0, scope: !3695)
!3705 = !DILocation(line: 1284, column: 38, scope: !3695)
!3706 = !DILocation(line: 1284, column: 2, scope: !3695)
!3707 = !DILocation(line: 1286, column: 4, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3695, file: !2162, line: 1284, column: 50)
!3709 = !DILocation(line: 1286, column: 14, scope: !3708)
!3710 = !DILocation(line: 1287, column: 3, scope: !3708)
!3711 = !DILocation(line: 1289, column: 24, scope: !3708)
!3712 = !DILocation(line: 1289, column: 22, scope: !3708)
!3713 = !DILocation(line: 1290, column: 3, scope: !3708)
!3714 = !DILocation(line: 1292, column: 18, scope: !3708)
!3715 = !DILocation(line: 1292, column: 4, scope: !3708)
!3716 = !DILocation(line: 1292, column: 16, scope: !3708)
!3717 = !DILocation(line: 1293, column: 3, scope: !3708)
!3718 = !DILocation(line: 1295, column: 4, scope: !3708)
!3719 = !DILocation(line: 1295, column: 15, scope: !3708)
!3720 = !DILocation(line: 1296, column: 3, scope: !3708)
!3721 = !DILocation(line: 1298, column: 22, scope: !3708)
!3722 = !DILocation(line: 1298, column: 4, scope: !3708)
!3723 = !DILocation(line: 1298, column: 20, scope: !3708)
!3724 = !DILocation(line: 1299, column: 3, scope: !3708)
!3725 = !DILocation(line: 1301, column: 21, scope: !3708)
!3726 = !DILocation(line: 1301, column: 4, scope: !3708)
!3727 = !DILocation(line: 1301, column: 19, scope: !3708)
!3728 = !DILocation(line: 1302, column: 3, scope: !3708)
!3729 = !DILocation(line: 1304, column: 4, scope: !3708)
!3730 = !DILocation(line: 1304, column: 17, scope: !3708)
!3731 = !DILocation(line: 1305, column: 3, scope: !3708)
!3732 = !DILocation(line: 1307, column: 4, scope: !3708)
!3733 = !DILocation(line: 1307, column: 20, scope: !3708)
!3734 = !DILocation(line: 1308, column: 3, scope: !3708)
!3735 = !DILocation(line: 1316, column: 1, scope: !3695)
!3736 = distinct !DISubprogram(name: "isupper", scope: !3737, file: !3737, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3738)
!3737 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3738 = !{!3739}
!3739 = !DILocalVariable(name: "a", arg: 1, scope: !3736, file: !3737, line: 16, type: !103)
!3740 = !DILocation(line: 0, scope: !3736)
!3741 = !DILocation(line: 18, column: 29, scope: !3736)
!3742 = !DILocation(line: 18, column: 45, scope: !3736)
!3743 = !DILocation(line: 18, column: 2, scope: !3736)
!3744 = distinct !DISubprogram(name: "conversion_radix", scope: !2162, file: !2162, line: 761, type: !3745, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3747)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!200, !146}
!3747 = !{!3748}
!3748 = !DILocalVariable(name: "specifier", arg: 1, scope: !3744, file: !2162, line: 761, type: !146)
!3749 = !DILocation(line: 0, scope: !3744)
!3750 = !DILocation(line: 763, column: 2, scope: !3744)
!3751 = !DILocation(line: 770, column: 3, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3744, file: !2162, line: 763, column: 21)
!3753 = !DILocation(line: 774, column: 3, scope: !3752)
!3754 = !DILocation(line: 0, scope: !3752)
!3755 = !DILocation(line: 776, column: 1, scope: !3744)
!3756 = distinct !DISubprogram(name: "extract_flags", scope: !2162, file: !2162, line: 339, type: !3598, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3757)
!3757 = !{!3758, !3759, !3760}
!3758 = !DILocalVariable(name: "conv", arg: 1, scope: !3756, file: !2162, line: 339, type: !3254)
!3759 = !DILocalVariable(name: "sp", arg: 2, scope: !3756, file: !2162, line: 340, type: !144)
!3760 = !DILocalVariable(name: "loop", scope: !3756, file: !2162, line: 342, type: !157)
!3761 = !DILocation(line: 0, scope: !3756)
!3762 = !DILocation(line: 344, column: 2, scope: !3756)
!3763 = !DILocation(line: 345, column: 11, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3756, file: !2162, line: 344, column: 5)
!3765 = !DILocation(line: 345, column: 3, scope: !3764)
!3766 = !DILocation(line: 351, column: 4, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !2162, line: 345, column: 16)
!3768 = !DILocation(line: 354, column: 4, scope: !3767)
!3769 = !DILocation(line: 357, column: 4, scope: !3767)
!3770 = !DILocation(line: 360, column: 4, scope: !3767)
!3771 = !DILocation(line: 0, scope: !3767)
!3772 = !DILocation(line: 370, column: 12, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3756, file: !2162, line: 370, column: 6)
!3774 = !DILocation(line: 370, column: 22, scope: !3773)
!3775 = !DILocation(line: 371, column: 19, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3773, file: !2162, line: 370, column: 42)
!3777 = !DILocation(line: 372, column: 2, scope: !3776)
!3778 = !DILocation(line: 376, column: 2, scope: !3756)
!3779 = distinct !DISubprogram(name: "extract_width", scope: !2162, file: !2162, line: 388, type: !3598, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3780)
!3780 = !{!3781, !3782, !3783, !3784}
!3781 = !DILocalVariable(name: "conv", arg: 1, scope: !3779, file: !2162, line: 388, type: !3254)
!3782 = !DILocalVariable(name: "sp", arg: 2, scope: !3779, file: !2162, line: 389, type: !144)
!3783 = !DILocalVariable(name: "wp", scope: !3779, file: !2162, line: 398, type: !144)
!3784 = !DILocalVariable(name: "width", scope: !3779, file: !2162, line: 399, type: !200)
!3785 = !DILocation(line: 0, scope: !3779)
!3786 = !DILocation(line: 391, column: 8, scope: !3779)
!3787 = !DILocation(line: 391, column: 22, scope: !3779)
!3788 = !DILocation(line: 393, column: 6, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3779, file: !2162, line: 393, column: 6)
!3790 = !DILocation(line: 393, column: 10, scope: !3789)
!3791 = !DILocation(line: 393, column: 6, scope: !3779)
!3792 = !DILocation(line: 394, column: 20, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3789, file: !2162, line: 393, column: 18)
!3794 = !DILocation(line: 395, column: 10, scope: !3793)
!3795 = !DILocation(line: 395, column: 3, scope: !3793)
!3796 = !DILocation(line: 399, column: 17, scope: !3779)
!3797 = !DILocation(line: 401, column: 6, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3779, file: !2162, line: 401, column: 6)
!3799 = !DILocation(line: 401, column: 9, scope: !3798)
!3800 = !DILocation(line: 401, column: 6, scope: !3779)
!3801 = !DILocation(line: 402, column: 23, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3798, file: !2162, line: 401, column: 16)
!3803 = !DILocation(line: 403, column: 9, scope: !3802)
!3804 = !DILocation(line: 403, column: 21, scope: !3802)
!3805 = !DILocation(line: 405, column: 11, scope: !3802)
!3806 = !DILocation(line: 404, column: 21, scope: !3802)
!3807 = !DILocation(line: 406, column: 2, scope: !3802)
!3808 = !DILocation(line: 409, column: 1, scope: !3779)
!3809 = distinct !DISubprogram(name: "extract_prec", scope: !2162, file: !2162, line: 420, type: !3598, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3810)
!3810 = !{!3811, !3812, !3813}
!3811 = !DILocalVariable(name: "conv", arg: 1, scope: !3809, file: !2162, line: 420, type: !3254)
!3812 = !DILocalVariable(name: "sp", arg: 2, scope: !3809, file: !2162, line: 421, type: !144)
!3813 = !DILocalVariable(name: "prec", scope: !3809, file: !2162, line: 435, type: !200)
!3814 = !DILocation(line: 0, scope: !3809)
!3815 = !DILocation(line: 423, column: 24, scope: !3809)
!3816 = !DILocation(line: 423, column: 28, scope: !3809)
!3817 = !DILocation(line: 423, column: 8, scope: !3809)
!3818 = !DILocation(line: 423, column: 21, scope: !3809)
!3819 = !DILocation(line: 425, column: 6, scope: !3809)
!3820 = !DILocation(line: 428, column: 2, scope: !3809)
!3821 = !DILocation(line: 430, column: 6, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3809, file: !2162, line: 430, column: 6)
!3823 = !DILocation(line: 430, column: 10, scope: !3822)
!3824 = !DILocation(line: 430, column: 6, scope: !3809)
!3825 = !DILocation(line: 431, column: 19, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3822, file: !2162, line: 430, column: 18)
!3827 = !DILocation(line: 432, column: 10, scope: !3826)
!3828 = !DILocation(line: 432, column: 3, scope: !3826)
!3829 = !DILocation(line: 435, column: 16, scope: !3809)
!3830 = !DILocation(line: 437, column: 8, scope: !3809)
!3831 = !DILocation(line: 437, column: 19, scope: !3809)
!3832 = !DILocation(line: 439, column: 10, scope: !3809)
!3833 = !DILocation(line: 438, column: 20, scope: !3809)
!3834 = !DILocation(line: 441, column: 9, scope: !3809)
!3835 = !DILocation(line: 442, column: 1, scope: !3809)
!3836 = distinct !DISubprogram(name: "extract_length", scope: !2162, file: !2162, line: 453, type: !3598, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3837)
!3837 = !{!3838, !3839}
!3838 = !DILocalVariable(name: "conv", arg: 1, scope: !3836, file: !2162, line: 453, type: !3254)
!3839 = !DILocalVariable(name: "sp", arg: 2, scope: !3836, file: !2162, line: 454, type: !144)
!3840 = !DILocation(line: 0, scope: !3836)
!3841 = !DILocation(line: 456, column: 10, scope: !3836)
!3842 = !DILocation(line: 456, column: 2, scope: !3836)
!3843 = !DILocation(line: 458, column: 8, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !2162, line: 458, column: 7)
!3845 = distinct !DILexicalBlock(scope: !3836, file: !2162, line: 456, column: 15)
!3846 = !DILocation(line: 458, column: 7, scope: !3844)
!3847 = !DILocation(line: 458, column: 13, scope: !3844)
!3848 = !DILocation(line: 0, scope: !3844)
!3849 = !DILocation(line: 458, column: 7, scope: !3845)
!3850 = !DILocation(line: 459, column: 21, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3844, file: !2162, line: 458, column: 21)
!3852 = !DILocation(line: 460, column: 4, scope: !3851)
!3853 = !DILocation(line: 461, column: 3, scope: !3851)
!3854 = !DILocation(line: 462, column: 21, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3844, file: !2162, line: 461, column: 10)
!3856 = !DILocation(line: 466, column: 8, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3845, file: !2162, line: 466, column: 7)
!3858 = !DILocation(line: 466, column: 7, scope: !3857)
!3859 = !DILocation(line: 466, column: 13, scope: !3857)
!3860 = !DILocation(line: 0, scope: !3857)
!3861 = !DILocation(line: 466, column: 7, scope: !3845)
!3862 = !DILocation(line: 467, column: 21, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3857, file: !2162, line: 466, column: 21)
!3864 = !DILocation(line: 468, column: 4, scope: !3863)
!3865 = !DILocation(line: 469, column: 3, scope: !3863)
!3866 = !DILocation(line: 470, column: 21, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3857, file: !2162, line: 469, column: 10)
!3868 = !DILocation(line: 474, column: 9, scope: !3845)
!3869 = !DILocation(line: 474, column: 20, scope: !3845)
!3870 = !DILocation(line: 475, column: 3, scope: !3845)
!3871 = !DILocation(line: 476, column: 3, scope: !3845)
!3872 = !DILocation(line: 478, column: 9, scope: !3845)
!3873 = !DILocation(line: 478, column: 20, scope: !3845)
!3874 = !DILocation(line: 479, column: 3, scope: !3845)
!3875 = !DILocation(line: 480, column: 3, scope: !3845)
!3876 = !DILocation(line: 482, column: 9, scope: !3845)
!3877 = !DILocation(line: 482, column: 20, scope: !3845)
!3878 = !DILocation(line: 483, column: 3, scope: !3845)
!3879 = !DILocation(line: 484, column: 3, scope: !3845)
!3880 = !DILocation(line: 486, column: 9, scope: !3845)
!3881 = !DILocation(line: 486, column: 20, scope: !3845)
!3882 = !DILocation(line: 487, column: 3, scope: !3845)
!3883 = !DILocation(line: 492, column: 21, scope: !3845)
!3884 = !DILocation(line: 493, column: 3, scope: !3845)
!3885 = !DILocation(line: 495, column: 9, scope: !3845)
!3886 = !DILocation(line: 495, column: 20, scope: !3845)
!3887 = !DILocation(line: 496, column: 3, scope: !3845)
!3888 = !DILocation(line: 498, column: 2, scope: !3836)
!3889 = distinct !DISubprogram(name: "extract_specifier", scope: !2162, file: !2162, line: 513, type: !3598, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3890)
!3890 = !{!3891, !3892, !3893, !3894}
!3891 = !DILocalVariable(name: "conv", arg: 1, scope: !3889, file: !2162, line: 513, type: !3254)
!3892 = !DILocalVariable(name: "sp", arg: 2, scope: !3889, file: !2162, line: 514, type: !144)
!3893 = !DILocalVariable(name: "unsupported", scope: !3889, file: !2162, line: 516, type: !157)
!3894 = !DILabel(scope: !3895, name: "int_conv", file: !2162, line: 526)
!3895 = distinct !DILexicalBlock(scope: !3889, file: !2162, line: 520, column: 27)
!3896 = !DILocation(line: 0, scope: !3889)
!3897 = !DILocation(line: 518, column: 20, scope: !3889)
!3898 = !DILocation(line: 518, column: 8, scope: !3889)
!3899 = !DILocation(line: 518, column: 18, scope: !3889)
!3900 = !DILocation(line: 520, column: 2, scope: !3889)
!3901 = !DILocation(line: 525, column: 3, scope: !3895)
!3902 = !DILocation(line: 0, scope: !3895)
!3903 = !DILocation(line: 526, column: 1, scope: !3895)
!3904 = !DILocation(line: 528, column: 24, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3895, file: !2162, line: 528, column: 7)
!3906 = !DILocation(line: 528, column: 7, scope: !3895)
!3907 = !DILocation(line: 535, column: 23, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3895, file: !2162, line: 535, column: 7)
!3909 = !DILocation(line: 535, column: 7, scope: !3895)
!3910 = !DILocation(line: 536, column: 36, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3908, file: !2162, line: 535, column: 31)
!3912 = !DILocation(line: 537, column: 3, scope: !3911)
!3913 = !DILocation(line: 570, column: 9, scope: !3895)
!3914 = !DILocation(line: 570, column: 23, scope: !3895)
!3915 = !DILocation(line: 575, column: 4, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !2162, line: 573, column: 48)
!3917 = distinct !DILexicalBlock(scope: !3895, file: !2162, line: 573, column: 7)
!3918 = !DILocation(line: 603, column: 9, scope: !3895)
!3919 = !DILocation(line: 603, column: 23, scope: !3895)
!3920 = !DILocation(line: 605, column: 24, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3895, file: !2162, line: 605, column: 7)
!3922 = !DILocation(line: 605, column: 7, scope: !3895)
!3923 = !DILocation(line: 612, column: 9, scope: !3895)
!3924 = !DILocation(line: 612, column: 23, scope: !3895)
!3925 = !DILocation(line: 619, column: 24, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3895, file: !2162, line: 619, column: 7)
!3927 = !DILocation(line: 619, column: 7, scope: !3895)
!3928 = !DILocation(line: 625, column: 9, scope: !3895)
!3929 = !DILocation(line: 625, column: 17, scope: !3895)
!3930 = !DILocation(line: 626, column: 3, scope: !3895)
!3931 = !DILocation(line: 629, column: 20, scope: !3889)
!3932 = !DILocation(line: 629, column: 8, scope: !3889)
!3933 = !DILocation(line: 518, column: 23, scope: !3889)
!3934 = !DILocation(line: 631, column: 2, scope: !3889)
!3935 = distinct !DISubprogram(name: "extract_decimal", scope: !2162, file: !2162, line: 318, type: !3936, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3939)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!200, !3938}
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!3939 = !{!3940, !3941, !3942}
!3940 = !DILocalVariable(name: "str", arg: 1, scope: !3935, file: !2162, line: 318, type: !3938)
!3941 = !DILocalVariable(name: "sp", scope: !3935, file: !2162, line: 320, type: !144)
!3942 = !DILocalVariable(name: "val", scope: !3935, file: !2162, line: 321, type: !200)
!3943 = !DILocation(line: 0, scope: !3935)
!3944 = !DILocation(line: 320, column: 19, scope: !3935)
!3945 = !DILocation(line: 323, column: 37, scope: !3935)
!3946 = !DILocation(line: 323, column: 17, scope: !3935)
!3947 = !DILocation(line: 323, column: 9, scope: !3935)
!3948 = !DILocation(line: 323, column: 2, scope: !3935)
!3949 = !DILocation(line: 324, column: 13, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3935, file: !2162, line: 323, column: 43)
!3951 = !DILocation(line: 324, column: 24, scope: !3950)
!3952 = !DILocation(line: 324, column: 19, scope: !3950)
!3953 = !DILocation(line: 324, column: 27, scope: !3950)
!3954 = distinct !{!3954, !3948, !3955}
!3955 = !DILocation(line: 325, column: 2, scope: !3935)
!3956 = !DILocation(line: 326, column: 7, scope: !3935)
!3957 = !DILocation(line: 327, column: 2, scope: !3935)
!3958 = distinct !DISubprogram(name: "isdigit", scope: !3737, file: !3737, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2158, retainedNodes: !3959)
!3959 = !{!3960}
!3960 = !DILocalVariable(name: "a", arg: 1, scope: !3958, file: !3737, line: 43, type: !103)
!3961 = !DILocation(line: 0, scope: !3958)
!3962 = !DILocation(line: 45, column: 29, scope: !3958)
!3963 = !DILocation(line: 45, column: 45, scope: !3958)
!3964 = !DILocation(line: 45, column: 2, scope: !3958)
!3965 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !3966, file: !3966, line: 9, type: !2738, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2196, retainedNodes: !322)
!3966 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!3967 = !DILocation(line: 11, column: 1, scope: !3965)
!3968 = !{i64 2147560623, i64 2147560666, i64 2147560706}
!3969 = !DILocation(line: 12, column: 1, scope: !3965)
!3970 = !{i64 2147564850, i64 2147564893, i64 2147564933}
!3971 = !DILocation(line: 13, column: 1, scope: !3965)
!3972 = !{i64 2147565059, i64 2147565102, i64 2147565142}
!3973 = !DILocation(line: 14, column: 1, scope: !3965)
!3974 = !{i64 2147565228, i64 2147565271, i64 2147565311}
!3975 = !DILocation(line: 15, column: 1, scope: !3965)
!3976 = !{i64 2147565391, i64 2147565434, i64 2147565474}
!3977 = !DILocation(line: 16, column: 1, scope: !3965)
!3978 = !{i64 2147565575, i64 2147565618, i64 2147565658}
!3979 = !DILocation(line: 17, column: 1, scope: !3965)
!3980 = !{i64 2147565754, i64 2147565797, i64 2147565837}
!3981 = !DILocation(line: 18, column: 1, scope: !3965)
!3982 = !{i64 2147565996, i64 2147566039, i64 2147566079}
!3983 = !DILocation(line: 19, column: 1, scope: !3965)
!3984 = !{i64 2147566231, i64 2147566274, i64 2147566314}
!3985 = !DILocation(line: 20, column: 1, scope: !3965)
!3986 = !{i64 2147566417, i64 2147566460, i64 2147566500}
!3987 = !DILocation(line: 21, column: 1, scope: !3965)
!3988 = !{i64 2147566633, i64 2147566676, i64 2147566716}
!3989 = !DILocation(line: 22, column: 1, scope: !3965)
!3990 = !{i64 2147566836, i64 2147566879, i64 2147566919}
!3991 = !DILocation(line: 23, column: 1, scope: !3965)
!3992 = !{i64 2147567039, i64 2147567082, i64 2147567122}
!3993 = !DILocation(line: 24, column: 1, scope: !3965)
!3994 = !{i64 2147567214, i64 2147567257, i64 2147567297}
!3995 = !DILocation(line: 25, column: 1, scope: !3965)
!3996 = !{i64 2147567422, i64 2147567465, i64 2147567505}
!3997 = !DILocation(line: 26, column: 1, scope: !3965)
!3998 = !{i64 2147567626, i64 2147567669, i64 2147567709}
!3999 = !DILocation(line: 27, column: 1, scope: !3965)
!4000 = !{i64 2147567819, i64 2147567862, i64 2147567902}
!4001 = !DILocation(line: 28, column: 1, scope: !3965)
!4002 = !{i64 2147568021, i64 2147568064, i64 2147568104}
!4003 = !DILocation(line: 29, column: 1, scope: !3965)
!4004 = !{i64 2147568248, i64 2147568291, i64 2147568331}
!4005 = !DILocation(line: 30, column: 1, scope: !3965)
!4006 = !{i64 2147568450, i64 2147568493, i64 2147568533}
!4007 = !DILocation(line: 31, column: 1, scope: !3965)
!4008 = !{i64 2147568665, i64 2147568708, i64 2147568748}
!4009 = !DILocation(line: 32, column: 1, scope: !3965)
!4010 = !{i64 2147568837, i64 2147568880, i64 2147568920}
!4011 = !DILocation(line: 33, column: 1, scope: !3965)
!4012 = !{i64 2147569039, i64 2147569082, i64 2147569122}
!4013 = !DILocation(line: 34, column: 1, scope: !3965)
!4014 = !{i64 2147569265, i64 2147569308, i64 2147569348}
!4015 = !DILocation(line: 35, column: 1, scope: !3965)
!4016 = !{i64 2147569464, i64 2147569507, i64 2147569547}
!4017 = !DILocation(line: 36, column: 1, scope: !3965)
!4018 = !{i64 2147569639, i64 2147569682, i64 2147569722}
!4019 = !DILocation(line: 37, column: 1, scope: !3965)
!4020 = !{i64 2147569892, i64 2147569935, i64 2147569975}
!4021 = !DILocation(line: 38, column: 1, scope: !3965)
!4022 = !{i64 2147570133, i64 2147570176, i64 2147570216}
!4023 = !DILocation(line: 39, column: 1, scope: !3965)
!4024 = !{i64 2147570368, i64 2147570411, i64 2147570451}
!4025 = !DILocation(line: 40, column: 1, scope: !3965)
!4026 = !{i64 2147570600, i64 2147570643, i64 2147570683}
!4027 = !DILocation(line: 41, column: 1, scope: !3965)
!4028 = !{i64 2147570826, i64 2147570869, i64 2147570909}
!4029 = !DILocation(line: 42, column: 1, scope: !3965)
!4030 = !{i64 2147571052, i64 2147571095, i64 2147571135}
!4031 = !DILocation(line: 43, column: 1, scope: !3965)
!4032 = !{i64 2147571278, i64 2147571321, i64 2147571361}
!4033 = !DILocation(line: 44, column: 1, scope: !3965)
!4034 = !{i64 2147571513, i64 2147571556, i64 2147571596}
!4035 = !DILocation(line: 45, column: 1, scope: !3965)
!4036 = !{i64 2147571751, i64 2147571794, i64 2147571834}
!4037 = !DILocation(line: 46, column: 1, scope: !3965)
!4038 = !{i64 2147572025, i64 2147572068, i64 2147572108}
!4039 = !DILocation(line: 47, column: 1, scope: !3965)
!4040 = !{i64 2147572263, i64 2147572306, i64 2147572346}
!4041 = !DILocation(line: 48, column: 1, scope: !3965)
!4042 = !{i64 2147572507, i64 2147572550, i64 2147572590}
!4043 = !DILocation(line: 49, column: 1, scope: !3965)
!4044 = !{i64 2147572757, i64 2147572800, i64 2147572840}
!4045 = !DILocation(line: 50, column: 1, scope: !3965)
!4046 = !{i64 2147573004, i64 2147573047, i64 2147573087}
!4047 = !DILocation(line: 51, column: 1, scope: !3965)
!4048 = !{i64 2147573239, i64 2147573282, i64 2147573322}
!4049 = !DILocation(line: 52, column: 1, scope: !3965)
!4050 = !{i64 2147573474, i64 2147573517, i64 2147573557}
!4051 = !DILocation(line: 53, column: 1, scope: !3965)
!4052 = !{i64 2147577770, i64 2147577813, i64 2147577853}
!4053 = !DILocation(line: 54, column: 1, scope: !3965)
!4054 = !{i64 2147578008, i64 2147578051, i64 2147578091}
!4055 = !DILocation(line: 55, column: 1, scope: !3965)
!4056 = !{i64 2147578249, i64 2147578292, i64 2147578332}
!4057 = !DILocation(line: 56, column: 1, scope: !3965)
!4058 = !{i64 2147578529, i64 2147578572, i64 2147578612}
!4059 = !DILocation(line: 57, column: 1, scope: !3965)
!4060 = !{i64 2147578788, i64 2147578831, i64 2147578871}
!4061 = !DILocation(line: 58, column: 1, scope: !3965)
!4062 = !{i64 2147579014, i64 2147579057, i64 2147579097}
!4063 = !DILocation(line: 59, column: 1, scope: !3965)
!4064 = !{i64 2147579252, i64 2147579295, i64 2147579335}
!4065 = !DILocation(line: 60, column: 1, scope: !3965)
!4066 = !{i64 2147579481, i64 2147579524, i64 2147579564}
!4067 = !DILocation(line: 61, column: 1, scope: !3965)
!4068 = !{i64 2147579689, i64 2147579732, i64 2147579772}
!4069 = !DILocation(line: 62, column: 1, scope: !3965)
!4070 = !{i64 2147579900, i64 2147579943, i64 2147579983}
!4071 = !DILocation(line: 63, column: 1, scope: !3965)
!4072 = !{i64 2147580135, i64 2147580178, i64 2147580218}
!4073 = !DILocation(line: 64, column: 1, scope: !3965)
!4074 = !{i64 2147580364, i64 2147580407, i64 2147580447}
!4075 = !DILocation(line: 65, column: 1, scope: !3965)
!4076 = !{i64 2147580602, i64 2147580645, i64 2147580685}
!4077 = !DILocation(line: 66, column: 1, scope: !3965)
!4078 = !{i64 2147580834, i64 2147580877, i64 2147580917}
!4079 = !DILocation(line: 67, column: 1, scope: !3965)
!4080 = !{i64 2147581060, i64 2147581103, i64 2147581143}
!4081 = !DILocation(line: 68, column: 1, scope: !3965)
!4082 = !{i64 2147581277, i64 2147581320, i64 2147581360}
!4083 = !DILocation(line: 69, column: 1, scope: !3965)
!4084 = !{i64 2147581509, i64 2147581552, i64 2147581592}
!4085 = !DILocation(line: 70, column: 1, scope: !3965)
!4086 = !{i64 2147581735, i64 2147581778, i64 2147581818}
!4087 = !DILocation(line: 71, column: 1, scope: !3965)
!4088 = !{i64 2147581949, i64 2147581992, i64 2147582032}
!4089 = !DILocation(line: 72, column: 1, scope: !3965)
!4090 = !{i64 2147582169, i64 2147582212, i64 2147582252}
!4091 = !DILocation(line: 73, column: 1, scope: !3965)
!4092 = !{i64 2147582401, i64 2147582444, i64 2147582484}
!4093 = !DILocation(line: 74, column: 1, scope: !3965)
!4094 = !{i64 2147582609, i64 2147582652, i64 2147582692}
!4095 = !DILocation(line: 75, column: 1, scope: !3965)
!4096 = !{i64 2147582814, i64 2147582857, i64 2147582897}
!4097 = !DILocation(line: 76, column: 1, scope: !3965)
!4098 = !{i64 2147583031, i64 2147583074, i64 2147583114}
!4099 = !DILocation(line: 77, column: 1, scope: !3965)
!4100 = !{i64 2147583245, i64 2147583288, i64 2147583328}
!4101 = !DILocation(line: 78, column: 1, scope: !3965)
!4102 = !{i64 2147583471, i64 2147583514, i64 2147583554}
!4103 = !DILocation(line: 79, column: 1, scope: !3965)
!4104 = !{i64 2147583691, i64 2147583734, i64 2147583774}
!4105 = !DILocation(line: 80, column: 1, scope: !3965)
!4106 = !{i64 2147583896, i64 2147583939, i64 2147583979}
!4107 = !DILocation(line: 81, column: 1, scope: !3965)
!4108 = !{i64 2147584128, i64 2147584171, i64 2147584211}
!4109 = !DILocation(line: 82, column: 1, scope: !3965)
!4110 = !{i64 2147584363, i64 2147584406, i64 2147584446}
!4111 = !DILocation(line: 83, column: 1, scope: !3965)
!4112 = !{i64 2147584613, i64 2147584656, i64 2147584696}
!4113 = !DILocation(line: 84, column: 1, scope: !3965)
!4114 = !{i64 2147584863, i64 2147584906, i64 2147584946}
!4115 = !DILocation(line: 85, column: 1, scope: !3965)
!4116 = !{i64 2147585101, i64 2147585144, i64 2147585184}
!4117 = !DILocation(line: 86, column: 1, scope: !3965)
!4118 = !{i64 2147585312, i64 2147585355, i64 2147585395}
!4119 = !DILocation(line: 87, column: 1, scope: !3965)
!4120 = !{i64 2147585529, i64 2147585572, i64 2147585612}
!4121 = !DILocation(line: 88, column: 1, scope: !3965)
!4122 = !{i64 2147585725, i64 2147585768, i64 2147585808}
!4123 = !DILocation(line: 89, column: 1, scope: !3965)
!4124 = !{i64 2147589988, i64 2147590031, i64 2147590071}
!4125 = !DILocation(line: 90, column: 1, scope: !3965)
!4126 = !{i64 2147590181, i64 2147590224, i64 2147590264}
!4127 = !DILocation(line: 91, column: 1, scope: !3965)
!4128 = !{i64 2147590389, i64 2147590432, i64 2147590472}
!4129 = !DILocation(line: 92, column: 1, scope: !3965)
!4130 = !{i64 2147590585, i64 2147590628, i64 2147590668}
!4131 = !DILocation(line: 93, column: 1, scope: !3965)
!4132 = !{i64 2147590790, i64 2147590833, i64 2147590873}
!4133 = !DILocation(line: 94, column: 1, scope: !3965)
!4134 = !{i64 2147591001, i64 2147591044, i64 2147591084}
!4135 = !DILocation(line: 95, column: 1, scope: !3965)
!4136 = !{i64 2147591200, i64 2147591243, i64 2147591283}
!4137 = !DILocation(line: 96, column: 1, scope: !3965)
!4138 = !{i64 2147591375, i64 2147591418, i64 2147591458}
!4139 = !DILocation(line: 97, column: 1, scope: !3965)
!4140 = !{i64 2147591559, i64 2147591602, i64 2147591642}
!4141 = !DILocation(line: 98, column: 1, scope: !3965)
!4142 = !{i64 2147591761, i64 2147591804, i64 2147591844}
!4143 = !DILocation(line: 99, column: 1, scope: !3965)
!4144 = !{i64 2147591960, i64 2147592003, i64 2147592043}
!4145 = !DILocation(line: 100, column: 1, scope: !3965)
!4146 = !{i64 2147592126, i64 2147592169, i64 2147592209}
!4147 = !DILocation(line: 101, column: 1, scope: !3965)
!4148 = !{i64 2147592310, i64 2147592353, i64 2147592393}
!4149 = !DILocation(line: 102, column: 1, scope: !3965)
!4150 = !{i64 2147592500, i64 2147592543, i64 2147592583}
!4151 = !DILocation(line: 103, column: 1, scope: !3965)
!4152 = !{i64 2147592684, i64 2147592727, i64 2147592767}
!4153 = !DILocation(line: 104, column: 1, scope: !3965)
!4154 = !{i64 2147592898, i64 2147592941, i64 2147592981}
!4155 = !DILocation(line: 105, column: 1, scope: !3965)
!4156 = !{i64 2147593109, i64 2147593152, i64 2147593192}
!4157 = !DILocation(line: 106, column: 1, scope: !3965)
!4158 = !{i64 2147593332, i64 2147593375, i64 2147593415}
!4159 = !DILocation(line: 107, column: 1, scope: !3965)
!4160 = !{i64 2147593516, i64 2147593559, i64 2147593599}
!4161 = !DILocation(line: 108, column: 1, scope: !3965)
!4162 = !{i64 2147593730, i64 2147593773, i64 2147593813}
!4163 = !DILocation(line: 109, column: 1, scope: !3965)
!4164 = !{i64 2147593896, i64 2147593939, i64 2147593979}
!4165 = !DILocation(line: 110, column: 1, scope: !3965)
!4166 = !{i64 2147594077, i64 2147594120, i64 2147594160}
!4167 = !DILocation(line: 111, column: 1, scope: !3965)
!4168 = !{i64 2147594270, i64 2147594313, i64 2147594353}
!4169 = !DILocation(line: 112, column: 1, scope: !3965)
!4170 = !{i64 2147594496, i64 2147594539, i64 2147594579}
!4171 = !DILocation(line: 113, column: 1, scope: !3965)
!4172 = !{i64 2147594710, i64 2147594753, i64 2147594793}
!4173 = !DILocation(line: 114, column: 1, scope: !3965)
!4174 = !{i64 2147594936, i64 2147594979, i64 2147595019}
!4175 = !DILocation(line: 115, column: 1, scope: !3965)
!4176 = !{i64 2147595153, i64 2147595196, i64 2147595236}
!4177 = !DILocation(line: 116, column: 1, scope: !3965)
!4178 = !{i64 2147595430, i64 2147595473, i64 2147595513}
!4179 = !DILocation(line: 117, column: 1, scope: !3965)
!4180 = !{i64 2147595656, i64 2147595699, i64 2147595739}
!4181 = !DILocation(line: 118, column: 1, scope: !3965)
!4182 = !{i64 2147595864, i64 2147595907, i64 2147595947}
!4183 = !DILocation(line: 119, column: 1, scope: !3965)
!4184 = !{i64 2147596060, i64 2147596103, i64 2147596143}
!4185 = !DILocation(line: 120, column: 1, scope: !3965)
!4186 = !{i64 2147596325, i64 2147596368, i64 2147596408}
!4187 = !DILocation(line: 121, column: 1, scope: !3965)
!4188 = !{i64 2147596539, i64 2147596582, i64 2147596622}
!4189 = !DILocation(line: 122, column: 1, scope: !3965)
!4190 = !{i64 2147596714, i64 2147596757, i64 2147596797}
!4191 = !DILocation(line: 123, column: 1, scope: !3965)
!4192 = !{i64 2147596968, i64 2147597011, i64 2147597051}
!4193 = !DILocation(line: 124, column: 1, scope: !3965)
!4194 = !{i64 2147597167, i64 2147597210, i64 2147597250}
!4195 = !DILocation(line: 125, column: 1, scope: !3965)
!4196 = !{i64 2147597409, i64 2147597452, i64 2147597492}
!4197 = !DILocation(line: 126, column: 1, scope: !3965)
!4198 = !{i64 2147597572, i64 2147597615, i64 2147597655}
!4199 = !DILocation(line: 127, column: 1, scope: !3965)
!4200 = !{i64 2147597759, i64 2147597802, i64 2147597842}
!4201 = !DILocation(line: 128, column: 1, scope: !3965)
!4202 = !{i64 2147597952, i64 2147597995, i64 2147598035}
!4203 = !DILocation(line: 129, column: 1, scope: !3965)
!4204 = !{i64 2147598135, i64 2147598178, i64 2147598218}
!4205 = !DILocation(line: 130, column: 1, scope: !3965)
!4206 = !{i64 2147598349, i64 2147598392, i64 2147598432}
!4207 = !DILocation(line: 131, column: 1, scope: !3965)
!4208 = !{i64 2147598560, i64 2147598603, i64 2147598643}
!4209 = !DILocation(line: 132, column: 1, scope: !3965)
!4210 = !{i64 2147598780, i64 2147598823, i64 2147598863}
!4211 = !DILocation(line: 133, column: 1, scope: !3965)
!4212 = !{i64 2147598987, i64 2147599030, i64 2147599070}
!4213 = !DILocation(line: 134, column: 1, scope: !3965)
!4214 = !{i64 2147603321, i64 2147603364, i64 2147603404}
!4215 = !DILocation(line: 135, column: 1, scope: !3965)
!4216 = !{i64 2147603569, i64 2147603612, i64 2147603652}
!4217 = !DILocation(line: 136, column: 1, scope: !3965)
!4218 = !{i64 2147603768, i64 2147603811, i64 2147603851}
!4219 = !DILocation(line: 137, column: 1, scope: !3965)
!4220 = !{i64 2147604003, i64 2147604046, i64 2147604086}
!4221 = !DILocation(line: 138, column: 1, scope: !3965)
!4222 = !{i64 2147604253, i64 2147604296, i64 2147604336}
!4223 = !DILocation(line: 139, column: 1, scope: !3965)
!4224 = !{i64 2147604455, i64 2147604498, i64 2147604538}
!4225 = !DILocation(line: 140, column: 1, scope: !3965)
!4226 = !{i64 2147604678, i64 2147604721, i64 2147604761}
!4227 = !DILocation(line: 141, column: 1, scope: !3965)
!4228 = !{i64 2147604892, i64 2147604935, i64 2147604975}
!4229 = !DILocation(line: 142, column: 1, scope: !3965)
!4230 = !{i64 2147605136, i64 2147605179, i64 2147605219}
!4231 = !DILocation(line: 143, column: 1, scope: !3965)
!4232 = !{i64 2147605365, i64 2147605408, i64 2147605448}
!4233 = !DILocation(line: 144, column: 1, scope: !3965)
!4234 = !{i64 2147605594, i64 2147605637, i64 2147605677}
!4235 = !DILocation(line: 145, column: 1, scope: !3965)
!4236 = !{i64 2147605802, i64 2147605845, i64 2147605885}
!4237 = !DILocation(line: 146, column: 1, scope: !3965)
!4238 = !{i64 2147606040, i64 2147606083, i64 2147606123}
!4239 = !DILocation(line: 147, column: 1, scope: !3965)
!4240 = !{i64 2147606266, i64 2147606309, i64 2147606349}
!4241 = !DILocation(line: 148, column: 1, scope: !3965)
!4242 = !{i64 2147606525, i64 2147606568, i64 2147606608}
!4243 = !DILocation(line: 149, column: 1, scope: !3965)
!4244 = !{i64 2147606745, i64 2147606788, i64 2147606828}
!4245 = !DILocation(line: 150, column: 1, scope: !3965)
!4246 = !{i64 2147606977, i64 2147607020, i64 2147607060}
!4247 = !DILocation(line: 151, column: 1, scope: !3965)
!4248 = !{i64 2147607218, i64 2147607261, i64 2147607301}
!4249 = !DILocation(line: 152, column: 1, scope: !3965)
!4250 = !{i64 2147607459, i64 2147607502, i64 2147607542}
!4251 = !DILocation(line: 153, column: 1, scope: !3965)
!4252 = !{i64 2147607682, i64 2147607725, i64 2147607765}
!4253 = !DILocation(line: 154, column: 1, scope: !3965)
!4254 = !{i64 2147607899, i64 2147607942, i64 2147607982}
!4255 = !DILocation(line: 155, column: 1, scope: !3965)
!4256 = !{i64 2147608140, i64 2147608183, i64 2147608223}
!4257 = !DILocation(line: 156, column: 1, scope: !3965)
!4258 = !{i64 2147608327, i64 2147608370, i64 2147608410}
!4259 = !DILocation(line: 157, column: 1, scope: !3965)
!4260 = !{i64 2147608514, i64 2147608557, i64 2147608597}
!4261 = !DILocation(line: 158, column: 1, scope: !3965)
!4262 = !{i64 2147608677, i64 2147608720, i64 2147608760}
!4263 = !DILocation(line: 159, column: 1, scope: !3965)
!4264 = !{i64 2147608936, i64 2147608979, i64 2147609019}
!4265 = !DILocation(line: 160, column: 1, scope: !3965)
!4266 = !{i64 2147609159, i64 2147609202, i64 2147609242}
!4267 = !DILocation(line: 161, column: 1, scope: !3965)
!4268 = !{i64 2147609388, i64 2147609431, i64 2147609471}
!4269 = !DILocation(line: 162, column: 1, scope: !3965)
!4270 = !{i64 2147609584, i64 2147609627, i64 2147609667}
!4271 = !DILocation(line: 163, column: 1, scope: !3965)
!4272 = !{i64 2147609796, i64 2147609839, i64 2147609879}
!4273 = !DILocation(line: 164, column: 1, scope: !3965)
!4274 = !{i64 2147610017, i64 2147610060, i64 2147610100}
!4275 = !DILocation(line: 165, column: 1, scope: !3965)
!4276 = !{i64 2147610231, i64 2147610274, i64 2147610314}
!4277 = !DILocation(line: 166, column: 1, scope: !3965)
!4278 = !{i64 2147610421, i64 2147610464, i64 2147610504}
!4279 = !DILocation(line: 167, column: 1, scope: !3965)
!4280 = !{i64 2147610620, i64 2147610663, i64 2147610703}
!4281 = !DILocation(line: 168, column: 1, scope: !3965)
!4282 = !{i64 2147610825, i64 2147610868, i64 2147610908}
!4283 = !DILocation(line: 169, column: 1, scope: !3965)
!4284 = !{i64 2147611045, i64 2147611088, i64 2147611128}
!4285 = !DILocation(line: 170, column: 1, scope: !3965)
!4286 = !{i64 2147611246, i64 2147611289, i64 2147611329}
!4287 = !DILocation(line: 171, column: 1, scope: !3965)
!4288 = !{i64 2147611445, i64 2147611488, i64 2147611528}
!4289 = !DILocation(line: 172, column: 1, scope: !3965)
!4290 = !{i64 2147611650, i64 2147611693, i64 2147611733}
!4291 = !DILocation(line: 173, column: 1, scope: !3965)
!4292 = !{i64 2147611819, i64 2147611862, i64 2147611902}
!4293 = !DILocation(line: 174, column: 1, scope: !3965)
!4294 = !{i64 2147616064, i64 2147616107, i64 2147616147}
!4295 = !DILocation(line: 175, column: 1, scope: !3965)
!4296 = !{i64 2147616248, i64 2147616291, i64 2147616331}
!4297 = !DILocation(line: 176, column: 1, scope: !3965)
!4298 = !{i64 2147616435, i64 2147616478, i64 2147616518}
!4299 = !DILocation(line: 177, column: 1, scope: !3965)
!4300 = !{i64 2147616619, i64 2147616662, i64 2147616702}
!4301 = !DILocation(line: 178, column: 1, scope: !3965)
!4302 = !{i64 2147616857, i64 2147616900, i64 2147616940}
!4303 = !DILocation(line: 179, column: 1, scope: !3965)
!4304 = !{i64 2147617087, i64 2147617130, i64 2147617170}
!4305 = !DILocation(line: 180, column: 1, scope: !3965)
!4306 = !{i64 2147617316, i64 2147617359, i64 2147617399}
!4307 = !DILocation(line: 181, column: 1, scope: !3965)
!4308 = !{i64 2147617503, i64 2147617546, i64 2147617586}
!4309 = !DILocation(line: 182, column: 1, scope: !3965)
!4310 = !{i64 2147617699, i64 2147617742, i64 2147617782}
!4311 = !DILocation(line: 183, column: 1, scope: !3965)
!4312 = !{i64 2147617907, i64 2147617950, i64 2147617990}
!4313 = !DILocation(line: 184, column: 1, scope: !3965)
!4314 = !{i64 2147618119, i64 2147618162, i64 2147618202}
!4315 = !DILocation(line: 185, column: 1, scope: !3965)
!4316 = !{i64 2147618318, i64 2147618361, i64 2147618401}
!4317 = !DILocation(line: 186, column: 1, scope: !3965)
!4318 = !{i64 2147618556, i64 2147618599, i64 2147618639}
!4319 = !DILocation(line: 187, column: 1, scope: !3965)
!4320 = !{i64 2147618752, i64 2147618795, i64 2147618835}
!4321 = !DILocation(line: 188, column: 1, scope: !3965)
!4322 = !{i64 2147618954, i64 2147618997, i64 2147619037}
!4323 = !DILocation(line: 189, column: 1, scope: !3965)
!4324 = !{i64 2147619147, i64 2147619190, i64 2147619230}
!4325 = !DILocation(line: 190, column: 1, scope: !3965)
!4326 = !{i64 2147619381, i64 2147619424, i64 2147619464}
!4327 = !DILocation(line: 191, column: 1, scope: !3965)
!4328 = !{i64 2147619544, i64 2147619587, i64 2147619627}
!4329 = !DILocation(line: 192, column: 1, scope: !3965)
!4330 = !{i64 2147619783, i64 2147619826, i64 2147619866}
!4331 = !DILocation(line: 193, column: 1, scope: !3965)
!4332 = !{i64 2147620022, i64 2147620065, i64 2147620105}
!4333 = !DILocation(line: 194, column: 1, scope: !3965)
!4334 = !{i64 2147620258, i64 2147620301, i64 2147620341}
!4335 = !DILocation(line: 195, column: 1, scope: !3965)
!4336 = !{i64 2147620488, i64 2147620531, i64 2147620571}
!4337 = !DILocation(line: 196, column: 1, scope: !3965)
!4338 = !{i64 2147620675, i64 2147620718, i64 2147620758}
!4339 = !DILocation(line: 197, column: 1, scope: !3965)
!4340 = !{i64 2147620874, i64 2147620917, i64 2147620957}
!4341 = !DILocation(line: 198, column: 1, scope: !3965)
!4342 = !{i64 2147621145, i64 2147621188, i64 2147621228}
!4343 = !DILocation(line: 199, column: 1, scope: !3965)
!4344 = !{i64 2147621320, i64 2147621363, i64 2147621403}
!4345 = !DILocation(line: 200, column: 1, scope: !3965)
!4346 = !{i64 2147621554, i64 2147621597, i64 2147621637}
!4347 = !DILocation(line: 201, column: 1, scope: !3965)
!4348 = !{i64 2147621762, i64 2147621805, i64 2147621845}
!4349 = !DILocation(line: 202, column: 1, scope: !3965)
!4350 = !{i64 2147621980, i64 2147622023, i64 2147622063}
!4351 = !DILocation(line: 203, column: 1, scope: !3965)
!4352 = !{i64 2147622170, i64 2147622213, i64 2147622253}
!4353 = !DILocation(line: 204, column: 1, scope: !3965)
!4354 = !{i64 2147622366, i64 2147622409, i64 2147622449}
!4355 = !DILocation(line: 205, column: 1, scope: !3965)
!4356 = !{i64 2147622572, i64 2147622615, i64 2147622655}
!4357 = !DILocation(line: 206, column: 1, scope: !3965)
!4358 = !{i64 2147622777, i64 2147622820, i64 2147622860}
!4359 = !DILocation(line: 207, column: 1, scope: !3965)
!4360 = !{i64 2147623003, i64 2147623046, i64 2147623086}
!4361 = !DILocation(line: 208, column: 1, scope: !3965)
!4362 = !{i64 2147623235, i64 2147623278, i64 2147623318}
!4363 = !DILocation(line: 209, column: 1, scope: !3965)
!4364 = !{i64 2147623419, i64 2147623462, i64 2147623502}
!4365 = !DILocation(line: 210, column: 1, scope: !3965)
!4366 = !{i64 2147623628, i64 2147623671, i64 2147623711}
!4367 = !DILocation(line: 211, column: 1, scope: !3965)
!4368 = !{i64 2147623812, i64 2147623855, i64 2147623895}
!4369 = !DILocation(line: 212, column: 1, scope: !3965)
!4370 = !{i64 2147624038, i64 2147624081, i64 2147624121}
!4371 = !DILocation(line: 213, column: 1, scope: !3965)
!4372 = !{i64 2147624264, i64 2147624307, i64 2147624347}
!4373 = !DILocation(line: 214, column: 1, scope: !3965)
!4374 = !{i64 2147624490, i64 2147624533, i64 2147624573}
!4375 = !DILocation(line: 215, column: 1, scope: !3965)
!4376 = !{i64 2147624716, i64 2147624759, i64 2147624799}
!4377 = !DILocation(line: 216, column: 1, scope: !3965)
!4378 = !{i64 2147624942, i64 2147624985, i64 2147625025}
!4379 = !DILocation(line: 217, column: 1, scope: !3965)
!4380 = !{i64 2147629235, i64 2147629278, i64 2147629318}
!4381 = !DILocation(line: 218, column: 1, scope: !3965)
!4382 = !{i64 2147629473, i64 2147629516, i64 2147629556}
!4383 = !DILocation(line: 219, column: 1, scope: !3965)
!4384 = !{i64 2147629693, i64 2147629736, i64 2147629776}
!4385 = !DILocation(line: 220, column: 1, scope: !3965)
!4386 = !{i64 2147629937, i64 2147629980, i64 2147630020}
!4387 = !DILocation(line: 221, column: 1, scope: !3965)
!4388 = !{i64 2147630178, i64 2147630221, i64 2147630261}
!4389 = !DILocation(line: 222, column: 1, scope: !3965)
!4390 = !{i64 2147630413, i64 2147630456, i64 2147630496}
!4391 = !DILocation(line: 223, column: 1, scope: !3965)
!4392 = !{i64 2147630645, i64 2147630688, i64 2147630728}
!4393 = !DILocation(line: 224, column: 1, scope: !3965)
!4394 = !{i64 2147630847, i64 2147630890, i64 2147630930}
!4395 = !DILocation(line: 225, column: 1, scope: !3965)
!4396 = !{i64 2147631097, i64 2147631140, i64 2147631180}
!4397 = !DILocation(line: 226, column: 1, scope: !3965)
!4398 = !{i64 2147631335, i64 2147631378, i64 2147631418}
!4399 = !DILocation(line: 227, column: 1, scope: !3965)
!4400 = !{i64 2147631519, i64 2147631562, i64 2147631602}
!4401 = !DILocation(line: 228, column: 1, scope: !3965)
!4402 = !{i64 2147631742, i64 2147631785, i64 2147631825}
!4403 = !DILocation(line: 229, column: 1, scope: !3965)
!4404 = !{i64 2147631980, i64 2147632023, i64 2147632063}
!4405 = !DILocation(line: 230, column: 1, scope: !3965)
!4406 = !{i64 2147632218, i64 2147632261, i64 2147632301}
!4407 = !DILocation(line: 231, column: 1, scope: !3965)
!4408 = !{i64 2147632411, i64 2147632454, i64 2147632494}
!4409 = !DILocation(line: 232, column: 1, scope: !3965)
!4410 = !{i64 2147632664, i64 2147632707, i64 2147632747}
!4411 = !DILocation(line: 233, column: 1, scope: !3965)
!4412 = !{i64 2147632878, i64 2147632921, i64 2147632961}
!4413 = !DILocation(line: 234, column: 1, scope: !3965)
!4414 = !{i64 2147633086, i64 2147633129, i64 2147633169}
!4415 = !DILocation(line: 235, column: 1, scope: !3965)
!4416 = !{i64 2147633276, i64 2147633319, i64 2147633359}
!4417 = !DILocation(line: 236, column: 1, scope: !3965)
!4418 = !{i64 2147633490, i64 2147633533, i64 2147633573}
!4419 = !DILocation(line: 237, column: 1, scope: !3965)
!4420 = !{i64 2147633752, i64 2147633795, i64 2147633835}
!4421 = !DILocation(line: 238, column: 1, scope: !3965)
!4422 = !{i64 2147633963, i64 2147634006, i64 2147634046}
!4423 = !DILocation(line: 239, column: 1, scope: !3965)
!4424 = !{i64 2147634207, i64 2147634250, i64 2147634290}
!4425 = !DILocation(line: 240, column: 1, scope: !3965)
!4426 = !{i64 2147634418, i64 2147634461, i64 2147634501}
!4427 = !DILocation(line: 241, column: 1, scope: !3965)
!4428 = !{i64 2147634647, i64 2147634690, i64 2147634730}
!4429 = !DILocation(line: 242, column: 1, scope: !3965)
!4430 = !{i64 2147634912, i64 2147634955, i64 2147634995}
!4431 = !DILocation(line: 243, column: 1, scope: !3965)
!4432 = !{i64 2147635117, i64 2147635160, i64 2147635200}
!4433 = !DILocation(line: 244, column: 1, scope: !3965)
!4434 = !{i64 2147635313, i64 2147635356, i64 2147635396}
!4435 = !DILocation(line: 245, column: 1, scope: !3965)
!4436 = !{i64 2147635536, i64 2147635579, i64 2147635619}
!4437 = !DILocation(line: 246, column: 1, scope: !3965)
!4438 = !{i64 2147635699, i64 2147635742, i64 2147635782}
!4439 = !DILocation(line: 247, column: 1, scope: !3965)
!4440 = !{i64 2147635904, i64 2147635947, i64 2147635987}
!4441 = !DILocation(line: 248, column: 1, scope: !3965)
!4442 = !{i64 2147636124, i64 2147636167, i64 2147636207}
!4443 = !DILocation(line: 249, column: 1, scope: !3965)
!4444 = !{i64 2147636338, i64 2147636381, i64 2147636421}
!4445 = !DILocation(line: 250, column: 1, scope: !3965)
!4446 = !{i64 2147636552, i64 2147636595, i64 2147636635}
!4447 = !DILocation(line: 251, column: 1, scope: !3965)
!4448 = !{i64 2147636763, i64 2147636806, i64 2147636846}
!4449 = !DILocation(line: 252, column: 1, scope: !3965)
!4450 = !{i64 2147636956, i64 2147636999, i64 2147637039}
!4451 = !DILocation(line: 253, column: 1, scope: !3965)
!4452 = !{i64 2147637155, i64 2147637198, i64 2147637238}
!4453 = !DILocation(line: 254, column: 1, scope: !3965)
!4454 = !{i64 2147637327, i64 2147637370, i64 2147637410}
!4455 = !DILocation(line: 255, column: 1, scope: !3965)
!4456 = !{i64 2147637520, i64 2147637563, i64 2147637603}
!4457 = !DILocation(line: 256, column: 1, scope: !3965)
!4458 = !{i64 2147641777, i64 2147641820, i64 2147641860}
!4459 = !DILocation(line: 257, column: 1, scope: !3965)
!4460 = !{i64 2147642004, i64 2147642047, i64 2147642087}
!4461 = !DILocation(line: 258, column: 1, scope: !3965)
!4462 = !{i64 2147642221, i64 2147642264, i64 2147642304}
!4463 = !DILocation(line: 259, column: 1, scope: !3965)
!4464 = !{i64 2147642513, i64 2147642556, i64 2147642596}
!4465 = !DILocation(line: 260, column: 1, scope: !3965)
!4466 = !{i64 2147642745, i64 2147642788, i64 2147642828}
!4467 = !DILocation(line: 261, column: 1, scope: !3965)
!4468 = !{i64 2147642962, i64 2147643005, i64 2147643045}
!4469 = !DILocation(line: 262, column: 1, scope: !3965)
!4470 = !{i64 2147643169, i64 2147643212, i64 2147643252}
!4471 = !DILocation(line: 263, column: 1, scope: !3965)
!4472 = !{i64 2147643370, i64 2147643413, i64 2147643453}
!4473 = !DILocation(line: 264, column: 1, scope: !3965)
!4474 = !{i64 2147643602, i64 2147643645, i64 2147643685}
!4475 = !DILocation(line: 265, column: 1, scope: !3965)
!4476 = !{i64 2147643810, i64 2147643853, i64 2147643893}
!4477 = !DILocation(line: 266, column: 1, scope: !3965)
!4478 = !{i64 2147644000, i64 2147644043, i64 2147644083}
!4479 = !DILocation(line: 267, column: 1, scope: !3965)
!4480 = !{i64 2147644226, i64 2147644269, i64 2147644309}
!4481 = !DILocation(line: 268, column: 1, scope: !3965)
!4482 = !{i64 2147644415, i64 2147644458, i64 2147644498}
!4483 = !DILocation(line: 269, column: 1, scope: !3965)
!4484 = !{i64 2147644686, i64 2147644729, i64 2147644769}
!4485 = !DILocation(line: 270, column: 1, scope: !3965)
!4486 = !{i64 2147644906, i64 2147644949, i64 2147644989}
!4487 = !DILocation(line: 271, column: 1, scope: !3965)
!4488 = !{i64 2147645159, i64 2147645202, i64 2147645242}
!4489 = !DILocation(line: 272, column: 1, scope: !3965)
!4490 = !{i64 2147645367, i64 2147645410, i64 2147645450}
!4491 = !DILocation(line: 273, column: 1, scope: !3965)
!4492 = !{i64 2147645599, i64 2147645642, i64 2147645682}
!4493 = !DILocation(line: 274, column: 1, scope: !3965)
!4494 = !{i64 2147645810, i64 2147645853, i64 2147645893}
!4495 = !DILocation(line: 275, column: 1, scope: !3965)
!4496 = !{i64 2147646000, i64 2147646043, i64 2147646083}
!4497 = !DILocation(line: 276, column: 1, scope: !3965)
!4498 = !{i64 2147646214, i64 2147646257, i64 2147646297}
!4499 = !DILocation(line: 277, column: 1, scope: !3965)
!4500 = !{i64 2147646413, i64 2147646456, i64 2147646496}
!4501 = !DILocation(line: 278, column: 1, scope: !3965)
!4502 = !{i64 2147646600, i64 2147646643, i64 2147646683}
!4503 = !DILocation(line: 279, column: 1, scope: !3965)
!4504 = !{i64 2147646808, i64 2147646851, i64 2147646891}
!4505 = !DILocation(line: 280, column: 1, scope: !3965)
!4506 = !{i64 2147647037, i64 2147647080, i64 2147647120}
!4507 = !DILocation(line: 281, column: 1, scope: !3965)
!4508 = !{i64 2147647239, i64 2147647282, i64 2147647322}
!4509 = !DILocation(line: 282, column: 1, scope: !3965)
!4510 = !{i64 2147647438, i64 2147647481, i64 2147647521}
!4511 = !DILocation(line: 283, column: 1, scope: !3965)
!4512 = !{i64 2147647655, i64 2147647698, i64 2147647738}
!4513 = !DILocation(line: 285, column: 1, scope: !3965)
!4514 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4515)
!4515 = !{!4516, !4517}
!4516 = !DILocalVariable(name: "arg", arg: 1, scope: !4514, file: !129, line: 30, type: !138)
!4517 = !DILocalVariable(name: "key", scope: !4514, file: !129, line: 32, type: !121)
!4518 = !DILocation(line: 0, scope: !4514)
!4519 = !DILocation(line: 37, column: 2, scope: !4514)
!4520 = !DILocation(line: 38, column: 2, scope: !4514)
!4521 = !DILocation(line: 55, column: 2, scope: !4522, inlinedAt: !4529)
!4522 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4526)
!4523 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!32}
!4526 = !{!4527, !4528}
!4527 = !DILocalVariable(name: "key", scope: !4522, file: !4523, line: 44, type: !32)
!4528 = !DILocalVariable(name: "tmp", scope: !4522, file: !4523, line: 53, type: !32)
!4529 = distinct !DILocation(line: 40, column: 8, scope: !4514)
!4530 = !{i64 1826667}
!4531 = !DILocation(line: 0, scope: !4522, inlinedAt: !4529)
!4532 = !DILocalVariable(name: "key", arg: 1, scope: !4533, file: !4523, line: 84, type: !32)
!4533 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{null, !32}
!4536 = !{!4532}
!4537 = !DILocation(line: 0, scope: !4533, inlinedAt: !4538)
!4538 = distinct !DILocation(line: 47, column: 2, scope: !4514)
!4539 = !DILocation(line: 95, column: 2, scope: !4533, inlinedAt: !4538)
!4540 = !{i64 1827484}
!4541 = !DILocation(line: 51, column: 18, scope: !4514)
!4542 = !DILocation(line: 53, column: 2, scope: !4514)
!4543 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4544, file: !4544, line: 1609, type: !2738, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4544 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4545 = !DILocation(line: 1611, column: 3, scope: !4543)
!4546 = !DILocation(line: 1612, column: 1, scope: !4543)
!4547 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4544, file: !4544, line: 1629, type: !2738, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4548 = !DILocation(line: 1631, column: 3, scope: !4547)
!4549 = !DILocation(line: 1632, column: 1, scope: !4547)
!4550 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !4551)
!4551 = !{!4552}
!4552 = !DILocalVariable(name: "dev", arg: 1, scope: !4550, file: !171, line: 26, type: !179)
!4553 = !DILocation(line: 0, scope: !4550)
!4554 = !DILocation(line: 68, column: 2, scope: !4550)
!4555 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4556, file: !4556, line: 57, type: !4557, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2198, retainedNodes: !4603)
!4556 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4557 = !DISubroutineType(types: !4558)
!4558 = !{null, !32, !4559}
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 32)
!4560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4561)
!4561 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2318, line: 141, baseType: !4562)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2318, line: 97, size: 256, elements: !4563)
!4563 = !{!4564}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4562, file: !2318, line: 107, baseType: !4565, size: 256)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2318, line: 98, size: 256, elements: !4566)
!4566 = !{!4567, !4572, !4577, !4582, !4587, !4592, !4597, !4602}
!4567 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 99, baseType: !4568, size: 32)
!4568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 99, size: 32, elements: !4569)
!4569 = !{!4570, !4571}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4568, file: !2318, line: 99, baseType: !121, size: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4568, file: !2318, line: 99, baseType: !121, size: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 100, baseType: !4573, size: 32, offset: 32)
!4573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 100, size: 32, elements: !4574)
!4574 = !{!4575, !4576}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4573, file: !2318, line: 100, baseType: !121, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4573, file: !2318, line: 100, baseType: !121, size: 32)
!4577 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 101, baseType: !4578, size: 32, offset: 64)
!4578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 101, size: 32, elements: !4579)
!4579 = !{!4580, !4581}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4578, file: !2318, line: 101, baseType: !121, size: 32)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4578, file: !2318, line: 101, baseType: !121, size: 32)
!4582 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 102, baseType: !4583, size: 32, offset: 96)
!4583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 102, size: 32, elements: !4584)
!4584 = !{!4585, !4586}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4583, file: !2318, line: 102, baseType: !121, size: 32)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4583, file: !2318, line: 102, baseType: !121, size: 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 103, baseType: !4588, size: 32, offset: 128)
!4588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 103, size: 32, elements: !4589)
!4589 = !{!4590, !4591}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4588, file: !2318, line: 103, baseType: !121, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4588, file: !2318, line: 103, baseType: !121, size: 32)
!4592 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 104, baseType: !4593, size: 32, offset: 160)
!4593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 104, size: 32, elements: !4594)
!4594 = !{!4595, !4596}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4593, file: !2318, line: 104, baseType: !121, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4593, file: !2318, line: 104, baseType: !121, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !2318, line: 105, baseType: !4598, size: 32, offset: 192)
!4598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !2318, line: 105, size: 32, elements: !4599)
!4599 = !{!4600, !4601}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4598, file: !2318, line: 105, baseType: !121, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4598, file: !2318, line: 105, baseType: !121, size: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4565, file: !2318, line: 106, baseType: !121, size: 32, offset: 224)
!4603 = !{!4604, !4605}
!4604 = !DILocalVariable(name: "reason", arg: 1, scope: !4555, file: !4556, line: 57, type: !32)
!4605 = !DILocalVariable(name: "esf", arg: 2, scope: !4555, file: !4556, line: 57, type: !4559)
!4606 = !DILocation(line: 0, scope: !4555)
!4607 = !DILocation(line: 63, column: 2, scope: !4555)
!4608 = !DILocation(line: 64, column: 1, scope: !4555)
!4609 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4556, file: !4556, line: 82, type: !4610, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2198, retainedNodes: !4625)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !4559, !4612}
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 32)
!4613 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !4614)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4615)
!4615 = !{!4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4614, file: !284, line: 26, baseType: !121, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4614, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4614, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4614, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4614, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4614, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4614, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4614, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4614, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4625 = !{!4626, !4627, !4628}
!4626 = !DILocalVariable(name: "esf", arg: 1, scope: !4609, file: !4556, line: 82, type: !4559)
!4627 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4609, file: !4556, line: 82, type: !4612)
!4628 = !DILocalVariable(name: "reason", scope: !4609, file: !4556, line: 88, type: !32)
!4629 = !DILocation(line: 0, scope: !4609)
!4630 = !DILocation(line: 88, column: 35, scope: !4609)
!4631 = !DILocation(line: 108, column: 2, scope: !4609)
!4632 = !DILocation(line: 131, column: 1, scope: !4609)
!4633 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4556, file: !4556, line: 133, type: !4634, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2198, retainedNodes: !4636)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{null, !102}
!4636 = !{!4637, !4638, !4639}
!4637 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4633, file: !4556, line: 133, type: !102)
!4638 = !DILocalVariable(name: "ssf_contents", scope: !4633, file: !4556, line: 135, type: !687)
!4639 = !DILocalVariable(name: "oops_esf", scope: !4633, file: !4556, line: 136, type: !4561)
!4640 = !DILocation(line: 0, scope: !4633)
!4641 = !DILocation(line: 136, column: 2, scope: !4633)
!4642 = !DILocation(line: 136, column: 15, scope: !4633)
!4643 = !DILocation(line: 139, column: 22, scope: !4633)
!4644 = !DILocation(line: 139, column: 17, scope: !4633)
!4645 = !DILocation(line: 139, column: 20, scope: !4633)
!4646 = !DILocation(line: 141, column: 2, scope: !4633)
!4647 = !DILocation(line: 142, column: 2, scope: !4633)
!4648 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4649, file: !4649, line: 40, type: !4534, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4650)
!4649 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "irq", arg: 1, scope: !4648, file: !4649, line: 40, type: !32)
!4652 = !DILocation(line: 0, scope: !4648)
!4653 = !DILocation(line: 42, column: 2, scope: !4648)
!4654 = !DILocation(line: 43, column: 1, scope: !4648)
!4655 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !4656, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4658)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{null, !592}
!4658 = !{!4659}
!4659 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4655, file: !356, line: 1684, type: !592)
!4660 = !DILocation(line: 0, scope: !4655)
!4661 = !DILocation(line: 1686, column: 23, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4655, file: !356, line: 1686, column: 7)
!4663 = !DILocation(line: 1686, column: 7, scope: !4655)
!4664 = !DILocation(line: 1688, column: 5, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !356, line: 1687, column: 3)
!4666 = !{i64 2150355249}
!4667 = !DILocation(line: 1689, column: 81, scope: !4665)
!4668 = !DILocation(line: 1689, column: 60, scope: !4665)
!4669 = !DILocation(line: 1689, column: 34, scope: !4665)
!4670 = !DILocation(line: 1689, column: 5, scope: !4665)
!4671 = !DILocation(line: 1689, column: 43, scope: !4665)
!4672 = !DILocation(line: 1690, column: 5, scope: !4665)
!4673 = !{i64 2150355363}
!4674 = !DILocation(line: 1691, column: 3, scope: !4665)
!4675 = !DILocation(line: 1692, column: 1, scope: !4655)
!4676 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4649, file: !4649, line: 45, type: !4534, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4677)
!4677 = !{!4678}
!4678 = !DILocalVariable(name: "irq", arg: 1, scope: !4676, file: !4649, line: 45, type: !32)
!4679 = !DILocation(line: 0, scope: !4676)
!4680 = !DILocation(line: 47, column: 2, scope: !4676)
!4681 = !DILocation(line: 48, column: 1, scope: !4676)
!4682 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !4656, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4683)
!4683 = !{!4684}
!4684 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4682, file: !356, line: 1722, type: !592)
!4685 = !DILocation(line: 0, scope: !4682)
!4686 = !DILocation(line: 1724, column: 23, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4682, file: !356, line: 1724, column: 7)
!4688 = !DILocation(line: 1724, column: 7, scope: !4682)
!4689 = !DILocation(line: 1726, column: 81, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !356, line: 1725, column: 3)
!4691 = !DILocation(line: 1726, column: 60, scope: !4690)
!4692 = !DILocation(line: 1726, column: 34, scope: !4690)
!4693 = !DILocation(line: 1726, column: 5, scope: !4690)
!4694 = !DILocation(line: 1726, column: 43, scope: !4690)
!4695 = !DILocation(line: 271, column: 3, scope: !4696, inlinedAt: !4698)
!4696 = distinct !DISubprogram(name: "__DSB", scope: !4697, file: !4697, line: 269, type: !2738, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !322)
!4697 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4698 = distinct !DILocation(line: 1727, column: 5, scope: !4690)
!4699 = !{i64 2809632}
!4700 = !DILocation(line: 260, column: 3, scope: !4701, inlinedAt: !4702)
!4701 = distinct !DISubprogram(name: "__ISB", scope: !4697, file: !4697, line: 258, type: !2738, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !322)
!4702 = distinct !DILocation(line: 1728, column: 5, scope: !4690)
!4703 = !{i64 2809349}
!4704 = !DILocation(line: 1729, column: 3, scope: !4690)
!4705 = !DILocation(line: 1730, column: 1, scope: !4682)
!4706 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4649, file: !4649, line: 50, type: !4707, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4709)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!103, !32}
!4709 = !{!4710}
!4710 = !DILocalVariable(name: "irq", arg: 1, scope: !4706, file: !4649, line: 50, type: !32)
!4711 = !DILocation(line: 0, scope: !4706)
!4712 = !DILocation(line: 52, column: 20, scope: !4706)
!4713 = !DILocation(line: 52, column: 9, scope: !4706)
!4714 = !DILocation(line: 52, column: 41, scope: !4706)
!4715 = !DILocation(line: 52, column: 39, scope: !4706)
!4716 = !DILocation(line: 52, column: 2, scope: !4706)
!4717 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4649, file: !4649, line: 64, type: !4718, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4720)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{null, !32, !32, !121}
!4720 = !{!4721, !4722, !4723}
!4721 = !DILocalVariable(name: "irq", arg: 1, scope: !4717, file: !4649, line: 64, type: !32)
!4722 = !DILocalVariable(name: "prio", arg: 2, scope: !4717, file: !4649, line: 64, type: !32)
!4723 = !DILocalVariable(name: "flags", arg: 3, scope: !4717, file: !4649, line: 64, type: !121)
!4724 = !DILocation(line: 0, scope: !4717)
!4725 = !DILocation(line: 83, column: 8, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !4649, line: 82, column: 9)
!4727 = distinct !DILexicalBlock(scope: !4717, file: !4649, line: 76, column: 6)
!4728 = !DILocation(line: 95, column: 2, scope: !4717)
!4729 = !DILocation(line: 96, column: 1, scope: !4717)
!4730 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4731, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4733)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{null, !592, !121}
!4733 = !{!4734, !4735}
!4734 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4730, file: !356, line: 1814, type: !592)
!4735 = !DILocalVariable(name: "priority", arg: 2, scope: !4730, file: !356, line: 1814, type: !121)
!4736 = !DILocation(line: 0, scope: !4730)
!4737 = !DILocation(line: 0, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4730, file: !356, line: 1816, column: 7)
!4739 = !DILocation(line: 1816, column: 7, scope: !4730)
!4740 = !DILocation(line: 1824, column: 1, scope: !4730)
!4741 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4649, file: !4649, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2209, retainedNodes: !4742)
!4742 = !{!4743}
!4743 = !DILocalVariable(name: "unused", arg: 1, scope: !4741, file: !4649, line: 155, type: !13)
!4744 = !DILocation(line: 0, scope: !4741)
!4745 = !DILocation(line: 159, column: 2, scope: !4741)
!4746 = !DILocation(line: 160, column: 1, scope: !4741)
!4747 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4748, file: !4748, line: 87, type: !2738, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !322)
!4748 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4749 = !DILocation(line: 89, column: 2, scope: !4747)
!4750 = !DILocation(line: 90, column: 2, scope: !4747)
!4751 = !DILocation(line: 91, column: 1, scope: !4747)
!4752 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4748, file: !4748, line: 23, type: !2738, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!4753 = !DISubprogram(name: "z_arm_int_exit", scope: !4754, file: !4754, line: 153, type: !2738, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!4754 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4755 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4756, file: !4756, line: 256, type: !2738, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !322)
!4756 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4757 = !DILocation(line: 258, column: 2, scope: !4755)
!4758 = !DILocation(line: 260, column: 2, scope: !4755)
!4759 = !DILocation(line: 262, column: 2, scope: !4755)
!4760 = !DILocation(line: 263, column: 2, scope: !4755)
!4761 = !DILocation(line: 267, column: 2, scope: !4755)
!4762 = !DILocation(line: 268, column: 2, scope: !4755)
!4763 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4756, file: !4756, line: 53, type: !2738, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !322)
!4764 = !DILocation(line: 55, column: 12, scope: !4763)
!4765 = !DILocation(line: 271, column: 3, scope: !4766, inlinedAt: !4767)
!4766 = distinct !DISubprogram(name: "__DSB", scope: !4697, file: !4697, line: 269, type: !2738, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !322)
!4767 = distinct !DILocation(line: 56, column: 2, scope: !4763)
!4768 = !{i64 2808303}
!4769 = !DILocation(line: 260, column: 3, scope: !4770, inlinedAt: !4771)
!4770 = distinct !DISubprogram(name: "__ISB", scope: !4697, file: !4697, line: 258, type: !2738, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !322)
!4771 = distinct !DILocation(line: 57, column: 2, scope: !4763)
!4772 = !{i64 2808020}
!4773 = !DILocation(line: 58, column: 1, scope: !4763)
!4774 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !4756, file: !4756, line: 96, type: !2738, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !322)
!4775 = !DILocation(line: 103, column: 13, scope: !4774)
!4776 = !DILocation(line: 975, column: 3, scope: !4777, inlinedAt: !4782)
!4777 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4697, file: !4697, line: 971, type: !4778, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !4780)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!121}
!4780 = !{!4781}
!4781 = !DILocalVariable(name: "result", scope: !4777, file: !4697, line: 973, type: !121)
!4782 = distinct !DILocation(line: 189, column: 16, scope: !4774)
!4783 = !{i64 2829133}
!4784 = !DILocation(line: 0, scope: !4777, inlinedAt: !4782)
!4785 = !DILocation(line: 189, column: 32, scope: !4774)
!4786 = !DILocalVariable(name: "control", arg: 1, scope: !4787, file: !4697, line: 1001, type: !121)
!4787 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4697, file: !4697, line: 1001, type: !4788, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2257, retainedNodes: !4790)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !121}
!4790 = !{!4786}
!4791 = !DILocation(line: 0, scope: !4787, inlinedAt: !4792)
!4792 = distinct !DILocation(line: 189, column: 2, scope: !4774)
!4793 = !DILocation(line: 1003, column: 3, scope: !4787, inlinedAt: !4792)
!4794 = !{i64 2829853}
!4795 = !DILocation(line: 260, column: 3, scope: !4770, inlinedAt: !4796)
!4796 = distinct !DILocation(line: 1004, column: 3, scope: !4787, inlinedAt: !4792)
!4797 = !DILocation(line: 191, column: 1, scope: !4774)
!4798 = distinct !DISubprogram(name: "arch_swap", scope: !4799, file: !4799, line: 33, type: !4707, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2285, retainedNodes: !4800)
!4799 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4800 = !{!4801}
!4801 = !DILocalVariable(name: "key", arg: 1, scope: !4798, file: !4799, line: 33, type: !32)
!4802 = !DILocation(line: 0, scope: !4798)
!4803 = !DILocation(line: 36, column: 2, scope: !4798)
!4804 = !DILocation(line: 36, column: 17, scope: !4798)
!4805 = !DILocation(line: 36, column: 25, scope: !4798)
!4806 = !DILocation(line: 37, column: 37, scope: !4798)
!4807 = !DILocation(line: 37, column: 17, scope: !4798)
!4808 = !DILocation(line: 37, column: 35, scope: !4798)
!4809 = !DILocation(line: 41, column: 12, scope: !4798)
!4810 = !DILocalVariable(name: "key", arg: 1, scope: !4811, file: !4523, line: 84, type: !32)
!4811 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2285, retainedNodes: !4812)
!4812 = !{!4810}
!4813 = !DILocation(line: 0, scope: !4811, inlinedAt: !4814)
!4814 = distinct !DILocation(line: 44, column: 2, scope: !4798)
!4815 = !DILocation(line: 95, column: 2, scope: !4811, inlinedAt: !4814)
!4816 = !{i64 1947499}
!4817 = !DILocation(line: 53, column: 9, scope: !4798)
!4818 = !DILocation(line: 53, column: 24, scope: !4798)
!4819 = !DILocation(line: 53, column: 2, scope: !4798)
!4820 = distinct !DISubprogram(name: "arch_new_thread", scope: !4821, file: !4821, line: 56, type: !4822, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !4929)
!4821 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4822 = !DISubroutineType(types: !4823)
!4823 = !{null, !4824, !4924, !957, !3040, !102, !102, !102}
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 32)
!4825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !4826)
!4826 = !{!4827, !4885, !4897, !4898, !4899, !4900, !4906, !4919}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4825, file: !211, line: 247, baseType: !4828, size: 384)
!4828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !4829)
!4829 = !{!4830, !4854, !4861, !4862, !4863, !4872, !4873, !4874}
!4830 = !DIDerivedType(tag: DW_TAG_member, scope: !4828, file: !211, line: 60, baseType: !4831, size: 64)
!4831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4828, file: !211, line: 60, size: 64, elements: !4832)
!4832 = !{!4833, !4848}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4831, file: !211, line: 61, baseType: !4834, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !4835)
!4835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !4836)
!4836 = !{!4837, !4843}
!4837 = !DIDerivedType(tag: DW_TAG_member, scope: !4835, file: !221, line: 38, baseType: !4838, size: 32)
!4838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4835, file: !221, line: 38, size: 32, elements: !4839)
!4839 = !{!4840, !4842}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4838, file: !221, line: 39, baseType: !4841, size: 32)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4838, file: !221, line: 40, baseType: !4841, size: 32)
!4843 = !DIDerivedType(tag: DW_TAG_member, scope: !4835, file: !221, line: 42, baseType: !4844, size: 32, offset: 32)
!4844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4835, file: !221, line: 42, size: 32, elements: !4845)
!4845 = !{!4846, !4847}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4844, file: !221, line: 43, baseType: !4841, size: 32)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4844, file: !221, line: 44, baseType: !4841, size: 32)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4831, file: !211, line: 62, baseType: !4849, size: 64)
!4849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !4850)
!4850 = !{!4851}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4849, file: !237, line: 50, baseType: !4852, size: 64)
!4852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4853, size: 64, elements: !242)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 32)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4828, file: !211, line: 68, baseType: !4855, size: 32, offset: 64)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 32)
!4856 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !4857)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !4858)
!4858 = !{!4859}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4857, file: !247, line: 232, baseType: !4860, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !4835)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4828, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4828, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!4863 = !DIDerivedType(tag: DW_TAG_member, scope: !4828, file: !211, line: 90, baseType: !4864, size: 16, offset: 112)
!4864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4828, file: !211, line: 90, size: 16, elements: !4865)
!4865 = !{!4866, !4871}
!4866 = !DIDerivedType(tag: DW_TAG_member, scope: !4864, file: !211, line: 91, baseType: !4867, size: 16)
!4867 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4864, file: !211, line: 91, size: 16, elements: !4868)
!4868 = !{!4869, !4870}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4867, file: !211, line: 96, baseType: !261, size: 8)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4867, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4864, file: !211, line: 100, baseType: !265, size: 16)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4828, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4828, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4828, file: !211, line: 131, baseType: !4875, size: 192, offset: 192)
!4875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !4876)
!4876 = !{!4877, !4878, !4884}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4875, file: !247, line: 245, baseType: !4834, size: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4875, file: !247, line: 246, baseType: !4879, size: 32, offset: 64)
!4879 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !4880)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 32)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !4883}
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 32)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4875, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4825, file: !211, line: 250, baseType: !4886, size: 288, offset: 384)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4887)
!4887 = !{!4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4886, file: !284, line: 26, baseType: !121, size: 32)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4886, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4886, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4886, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4886, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4886, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4886, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4886, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4886, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4825, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4825, file: !211, line: 256, baseType: !4856, size: 64, offset: 704)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4825, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4825, file: !211, line: 300, baseType: !4901, size: 96, offset: 800)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !4902)
!4902 = !{!4903, !4904, !4905}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4901, file: !211, line: 153, baseType: !22, size: 32)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4901, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4901, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4825, file: !211, line: 325, baseType: !4907, size: 32, offset: 896)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 32)
!4908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !4909)
!4909 = !{!4910, !4916, !4917}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4908, file: !307, line: 5074, baseType: !4911, size: 96)
!4911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !4912)
!4912 = !{!4913, !4914, !4915}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4911, file: !311, line: 57, baseType: !314, size: 32)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4911, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4911, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4908, file: !307, line: 5075, baseType: !4856, size: 64, offset: 96)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4908, file: !307, line: 5076, baseType: !4918, offset: 160)
!4918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4825, file: !211, line: 343, baseType: !4920, size: 64, offset: 928)
!4920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !4921)
!4921 = !{!4922, !4923}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4920, file: !284, line: 63, baseType: !121, size: 32)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4920, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 32)
!4925 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3041, line: 44, baseType: !4926)
!4926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !4927)
!4927 = !{!4928}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4926, file: !1828, line: 48, baseType: !146, size: 8)
!4929 = !{!4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937}
!4930 = !DILocalVariable(name: "thread", arg: 1, scope: !4820, file: !4821, line: 56, type: !4824)
!4931 = !DILocalVariable(name: "stack", arg: 2, scope: !4820, file: !4821, line: 56, type: !4924)
!4932 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !4820, file: !4821, line: 57, type: !957)
!4933 = !DILocalVariable(name: "entry", arg: 4, scope: !4820, file: !4821, line: 57, type: !3040)
!4934 = !DILocalVariable(name: "p1", arg: 5, scope: !4820, file: !4821, line: 58, type: !102)
!4935 = !DILocalVariable(name: "p2", arg: 6, scope: !4820, file: !4821, line: 58, type: !102)
!4936 = !DILocalVariable(name: "p3", arg: 7, scope: !4820, file: !4821, line: 58, type: !102)
!4937 = !DILocalVariable(name: "iframe", scope: !4820, file: !4821, line: 60, type: !2316)
!4938 = !DILocation(line: 0, scope: !4820)
!4939 = !DILocation(line: 85, column: 11, scope: !4820)
!4940 = !DILocation(line: 93, column: 10, scope: !4820)
!4941 = !DILocation(line: 98, column: 13, scope: !4820)
!4942 = !DILocation(line: 100, column: 15, scope: !4820)
!4943 = !DILocation(line: 100, column: 10, scope: !4820)
!4944 = !DILocation(line: 100, column: 13, scope: !4820)
!4945 = !DILocation(line: 101, column: 15, scope: !4820)
!4946 = !DILocation(line: 101, column: 10, scope: !4820)
!4947 = !DILocation(line: 101, column: 13, scope: !4820)
!4948 = !DILocation(line: 102, column: 15, scope: !4820)
!4949 = !DILocation(line: 102, column: 10, scope: !4820)
!4950 = !DILocation(line: 102, column: 13, scope: !4820)
!4951 = !DILocation(line: 103, column: 15, scope: !4820)
!4952 = !DILocation(line: 103, column: 10, scope: !4820)
!4953 = !DILocation(line: 103, column: 13, scope: !4820)
!4954 = !DILocation(line: 106, column: 10, scope: !4820)
!4955 = !DILocation(line: 106, column: 15, scope: !4820)
!4956 = !DILocation(line: 122, column: 29, scope: !4820)
!4957 = !DILocation(line: 122, column: 23, scope: !4820)
!4958 = !DILocation(line: 122, column: 27, scope: !4820)
!4959 = !DILocation(line: 123, column: 15, scope: !4820)
!4960 = !DILocation(line: 123, column: 23, scope: !4820)
!4961 = !DILocation(line: 143, column: 1, scope: !4820)
!4962 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !4821, file: !4821, line: 385, type: !4963, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !4966)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!121, !4965, !4965}
!4965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!4966 = !{!4967, !4968, !4969, !4972}
!4967 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !4962, file: !4821, line: 385, type: !4965)
!4968 = !DILocalVariable(name: "psp", arg: 2, scope: !4962, file: !4821, line: 385, type: !4965)
!4969 = !DILocalVariable(name: "thread", scope: !4962, file: !4821, line: 388, type: !4970)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 32)
!4971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4825)
!4972 = !DILocalVariable(name: "guard_len", scope: !4962, file: !4821, line: 405, type: !121)
!4973 = !DILocation(line: 0, scope: !4962)
!4974 = !DILocation(line: 388, column: 34, scope: !4962)
!4975 = !DILocation(line: 390, column: 13, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4962, file: !4821, line: 390, column: 6)
!4977 = !DILocation(line: 390, column: 6, scope: !4962)
!4978 = !DILocation(line: 438, column: 6, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4962, file: !4821, line: 438, column: 6)
!4980 = !DILocation(line: 438, column: 6, scope: !4962)
!4981 = !DILocation(line: 442, column: 3, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !4821, line: 440, column: 22)
!4983 = !DILocation(line: 455, column: 1, scope: !4962)
!4984 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !4821, file: !4821, line: 530, type: !4985, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !4987)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{null, !4824, !957, !3040}
!4987 = !{!4988, !4989, !4990}
!4988 = !DILocalVariable(name: "main_thread", arg: 1, scope: !4984, file: !4821, line: 530, type: !4824)
!4989 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !4984, file: !4821, line: 530, type: !957)
!4990 = !DILocalVariable(name: "_main", arg: 3, scope: !4984, file: !4821, line: 531, type: !3040)
!4991 = !DILocation(line: 0, scope: !4984)
!4992 = !DILocation(line: 535, column: 11, scope: !4984)
!4993 = !DILocation(line: 560, column: 2, scope: !4984)
!4994 = !DILocation(line: 576, column: 2, scope: !4984)
!4995 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!4996 = !DILocation(line: 603, column: 2, scope: !4984)
!4997 = distinct !DISubprogram(name: "z_arm_fault", scope: !4998, file: !4998, line: 1036, type: !4999, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5014)
!4998 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4999 = !DISubroutineType(types: !5000)
!5000 = !{null, !121, !121, !121, !5001}
!5001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 32)
!5002 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5003)
!5003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5004)
!5004 = !{!5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013}
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5003, file: !284, line: 26, baseType: !121, size: 32)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5003, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5003, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5003, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5003, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5003, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5003, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5003, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5003, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5014 = !{!5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5024}
!5015 = !DILocalVariable(name: "msp", arg: 1, scope: !4997, file: !4998, line: 1036, type: !121)
!5016 = !DILocalVariable(name: "psp", arg: 2, scope: !4997, file: !4998, line: 1036, type: !121)
!5017 = !DILocalVariable(name: "exc_return", arg: 3, scope: !4997, file: !4998, line: 1036, type: !121)
!5018 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !4997, file: !4998, line: 1037, type: !5001)
!5019 = !DILocalVariable(name: "reason", scope: !4997, file: !4998, line: 1039, type: !121)
!5020 = !DILocalVariable(name: "fault", scope: !4997, file: !4998, line: 1040, type: !103)
!5021 = !DILocalVariable(name: "recoverable", scope: !4997, file: !4998, line: 1041, type: !157)
!5022 = !DILocalVariable(name: "nested_exc", scope: !4997, file: !4998, line: 1041, type: !157)
!5023 = !DILocalVariable(name: "esf", scope: !4997, file: !4998, line: 1042, type: !2384)
!5024 = !DILocalVariable(name: "esf_copy", scope: !4997, file: !4998, line: 1047, type: !2385)
!5025 = !DILocation(line: 0, scope: !4997)
!5026 = !DILocation(line: 1040, column: 19, scope: !4997)
!5027 = !DILocation(line: 1040, column: 24, scope: !4997)
!5028 = !DILocation(line: 1041, column: 2, scope: !4997)
!5029 = !DILocation(line: 1047, column: 2, scope: !4997)
!5030 = !DILocation(line: 1047, column: 15, scope: !4997)
!5031 = !DILocalVariable(name: "key", arg: 1, scope: !5032, file: !4523, line: 84, type: !32)
!5032 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5033)
!5033 = !{!5031}
!5034 = !DILocation(line: 0, scope: !5032, inlinedAt: !5035)
!5035 = distinct !DILocation(line: 1050, column: 2, scope: !4997)
!5036 = !DILocation(line: 95, column: 2, scope: !5032, inlinedAt: !5035)
!5037 = !{i64 1980743}
!5038 = !DILocation(line: 1055, column: 9, scope: !4997)
!5039 = !DILocation(line: 1063, column: 11, scope: !4997)
!5040 = !DILocation(line: 1064, column: 6, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !4997, file: !4998, line: 1064, column: 6)
!5042 = !{i8 0, i8 2}
!5043 = !DILocation(line: 1064, column: 6, scope: !4997)
!5044 = !DILocation(line: 1070, column: 20, scope: !4997)
!5045 = !DILocation(line: 1070, column: 2, scope: !4997)
!5046 = !DILocation(line: 1089, column: 6, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !4997, file: !4998, line: 1089, column: 6)
!5048 = !DILocation(line: 0, scope: !5047)
!5049 = !DILocation(line: 1089, column: 6, scope: !4997)
!5050 = !DILocation(line: 1090, column: 28, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !4998, line: 1090, column: 7)
!5052 = distinct !DILexicalBlock(scope: !5047, file: !4998, line: 1089, column: 18)
!5053 = !DILocation(line: 1090, column: 44, scope: !5051)
!5054 = !DILocation(line: 1090, column: 7, scope: !5052)
!5055 = !DILocation(line: 1091, column: 24, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5051, file: !4998, line: 1090, column: 50)
!5057 = !DILocation(line: 1092, column: 3, scope: !5056)
!5058 = !DILocation(line: 1094, column: 23, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5047, file: !4998, line: 1093, column: 9)
!5060 = !DILocation(line: 1097, column: 2, scope: !4997)
!5061 = !DILocation(line: 1098, column: 1, scope: !4997)
!5062 = distinct !DISubprogram(name: "get_esf", scope: !4998, file: !4998, line: 894, type: !5063, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5066)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!2384, !121, !121, !121, !5065}
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5066 = !{!5067, !5068, !5069, !5070, !5071, !5072}
!5067 = !DILocalVariable(name: "msp", arg: 1, scope: !5062, file: !4998, line: 894, type: !121)
!5068 = !DILocalVariable(name: "psp", arg: 2, scope: !5062, file: !4998, line: 894, type: !121)
!5069 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5062, file: !4998, line: 894, type: !121)
!5070 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5062, file: !4998, line: 895, type: !5065)
!5071 = !DILocalVariable(name: "alternative_state_exc", scope: !5062, file: !4998, line: 897, type: !157)
!5072 = !DILocalVariable(name: "ptr_esf", scope: !5062, file: !4998, line: 898, type: !2384)
!5073 = !DILocation(line: 0, scope: !5062)
!5074 = !DILocation(line: 900, column: 14, scope: !5062)
!5075 = !DILocation(line: 902, column: 49, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5062, file: !4998, line: 902, column: 6)
!5077 = !DILocation(line: 902, column: 6, scope: !5062)
!5078 = !DILocation(line: 983, column: 18, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5062, file: !4998, line: 983, column: 6)
!5080 = !DILocation(line: 991, column: 7, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5082, file: !4998, line: 990, column: 30)
!5082 = distinct !DILexicalBlock(scope: !5062, file: !4998, line: 990, column: 6)
!5083 = !DILocation(line: 998, column: 16, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !4998, line: 995, column: 10)
!5085 = distinct !DILexicalBlock(scope: !5081, file: !4998, line: 991, column: 7)
!5086 = !DILocation(line: 1002, column: 2, scope: !5062)
!5087 = !DILocation(line: 1003, column: 1, scope: !5062)
!5088 = distinct !DISubprogram(name: "fault_handle", scope: !4998, file: !4998, line: 786, type: !5089, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5091)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!121, !2384, !103, !5065}
!5091 = !{!5092, !5093, !5094, !5095}
!5092 = !DILocalVariable(name: "esf", arg: 1, scope: !5088, file: !4998, line: 786, type: !2384)
!5093 = !DILocalVariable(name: "fault", arg: 2, scope: !5088, file: !4998, line: 786, type: !103)
!5094 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5088, file: !4998, line: 786, type: !5065)
!5095 = !DILocalVariable(name: "reason", scope: !5088, file: !4998, line: 788, type: !121)
!5096 = !DILocation(line: 0, scope: !5088)
!5097 = !DILocation(line: 790, column: 15, scope: !5088)
!5098 = !DILocation(line: 792, column: 2, scope: !5088)
!5099 = !DILocation(line: 794, column: 12, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5088, file: !4998, line: 792, column: 17)
!5101 = !DILocation(line: 795, column: 3, scope: !5100)
!5102 = !DILocation(line: 800, column: 12, scope: !5100)
!5103 = !DILocation(line: 801, column: 3, scope: !5100)
!5104 = !DILocation(line: 803, column: 12, scope: !5100)
!5105 = !DILocation(line: 804, column: 3, scope: !5100)
!5106 = !DILocation(line: 806, column: 12, scope: !5100)
!5107 = !DILocation(line: 807, column: 3, scope: !5100)
!5108 = !DILocation(line: 814, column: 3, scope: !5100)
!5109 = !DILocation(line: 815, column: 3, scope: !5100)
!5110 = !DILocation(line: 829, column: 2, scope: !5088)
!5111 = distinct !DISubprogram(name: "hard_fault", scope: !4998, file: !4998, line: 709, type: !5112, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5114)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!121, !2384, !5065}
!5114 = !{!5115, !5116, !5117}
!5115 = !DILocalVariable(name: "esf", arg: 1, scope: !5111, file: !4998, line: 709, type: !2384)
!5116 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5111, file: !4998, line: 709, type: !5065)
!5117 = !DILocalVariable(name: "reason", scope: !5111, file: !4998, line: 711, type: !121)
!5118 = !DILocation(line: 0, scope: !5111)
!5119 = !DILocation(line: 732, column: 15, scope: !5111)
!5120 = !DILocation(line: 734, column: 12, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5111, file: !4998, line: 734, column: 6)
!5122 = !DILocation(line: 734, column: 17, scope: !5121)
!5123 = !DILocation(line: 734, column: 41, scope: !5121)
!5124 = !DILocation(line: 734, column: 6, scope: !5111)
!5125 = !DILocation(line: 736, column: 19, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5121, file: !4998, line: 736, column: 13)
!5127 = !DILocation(line: 736, column: 49, scope: !5126)
!5128 = !DILocation(line: 736, column: 13, scope: !5121)
!5129 = !DILocation(line: 738, column: 19, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5126, file: !4998, line: 738, column: 13)
!5131 = !DILocation(line: 738, column: 24, scope: !5130)
!5132 = !DILocation(line: 738, column: 47, scope: !5130)
!5133 = !DILocation(line: 738, column: 13, scope: !5126)
!5134 = !DILocation(line: 740, column: 7, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !4998, line: 740, column: 7)
!5136 = distinct !DILexicalBlock(scope: !5130, file: !4998, line: 738, column: 53)
!5137 = !DILocation(line: 740, column: 7, scope: !5136)
!5138 = !DILocation(line: 742, column: 24, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5135, file: !4998, line: 740, column: 38)
!5140 = !DILocation(line: 743, column: 3, scope: !5139)
!5141 = !DILocation(line: 743, column: 20, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5135, file: !4998, line: 743, column: 14)
!5143 = !DILocation(line: 743, column: 25, scope: !5142)
!5144 = !DILocation(line: 743, column: 52, scope: !5142)
!5145 = !DILocation(line: 743, column: 14, scope: !5135)
!5146 = !DILocation(line: 744, column: 13, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5142, file: !4998, line: 743, column: 58)
!5148 = !DILocation(line: 745, column: 3, scope: !5147)
!5149 = !DILocation(line: 745, column: 20, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5142, file: !4998, line: 745, column: 14)
!5151 = !DILocation(line: 745, column: 25, scope: !5150)
!5152 = !DILocation(line: 745, column: 52, scope: !5150)
!5153 = !DILocation(line: 745, column: 14, scope: !5142)
!5154 = !DILocation(line: 746, column: 13, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5150, file: !4998, line: 745, column: 58)
!5156 = !DILocation(line: 747, column: 3, scope: !5155)
!5157 = !DILocation(line: 747, column: 20, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5150, file: !4998, line: 747, column: 14)
!5159 = !DILocation(line: 747, column: 52, scope: !5158)
!5160 = !DILocation(line: 747, column: 14, scope: !5150)
!5161 = !DILocation(line: 748, column: 13, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5158, file: !4998, line: 747, column: 58)
!5163 = !DILocation(line: 753, column: 3, scope: !5162)
!5164 = !DILocation(line: 766, column: 2, scope: !5111)
!5165 = distinct !DISubprogram(name: "mem_manage_fault", scope: !4998, file: !4998, line: 229, type: !5089, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5166)
!5166 = !{!5167, !5168, !5169, !5170, !5171, !5172, !5175}
!5167 = !DILocalVariable(name: "esf", arg: 1, scope: !5165, file: !4998, line: 229, type: !2384)
!5168 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5165, file: !4998, line: 229, type: !103)
!5169 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5165, file: !4998, line: 230, type: !5065)
!5170 = !DILocalVariable(name: "reason", scope: !5165, file: !4998, line: 232, type: !121)
!5171 = !DILocalVariable(name: "mmfar", scope: !5165, file: !4998, line: 233, type: !121)
!5172 = !DILocalVariable(name: "temp", scope: !5173, file: !4998, line: 254, type: !121)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !4998, line: 244, column: 48)
!5174 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 244, column: 6)
!5175 = !DILocalVariable(name: "min_stack_ptr", scope: !5176, file: !4998, line: 309, type: !121)
!5176 = distinct !DILexicalBlock(scope: !5177, file: !4998, line: 308, column: 43)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !4998, line: 308, column: 7)
!5178 = distinct !DILexicalBlock(scope: !5179, file: !4998, line: 289, column: 40)
!5179 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 288, column: 6)
!5180 = !DILocation(line: 0, scope: !5165)
!5181 = !DILocation(line: 237, column: 12, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 237, column: 6)
!5183 = !DILocation(line: 241, column: 12, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 241, column: 6)
!5185 = !DILocation(line: 244, column: 12, scope: !5174)
!5186 = !DILocation(line: 244, column: 17, scope: !5174)
!5187 = !DILocation(line: 244, column: 42, scope: !5174)
!5188 = !DILocation(line: 244, column: 6, scope: !5165)
!5189 = !DILocation(line: 254, column: 24, scope: !5173)
!5190 = !DILocation(line: 0, scope: !5173)
!5191 = !DILocation(line: 256, column: 13, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5173, file: !4998, line: 256, column: 7)
!5193 = !DILocation(line: 256, column: 18, scope: !5192)
!5194 = !DILocation(line: 256, column: 44, scope: !5192)
!5195 = !DILocation(line: 256, column: 7, scope: !5173)
!5196 = !DILocation(line: 259, column: 24, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !4998, line: 259, column: 8)
!5198 = distinct !DILexicalBlock(scope: !5192, file: !4998, line: 256, column: 50)
!5199 = !DILocation(line: 259, column: 8, scope: !5198)
!5200 = !DILocation(line: 261, column: 15, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !4998, line: 259, column: 30)
!5202 = !DILocation(line: 262, column: 4, scope: !5201)
!5203 = !DILocation(line: 265, column: 12, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 265, column: 6)
!5205 = !DILocation(line: 269, column: 12, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 269, column: 6)
!5207 = !DILocation(line: 288, column: 12, scope: !5179)
!5208 = !DILocation(line: 288, column: 17, scope: !5179)
!5209 = !DILocation(line: 288, column: 41, scope: !5179)
!5210 = !DILocation(line: 289, column: 9, scope: !5179)
!5211 = !DILocation(line: 289, column: 14, scope: !5179)
!5212 = !DILocation(line: 288, column: 6, scope: !5165)
!5213 = !DILocation(line: 308, column: 12, scope: !5177)
!5214 = !DILocation(line: 308, column: 17, scope: !5177)
!5215 = !DILocation(line: 308, column: 7, scope: !5178)
!5216 = !DILocation(line: 310, column: 6, scope: !5176)
!5217 = !DILocation(line: 309, column: 29, scope: !5176)
!5218 = !DILocation(line: 0, scope: !5176)
!5219 = !DILocation(line: 312, column: 8, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5176, file: !4998, line: 312, column: 8)
!5221 = !DILocation(line: 312, column: 8, scope: !5176)
!5222 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5223, file: !4697, line: 1099, type: !121)
!5223 = distinct !DISubprogram(name: "__set_PSP", scope: !4697, file: !4697, line: 1099, type: !4788, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5224)
!5224 = !{!5222}
!5225 = !DILocation(line: 0, scope: !5223, inlinedAt: !5226)
!5226 = distinct !DILocation(line: 338, column: 5, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5220, file: !4998, line: 312, column: 23)
!5228 = !DILocation(line: 1101, column: 3, scope: !5223, inlinedAt: !5226)
!5229 = !{i64 2859272}
!5230 = !DILocation(line: 341, column: 4, scope: !5227)
!5231 = !DILocation(line: 360, column: 12, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5165, file: !4998, line: 360, column: 6)
!5233 = !DILocation(line: 360, column: 17, scope: !5232)
!5234 = !DILocation(line: 360, column: 41, scope: !5232)
!5235 = !DILocation(line: 360, column: 6, scope: !5165)
!5236 = !DILocation(line: 361, column: 14, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5232, file: !4998, line: 360, column: 47)
!5238 = !DILocation(line: 362, column: 2, scope: !5237)
!5239 = !DILocation(line: 366, column: 12, scope: !5165)
!5240 = !DILocation(line: 369, column: 15, scope: !5165)
!5241 = !DILocation(line: 371, column: 2, scope: !5165)
!5242 = distinct !DISubprogram(name: "bus_fault", scope: !4998, file: !4998, line: 383, type: !5243, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5245)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!103, !2384, !103, !5065}
!5245 = !{!5246, !5247, !5248, !5249, !5250}
!5246 = !DILocalVariable(name: "esf", arg: 1, scope: !5242, file: !4998, line: 383, type: !2384)
!5247 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5242, file: !4998, line: 383, type: !103)
!5248 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5242, file: !4998, line: 383, type: !5065)
!5249 = !DILocalVariable(name: "reason", scope: !5242, file: !4998, line: 385, type: !121)
!5250 = !DILocalVariable(name: "bfar", scope: !5251, file: !4998, line: 405, type: !121)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !4998, line: 395, column: 42)
!5252 = distinct !DILexicalBlock(scope: !5242, file: !4998, line: 395, column: 6)
!5253 = !DILocation(line: 0, scope: !5242)
!5254 = !DILocation(line: 389, column: 11, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5242, file: !4998, line: 389, column: 6)
!5256 = !DILocation(line: 392, column: 11, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5242, file: !4998, line: 392, column: 6)
!5258 = !DILocation(line: 395, column: 11, scope: !5252)
!5259 = !DILocation(line: 395, column: 16, scope: !5252)
!5260 = !DILocation(line: 395, column: 6, scope: !5242)
!5261 = !DILocation(line: 405, column: 3, scope: !5251)
!5262 = !DILocation(line: 0, scope: !5251)
!5263 = !DILocation(line: 407, column: 13, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5251, file: !4998, line: 407, column: 7)
!5265 = !DILocation(line: 407, column: 18, scope: !5264)
!5266 = !DILocation(line: 407, column: 44, scope: !5264)
!5267 = !DILocation(line: 407, column: 7, scope: !5251)
!5268 = !DILocation(line: 411, column: 15, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !4998, line: 409, column: 30)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !4998, line: 409, column: 8)
!5271 = distinct !DILexicalBlock(scope: !5264, file: !4998, line: 407, column: 50)
!5272 = !DILocation(line: 412, column: 4, scope: !5269)
!5273 = !DILocation(line: 415, column: 11, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5242, file: !4998, line: 415, column: 6)
!5275 = !DILocation(line: 418, column: 12, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5242, file: !4998, line: 418, column: 6)
!5277 = !DILocation(line: 418, column: 17, scope: !5276)
!5278 = !DILocation(line: 418, column: 41, scope: !5276)
!5279 = !DILocation(line: 418, column: 6, scope: !5242)
!5280 = !DILocation(line: 423, column: 18, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5276, file: !4998, line: 423, column: 13)
!5282 = !DILocation(line: 524, column: 12, scope: !5242)
!5283 = !DILocation(line: 526, column: 15, scope: !5242)
!5284 = !DILocation(line: 528, column: 2, scope: !5242)
!5285 = distinct !DISubprogram(name: "usage_fault", scope: !4998, file: !4998, line: 539, type: !5286, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5290)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!121, !5288}
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 32)
!5289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2385)
!5290 = !{!5291, !5292}
!5291 = !DILocalVariable(name: "esf", arg: 1, scope: !5285, file: !4998, line: 539, type: !5288)
!5292 = !DILocalVariable(name: "reason", scope: !5285, file: !4998, line: 541, type: !121)
!5293 = !DILocation(line: 0, scope: !5285)
!5294 = !DILocation(line: 546, column: 12, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5285, file: !4998, line: 546, column: 6)
!5296 = !DILocation(line: 549, column: 12, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5285, file: !4998, line: 549, column: 6)
!5298 = !DILocation(line: 567, column: 12, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5285, file: !4998, line: 567, column: 6)
!5300 = !DILocation(line: 570, column: 12, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5285, file: !4998, line: 570, column: 6)
!5302 = !DILocation(line: 573, column: 12, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5285, file: !4998, line: 573, column: 6)
!5304 = !DILocation(line: 576, column: 12, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5285, file: !4998, line: 576, column: 6)
!5306 = !DILocation(line: 581, column: 12, scope: !5285)
!5307 = !DILocation(line: 583, column: 2, scope: !5285)
!5308 = distinct !DISubprogram(name: "debug_monitor", scope: !4998, file: !4998, line: 632, type: !5309, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5311)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{null, !2384, !5065}
!5311 = !{!5312, !5313}
!5312 = !DILocalVariable(name: "esf", arg: 1, scope: !5308, file: !4998, line: 632, type: !2384)
!5313 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5308, file: !4998, line: 632, type: !5065)
!5314 = !DILocation(line: 0, scope: !5308)
!5315 = !DILocation(line: 634, column: 15, scope: !5308)
!5316 = !DILocation(line: 652, column: 1, scope: !5308)
!5317 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !4998, file: !4998, line: 658, type: !5318, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !5320)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!157, !2384}
!5320 = !{!5321, !5322, !5323}
!5321 = !DILocalVariable(name: "esf", arg: 1, scope: !5317, file: !4998, line: 658, type: !2384)
!5322 = !DILocalVariable(name: "ret_addr", scope: !5317, file: !4998, line: 660, type: !2427)
!5323 = !DILocalVariable(name: "fault_insn", scope: !5317, file: !4998, line: 686, type: !265)
!5324 = !DILocation(line: 0, scope: !5317)
!5325 = !DILocation(line: 660, column: 46, scope: !5317)
!5326 = !DILocation(line: 660, column: 23, scope: !5317)
!5327 = !DILocation(line: 682, column: 11, scope: !5317)
!5328 = !DILocation(line: 271, column: 3, scope: !5329, inlinedAt: !5330)
!5329 = distinct !DISubprogram(name: "__DSB", scope: !4697, file: !4697, line: 269, type: !2738, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !322)
!5330 = distinct !DILocation(line: 683, column: 2, scope: !5317)
!5331 = !{i64 2835407}
!5332 = !DILocation(line: 260, column: 3, scope: !5333, inlinedAt: !5334)
!5333 = distinct !DISubprogram(name: "__ISB", scope: !4697, file: !4697, line: 258, type: !2738, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !322)
!5334 = distinct !DILocation(line: 684, column: 2, scope: !5317)
!5335 = !{i64 2835124}
!5336 = !DILocation(line: 686, column: 35, scope: !5317)
!5337 = !DILocation(line: 686, column: 24, scope: !5317)
!5338 = !DILocation(line: 688, column: 11, scope: !5317)
!5339 = !DILocation(line: 271, column: 3, scope: !5329, inlinedAt: !5340)
!5340 = distinct !DILocation(line: 689, column: 2, scope: !5317)
!5341 = !DILocation(line: 260, column: 3, scope: !5333, inlinedAt: !5342)
!5342 = distinct !DILocation(line: 690, column: 2, scope: !5317)
!5343 = !DILocation(line: 693, column: 45, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5317, file: !4998, line: 693, column: 6)
!5345 = !DILocation(line: 699, column: 1, scope: !5317)
!5346 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !4998, file: !4998, line: 1107, type: !2738, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !322)
!5347 = !DILocation(line: 1111, column: 11, scope: !5346)
!5348 = !DILocation(line: 1136, column: 1, scope: !5346)
!5349 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5350, file: !5350, line: 26, type: !2738, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2428, retainedNodes: !5351)
!5350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5351 = !{!5352}
!5352 = !DILocalVariable(name: "irq", scope: !5349, file: !5350, line: 28, type: !103)
!5353 = !DILocation(line: 0, scope: !5349)
!5354 = !DILocation(line: 30, column: 2, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5349, file: !5350, line: 30, column: 2)
!5356 = !DILocation(line: 31, column: 3, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !5350, line: 30, column: 39)
!5358 = distinct !DILexicalBlock(scope: !5355, file: !5350, line: 30, column: 2)
!5359 = !DILocation(line: 30, column: 35, scope: !5358)
!5360 = !DILocation(line: 30, column: 13, scope: !5358)
!5361 = distinct !{!5361, !5354, !5362}
!5362 = !DILocation(line: 32, column: 2, scope: !5355)
!5363 = !DILocation(line: 33, column: 1, scope: !5349)
!5364 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4731, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2428, retainedNodes: !5365)
!5365 = !{!5366, !5367}
!5366 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5364, file: !356, line: 1814, type: !592)
!5367 = !DILocalVariable(name: "priority", arg: 2, scope: !5364, file: !356, line: 1814, type: !121)
!5368 = !DILocation(line: 0, scope: !5364)
!5369 = !DILocation(line: 1816, column: 7, scope: !5364)
!5370 = !DILocation(line: 0, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5364, file: !356, line: 1816, column: 7)
!5372 = !DILocation(line: 1824, column: 1, scope: !5364)
!5373 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5374, file: !5374, line: 27, type: !5375, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5478)
!5374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5375 = !DISubroutineType(types: !5376)
!5376 = !{null, !5377}
!5377 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !5378)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 32)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5380)
!5380 = !{!5381, !5439, !5451, !5452, !5453, !5454, !5460, !5473}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5379, file: !211, line: 247, baseType: !5382, size: 384)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5383)
!5383 = !{!5384, !5408, !5415, !5416, !5417, !5426, !5427, !5428}
!5384 = !DIDerivedType(tag: DW_TAG_member, scope: !5382, file: !211, line: 60, baseType: !5385, size: 64)
!5385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5382, file: !211, line: 60, size: 64, elements: !5386)
!5386 = !{!5387, !5402}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5385, file: !211, line: 61, baseType: !5388, size: 64)
!5388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5389)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5390)
!5390 = !{!5391, !5397}
!5391 = !DIDerivedType(tag: DW_TAG_member, scope: !5389, file: !221, line: 38, baseType: !5392, size: 32)
!5392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5389, file: !221, line: 38, size: 32, elements: !5393)
!5393 = !{!5394, !5396}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5392, file: !221, line: 39, baseType: !5395, size: 32)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 32)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5392, file: !221, line: 40, baseType: !5395, size: 32)
!5397 = !DIDerivedType(tag: DW_TAG_member, scope: !5389, file: !221, line: 42, baseType: !5398, size: 32, offset: 32)
!5398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5389, file: !221, line: 42, size: 32, elements: !5399)
!5399 = !{!5400, !5401}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5398, file: !221, line: 43, baseType: !5395, size: 32)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5398, file: !221, line: 44, baseType: !5395, size: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5385, file: !211, line: 62, baseType: !5403, size: 64)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5404)
!5404 = !{!5405}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5403, file: !237, line: 50, baseType: !5406, size: 64)
!5406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5407, size: 64, elements: !242)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 32)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5382, file: !211, line: 68, baseType: !5409, size: 32, offset: 64)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 32)
!5410 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5411)
!5411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5412)
!5412 = !{!5413}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5411, file: !247, line: 232, baseType: !5414, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5389)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5382, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5382, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5417 = !DIDerivedType(tag: DW_TAG_member, scope: !5382, file: !211, line: 90, baseType: !5418, size: 16, offset: 112)
!5418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5382, file: !211, line: 90, size: 16, elements: !5419)
!5419 = !{!5420, !5425}
!5420 = !DIDerivedType(tag: DW_TAG_member, scope: !5418, file: !211, line: 91, baseType: !5421, size: 16)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5418, file: !211, line: 91, size: 16, elements: !5422)
!5422 = !{!5423, !5424}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5421, file: !211, line: 96, baseType: !261, size: 8)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5421, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5418, file: !211, line: 100, baseType: !265, size: 16)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5382, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5382, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5382, file: !211, line: 131, baseType: !5429, size: 192, offset: 192)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5430)
!5430 = !{!5431, !5432, !5438}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5429, file: !247, line: 245, baseType: !5388, size: 64)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5429, file: !247, line: 246, baseType: !5433, size: 32, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5434)
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 32)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{null, !5437}
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 32)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5429, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5379, file: !211, line: 250, baseType: !5440, size: 288, offset: 384)
!5440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5441)
!5441 = !{!5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5440, file: !284, line: 26, baseType: !121, size: 32)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5440, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5440, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5440, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5440, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5440, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5440, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5440, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5440, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5379, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5379, file: !211, line: 256, baseType: !5410, size: 64, offset: 704)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5379, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5379, file: !211, line: 300, baseType: !5455, size: 96, offset: 800)
!5455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5456)
!5456 = !{!5457, !5458, !5459}
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5455, file: !211, line: 153, baseType: !22, size: 32)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5455, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5455, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5379, file: !211, line: 325, baseType: !5461, size: 32, offset: 896)
!5461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5462, size: 32)
!5462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5463)
!5463 = !{!5464, !5470, !5471}
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5462, file: !307, line: 5074, baseType: !5465, size: 96)
!5465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5466)
!5466 = !{!5467, !5468, !5469}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5465, file: !311, line: 57, baseType: !314, size: 32)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5465, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5465, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5462, file: !307, line: 5075, baseType: !5410, size: 64, offset: 96)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5462, file: !307, line: 5076, baseType: !5472, offset: 160)
!5472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5379, file: !211, line: 343, baseType: !5474, size: 64, offset: 928)
!5474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5475)
!5475 = !{!5476, !5477}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5474, file: !284, line: 63, baseType: !121, size: 32)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5474, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5478 = !{!5479}
!5479 = !DILocalVariable(name: "thread", arg: 1, scope: !5373, file: !5374, line: 27, type: !5377)
!5480 = !DILocation(line: 0, scope: !5373)
!5481 = !DILocation(line: 29, column: 6, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5373, file: !5374, line: 29, column: 6)
!5483 = !DILocation(line: 29, column: 15, scope: !5482)
!5484 = !DILocation(line: 29, column: 6, scope: !5373)
!5485 = !DILocation(line: 1031, column: 3, scope: !5486, inlinedAt: !5489)
!5486 = distinct !DISubprogram(name: "__get_IPSR", scope: !4697, file: !4697, line: 1027, type: !4778, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5487)
!5487 = !{!5488}
!5488 = !DILocalVariable(name: "result", scope: !5486, file: !4697, line: 1029, type: !121)
!5489 = distinct !DILocation(line: 48, column: 10, scope: !5490, inlinedAt: !5494)
!5490 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5491, file: !5491, line: 46, type: !5492, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !322)
!5491 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!157}
!5494 = distinct !DILocation(line: 30, column: 7, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !5374, line: 30, column: 7)
!5496 = distinct !DILexicalBlock(scope: !5482, file: !5374, line: 29, column: 26)
!5497 = !{i64 2824255}
!5498 = !DILocation(line: 0, scope: !5486, inlinedAt: !5489)
!5499 = !DILocation(line: 48, column: 9, scope: !5490, inlinedAt: !5494)
!5500 = !DILocation(line: 30, column: 7, scope: !5496)
!5501 = !DILocation(line: 42, column: 14, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5495, file: !5374, line: 30, column: 25)
!5503 = !DILocation(line: 48, column: 15, scope: !5502)
!5504 = !DILocation(line: 49, column: 3, scope: !5502)
!5505 = !DILocation(line: 52, column: 2, scope: !5373)
!5506 = !DILocation(line: 53, column: 1, scope: !5373)
!5507 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2738, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!5508 = !DILocation(line: 134, column: 2, scope: !5507)
!5509 = !DILocation(line: 156, column: 1, scope: !5507)
!5510 = !DILocation(line: 0, scope: !205)
!5511 = !DILocation(line: 289, column: 36, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!5513 = !DILocation(line: 289, column: 42, scope: !5512)
!5514 = !DILocation(line: 300, column: 36, scope: !205)
!5515 = !DILocation(line: 301, column: 35, scope: !205)
!5516 = !DILocation(line: 302, column: 37, scope: !205)
!5517 = !DILocation(line: 311, column: 2, scope: !205)
!5518 = !DILocation(line: 316, column: 1, scope: !205)
!5519 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2738, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5520 = !DILocation(line: 188, column: 12, scope: !5519)
!5521 = !DILocation(line: 271, column: 3, scope: !5522, inlinedAt: !5523)
!5522 = distinct !DISubprogram(name: "__DSB", scope: !4697, file: !4697, line: 269, type: !2738, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5523 = distinct !DILocation(line: 192, column: 2, scope: !5519)
!5524 = !{i64 2984402}
!5525 = !DILocation(line: 260, column: 3, scope: !5526, inlinedAt: !5527)
!5526 = distinct !DISubprogram(name: "__ISB", scope: !4697, file: !4697, line: 258, type: !2738, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5527 = distinct !DILocation(line: 193, column: 2, scope: !5519)
!5528 = !{i64 2984119}
!5529 = !DILocation(line: 194, column: 1, scope: !5519)
!5530 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2738, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5531 = !DILocation(line: 282, column: 3, scope: !5532, inlinedAt: !5533)
!5532 = distinct !DISubprogram(name: "__DMB", scope: !4697, file: !4697, line: 280, type: !2738, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5533 = distinct !DILocation(line: 202, column: 2, scope: !5530)
!5534 = !{i64 2984678}
!5535 = !DILocation(line: 205, column: 12, scope: !5530)
!5536 = !DILocation(line: 206, column: 1, scope: !5530)
!5537 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !5538, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5551)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{null, !5540, !1603, !4965, !4965}
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 32)
!5541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5542)
!5542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !5543)
!5543 = !{!5544, !5545, !5546}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5542, file: !335, line: 53, baseType: !22, size: 32)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5542, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5542, file: !335, line: 55, baseType: !5547, size: 32, offset: 64)
!5547 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !5548)
!5548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !5549)
!5549 = !{!5550}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5548, file: !341, line: 150, baseType: !121, size: 32)
!5551 = !{!5552, !5553, !5554, !5555}
!5552 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5537, file: !384, line: 276, type: !5540)
!5553 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5537, file: !384, line: 276, type: !1603)
!5554 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5537, file: !384, line: 277, type: !4965)
!5555 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5537, file: !384, line: 277, type: !4965)
!5556 = !DILocation(line: 0, scope: !5537)
!5557 = !DILocation(line: 279, column: 6, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5537, file: !384, line: 279, column: 6)
!5559 = !DILocation(line: 285, column: 1, scope: !5537)
!5560 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5561, file: !5561, line: 220, type: !5562, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5564)
!5561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!103, !5540, !1603, !4965, !4965}
!5564 = !{!5565, !5566, !5567, !5568, !5569}
!5565 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5560, file: !5561, line: 221, type: !5540)
!5566 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5560, file: !5561, line: 221, type: !1603)
!5567 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5560, file: !5561, line: 222, type: !4965)
!5568 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5560, file: !5561, line: 223, type: !4965)
!5569 = !DILocalVariable(name: "mpu_reg_index", scope: !5560, file: !5561, line: 225, type: !103)
!5570 = !DILocation(line: 0, scope: !5560)
!5571 = !DILocation(line: 225, column: 22, scope: !5560)
!5572 = !DILocation(line: 233, column: 18, scope: !5560)
!5573 = !DILocation(line: 236, column: 23, scope: !5560)
!5574 = !DILocation(line: 236, column: 21, scope: !5560)
!5575 = !DILocation(line: 238, column: 2, scope: !5560)
!5576 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !5577, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5579)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!103, !5540, !154, !154, !157}
!5579 = !{!5580, !5581, !5582, !5583, !5584, !5585}
!5580 = !DILocalVariable(name: "regions", arg: 1, scope: !5576, file: !384, line: 106, type: !5540)
!5581 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5576, file: !384, line: 106, type: !154)
!5582 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5576, file: !384, line: 106, type: !154)
!5583 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5576, file: !384, line: 107, type: !157)
!5584 = !DILocalVariable(name: "i", scope: !5576, file: !384, line: 109, type: !103)
!5585 = !DILocalVariable(name: "reg_index", scope: !5576, file: !384, line: 110, type: !103)
!5586 = !DILocation(line: 0, scope: !5576)
!5587 = !DILocation(line: 110, column: 18, scope: !5576)
!5588 = !DILocation(line: 112, column: 16, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !384, line: 112, column: 2)
!5590 = distinct !DILexicalBlock(scope: !5576, file: !384, line: 112, column: 2)
!5591 = !DILocation(line: 112, column: 2, scope: !5590)
!5592 = !DILocation(line: 113, column: 7, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !384, line: 113, column: 7)
!5594 = distinct !DILexicalBlock(scope: !5589, file: !384, line: 112, column: 36)
!5595 = !DILocation(line: 113, column: 18, scope: !5593)
!5596 = !DILocation(line: 113, column: 23, scope: !5593)
!5597 = !DILocation(line: 113, column: 7, scope: !5594)
!5598 = !DILocation(line: 118, column: 23, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5594, file: !384, line: 118, column: 7)
!5600 = !DILocation(line: 119, column: 7, scope: !5599)
!5601 = !DILocation(line: 118, column: 7, scope: !5594)
!5602 = !DILocation(line: 124, column: 36, scope: !5594)
!5603 = !DILocation(line: 124, column: 15, scope: !5594)
!5604 = !DILocation(line: 126, column: 17, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5594, file: !384, line: 126, column: 7)
!5606 = !DILocation(line: 126, column: 7, scope: !5594)
!5607 = !DILocation(line: 131, column: 12, scope: !5594)
!5608 = !DILocation(line: 132, column: 2, scope: !5594)
!5609 = !DILocation(line: 112, column: 32, scope: !5589)
!5610 = distinct !{!5610, !5591, !5611}
!5611 = !DILocation(line: 132, column: 2, scope: !5590)
!5612 = !DILocation(line: 135, column: 1, scope: !5576)
!5613 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5561, file: !5561, line: 63, type: !5614, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5616)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!103, !5540}
!5616 = !{!5617, !5618}
!5617 = !DILocalVariable(name: "part", arg: 1, scope: !5613, file: !5561, line: 63, type: !5540)
!5618 = !DILocalVariable(name: "partition_is_valid", scope: !5613, file: !5561, line: 70, type: !103)
!5619 = !DILocation(line: 0, scope: !5613)
!5620 = !DILocation(line: 71, column: 11, scope: !5613)
!5621 = !DILocation(line: 71, column: 37, scope: !5613)
!5622 = !{i32 0, i32 33}
!5623 = !DILocation(line: 72, column: 3, scope: !5613)
!5624 = !DILocation(line: 71, column: 30, scope: !5613)
!5625 = !DILocation(line: 75, column: 11, scope: !5613)
!5626 = !DILocation(line: 75, column: 17, scope: !5613)
!5627 = !DILocation(line: 75, column: 38, scope: !5613)
!5628 = !DILocation(line: 77, column: 2, scope: !5613)
!5629 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !5630, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5632)
!5630 = !DISubroutineType(types: !5631)
!5631 = !{!103, !1603, !5540}
!5632 = !{!5633, !5634, !5635}
!5633 = !DILocalVariable(name: "index", arg: 1, scope: !5629, file: !384, line: 79, type: !1603)
!5634 = !DILocalVariable(name: "new_region", arg: 2, scope: !5629, file: !384, line: 80, type: !5540)
!5635 = !DILocalVariable(name: "region_conf", scope: !5629, file: !384, line: 82, type: !373)
!5636 = !DILocation(line: 0, scope: !5629)
!5637 = !DILocation(line: 82, column: 2, scope: !5629)
!5638 = !DILocation(line: 82, column: 24, scope: !5629)
!5639 = !DILocation(line: 87, column: 33, scope: !5629)
!5640 = !DILocation(line: 87, column: 14, scope: !5629)
!5641 = !DILocation(line: 87, column: 19, scope: !5629)
!5642 = !DILocation(line: 91, column: 55, scope: !5629)
!5643 = !DILocation(line: 92, column: 16, scope: !5629)
!5644 = !DILocation(line: 92, column: 53, scope: !5629)
!5645 = !DILocation(line: 91, column: 2, scope: !5629)
!5646 = !DILocation(line: 95, column: 9, scope: !5629)
!5647 = !DILocation(line: 97, column: 1, scope: !5629)
!5648 = !DILocation(line: 95, column: 2, scope: !5629)
!5649 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5561, file: !5561, line: 113, type: !5650, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5655)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{null, !5652, !5653, !121, !121}
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!5653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5654, size: 32)
!5654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5547)
!5655 = !{!5656, !5657, !5658, !5659}
!5656 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5649, file: !5561, line: 114, type: !5652)
!5657 = !DILocalVariable(name: "attr", arg: 2, scope: !5649, file: !5561, line: 115, type: !5653)
!5658 = !DILocalVariable(name: "base", arg: 3, scope: !5649, file: !5561, line: 115, type: !121)
!5659 = !DILocalVariable(name: "size", arg: 4, scope: !5649, file: !5561, line: 115, type: !121)
!5660 = !DILocation(line: 0, scope: !5649)
!5661 = !DILocation(line: 127, column: 23, scope: !5649)
!5662 = !DILocation(line: 127, column: 35, scope: !5649)
!5663 = !DILocation(line: 127, column: 33, scope: !5649)
!5664 = !DILocation(line: 127, column: 10, scope: !5649)
!5665 = !DILocation(line: 127, column: 15, scope: !5649)
!5666 = !DILocation(line: 129, column: 1, scope: !5649)
!5667 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !5668, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5670)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!103, !1603, !371}
!5670 = !{!5671, !5672}
!5671 = !DILocalVariable(name: "index", arg: 1, scope: !5667, file: !384, line: 57, type: !1603)
!5672 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5667, file: !384, line: 58, type: !371)
!5673 = !DILocation(line: 0, scope: !5667)
!5674 = !DILocation(line: 61, column: 6, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5667, file: !384, line: 61, column: 6)
!5676 = !DILocation(line: 61, column: 12, scope: !5675)
!5677 = !DILocation(line: 61, column: 6, scope: !5667)
!5678 = !DILocation(line: 71, column: 2, scope: !5667)
!5679 = !DILocation(line: 73, column: 2, scope: !5667)
!5680 = !DILocation(line: 74, column: 1, scope: !5667)
!5681 = distinct !DISubprogram(name: "region_init", scope: !5561, file: !5561, line: 29, type: !5682, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5684)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{null, !4965, !371}
!5684 = !{!5685, !5686}
!5685 = !DILocalVariable(name: "index", arg: 1, scope: !5681, file: !5561, line: 29, type: !4965)
!5686 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5681, file: !5561, line: 30, type: !371)
!5687 = !DILocation(line: 0, scope: !5681)
!5688 = !DILocation(line: 33, column: 2, scope: !5681)
!5689 = !DILocation(line: 47, column: 28, scope: !5681)
!5690 = !DILocation(line: 47, column: 33, scope: !5681)
!5691 = !DILocation(line: 48, column: 26, scope: !5681)
!5692 = !DILocation(line: 47, column: 12, scope: !5681)
!5693 = !DILocation(line: 49, column: 32, scope: !5681)
!5694 = !DILocation(line: 49, column: 37, scope: !5681)
!5695 = !DILocation(line: 49, column: 12, scope: !5681)
!5696 = !DILocation(line: 53, column: 1, scope: !5681)
!5697 = distinct !DISubprogram(name: "set_region_number", scope: !5698, file: !5698, line: 32, type: !4788, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5699)
!5698 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5699 = !{!5700}
!5700 = !DILocalVariable(name: "index", arg: 1, scope: !5697, file: !5698, line: 32, type: !121)
!5701 = !DILocation(line: 0, scope: !5697)
!5702 = !DILocation(line: 34, column: 11, scope: !5697)
!5703 = !DILocation(line: 35, column: 1, scope: !5697)
!5704 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5561, file: !5561, line: 88, type: !5705, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5707)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!121, !121}
!5707 = !{!5708}
!5708 = !DILocalVariable(name: "size", arg: 1, scope: !5704, file: !5561, line: 88, type: !121)
!5709 = !DILocation(line: 0, scope: !5704)
!5710 = !DILocation(line: 91, column: 11, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5704, file: !5561, line: 91, column: 6)
!5712 = !DILocation(line: 91, column: 6, scope: !5704)
!5713 = !DILocation(line: 100, column: 11, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5704, file: !5561, line: 100, column: 6)
!5715 = !DILocation(line: 100, column: 6, scope: !5704)
!5716 = !DILocation(line: 104, column: 35, scope: !5704)
!5717 = !DILocation(line: 104, column: 16, scope: !5704)
!5718 = !DILocation(line: 104, column: 50, scope: !5704)
!5719 = !DILocation(line: 104, column: 72, scope: !5704)
!5720 = !DILocation(line: 104, column: 2, scope: !5704)
!5721 = !DILocation(line: 106, column: 1, scope: !5704)
!5722 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !5723, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5725)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{null, !5540, !154}
!5725 = !{!5726, !5727}
!5726 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5722, file: !384, line: 308, type: !5540)
!5727 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5722, file: !384, line: 308, type: !154)
!5728 = !DILocation(line: 0, scope: !5722)
!5729 = !DILocation(line: 310, column: 6, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5722, file: !384, line: 310, column: 6)
!5731 = !DILocation(line: 316, column: 1, scope: !5722)
!5732 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5561, file: !5561, line: 249, type: !5733, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5735)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{!103, !5540, !154}
!5735 = !{!5736, !5737, !5738, !5739}
!5736 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5732, file: !5561, line: 250, type: !5540)
!5737 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5732, file: !5561, line: 250, type: !154)
!5738 = !DILocalVariable(name: "mpu_reg_index", scope: !5732, file: !5561, line: 252, type: !103)
!5739 = !DILocalVariable(name: "i", scope: !5740, file: !5561, line: 264, type: !103)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !5561, line: 264, column: 3)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !5561, line: 261, column: 32)
!5742 = distinct !DILexicalBlock(scope: !5732, file: !5561, line: 261, column: 6)
!5743 = !DILocation(line: 0, scope: !5732)
!5744 = !DILocation(line: 252, column: 22, scope: !5732)
!5745 = !DILocation(line: 258, column: 18, scope: !5732)
!5746 = !DILocation(line: 261, column: 20, scope: !5742)
!5747 = !DILocation(line: 261, column: 6, scope: !5732)
!5748 = !DILocation(line: 0, scope: !5740)
!5749 = !DILocation(line: 265, column: 4, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !5561, line: 264, column: 59)
!5751 = distinct !DILexicalBlock(scope: !5740, file: !5561, line: 264, column: 3)
!5752 = !DILocation(line: 264, column: 55, scope: !5751)
!5753 = !DILocation(line: 264, column: 33, scope: !5751)
!5754 = !DILocation(line: 264, column: 3, scope: !5740)
!5755 = distinct !{!5755, !5754, !5756}
!5756 = !DILocation(line: 266, column: 3, scope: !5740)
!5757 = !DILocation(line: 269, column: 2, scope: !5732)
!5758 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5759, file: !5759, line: 218, type: !4788, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5760)
!5759 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5760 = !{!5761}
!5761 = !DILocalVariable(name: "rnr", arg: 1, scope: !5758, file: !5759, line: 218, type: !121)
!5762 = !DILocation(line: 0, scope: !5758)
!5763 = !DILocation(line: 220, column: 12, scope: !5758)
!5764 = !DILocation(line: 221, column: 13, scope: !5758)
!5765 = !DILocation(line: 222, column: 1, scope: !5758)
!5766 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !5767, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!103}
!5769 = !{!5770}
!5770 = !DILocalVariable(name: "r_index", scope: !5766, file: !384, line: 328, type: !121)
!5771 = !DILocation(line: 330, column: 17, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5766, file: !384, line: 330, column: 6)
!5773 = !DILocation(line: 330, column: 29, scope: !5772)
!5774 = !DILocation(line: 330, column: 6, scope: !5766)
!5775 = !DILocation(line: 347, column: 2, scope: !5766)
!5776 = !DILocation(line: 0, scope: !5766)
!5777 = !DILocation(line: 364, column: 29, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !384, line: 364, column: 2)
!5779 = distinct !DILexicalBlock(scope: !5766, file: !384, line: 364, column: 2)
!5780 = !DILocation(line: 364, column: 2, scope: !5779)
!5781 = !DILocation(line: 365, column: 25, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !384, line: 364, column: 66)
!5783 = !DILocation(line: 365, column: 3, scope: !5782)
!5784 = !DILocation(line: 364, column: 62, scope: !5778)
!5785 = distinct !{!5785, !5780, !5786}
!5786 = !DILocation(line: 366, column: 2, scope: !5779)
!5787 = !DILocation(line: 369, column: 23, scope: !5766)
!5788 = !DILocation(line: 369, column: 21, scope: !5766)
!5789 = !DILocation(line: 372, column: 2, scope: !5766)
!5790 = !DILocation(line: 443, column: 2, scope: !5766)
!5791 = !DILocation(line: 444, column: 1, scope: !5766)
!5792 = distinct !DISubprogram(name: "strcpy", scope: !5793, file: !5793, line: 20, type: !5794, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5798)
!5793 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5794 = !DISubroutineType(types: !5795)
!5795 = !{!957, !5796, !5797}
!5796 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !957)
!5797 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!5798 = !{!5799, !5800, !5801}
!5799 = !DILocalVariable(name: "d", arg: 1, scope: !5792, file: !5793, line: 20, type: !5796)
!5800 = !DILocalVariable(name: "s", arg: 2, scope: !5792, file: !5793, line: 20, type: !5797)
!5801 = !DILocalVariable(name: "dest", scope: !5792, file: !5793, line: 22, type: !957)
!5802 = !DILocation(line: 0, scope: !5792)
!5803 = !DILocation(line: 24, column: 9, scope: !5792)
!5804 = !DILocation(line: 24, column: 12, scope: !5792)
!5805 = !DILocation(line: 24, column: 2, scope: !5792)
!5806 = !DILocation(line: 25, column: 6, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5792, file: !5793, line: 24, column: 21)
!5808 = !DILocation(line: 26, column: 4, scope: !5807)
!5809 = !DILocation(line: 27, column: 4, scope: !5807)
!5810 = distinct !{!5810, !5805, !5811}
!5811 = !DILocation(line: 28, column: 2, scope: !5792)
!5812 = !DILocation(line: 30, column: 5, scope: !5792)
!5813 = !DILocation(line: 32, column: 2, scope: !5792)
!5814 = distinct !DISubprogram(name: "strncpy", scope: !5793, file: !5793, line: 42, type: !5815, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5817)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!957, !5796, !5797, !200}
!5817 = !{!5818, !5819, !5820, !5821}
!5818 = !DILocalVariable(name: "d", arg: 1, scope: !5814, file: !5793, line: 42, type: !5796)
!5819 = !DILocalVariable(name: "s", arg: 2, scope: !5814, file: !5793, line: 42, type: !5797)
!5820 = !DILocalVariable(name: "n", arg: 3, scope: !5814, file: !5793, line: 42, type: !200)
!5821 = !DILocalVariable(name: "dest", scope: !5814, file: !5793, line: 44, type: !957)
!5822 = !DILocation(line: 0, scope: !5814)
!5823 = !DILocation(line: 46, column: 12, scope: !5814)
!5824 = !DILocation(line: 46, column: 17, scope: !5814)
!5825 = !DILocation(line: 46, column: 20, scope: !5814)
!5826 = !DILocation(line: 46, column: 23, scope: !5814)
!5827 = !DILocation(line: 46, column: 2, scope: !5814)
!5828 = !DILocation(line: 47, column: 6, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5814, file: !5793, line: 46, column: 32)
!5830 = !DILocation(line: 48, column: 4, scope: !5829)
!5831 = !DILocation(line: 49, column: 4, scope: !5829)
!5832 = !DILocation(line: 50, column: 4, scope: !5829)
!5833 = distinct !{!5833, !5827, !5834}
!5834 = !DILocation(line: 51, column: 2, scope: !5814)
!5835 = !DILocation(line: 54, column: 6, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5814, file: !5793, line: 53, column: 16)
!5837 = !DILocation(line: 55, column: 4, scope: !5836)
!5838 = !DILocation(line: 56, column: 4, scope: !5836)
!5839 = !DILocation(line: 53, column: 11, scope: !5814)
!5840 = !DILocation(line: 53, column: 2, scope: !5814)
!5841 = distinct !{!5841, !5840, !5842}
!5842 = !DILocation(line: 57, column: 2, scope: !5814)
!5843 = !DILocation(line: 59, column: 2, scope: !5814)
!5844 = distinct !DISubprogram(name: "strchr", scope: !5793, file: !5793, line: 69, type: !5845, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5847)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{!957, !144, !103}
!5847 = !{!5848, !5849, !5850}
!5848 = !DILocalVariable(name: "s", arg: 1, scope: !5844, file: !5793, line: 69, type: !144)
!5849 = !DILocalVariable(name: "c", arg: 2, scope: !5844, file: !5793, line: 69, type: !103)
!5850 = !DILocalVariable(name: "tmp", scope: !5844, file: !5793, line: 71, type: !146)
!5851 = !DILocation(line: 0, scope: !5844)
!5852 = !DILocation(line: 73, column: 2, scope: !5844)
!5853 = !DILocation(line: 73, column: 10, scope: !5844)
!5854 = !DILocation(line: 73, column: 13, scope: !5844)
!5855 = !DILocation(line: 73, column: 21, scope: !5844)
!5856 = !DILocation(line: 74, column: 4, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5844, file: !5793, line: 73, column: 38)
!5858 = distinct !{!5858, !5852, !5859}
!5859 = !DILocation(line: 75, column: 2, scope: !5844)
!5860 = !DILocation(line: 77, column: 9, scope: !5844)
!5861 = !DILocation(line: 77, column: 2, scope: !5844)
!5862 = distinct !DISubprogram(name: "strrchr", scope: !5793, file: !5793, line: 87, type: !5845, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5863)
!5863 = !{!5864, !5865, !5866}
!5864 = !DILocalVariable(name: "s", arg: 1, scope: !5862, file: !5793, line: 87, type: !144)
!5865 = !DILocalVariable(name: "c", arg: 2, scope: !5862, file: !5793, line: 87, type: !103)
!5866 = !DILocalVariable(name: "match", scope: !5862, file: !5793, line: 89, type: !957)
!5867 = !DILocation(line: 0, scope: !5862)
!5868 = !DILocation(line: 91, column: 2, scope: !5862)
!5869 = !DILocation(line: 92, column: 7, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !5793, line: 92, column: 7)
!5871 = distinct !DILexicalBlock(scope: !5862, file: !5793, line: 91, column: 5)
!5872 = !DILocation(line: 92, column: 10, scope: !5870)
!5873 = !DILocation(line: 92, column: 7, scope: !5871)
!5874 = !DILocation(line: 95, column: 13, scope: !5862)
!5875 = !DILocation(line: 95, column: 2, scope: !5871)
!5876 = distinct !{!5876, !5868, !5877}
!5877 = !DILocation(line: 95, column: 15, scope: !5862)
!5878 = !DILocation(line: 97, column: 2, scope: !5862)
!5879 = distinct !DISubprogram(name: "strlen", scope: !5793, file: !5793, line: 107, type: !5880, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5882)
!5880 = !DISubroutineType(types: !5881)
!5881 = !{!200, !144}
!5882 = !{!5883, !5884}
!5883 = !DILocalVariable(name: "s", arg: 1, scope: !5879, file: !5793, line: 107, type: !144)
!5884 = !DILocalVariable(name: "n", scope: !5879, file: !5793, line: 109, type: !200)
!5885 = !DILocation(line: 0, scope: !5879)
!5886 = !DILocation(line: 111, column: 9, scope: !5879)
!5887 = !DILocation(line: 111, column: 12, scope: !5879)
!5888 = !DILocation(line: 111, column: 2, scope: !5879)
!5889 = !DILocation(line: 112, column: 4, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5879, file: !5793, line: 111, column: 21)
!5891 = !DILocation(line: 113, column: 4, scope: !5890)
!5892 = distinct !{!5892, !5888, !5893}
!5893 = !DILocation(line: 114, column: 2, scope: !5879)
!5894 = !DILocation(line: 116, column: 2, scope: !5879)
!5895 = distinct !DISubprogram(name: "strnlen", scope: !5793, file: !5793, line: 126, type: !5896, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5898)
!5896 = !DISubroutineType(types: !5897)
!5897 = !{!200, !144, !200}
!5898 = !{!5899, !5900, !5901}
!5899 = !DILocalVariable(name: "s", arg: 1, scope: !5895, file: !5793, line: 126, type: !144)
!5900 = !DILocalVariable(name: "maxlen", arg: 2, scope: !5895, file: !5793, line: 126, type: !200)
!5901 = !DILocalVariable(name: "n", scope: !5895, file: !5793, line: 128, type: !200)
!5902 = !DILocation(line: 0, scope: !5895)
!5903 = !DILocation(line: 130, column: 9, scope: !5895)
!5904 = !DILocation(line: 130, column: 12, scope: !5895)
!5905 = !DILocation(line: 130, column: 20, scope: !5895)
!5906 = !DILocation(line: 130, column: 2, scope: !5895)
!5907 = !DILocation(line: 131, column: 4, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5895, file: !5793, line: 130, column: 35)
!5909 = !DILocation(line: 132, column: 4, scope: !5908)
!5910 = distinct !{!5910, !5906, !5911}
!5911 = !DILocation(line: 133, column: 2, scope: !5895)
!5912 = !DILocation(line: 135, column: 2, scope: !5895)
!5913 = distinct !DISubprogram(name: "strcmp", scope: !5793, file: !5793, line: 145, type: !5914, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5916)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!103, !144, !144}
!5916 = !{!5917, !5918}
!5917 = !DILocalVariable(name: "s1", arg: 1, scope: !5913, file: !5793, line: 145, type: !144)
!5918 = !DILocalVariable(name: "s2", arg: 2, scope: !5913, file: !5793, line: 145, type: !144)
!5919 = !DILocation(line: 0, scope: !5913)
!5920 = !DILocation(line: 147, column: 10, scope: !5913)
!5921 = !DILocation(line: 147, column: 17, scope: !5913)
!5922 = !DILocation(line: 147, column: 14, scope: !5913)
!5923 = !DILocation(line: 147, column: 22, scope: !5913)
!5924 = !DILocation(line: 148, column: 5, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5913, file: !5793, line: 147, column: 40)
!5926 = !DILocation(line: 149, column: 5, scope: !5925)
!5927 = distinct !{!5927, !5928, !5929}
!5928 = !DILocation(line: 147, column: 2, scope: !5913)
!5929 = !DILocation(line: 150, column: 2, scope: !5913)
!5930 = !DILocation(line: 152, column: 9, scope: !5913)
!5931 = !DILocation(line: 152, column: 15, scope: !5913)
!5932 = !DILocation(line: 152, column: 13, scope: !5913)
!5933 = !DILocation(line: 152, column: 2, scope: !5913)
!5934 = distinct !DISubprogram(name: "strncmp", scope: !5793, file: !5793, line: 162, type: !5935, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5937)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!103, !144, !144, !200}
!5937 = !{!5938, !5939, !5940}
!5938 = !DILocalVariable(name: "s1", arg: 1, scope: !5934, file: !5793, line: 162, type: !144)
!5939 = !DILocalVariable(name: "s2", arg: 2, scope: !5934, file: !5793, line: 162, type: !144)
!5940 = !DILocalVariable(name: "n", arg: 3, scope: !5934, file: !5793, line: 162, type: !200)
!5941 = !DILocation(line: 0, scope: !5934)
!5942 = !DILocation(line: 164, column: 17, scope: !5934)
!5943 = !DILocation(line: 164, column: 21, scope: !5934)
!5944 = !DILocation(line: 164, column: 28, scope: !5934)
!5945 = !DILocation(line: 164, column: 25, scope: !5934)
!5946 = !DILocation(line: 164, column: 33, scope: !5934)
!5947 = !DILocation(line: 165, column: 5, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5934, file: !5793, line: 164, column: 51)
!5949 = !DILocation(line: 166, column: 5, scope: !5948)
!5950 = !DILocation(line: 167, column: 4, scope: !5948)
!5951 = distinct !{!5951, !5952, !5953}
!5952 = !DILocation(line: 164, column: 2, scope: !5934)
!5953 = !DILocation(line: 168, column: 2, scope: !5934)
!5954 = !DILocation(line: 170, column: 25, scope: !5934)
!5955 = !DILocation(line: 170, column: 31, scope: !5934)
!5956 = !DILocation(line: 170, column: 29, scope: !5934)
!5957 = !DILocation(line: 170, column: 9, scope: !5934)
!5958 = !DILocation(line: 170, column: 2, scope: !5934)
!5959 = distinct !DISubprogram(name: "strtok_r", scope: !5793, file: !5793, line: 180, type: !5960, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5963)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!957, !957, !144, !5962}
!5962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!5963 = !{!5964, !5965, !5966, !5967, !5968}
!5964 = !DILocalVariable(name: "str", arg: 1, scope: !5959, file: !5793, line: 180, type: !957)
!5965 = !DILocalVariable(name: "sep", arg: 2, scope: !5959, file: !5793, line: 180, type: !144)
!5966 = !DILocalVariable(name: "state", arg: 3, scope: !5959, file: !5793, line: 180, type: !5962)
!5967 = !DILocalVariable(name: "start", scope: !5959, file: !5793, line: 182, type: !957)
!5968 = !DILocalVariable(name: "end", scope: !5959, file: !5793, line: 182, type: !957)
!5969 = !DILocation(line: 0, scope: !5959)
!5970 = !DILocation(line: 184, column: 10, scope: !5959)
!5971 = !DILocation(line: 184, column: 22, scope: !5959)
!5972 = !DILocation(line: 187, column: 9, scope: !5959)
!5973 = !DILocation(line: 187, column: 16, scope: !5959)
!5974 = !DILocation(line: 187, column: 19, scope: !5959)
!5975 = !DILocation(line: 187, column: 2, scope: !5959)
!5976 = !DILocation(line: 188, column: 8, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5959, file: !5793, line: 187, column: 40)
!5978 = distinct !{!5978, !5975, !5979}
!5979 = !DILocation(line: 189, column: 2, scope: !5959)
!5980 = !DILocation(line: 198, column: 9, scope: !5959)
!5981 = !DILocation(line: 198, column: 18, scope: !5959)
!5982 = !DILocation(line: 198, column: 17, scope: !5959)
!5983 = !DILocation(line: 198, column: 2, scope: !5959)
!5984 = !DILocation(line: 199, column: 6, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5959, file: !5793, line: 198, column: 37)
!5986 = !DILocation(line: 198, column: 14, scope: !5959)
!5987 = distinct !{!5987, !5983, !5988}
!5988 = !DILocation(line: 200, column: 2, scope: !5959)
!5989 = !DILocation(line: 203, column: 8, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !5793, line: 202, column: 20)
!5991 = distinct !DILexicalBlock(scope: !5959, file: !5793, line: 202, column: 6)
!5992 = !DILocation(line: 204, column: 16, scope: !5990)
!5993 = !DILocation(line: 205, column: 2, scope: !5990)
!5994 = !DILocation(line: 210, column: 1, scope: !5959)
!5995 = distinct !DISubprogram(name: "strcat", scope: !5793, file: !5793, line: 212, type: !5794, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !5996)
!5996 = !{!5997, !5998}
!5997 = !DILocalVariable(name: "dest", arg: 1, scope: !5995, file: !5793, line: 212, type: !5796)
!5998 = !DILocalVariable(name: "src", arg: 2, scope: !5995, file: !5793, line: 212, type: !5797)
!5999 = !DILocation(line: 0, scope: !5995)
!6000 = !DILocation(line: 214, column: 16, scope: !5995)
!6001 = !DILocation(line: 214, column: 14, scope: !5995)
!6002 = !DILocation(line: 214, column: 2, scope: !5995)
!6003 = !DILocation(line: 215, column: 2, scope: !5995)
!6004 = distinct !DISubprogram(name: "strncat", scope: !5793, file: !5793, line: 218, type: !5815, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6005)
!6005 = !{!6006, !6007, !6008, !6009, !6010}
!6006 = !DILocalVariable(name: "dest", arg: 1, scope: !6004, file: !5793, line: 218, type: !5796)
!6007 = !DILocalVariable(name: "src", arg: 2, scope: !6004, file: !5793, line: 218, type: !5797)
!6008 = !DILocalVariable(name: "n", arg: 3, scope: !6004, file: !5793, line: 219, type: !200)
!6009 = !DILocalVariable(name: "orig_dest", scope: !6004, file: !5793, line: 221, type: !957)
!6010 = !DILocalVariable(name: "len", scope: !6004, file: !5793, line: 222, type: !200)
!6011 = !DILocation(line: 0, scope: !6004)
!6012 = !DILocation(line: 222, column: 15, scope: !6004)
!6013 = !DILocation(line: 224, column: 7, scope: !6004)
!6014 = !DILocation(line: 225, column: 14, scope: !6004)
!6015 = !DILocation(line: 225, column: 19, scope: !6004)
!6016 = !DILocation(line: 225, column: 11, scope: !6004)
!6017 = !DILocation(line: 225, column: 23, scope: !6004)
!6018 = !DILocation(line: 225, column: 28, scope: !6004)
!6019 = !DILocation(line: 225, column: 2, scope: !6004)
!6020 = !DILocation(line: 226, column: 17, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6004, file: !5793, line: 225, column: 38)
!6022 = !DILocation(line: 226, column: 8, scope: !6021)
!6023 = !DILocation(line: 226, column: 11, scope: !6021)
!6024 = distinct !{!6024, !6019, !6025}
!6025 = !DILocation(line: 227, column: 2, scope: !6004)
!6026 = !DILocation(line: 228, column: 8, scope: !6004)
!6027 = !DILocation(line: 230, column: 2, scope: !6004)
!6028 = distinct !DISubprogram(name: "memcmp", scope: !5793, file: !5793, line: 239, type: !6029, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6031)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{!103, !13, !13, !200}
!6031 = !{!6032, !6033, !6034, !6035, !6036}
!6032 = !DILocalVariable(name: "m1", arg: 1, scope: !6028, file: !5793, line: 239, type: !13)
!6033 = !DILocalVariable(name: "m2", arg: 2, scope: !6028, file: !5793, line: 239, type: !13)
!6034 = !DILocalVariable(name: "n", arg: 3, scope: !6028, file: !5793, line: 239, type: !200)
!6035 = !DILocalVariable(name: "c1", scope: !6028, file: !5793, line: 241, type: !144)
!6036 = !DILocalVariable(name: "c2", scope: !6028, file: !5793, line: 242, type: !144)
!6037 = !DILocation(line: 0, scope: !6028)
!6038 = !DILocation(line: 244, column: 7, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6028, file: !5793, line: 244, column: 6)
!6040 = !DILocation(line: 244, column: 6, scope: !6028)
!6041 = !DILocation(line: 248, column: 10, scope: !6028)
!6042 = !DILocation(line: 248, column: 14, scope: !6028)
!6043 = !DILocation(line: 248, column: 19, scope: !6028)
!6044 = !DILocation(line: 248, column: 2, scope: !6028)
!6045 = !DILocation(line: 248, column: 23, scope: !6028)
!6046 = !DILocation(line: 248, column: 30, scope: !6028)
!6047 = !DILocation(line: 248, column: 27, scope: !6028)
!6048 = !DILocation(line: 249, column: 5, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6028, file: !5793, line: 248, column: 36)
!6050 = !DILocation(line: 250, column: 5, scope: !6049)
!6051 = distinct !{!6051, !6044, !6052}
!6052 = !DILocation(line: 251, column: 2, scope: !6028)
!6053 = !DILocation(line: 253, column: 9, scope: !6028)
!6054 = !DILocation(line: 253, column: 15, scope: !6028)
!6055 = !DILocation(line: 253, column: 13, scope: !6028)
!6056 = !DILocation(line: 253, column: 2, scope: !6028)
!6057 = !DILocation(line: 254, column: 1, scope: !6028)
!6058 = distinct !DISubprogram(name: "memmove", scope: !5793, file: !5793, line: 263, type: !6059, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6061)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!102, !102, !13, !200}
!6061 = !{!6062, !6063, !6064, !6065, !6066}
!6062 = !DILocalVariable(name: "d", arg: 1, scope: !6058, file: !5793, line: 263, type: !102)
!6063 = !DILocalVariable(name: "s", arg: 2, scope: !6058, file: !5793, line: 263, type: !13)
!6064 = !DILocalVariable(name: "n", arg: 3, scope: !6058, file: !5793, line: 263, type: !200)
!6065 = !DILocalVariable(name: "dest", scope: !6058, file: !5793, line: 265, type: !957)
!6066 = !DILocalVariable(name: "src", scope: !6058, file: !5793, line: 266, type: !144)
!6067 = !DILocation(line: 0, scope: !6058)
!6068 = !DILocation(line: 268, column: 21, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6058, file: !5793, line: 268, column: 6)
!6070 = !DILocation(line: 268, column: 28, scope: !6069)
!6071 = !DILocation(line: 268, column: 6, scope: !6058)
!6072 = !DILocation(line: 280, column: 12, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !5793, line: 278, column: 9)
!6074 = !DILocation(line: 280, column: 3, scope: !6073)
!6075 = !DILocation(line: 275, column: 5, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !5793, line: 274, column: 17)
!6077 = distinct !DILexicalBlock(scope: !6069, file: !5793, line: 268, column: 33)
!6078 = !DILocation(line: 276, column: 14, scope: !6076)
!6079 = !DILocation(line: 276, column: 4, scope: !6076)
!6080 = !DILocation(line: 276, column: 12, scope: !6076)
!6081 = !DILocation(line: 274, column: 12, scope: !6077)
!6082 = !DILocation(line: 274, column: 3, scope: !6077)
!6083 = distinct !{!6083, !6082, !6084}
!6084 = !DILocation(line: 277, column: 3, scope: !6077)
!6085 = !DILocation(line: 281, column: 12, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6073, file: !5793, line: 280, column: 17)
!6087 = !DILocation(line: 281, column: 10, scope: !6086)
!6088 = !DILocation(line: 282, column: 8, scope: !6086)
!6089 = !DILocation(line: 283, column: 7, scope: !6086)
!6090 = !DILocation(line: 284, column: 5, scope: !6086)
!6091 = distinct !{!6091, !6074, !6092}
!6092 = !DILocation(line: 285, column: 3, scope: !6073)
!6093 = !DILocation(line: 288, column: 2, scope: !6058)
!6094 = distinct !DISubprogram(name: "memcpy", scope: !5793, file: !5793, line: 298, type: !6095, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6099)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{!102, !6097, !6098, !200}
!6097 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6098 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6099 = !{!6100, !6101, !6102, !6103, !6104}
!6100 = !DILocalVariable(name: "d", arg: 1, scope: !6094, file: !5793, line: 298, type: !6097)
!6101 = !DILocalVariable(name: "s", arg: 2, scope: !6094, file: !5793, line: 298, type: !6098)
!6102 = !DILocalVariable(name: "n", arg: 3, scope: !6094, file: !5793, line: 298, type: !200)
!6103 = !DILocalVariable(name: "d_byte", scope: !6094, file: !5793, line: 302, type: !792)
!6104 = !DILocalVariable(name: "s_byte", scope: !6094, file: !5793, line: 303, type: !2504)
!6105 = !DILocation(line: 0, scope: !6094)
!6106 = !DILocation(line: 337, column: 11, scope: !6094)
!6107 = !DILocation(line: 337, column: 2, scope: !6094)
!6108 = !DILocation(line: 338, column: 25, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6094, file: !5793, line: 337, column: 16)
!6110 = !DILocation(line: 338, column: 17, scope: !6109)
!6111 = !DILocation(line: 338, column: 11, scope: !6109)
!6112 = !DILocation(line: 338, column: 15, scope: !6109)
!6113 = !DILocation(line: 339, column: 4, scope: !6109)
!6114 = distinct !{!6114, !6107, !6115}
!6115 = !DILocation(line: 340, column: 2, scope: !6094)
!6116 = !DILocation(line: 342, column: 2, scope: !6094)
!6117 = distinct !DISubprogram(name: "memset", scope: !5793, file: !5793, line: 352, type: !6118, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6120)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!102, !102, !103, !200}
!6120 = !{!6121, !6122, !6123, !6124, !6125}
!6121 = !DILocalVariable(name: "buf", arg: 1, scope: !6117, file: !5793, line: 352, type: !102)
!6122 = !DILocalVariable(name: "c", arg: 2, scope: !6117, file: !5793, line: 352, type: !103)
!6123 = !DILocalVariable(name: "n", arg: 3, scope: !6117, file: !5793, line: 352, type: !200)
!6124 = !DILocalVariable(name: "d_byte", scope: !6117, file: !5793, line: 356, type: !792)
!6125 = !DILocalVariable(name: "c_byte", scope: !6117, file: !5793, line: 357, type: !155)
!6126 = !DILocation(line: 0, scope: !6117)
!6127 = !DILocation(line: 357, column: 25, scope: !6117)
!6128 = !DILocation(line: 389, column: 11, scope: !6117)
!6129 = !DILocation(line: 389, column: 2, scope: !6117)
!6130 = !DILocation(line: 390, column: 11, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6117, file: !5793, line: 389, column: 16)
!6132 = !DILocation(line: 390, column: 15, scope: !6131)
!6133 = !DILocation(line: 391, column: 4, scope: !6131)
!6134 = distinct !{!6134, !6129, !6135}
!6135 = !DILocation(line: 392, column: 2, scope: !6117)
!6136 = !DILocation(line: 394, column: 2, scope: !6117)
!6137 = distinct !DISubprogram(name: "memchr", scope: !5793, file: !5793, line: 404, type: !6138, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!102, !13, !103, !200}
!6140 = !{!6141, !6142, !6143, !6144}
!6141 = !DILocalVariable(name: "s", arg: 1, scope: !6137, file: !5793, line: 404, type: !13)
!6142 = !DILocalVariable(name: "c", arg: 2, scope: !6137, file: !5793, line: 404, type: !103)
!6143 = !DILocalVariable(name: "n", arg: 3, scope: !6137, file: !5793, line: 404, type: !200)
!6144 = !DILocalVariable(name: "p", scope: !6145, file: !5793, line: 407, type: !2504)
!6145 = distinct !DILexicalBlock(scope: !6146, file: !5793, line: 406, column: 14)
!6146 = distinct !DILexicalBlock(scope: !6137, file: !5793, line: 406, column: 6)
!6147 = !DILocation(line: 0, scope: !6137)
!6148 = !DILocation(line: 406, column: 8, scope: !6146)
!6149 = !DILocation(line: 406, column: 6, scope: !6137)
!6150 = !DILocation(line: 409, column: 3, scope: !6145)
!6151 = !DILocation(line: 0, scope: !6145)
!6152 = !DILocation(line: 410, column: 8, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !5793, line: 410, column: 8)
!6154 = distinct !DILexicalBlock(scope: !6145, file: !5793, line: 409, column: 6)
!6155 = !DILocation(line: 410, column: 13, scope: !6153)
!6156 = !DILocation(line: 410, column: 8, scope: !6154)
!6157 = distinct !{!6157, !6150, !6158}
!6158 = !DILocation(line: 414, column: 20, scope: !6145)
!6159 = !DILocation(line: 417, column: 2, scope: !6137)
!6160 = !DILocation(line: 418, column: 1, scope: !6137)
!6161 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !2858, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6162)
!6162 = !{!6163}
!6163 = !DILocalVariable(name: "hook", arg: 1, scope: !6161, file: !394, line: 23, type: !106)
!6164 = !DILocation(line: 0, scope: !6161)
!6165 = !DILocation(line: 25, column: 15, scope: !6161)
!6166 = !DILocation(line: 26, column: 1, scope: !6161)
!6167 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6168)
!6168 = !{!6169}
!6169 = !DILocalVariable(name: "c", arg: 1, scope: !6167, file: !394, line: 14, type: !103)
!6170 = !DILocation(line: 0, scope: !6167)
!6171 = !DILocation(line: 18, column: 2, scope: !6167)
!6172 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6173, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6175)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!103, !103, !390}
!6175 = !{!6176, !6177}
!6176 = !DILocalVariable(name: "c", arg: 1, scope: !6172, file: !394, line: 28, type: !103)
!6177 = !DILocalVariable(name: "stream", arg: 2, scope: !6172, file: !394, line: 28, type: !390)
!6178 = !DILocation(line: 0, scope: !6172)
!6179 = !DILocation(line: 30, column: 27, scope: !6172)
!6180 = !DILocation(line: 30, column: 50, scope: !6172)
!6181 = !DILocation(line: 30, column: 9, scope: !6172)
!6182 = !DILocation(line: 30, column: 2, scope: !6172)
!6183 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6173, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6184)
!6184 = !{!6185, !6186}
!6185 = !DILocalVariable(name: "c", arg: 1, scope: !6183, file: !394, line: 41, type: !103)
!6186 = !DILocalVariable(name: "stream", arg: 2, scope: !6183, file: !394, line: 41, type: !390)
!6187 = !DILocation(line: 0, scope: !6183)
!6188 = !DILocation(line: 43, column: 9, scope: !6183)
!6189 = !DILocation(line: 43, column: 2, scope: !6183)
!6190 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6191, file: !6191, line: 72, type: !6173, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6192)
!6191 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!6192 = !{!6193, !6194}
!6193 = !DILocalVariable(name: "c", arg: 1, scope: !6190, file: !6191, line: 72, type: !103)
!6194 = !DILocalVariable(name: "stream", arg: 2, scope: !6190, file: !6191, line: 72, type: !390)
!6195 = !DILocation(line: 0, scope: !6190)
!6196 = !DILocation(line: 81, column: 2, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6190, file: !6191, line: 81, column: 2)
!6198 = !{i64 2154126544}
!6199 = !DILocation(line: 82, column: 9, scope: !6190)
!6200 = !DILocation(line: 82, column: 2, scope: !6190)
!6201 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6202, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6205)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!103, !5797, !6204}
!6204 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6205 = !{!6206, !6207, !6208, !6209}
!6206 = !DILocalVariable(name: "s", arg: 1, scope: !6201, file: !394, line: 46, type: !5797)
!6207 = !DILocalVariable(name: "stream", arg: 2, scope: !6201, file: !394, line: 46, type: !6204)
!6208 = !DILocalVariable(name: "len", scope: !6201, file: !394, line: 48, type: !103)
!6209 = !DILocalVariable(name: "ret", scope: !6201, file: !394, line: 49, type: !103)
!6210 = !DILocation(line: 0, scope: !6201)
!6211 = !DILocation(line: 48, column: 12, scope: !6201)
!6212 = !DILocation(line: 51, column: 8, scope: !6201)
!6213 = !DILocation(line: 53, column: 13, scope: !6201)
!6214 = !DILocation(line: 53, column: 9, scope: !6201)
!6215 = !DILocation(line: 53, column: 2, scope: !6201)
!6216 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6217, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!200, !6098, !200, !200, !6204}
!6219 = !{!6220, !6221, !6222, !6223}
!6220 = !DILocalVariable(name: "ptr", arg: 1, scope: !6216, file: !394, line: 99, type: !6098)
!6221 = !DILocalVariable(name: "size", arg: 2, scope: !6216, file: !394, line: 99, type: !200)
!6222 = !DILocalVariable(name: "nitems", arg: 3, scope: !6216, file: !394, line: 99, type: !200)
!6223 = !DILocalVariable(name: "stream", arg: 4, scope: !6216, file: !394, line: 100, type: !6204)
!6224 = !DILocation(line: 0, scope: !6216)
!6225 = !DILocation(line: 102, column: 9, scope: !6216)
!6226 = !DILocation(line: 102, column: 2, scope: !6216)
!6227 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6191, file: !6191, line: 96, type: !6217, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6228)
!6228 = !{!6229, !6230, !6231, !6232}
!6229 = !DILocalVariable(name: "ptr", arg: 1, scope: !6227, file: !6191, line: 96, type: !6098)
!6230 = !DILocalVariable(name: "size", arg: 2, scope: !6227, file: !6191, line: 96, type: !200)
!6231 = !DILocalVariable(name: "nitems", arg: 3, scope: !6227, file: !6191, line: 96, type: !200)
!6232 = !DILocalVariable(name: "stream", arg: 4, scope: !6227, file: !6191, line: 96, type: !6204)
!6233 = !DILocation(line: 0, scope: !6227)
!6234 = !DILocation(line: 107, column: 2, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6227, file: !6191, line: 107, column: 2)
!6236 = !{i64 2154126648}
!6237 = !DILocation(line: 108, column: 9, scope: !6227)
!6238 = !DILocation(line: 108, column: 2, scope: !6227)
!6239 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6217, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6240)
!6240 = !{!6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248}
!6241 = !DILocalVariable(name: "ptr", arg: 1, scope: !6239, file: !394, line: 56, type: !6098)
!6242 = !DILocalVariable(name: "size", arg: 2, scope: !6239, file: !394, line: 56, type: !200)
!6243 = !DILocalVariable(name: "nitems", arg: 3, scope: !6239, file: !394, line: 57, type: !200)
!6244 = !DILocalVariable(name: "stream", arg: 4, scope: !6239, file: !394, line: 57, type: !6204)
!6245 = !DILocalVariable(name: "i", scope: !6239, file: !394, line: 59, type: !200)
!6246 = !DILocalVariable(name: "j", scope: !6239, file: !394, line: 60, type: !200)
!6247 = !DILocalVariable(name: "p", scope: !6239, file: !394, line: 61, type: !2504)
!6248 = !DILabel(scope: !6239, name: "done", file: !394, line: 82)
!6249 = !DILocation(line: 0, scope: !6239)
!6250 = !DILocation(line: 63, column: 14, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6239, file: !394, line: 63, column: 6)
!6252 = !DILocation(line: 63, column: 24, scope: !6251)
!6253 = !DILocation(line: 72, column: 3, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6239, file: !394, line: 70, column: 5)
!6255 = !DILocation(line: 0, scope: !6254)
!6256 = !DILocation(line: 73, column: 8, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6258, file: !394, line: 73, column: 8)
!6258 = distinct !DILexicalBlock(scope: !6254, file: !394, line: 72, column: 6)
!6259 = !DILocation(line: 73, column: 29, scope: !6257)
!6260 = !DILocation(line: 73, column: 27, scope: !6257)
!6261 = !DILocation(line: 73, column: 21, scope: !6257)
!6262 = !DILocation(line: 73, column: 33, scope: !6257)
!6263 = !DILocation(line: 73, column: 8, scope: !6258)
!6264 = !DILocation(line: 76, column: 5, scope: !6258)
!6265 = !DILocation(line: 77, column: 14, scope: !6254)
!6266 = !DILocation(line: 77, column: 3, scope: !6258)
!6267 = distinct !{!6267, !6253, !6268}
!6268 = !DILocation(line: 77, column: 17, scope: !6254)
!6269 = !DILocation(line: 79, column: 4, scope: !6254)
!6270 = !DILocation(line: 80, column: 13, scope: !6239)
!6271 = !DILocation(line: 80, column: 2, scope: !6254)
!6272 = distinct !{!6272, !6273, !6274}
!6273 = !DILocation(line: 70, column: 2, scope: !6239)
!6274 = !DILocation(line: 80, column: 16, scope: !6239)
!6275 = !DILocation(line: 82, column: 1, scope: !6239)
!6276 = !DILocation(line: 83, column: 17, scope: !6239)
!6277 = !DILocation(line: 83, column: 2, scope: !6239)
!6278 = !DILocation(line: 84, column: 1, scope: !6239)
!6279 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !6280, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6282)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{!103, !144}
!6282 = !{!6283}
!6283 = !DILocalVariable(name: "s", arg: 1, scope: !6279, file: !394, line: 106, type: !144)
!6284 = !DILocation(line: 0, scope: !6279)
!6285 = !DILocation(line: 108, column: 6, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6279, file: !394, line: 108, column: 6)
!6287 = !DILocation(line: 108, column: 23, scope: !6286)
!6288 = !DILocation(line: 108, column: 6, scope: !6279)
!6289 = !DILocation(line: 112, column: 9, scope: !6279)
!6290 = !DILocation(line: 112, column: 29, scope: !6279)
!6291 = !DILocation(line: 112, column: 2, scope: !6279)
!6292 = !DILocation(line: 113, column: 1, scope: !6279)
!6293 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !506, file: !506, line: 368, type: !559, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6294)
!6294 = !{!6295}
!6295 = !DILocalVariable(name: "dev", arg: 1, scope: !6293, file: !506, line: 368, type: !535)
!6296 = !DILocation(line: 0, scope: !6293)
!6297 = !DILocation(line: 370, column: 2, scope: !6293)
!6298 = !DILocation(line: 371, column: 1, scope: !6293)
!6299 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !506, file: !506, line: 243, type: !6300, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6302)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{null, !103, !103, !535}
!6302 = !{!6303, !6304, !6305, !6306, !6308}
!6303 = !DILocalVariable(name: "min", arg: 1, scope: !6299, file: !506, line: 243, type: !103)
!6304 = !DILocalVariable(name: "max", arg: 2, scope: !6299, file: !506, line: 243, type: !103)
!6305 = !DILocalVariable(name: "dev", arg: 3, scope: !6299, file: !506, line: 243, type: !535)
!6306 = !DILocalVariable(name: "data", scope: !6299, file: !506, line: 245, type: !6307)
!6307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 32)
!6308 = !DILocalVariable(name: "line", scope: !6299, file: !506, line: 246, type: !103)
!6309 = !DILocation(line: 0, scope: !6299)
!6310 = !DILocation(line: 245, column: 38, scope: !6299)
!6311 = !DILocation(line: 249, column: 24, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !506, line: 249, column: 2)
!6313 = distinct !DILexicalBlock(scope: !6299, file: !506, line: 249, column: 2)
!6314 = !DILocation(line: 249, column: 2, scope: !6313)
!6315 = !DILocation(line: 251, column: 7, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !506, line: 251, column: 7)
!6317 = distinct !DILexicalBlock(scope: !6312, file: !506, line: 249, column: 39)
!6318 = !DILocation(line: 251, column: 7, scope: !6317)
!6319 = !DILocation(line: 253, column: 4, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !506, line: 251, column: 36)
!6321 = !DILocation(line: 256, column: 24, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6320, file: !506, line: 256, column: 8)
!6323 = !DILocation(line: 256, column: 9, scope: !6322)
!6324 = !DILocation(line: 256, column: 8, scope: !6320)
!6325 = !DILocation(line: 260, column: 43, scope: !6320)
!6326 = !DILocation(line: 260, column: 4, scope: !6320)
!6327 = !DILocation(line: 261, column: 3, scope: !6320)
!6328 = !DILocation(line: 249, column: 35, scope: !6312)
!6329 = distinct !{!6329, !6314, !6330}
!6330 = !DILocation(line: 262, column: 2, scope: !6313)
!6331 = !DILocation(line: 263, column: 1, scope: !6299)
!6332 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !506, file: !506, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6333)
!6333 = !{!6334}
!6334 = !DILocalVariable(name: "line", arg: 1, scope: !6332, file: !506, line: 158, type: !103)
!6335 = !DILocation(line: 0, scope: !6332)
!6336 = !DILocation(line: 170, column: 38, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !506, line: 160, column: 17)
!6338 = distinct !DILexicalBlock(scope: !6332, file: !506, line: 160, column: 6)
!6339 = !DILocation(line: 170, column: 10, scope: !6337)
!6340 = !DILocation(line: 176, column: 1, scope: !6332)
!6341 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !506, file: !506, line: 183, type: !6342, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6344)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{null, !103}
!6344 = !{!6345}
!6345 = !DILocalVariable(name: "line", arg: 1, scope: !6341, file: !506, line: 183, type: !103)
!6346 = !DILocation(line: 0, scope: !6341)
!6347 = !DILocation(line: 195, column: 28, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !506, line: 185, column: 17)
!6349 = distinct !DILexicalBlock(scope: !6341, file: !506, line: 185, column: 6)
!6350 = !DILocation(line: 195, column: 3, scope: !6348)
!6351 = !DILocation(line: 200, column: 1, scope: !6341)
!6352 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6353, file: !6353, line: 910, type: !4788, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6354)
!6353 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6354 = !{!6355}
!6355 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6352, file: !6353, line: 910, type: !121)
!6356 = !DILocation(line: 0, scope: !6352)
!6357 = !DILocation(line: 912, column: 3, scope: !6352)
!6358 = !DILocation(line: 913, column: 1, scope: !6352)
!6359 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6353, file: !6353, line: 834, type: !5705, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6360)
!6360 = !{!6361}
!6361 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6359, file: !6353, line: 834, type: !121)
!6362 = !DILocation(line: 0, scope: !6359)
!6363 = !DILocation(line: 836, column: 11, scope: !6359)
!6364 = !DILocation(line: 836, column: 40, scope: !6359)
!6365 = !DILocation(line: 836, column: 3, scope: !6359)
!6366 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !506, file: !506, line: 304, type: !559, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6367)
!6367 = !{!6368}
!6368 = !DILocalVariable(name: "dev", arg: 1, scope: !6366, file: !506, line: 304, type: !535)
!6369 = !DILocation(line: 0, scope: !6366)
!6370 = !DILocation(line: 306, column: 2, scope: !6366)
!6371 = !DILocation(line: 307, column: 1, scope: !6366)
!6372 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !506, file: !506, line: 299, type: !559, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6373)
!6373 = !{!6374}
!6374 = !DILocalVariable(name: "dev", arg: 1, scope: !6372, file: !506, line: 299, type: !535)
!6375 = !DILocation(line: 0, scope: !6372)
!6376 = !DILocation(line: 301, column: 2, scope: !6372)
!6377 = !DILocation(line: 302, column: 1, scope: !6372)
!6378 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !506, file: !506, line: 294, type: !559, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6379)
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "dev", arg: 1, scope: !6378, file: !506, line: 294, type: !535)
!6381 = !DILocation(line: 0, scope: !6378)
!6382 = !DILocation(line: 296, column: 2, scope: !6378)
!6383 = !DILocation(line: 297, column: 1, scope: !6378)
!6384 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !506, file: !506, line: 397, type: !559, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6385)
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "dev", arg: 1, scope: !6384, file: !506, line: 397, type: !535)
!6387 = !DILocation(line: 0, scope: !6384)
!6388 = !DILocation(line: 399, column: 2, scope: !6384)
!6389 = !DILocation(line: 400, column: 1, scope: !6384)
!6390 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !506, file: !506, line: 392, type: !559, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6391)
!6391 = !{!6392}
!6392 = !DILocalVariable(name: "dev", arg: 1, scope: !6390, file: !506, line: 392, type: !535)
!6393 = !DILocation(line: 0, scope: !6390)
!6394 = !DILocation(line: 394, column: 2, scope: !6390)
!6395 = !DILocation(line: 395, column: 1, scope: !6390)
!6396 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !506, file: !506, line: 289, type: !559, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6397)
!6397 = !{!6398}
!6398 = !DILocalVariable(name: "dev", arg: 1, scope: !6396, file: !506, line: 289, type: !535)
!6399 = !DILocation(line: 0, scope: !6396)
!6400 = !DILocation(line: 291, column: 2, scope: !6396)
!6401 = !DILocation(line: 292, column: 1, scope: !6396)
!6402 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !506, file: !506, line: 387, type: !559, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6403)
!6403 = !{!6404}
!6404 = !DILocalVariable(name: "dev", arg: 1, scope: !6402, file: !506, line: 387, type: !535)
!6405 = !DILocation(line: 0, scope: !6402)
!6406 = !DILocation(line: 389, column: 2, scope: !6402)
!6407 = !DILocation(line: 390, column: 1, scope: !6402)
!6408 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !506, file: !506, line: 382, type: !559, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6409)
!6409 = !{!6410}
!6410 = !DILocalVariable(name: "dev", arg: 1, scope: !6408, file: !506, line: 382, type: !535)
!6411 = !DILocation(line: 0, scope: !6408)
!6412 = !DILocation(line: 384, column: 2, scope: !6408)
!6413 = !DILocation(line: 385, column: 1, scope: !6408)
!6414 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !506, file: !506, line: 373, type: !559, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6415)
!6415 = !{!6416}
!6416 = !DILocalVariable(name: "dev", arg: 1, scope: !6414, file: !506, line: 373, type: !535)
!6417 = !DILocation(line: 0, scope: !6414)
!6418 = !DILocation(line: 375, column: 2, scope: !6414)
!6419 = !DILocation(line: 376, column: 1, scope: !6414)
!6420 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !506, file: !506, line: 284, type: !559, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6421)
!6421 = !{!6422}
!6422 = !DILocalVariable(name: "dev", arg: 1, scope: !6420, file: !506, line: 284, type: !535)
!6423 = !DILocation(line: 0, scope: !6420)
!6424 = !DILocation(line: 286, column: 2, scope: !6420)
!6425 = !DILocation(line: 287, column: 1, scope: !6420)
!6426 = distinct !DISubprogram(name: "stm32_exti_init", scope: !506, file: !506, line: 416, type: !533, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6427)
!6427 = !{!6428}
!6428 = !DILocalVariable(name: "dev", arg: 1, scope: !6426, file: !506, line: 416, type: !535)
!6429 = !DILocation(line: 0, scope: !6426)
!6430 = !DILocation(line: 418, column: 2, scope: !6426)
!6431 = !DILocation(line: 420, column: 2, scope: !6426)
!6432 = !DILocation(line: 0, scope: !558)
!6433 = !DILocation(line: 493, column: 2, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !558, file: !506, line: 493, column: 2)
!6435 = !DILocation(line: 497, column: 2, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !558, file: !506, line: 497, column: 2)
!6437 = !DILocation(line: 507, column: 2, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !558, file: !506, line: 507, column: 2)
!6439 = !DILocation(line: 512, column: 2, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !558, file: !506, line: 512, column: 2)
!6441 = !DILocation(line: 516, column: 2, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !558, file: !506, line: 516, column: 2)
!6443 = !DILocation(line: 523, column: 2, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !558, file: !506, line: 523, column: 2)
!6445 = !DILocation(line: 527, column: 2, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !558, file: !506, line: 527, column: 2)
!6447 = !DILocation(line: 581, column: 2, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !558, file: !506, line: 581, column: 2)
!6449 = !DILocation(line: 586, column: 2, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !558, file: !506, line: 586, column: 2)
!6451 = !DILocation(line: 591, column: 2, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !558, file: !506, line: 591, column: 2)
!6453 = !DILocation(line: 595, column: 2, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !558, file: !506, line: 595, column: 2)
!6455 = !DILocation(line: 607, column: 1, scope: !558)
!6456 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !506, file: !506, line: 112, type: !6342, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6457)
!6457 = !{!6458, !6459}
!6458 = !DILocalVariable(name: "line", arg: 1, scope: !6456, file: !506, line: 112, type: !103)
!6459 = !DILocalVariable(name: "irqnum", scope: !6456, file: !506, line: 114, type: !103)
!6460 = !DILocation(line: 0, scope: !6456)
!6461 = !DILocation(line: 121, column: 11, scope: !6456)
!6462 = !DILocation(line: 130, column: 26, scope: !6456)
!6463 = !DILocation(line: 130, column: 2, scope: !6456)
!6464 = !DILocation(line: 134, column: 2, scope: !6456)
!6465 = !DILocation(line: 135, column: 1, scope: !6456)
!6466 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6353, file: !6353, line: 268, type: !4788, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6467)
!6467 = !{!6468}
!6468 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6466, file: !6353, line: 268, type: !121)
!6469 = !DILocation(line: 0, scope: !6466)
!6470 = !DILocation(line: 270, column: 3, scope: !6466)
!6471 = !DILocation(line: 271, column: 1, scope: !6466)
!6472 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !506, file: !506, line: 137, type: !6342, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6473)
!6473 = !{!6474}
!6474 = !DILocalVariable(name: "line", arg: 1, scope: !6472, file: !506, line: 137, type: !103)
!6475 = !DILocation(line: 0, scope: !6472)
!6476 = !DILocation(line: 141, column: 11, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6472, file: !506, line: 141, column: 6)
!6478 = !DILocation(line: 141, column: 6, scope: !6472)
!6479 = !DILocation(line: 145, column: 28, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6477, file: !506, line: 141, column: 17)
!6481 = !DILocation(line: 145, column: 3, scope: !6480)
!6482 = !DILocation(line: 147, column: 2, scope: !6480)
!6483 = !DILocation(line: 151, column: 1, scope: !6472)
!6484 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6353, file: !6353, line: 309, type: !4788, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6485)
!6485 = !{!6486}
!6486 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6484, file: !6353, line: 309, type: !121)
!6487 = !DILocation(line: 0, scope: !6484)
!6488 = !DILocation(line: 311, column: 3, scope: !6484)
!6489 = !DILocation(line: 312, column: 1, scope: !6484)
!6490 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !506, file: !506, line: 202, type: !6491, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{null, !103, !103}
!6493 = !{!6494, !6495}
!6494 = !DILocalVariable(name: "line", arg: 1, scope: !6490, file: !506, line: 202, type: !103)
!6495 = !DILocalVariable(name: "trigger", arg: 2, scope: !6490, file: !506, line: 202, type: !103)
!6496 = !DILocation(line: 0, scope: !6490)
!6497 = !DILocation(line: 211, column: 2, scope: !6490)
!6498 = !DILocation(line: 213, column: 36, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6490, file: !506, line: 211, column: 19)
!6500 = !DILocation(line: 213, column: 3, scope: !6499)
!6501 = !DILocation(line: 214, column: 3, scope: !6499)
!6502 = !DILocation(line: 215, column: 3, scope: !6499)
!6503 = !DILocation(line: 217, column: 35, scope: !6499)
!6504 = !DILocation(line: 217, column: 3, scope: !6499)
!6505 = !DILocation(line: 218, column: 3, scope: !6499)
!6506 = !DILocation(line: 219, column: 3, scope: !6499)
!6507 = !DILocation(line: 221, column: 36, scope: !6499)
!6508 = !DILocation(line: 221, column: 3, scope: !6499)
!6509 = !DILocation(line: 222, column: 3, scope: !6499)
!6510 = !DILocation(line: 223, column: 3, scope: !6499)
!6511 = !DILocation(line: 225, column: 35, scope: !6499)
!6512 = !DILocation(line: 225, column: 3, scope: !6499)
!6513 = !DILocation(line: 226, column: 3, scope: !6499)
!6514 = !DILocation(line: 227, column: 3, scope: !6499)
!6515 = !DILocation(line: 232, column: 1, scope: !6490)
!6516 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6353, file: !6353, line: 573, type: !4788, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6517)
!6517 = !{!6518}
!6518 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6516, file: !6353, line: 573, type: !121)
!6519 = !DILocation(line: 0, scope: !6516)
!6520 = !DILocation(line: 575, column: 3, scope: !6516)
!6521 = !DILocation(line: 577, column: 1, scope: !6516)
!6522 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6353, file: !6353, line: 703, type: !4788, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6523)
!6523 = !{!6524}
!6524 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6522, file: !6353, line: 703, type: !121)
!6525 = !DILocation(line: 0, scope: !6522)
!6526 = !DILocation(line: 705, column: 3, scope: !6522)
!6527 = !DILocation(line: 706, column: 1, scope: !6522)
!6528 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6353, file: !6353, line: 529, type: !4788, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6529)
!6529 = !{!6530}
!6530 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6528, file: !6353, line: 529, type: !121)
!6531 = !DILocation(line: 0, scope: !6528)
!6532 = !DILocation(line: 531, column: 3, scope: !6528)
!6533 = !DILocation(line: 533, column: 1, scope: !6528)
!6534 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6353, file: !6353, line: 661, type: !4788, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6535)
!6535 = !{!6536}
!6536 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6534, file: !6353, line: 661, type: !121)
!6537 = !DILocation(line: 0, scope: !6534)
!6538 = !DILocation(line: 663, column: 3, scope: !6534)
!6539 = !DILocation(line: 664, column: 1, scope: !6534)
!6540 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !506, file: !506, line: 433, type: !6541, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!103, !103, !546, !102}
!6543 = !{!6544, !6545, !6546, !6547, !6549}
!6544 = !DILocalVariable(name: "line", arg: 1, scope: !6540, file: !506, line: 433, type: !103)
!6545 = !DILocalVariable(name: "cb", arg: 2, scope: !6540, file: !506, line: 433, type: !546)
!6546 = !DILocalVariable(name: "arg", arg: 3, scope: !6540, file: !506, line: 433, type: !102)
!6547 = !DILocalVariable(name: "dev", scope: !6540, file: !506, line: 435, type: !6548)
!6548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!6549 = !DILocalVariable(name: "data", scope: !6540, file: !506, line: 436, type: !6307)
!6550 = !DILocation(line: 0, scope: !6540)
!6551 = !DILocation(line: 438, column: 21, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6540, file: !506, line: 438, column: 6)
!6553 = !DILocation(line: 438, column: 6, scope: !6552)
!6554 = !DILocation(line: 438, column: 6, scope: !6540)
!6555 = !DILocation(line: 442, column: 20, scope: !6540)
!6556 = !DILocation(line: 443, column: 17, scope: !6540)
!6557 = !DILocation(line: 443, column: 22, scope: !6540)
!6558 = !DILocation(line: 445, column: 2, scope: !6540)
!6559 = !DILocation(line: 446, column: 1, scope: !6540)
!6560 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !506, file: !506, line: 448, type: !6342, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6561)
!6561 = !{!6562, !6563, !6564}
!6562 = !DILocalVariable(name: "line", arg: 1, scope: !6560, file: !506, line: 448, type: !103)
!6563 = !DILocalVariable(name: "dev", scope: !6560, file: !506, line: 450, type: !6548)
!6564 = !DILocalVariable(name: "data", scope: !6560, file: !506, line: 451, type: !6307)
!6565 = !DILocation(line: 0, scope: !6560)
!6566 = !DILocation(line: 453, column: 17, scope: !6560)
!6567 = !DILocation(line: 453, column: 20, scope: !6560)
!6568 = !DILocation(line: 454, column: 17, scope: !6560)
!6569 = !DILocation(line: 454, column: 22, scope: !6560)
!6570 = !DILocation(line: 455, column: 1, scope: !6560)
!6571 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !691, file: !691, line: 183, type: !729, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6572)
!6572 = !{!6573, !6574, !6575, !6576, !6577}
!6573 = !DILocalVariable(name: "dev", arg: 1, scope: !6571, file: !691, line: 183, type: !720)
!6574 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6571, file: !691, line: 184, type: !731)
!6575 = !DILocalVariable(name: "pclken", scope: !6571, file: !691, line: 186, type: !681)
!6576 = !DILocalVariable(name: "reg", scope: !6571, file: !691, line: 187, type: !1272)
!6577 = !DILocalVariable(name: "reg_val", scope: !6571, file: !691, line: 188, type: !121)
!6578 = !DILocation(line: 0, scope: !6571)
!6579 = !DILocation(line: 192, column: 6, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6571, file: !691, line: 192, column: 6)
!6581 = !DILocation(line: 192, column: 6, scope: !6571)
!6582 = !DILocation(line: 197, column: 52, scope: !6571)
!6583 = !DILocation(line: 197, column: 8, scope: !6571)
!6584 = !DILocation(line: 198, column: 12, scope: !6571)
!6585 = !DILocation(line: 199, column: 21, scope: !6571)
!6586 = !DILocation(line: 199, column: 10, scope: !6571)
!6587 = !DILocation(line: 200, column: 7, scope: !6571)
!6588 = !DILocation(line: 202, column: 2, scope: !6571)
!6589 = !DILocation(line: 203, column: 1, scope: !6571)
!6590 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !691, file: !691, line: 205, type: !729, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6591)
!6591 = !{!6592, !6593, !6594, !6595, !6596}
!6592 = !DILocalVariable(name: "dev", arg: 1, scope: !6590, file: !691, line: 205, type: !720)
!6593 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6590, file: !691, line: 206, type: !731)
!6594 = !DILocalVariable(name: "pclken", scope: !6590, file: !691, line: 208, type: !681)
!6595 = !DILocalVariable(name: "reg", scope: !6590, file: !691, line: 209, type: !1272)
!6596 = !DILocalVariable(name: "reg_val", scope: !6590, file: !691, line: 210, type: !121)
!6597 = !DILocation(line: 0, scope: !6590)
!6598 = !DILocation(line: 214, column: 6, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6590, file: !691, line: 214, column: 6)
!6600 = !DILocation(line: 214, column: 6, scope: !6590)
!6601 = !DILocation(line: 219, column: 52, scope: !6590)
!6602 = !DILocation(line: 219, column: 8, scope: !6590)
!6603 = !DILocation(line: 220, column: 12, scope: !6590)
!6604 = !DILocation(line: 221, column: 22, scope: !6590)
!6605 = !DILocation(line: 221, column: 13, scope: !6590)
!6606 = !DILocation(line: 221, column: 10, scope: !6590)
!6607 = !DILocation(line: 222, column: 7, scope: !6590)
!6608 = !DILocation(line: 224, column: 2, scope: !6590)
!6609 = !DILocation(line: 225, column: 1, scope: !6590)
!6610 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !691, file: !691, line: 262, type: !745, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6611)
!6611 = !{!6612, !6613, !6614, !6615, !6616, !6617, !6618, !6619}
!6612 = !DILocalVariable(name: "clock", arg: 1, scope: !6610, file: !691, line: 262, type: !720)
!6613 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6610, file: !691, line: 263, type: !731)
!6614 = !DILocalVariable(name: "rate", arg: 3, scope: !6610, file: !691, line: 264, type: !687)
!6615 = !DILocalVariable(name: "pclken", scope: !6610, file: !691, line: 266, type: !681)
!6616 = !DILocalVariable(name: "ahb_clock", scope: !6610, file: !691, line: 273, type: !121)
!6617 = !DILocalVariable(name: "apb1_clock", scope: !6610, file: !691, line: 274, type: !121)
!6618 = !DILocalVariable(name: "apb2_clock", scope: !6610, file: !691, line: 276, type: !121)
!6619 = !DILocalVariable(name: "ahb3_clock", scope: !6610, file: !691, line: 286, type: !121)
!6620 = !DILocation(line: 0, scope: !6610)
!6621 = !DILocation(line: 273, column: 23, scope: !6610)
!6622 = !DILocation(line: 299, column: 18, scope: !6610)
!6623 = !DILocation(line: 299, column: 2, scope: !6610)
!6624 = !DILocation(line: 274, column: 24, scope: !6610)
!6625 = !DILocation(line: 319, column: 3, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6610, file: !691, line: 299, column: 23)
!6627 = !DILocation(line: 276, column: 24, scope: !6610)
!6628 = !DILocation(line: 323, column: 3, scope: !6626)
!6629 = !DILocation(line: 346, column: 33, scope: !6626)
!6630 = !DILocation(line: 346, column: 11, scope: !6626)
!6631 = !DILocation(line: 350, column: 3, scope: !6626)
!6632 = !DILocation(line: 374, column: 3, scope: !6626)
!6633 = !DILocation(line: 379, column: 3, scope: !6626)
!6634 = !DILocation(line: 0, scope: !6626)
!6635 = !DILocation(line: 396, column: 1, scope: !6610)
!6636 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !691, file: !691, line: 227, type: !761, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6637)
!6637 = !{!6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645}
!6638 = !DILocalVariable(name: "dev", arg: 1, scope: !6636, file: !691, line: 227, type: !720)
!6639 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6636, file: !691, line: 228, type: !731)
!6640 = !DILocalVariable(name: "data", arg: 3, scope: !6636, file: !691, line: 229, type: !102)
!6641 = !DILocalVariable(name: "pclken", scope: !6636, file: !691, line: 233, type: !681)
!6642 = !DILocalVariable(name: "reg", scope: !6636, file: !691, line: 234, type: !1272)
!6643 = !DILocalVariable(name: "reg_val", scope: !6636, file: !691, line: 235, type: !121)
!6644 = !DILocalVariable(name: "dt_val", scope: !6636, file: !691, line: 235, type: !121)
!6645 = !DILocalVariable(name: "err", scope: !6636, file: !691, line: 236, type: !103)
!6646 = !DILocation(line: 0, scope: !6636)
!6647 = !DILocation(line: 241, column: 30, scope: !6636)
!6648 = !DILocation(line: 241, column: 8, scope: !6636)
!6649 = !DILocation(line: 242, column: 10, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6636, file: !691, line: 242, column: 6)
!6651 = !DILocation(line: 242, column: 6, scope: !6636)
!6652 = !DILocation(line: 247, column: 11, scope: !6636)
!6653 = !DILocation(line: 248, column: 6, scope: !6636)
!6654 = !DILocation(line: 247, column: 44, scope: !6636)
!6655 = !DILocation(line: 250, column: 6, scope: !6636)
!6656 = !DILocation(line: 249, column: 52, scope: !6636)
!6657 = !DILocation(line: 249, column: 8, scope: !6636)
!6658 = !DILocation(line: 251, column: 12, scope: !6636)
!6659 = !DILocation(line: 252, column: 10, scope: !6636)
!6660 = !DILocation(line: 253, column: 7, scope: !6636)
!6661 = !DILocation(line: 255, column: 2, scope: !6636)
!6662 = !DILocation(line: 260, column: 1, scope: !6636)
!6663 = distinct !DISubprogram(name: "enabled_clock", scope: !691, file: !691, line: 100, type: !6664, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6666)
!6664 = !DISubroutineType(types: !6665)
!6665 = !{!103, !121}
!6666 = !{!6667, !6668}
!6667 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6663, file: !691, line: 100, type: !121)
!6668 = !DILocalVariable(name: "r", scope: !6663, file: !691, line: 102, type: !103)
!6669 = !DILocation(line: 0, scope: !6663)
!6670 = !DILocation(line: 104, column: 2, scope: !6663)
!6671 = !DILocation(line: 180, column: 2, scope: !6663)
!6672 = !DILocation(line: 181, column: 1, scope: !6663)
!6673 = distinct !DISubprogram(name: "get_bus_clock", scope: !691, file: !691, line: 79, type: !6674, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6676)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{!121, !121, !121}
!6676 = !{!6677, !6678}
!6677 = !DILocalVariable(name: "clock", arg: 1, scope: !6673, file: !691, line: 79, type: !121)
!6678 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6673, file: !691, line: 79, type: !121)
!6679 = !DILocation(line: 0, scope: !6673)
!6680 = !DILocation(line: 81, column: 15, scope: !6673)
!6681 = !DILocation(line: 81, column: 2, scope: !6673)
!6682 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !691, file: !691, line: 68, type: !6683, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6685)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{!121, !121, !103, !103, !103}
!6685 = !{!6686, !6687, !6688, !6689}
!6686 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6682, file: !691, line: 68, type: !121)
!6687 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6682, file: !691, line: 69, type: !103)
!6688 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6682, file: !691, line: 70, type: !103)
!6689 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6682, file: !691, line: 71, type: !103)
!6690 = !DILocation(line: 0, scope: !6682)
!6691 = !DILocation(line: 75, column: 22, scope: !6682)
!6692 = !DILocation(line: 75, column: 34, scope: !6682)
!6693 = !DILocation(line: 75, column: 2, scope: !6682)
!6694 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !691, file: !691, line: 641, type: !718, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6695)
!6695 = !{!6696, !6697, !6698}
!6696 = !DILocalVariable(name: "dev", arg: 1, scope: !6694, file: !691, line: 641, type: !720)
!6697 = !DILocalVariable(name: "old_flash_freq", scope: !6694, file: !691, line: 664, type: !121)
!6698 = !DILocalVariable(name: "new_flash_freq", scope: !6694, file: !691, line: 665, type: !121)
!6699 = !DILocation(line: 0, scope: !6694)
!6700 = !DILocation(line: 646, column: 2, scope: !6694)
!6701 = !DILocation(line: 667, column: 19, scope: !6694)
!6702 = !DILocation(line: 674, column: 21, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6694, file: !691, line: 674, column: 6)
!6704 = !DILocation(line: 674, column: 6, scope: !6694)
!6705 = !DILocation(line: 675, column: 3, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6703, file: !691, line: 674, column: 59)
!6707 = !DILocation(line: 676, column: 2, scope: !6706)
!6708 = !DILocation(line: 680, column: 2, scope: !6694)
!6709 = !DILocation(line: 683, column: 2, scope: !6694)
!6710 = !DILocation(line: 690, column: 3, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !691, line: 689, column: 9)
!6712 = distinct !DILexicalBlock(scope: !6694, file: !691, line: 685, column: 6)
!6713 = !DILocation(line: 695, column: 2, scope: !6694)
!6714 = !DILocation(line: 696, column: 2, scope: !6694)
!6715 = !DILocation(line: 696, column: 9, scope: !6694)
!6716 = !DILocation(line: 696, column: 34, scope: !6694)
!6717 = distinct !{!6717, !6714, !6718}
!6718 = !DILocation(line: 697, column: 2, scope: !6694)
!6719 = !DILocation(line: 720, column: 21, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6694, file: !691, line: 720, column: 6)
!6721 = !DILocation(line: 720, column: 6, scope: !6694)
!6722 = !DILocation(line: 721, column: 3, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6720, file: !691, line: 720, column: 60)
!6724 = !DILocation(line: 722, column: 2, scope: !6723)
!6725 = !DILocation(line: 725, column: 18, scope: !6694)
!6726 = !DILocation(line: 728, column: 2, scope: !6694)
!6727 = !DILocation(line: 730, column: 2, scope: !6694)
!6728 = !DILocation(line: 745, column: 2, scope: !6694)
!6729 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6730, file: !6730, line: 3275, type: !4778, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6730 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6731 = !DILocation(line: 3277, column: 21, scope: !6729)
!6732 = !DILocation(line: 3277, column: 3, scope: !6729)
!6733 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !691, file: !691, line: 507, type: !2738, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6734 = !DILocation(line: 534, column: 7, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !691, line: 534, column: 7)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !691, line: 532, column: 37)
!6737 = distinct !DILexicalBlock(scope: !6733, file: !691, line: 532, column: 6)
!6738 = !DILocation(line: 534, column: 28, scope: !6735)
!6739 = !DILocation(line: 534, column: 7, scope: !6736)
!6740 = !DILocation(line: 536, column: 4, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6735, file: !691, line: 534, column: 34)
!6742 = !DILocation(line: 537, column: 4, scope: !6741)
!6743 = !DILocation(line: 537, column: 11, scope: !6741)
!6744 = !DILocation(line: 537, column: 32, scope: !6741)
!6745 = distinct !{!6745, !6742, !6746}
!6746 = !DILocation(line: 539, column: 4, scope: !6741)
!6747 = !DILocation(line: 583, column: 3, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !691, line: 577, column: 37)
!6749 = distinct !DILexicalBlock(scope: !6733, file: !691, line: 577, column: 6)
!6750 = !DILocation(line: 584, column: 3, scope: !6748)
!6751 = !DILocation(line: 584, column: 10, scope: !6748)
!6752 = !DILocation(line: 584, column: 31, scope: !6748)
!6753 = distinct !{!6753, !6750, !6754}
!6754 = !DILocation(line: 585, column: 3, scope: !6748)
!6755 = !DILocation(line: 627, column: 1, scope: !6733)
!6756 = distinct !DISubprogram(name: "set_up_plls", scope: !691, file: !691, line: 448, type: !2738, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6757 = !DILocation(line: 460, column: 6, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6756, file: !691, line: 460, column: 6)
!6759 = !DILocation(line: 460, column: 31, scope: !6758)
!6760 = !DILocation(line: 460, column: 6, scope: !6756)
!6761 = !DILocation(line: 461, column: 3, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6758, file: !691, line: 460, column: 67)
!6763 = !DILocation(line: 462, column: 3, scope: !6762)
!6764 = !DILocation(line: 463, column: 2, scope: !6762)
!6765 = !DILocation(line: 464, column: 2, scope: !6756)
!6766 = !DILocation(line: 488, column: 2, scope: !6756)
!6767 = !DILocation(line: 496, column: 2, scope: !6756)
!6768 = !DILocation(line: 499, column: 2, scope: !6756)
!6769 = !DILocation(line: 500, column: 2, scope: !6756)
!6770 = !DILocation(line: 500, column: 9, scope: !6756)
!6771 = !DILocation(line: 500, column: 30, scope: !6756)
!6772 = distinct !{!6772, !6769, !6773}
!6773 = !DILocation(line: 502, column: 2, scope: !6756)
!6774 = !DILocation(line: 505, column: 1, scope: !6756)
!6775 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6730, file: !6730, line: 3224, type: !4788, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6776)
!6776 = !{!6777}
!6777 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6775, file: !6730, line: 3224, type: !121)
!6778 = !DILocation(line: 0, scope: !6775)
!6779 = !DILocation(line: 3226, column: 3, scope: !6775)
!6780 = !DILocation(line: 3227, column: 1, scope: !6775)
!6781 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6730, file: !6730, line: 3188, type: !4788, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6782)
!6782 = !{!6783}
!6783 = !DILocalVariable(name: "Source", arg: 1, scope: !6781, file: !6730, line: 3188, type: !121)
!6784 = !DILocation(line: 0, scope: !6781)
!6785 = !DILocation(line: 3190, column: 3, scope: !6781)
!6786 = !DILocation(line: 3191, column: 1, scope: !6781)
!6787 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6730, file: !6730, line: 3204, type: !4778, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6788 = !DILocation(line: 3206, column: 21, scope: !6787)
!6789 = !DILocation(line: 3206, column: 3, scope: !6787)
!6790 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6730, file: !6730, line: 3240, type: !4788, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6791)
!6791 = !{!6792}
!6792 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6790, file: !6730, line: 3240, type: !121)
!6793 = !DILocation(line: 0, scope: !6790)
!6794 = !DILocation(line: 3242, column: 3, scope: !6790)
!6795 = !DILocation(line: 3243, column: 1, scope: !6790)
!6796 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6730, file: !6730, line: 3256, type: !4788, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !6797)
!6797 = !{!6798}
!6798 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6796, file: !6730, line: 3256, type: !121)
!6799 = !DILocation(line: 0, scope: !6796)
!6800 = !DILocation(line: 3258, column: 3, scope: !6796)
!6801 = !DILocation(line: 3259, column: 1, scope: !6796)
!6802 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !691, file: !691, line: 409, type: !2738, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6803 = !DILocation(line: 412, column: 6, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6802, file: !691, line: 412, column: 6)
!6805 = !DILocation(line: 412, column: 27, scope: !6804)
!6806 = !DILocation(line: 412, column: 6, scope: !6802)
!6807 = !DILocation(line: 414, column: 3, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6804, file: !691, line: 412, column: 33)
!6809 = !DILocation(line: 415, column: 3, scope: !6808)
!6810 = !DILocation(line: 415, column: 10, scope: !6808)
!6811 = !DILocation(line: 415, column: 31, scope: !6808)
!6812 = distinct !{!6812, !6809, !6813}
!6813 = !DILocation(line: 417, column: 3, scope: !6808)
!6814 = !DILocation(line: 421, column: 2, scope: !6802)
!6815 = !DILocation(line: 422, column: 2, scope: !6802)
!6816 = !DILocation(line: 422, column: 9, scope: !6802)
!6817 = !DILocation(line: 422, column: 34, scope: !6802)
!6818 = distinct !{!6818, !6815, !6819}
!6819 = !DILocation(line: 423, column: 2, scope: !6802)
!6820 = !DILocation(line: 424, column: 1, scope: !6802)
!6821 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6730, file: !6730, line: 4195, type: !2738, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6822 = !DILocation(line: 4197, column: 3, scope: !6821)
!6823 = !DILocation(line: 4198, column: 1, scope: !6821)
!6824 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6730, file: !6730, line: 4184, type: !2738, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6825 = !DILocation(line: 4186, column: 3, scope: !6824)
!6826 = !DILocation(line: 4187, column: 1, scope: !6824)
!6827 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6730, file: !6730, line: 4205, type: !4778, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6828 = !DILocation(line: 4207, column: 11, scope: !6827)
!6829 = !DILocation(line: 4207, column: 44, scope: !6827)
!6830 = !DILocation(line: 4207, column: 3, scope: !6827)
!6831 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6730, file: !6730, line: 3007, type: !4778, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6832 = !DILocation(line: 3009, column: 11, scope: !6831)
!6833 = !DILocation(line: 3009, column: 44, scope: !6831)
!6834 = !DILocation(line: 3009, column: 3, scope: !6831)
!6835 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6730, file: !6730, line: 2987, type: !2738, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6836 = !DILocation(line: 2989, column: 3, scope: !6835)
!6837 = !DILocation(line: 2990, column: 1, scope: !6835)
!6838 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6730, file: !6730, line: 3143, type: !2738, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6839 = !DILocation(line: 3145, column: 3, scope: !6838)
!6840 = !DILocation(line: 3146, column: 1, scope: !6838)
!6841 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6730, file: !6730, line: 3163, type: !4778, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!6842 = !DILocation(line: 3165, column: 11, scope: !6841)
!6843 = !DILocation(line: 3165, column: 46, scope: !6841)
!6844 = !DILocation(line: 3165, column: 3, scope: !6841)
!6845 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !6846, file: !6846, line: 40, type: !4778, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !322)
!6846 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6847 = !DILocation(line: 43, column: 3, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6846, line: 42, column: 37)
!6849 = distinct !DILexicalBlock(scope: !6845, file: !6846, line: 42, column: 6)
!6850 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !6846, file: !6846, line: 56, type: !2738, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !322)
!6851 = !DILocation(line: 58, column: 2, scope: !6850)
!6852 = !DILocation(line: 62, column: 1, scope: !6850)
!6853 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6730, file: !6730, line: 4304, type: !6854, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6856)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{null, !121, !121, !121, !121}
!6856 = !{!6857, !6858, !6859, !6860}
!6857 = !DILocalVariable(name: "Source", arg: 1, scope: !6853, file: !6730, line: 4304, type: !121)
!6858 = !DILocalVariable(name: "PLLM", arg: 2, scope: !6853, file: !6730, line: 4304, type: !121)
!6859 = !DILocalVariable(name: "PLLN", arg: 3, scope: !6853, file: !6730, line: 4304, type: !121)
!6860 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !6853, file: !6730, line: 4304, type: !121)
!6861 = !DILocation(line: 0, scope: !6853)
!6862 = !DILocation(line: 4306, column: 3, scope: !6853)
!6863 = !DILocation(line: 4308, column: 3, scope: !6853)
!6864 = !DILocation(line: 4312, column: 1, scope: !6853)
!6865 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !6846, file: !6846, line: 69, type: !2738, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !322)
!6866 = !DILocation(line: 72, column: 2, scope: !6865)
!6867 = !DILocation(line: 73, column: 1, scope: !6865)
!6868 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6869, file: !6869, line: 1185, type: !4788, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6870)
!6869 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6870 = !{!6871, !6872}
!6871 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6868, file: !6869, line: 1185, type: !121)
!6872 = !DILocalVariable(name: "tmpreg", scope: !6868, file: !6869, line: 1187, type: !120)
!6873 = !DILocation(line: 0, scope: !6868)
!6874 = !DILocation(line: 1187, column: 3, scope: !6868)
!6875 = !DILocation(line: 1187, column: 17, scope: !6868)
!6876 = !DILocation(line: 1188, column: 3, scope: !6868)
!6877 = !DILocation(line: 1190, column: 12, scope: !6868)
!6878 = !DILocation(line: 1190, column: 10, scope: !6868)
!6879 = !DILocation(line: 1191, column: 9, scope: !6868)
!6880 = !DILocation(line: 1192, column: 1, scope: !6868)
!6881 = distinct !DISubprogram(name: "uart_console_init", scope: !822, file: !822, line: 588, type: !799, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6882)
!6882 = !{!6883}
!6883 = !DILocalVariable(name: "arg", arg: 1, scope: !6881, file: !822, line: 588, type: !777)
!6884 = !DILocation(line: 0, scope: !6881)
!6885 = !DILocation(line: 593, column: 7, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6881, file: !822, line: 593, column: 6)
!6887 = !DILocation(line: 593, column: 6, scope: !6881)
!6888 = !DILocation(line: 597, column: 2, scope: !6881)
!6889 = !DILocation(line: 599, column: 2, scope: !6881)
!6890 = !DILocation(line: 600, column: 1, scope: !6881)
!6891 = distinct !DISubprogram(name: "device_is_ready", scope: !6892, file: !6892, line: 47, type: !6893, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6895)
!6892 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!6893 = !DISubroutineType(types: !6894)
!6894 = !{!157, !777}
!6895 = !{!6896}
!6896 = !DILocalVariable(name: "dev", arg: 1, scope: !6891, file: !6892, line: 47, type: !777)
!6897 = !DILocation(line: 0, scope: !6891)
!6898 = !DILocation(line: 55, column: 2, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6891, file: !6892, line: 55, column: 2)
!6900 = !{i64 2154265943}
!6901 = !DILocation(line: 56, column: 9, scope: !6891)
!6902 = !DILocation(line: 56, column: 2, scope: !6891)
!6903 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !822, file: !822, line: 573, type: !2738, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !322)
!6904 = !DILocation(line: 576, column: 2, scope: !6903)
!6905 = !DILocation(line: 579, column: 2, scope: !6903)
!6906 = !DILocation(line: 581, column: 1, scope: !6903)
!6907 = distinct !DISubprogram(name: "console_out", scope: !822, file: !822, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6908)
!6908 = !{!6909}
!6909 = !DILocalVariable(name: "c", arg: 1, scope: !6907, file: !822, line: 77, type: !103)
!6910 = !DILocation(line: 0, scope: !6907)
!6911 = !DILocation(line: 89, column: 11, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !822, line: 89, column: 6)
!6913 = !DILocation(line: 89, column: 6, scope: !6907)
!6914 = !DILocation(line: 90, column: 3, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6912, file: !822, line: 89, column: 17)
!6916 = !DILocation(line: 91, column: 2, scope: !6915)
!6917 = !DILocation(line: 92, column: 34, scope: !6907)
!6918 = !DILocation(line: 92, column: 2, scope: !6907)
!6919 = !DILocation(line: 94, column: 2, scope: !6907)
!6920 = distinct !DISubprogram(name: "uart_poll_out", scope: !6921, file: !6921, line: 95, type: !795, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6922)
!6921 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/minimal")
!6922 = !{!6923, !6924}
!6923 = !DILocalVariable(name: "dev", arg: 1, scope: !6920, file: !6921, line: 95, type: !777)
!6924 = !DILocalVariable(name: "out_char", arg: 2, scope: !6920, file: !6921, line: 95, type: !155)
!6925 = !DILocation(line: 0, scope: !6920)
!6926 = !DILocation(line: 105, column: 2, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6920, file: !6921, line: 105, column: 2)
!6928 = !{i64 2154349334}
!6929 = !DILocation(line: 106, column: 2, scope: !6920)
!6930 = !DILocation(line: 107, column: 1, scope: !6920)
!6931 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !771, file: !771, line: 574, type: !795, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6932)
!6932 = !{!6933, !6934, !6935}
!6933 = !DILocalVariable(name: "dev", arg: 1, scope: !6931, file: !771, line: 574, type: !777)
!6934 = !DILocalVariable(name: "out_char", arg: 2, scope: !6931, file: !771, line: 575, type: !155)
!6935 = !DILocalVariable(name: "api", scope: !6931, file: !771, line: 577, type: !768)
!6936 = !DILocation(line: 0, scope: !6931)
!6937 = !DILocation(line: 578, column: 40, scope: !6931)
!6938 = !DILocation(line: 580, column: 7, scope: !6931)
!6939 = !DILocation(line: 580, column: 2, scope: !6931)
!6940 = !DILocation(line: 581, column: 1, scope: !6931)
!6941 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !6893, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6942)
!6942 = !{!6943}
!6943 = !DILocalVariable(name: "dev", arg: 1, scope: !6941, file: !141, line: 730, type: !777)
!6944 = !DILocation(line: 0, scope: !6941)
!6945 = !DILocation(line: 732, column: 9, scope: !6941)
!6946 = !DILocation(line: 732, column: 2, scope: !6941)
!6947 = distinct !DISubprogram(name: "uart_register_input", scope: !822, file: !822, line: 560, type: !6948, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !6993)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{null, !6950, !6950, !6990}
!6950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6951, size: 32)
!6951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !6952)
!6952 = !{!6953}
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !6951, file: !307, line: 2209, baseType: !6954, size: 128)
!6954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !6955)
!6955 = !{!6956, !6969, !6971}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !6954, file: !307, line: 1710, baseType: !6957, size: 64)
!6957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !6958, line: 46, baseType: !6959)
!6958 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !6958, line: 41, size: 64, elements: !6960)
!6960 = !{!6961, !6968}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6959, file: !6958, line: 42, baseType: !6962, size: 32)
!6962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6963, size: 32)
!6963 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !6958, line: 39, baseType: !6964)
!6964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !6958, line: 35, size: 32, elements: !6965)
!6965 = !{!6966}
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !6964, file: !6958, line: 36, baseType: !6967, size: 32)
!6967 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !6958, line: 32, baseType: !121)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6959, file: !6958, line: 43, baseType: !6962, size: 32, offset: 32)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6954, file: !307, line: 1711, baseType: !6970, offset: 64)
!6970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6954, file: !307, line: 1712, baseType: !6972, size: 64, offset: 64)
!6972 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !6973)
!6973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !6974)
!6974 = !{!6975}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6973, file: !247, line: 232, baseType: !6976, size: 64)
!6976 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !6977)
!6977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !6978)
!6978 = !{!6979, !6985}
!6979 = !DIDerivedType(tag: DW_TAG_member, scope: !6977, file: !221, line: 38, baseType: !6980, size: 32)
!6980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6977, file: !221, line: 38, size: 32, elements: !6981)
!6981 = !{!6982, !6984}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6980, file: !221, line: 39, baseType: !6983, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6977, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6980, file: !221, line: 40, baseType: !6983, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, scope: !6977, file: !221, line: 42, baseType: !6986, size: 32, offset: 32)
!6986 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6977, file: !221, line: 42, size: 32, elements: !6987)
!6987 = !{!6988, !6989}
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6986, file: !221, line: 43, baseType: !6983, size: 32)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6986, file: !221, line: 44, baseType: !6983, size: 32)
!6990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6991, size: 32)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{!154, !957, !154}
!6993 = !{!6994, !6995, !6996}
!6994 = !DILocalVariable(name: "avail", arg: 1, scope: !6947, file: !822, line: 560, type: !6950)
!6995 = !DILocalVariable(name: "lines", arg: 2, scope: !6947, file: !822, line: 560, type: !6950)
!6996 = !DILocalVariable(name: "completion", arg: 3, scope: !6947, file: !822, line: 561, type: !6990)
!6997 = !DILocation(line: 0, scope: !6947)
!6998 = !DILocation(line: 566, column: 1, scope: !6947)
!6999 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1001, file: !1001, line: 523, type: !858, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7000)
!7000 = !{!7001, !7002, !7003, !7004, !7005}
!7001 = !DILocalVariable(name: "dev", arg: 1, scope: !6999, file: !1001, line: 523, type: !860)
!7002 = !DILocalVariable(name: "pin", arg: 2, scope: !6999, file: !1001, line: 524, type: !875)
!7003 = !DILocalVariable(name: "flags", arg: 3, scope: !6999, file: !1001, line: 524, type: !876)
!7004 = !DILocalVariable(name: "err", scope: !6999, file: !1001, line: 526, type: !103)
!7005 = !DILocalVariable(name: "pincfg", scope: !6999, file: !1001, line: 527, type: !103)
!7006 = !DILocation(line: 0, scope: !6999)
!7007 = !DILocation(line: 527, column: 2, scope: !6999)
!7008 = !DILocation(line: 532, column: 8, scope: !6999)
!7009 = !DILocation(line: 533, column: 10, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6999, file: !1001, line: 533, column: 6)
!7011 = !DILocation(line: 533, column: 6, scope: !6999)
!7012 = !DILocation(line: 543, column: 13, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6999, file: !1001, line: 543, column: 6)
!7014 = !DILocation(line: 543, column: 28, scope: !7013)
!7015 = !DILocation(line: 543, column: 6, scope: !6999)
!7016 = !DILocation(line: 544, column: 14, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !1001, line: 544, column: 7)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !1001, line: 543, column: 34)
!7019 = !DILocation(line: 544, column: 39, scope: !7017)
!7020 = !DILocation(line: 544, column: 7, scope: !7018)
!7021 = !DILocation(line: 545, column: 38, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7017, file: !1001, line: 544, column: 45)
!7023 = !DILocation(line: 545, column: 4, scope: !7022)
!7024 = !DILocation(line: 546, column: 3, scope: !7022)
!7025 = !DILocation(line: 546, column: 21, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7017, file: !1001, line: 546, column: 14)
!7027 = !DILocation(line: 546, column: 45, scope: !7026)
!7028 = !DILocation(line: 546, column: 14, scope: !7017)
!7029 = !DILocation(line: 547, column: 40, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7026, file: !1001, line: 546, column: 51)
!7031 = !DILocation(line: 547, column: 4, scope: !7030)
!7032 = !DILocation(line: 548, column: 3, scope: !7030)
!7033 = !DILocation(line: 551, column: 32, scope: !6999)
!7034 = !DILocation(line: 551, column: 37, scope: !6999)
!7035 = !DILocation(line: 551, column: 2, scope: !6999)
!7036 = !DILocation(line: 554, column: 6, scope: !6999)
!7037 = !DILocation(line: 562, column: 1, scope: !6999)
!7038 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1001, file: !1001, line: 410, type: !7039, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7041)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!103, !860, !687}
!7041 = !{!7042, !7043, !7044, !7046}
!7042 = !DILocalVariable(name: "dev", arg: 1, scope: !7038, file: !1001, line: 410, type: !860)
!7043 = !DILocalVariable(name: "value", arg: 2, scope: !7038, file: !1001, line: 410, type: !687)
!7044 = !DILocalVariable(name: "cfg", scope: !7038, file: !1001, line: 412, type: !7045)
!7045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!7046 = !DILocalVariable(name: "gpio", scope: !7038, file: !1001, line: 413, type: !933)
!7047 = !DILocation(line: 0, scope: !7038)
!7048 = !DILocation(line: 412, column: 45, scope: !7038)
!7049 = !DILocation(line: 413, column: 44, scope: !7038)
!7050 = !DILocation(line: 415, column: 11, scope: !7038)
!7051 = !DILocation(line: 415, column: 9, scope: !7038)
!7052 = !DILocation(line: 417, column: 2, scope: !7038)
!7053 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1001, file: !1001, line: 420, type: !885, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7054)
!7054 = !{!7055, !7056, !7057, !7058, !7059, !7060}
!7055 = !DILocalVariable(name: "dev", arg: 1, scope: !7053, file: !1001, line: 420, type: !860)
!7056 = !DILocalVariable(name: "mask", arg: 2, scope: !7053, file: !1001, line: 421, type: !887)
!7057 = !DILocalVariable(name: "value", arg: 3, scope: !7053, file: !1001, line: 422, type: !882)
!7058 = !DILocalVariable(name: "cfg", scope: !7053, file: !1001, line: 424, type: !7045)
!7059 = !DILocalVariable(name: "gpio", scope: !7053, file: !1001, line: 425, type: !933)
!7060 = !DILocalVariable(name: "port_value", scope: !7053, file: !1001, line: 426, type: !121)
!7061 = !DILocation(line: 0, scope: !7053)
!7062 = !DILocation(line: 424, column: 45, scope: !7053)
!7063 = !DILocation(line: 425, column: 44, scope: !7053)
!7064 = !DILocation(line: 430, column: 15, scope: !7053)
!7065 = !DILocation(line: 431, column: 46, scope: !7053)
!7066 = !DILocation(line: 431, column: 44, scope: !7053)
!7067 = !DILocation(line: 431, column: 61, scope: !7053)
!7068 = !DILocation(line: 431, column: 53, scope: !7053)
!7069 = !DILocation(line: 431, column: 2, scope: !7053)
!7070 = !DILocation(line: 435, column: 2, scope: !7053)
!7071 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1001, file: !1001, line: 438, type: !890, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7072)
!7072 = !{!7073, !7074, !7075, !7076}
!7073 = !DILocalVariable(name: "dev", arg: 1, scope: !7071, file: !1001, line: 438, type: !860)
!7074 = !DILocalVariable(name: "pins", arg: 2, scope: !7071, file: !1001, line: 439, type: !887)
!7075 = !DILocalVariable(name: "cfg", scope: !7071, file: !1001, line: 441, type: !7045)
!7076 = !DILocalVariable(name: "gpio", scope: !7071, file: !1001, line: 442, type: !933)
!7077 = !DILocation(line: 0, scope: !7071)
!7078 = !DILocation(line: 441, column: 45, scope: !7071)
!7079 = !DILocation(line: 442, column: 44, scope: !7071)
!7080 = !DILocation(line: 448, column: 2, scope: !7071)
!7081 = !DILocation(line: 450, column: 2, scope: !7071)
!7082 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1001, file: !1001, line: 453, type: !890, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7083)
!7083 = !{!7084, !7085, !7086, !7087}
!7084 = !DILocalVariable(name: "dev", arg: 1, scope: !7082, file: !1001, line: 453, type: !860)
!7085 = !DILocalVariable(name: "pins", arg: 2, scope: !7082, file: !1001, line: 454, type: !887)
!7086 = !DILocalVariable(name: "cfg", scope: !7082, file: !1001, line: 456, type: !7045)
!7087 = !DILocalVariable(name: "gpio", scope: !7082, file: !1001, line: 457, type: !933)
!7088 = !DILocation(line: 0, scope: !7082)
!7089 = !DILocation(line: 456, column: 45, scope: !7082)
!7090 = !DILocation(line: 457, column: 44, scope: !7082)
!7091 = !DILocation(line: 467, column: 2, scope: !7082)
!7092 = !DILocation(line: 470, column: 2, scope: !7082)
!7093 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1001, file: !1001, line: 473, type: !890, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7094)
!7094 = !{!7095, !7096, !7097, !7098}
!7095 = !DILocalVariable(name: "dev", arg: 1, scope: !7093, file: !1001, line: 473, type: !860)
!7096 = !DILocalVariable(name: "pins", arg: 2, scope: !7093, file: !1001, line: 474, type: !887)
!7097 = !DILocalVariable(name: "cfg", scope: !7093, file: !1001, line: 476, type: !7045)
!7098 = !DILocalVariable(name: "gpio", scope: !7093, file: !1001, line: 477, type: !933)
!7099 = !DILocation(line: 0, scope: !7093)
!7100 = !DILocation(line: 476, column: 45, scope: !7093)
!7101 = !DILocation(line: 477, column: 44, scope: !7093)
!7102 = !DILocation(line: 484, column: 2, scope: !7093)
!7103 = !DILocation(line: 487, column: 2, scope: !7093)
!7104 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1001, file: !1001, line: 594, type: !896, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7105)
!7105 = !{!7106, !7107, !7108, !7109, !7110, !7111, !7113, !7114, !7115}
!7106 = !DILocalVariable(name: "dev", arg: 1, scope: !7104, file: !1001, line: 594, type: !860)
!7107 = !DILocalVariable(name: "pin", arg: 2, scope: !7104, file: !1001, line: 595, type: !875)
!7108 = !DILocalVariable(name: "mode", arg: 3, scope: !7104, file: !1001, line: 596, type: !834)
!7109 = !DILocalVariable(name: "trig", arg: 4, scope: !7104, file: !1001, line: 597, type: !840)
!7110 = !DILocalVariable(name: "cfg", scope: !7104, file: !1001, line: 599, type: !7045)
!7111 = !DILocalVariable(name: "data", scope: !7104, file: !1001, line: 600, type: !7112)
!7112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!7113 = !DILocalVariable(name: "edge", scope: !7104, file: !1001, line: 601, type: !103)
!7114 = !DILocalVariable(name: "err", scope: !7104, file: !1001, line: 602, type: !103)
!7115 = !DILabel(scope: !7104, name: "exit", file: !1001, line: 643)
!7116 = !DILocation(line: 0, scope: !7104)
!7117 = !DILocation(line: 599, column: 45, scope: !7104)
!7118 = !DILocation(line: 604, column: 6, scope: !7104)
!7119 = !DILocation(line: 605, column: 34, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !1001, line: 605, column: 7)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !1001, line: 604, column: 38)
!7122 = distinct !DILexicalBlock(scope: !7104, file: !1001, line: 604, column: 6)
!7123 = !DILocation(line: 605, column: 7, scope: !7120)
!7124 = !DILocation(line: 605, column: 47, scope: !7120)
!7125 = !DILocation(line: 605, column: 39, scope: !7120)
!7126 = !DILocation(line: 605, column: 7, scope: !7121)
!7127 = !DILocation(line: 606, column: 4, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7120, file: !1001, line: 605, column: 53)
!7129 = !DILocation(line: 607, column: 4, scope: !7128)
!7130 = !DILocation(line: 608, column: 4, scope: !7128)
!7131 = !DILocation(line: 609, column: 3, scope: !7128)
!7132 = !DILocation(line: 600, column: 38, scope: !7104)
!7133 = !DILocation(line: 620, column: 30, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7104, file: !1001, line: 620, column: 6)
!7135 = !DILocation(line: 620, column: 6, scope: !7134)
!7136 = !DILocation(line: 620, column: 57, scope: !7134)
!7137 = !DILocation(line: 620, column: 6, scope: !7104)
!7138 = !DILocation(line: 625, column: 29, scope: !7104)
!7139 = !DILocation(line: 625, column: 2, scope: !7104)
!7140 = !DILocation(line: 627, column: 2, scope: !7104)
!7141 = !DILocation(line: 630, column: 3, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7104, file: !1001, line: 627, column: 16)
!7143 = !DILocation(line: 633, column: 3, scope: !7142)
!7144 = !DILocation(line: 636, column: 3, scope: !7142)
!7145 = !DILocation(line: 639, column: 2, scope: !7104)
!7146 = !DILocation(line: 641, column: 2, scope: !7104)
!7147 = !DILocation(line: 643, column: 1, scope: !7104)
!7148 = !DILocation(line: 644, column: 2, scope: !7104)
!7149 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1001, file: !1001, line: 647, type: !900, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7150)
!7150 = !{!7151, !7152, !7153, !7154}
!7151 = !DILocalVariable(name: "dev", arg: 1, scope: !7149, file: !1001, line: 647, type: !860)
!7152 = !DILocalVariable(name: "callback", arg: 2, scope: !7149, file: !1001, line: 648, type: !902)
!7153 = !DILocalVariable(name: "set", arg: 3, scope: !7149, file: !1001, line: 649, type: !157)
!7154 = !DILocalVariable(name: "data", scope: !7149, file: !1001, line: 651, type: !7112)
!7155 = !DILocation(line: 0, scope: !7149)
!7156 = !DILocation(line: 651, column: 38, scope: !7149)
!7157 = !DILocation(line: 653, column: 37, scope: !7149)
!7158 = !DILocation(line: 653, column: 9, scope: !7149)
!7159 = !DILocation(line: 653, column: 2, scope: !7149)
!7160 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7161, file: !7161, line: 38, type: !7162, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7165)
!7161 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7162 = !DISubroutineType(types: !7163)
!7163 = !{!103, !7164, !902, !157}
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!7165 = !{!7166, !7167, !7168}
!7166 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7160, file: !7161, line: 38, type: !7164)
!7167 = !DILocalVariable(name: "callback", arg: 2, scope: !7160, file: !7161, line: 39, type: !902)
!7168 = !DILocalVariable(name: "set", arg: 3, scope: !7160, file: !7161, line: 40, type: !157)
!7169 = !DILocation(line: 0, scope: !7160)
!7170 = !DILocation(line: 45, column: 7, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7160, file: !7161, line: 45, column: 6)
!7172 = !DILocation(line: 45, column: 6, scope: !7160)
!7173 = !DILocation(line: 46, column: 56, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !7161, line: 46, column: 7)
!7175 = distinct !DILexicalBlock(scope: !7171, file: !7161, line: 45, column: 38)
!7176 = !DILocation(line: 46, column: 8, scope: !7174)
!7177 = !DILocation(line: 46, column: 7, scope: !7175)
!7178 = !DILocation(line: 51, column: 13, scope: !7171)
!7179 = !DILocation(line: 56, column: 43, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !7161, line: 55, column: 11)
!7181 = distinct !DILexicalBlock(scope: !7160, file: !7161, line: 55, column: 6)
!7182 = !DILocation(line: 56, column: 3, scope: !7180)
!7183 = !DILocation(line: 57, column: 2, scope: !7180)
!7184 = !DILocation(line: 60, column: 1, scope: !7160)
!7185 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !907, file: !907, line: 261, type: !7186, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7188)
!7186 = !DISubroutineType(types: !7187)
!7187 = !{!157, !7164}
!7188 = !{!7189}
!7189 = !DILocalVariable(name: "list", arg: 1, scope: !7185, file: !907, line: 261, type: !7164)
!7190 = !DILocation(line: 0, scope: !7185)
!7191 = !DILocation(line: 261, column: 1, scope: !7185)
!7192 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !907, file: !907, line: 417, type: !7193, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7195)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!157, !7164, !1074}
!7195 = !{!7196, !7197, !7198, !7199}
!7196 = !DILocalVariable(name: "list", arg: 1, scope: !7192, file: !907, line: 417, type: !7164)
!7197 = !DILocalVariable(name: "node", arg: 2, scope: !7192, file: !907, line: 417, type: !1074)
!7198 = !DILocalVariable(name: "prev", scope: !7192, file: !907, line: 417, type: !1074)
!7199 = !DILocalVariable(name: "test", scope: !7192, file: !907, line: 417, type: !1074)
!7200 = !DILocation(line: 0, scope: !7192)
!7201 = !DILocation(line: 417, column: 1, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7192, file: !907, line: 417, column: 1)
!7203 = !DILocation(line: 417, column: 1, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7202, file: !907, line: 417, column: 1)
!7205 = !DILocation(line: 417, column: 1, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !907, line: 417, column: 1)
!7207 = distinct !DILexicalBlock(scope: !7204, file: !907, line: 417, column: 1)
!7208 = !DILocation(line: 417, column: 1, scope: !7207)
!7209 = distinct !{!7209, !7201, !7201}
!7210 = !DILocation(line: 417, column: 1, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7206, file: !907, line: 417, column: 1)
!7212 = !DILocation(line: 417, column: 1, scope: !7192)
!7213 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !907, file: !907, line: 298, type: !7214, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7216)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{null, !7164, !1074}
!7216 = !{!7217, !7218}
!7217 = !DILocalVariable(name: "list", arg: 1, scope: !7213, file: !907, line: 298, type: !7164)
!7218 = !DILocalVariable(name: "node", arg: 2, scope: !7213, file: !907, line: 298, type: !1074)
!7219 = !DILocation(line: 0, scope: !7213)
!7220 = !DILocation(line: 298, column: 1, scope: !7213)
!7221 = !DILocation(line: 298, column: 1, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7213, file: !907, line: 298, column: 1)
!7223 = !DILocation(line: 298, column: 1, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7222, file: !907, line: 298, column: 1)
!7225 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !907, file: !907, line: 231, type: !7226, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7228)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{!1074, !7164}
!7228 = !{!7229}
!7229 = !DILocalVariable(name: "list", arg: 1, scope: !7225, file: !907, line: 231, type: !7164)
!7230 = !DILocation(line: 0, scope: !7225)
!7231 = !DILocation(line: 233, column: 15, scope: !7225)
!7232 = !DILocation(line: 233, column: 2, scope: !7225)
!7233 = distinct !DISubprogram(name: "z_snode_next_set", scope: !907, file: !907, line: 209, type: !7234, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7236)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{null, !1074, !1074}
!7236 = !{!7237, !7238}
!7237 = !DILocalVariable(name: "parent", arg: 1, scope: !7233, file: !907, line: 209, type: !1074)
!7238 = !DILocalVariable(name: "child", arg: 2, scope: !7233, file: !907, line: 209, type: !1074)
!7239 = !DILocation(line: 0, scope: !7233)
!7240 = !DILocation(line: 211, column: 10, scope: !7233)
!7241 = !DILocation(line: 211, column: 15, scope: !7233)
!7242 = !DILocation(line: 212, column: 1, scope: !7233)
!7243 = distinct !DISubprogram(name: "z_slist_head_set", scope: !907, file: !907, line: 214, type: !7214, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7244)
!7244 = !{!7245, !7246}
!7245 = !DILocalVariable(name: "list", arg: 1, scope: !7243, file: !907, line: 214, type: !7164)
!7246 = !DILocalVariable(name: "node", arg: 2, scope: !7243, file: !907, line: 214, type: !1074)
!7247 = !DILocation(line: 0, scope: !7243)
!7248 = !DILocation(line: 216, column: 8, scope: !7243)
!7249 = !DILocation(line: 216, column: 13, scope: !7243)
!7250 = !DILocation(line: 217, column: 1, scope: !7243)
!7251 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !907, file: !907, line: 243, type: !7226, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7252)
!7252 = !{!7253}
!7253 = !DILocalVariable(name: "list", arg: 1, scope: !7251, file: !907, line: 243, type: !7164)
!7254 = !DILocation(line: 0, scope: !7251)
!7255 = !DILocation(line: 245, column: 15, scope: !7251)
!7256 = !DILocation(line: 245, column: 2, scope: !7251)
!7257 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !907, file: !907, line: 219, type: !7214, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7258)
!7258 = !{!7259, !7260}
!7259 = !DILocalVariable(name: "list", arg: 1, scope: !7257, file: !907, line: 219, type: !7164)
!7260 = !DILocalVariable(name: "node", arg: 2, scope: !7257, file: !907, line: 219, type: !1074)
!7261 = !DILocation(line: 0, scope: !7257)
!7262 = !DILocation(line: 221, column: 8, scope: !7257)
!7263 = !DILocation(line: 221, column: 13, scope: !7257)
!7264 = !DILocation(line: 222, column: 1, scope: !7257)
!7265 = distinct !DISubprogram(name: "sys_slist_remove", scope: !907, file: !907, line: 401, type: !7266, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7268)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{null, !7164, !1074, !1074}
!7268 = !{!7269, !7270, !7271}
!7269 = !DILocalVariable(name: "list", arg: 1, scope: !7265, file: !907, line: 401, type: !7164)
!7270 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7265, file: !907, line: 401, type: !1074)
!7271 = !DILocalVariable(name: "node", arg: 3, scope: !7265, file: !907, line: 401, type: !1074)
!7272 = !DILocation(line: 0, scope: !7265)
!7273 = !DILocation(line: 401, column: 1, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7265, file: !907, line: 401, column: 1)
!7275 = !DILocation(line: 0, scope: !7274)
!7276 = !DILocation(line: 401, column: 1, scope: !7265)
!7277 = !DILocation(line: 401, column: 1, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7274, file: !907, line: 401, column: 1)
!7279 = !DILocation(line: 401, column: 1, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7278, file: !907, line: 401, column: 1)
!7281 = !DILocation(line: 401, column: 1, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7280, file: !907, line: 401, column: 1)
!7283 = !DILocation(line: 401, column: 1, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7274, file: !907, line: 401, column: 1)
!7285 = !DILocation(line: 401, column: 1, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7284, file: !907, line: 401, column: 1)
!7287 = !DILocation(line: 401, column: 1, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7286, file: !907, line: 401, column: 1)
!7289 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !907, file: !907, line: 285, type: !7290, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7292)
!7290 = !DISubroutineType(types: !7291)
!7291 = !{!1074, !1074}
!7292 = !{!7293}
!7293 = !DILocalVariable(name: "node", arg: 1, scope: !7289, file: !907, line: 285, type: !1074)
!7294 = !DILocation(line: 0, scope: !7289)
!7295 = !DILocation(line: 285, column: 1, scope: !7289)
!7296 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !907, file: !907, line: 274, type: !7290, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7297)
!7297 = !{!7298}
!7298 = !DILocalVariable(name: "node", arg: 1, scope: !7296, file: !907, line: 274, type: !1074)
!7299 = !DILocation(line: 0, scope: !7296)
!7300 = !DILocation(line: 274, column: 1, scope: !7296)
!7301 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !907, file: !907, line: 204, type: !7290, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7302)
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "node", arg: 1, scope: !7301, file: !907, line: 204, type: !1074)
!7304 = !DILocation(line: 0, scope: !7301)
!7305 = !DILocation(line: 206, column: 15, scope: !7301)
!7306 = !DILocation(line: 206, column: 2, scope: !7301)
!7307 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1001, file: !1001, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7308)
!7308 = !{!7309, !7310, !7311}
!7309 = !DILocalVariable(name: "pin", arg: 1, scope: !7307, file: !1001, line: 342, type: !103)
!7310 = !DILocalVariable(name: "line", scope: !7307, file: !1001, line: 344, type: !121)
!7311 = !DILocalVariable(name: "port", scope: !7307, file: !1001, line: 345, type: !103)
!7312 = !DILocation(line: 0, scope: !7307)
!7313 = !DILocation(line: 344, column: 18, scope: !7307)
!7314 = !{i32 983040, i32 0}
!7315 = !DILocation(line: 356, column: 9, scope: !7307)
!7316 = !DILocation(line: 370, column: 2, scope: !7307)
!7317 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1001, file: !1001, line: 37, type: !549, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7318)
!7318 = !{!7319, !7320, !7321}
!7319 = !DILocalVariable(name: "line", arg: 1, scope: !7317, file: !1001, line: 37, type: !103)
!7320 = !DILocalVariable(name: "arg", arg: 2, scope: !7317, file: !1001, line: 37, type: !102)
!7321 = !DILocalVariable(name: "data", scope: !7317, file: !1001, line: 39, type: !7112)
!7322 = !DILocation(line: 0, scope: !7317)
!7323 = !DILocation(line: 41, column: 29, scope: !7317)
!7324 = !DILocation(line: 41, column: 39, scope: !7317)
!7325 = !DILocation(line: 41, column: 44, scope: !7317)
!7326 = !DILocation(line: 41, column: 2, scope: !7317)
!7327 = !DILocation(line: 42, column: 1, scope: !7317)
!7328 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1001, file: !1001, line: 376, type: !7329, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7331)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!103, !103, !103}
!7331 = !{!7332, !7333, !7334, !7336, !7337}
!7332 = !DILocalVariable(name: "port", arg: 1, scope: !7328, file: !1001, line: 376, type: !103)
!7333 = !DILocalVariable(name: "pin", arg: 2, scope: !7328, file: !1001, line: 376, type: !103)
!7334 = !DILocalVariable(name: "clk", scope: !7328, file: !1001, line: 386, type: !7335)
!7335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!7336 = !DILocalVariable(name: "pclken", scope: !7328, file: !1001, line: 387, type: !1117)
!7337 = !DILocalVariable(name: "ret", scope: !7328, file: !1001, line: 396, type: !103)
!7338 = !DILocation(line: 0, scope: !7328)
!7339 = !DILocation(line: 387, column: 2, scope: !7328)
!7340 = !DILocation(line: 387, column: 22, scope: !7328)
!7341 = !DILocation(line: 399, column: 8, scope: !7328)
!7342 = !DILocation(line: 400, column: 10, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7328, file: !1001, line: 400, column: 6)
!7344 = !DILocation(line: 400, column: 6, scope: !7328)
!7345 = !DILocation(line: 405, column: 2, scope: !7328)
!7346 = !DILocation(line: 407, column: 2, scope: !7328)
!7347 = !DILocation(line: 408, column: 1, scope: !7328)
!7348 = distinct !DISubprogram(name: "clock_control_on", scope: !636, file: !636, line: 123, type: !966, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7349)
!7349 = !{!7350, !7351, !7352}
!7350 = !DILocalVariable(name: "dev", arg: 1, scope: !7348, file: !636, line: 123, type: !860)
!7351 = !DILocalVariable(name: "sys", arg: 2, scope: !7348, file: !636, line: 124, type: !731)
!7352 = !DILocalVariable(name: "api", scope: !7348, file: !636, line: 126, type: !959)
!7353 = !DILocation(line: 0, scope: !7348)
!7354 = !DILocation(line: 127, column: 49, scope: !7348)
!7355 = !DILocation(line: 129, column: 14, scope: !7348)
!7356 = !DILocation(line: 129, column: 9, scope: !7348)
!7357 = !DILocation(line: 129, column: 2, scope: !7348)
!7358 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1001, file: !1001, line: 311, type: !6491, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7359)
!7359 = !{!7360, !7361, !7362}
!7360 = !DILocalVariable(name: "port", arg: 1, scope: !7358, file: !1001, line: 311, type: !103)
!7361 = !DILocalVariable(name: "pin", arg: 2, scope: !7358, file: !1001, line: 311, type: !103)
!7362 = !DILocalVariable(name: "line", scope: !7358, file: !1001, line: 313, type: !121)
!7363 = !DILocation(line: 0, scope: !7358)
!7364 = !DILocation(line: 313, column: 18, scope: !7358)
!7365 = !DILocation(line: 337, column: 2, scope: !7358)
!7366 = !DILocation(line: 340, column: 1, scope: !7358)
!7367 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1001, file: !1001, line: 295, type: !7368, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7370)
!7368 = !DISubroutineType(types: !7369)
!7369 = !{!121, !103}
!7370 = !{!7371}
!7371 = !DILocalVariable(name: "pin", arg: 1, scope: !7367, file: !1001, line: 295, type: !103)
!7372 = !DILocation(line: 0, scope: !7367)
!7373 = !DILocation(line: 307, column: 46, scope: !7367)
!7374 = !DILocation(line: 307, column: 27, scope: !7367)
!7375 = !DILocation(line: 307, column: 32, scope: !7367)
!7376 = !DILocation(line: 307, column: 14, scope: !7367)
!7377 = !DILocation(line: 307, column: 39, scope: !7367)
!7378 = !DILocation(line: 307, column: 2, scope: !7367)
!7379 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4544, file: !4544, line: 671, type: !7380, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7382)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{null, !121, !121}
!7382 = !{!7383, !7384}
!7383 = !DILocalVariable(name: "Port", arg: 1, scope: !7379, file: !4544, line: 671, type: !121)
!7384 = !DILocalVariable(name: "Line", arg: 2, scope: !7379, file: !4544, line: 671, type: !121)
!7385 = !DILocation(line: 0, scope: !7379)
!7386 = !DILocation(line: 673, column: 3, scope: !7379)
!7387 = !DILocalVariable(name: "value", arg: 1, scope: !7388, file: !4697, line: 373, type: !121)
!7388 = distinct !DISubprogram(name: "__RBIT", scope: !4697, file: !4697, line: 373, type: !5705, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7389)
!7389 = !{!7387, !7390}
!7390 = !DILocalVariable(name: "result", scope: !7388, file: !4697, line: 375, type: !121)
!7391 = !DILocation(line: 0, scope: !7388, inlinedAt: !7392)
!7392 = distinct !DILocation(line: 673, column: 3, scope: !7379)
!7393 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7392)
!7394 = !{i64 2831555}
!7395 = !DILocalVariable(name: "value", arg: 1, scope: !7396, file: !4697, line: 403, type: !121)
!7396 = distinct !DISubprogram(name: "__CLZ", scope: !4697, file: !4697, line: 403, type: !7397, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7399)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{!154, !121}
!7399 = !{!7395}
!7400 = !DILocation(line: 0, scope: !7396, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 673, column: 3, scope: !7379)
!7402 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7401)
!7403 = !DILocation(line: 674, column: 1, scope: !7379)
!7404 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7161, file: !7161, line: 69, type: !7405, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7407)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{null, !7164, !860, !121}
!7407 = !{!7408, !7409, !7410, !7411, !7412}
!7408 = !DILocalVariable(name: "list", arg: 1, scope: !7404, file: !7161, line: 69, type: !7164)
!7409 = !DILocalVariable(name: "port", arg: 2, scope: !7404, file: !7161, line: 70, type: !860)
!7410 = !DILocalVariable(name: "pins", arg: 3, scope: !7404, file: !7161, line: 71, type: !121)
!7411 = !DILocalVariable(name: "cb", scope: !7404, file: !7161, line: 73, type: !902)
!7412 = !DILocalVariable(name: "tmp", scope: !7404, file: !7161, line: 73, type: !902)
!7413 = !DILocation(line: 0, scope: !7404)
!7414 = !DILocation(line: 75, column: 2, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7404, file: !7161, line: 75, column: 2)
!7416 = !DILocation(line: 0, scope: !7415)
!7417 = !DILocation(line: 76, column: 11, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !7161, line: 76, column: 7)
!7419 = distinct !DILexicalBlock(scope: !7420, file: !7161, line: 75, column: 57)
!7420 = distinct !DILexicalBlock(scope: !7415, file: !7161, line: 75, column: 2)
!7421 = !DILocation(line: 76, column: 20, scope: !7418)
!7422 = !DILocation(line: 76, column: 7, scope: !7419)
!7423 = !DILocation(line: 78, column: 8, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7418, file: !7161, line: 76, column: 28)
!7425 = !DILocation(line: 78, column: 4, scope: !7424)
!7426 = !DILocation(line: 79, column: 3, scope: !7424)
!7427 = !DILocation(line: 75, column: 2, scope: !7420)
!7428 = !DILocation(line: 81, column: 1, scope: !7404)
!7429 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4544, file: !4544, line: 710, type: !5705, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7430)
!7430 = !{!7431}
!7431 = !DILocalVariable(name: "Line", arg: 1, scope: !7429, file: !4544, line: 710, type: !121)
!7432 = !DILocation(line: 0, scope: !7429)
!7433 = !DILocation(line: 712, column: 21, scope: !7429)
!7434 = !DILocation(line: 0, scope: !7388, inlinedAt: !7435)
!7435 = distinct !DILocation(line: 712, column: 76, scope: !7429)
!7436 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7435)
!7437 = !DILocation(line: 0, scope: !7396, inlinedAt: !7438)
!7438 = distinct !DILocation(line: 712, column: 76, scope: !7429)
!7439 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7438)
!7440 = !DILocation(line: 712, column: 73, scope: !7429)
!7441 = !DILocation(line: 712, column: 3, scope: !7429)
!7442 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7443, file: !7443, line: 910, type: !7444, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7446)
!7443 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7444 = !DISubroutineType(types: !7445)
!7445 = !{null, !933, !121}
!7446 = !{!7447, !7448}
!7447 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7442, file: !7443, line: 910, type: !933)
!7448 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7442, file: !7443, line: 910, type: !121)
!7449 = !DILocation(line: 0, scope: !7442)
!7450 = !DILocation(line: 912, column: 3, scope: !7442)
!7451 = !DILocation(line: 913, column: 1, scope: !7442)
!7452 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7443, file: !7443, line: 823, type: !7453, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7455)
!7453 = !DISubroutineType(types: !7454)
!7454 = !{!121, !933}
!7455 = !{!7456}
!7456 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7452, file: !7443, line: 823, type: !933)
!7457 = !DILocation(line: 0, scope: !7452)
!7458 = !DILocation(line: 825, column: 21, scope: !7452)
!7459 = !DILocation(line: 825, column: 3, scope: !7452)
!7460 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7443, file: !7443, line: 812, type: !7444, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7461)
!7461 = !{!7462, !7463}
!7462 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7460, file: !7443, line: 812, type: !933)
!7463 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7460, file: !7443, line: 812, type: !121)
!7464 = !DILocation(line: 0, scope: !7460)
!7465 = !DILocation(line: 814, column: 3, scope: !7460)
!7466 = !DILocation(line: 815, column: 1, scope: !7460)
!7467 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7443, file: !7443, line: 771, type: !7453, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7468)
!7468 = !{!7469}
!7469 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7467, file: !7443, line: 771, type: !933)
!7470 = !DILocation(line: 0, scope: !7467)
!7471 = !DILocation(line: 773, column: 21, scope: !7467)
!7472 = !DILocation(line: 773, column: 3, scope: !7467)
!7473 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1001, file: !1001, line: 47, type: !7474, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7476)
!7474 = !DISubroutineType(types: !7475)
!7475 = !{!103, !876, !2186}
!7476 = !{!7477, !7478}
!7477 = !DILocalVariable(name: "flags", arg: 1, scope: !7473, file: !1001, line: 47, type: !876)
!7478 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7473, file: !1001, line: 47, type: !2186)
!7479 = !DILocation(line: 0, scope: !7473)
!7480 = !DILocation(line: 50, column: 13, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7473, file: !1001, line: 50, column: 6)
!7482 = !DILocation(line: 50, column: 28, scope: !7481)
!7483 = !DILocation(line: 50, column: 6, scope: !7473)
!7484 = !DILocation(line: 53, column: 11, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7481, file: !1001, line: 50, column: 34)
!7486 = !DILocation(line: 55, column: 14, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7485, file: !1001, line: 55, column: 7)
!7488 = !DILocation(line: 55, column: 35, scope: !7487)
!7489 = !DILocation(line: 55, column: 7, scope: !7485)
!7490 = !DILocation(line: 56, column: 14, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !1001, line: 56, column: 8)
!7492 = distinct !DILexicalBlock(scope: !7487, file: !1001, line: 55, column: 41)
!7493 = !DILocation(line: 56, column: 8, scope: !7492)
!7494 = !DILocation(line: 0, scope: !7487)
!7495 = !DILocation(line: 66, column: 14, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7485, file: !1001, line: 66, column: 7)
!7497 = !DILocation(line: 66, column: 30, scope: !7496)
!7498 = !DILocation(line: 66, column: 7, scope: !7485)
!7499 = !DILocation(line: 67, column: 12, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !1001, line: 66, column: 36)
!7501 = !DILocation(line: 68, column: 3, scope: !7500)
!7502 = !DILocation(line: 68, column: 21, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7496, file: !1001, line: 68, column: 14)
!7504 = !DILocation(line: 68, column: 39, scope: !7503)
!7505 = !DILocation(line: 68, column: 14, scope: !7496)
!7506 = !DILocation(line: 69, column: 12, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7503, file: !1001, line: 68, column: 45)
!7508 = !DILocation(line: 70, column: 3, scope: !7507)
!7509 = !DILocation(line: 72, column: 21, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7481, file: !1001, line: 72, column: 14)
!7511 = !DILocation(line: 72, column: 35, scope: !7510)
!7512 = !DILocation(line: 72, column: 14, scope: !7481)
!7513 = !DILocation(line: 77, column: 14, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !1001, line: 77, column: 7)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !1001, line: 72, column: 41)
!7516 = !DILocation(line: 77, column: 30, scope: !7514)
!7517 = !DILocation(line: 77, column: 7, scope: !7515)
!7518 = !DILocation(line: 0, scope: !7481)
!7519 = !DILocation(line: 90, column: 1, scope: !7473)
!7520 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1001, file: !1001, line: 157, type: !7521, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7523)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !860, !103, !103, !103}
!7523 = !{!7524, !7525, !7526, !7527, !7528, !7529, !7530, !7531, !7532, !7533, !7534}
!7524 = !DILocalVariable(name: "dev", arg: 1, scope: !7520, file: !1001, line: 157, type: !860)
!7525 = !DILocalVariable(name: "pin", arg: 2, scope: !7520, file: !1001, line: 157, type: !103)
!7526 = !DILocalVariable(name: "conf", arg: 3, scope: !7520, file: !1001, line: 158, type: !103)
!7527 = !DILocalVariable(name: "func", arg: 4, scope: !7520, file: !1001, line: 158, type: !103)
!7528 = !DILocalVariable(name: "cfg", scope: !7520, file: !1001, line: 160, type: !7045)
!7529 = !DILocalVariable(name: "gpio", scope: !7520, file: !1001, line: 161, type: !933)
!7530 = !DILocalVariable(name: "pin_ll", scope: !7520, file: !1001, line: 163, type: !103)
!7531 = !DILocalVariable(name: "mode", scope: !7520, file: !1001, line: 227, type: !32)
!7532 = !DILocalVariable(name: "otype", scope: !7520, file: !1001, line: 227, type: !32)
!7533 = !DILocalVariable(name: "ospeed", scope: !7520, file: !1001, line: 227, type: !32)
!7534 = !DILocalVariable(name: "pupd", scope: !7520, file: !1001, line: 227, type: !32)
!7535 = !DILocation(line: 0, scope: !7520)
!7536 = !DILocation(line: 160, column: 45, scope: !7520)
!7537 = !DILocation(line: 161, column: 44, scope: !7520)
!7538 = !DILocation(line: 163, column: 15, scope: !7520)
!7539 = !DILocation(line: 229, column: 14, scope: !7520)
!7540 = !DILocation(line: 246, column: 47, scope: !7520)
!7541 = !DILocation(line: 246, column: 2, scope: !7520)
!7542 = !DILocation(line: 248, column: 43, scope: !7520)
!7543 = !DILocation(line: 248, column: 2, scope: !7520)
!7544 = !DILocation(line: 250, column: 40, scope: !7520)
!7545 = !DILocation(line: 250, column: 2, scope: !7520)
!7546 = !DILocation(line: 252, column: 11, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7520, file: !1001, line: 252, column: 6)
!7548 = !DILocation(line: 252, column: 6, scope: !7520)
!7549 = !DILocation(line: 253, column: 11, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !1001, line: 253, column: 7)
!7551 = distinct !DILexicalBlock(scope: !7547, file: !1001, line: 252, column: 36)
!7552 = !DILocation(line: 253, column: 7, scope: !7551)
!7553 = !DILocation(line: 254, column: 4, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7550, file: !1001, line: 253, column: 16)
!7555 = !DILocation(line: 255, column: 3, scope: !7554)
!7556 = !DILocation(line: 256, column: 4, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7550, file: !1001, line: 255, column: 10)
!7558 = !DILocation(line: 260, column: 40, scope: !7520)
!7559 = !DILocation(line: 260, column: 2, scope: !7520)
!7560 = !DILocation(line: 265, column: 1, scope: !7520)
!7561 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1001, file: !1001, line: 137, type: !7368, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7562)
!7562 = !{!7563, !7564}
!7563 = !DILocalVariable(name: "pin", arg: 1, scope: !7561, file: !1001, line: 137, type: !103)
!7564 = !DILocalVariable(name: "pinval", scope: !7561, file: !1001, line: 139, type: !121)
!7565 = !DILocation(line: 0, scope: !7561)
!7566 = !DILocation(line: 149, column: 13, scope: !7561)
!7567 = !DILocation(line: 151, column: 2, scope: !7561)
!7568 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7443, file: !7443, line: 342, type: !7569, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7571)
!7569 = !DISubroutineType(types: !7570)
!7570 = !{null, !933, !121, !121}
!7571 = !{!7572, !7573, !7574}
!7572 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7568, file: !7443, line: 342, type: !933)
!7573 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7568, file: !7443, line: 342, type: !121)
!7574 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7568, file: !7443, line: 342, type: !121)
!7575 = !DILocation(line: 0, scope: !7568)
!7576 = !DILocation(line: 344, column: 3, scope: !7568)
!7577 = !DILocation(line: 345, column: 1, scope: !7568)
!7578 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7443, file: !7443, line: 413, type: !7569, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7579)
!7579 = !{!7580, !7581, !7582}
!7580 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7578, file: !7443, line: 413, type: !933)
!7581 = !DILocalVariable(name: "Pin", arg: 2, scope: !7578, file: !7443, line: 413, type: !121)
!7582 = !DILocalVariable(name: "Speed", arg: 3, scope: !7578, file: !7443, line: 413, type: !121)
!7583 = !DILocation(line: 0, scope: !7578)
!7584 = !DILocation(line: 415, column: 3, scope: !7578)
!7585 = !DILocation(line: 0, scope: !7388, inlinedAt: !7586)
!7586 = distinct !DILocation(line: 415, column: 3, scope: !7578)
!7587 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7586)
!7588 = !DILocation(line: 0, scope: !7396, inlinedAt: !7589)
!7589 = distinct !DILocation(line: 415, column: 3, scope: !7578)
!7590 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7589)
!7591 = !DILocation(line: 0, scope: !7388, inlinedAt: !7592)
!7592 = distinct !DILocation(line: 415, column: 3, scope: !7578)
!7593 = !DILocation(line: 0, scope: !7396, inlinedAt: !7594)
!7594 = distinct !DILocation(line: 415, column: 3, scope: !7578)
!7595 = !DILocation(line: 417, column: 1, scope: !7578)
!7596 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7443, file: !7443, line: 484, type: !7569, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7597)
!7597 = !{!7598, !7599, !7600}
!7598 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7596, file: !7443, line: 484, type: !933)
!7599 = !DILocalVariable(name: "Pin", arg: 2, scope: !7596, file: !7443, line: 484, type: !121)
!7600 = !DILocalVariable(name: "Pull", arg: 3, scope: !7596, file: !7443, line: 484, type: !121)
!7601 = !DILocation(line: 0, scope: !7596)
!7602 = !DILocation(line: 486, column: 3, scope: !7596)
!7603 = !DILocation(line: 0, scope: !7388, inlinedAt: !7604)
!7604 = distinct !DILocation(line: 486, column: 3, scope: !7596)
!7605 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7604)
!7606 = !DILocation(line: 0, scope: !7396, inlinedAt: !7607)
!7607 = distinct !DILocation(line: 486, column: 3, scope: !7596)
!7608 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7607)
!7609 = !DILocation(line: 0, scope: !7388, inlinedAt: !7610)
!7610 = distinct !DILocation(line: 486, column: 3, scope: !7596)
!7611 = !DILocation(line: 0, scope: !7396, inlinedAt: !7612)
!7612 = distinct !DILocation(line: 486, column: 3, scope: !7596)
!7613 = !DILocation(line: 487, column: 1, scope: !7596)
!7614 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7443, file: !7443, line: 556, type: !7569, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7615)
!7615 = !{!7616, !7617, !7618}
!7616 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7614, file: !7443, line: 556, type: !933)
!7617 = !DILocalVariable(name: "Pin", arg: 2, scope: !7614, file: !7443, line: 556, type: !121)
!7618 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7614, file: !7443, line: 556, type: !121)
!7619 = !DILocation(line: 0, scope: !7614)
!7620 = !DILocation(line: 558, column: 3, scope: !7614)
!7621 = !DILocation(line: 0, scope: !7388, inlinedAt: !7622)
!7622 = distinct !DILocation(line: 558, column: 3, scope: !7614)
!7623 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7622)
!7624 = !DILocation(line: 0, scope: !7396, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 558, column: 3, scope: !7614)
!7626 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7625)
!7627 = !DILocation(line: 0, scope: !7388, inlinedAt: !7628)
!7628 = distinct !DILocation(line: 558, column: 3, scope: !7614)
!7629 = !DILocation(line: 0, scope: !7396, inlinedAt: !7630)
!7630 = distinct !DILocation(line: 558, column: 3, scope: !7614)
!7631 = !DILocation(line: 560, column: 1, scope: !7614)
!7632 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7443, file: !7443, line: 633, type: !7569, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7633)
!7633 = !{!7634, !7635, !7636}
!7634 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7632, file: !7443, line: 633, type: !933)
!7635 = !DILocalVariable(name: "Pin", arg: 2, scope: !7632, file: !7443, line: 633, type: !121)
!7636 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7632, file: !7443, line: 633, type: !121)
!7637 = !DILocation(line: 0, scope: !7632)
!7638 = !DILocation(line: 635, column: 3, scope: !7632)
!7639 = !DILocation(line: 0, scope: !7388, inlinedAt: !7640)
!7640 = distinct !DILocation(line: 635, column: 3, scope: !7632)
!7641 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7640)
!7642 = !DILocation(line: 0, scope: !7396, inlinedAt: !7643)
!7643 = distinct !DILocation(line: 635, column: 3, scope: !7632)
!7644 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7643)
!7645 = !DILocation(line: 0, scope: !7388, inlinedAt: !7646)
!7646 = distinct !DILocation(line: 635, column: 3, scope: !7632)
!7647 = !DILocation(line: 0, scope: !7396, inlinedAt: !7648)
!7648 = distinct !DILocation(line: 635, column: 3, scope: !7632)
!7649 = !DILocation(line: 637, column: 1, scope: !7632)
!7650 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7443, file: !7443, line: 273, type: !7569, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7651)
!7651 = !{!7652, !7653, !7654}
!7652 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7650, file: !7443, line: 273, type: !933)
!7653 = !DILocalVariable(name: "Pin", arg: 2, scope: !7650, file: !7443, line: 273, type: !121)
!7654 = !DILocalVariable(name: "Mode", arg: 3, scope: !7650, file: !7443, line: 273, type: !121)
!7655 = !DILocation(line: 0, scope: !7650)
!7656 = !DILocation(line: 275, column: 3, scope: !7650)
!7657 = !DILocation(line: 0, scope: !7388, inlinedAt: !7658)
!7658 = distinct !DILocation(line: 275, column: 3, scope: !7650)
!7659 = !DILocation(line: 380, column: 4, scope: !7388, inlinedAt: !7658)
!7660 = !DILocation(line: 0, scope: !7396, inlinedAt: !7661)
!7661 = distinct !DILocation(line: 275, column: 3, scope: !7650)
!7662 = !DILocation(line: 414, column: 7, scope: !7396, inlinedAt: !7661)
!7663 = !DILocation(line: 0, scope: !7388, inlinedAt: !7664)
!7664 = distinct !DILocation(line: 275, column: 3, scope: !7650)
!7665 = !DILocation(line: 0, scope: !7396, inlinedAt: !7666)
!7666 = distinct !DILocation(line: 275, column: 3, scope: !7650)
!7667 = !DILocation(line: 276, column: 1, scope: !7650)
!7668 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1001, file: !1001, line: 698, type: !1014, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7669)
!7669 = !{!7670, !7671, !7672}
!7670 = !DILocalVariable(name: "dev", arg: 1, scope: !7668, file: !1001, line: 698, type: !860)
!7671 = !DILocalVariable(name: "data", scope: !7668, file: !1001, line: 700, type: !7112)
!7672 = !DILocalVariable(name: "ret", scope: !7668, file: !1001, line: 701, type: !103)
!7673 = !DILocation(line: 0, scope: !7668)
!7674 = !DILocation(line: 700, column: 38, scope: !7668)
!7675 = !DILocation(line: 703, column: 8, scope: !7668)
!7676 = !DILocation(line: 703, column: 12, scope: !7668)
!7677 = !DILocation(line: 705, column: 7, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7668, file: !1001, line: 705, column: 6)
!7679 = !DILocation(line: 705, column: 6, scope: !7668)
!7680 = !DILocation(line: 722, column: 8, scope: !7668)
!7681 = !DILocation(line: 723, column: 10, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7668, file: !1001, line: 723, column: 6)
!7683 = !DILocation(line: 723, column: 6, scope: !7668)
!7684 = !DILocation(line: 731, column: 1, scope: !7668)
!7685 = distinct !DISubprogram(name: "device_is_ready", scope: !6892, file: !6892, line: 47, type: !7686, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!157, !860}
!7688 = !{!7689}
!7689 = !DILocalVariable(name: "dev", arg: 1, scope: !7685, file: !6892, line: 47, type: !860)
!7690 = !DILocation(line: 0, scope: !7685)
!7691 = !DILocation(line: 55, column: 2, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7685, file: !6892, line: 55, column: 2)
!7693 = !{i64 2154257150}
!7694 = !DILocation(line: 56, column: 9, scope: !7685)
!7695 = !DILocation(line: 56, column: 2, scope: !7685)
!7696 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1001, file: !1001, line: 270, type: !7697, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7699)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!103, !860, !157}
!7699 = !{!7700, !7701, !7702, !7703, !7704}
!7700 = !DILocalVariable(name: "dev", arg: 1, scope: !7696, file: !1001, line: 270, type: !860)
!7701 = !DILocalVariable(name: "on", arg: 2, scope: !7696, file: !1001, line: 270, type: !157)
!7702 = !DILocalVariable(name: "cfg", scope: !7696, file: !1001, line: 272, type: !7045)
!7703 = !DILocalVariable(name: "ret", scope: !7696, file: !1001, line: 273, type: !103)
!7704 = !DILocalVariable(name: "clk", scope: !7696, file: !1001, line: 278, type: !7335)
!7705 = !DILocation(line: 0, scope: !7696)
!7706 = !DILocation(line: 272, column: 45, scope: !7696)
!7707 = !DILocation(line: 282, column: 38, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !1001, line: 280, column: 10)
!7709 = distinct !DILexicalBlock(scope: !7696, file: !1001, line: 280, column: 6)
!7710 = !DILocation(line: 282, column: 6, scope: !7708)
!7711 = !DILocation(line: 281, column: 9, scope: !7708)
!7712 = !DILocation(line: 293, column: 1, scope: !7696)
!7713 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7686, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7714)
!7714 = !{!7715}
!7715 = !DILocalVariable(name: "dev", arg: 1, scope: !7713, file: !141, line: 730, type: !860)
!7716 = !DILocation(line: 0, scope: !7713)
!7717 = !DILocation(line: 732, column: 9, scope: !7713)
!7718 = !DILocation(line: 732, column: 2, scope: !7713)
!7719 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1001, file: !1001, line: 496, type: !7720, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7722)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!103, !860, !103, !103, !103}
!7722 = !{!7723, !7724, !7725, !7726, !7727, !7728}
!7723 = !DILocalVariable(name: "dev", arg: 1, scope: !7719, file: !1001, line: 496, type: !860)
!7724 = !DILocalVariable(name: "pin", arg: 2, scope: !7719, file: !1001, line: 496, type: !103)
!7725 = !DILocalVariable(name: "conf", arg: 3, scope: !7719, file: !1001, line: 496, type: !103)
!7726 = !DILocalVariable(name: "func", arg: 4, scope: !7719, file: !1001, line: 496, type: !103)
!7727 = !DILocalVariable(name: "ret", scope: !7719, file: !1001, line: 498, type: !103)
!7728 = !DILocalVariable(name: "gpio_out", scope: !7729, file: !1001, line: 508, type: !121)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !1001, line: 507, column: 27)
!7730 = distinct !DILexicalBlock(scope: !7719, file: !1001, line: 507, column: 6)
!7731 = !DILocation(line: 0, scope: !7719)
!7732 = !DILocation(line: 505, column: 2, scope: !7719)
!7733 = !DILocation(line: 507, column: 11, scope: !7730)
!7734 = !DILocation(line: 507, column: 6, scope: !7719)
!7735 = !DILocation(line: 508, column: 28, scope: !7729)
!7736 = !DILocation(line: 0, scope: !7729)
!7737 = !DILocation(line: 510, column: 16, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7729, file: !1001, line: 510, column: 7)
!7739 = !DILocation(line: 0, scope: !7738)
!7740 = !DILocation(line: 510, column: 7, scope: !7729)
!7741 = !DILocation(line: 511, column: 4, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7738, file: !1001, line: 510, column: 32)
!7743 = !DILocation(line: 512, column: 3, scope: !7742)
!7744 = !DILocation(line: 513, column: 4, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !1001, line: 512, column: 39)
!7746 = distinct !DILexicalBlock(scope: !7738, file: !1001, line: 512, column: 14)
!7747 = !DILocation(line: 514, column: 3, scope: !7745)
!7748 = !DILocation(line: 518, column: 1, scope: !7719)
!7749 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1276, file: !1276, line: 526, type: !1177, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7750)
!7750 = !{!7751, !7752, !7753}
!7751 = !DILocalVariable(name: "dev", arg: 1, scope: !7749, file: !1276, line: 526, type: !1179)
!7752 = !DILocalVariable(name: "c", arg: 2, scope: !7749, file: !1276, line: 526, type: !792)
!7753 = !DILocalVariable(name: "config", scope: !7749, file: !1276, line: 528, type: !7754)
!7754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!7755 = !DILocation(line: 0, scope: !7749)
!7756 = !DILocation(line: 528, column: 48, scope: !7749)
!7757 = !DILocation(line: 531, column: 40, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7749, file: !1276, line: 531, column: 6)
!7759 = !DILocation(line: 531, column: 6, scope: !7758)
!7760 = !DILocation(line: 531, column: 6, scope: !7749)
!7761 = !DILocation(line: 532, column: 34, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7758, file: !1276, line: 531, column: 48)
!7763 = !DILocation(line: 532, column: 3, scope: !7762)
!7764 = !DILocation(line: 533, column: 2, scope: !7762)
!7765 = !DILocation(line: 539, column: 42, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7749, file: !1276, line: 539, column: 6)
!7767 = !DILocation(line: 539, column: 7, scope: !7766)
!7768 = !DILocation(line: 539, column: 6, scope: !7749)
!7769 = !DILocation(line: 543, column: 52, scope: !7749)
!7770 = !DILocation(line: 543, column: 22, scope: !7749)
!7771 = !DILocation(line: 543, column: 5, scope: !7749)
!7772 = !DILocation(line: 545, column: 2, scope: !7749)
!7773 = !DILocation(line: 546, column: 1, scope: !7749)
!7774 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1276, file: !1276, line: 548, type: !1196, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7775)
!7775 = !{!7776, !7777, !7778, !7779}
!7776 = !DILocalVariable(name: "dev", arg: 1, scope: !7774, file: !1276, line: 548, type: !1179)
!7777 = !DILocalVariable(name: "c", arg: 2, scope: !7774, file: !1276, line: 549, type: !155)
!7778 = !DILocalVariable(name: "config", scope: !7774, file: !1276, line: 551, type: !7754)
!7779 = !DILocalVariable(name: "key", scope: !7774, file: !1276, line: 555, type: !32)
!7780 = !DILocation(line: 0, scope: !7774)
!7781 = !DILocation(line: 551, column: 48, scope: !7774)
!7782 = !DILocation(line: 562, column: 2, scope: !7774)
!7783 = !DILocation(line: 563, column: 41, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !1276, line: 563, column: 7)
!7785 = distinct !DILexicalBlock(scope: !7774, file: !1276, line: 562, column: 12)
!7786 = !DILocation(line: 563, column: 7, scope: !7784)
!7787 = !DILocation(line: 563, column: 7, scope: !7785)
!7788 = !DILocation(line: 55, column: 2, scope: !7789, inlinedAt: !7793)
!7789 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7790)
!7790 = !{!7791, !7792}
!7791 = !DILocalVariable(name: "key", scope: !7789, file: !4523, line: 44, type: !32)
!7792 = !DILocalVariable(name: "tmp", scope: !7789, file: !4523, line: 53, type: !32)
!7793 = distinct !DILocation(line: 564, column: 10, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7784, file: !1276, line: 563, column: 49)
!7795 = !{i64 1997100}
!7796 = !DILocation(line: 0, scope: !7789, inlinedAt: !7793)
!7797 = !DILocation(line: 565, column: 42, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7794, file: !1276, line: 565, column: 8)
!7799 = !DILocation(line: 565, column: 8, scope: !7798)
!7800 = !DILocation(line: 565, column: 8, scope: !7794)
!7801 = !DILocalVariable(name: "key", arg: 1, scope: !7802, file: !4523, line: 84, type: !32)
!7802 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7803)
!7803 = !{!7801}
!7804 = !DILocation(line: 0, scope: !7802, inlinedAt: !7805)
!7805 = distinct !DILocation(line: 568, column: 4, scope: !7794)
!7806 = !DILocation(line: 95, column: 2, scope: !7802, inlinedAt: !7805)
!7807 = !{i64 1997917}
!7808 = !DILocation(line: 569, column: 3, scope: !7794)
!7809 = distinct !{!7809, !7782, !7810}
!7810 = !DILocation(line: 570, column: 2, scope: !7774)
!7811 = !DILocation(line: 592, column: 33, scope: !7774)
!7812 = !DILocation(line: 592, column: 2, scope: !7774)
!7813 = !DILocation(line: 0, scope: !7802, inlinedAt: !7814)
!7814 = distinct !DILocation(line: 593, column: 2, scope: !7774)
!7815 = !DILocation(line: 95, column: 2, scope: !7802, inlinedAt: !7814)
!7816 = !DILocation(line: 594, column: 1, scope: !7774)
!7817 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1276, file: !1276, line: 596, type: !1200, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7818)
!7818 = !{!7819, !7820, !7821}
!7819 = !DILocalVariable(name: "dev", arg: 1, scope: !7817, file: !1276, line: 596, type: !1179)
!7820 = !DILocalVariable(name: "config", scope: !7817, file: !1276, line: 598, type: !7754)
!7821 = !DILocalVariable(name: "err", scope: !7817, file: !1276, line: 599, type: !121)
!7822 = !DILocation(line: 0, scope: !7817)
!7823 = !DILocation(line: 598, column: 48, scope: !7817)
!7824 = !DILocation(line: 606, column: 40, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 606, column: 6)
!7826 = !DILocation(line: 606, column: 6, scope: !7825)
!7827 = !DILocation(line: 606, column: 6, scope: !7817)
!7828 = !DILocation(line: 610, column: 39, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 610, column: 6)
!7830 = !DILocation(line: 610, column: 6, scope: !7829)
!7831 = !DILocation(line: 610, column: 6, scope: !7817)
!7832 = !DILocation(line: 614, column: 39, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 614, column: 6)
!7834 = !DILocation(line: 614, column: 6, scope: !7833)
!7835 = !DILocation(line: 614, column: 6, scope: !7817)
!7836 = !DILocation(line: 619, column: 40, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 619, column: 6)
!7838 = !DILocation(line: 619, column: 6, scope: !7837)
!7839 = !DILocation(line: 619, column: 6, scope: !7817)
!7840 = !DILocation(line: 623, column: 10, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 623, column: 6)
!7842 = !DILocation(line: 623, column: 6, scope: !7817)
!7843 = !DILocation(line: 624, column: 34, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7841, file: !1276, line: 623, column: 24)
!7845 = !DILocation(line: 624, column: 3, scope: !7844)
!7846 = !DILocation(line: 625, column: 2, scope: !7844)
!7847 = !DILocation(line: 632, column: 10, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 632, column: 6)
!7849 = !DILocation(line: 632, column: 6, scope: !7817)
!7850 = !DILocation(line: 633, column: 34, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7848, file: !1276, line: 632, column: 32)
!7852 = !DILocation(line: 633, column: 3, scope: !7851)
!7853 = !DILocation(line: 634, column: 2, scope: !7851)
!7854 = !DILocation(line: 636, column: 10, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 636, column: 6)
!7856 = !DILocation(line: 636, column: 6, scope: !7817)
!7857 = !DILocation(line: 637, column: 33, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7855, file: !1276, line: 636, column: 31)
!7859 = !DILocation(line: 637, column: 3, scope: !7858)
!7860 = !DILocation(line: 638, column: 2, scope: !7858)
!7861 = !DILocation(line: 640, column: 10, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7817, file: !1276, line: 640, column: 6)
!7863 = !DILocation(line: 640, column: 6, scope: !7817)
!7864 = !DILocation(line: 641, column: 33, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7862, file: !1276, line: 640, column: 32)
!7866 = !DILocation(line: 641, column: 3, scope: !7865)
!7867 = !DILocation(line: 642, column: 2, scope: !7865)
!7868 = !DILocation(line: 646, column: 32, scope: !7817)
!7869 = !DILocation(line: 646, column: 2, scope: !7817)
!7870 = !DILocation(line: 648, column: 2, scope: !7817)
!7871 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1276, file: !1276, line: 419, type: !1204, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7872)
!7872 = !{!7873, !7874, !7875, !7876, !7878, !7879, !7880, !7881}
!7873 = !DILocalVariable(name: "dev", arg: 1, scope: !7871, file: !1276, line: 419, type: !1179)
!7874 = !DILocalVariable(name: "cfg", arg: 2, scope: !7871, file: !1276, line: 420, type: !1206)
!7875 = !DILocalVariable(name: "config", scope: !7871, file: !1276, line: 422, type: !7754)
!7876 = !DILocalVariable(name: "data", scope: !7871, file: !1276, line: 423, type: !7877)
!7877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!7878 = !DILocalVariable(name: "parity", scope: !7871, file: !1276, line: 424, type: !4965)
!7879 = !DILocalVariable(name: "stopbits", scope: !7871, file: !1276, line: 425, type: !4965)
!7880 = !DILocalVariable(name: "databits", scope: !7871, file: !1276, line: 426, type: !4965)
!7881 = !DILocalVariable(name: "flowctrl", scope: !7871, file: !1276, line: 428, type: !4965)
!7882 = !DILocation(line: 0, scope: !7871)
!7883 = !DILocation(line: 422, column: 48, scope: !7871)
!7884 = !DILocation(line: 423, column: 38, scope: !7871)
!7885 = !DILocation(line: 424, column: 56, scope: !7871)
!7886 = !DILocation(line: 424, column: 51, scope: !7871)
!7887 = !DILocation(line: 424, column: 26, scope: !7871)
!7888 = !DILocation(line: 425, column: 60, scope: !7871)
!7889 = !DILocation(line: 425, column: 55, scope: !7871)
!7890 = !DILocation(line: 425, column: 28, scope: !7871)
!7891 = !DILocation(line: 426, column: 60, scope: !7871)
!7892 = !DILocation(line: 426, column: 55, scope: !7871)
!7893 = !DILocation(line: 426, column: 28, scope: !7871)
!7894 = !DILocation(line: 428, column: 58, scope: !7871)
!7895 = !DILocation(line: 428, column: 53, scope: !7871)
!7896 = !DILocation(line: 428, column: 28, scope: !7871)
!7897 = !DILocation(line: 431, column: 44, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 431, column: 6)
!7899 = !DILocation(line: 438, column: 22, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 437, column: 6)
!7901 = !DILocation(line: 437, column: 6, scope: !7871)
!7902 = !DILocation(line: 448, column: 6, scope: !7871)
!7903 = !DILocation(line: 465, column: 47, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 465, column: 6)
!7905 = !DILocation(line: 475, column: 21, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 475, column: 6)
!7907 = !DILocation(line: 475, column: 6, scope: !7871)
!7908 = !DILocation(line: 476, column: 8, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !1276, line: 476, column: 7)
!7910 = distinct !DILexicalBlock(scope: !7906, file: !1276, line: 475, column: 49)
!7911 = !DILocation(line: 477, column: 34, scope: !7909)
!7912 = !DILocation(line: 476, column: 7, scope: !7910)
!7913 = !DILocation(line: 482, column: 27, scope: !7871)
!7914 = !DILocation(line: 482, column: 2, scope: !7871)
!7915 = !DILocation(line: 484, column: 16, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 484, column: 6)
!7917 = !DILocation(line: 484, column: 13, scope: !7916)
!7918 = !DILocation(line: 484, column: 6, scope: !7871)
!7919 = !DILocation(line: 485, column: 3, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7916, file: !1276, line: 484, column: 44)
!7921 = !DILocation(line: 486, column: 2, scope: !7920)
!7922 = !DILocation(line: 488, column: 18, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 488, column: 6)
!7924 = !DILocation(line: 488, column: 15, scope: !7923)
!7925 = !DILocation(line: 488, column: 6, scope: !7871)
!7926 = !DILocation(line: 489, column: 3, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !1276, line: 488, column: 48)
!7928 = !DILocation(line: 490, column: 2, scope: !7927)
!7929 = !DILocation(line: 492, column: 18, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 492, column: 6)
!7931 = !DILocation(line: 492, column: 15, scope: !7930)
!7932 = !DILocation(line: 492, column: 6, scope: !7871)
!7933 = !DILocation(line: 493, column: 3, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7930, file: !1276, line: 492, column: 48)
!7935 = !DILocation(line: 494, column: 2, scope: !7934)
!7936 = !DILocation(line: 496, column: 18, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 496, column: 6)
!7938 = !DILocation(line: 496, column: 15, scope: !7937)
!7939 = !DILocation(line: 496, column: 6, scope: !7871)
!7940 = !DILocation(line: 497, column: 3, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7937, file: !1276, line: 496, column: 46)
!7942 = !DILocation(line: 498, column: 2, scope: !7941)
!7943 = !DILocation(line: 500, column: 11, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7871, file: !1276, line: 500, column: 6)
!7945 = !DILocation(line: 500, column: 29, scope: !7944)
!7946 = !DILocation(line: 500, column: 20, scope: !7944)
!7947 = !DILocation(line: 500, column: 6, scope: !7871)
!7948 = !DILocation(line: 501, column: 3, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7944, file: !1276, line: 500, column: 40)
!7950 = !DILocation(line: 502, column: 26, scope: !7949)
!7951 = !DILocation(line: 502, column: 19, scope: !7949)
!7952 = !DILocation(line: 503, column: 2, scope: !7949)
!7953 = !DILocation(line: 505, column: 26, scope: !7871)
!7954 = !DILocation(line: 505, column: 2, scope: !7871)
!7955 = !DILocation(line: 506, column: 2, scope: !7871)
!7956 = !DILocation(line: 507, column: 1, scope: !7871)
!7957 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1276, file: !1276, line: 509, type: !1217, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7958)
!7958 = !{!7959, !7960, !7961}
!7959 = !DILocalVariable(name: "dev", arg: 1, scope: !7957, file: !1276, line: 509, type: !1179)
!7960 = !DILocalVariable(name: "cfg", arg: 2, scope: !7957, file: !1276, line: 510, type: !1219)
!7961 = !DILocalVariable(name: "data", scope: !7957, file: !1276, line: 512, type: !7877)
!7962 = !DILocation(line: 0, scope: !7957)
!7963 = !DILocation(line: 512, column: 38, scope: !7957)
!7964 = !DILocation(line: 514, column: 24, scope: !7957)
!7965 = !DILocation(line: 514, column: 7, scope: !7957)
!7966 = !DILocation(line: 514, column: 16, scope: !7957)
!7967 = !DILocation(line: 515, column: 41, scope: !7957)
!7968 = !{i32 0, i32 1537}
!7969 = !DILocation(line: 515, column: 16, scope: !7957)
!7970 = !DILocation(line: 515, column: 7, scope: !7957)
!7971 = !DILocation(line: 515, column: 14, scope: !7957)
!7972 = !DILocation(line: 517, column: 3, scope: !7957)
!7973 = !{i32 0, i32 12289}
!7974 = !DILocation(line: 516, column: 19, scope: !7957)
!7975 = !DILocation(line: 516, column: 7, scope: !7957)
!7976 = !DILocation(line: 516, column: 17, scope: !7957)
!7977 = !DILocation(line: 519, column: 3, scope: !7957)
!7978 = !DILocation(line: 519, column: 33, scope: !7957)
!7979 = !DILocation(line: 518, column: 19, scope: !7957)
!7980 = !DILocation(line: 518, column: 7, scope: !7957)
!7981 = !DILocation(line: 518, column: 17, scope: !7957)
!7982 = !DILocation(line: 521, column: 3, scope: !7957)
!7983 = !{i32 0, i32 769}
!7984 = !DILocation(line: 520, column: 19, scope: !7957)
!7985 = !DILocation(line: 520, column: 7, scope: !7957)
!7986 = !DILocation(line: 520, column: 17, scope: !7957)
!7987 = !DILocation(line: 522, column: 2, scope: !7957)
!7988 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1276, file: !1276, line: 205, type: !7989, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!121, !1179}
!7991 = !{!7992, !7993}
!7992 = !DILocalVariable(name: "dev", arg: 1, scope: !7988, file: !1276, line: 205, type: !1179)
!7993 = !DILocalVariable(name: "config", scope: !7988, file: !1276, line: 207, type: !7754)
!7994 = !DILocation(line: 0, scope: !7988)
!7995 = !DILocation(line: 207, column: 48, scope: !7988)
!7996 = !DILocation(line: 209, column: 36, scope: !7988)
!7997 = !DILocation(line: 209, column: 9, scope: !7988)
!7998 = !DILocation(line: 209, column: 2, scope: !7988)
!7999 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1276, file: !1276, line: 270, type: !8000, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8002)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!1145, !121}
!8002 = !{!8003}
!8003 = !DILocalVariable(name: "parity", arg: 1, scope: !7999, file: !1276, line: 270, type: !121)
!8004 = !DILocation(line: 0, scope: !7999)
!8005 = !DILocation(line: 272, column: 2, scope: !7999)
!8006 = !DILocation(line: 281, column: 1, scope: !7999)
!8007 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1276, file: !1276, line: 220, type: !7989, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8008)
!8008 = !{!8009, !8010}
!8009 = !DILocalVariable(name: "dev", arg: 1, scope: !8007, file: !1276, line: 220, type: !1179)
!8010 = !DILocalVariable(name: "config", scope: !8007, file: !1276, line: 222, type: !7754)
!8011 = !DILocation(line: 0, scope: !8007)
!8012 = !DILocation(line: 222, column: 48, scope: !8007)
!8013 = !DILocation(line: 224, column: 44, scope: !8007)
!8014 = !DILocation(line: 224, column: 9, scope: !8007)
!8015 = !DILocation(line: 224, column: 2, scope: !8007)
!8016 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1276, file: !1276, line: 304, type: !8017, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8019)
!8017 = !DISubroutineType(types: !8018)
!8018 = !{!1159, !121}
!8019 = !{!8020}
!8020 = !DILocalVariable(name: "sb", arg: 1, scope: !8016, file: !1276, line: 304, type: !121)
!8021 = !DILocation(line: 0, scope: !8016)
!8022 = !DILocation(line: 306, column: 2, scope: !8016)
!8023 = !DILocation(line: 0, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8016, file: !1276, line: 306, column: 14)
!8025 = !DILocation(line: 323, column: 1, scope: !8016)
!8026 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1276, file: !1276, line: 235, type: !7989, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8027)
!8027 = !{!8028, !8029}
!8028 = !DILocalVariable(name: "dev", arg: 1, scope: !8026, file: !1276, line: 235, type: !1179)
!8029 = !DILocalVariable(name: "config", scope: !8026, file: !1276, line: 237, type: !7754)
!8030 = !DILocation(line: 0, scope: !8026)
!8031 = !DILocation(line: 237, column: 48, scope: !8026)
!8032 = !DILocation(line: 239, column: 39, scope: !8026)
!8033 = !DILocation(line: 239, column: 9, scope: !8026)
!8034 = !DILocation(line: 239, column: 2, scope: !8026)
!8035 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1276, file: !1276, line: 355, type: !8036, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8038)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!1152, !121, !121}
!8038 = !{!8039, !8040}
!8039 = !DILocalVariable(name: "db", arg: 1, scope: !8035, file: !1276, line: 355, type: !121)
!8040 = !DILocalVariable(name: "p", arg: 2, scope: !8035, file: !1276, line: 356, type: !121)
!8041 = !DILocation(line: 0, scope: !8035)
!8042 = !DILocation(line: 358, column: 2, scope: !8035)
!8043 = !DILocation(line: 384, column: 1, scope: !8035)
!8044 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1276, file: !1276, line: 250, type: !7989, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8045)
!8045 = !{!8046, !8047}
!8046 = !DILocalVariable(name: "dev", arg: 1, scope: !8044, file: !1276, line: 250, type: !1179)
!8047 = !DILocalVariable(name: "config", scope: !8044, file: !1276, line: 252, type: !7754)
!8048 = !DILocation(line: 0, scope: !8044)
!8049 = !DILocation(line: 252, column: 48, scope: !8044)
!8050 = !DILocation(line: 254, column: 40, scope: !8044)
!8051 = !DILocation(line: 254, column: 9, scope: !8044)
!8052 = !DILocation(line: 254, column: 2, scope: !8044)
!8053 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1276, file: !1276, line: 409, type: !8054, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8056)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!1165, !121}
!8056 = !{!8057}
!8057 = !DILocalVariable(name: "fc", arg: 1, scope: !8053, file: !1276, line: 409, type: !121)
!8058 = !DILocation(line: 0, scope: !8053)
!8059 = !DILocation(line: 411, column: 9, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8053, file: !1276, line: 411, column: 6)
!8061 = !DILocation(line: 416, column: 1, scope: !8053)
!8062 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8063, file: !8063, line: 967, type: !8064, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8066)
!8063 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8064 = !DISubroutineType(types: !8065)
!8065 = !{!121, !1220}
!8066 = !{!8067}
!8067 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8062, file: !8063, line: 967, type: !1220)
!8068 = !DILocation(line: 0, scope: !8062)
!8069 = !DILocation(line: 969, column: 21, scope: !8062)
!8070 = !DILocation(line: 969, column: 3, scope: !8062)
!8071 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8063, file: !8063, line: 601, type: !8064, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8072)
!8072 = !{!8073}
!8073 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8071, file: !8063, line: 601, type: !1220)
!8074 = !DILocation(line: 0, scope: !8071)
!8075 = !DILocation(line: 603, column: 21, scope: !8071)
!8076 = !DILocation(line: 603, column: 3, scope: !8071)
!8077 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8063, file: !8063, line: 820, type: !8064, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8078)
!8078 = !{!8079}
!8079 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8077, file: !8063, line: 820, type: !1220)
!8080 = !DILocation(line: 0, scope: !8077)
!8081 = !DILocation(line: 822, column: 21, scope: !8077)
!8082 = !DILocation(line: 822, column: 3, scope: !8077)
!8083 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8063, file: !8063, line: 547, type: !8064, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8084)
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8083, file: !8063, line: 547, type: !1220)
!8086 = !DILocation(line: 0, scope: !8083)
!8087 = !DILocation(line: 549, column: 21, scope: !8083)
!8088 = !DILocation(line: 549, column: 3, scope: !8083)
!8089 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1276, file: !1276, line: 257, type: !8090, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8092)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{!121, !1145}
!8092 = !{!8093}
!8093 = !DILocalVariable(name: "parity", arg: 1, scope: !8089, file: !1276, line: 257, type: !1145)
!8094 = !DILocation(line: 0, scope: !8089)
!8095 = !DILocation(line: 259, column: 2, scope: !8089)
!8096 = !DILocation(line: 268, column: 1, scope: !8089)
!8097 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1276, file: !1276, line: 283, type: !8098, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8100)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{!121, !1159}
!8100 = !{!8101}
!8101 = !DILocalVariable(name: "sb", arg: 1, scope: !8097, file: !1276, line: 283, type: !1159)
!8102 = !DILocation(line: 0, scope: !8097)
!8103 = !DILocation(line: 285, column: 2, scope: !8097)
!8104 = !DILocation(line: 0, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8097, file: !1276, line: 285, column: 14)
!8106 = !DILocation(line: 302, column: 1, scope: !8097)
!8107 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1276, file: !1276, line: 325, type: !8108, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8110)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!121, !1152, !1145}
!8110 = !{!8111, !8112}
!8111 = !DILocalVariable(name: "db", arg: 1, scope: !8107, file: !1276, line: 325, type: !1152)
!8112 = !DILocalVariable(name: "p", arg: 2, scope: !8107, file: !1276, line: 326, type: !1145)
!8113 = !DILocation(line: 0, scope: !8107)
!8114 = !DILocation(line: 328, column: 2, scope: !8107)
!8115 = !DILocation(line: 353, column: 1, scope: !8107)
!8116 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1276, file: !1276, line: 393, type: !8117, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8119)
!8117 = !DISubroutineType(types: !8118)
!8118 = !{!121, !1165}
!8119 = !{!8120}
!8120 = !DILocalVariable(name: "fc", arg: 1, scope: !8116, file: !1276, line: 393, type: !1165)
!8121 = !DILocation(line: 0, scope: !8116)
!8122 = !DILocation(line: 395, column: 9, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8116, file: !1276, line: 395, column: 6)
!8124 = !DILocation(line: 400, column: 1, scope: !8116)
!8125 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8063, file: !8063, line: 424, type: !8126, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8128)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{null, !1220}
!8128 = !{!8129}
!8129 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8125, file: !8063, line: 424, type: !1220)
!8130 = !DILocation(line: 0, scope: !8125)
!8131 = !DILocation(line: 426, column: 3, scope: !8125)
!8132 = !DILocation(line: 427, column: 1, scope: !8125)
!8133 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1276, file: !1276, line: 197, type: !8134, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8136)
!8134 = !DISubroutineType(types: !8135)
!8135 = !{null, !1179, !121}
!8136 = !{!8137, !8138, !8139}
!8137 = !DILocalVariable(name: "dev", arg: 1, scope: !8133, file: !1276, line: 197, type: !1179)
!8138 = !DILocalVariable(name: "parity", arg: 2, scope: !8133, file: !1276, line: 198, type: !121)
!8139 = !DILocalVariable(name: "config", scope: !8133, file: !1276, line: 200, type: !7754)
!8140 = !DILocation(line: 0, scope: !8133)
!8141 = !DILocation(line: 200, column: 48, scope: !8133)
!8142 = !DILocation(line: 202, column: 29, scope: !8133)
!8143 = !DILocation(line: 202, column: 2, scope: !8133)
!8144 = !DILocation(line: 203, column: 1, scope: !8133)
!8145 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1276, file: !1276, line: 212, type: !8134, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8146)
!8146 = !{!8147, !8148, !8149}
!8147 = !DILocalVariable(name: "dev", arg: 1, scope: !8145, file: !1276, line: 212, type: !1179)
!8148 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8145, file: !1276, line: 213, type: !121)
!8149 = !DILocalVariable(name: "config", scope: !8145, file: !1276, line: 215, type: !7754)
!8150 = !DILocation(line: 0, scope: !8145)
!8151 = !DILocation(line: 215, column: 48, scope: !8145)
!8152 = !DILocation(line: 217, column: 37, scope: !8145)
!8153 = !DILocation(line: 217, column: 2, scope: !8145)
!8154 = !DILocation(line: 218, column: 1, scope: !8145)
!8155 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1276, file: !1276, line: 227, type: !8134, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8156)
!8156 = !{!8157, !8158, !8159}
!8157 = !DILocalVariable(name: "dev", arg: 1, scope: !8155, file: !1276, line: 227, type: !1179)
!8158 = !DILocalVariable(name: "databits", arg: 2, scope: !8155, file: !1276, line: 228, type: !121)
!8159 = !DILocalVariable(name: "config", scope: !8155, file: !1276, line: 230, type: !7754)
!8160 = !DILocation(line: 0, scope: !8155)
!8161 = !DILocation(line: 230, column: 48, scope: !8155)
!8162 = !DILocation(line: 232, column: 32, scope: !8155)
!8163 = !DILocation(line: 232, column: 2, scope: !8155)
!8164 = !DILocation(line: 233, column: 1, scope: !8155)
!8165 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1276, file: !1276, line: 242, type: !8134, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8166)
!8166 = !{!8167, !8168, !8169}
!8167 = !DILocalVariable(name: "dev", arg: 1, scope: !8165, file: !1276, line: 242, type: !1179)
!8168 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8165, file: !1276, line: 243, type: !121)
!8169 = !DILocalVariable(name: "config", scope: !8165, file: !1276, line: 245, type: !7754)
!8170 = !DILocation(line: 0, scope: !8165)
!8171 = !DILocation(line: 245, column: 48, scope: !8165)
!8172 = !DILocation(line: 247, column: 33, scope: !8165)
!8173 = !DILocation(line: 247, column: 2, scope: !8165)
!8174 = !DILocation(line: 248, column: 1, scope: !8165)
!8175 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1276, file: !1276, line: 107, type: !8134, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8176)
!8176 = !{!8177, !8178, !8179, !8180, !8181}
!8177 = !DILocalVariable(name: "dev", arg: 1, scope: !8175, file: !1276, line: 107, type: !1179)
!8178 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8175, file: !1276, line: 107, type: !121)
!8179 = !DILocalVariable(name: "config", scope: !8175, file: !1276, line: 109, type: !7754)
!8180 = !DILocalVariable(name: "data", scope: !8175, file: !1276, line: 110, type: !7877)
!8181 = !DILocalVariable(name: "clock_rate", scope: !8175, file: !1276, line: 112, type: !121)
!8182 = !DILocation(line: 0, scope: !8175)
!8183 = !DILocation(line: 109, column: 48, scope: !8175)
!8184 = !DILocation(line: 110, column: 38, scope: !8175)
!8185 = !DILocation(line: 112, column: 2, scope: !8175)
!8186 = !DILocation(line: 123, column: 36, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !1276, line: 123, column: 7)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !1276, line: 122, column: 9)
!8189 = distinct !DILexicalBlock(scope: !8175, file: !1276, line: 115, column: 6)
!8190 = !DILocation(line: 124, column: 42, scope: !8187)
!8191 = !DILocation(line: 123, column: 7, scope: !8187)
!8192 = !DILocation(line: 125, column: 22, scope: !8187)
!8193 = !DILocation(line: 123, column: 7, scope: !8188)
!8194 = !DILocation(line: 176, column: 36, scope: !8175)
!8195 = !DILocation(line: 176, column: 3, scope: !8175)
!8196 = !DILocation(line: 179, column: 32, scope: !8175)
!8197 = !DILocation(line: 180, column: 10, scope: !8175)
!8198 = !DILocation(line: 179, column: 3, scope: !8175)
!8199 = !DILocation(line: 195, column: 1, scope: !8175)
!8200 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8063, file: !8063, line: 410, type: !8126, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8201)
!8201 = !{!8202}
!8202 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8200, file: !8063, line: 410, type: !1220)
!8203 = !DILocation(line: 0, scope: !8200)
!8204 = !DILocation(line: 412, column: 3, scope: !8200)
!8205 = !DILocation(line: 413, column: 1, scope: !8200)
!8206 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !636, file: !636, line: 216, type: !1253, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8207)
!8207 = !{!8208, !8209, !8210, !8211}
!8208 = !DILocalVariable(name: "dev", arg: 1, scope: !8206, file: !636, line: 216, type: !1179)
!8209 = !DILocalVariable(name: "sys", arg: 2, scope: !8206, file: !636, line: 217, type: !731)
!8210 = !DILocalVariable(name: "rate", arg: 3, scope: !8206, file: !636, line: 218, type: !687)
!8211 = !DILocalVariable(name: "api", scope: !8206, file: !636, line: 220, type: !1231)
!8212 = !DILocation(line: 0, scope: !8206)
!8213 = !DILocation(line: 221, column: 49, scope: !8206)
!8214 = !DILocation(line: 223, column: 11, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8206, file: !636, line: 223, column: 6)
!8216 = !DILocation(line: 223, column: 20, scope: !8215)
!8217 = !DILocation(line: 223, column: 6, scope: !8206)
!8218 = !DILocation(line: 227, column: 9, scope: !8206)
!8219 = !DILocation(line: 227, column: 2, scope: !8206)
!8220 = !DILocation(line: 228, column: 1, scope: !8206)
!8221 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8063, file: !8063, line: 615, type: !8222, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{null, !1220, !121}
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8221, file: !8063, line: 615, type: !1220)
!8226 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8221, file: !8063, line: 615, type: !121)
!8227 = !DILocation(line: 0, scope: !8221)
!8228 = !DILocation(line: 617, column: 3, scope: !8221)
!8229 = !DILocation(line: 618, column: 1, scope: !8221)
!8230 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8063, file: !8063, line: 1020, type: !8231, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8233)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{null, !1220, !121, !121, !121}
!8233 = !{!8234, !8235, !8236, !8237}
!8234 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8230, file: !8063, line: 1020, type: !1220)
!8235 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8230, file: !8063, line: 1020, type: !121)
!8236 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8230, file: !8063, line: 1020, type: !121)
!8237 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8230, file: !8063, line: 1021, type: !121)
!8238 = !DILocation(line: 0, scope: !8230)
!8239 = !DILocation(line: 1029, column: 30, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !8063, line: 1028, column: 3)
!8241 = distinct !DILexicalBlock(scope: !8230, file: !8063, line: 1023, column: 7)
!8242 = !DILocation(line: 1029, column: 19, scope: !8240)
!8243 = !DILocation(line: 1029, column: 13, scope: !8240)
!8244 = !DILocation(line: 1029, column: 17, scope: !8240)
!8245 = !DILocation(line: 1031, column: 1, scope: !8230)
!8246 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8063, file: !8063, line: 949, type: !8222, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8247)
!8247 = !{!8248, !8249}
!8248 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8246, file: !8063, line: 949, type: !1220)
!8249 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8246, file: !8063, line: 949, type: !121)
!8250 = !DILocation(line: 0, scope: !8246)
!8251 = !DILocation(line: 951, column: 3, scope: !8246)
!8252 = !DILocation(line: 952, column: 1, scope: !8246)
!8253 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8063, file: !8063, line: 588, type: !8222, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8254)
!8254 = !{!8255, !8256}
!8255 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8253, file: !8063, line: 588, type: !1220)
!8256 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8253, file: !8063, line: 588, type: !121)
!8257 = !DILocation(line: 0, scope: !8253)
!8258 = !DILocation(line: 590, column: 3, scope: !8253)
!8259 = !DILocation(line: 591, column: 1, scope: !8253)
!8260 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8063, file: !8063, line: 805, type: !8222, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8261)
!8261 = !{!8262, !8263}
!8262 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8260, file: !8063, line: 805, type: !1220)
!8263 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8260, file: !8063, line: 805, type: !121)
!8264 = !DILocation(line: 0, scope: !8260)
!8265 = !DILocation(line: 807, column: 3, scope: !8260)
!8266 = !DILocation(line: 808, column: 1, scope: !8260)
!8267 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8063, file: !8063, line: 532, type: !8222, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8268)
!8268 = !{!8269, !8270}
!8269 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8267, file: !8063, line: 532, type: !1220)
!8270 = !DILocalVariable(name: "Parity", arg: 2, scope: !8267, file: !8063, line: 532, type: !121)
!8271 = !DILocation(line: 0, scope: !8267)
!8272 = !DILocation(line: 534, column: 3, scope: !8267)
!8273 = !DILocation(line: 535, column: 1, scope: !8267)
!8274 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8063, file: !8063, line: 1770, type: !8064, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8275)
!8275 = !{!8276}
!8276 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8274, file: !8063, line: 1770, type: !1220)
!8277 = !DILocation(line: 0, scope: !8274)
!8278 = !DILocation(line: 1772, column: 11, scope: !8274)
!8279 = !DILocation(line: 1772, column: 46, scope: !8274)
!8280 = !DILocation(line: 1772, column: 3, scope: !8274)
!8281 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8063, file: !8063, line: 1737, type: !8064, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8282)
!8282 = !{!8283}
!8283 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8281, file: !8063, line: 1737, type: !1220)
!8284 = !DILocation(line: 0, scope: !8281)
!8285 = !DILocation(line: 1739, column: 11, scope: !8281)
!8286 = !DILocation(line: 1739, column: 3, scope: !8281)
!8287 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8063, file: !8063, line: 1748, type: !8064, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8288)
!8288 = !{!8289}
!8289 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8287, file: !8063, line: 1748, type: !1220)
!8290 = !DILocation(line: 0, scope: !8287)
!8291 = !DILocation(line: 1750, column: 11, scope: !8287)
!8292 = !DILocation(line: 1750, column: 45, scope: !8287)
!8293 = !DILocation(line: 1750, column: 3, scope: !8287)
!8294 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8063, file: !8063, line: 1827, type: !8064, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8295)
!8295 = !{!8296}
!8296 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8294, file: !8063, line: 1827, type: !1220)
!8297 = !DILocation(line: 0, scope: !8294)
!8298 = !DILocation(line: 1829, column: 11, scope: !8294)
!8299 = !DILocation(line: 1829, column: 46, scope: !8294)
!8300 = !DILocation(line: 1829, column: 3, scope: !8294)
!8301 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8063, file: !8063, line: 1992, type: !8126, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8302)
!8302 = !{!8303}
!8303 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8301, file: !8063, line: 1992, type: !1220)
!8304 = !DILocation(line: 0, scope: !8301)
!8305 = !DILocation(line: 1994, column: 3, scope: !8301)
!8306 = !DILocation(line: 1995, column: 1, scope: !8301)
!8307 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8063, file: !8063, line: 1934, type: !8126, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8308)
!8308 = !{!8309, !8310}
!8309 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8307, file: !8063, line: 1934, type: !1220)
!8310 = !DILocalVariable(name: "tmpreg", scope: !8307, file: !8063, line: 1936, type: !120)
!8311 = !DILocation(line: 0, scope: !8307)
!8312 = !DILocation(line: 1936, column: 3, scope: !8307)
!8313 = !DILocation(line: 1936, column: 17, scope: !8307)
!8314 = !DILocation(line: 1937, column: 20, scope: !8307)
!8315 = !DILocation(line: 1937, column: 10, scope: !8307)
!8316 = !DILocation(line: 1938, column: 10, scope: !8307)
!8317 = !DILocation(line: 1939, column: 20, scope: !8307)
!8318 = !DILocation(line: 1939, column: 10, scope: !8307)
!8319 = !DILocation(line: 1940, column: 10, scope: !8307)
!8320 = !DILocation(line: 1941, column: 1, scope: !8307)
!8321 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8063, file: !8063, line: 1877, type: !8126, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8322)
!8322 = !{!8323, !8324}
!8323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8321, file: !8063, line: 1877, type: !1220)
!8324 = !DILocalVariable(name: "tmpreg", scope: !8321, file: !8063, line: 1879, type: !120)
!8325 = !DILocation(line: 0, scope: !8321)
!8326 = !DILocation(line: 1879, column: 3, scope: !8321)
!8327 = !DILocation(line: 1879, column: 17, scope: !8321)
!8328 = !DILocation(line: 1880, column: 20, scope: !8321)
!8329 = !DILocation(line: 1880, column: 10, scope: !8321)
!8330 = !DILocation(line: 1881, column: 10, scope: !8321)
!8331 = !DILocation(line: 1882, column: 20, scope: !8321)
!8332 = !DILocation(line: 1882, column: 10, scope: !8321)
!8333 = !DILocation(line: 1883, column: 10, scope: !8321)
!8334 = !DILocation(line: 1884, column: 1, scope: !8321)
!8335 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8063, file: !8063, line: 1896, type: !8126, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8336)
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8335, file: !8063, line: 1896, type: !1220)
!8338 = !DILocalVariable(name: "tmpreg", scope: !8335, file: !8063, line: 1898, type: !120)
!8339 = !DILocation(line: 0, scope: !8335)
!8340 = !DILocation(line: 1898, column: 3, scope: !8335)
!8341 = !DILocation(line: 1898, column: 17, scope: !8335)
!8342 = !DILocation(line: 1899, column: 20, scope: !8335)
!8343 = !DILocation(line: 1899, column: 10, scope: !8335)
!8344 = !DILocation(line: 1900, column: 10, scope: !8335)
!8345 = !DILocation(line: 1901, column: 20, scope: !8335)
!8346 = !DILocation(line: 1901, column: 10, scope: !8335)
!8347 = !DILocation(line: 1902, column: 10, scope: !8335)
!8348 = !DILocation(line: 1903, column: 1, scope: !8335)
!8349 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8063, file: !8063, line: 1915, type: !8126, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8350)
!8350 = !{!8351, !8352}
!8351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8349, file: !8063, line: 1915, type: !1220)
!8352 = !DILocalVariable(name: "tmpreg", scope: !8349, file: !8063, line: 1917, type: !120)
!8353 = !DILocation(line: 0, scope: !8349)
!8354 = !DILocation(line: 1917, column: 3, scope: !8349)
!8355 = !DILocation(line: 1917, column: 17, scope: !8349)
!8356 = !DILocation(line: 1918, column: 20, scope: !8349)
!8357 = !DILocation(line: 1918, column: 10, scope: !8349)
!8358 = !DILocation(line: 1919, column: 10, scope: !8349)
!8359 = !DILocation(line: 1920, column: 20, scope: !8349)
!8360 = !DILocation(line: 1920, column: 10, scope: !8349)
!8361 = !DILocation(line: 1921, column: 10, scope: !8349)
!8362 = !DILocation(line: 1922, column: 1, scope: !8349)
!8363 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8063, file: !8063, line: 1814, type: !8064, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8364)
!8364 = !{!8365}
!8365 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8363, file: !8063, line: 1814, type: !1220)
!8366 = !DILocation(line: 0, scope: !8363)
!8367 = !DILocation(line: 1816, column: 11, scope: !8363)
!8368 = !DILocation(line: 1816, column: 46, scope: !8363)
!8369 = !DILocation(line: 1816, column: 3, scope: !8363)
!8370 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8063, file: !8063, line: 2426, type: !8371, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8373)
!8371 = !DISubroutineType(types: !8372)
!8372 = !{null, !1220, !154}
!8373 = !{!8374, !8375}
!8374 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8370, file: !8063, line: 2426, type: !1220)
!8375 = !DILocalVariable(name: "Value", arg: 2, scope: !8370, file: !8063, line: 2426, type: !154)
!8376 = !DILocation(line: 0, scope: !8370)
!8377 = !DILocation(line: 2428, column: 16, scope: !8370)
!8378 = !DILocation(line: 2428, column: 11, scope: !8370)
!8379 = !DILocation(line: 2428, column: 14, scope: !8370)
!8380 = !DILocation(line: 2429, column: 1, scope: !8370)
!8381 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8063, file: !8063, line: 1792, type: !8064, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8381, file: !8063, line: 1792, type: !1220)
!8384 = !DILocation(line: 0, scope: !8381)
!8385 = !DILocation(line: 1794, column: 11, scope: !8381)
!8386 = !DILocation(line: 1794, column: 47, scope: !8381)
!8387 = !DILocation(line: 1794, column: 3, scope: !8381)
!8388 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8063, file: !8063, line: 2403, type: !8389, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8391)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!154, !1220}
!8391 = !{!8392}
!8392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8388, file: !8063, line: 2403, type: !1220)
!8393 = !DILocation(line: 0, scope: !8388)
!8394 = !DILocation(line: 2405, column: 20, scope: !8388)
!8395 = !DILocation(line: 2405, column: 10, scope: !8388)
!8396 = !DILocation(line: 2405, column: 3, scope: !8388)
!8397 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1276, file: !1276, line: 1583, type: !1200, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8398)
!8398 = !{!8399, !8400, !8401, !8402, !8403, !8404}
!8399 = !DILocalVariable(name: "dev", arg: 1, scope: !8397, file: !1276, line: 1583, type: !1179)
!8400 = !DILocalVariable(name: "config", scope: !8397, file: !1276, line: 1585, type: !7754)
!8401 = !DILocalVariable(name: "data", scope: !8397, file: !1276, line: 1586, type: !7877)
!8402 = !DILocalVariable(name: "ll_parity", scope: !8397, file: !1276, line: 1587, type: !121)
!8403 = !DILocalVariable(name: "ll_datawidth", scope: !8397, file: !1276, line: 1588, type: !121)
!8404 = !DILocalVariable(name: "err", scope: !8397, file: !1276, line: 1589, type: !103)
!8405 = !DILocation(line: 0, scope: !8397)
!8406 = !DILocation(line: 1585, column: 48, scope: !8397)
!8407 = !DILocation(line: 1586, column: 38, scope: !8397)
!8408 = !DILocation(line: 1591, column: 2, scope: !8397)
!8409 = !DILocation(line: 1593, column: 29, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8397, file: !1276, line: 1593, column: 6)
!8411 = !DILocation(line: 1593, column: 7, scope: !8410)
!8412 = !DILocation(line: 1593, column: 6, scope: !8397)
!8413 = !DILocation(line: 1599, column: 31, scope: !8397)
!8414 = !DILocation(line: 1599, column: 71, scope: !8397)
!8415 = !DILocation(line: 1599, column: 8, scope: !8397)
!8416 = !DILocation(line: 1600, column: 10, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8397, file: !1276, line: 1600, column: 6)
!8418 = !DILocation(line: 1600, column: 6, scope: !8397)
!8419 = !DILocation(line: 1616, column: 36, scope: !8397)
!8420 = !DILocation(line: 1616, column: 8, scope: !8397)
!8421 = !DILocation(line: 1617, column: 10, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8397, file: !1276, line: 1617, column: 6)
!8423 = !DILocation(line: 1617, column: 6, scope: !8397)
!8424 = !DILocation(line: 1621, column: 27, scope: !8397)
!8425 = !DILocation(line: 1621, column: 2, scope: !8397)
!8426 = !DILocation(line: 1624, column: 40, scope: !8397)
!8427 = !DILocation(line: 1624, column: 2, scope: !8397)
!8428 = !DILocation(line: 1630, column: 14, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8397, file: !1276, line: 1630, column: 6)
!8430 = !DILocation(line: 1630, column: 6, scope: !8397)
!8431 = !DILocation(line: 1638, column: 2, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !1276, line: 1634, column: 34)
!8433 = distinct !DILexicalBlock(scope: !8429, file: !1276, line: 1634, column: 13)
!8434 = !DILocation(line: 0, scope: !8429)
!8435 = !DILocation(line: 1649, column: 35, scope: !8397)
!8436 = !DILocation(line: 1649, column: 2, scope: !8397)
!8437 = !DILocation(line: 1654, column: 14, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8397, file: !1276, line: 1654, column: 6)
!8439 = !DILocation(line: 1654, column: 6, scope: !8397)
!8440 = !DILocation(line: 1655, column: 3, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8438, file: !1276, line: 1654, column: 31)
!8442 = !DILocation(line: 1656, column: 2, scope: !8441)
!8443 = !DILocation(line: 1659, column: 37, scope: !8397)
!8444 = !DILocation(line: 1659, column: 2, scope: !8397)
!8445 = !DILocation(line: 1662, column: 14, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8397, file: !1276, line: 1662, column: 6)
!8447 = !DILocation(line: 1662, column: 6, scope: !8397)
!8448 = !DILocation(line: 1663, column: 37, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8446, file: !1276, line: 1662, column: 27)
!8450 = !DILocation(line: 1663, column: 3, scope: !8449)
!8451 = !DILocation(line: 1664, column: 2, scope: !8449)
!8452 = !DILocation(line: 1684, column: 26, scope: !8397)
!8453 = !DILocation(line: 1684, column: 2, scope: !8397)
!8454 = !DILocation(line: 1722, column: 2, scope: !8397)
!8455 = !DILocation(line: 1724, column: 1, scope: !8397)
!8456 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1276, file: !1276, line: 651, type: !8457, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8459)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{null, !1179}
!8459 = !{!8460, !8461, !8462}
!8460 = !DILocalVariable(name: "dev", arg: 1, scope: !8456, file: !1276, line: 651, type: !1179)
!8461 = !DILocalVariable(name: "data", scope: !8456, file: !1276, line: 653, type: !7877)
!8462 = !DILocalVariable(name: "clk", scope: !8456, file: !1276, line: 654, type: !8463)
!8463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!8464 = !DILocation(line: 0, scope: !8456)
!8465 = !DILocation(line: 653, column: 38, scope: !8456)
!8466 = !DILocation(line: 656, column: 8, scope: !8456)
!8467 = !DILocation(line: 656, column: 14, scope: !8456)
!8468 = !DILocation(line: 657, column: 1, scope: !8456)
!8469 = distinct !DISubprogram(name: "device_is_ready", scope: !6892, file: !6892, line: 47, type: !8470, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8472)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!157, !1179}
!8472 = !{!8473}
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8469, file: !6892, line: 47, type: !1179)
!8474 = !DILocation(line: 0, scope: !8469)
!8475 = !DILocation(line: 55, column: 2, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8469, file: !6892, line: 55, column: 2)
!8477 = !{i64 2154348313}
!8478 = !DILocation(line: 56, column: 9, scope: !8469)
!8479 = !DILocation(line: 56, column: 2, scope: !8469)
!8480 = distinct !DISubprogram(name: "clock_control_on", scope: !636, file: !636, line: 123, type: !1238, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8481)
!8481 = !{!8482, !8483, !8484}
!8482 = !DILocalVariable(name: "dev", arg: 1, scope: !8480, file: !636, line: 123, type: !1179)
!8483 = !DILocalVariable(name: "sys", arg: 2, scope: !8480, file: !636, line: 124, type: !731)
!8484 = !DILocalVariable(name: "api", scope: !8480, file: !636, line: 126, type: !1231)
!8485 = !DILocation(line: 0, scope: !8480)
!8486 = !DILocation(line: 127, column: 49, scope: !8480)
!8487 = !DILocation(line: 129, column: 14, scope: !8480)
!8488 = !DILocation(line: 129, column: 9, scope: !8480)
!8489 = !DILocation(line: 129, column: 2, scope: !8480)
!8490 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1303, file: !1303, line: 342, type: !8491, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8493)
!8491 = !DISubroutineType(types: !8492)
!8492 = !{!103, !1351, !154}
!8493 = !{!8494, !8495, !8496, !8497}
!8494 = !DILocalVariable(name: "config", arg: 1, scope: !8490, file: !1303, line: 342, type: !1351)
!8495 = !DILocalVariable(name: "id", arg: 2, scope: !8490, file: !1303, line: 343, type: !154)
!8496 = !DILocalVariable(name: "ret", scope: !8490, file: !1303, line: 345, type: !103)
!8497 = !DILocalVariable(name: "state", scope: !8490, file: !1303, line: 346, type: !1306)
!8498 = !DILocation(line: 0, scope: !8490)
!8499 = !DILocation(line: 346, column: 2, scope: !8490)
!8500 = !DILocation(line: 348, column: 8, scope: !8490)
!8501 = !DILocation(line: 349, column: 10, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8490, file: !1303, line: 349, column: 6)
!8503 = !DILocation(line: 349, column: 6, scope: !8490)
!8504 = !DILocation(line: 353, column: 44, scope: !8490)
!8505 = !DILocation(line: 353, column: 9, scope: !8490)
!8506 = !DILocation(line: 353, column: 2, scope: !8490)
!8507 = !DILocation(line: 354, column: 1, scope: !8490)
!8508 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8063, file: !8063, line: 497, type: !8222, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8509)
!8509 = !{!8510, !8511, !8512}
!8510 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8508, file: !8063, line: 497, type: !1220)
!8511 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8508, file: !8063, line: 497, type: !121)
!8512 = !DILocalVariable(name: "val", scope: !8513, file: !8063, line: 499, type: !121)
!8513 = distinct !DILexicalBlock(scope: !8508, file: !8063, line: 499, column: 3)
!8514 = !DILocation(line: 0, scope: !8508)
!8515 = !DILocation(line: 499, column: 3, scope: !8513)
!8516 = !DILocalVariable(name: "addr", arg: 1, scope: !8517, file: !4697, line: 476, type: !1272)
!8517 = distinct !DISubprogram(name: "__LDREXW", scope: !4697, file: !4697, line: 476, type: !8518, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8520)
!8518 = !DISubroutineType(types: !8519)
!8519 = !{!121, !1272}
!8520 = !{!8516, !8521}
!8521 = !DILocalVariable(name: "result", scope: !8517, file: !4697, line: 478, type: !121)
!8522 = !DILocation(line: 0, scope: !8517, inlinedAt: !8523)
!8523 = distinct !DILocation(line: 499, column: 3, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8513, file: !8063, line: 499, column: 3)
!8525 = !DILocation(line: 480, column: 4, scope: !8517, inlinedAt: !8523)
!8526 = !{i64 2859162}
!8527 = !DILocation(line: 499, column: 3, scope: !8524)
!8528 = !DILocation(line: 0, scope: !8513)
!8529 = !DILocalVariable(name: "value", arg: 1, scope: !8530, file: !4697, line: 527, type: !121)
!8530 = distinct !DISubprogram(name: "__STREXW", scope: !4697, file: !4697, line: 527, type: !8531, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8533)
!8531 = !DISubroutineType(types: !8532)
!8532 = !{!121, !121, !1272}
!8533 = !{!8529, !8534, !8535}
!8534 = !DILocalVariable(name: "addr", arg: 2, scope: !8530, file: !4697, line: 527, type: !1272)
!8535 = !DILocalVariable(name: "result", scope: !8530, file: !4697, line: 529, type: !121)
!8536 = !DILocation(line: 0, scope: !8530, inlinedAt: !8537)
!8537 = distinct !DILocation(line: 499, column: 3, scope: !8513)
!8538 = !DILocation(line: 531, column: 4, scope: !8530, inlinedAt: !8537)
!8539 = !{i64 2860598}
!8540 = distinct !{!8540, !8515, !8515}
!8541 = !DILocation(line: 500, column: 1, scope: !8508)
!8542 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8063, file: !8063, line: 850, type: !8231, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8543)
!8543 = !{!8544, !8545, !8546, !8547}
!8544 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8542, file: !8063, line: 850, type: !1220)
!8545 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8542, file: !8063, line: 850, type: !121)
!8546 = !DILocalVariable(name: "Parity", arg: 3, scope: !8542, file: !8063, line: 850, type: !121)
!8547 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8542, file: !8063, line: 851, type: !121)
!8548 = !DILocation(line: 0, scope: !8542)
!8549 = !DILocation(line: 853, column: 3, scope: !8542)
!8550 = !DILocation(line: 854, column: 3, scope: !8542)
!8551 = !DILocation(line: 855, column: 1, scope: !8542)
!8552 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8063, file: !8063, line: 1337, type: !8126, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8552, file: !8063, line: 1337, type: !1220)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 1339, column: 3, scope: !8552)
!8557 = !DILocation(line: 1340, column: 1, scope: !8552)
!8558 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1303, file: !1303, line: 316, type: !8559, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8561)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!103, !1351, !1306}
!8561 = !{!8562, !8563, !8564}
!8562 = !DILocalVariable(name: "config", arg: 1, scope: !8558, file: !1303, line: 317, type: !1351)
!8563 = !DILocalVariable(name: "state", arg: 2, scope: !8558, file: !1303, line: 318, type: !1306)
!8564 = !DILocalVariable(name: "reg", scope: !8558, file: !1303, line: 320, type: !22)
!8565 = !DILocation(line: 0, scope: !8558)
!8566 = !DILocation(line: 329, column: 39, scope: !8558)
!8567 = !DILocation(line: 329, column: 52, scope: !8558)
!8568 = !DILocation(line: 329, column: 9, scope: !8558)
!8569 = !DILocation(line: 329, column: 2, scope: !8558)
!8570 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8470, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8571)
!8571 = !{!8572}
!8572 = !DILocalVariable(name: "dev", arg: 1, scope: !8570, file: !141, line: 730, type: !1179)
!8573 = !DILocation(line: 0, scope: !8570)
!8574 = !DILocation(line: 732, column: 9, scope: !8570)
!8575 = !DILocation(line: 732, column: 2, scope: !8570)
!8576 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1432, file: !1432, line: 270, type: !1438, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8577)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "dev", arg: 1, scope: !8576, file: !1432, line: 270, type: !1440)
!8579 = !DILocation(line: 0, scope: !8576)
!8580 = !DILocation(line: 274, column: 2, scope: !8576)
!8581 = !DILocation(line: 275, column: 12, scope: !8576)
!8582 = !DILocation(line: 276, column: 15, scope: !8576)
!8583 = !DILocation(line: 277, column: 16, scope: !8576)
!8584 = !DILocation(line: 278, column: 15, scope: !8576)
!8585 = !DILocation(line: 279, column: 16, scope: !8576)
!8586 = !DILocation(line: 282, column: 2, scope: !8576)
!8587 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4731, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8588)
!8588 = !{!8589, !8590}
!8589 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8587, file: !356, line: 1814, type: !592)
!8590 = !DILocalVariable(name: "priority", arg: 2, scope: !8587, file: !356, line: 1814, type: !121)
!8591 = !DILocation(line: 0, scope: !8587)
!8592 = !DILocation(line: 1822, column: 46, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !356, line: 1821, column: 3)
!8594 = distinct !DILexicalBlock(scope: !8587, file: !356, line: 1816, column: 7)
!8595 = !DILocation(line: 1824, column: 1, scope: !8587)
!8596 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1432, file: !1432, line: 118, type: !4634, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8597)
!8597 = !{!8598, !8599}
!8598 = !DILocalVariable(name: "arg", arg: 1, scope: !8596, file: !1432, line: 118, type: !102)
!8599 = !DILocalVariable(name: "dticks", scope: !8596, file: !1432, line: 121, type: !121)
!8600 = !DILocation(line: 0, scope: !8596)
!8601 = !DILocation(line: 124, column: 2, scope: !8596)
!8602 = !DILocation(line: 129, column: 17, scope: !8596)
!8603 = !DILocation(line: 129, column: 14, scope: !8596)
!8604 = !DILocation(line: 130, column: 15, scope: !8596)
!8605 = !DILocation(line: 145, column: 27, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !1432, line: 132, column: 16)
!8607 = distinct !DILexicalBlock(scope: !8596, file: !1432, line: 132, column: 6)
!8608 = !DILocation(line: 145, column: 25, scope: !8606)
!8609 = !DILocation(line: 145, column: 45, scope: !8606)
!8610 = !DILocation(line: 146, column: 30, scope: !8606)
!8611 = !DILocation(line: 146, column: 20, scope: !8606)
!8612 = !DILocation(line: 147, column: 3, scope: !8606)
!8613 = !DILocation(line: 151, column: 2, scope: !8596)
!8614 = !DILocation(line: 152, column: 1, scope: !8596)
!8615 = distinct !DISubprogram(name: "elapsed", scope: !1432, file: !1432, line: 85, type: !4778, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8616)
!8616 = !{!8617, !8618, !8619}
!8617 = !DILocalVariable(name: "val1", scope: !8615, file: !1432, line: 87, type: !121)
!8618 = !DILocalVariable(name: "ctrl", scope: !8615, file: !1432, line: 88, type: !121)
!8619 = !DILocalVariable(name: "val2", scope: !8615, file: !1432, line: 89, type: !121)
!8620 = !DILocation(line: 87, column: 27, scope: !8615)
!8621 = !DILocation(line: 0, scope: !8615)
!8622 = !DILocation(line: 88, column: 27, scope: !8615)
!8623 = !DILocation(line: 89, column: 27, scope: !8615)
!8624 = !DILocation(line: 105, column: 12, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8615, file: !1432, line: 105, column: 6)
!8626 = !DILocation(line: 106, column: 6, scope: !8625)
!8627 = !DILocation(line: 107, column: 16, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8625, file: !1432, line: 106, column: 24)
!8629 = !DILocation(line: 111, column: 18, scope: !8628)
!8630 = !DILocation(line: 112, column: 2, scope: !8628)
!8631 = !DILocation(line: 114, column: 20, scope: !8615)
!8632 = !DILocation(line: 114, column: 30, scope: !8615)
!8633 = !DILocation(line: 114, column: 28, scope: !8615)
!8634 = !DILocation(line: 114, column: 2, scope: !8615)
!8635 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1432, file: !1432, line: 154, type: !8636, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8638)
!8636 = !DISubroutineType(types: !8637)
!8637 = !{null, !566, !157}
!8638 = !{!8639, !8640, !8641, !8642, !8643, !8644, !8645, !8650, !8651}
!8639 = !DILocalVariable(name: "ticks", arg: 1, scope: !8635, file: !1432, line: 154, type: !566)
!8640 = !DILocalVariable(name: "idle", arg: 2, scope: !8635, file: !1432, line: 154, type: !157)
!8641 = !DILocalVariable(name: "delay", scope: !8635, file: !1432, line: 169, type: !121)
!8642 = !DILocalVariable(name: "val1", scope: !8635, file: !1432, line: 170, type: !121)
!8643 = !DILocalVariable(name: "val2", scope: !8635, file: !1432, line: 170, type: !121)
!8644 = !DILocalVariable(name: "last_load_", scope: !8635, file: !1432, line: 171, type: !121)
!8645 = !DILocalVariable(name: "key", scope: !8635, file: !1432, line: 176, type: !8646)
!8646 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !8647)
!8647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !8648)
!8648 = !{!8649}
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8647, file: !321, line: 33, baseType: !103, size: 32)
!8650 = !DILocalVariable(name: "pending", scope: !8635, file: !1432, line: 178, type: !121)
!8651 = !DILocalVariable(name: "unannounced", scope: !8635, file: !1432, line: 185, type: !121)
!8652 = !DILocation(line: 0, scope: !8635)
!8653 = !DILocation(line: 162, column: 49, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8635, file: !1432, line: 162, column: 6)
!8655 = !DILocation(line: 163, column: 17, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8654, file: !1432, line: 162, column: 78)
!8657 = !DILocation(line: 164, column: 13, scope: !8656)
!8658 = !DILocation(line: 165, column: 3, scope: !8656)
!8659 = !DILocation(line: 171, column: 24, scope: !8635)
!8660 = !DILocation(line: 173, column: 10, scope: !8635)
!8661 = !DILocation(line: 174, column: 10, scope: !8635)
!8662 = !DILocalVariable(name: "l", arg: 1, scope: !8663, file: !321, line: 136, type: !8666)
!8663 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !8664, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8667)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!8646, !8666}
!8666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!8667 = !{!8662, !8668}
!8668 = !DILocalVariable(name: "k", scope: !8663, file: !321, line: 139, type: !8646)
!8669 = !DILocation(line: 0, scope: !8663, inlinedAt: !8670)
!8670 = distinct !DILocation(line: 176, column: 25, scope: !8635)
!8671 = !DILocation(line: 55, column: 2, scope: !8672, inlinedAt: !8676)
!8672 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8673)
!8673 = !{!8674, !8675}
!8674 = !DILocalVariable(name: "key", scope: !8672, file: !4523, line: 44, type: !32)
!8675 = !DILocalVariable(name: "tmp", scope: !8672, file: !4523, line: 53, type: !32)
!8676 = distinct !DILocation(line: 145, column: 10, scope: !8663, inlinedAt: !8670)
!8677 = !{i64 1920954}
!8678 = !DILocation(line: 0, scope: !8672, inlinedAt: !8676)
!8679 = !DILocation(line: 178, column: 21, scope: !8635)
!8680 = !DILocation(line: 180, column: 18, scope: !8635)
!8681 = !DILocation(line: 182, column: 14, scope: !8635)
!8682 = !DILocation(line: 183, column: 15, scope: !8635)
!8683 = !DILocation(line: 185, column: 39, scope: !8635)
!8684 = !DILocation(line: 185, column: 37, scope: !8635)
!8685 = !DILocation(line: 187, column: 27, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8635, file: !1432, line: 187, column: 6)
!8687 = !DILocation(line: 187, column: 6, scope: !8635)
!8688 = !DILocation(line: 202, column: 27, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8686, file: !1432, line: 195, column: 9)
!8690 = !DILocation(line: 202, column: 48, scope: !8689)
!8691 = !DILocation(line: 203, column: 9, scope: !8689)
!8692 = !DILocation(line: 204, column: 11, scope: !8689)
!8693 = !DILocation(line: 205, column: 13, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8689, file: !1432, line: 205, column: 7)
!8695 = !DILocation(line: 205, column: 7, scope: !8689)
!8696 = !DILocation(line: 0, scope: !8686)
!8697 = !DILocation(line: 212, column: 18, scope: !8635)
!8698 = !DILocation(line: 214, column: 28, scope: !8635)
!8699 = !DILocation(line: 214, column: 16, scope: !8635)
!8700 = !DILocation(line: 215, column: 15, scope: !8635)
!8701 = !DILocation(line: 227, column: 11, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8635, file: !1432, line: 227, column: 6)
!8703 = !DILocation(line: 227, column: 6, scope: !8635)
!8704 = !DILocation(line: 228, column: 15, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8702, file: !1432, line: 227, column: 19)
!8706 = !DILocation(line: 228, column: 38, scope: !8705)
!8707 = !DILocation(line: 228, column: 24, scope: !8705)
!8708 = !DILocation(line: 229, column: 2, scope: !8705)
!8709 = !DILocation(line: 230, column: 24, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8702, file: !1432, line: 229, column: 9)
!8711 = !DILocation(line: 230, column: 15, scope: !8710)
!8712 = !DILocation(line: 0, scope: !8702)
!8713 = !DILocalVariable(name: "key", arg: 2, scope: !8714, file: !321, line: 190, type: !8646)
!8714 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !8715, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8717)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{null, !8666, !8646}
!8717 = !{!8718, !8713}
!8718 = !DILocalVariable(name: "l", arg: 1, scope: !8714, file: !321, line: 189, type: !8666)
!8719 = !DILocation(line: 0, scope: !8714, inlinedAt: !8720)
!8720 = distinct !DILocation(line: 232, column: 2, scope: !8635)
!8721 = !DILocalVariable(name: "key", arg: 1, scope: !8722, file: !4523, line: 84, type: !32)
!8722 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8723)
!8723 = !{!8721}
!8724 = !DILocation(line: 0, scope: !8722, inlinedAt: !8725)
!8725 = distinct !DILocation(line: 215, column: 2, scope: !8714, inlinedAt: !8720)
!8726 = !DILocation(line: 95, column: 2, scope: !8722, inlinedAt: !8725)
!8727 = !{i64 1921771}
!8728 = !DILocation(line: 234, column: 1, scope: !8635)
!8729 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1432, file: !1432, line: 236, type: !4778, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8730)
!8730 = !{!8731, !8732}
!8731 = !DILocalVariable(name: "key", scope: !8729, file: !1432, line: 242, type: !8646)
!8732 = !DILocalVariable(name: "cyc", scope: !8729, file: !1432, line: 243, type: !121)
!8733 = !DILocation(line: 0, scope: !8663, inlinedAt: !8734)
!8734 = distinct !DILocation(line: 242, column: 25, scope: !8729)
!8735 = !DILocation(line: 55, column: 2, scope: !8672, inlinedAt: !8736)
!8736 = distinct !DILocation(line: 145, column: 10, scope: !8663, inlinedAt: !8734)
!8737 = !DILocation(line: 0, scope: !8672, inlinedAt: !8736)
!8738 = !DILocation(line: 0, scope: !8729)
!8739 = !DILocation(line: 243, column: 17, scope: !8729)
!8740 = !DILocation(line: 243, column: 29, scope: !8729)
!8741 = !DILocation(line: 243, column: 27, scope: !8729)
!8742 = !DILocation(line: 243, column: 43, scope: !8729)
!8743 = !DILocation(line: 243, column: 41, scope: !8729)
!8744 = !DILocation(line: 0, scope: !8714, inlinedAt: !8745)
!8745 = distinct !DILocation(line: 245, column: 2, scope: !8729)
!8746 = !DILocation(line: 0, scope: !8722, inlinedAt: !8747)
!8747 = distinct !DILocation(line: 215, column: 2, scope: !8714, inlinedAt: !8745)
!8748 = !DILocation(line: 95, column: 2, scope: !8722, inlinedAt: !8747)
!8749 = !DILocation(line: 246, column: 13, scope: !8729)
!8750 = !DILocation(line: 246, column: 2, scope: !8729)
!8751 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1432, file: !1432, line: 249, type: !4778, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !8752)
!8752 = !{!8753, !8754}
!8753 = !DILocalVariable(name: "key", scope: !8751, file: !1432, line: 251, type: !8646)
!8754 = !DILocalVariable(name: "ret", scope: !8751, file: !1432, line: 252, type: !121)
!8755 = !DILocation(line: 0, scope: !8663, inlinedAt: !8756)
!8756 = distinct !DILocation(line: 251, column: 25, scope: !8751)
!8757 = !DILocation(line: 55, column: 2, scope: !8672, inlinedAt: !8758)
!8758 = distinct !DILocation(line: 145, column: 10, scope: !8663, inlinedAt: !8756)
!8759 = !DILocation(line: 0, scope: !8672, inlinedAt: !8758)
!8760 = !DILocation(line: 0, scope: !8751)
!8761 = !DILocation(line: 252, column: 17, scope: !8751)
!8762 = !DILocation(line: 252, column: 29, scope: !8751)
!8763 = !DILocation(line: 252, column: 27, scope: !8751)
!8764 = !DILocation(line: 0, scope: !8714, inlinedAt: !8765)
!8765 = distinct !DILocation(line: 254, column: 2, scope: !8751)
!8766 = !DILocation(line: 0, scope: !8722, inlinedAt: !8767)
!8767 = distinct !DILocation(line: 215, column: 2, scope: !8714, inlinedAt: !8765)
!8768 = !DILocation(line: 95, column: 2, scope: !8722, inlinedAt: !8767)
!8769 = !DILocation(line: 255, column: 2, scope: !8751)
!8770 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1432, file: !1432, line: 258, type: !2738, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !322)
!8771 = !DILocation(line: 260, column: 6, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8770, file: !1432, line: 260, column: 6)
!8773 = !DILocation(line: 260, column: 16, scope: !8772)
!8774 = !DILocation(line: 260, column: 6, scope: !8770)
!8775 = !DILocation(line: 261, column: 17, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8772, file: !1432, line: 260, column: 34)
!8777 = !DILocation(line: 262, column: 2, scope: !8776)
!8778 = !DILocation(line: 263, column: 1, scope: !8770)
!8779 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1432, file: !1432, line: 265, type: !2738, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !322)
!8780 = !DILocation(line: 267, column: 16, scope: !8779)
!8781 = !DILocation(line: 268, column: 1, scope: !8779)
!8782 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8783, file: !8783, line: 9, type: !8784, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !8807)
!8783 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8784 = !DISubroutineType(types: !8785)
!8785 = !{!103, !8786, !154, !8806}
!8786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8787, size: 32)
!8787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8788)
!8788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1303, line: 60, size: 64, elements: !8789)
!8789 = !{!8790, !8805}
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8788, file: !1303, line: 69, baseType: !8791, size: 32)
!8791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8792, size: 32)
!8792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8793)
!8793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1303, line: 50, size: 64, elements: !8794)
!8794 = !{!8795, !8803, !8804}
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8793, file: !1303, line: 52, baseType: !8796, size: 32)
!8796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8797, size: 32)
!8797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8798)
!8798 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !8799)
!8799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !8800)
!8800 = !{!8801, !8802}
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8799, file: !1314, line: 34, baseType: !121, size: 32)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8799, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8793, file: !1303, line: 54, baseType: !154, size: 8, offset: 32)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8793, file: !1303, line: 56, baseType: !154, size: 8, offset: 40)
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8788, file: !1303, line: 71, baseType: !154, size: 8, offset: 32)
!8806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8791, size: 32)
!8807 = !{!8808, !8809, !8810}
!8808 = !DILocalVariable(name: "config", arg: 1, scope: !8782, file: !8783, line: 9, type: !8786)
!8809 = !DILocalVariable(name: "id", arg: 2, scope: !8782, file: !8783, line: 9, type: !154)
!8810 = !DILocalVariable(name: "state", arg: 3, scope: !8782, file: !8783, line: 10, type: !8806)
!8811 = !DILocation(line: 0, scope: !8782)
!8812 = !DILocation(line: 12, column: 20, scope: !8782)
!8813 = !DILocation(line: 13, column: 27, scope: !8782)
!8814 = !DILocation(line: 13, column: 42, scope: !8782)
!8815 = !DILocation(line: 13, column: 19, scope: !8782)
!8816 = !DILocation(line: 13, column: 16, scope: !8782)
!8817 = !DILocation(line: 13, column: 2, scope: !8782)
!8818 = distinct !{!8818, !8817, !8819}
!8819 = !DILocation(line: 19, column: 2, scope: !8782)
!8820 = !DILocation(line: 14, column: 23, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !8783, line: 14, column: 7)
!8822 = distinct !DILexicalBlock(scope: !8782, file: !8783, line: 13, column: 54)
!8823 = !DILocation(line: 14, column: 10, scope: !8821)
!8824 = !DILocation(line: 18, column: 11, scope: !8822)
!8825 = !DILocation(line: 14, column: 7, scope: !8822)
!8826 = !DILocation(line: 22, column: 1, scope: !8782)
!8827 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1549, file: !1549, line: 193, type: !8828, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !8837)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!103, !8830, !154, !22}
!8830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8831, size: 32)
!8831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8832)
!8832 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !8833)
!8833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !8834)
!8834 = !{!8835, !8836}
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8833, file: !1314, line: 34, baseType: !121, size: 32)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8833, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!8837 = !{!8838, !8839, !8840, !8841, !8842, !8843, !8844, !8845, !8847}
!8838 = !DILocalVariable(name: "pins", arg: 1, scope: !8827, file: !1549, line: 193, type: !8830)
!8839 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8827, file: !1549, line: 193, type: !154)
!8840 = !DILocalVariable(name: "reg", arg: 3, scope: !8827, file: !1549, line: 194, type: !22)
!8841 = !DILocalVariable(name: "pin", scope: !8827, file: !1549, line: 196, type: !121)
!8842 = !DILocalVariable(name: "mux", scope: !8827, file: !1549, line: 196, type: !121)
!8843 = !DILocalVariable(name: "pin_cgf", scope: !8827, file: !1549, line: 197, type: !121)
!8844 = !DILocalVariable(name: "ret", scope: !8827, file: !1549, line: 198, type: !103)
!8845 = !DILocalVariable(name: "i", scope: !8846, file: !1549, line: 209, type: !154)
!8846 = distinct !DILexicalBlock(scope: !8827, file: !1549, line: 209, column: 2)
!8847 = !DILocalVariable(name: "gpio_out", scope: !8848, file: !1549, line: 239, type: !121)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !1549, line: 238, column: 55)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !1549, line: 238, column: 14)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !1549, line: 236, column: 14)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !1549, line: 234, column: 7)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !1549, line: 209, column: 41)
!8853 = distinct !DILexicalBlock(scope: !8846, file: !1549, line: 209, column: 2)
!8854 = !DILocation(line: 0, scope: !8827)
!8855 = !DILocation(line: 0, scope: !8846)
!8856 = !DILocation(line: 209, column: 25, scope: !8853)
!8857 = !DILocation(line: 209, column: 2, scope: !8846)
!8858 = distinct !{!8858, !8857, !8859}
!8859 = !DILocation(line: 259, column: 2, scope: !8846)
!8860 = !DILocation(line: 210, column: 17, scope: !8852)
!8861 = !DILocation(line: 234, column: 7, scope: !8851)
!8862 = !DILocation(line: 234, column: 33, scope: !8851)
!8863 = !DILocation(line: 234, column: 7, scope: !8852)
!8864 = !DILocation(line: 235, column: 22, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8851, file: !1549, line: 234, column: 49)
!8866 = !DILocation(line: 235, column: 29, scope: !8865)
!8867 = !DILocation(line: 236, column: 3, scope: !8865)
!8868 = !DILocation(line: 236, column: 14, scope: !8851)
!8869 = !DILocation(line: 239, column: 32, scope: !8848)
!8870 = !DILocation(line: 0, scope: !8848)
!8871 = !DILocation(line: 241, column: 8, scope: !8848)
!8872 = !DILocation(line: 246, column: 3, scope: !8848)
!8873 = !DILocation(line: 252, column: 9, scope: !8852)
!8874 = !DILocation(line: 255, column: 9, scope: !8852)
!8875 = !DILocation(line: 256, column: 11, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8852, file: !1549, line: 256, column: 7)
!8877 = !DILocation(line: 209, column: 37, scope: !8853)
!8878 = !DILocation(line: 256, column: 7, scope: !8852)
!8879 = !DILocation(line: 262, column: 1, scope: !8827)
!8880 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1549, file: !1549, line: 176, type: !8881, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !8883)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{!103, !121, !121, !121}
!8883 = !{!8884, !8885, !8886, !8887}
!8884 = !DILocalVariable(name: "pin", arg: 1, scope: !8880, file: !1549, line: 176, type: !121)
!8885 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !8880, file: !1549, line: 176, type: !121)
!8886 = !DILocalVariable(name: "pin_func", arg: 3, scope: !8880, file: !1549, line: 176, type: !121)
!8887 = !DILocalVariable(name: "port_device", scope: !8880, file: !1549, line: 178, type: !1479)
!8888 = !DILocation(line: 0, scope: !8880)
!8889 = !DILocation(line: 180, column: 22, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8880, file: !1549, line: 180, column: 6)
!8891 = !DILocation(line: 180, column: 6, scope: !8880)
!8892 = !DILocation(line: 180, column: 6, scope: !8890)
!8893 = !DILocation(line: 184, column: 16, scope: !8880)
!8894 = !DILocation(line: 186, column: 19, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8880, file: !1549, line: 186, column: 6)
!8896 = !DILocation(line: 186, column: 28, scope: !8895)
!8897 = !DILocation(line: 186, column: 33, scope: !8895)
!8898 = !DILocation(line: 186, column: 6, scope: !8880)
!8899 = !DILocation(line: 190, column: 43, scope: !8880)
!8900 = !DILocation(line: 190, column: 9, scope: !8880)
!8901 = !DILocation(line: 190, column: 2, scope: !8880)
!8902 = !DILocation(line: 191, column: 1, scope: !8880)
!8903 = distinct !DISubprogram(name: "device_is_ready", scope: !6892, file: !6892, line: 47, type: !8904, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !8906)
!8904 = !DISubroutineType(types: !8905)
!8905 = !{!157, !1479}
!8906 = !{!8907}
!8907 = !DILocalVariable(name: "dev", arg: 1, scope: !8903, file: !6892, line: 47, type: !1479)
!8908 = !DILocation(line: 0, scope: !8903)
!8909 = !DILocation(line: 55, column: 2, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8903, file: !6892, line: 55, column: 2)
!8911 = !{i64 2149154963}
!8912 = !DILocation(line: 56, column: 9, scope: !8903)
!8913 = !DILocation(line: 56, column: 2, scope: !8903)
!8914 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8904, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !8915)
!8915 = !{!8916}
!8916 = !DILocalVariable(name: "dev", arg: 1, scope: !8914, file: !141, line: 730, type: !1479)
!8917 = !DILocation(line: 0, scope: !8914)
!8918 = !DILocation(line: 732, column: 9, scope: !8914)
!8919 = !DILocation(line: 732, column: 2, scope: !8914)
!8920 = distinct !DISubprogram(name: "SystemInit", scope: !1599, file: !1599, line: 167, type: !2738, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1557, retainedNodes: !322)
!8921 = !DILocation(line: 182, column: 1, scope: !8920)
!8922 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1599, file: !1599, line: 220, type: !2738, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1557, retainedNodes: !8923)
!8923 = !{!8924, !8925, !8926, !8927, !8928}
!8924 = !DILocalVariable(name: "tmp", scope: !8922, file: !1599, line: 222, type: !121)
!8925 = !DILocalVariable(name: "pllvco", scope: !8922, file: !1599, line: 222, type: !121)
!8926 = !DILocalVariable(name: "pllp", scope: !8922, file: !1599, line: 222, type: !121)
!8927 = !DILocalVariable(name: "pllsource", scope: !8922, file: !1599, line: 222, type: !121)
!8928 = !DILocalVariable(name: "pllm", scope: !8922, file: !1599, line: 222, type: !121)
!8929 = !DILocation(line: 0, scope: !8922)
!8930 = !DILocation(line: 225, column: 14, scope: !8922)
!8931 = !DILocation(line: 225, column: 19, scope: !8922)
!8932 = !DILocation(line: 227, column: 3, scope: !8922)
!8933 = !DILocation(line: 234, column: 7, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8922, file: !1599, line: 228, column: 3)
!8935 = !DILocation(line: 240, column: 25, scope: !8934)
!8936 = !DILocation(line: 241, column: 19, scope: !8934)
!8937 = !DILocation(line: 241, column: 27, scope: !8934)
!8938 = !DILocation(line: 243, column: 21, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8934, file: !1599, line: 243, column: 11)
!8940 = !DILocation(line: 0, scope: !8939)
!8941 = !DILocation(line: 254, column: 22, scope: !8934)
!8942 = !DILocation(line: 254, column: 62, scope: !8934)
!8943 = !DILocation(line: 255, column: 31, scope: !8934)
!8944 = !DILocation(line: 256, column: 7, scope: !8934)
!8945 = !DILocation(line: 0, scope: !8934)
!8946 = !DILocation(line: 263, column: 30, scope: !8922)
!8947 = !DILocation(line: 263, column: 52, scope: !8922)
!8948 = !DILocation(line: 263, column: 9, scope: !8922)
!8949 = !DILocation(line: 265, column: 19, scope: !8922)
!8950 = !DILocation(line: 266, column: 1, scope: !8922)
!8951 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !8952, file: !8952, line: 200, type: !8953, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!8952 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8953 = !DISubroutineType(types: !8954)
!8954 = !{!8955}
!8955 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2551, line: 44, baseType: !2550)
!8956 = !DILocation(line: 202, column: 3, scope: !8951)
!8957 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !8952, file: !8952, line: 219, type: !8958, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !8982)
!8958 = !DISubroutineType(types: !8959)
!8959 = !{!8955, !8960}
!8960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8961, size: 32)
!8961 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !8962, line: 70, baseType: !8963)
!8962 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8962, line: 49, size: 384, elements: !8964)
!8964 = !{!8965, !8966, !8967, !8968, !8969, !8970, !8971}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !8963, file: !8962, line: 51, baseType: !121, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !8963, file: !8962, line: 54, baseType: !121, size: 32, offset: 32)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !8963, file: !8962, line: 57, baseType: !121, size: 32, offset: 64)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !8963, file: !8962, line: 60, baseType: !121, size: 32, offset: 96)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !8963, file: !8962, line: 63, baseType: !121, size: 32, offset: 128)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !8963, file: !8962, line: 66, baseType: !121, size: 32, offset: 160)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !8963, file: !8962, line: 69, baseType: !8972, size: 192, offset: 192)
!8972 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !8973, line: 73, baseType: !8974)
!8973 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8973, line: 45, size: 192, elements: !8975)
!8975 = !{!8976, !8977, !8978, !8979, !8980, !8981}
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !8974, file: !8973, line: 47, baseType: !121, size: 32)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !8974, file: !8973, line: 50, baseType: !121, size: 32, offset: 32)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !8974, file: !8973, line: 53, baseType: !121, size: 32, offset: 64)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !8974, file: !8973, line: 56, baseType: !121, size: 32, offset: 96)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !8974, file: !8973, line: 60, baseType: !121, size: 32, offset: 128)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !8974, file: !8973, line: 63, baseType: !121, size: 32, offset: 160)
!8982 = !{!8983, !8984, !8985, !8986, !8990}
!8983 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !8957, file: !8952, line: 219, type: !8960)
!8984 = !DILocalVariable(name: "tickstart", scope: !8957, file: !8952, line: 221, type: !121)
!8985 = !DILocalVariable(name: "pll_config", scope: !8957, file: !8952, line: 221, type: !121)
!8986 = !DILocalVariable(name: "pwrclkchanged", scope: !8987, file: !8952, line: 391, type: !8989)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !8952, line: 390, column: 3)
!8988 = distinct !DILexicalBlock(scope: !8957, file: !8952, line: 389, column: 6)
!8989 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !631, line: 188, baseType: !2557)
!8990 = !DILocalVariable(name: "tmpreg", scope: !8991, file: !8952, line: 400, type: !120)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !8952, line: 400, column: 7)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !8952, line: 399, column: 5)
!8993 = distinct !DILexicalBlock(scope: !8987, file: !8952, line: 398, column: 8)
!8994 = !DILocation(line: 0, scope: !8957)
!8995 = !DILocation(line: 224, column: 24, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8957, file: !8952, line: 224, column: 6)
!8997 = !DILocation(line: 224, column: 6, scope: !8957)
!8998 = !DILocation(line: 232, column: 27, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8957, file: !8952, line: 232, column: 6)
!9000 = !DILocation(line: 232, column: 43, scope: !8999)
!9001 = !DILocation(line: 232, column: 69, scope: !8999)
!9002 = !DILocation(line: 232, column: 6, scope: !8957)
!9003 = !DILocation(line: 237, column: 9, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !8952, line: 237, column: 8)
!9005 = distinct !DILexicalBlock(scope: !8999, file: !8952, line: 233, column: 3)
!9006 = !DILocation(line: 237, column: 39, scope: !9004)
!9007 = !DILocation(line: 237, column: 60, scope: !9004)
!9008 = !DILocation(line: 238, column: 9, scope: !9004)
!9009 = !DILocation(line: 238, column: 39, scope: !9004)
!9010 = !DILocation(line: 238, column: 60, scope: !9004)
!9011 = !DILocation(line: 238, column: 70, scope: !9004)
!9012 = !DILocation(line: 238, column: 78, scope: !9004)
!9013 = !DILocation(line: 238, column: 100, scope: !9004)
!9014 = !DILocation(line: 237, column: 8, scope: !9005)
!9015 = !DILocation(line: 240, column: 11, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !8952, line: 240, column: 10)
!9017 = distinct !DILexicalBlock(scope: !9004, file: !8952, line: 239, column: 5)
!9018 = !DILocation(line: 240, column: 57, scope: !9016)
!9019 = !DILocation(line: 240, column: 80, scope: !9016)
!9020 = !DILocation(line: 240, column: 89, scope: !9016)
!9021 = !DILocation(line: 240, column: 10, scope: !9017)
!9022 = !DILocation(line: 248, column: 7, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !8952, line: 248, column: 7)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8952, line: 248, column: 7)
!9025 = distinct !DILexicalBlock(scope: !9004, file: !8952, line: 246, column: 5)
!9026 = !DILocation(line: 248, column: 7, scope: !9024)
!9027 = !DILocation(line: 248, column: 7, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9023, file: !8952, line: 248, column: 7)
!9029 = !DILocation(line: 248, column: 7, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !8952, line: 248, column: 7)
!9031 = distinct !DILexicalBlock(scope: !9023, file: !8952, line: 248, column: 7)
!9032 = !DILocation(line: 248, column: 7, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9031, file: !8952, line: 248, column: 7)
!9034 = !DILocation(line: 0, scope: !9023)
!9035 = !DILocation(line: 251, column: 30, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9025, file: !8952, line: 251, column: 10)
!9037 = !DILocation(line: 251, column: 40, scope: !9036)
!9038 = !DILocation(line: 0, scope: !9036)
!9039 = !DILocation(line: 251, column: 10, scope: !9025)
!9040 = !DILocation(line: 257, column: 15, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9036, file: !8952, line: 252, column: 7)
!9042 = !DILocation(line: 257, column: 51, scope: !9041)
!9043 = !DILocation(line: 257, column: 9, scope: !9041)
!9044 = !DILocation(line: 259, column: 15, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !8952, line: 259, column: 14)
!9046 = distinct !DILexicalBlock(scope: !9041, file: !8952, line: 258, column: 9)
!9047 = !DILocation(line: 259, column: 29, scope: !9045)
!9048 = !DILocation(line: 259, column: 43, scope: !9045)
!9049 = !DILocation(line: 259, column: 14, scope: !9046)
!9050 = distinct !{!9050, !9043, !9051}
!9051 = !DILocation(line: 263, column: 9, scope: !9041)
!9052 = !DILocation(line: 271, column: 15, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9036, file: !8952, line: 266, column: 7)
!9054 = !DILocation(line: 271, column: 9, scope: !9053)
!9055 = !DILocation(line: 273, column: 15, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !8952, line: 273, column: 14)
!9057 = distinct !DILexicalBlock(scope: !9053, file: !8952, line: 272, column: 9)
!9058 = !DILocation(line: 273, column: 29, scope: !9056)
!9059 = !DILocation(line: 273, column: 43, scope: !9056)
!9060 = !DILocation(line: 273, column: 14, scope: !9057)
!9061 = distinct !{!9061, !9054, !9062}
!9062 = !DILocation(line: 277, column: 9, scope: !9053)
!9063 = !DILocation(line: 282, column: 27, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !8957, file: !8952, line: 282, column: 6)
!9065 = !DILocation(line: 282, column: 43, scope: !9064)
!9066 = !DILocation(line: 282, column: 69, scope: !9064)
!9067 = !DILocation(line: 282, column: 6, scope: !8957)
!9068 = !DILocation(line: 289, column: 9, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !8952, line: 289, column: 8)
!9070 = distinct !DILexicalBlock(scope: !9064, file: !8952, line: 283, column: 3)
!9071 = !DILocation(line: 289, column: 39, scope: !9069)
!9072 = !DILocation(line: 289, column: 60, scope: !9069)
!9073 = !DILocation(line: 290, column: 9, scope: !9069)
!9074 = !DILocation(line: 290, column: 39, scope: !9069)
!9075 = !DILocation(line: 290, column: 60, scope: !9069)
!9076 = !DILocation(line: 290, column: 70, scope: !9069)
!9077 = !DILocation(line: 290, column: 78, scope: !9069)
!9078 = !DILocation(line: 290, column: 100, scope: !9069)
!9079 = !DILocation(line: 289, column: 8, scope: !9070)
!9080 = !DILocation(line: 293, column: 11, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9082, file: !8952, line: 293, column: 10)
!9082 = distinct !DILexicalBlock(scope: !9069, file: !8952, line: 291, column: 5)
!9083 = !DILocation(line: 293, column: 57, scope: !9081)
!9084 = !DILocation(line: 293, column: 80, scope: !9081)
!9085 = !DILocation(line: 293, column: 89, scope: !9081)
!9086 = !DILocation(line: 293, column: 10, scope: !9082)
!9087 = !DILocation(line: 307, column: 30, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !8952, line: 307, column: 10)
!9089 = distinct !DILexicalBlock(scope: !9069, file: !8952, line: 305, column: 5)
!9090 = !DILocation(line: 307, column: 39, scope: !9088)
!9091 = !DILocation(line: 307, column: 10, scope: !9089)
!9092 = !DILocation(line: 310, column: 9, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9088, file: !8952, line: 308, column: 7)
!9094 = !DILocation(line: 313, column: 21, scope: !9093)
!9095 = !DILocation(line: 316, column: 9, scope: !9093)
!9096 = !DILocation(line: 316, column: 15, scope: !9093)
!9097 = !DILocation(line: 316, column: 51, scope: !9093)
!9098 = !DILocation(line: 318, column: 15, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !8952, line: 318, column: 14)
!9100 = distinct !DILexicalBlock(scope: !9093, file: !8952, line: 317, column: 9)
!9101 = !DILocation(line: 318, column: 29, scope: !9099)
!9102 = !DILocation(line: 318, column: 43, scope: !9099)
!9103 = !DILocation(line: 318, column: 14, scope: !9100)
!9104 = distinct !{!9104, !9095, !9105}
!9105 = !DILocation(line: 322, column: 9, scope: !9093)
!9106 = !DILocation(line: 330, column: 9, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9088, file: !8952, line: 328, column: 7)
!9108 = !DILocation(line: 333, column: 21, scope: !9107)
!9109 = !DILocation(line: 336, column: 9, scope: !9107)
!9110 = !DILocation(line: 336, column: 15, scope: !9107)
!9111 = !DILocation(line: 338, column: 15, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !8952, line: 338, column: 14)
!9113 = distinct !DILexicalBlock(scope: !9107, file: !8952, line: 337, column: 9)
!9114 = !DILocation(line: 338, column: 29, scope: !9112)
!9115 = !DILocation(line: 338, column: 43, scope: !9112)
!9116 = !DILocation(line: 338, column: 14, scope: !9113)
!9117 = distinct !{!9117, !9109, !9118}
!9118 = !DILocation(line: 342, column: 9, scope: !9107)
!9119 = !DILocation(line: 0, scope: !9069)
!9120 = !DILocation(line: 347, column: 27, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !8957, file: !8952, line: 347, column: 6)
!9122 = !DILocation(line: 347, column: 43, scope: !9121)
!9123 = !DILocation(line: 347, column: 69, scope: !9121)
!9124 = !DILocation(line: 347, column: 6, scope: !8957)
!9125 = !DILocation(line: 353, column: 28, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !8952, line: 353, column: 8)
!9127 = distinct !DILexicalBlock(scope: !9121, file: !8952, line: 348, column: 3)
!9128 = !DILocation(line: 353, column: 37, scope: !9126)
!9129 = !DILocation(line: 353, column: 8, scope: !9127)
!9130 = !DILocation(line: 356, column: 7, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9126, file: !8952, line: 354, column: 5)
!9132 = !DILocation(line: 359, column: 19, scope: !9131)
!9133 = !DILocation(line: 362, column: 7, scope: !9131)
!9134 = !DILocation(line: 362, column: 13, scope: !9131)
!9135 = !DILocation(line: 362, column: 49, scope: !9131)
!9136 = !DILocation(line: 364, column: 13, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !8952, line: 364, column: 12)
!9138 = distinct !DILexicalBlock(scope: !9131, file: !8952, line: 363, column: 7)
!9139 = !DILocation(line: 364, column: 27, scope: !9137)
!9140 = !DILocation(line: 364, column: 41, scope: !9137)
!9141 = !DILocation(line: 364, column: 12, scope: !9138)
!9142 = distinct !{!9142, !9133, !9143}
!9143 = !DILocation(line: 368, column: 7, scope: !9131)
!9144 = !DILocation(line: 373, column: 7, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9126, file: !8952, line: 371, column: 5)
!9146 = !DILocation(line: 376, column: 19, scope: !9145)
!9147 = !DILocation(line: 379, column: 7, scope: !9145)
!9148 = !DILocation(line: 379, column: 13, scope: !9145)
!9149 = !DILocation(line: 381, column: 13, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !8952, line: 381, column: 12)
!9151 = distinct !DILexicalBlock(scope: !9145, file: !8952, line: 380, column: 7)
!9152 = !DILocation(line: 381, column: 27, scope: !9150)
!9153 = !DILocation(line: 381, column: 41, scope: !9150)
!9154 = !DILocation(line: 381, column: 12, scope: !9151)
!9155 = distinct !{!9155, !9147, !9156}
!9156 = !DILocation(line: 385, column: 7, scope: !9145)
!9157 = !DILocation(line: 389, column: 27, scope: !8988)
!9158 = !DILocation(line: 389, column: 43, scope: !8988)
!9159 = !DILocation(line: 389, column: 69, scope: !8988)
!9160 = !DILocation(line: 389, column: 6, scope: !8957)
!9161 = !DILocation(line: 0, scope: !8987)
!9162 = !DILocation(line: 398, column: 8, scope: !8993)
!9163 = !DILocation(line: 398, column: 8, scope: !8987)
!9164 = !DILocation(line: 400, column: 7, scope: !8991)
!9165 = !DILocation(line: 400, column: 7, scope: !8992)
!9166 = !DILocation(line: 402, column: 5, scope: !8992)
!9167 = !DILocation(line: 404, column: 8, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !8987, file: !8952, line: 404, column: 8)
!9169 = !DILocation(line: 404, column: 8, scope: !8987)
!9170 = !DILocation(line: 407, column: 7, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9168, file: !8952, line: 405, column: 5)
!9172 = !DILocation(line: 410, column: 19, scope: !9171)
!9173 = !DILocation(line: 412, column: 7, scope: !9171)
!9174 = !DILocation(line: 412, column: 13, scope: !9171)
!9175 = !DILocation(line: 414, column: 13, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !8952, line: 414, column: 12)
!9177 = distinct !DILexicalBlock(scope: !9171, file: !8952, line: 413, column: 7)
!9178 = !DILocation(line: 414, column: 27, scope: !9176)
!9179 = !DILocation(line: 414, column: 40, scope: !9176)
!9180 = !DILocation(line: 414, column: 12, scope: !9177)
!9181 = distinct !{!9181, !9173, !9182}
!9182 = !DILocation(line: 418, column: 7, scope: !9171)
!9183 = !DILocation(line: 422, column: 5, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !8952, line: 422, column: 5)
!9185 = distinct !DILexicalBlock(scope: !8987, file: !8952, line: 422, column: 5)
!9186 = !DILocation(line: 422, column: 5, scope: !9185)
!9187 = !DILocation(line: 422, column: 5, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9184, file: !8952, line: 422, column: 5)
!9189 = !DILocation(line: 422, column: 5, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9191, file: !8952, line: 422, column: 5)
!9191 = distinct !DILexicalBlock(scope: !9184, file: !8952, line: 422, column: 5)
!9192 = !DILocation(line: 422, column: 5, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9191, file: !8952, line: 422, column: 5)
!9194 = !DILocation(line: 0, scope: !9184)
!9195 = !DILocation(line: 424, column: 28, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !8987, file: !8952, line: 424, column: 8)
!9197 = !DILocation(line: 424, column: 38, scope: !9196)
!9198 = !DILocation(line: 0, scope: !9196)
!9199 = !DILocation(line: 424, column: 8, scope: !8987)
!9200 = !DILocation(line: 430, column: 13, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9196, file: !8952, line: 425, column: 5)
!9202 = !DILocation(line: 430, column: 49, scope: !9201)
!9203 = !DILocation(line: 430, column: 7, scope: !9201)
!9204 = !DILocation(line: 432, column: 13, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !8952, line: 432, column: 12)
!9206 = distinct !DILexicalBlock(scope: !9201, file: !8952, line: 431, column: 7)
!9207 = !DILocation(line: 432, column: 27, scope: !9205)
!9208 = !DILocation(line: 432, column: 41, scope: !9205)
!9209 = !DILocation(line: 432, column: 12, scope: !9206)
!9210 = distinct !{!9210, !9203, !9211}
!9211 = !DILocation(line: 436, column: 7, scope: !9201)
!9212 = !DILocation(line: 444, column: 13, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9196, file: !8952, line: 439, column: 5)
!9214 = !DILocation(line: 444, column: 7, scope: !9213)
!9215 = !DILocation(line: 446, column: 13, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !8952, line: 446, column: 12)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !8952, line: 445, column: 7)
!9218 = !DILocation(line: 446, column: 27, scope: !9216)
!9219 = !DILocation(line: 446, column: 41, scope: !9216)
!9220 = !DILocation(line: 446, column: 12, scope: !9217)
!9221 = distinct !{!9221, !9214, !9222}
!9222 = !DILocation(line: 450, column: 7, scope: !9213)
!9223 = !DILocation(line: 454, column: 8, scope: !8987)
!9224 = !DILocation(line: 456, column: 7, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !8952, line: 455, column: 5)
!9226 = distinct !DILexicalBlock(scope: !8987, file: !8952, line: 454, column: 8)
!9227 = !DILocation(line: 457, column: 5, scope: !9225)
!9228 = !DILocation(line: 462, column: 31, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !8957, file: !8952, line: 462, column: 7)
!9230 = !DILocation(line: 462, column: 41, scope: !9229)
!9231 = !DILocation(line: 462, column: 7, scope: !8957)
!9232 = !DILocation(line: 465, column: 8, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !8952, line: 465, column: 8)
!9234 = distinct !DILexicalBlock(scope: !9229, file: !8952, line: 463, column: 3)
!9235 = !DILocation(line: 465, column: 38, scope: !9233)
!9236 = !DILocation(line: 465, column: 8, scope: !9234)
!9237 = !DILocation(line: 467, column: 44, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !8952, line: 467, column: 10)
!9239 = distinct !DILexicalBlock(scope: !9233, file: !8952, line: 466, column: 5)
!9240 = !DILocation(line: 0, scope: !9238)
!9241 = !DILocation(line: 467, column: 10, scope: !9239)
!9242 = !DILocation(line: 483, column: 15, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9238, file: !8952, line: 468, column: 7)
!9244 = !DILocation(line: 483, column: 9, scope: !9243)
!9245 = !DILocation(line: 485, column: 15, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !8952, line: 485, column: 14)
!9247 = distinct !DILexicalBlock(scope: !9243, file: !8952, line: 484, column: 9)
!9248 = !DILocation(line: 485, column: 29, scope: !9246)
!9249 = !DILocation(line: 485, column: 43, scope: !9246)
!9250 = !DILocation(line: 485, column: 14, scope: !9247)
!9251 = distinct !{!9251, !9244, !9252}
!9252 = !DILocation(line: 489, column: 9, scope: !9243)
!9253 = !DILocation(line: 492, column: 9, scope: !9243)
!9254 = !DILocation(line: 498, column: 9, scope: !9243)
!9255 = !DILocation(line: 501, column: 21, scope: !9243)
!9256 = !DILocation(line: 504, column: 9, scope: !9243)
!9257 = !DILocation(line: 504, column: 15, scope: !9243)
!9258 = !DILocation(line: 504, column: 51, scope: !9243)
!9259 = !DILocation(line: 506, column: 15, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !8952, line: 506, column: 14)
!9261 = distinct !DILexicalBlock(scope: !9243, file: !8952, line: 505, column: 9)
!9262 = !DILocation(line: 506, column: 29, scope: !9260)
!9263 = !DILocation(line: 506, column: 43, scope: !9260)
!9264 = !DILocation(line: 506, column: 14, scope: !9261)
!9265 = distinct !{!9265, !9256, !9266}
!9266 = !DILocation(line: 510, column: 9, scope: !9243)
!9267 = !DILocation(line: 521, column: 15, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9238, file: !8952, line: 513, column: 7)
!9269 = !DILocation(line: 521, column: 9, scope: !9268)
!9270 = !DILocation(line: 523, column: 15, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9272, file: !8952, line: 523, column: 14)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !8952, line: 522, column: 9)
!9273 = !DILocation(line: 523, column: 29, scope: !9271)
!9274 = !DILocation(line: 523, column: 43, scope: !9271)
!9275 = !DILocation(line: 523, column: 14, scope: !9272)
!9276 = distinct !{!9276, !9269, !9277}
!9277 = !DILocation(line: 527, column: 9, scope: !9268)
!9278 = !DILocation(line: 533, column: 44, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9280, file: !8952, line: 533, column: 10)
!9280 = distinct !DILexicalBlock(scope: !9233, file: !8952, line: 531, column: 5)
!9281 = !DILocation(line: 533, column: 10, scope: !9280)
!9282 = !DILocation(line: 540, column: 27, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9279, file: !8952, line: 538, column: 7)
!9284 = !DILocation(line: 551, column: 14, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9283, file: !8952, line: 550, column: 13)
!9286 = !DILocation(line: 551, column: 81, scope: !9285)
!9287 = !DILocation(line: 551, column: 55, scope: !9285)
!9288 = !DILocation(line: 551, column: 92, scope: !9285)
!9289 = !DILocation(line: 552, column: 14, scope: !9285)
!9290 = !DILocation(line: 552, column: 80, scope: !9285)
!9291 = !DILocation(line: 552, column: 53, scope: !9285)
!9292 = !DILocation(line: 552, column: 111, scope: !9285)
!9293 = !DILocation(line: 553, column: 14, scope: !9285)
!9294 = !DILocation(line: 553, column: 80, scope: !9285)
!9295 = !DILocation(line: 553, column: 86, scope: !9285)
!9296 = !DILocation(line: 553, column: 53, scope: !9285)
!9297 = !DILocation(line: 553, column: 111, scope: !9285)
!9298 = !DILocation(line: 554, column: 14, scope: !9285)
!9299 = !DILocation(line: 554, column: 82, scope: !9285)
!9300 = !DILocation(line: 554, column: 101, scope: !9285)
!9301 = !DILocation(line: 554, column: 53, scope: !9285)
!9302 = !DILocation(line: 554, column: 126, scope: !9285)
!9303 = !DILocation(line: 555, column: 14, scope: !9285)
!9304 = !DILocation(line: 555, column: 80, scope: !9285)
!9305 = !DILocation(line: 555, column: 85, scope: !9285)
!9306 = !DILocation(line: 555, column: 53, scope: !9285)
!9307 = !DILocation(line: 550, column: 13, scope: !9283)
!9308 = !DILocation(line: 563, column: 3, scope: !8957)
!9309 = !DILocation(line: 564, column: 1, scope: !8957)
!9310 = !DISubprogram(name: "HAL_GetTick", scope: !9311, file: !9311, line: 234, type: !4778, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9311 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9312 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !8952, file: !8952, line: 591, type: !9313, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !9324)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!8955, !9315, !121}
!9315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9316, size: 32)
!9316 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !8962, line: 92, baseType: !9317)
!9317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8962, line: 75, size: 160, elements: !9318)
!9318 = !{!9319, !9320, !9321, !9322, !9323}
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !9317, file: !8962, line: 77, baseType: !121, size: 32)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !9317, file: !8962, line: 80, baseType: !121, size: 32, offset: 32)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9317, file: !8962, line: 83, baseType: !121, size: 32, offset: 64)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9317, file: !8962, line: 86, baseType: !121, size: 32, offset: 96)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9317, file: !8962, line: 89, baseType: !121, size: 32, offset: 128)
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9312, file: !8952, line: 591, type: !9315)
!9326 = !DILocalVariable(name: "FLatency", arg: 2, scope: !9312, file: !8952, line: 591, type: !121)
!9327 = !DILocalVariable(name: "tickstart", scope: !9312, file: !8952, line: 593, type: !121)
!9328 = !DILocation(line: 0, scope: !9312)
!9329 = !DILocation(line: 596, column: 24, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 596, column: 6)
!9331 = !DILocation(line: 596, column: 6, scope: !9312)
!9332 = !DILocation(line: 610, column: 17, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 610, column: 6)
!9334 = !DILocation(line: 610, column: 15, scope: !9333)
!9335 = !DILocation(line: 610, column: 6, scope: !9312)
!9336 = !DILocation(line: 613, column: 5, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9333, file: !8952, line: 611, column: 3)
!9338 = !DILocation(line: 617, column: 8, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9337, file: !8952, line: 617, column: 8)
!9340 = !DILocation(line: 617, column: 34, scope: !9339)
!9341 = !DILocation(line: 617, column: 8, scope: !9337)
!9342 = !DILocation(line: 624, column: 27, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 624, column: 6)
!9344 = !DILocation(line: 624, column: 38, scope: !9343)
!9345 = !DILocation(line: 624, column: 60, scope: !9343)
!9346 = !DILocation(line: 624, column: 6, scope: !9312)
!9347 = !DILocation(line: 628, column: 40, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9349, file: !8952, line: 628, column: 8)
!9349 = distinct !DILexicalBlock(scope: !9343, file: !8952, line: 625, column: 3)
!9350 = !DILocation(line: 628, column: 63, scope: !9348)
!9351 = !DILocation(line: 628, column: 8, scope: !9349)
!9352 = !DILocation(line: 630, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9348, file: !8952, line: 629, column: 5)
!9354 = !DILocation(line: 633, column: 29, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9349, file: !8952, line: 633, column: 8)
!9356 = !DILocation(line: 631, column: 5, scope: !9353)
!9357 = !DILocation(line: 633, column: 40, scope: !9355)
!9358 = !DILocation(line: 633, column: 63, scope: !9355)
!9359 = !DILocation(line: 633, column: 8, scope: !9349)
!9360 = !DILocation(line: 635, column: 7, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9355, file: !8952, line: 634, column: 5)
!9362 = !DILocation(line: 636, column: 5, scope: !9361)
!9363 = !DILocation(line: 639, column: 5, scope: !9349)
!9364 = !DILocation(line: 643, column: 27, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 643, column: 6)
!9366 = !DILocation(line: 640, column: 3, scope: !9349)
!9367 = !DILocation(line: 643, column: 38, scope: !9365)
!9368 = !DILocation(line: 643, column: 62, scope: !9365)
!9369 = !DILocation(line: 643, column: 6, scope: !9312)
!9370 = !DILocation(line: 648, column: 27, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !8952, line: 648, column: 8)
!9372 = distinct !DILexicalBlock(scope: !9365, file: !8952, line: 644, column: 3)
!9373 = !DILocation(line: 648, column: 8, scope: !9372)
!9374 = !DILocation(line: 651, column: 10, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9376, file: !8952, line: 651, column: 10)
!9376 = distinct !DILexicalBlock(scope: !9371, file: !8952, line: 649, column: 5)
!9377 = !DILocation(line: 651, column: 46, scope: !9375)
!9378 = !DILocation(line: 651, column: 10, scope: !9376)
!9379 = !DILocation(line: 661, column: 10, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !8952, line: 661, column: 10)
!9381 = distinct !DILexicalBlock(scope: !9382, file: !8952, line: 659, column: 5)
!9382 = distinct !DILexicalBlock(scope: !9371, file: !8952, line: 657, column: 13)
!9383 = !DILocation(line: 661, column: 46, scope: !9380)
!9384 = !DILocation(line: 661, column: 10, scope: !9381)
!9385 = !DILocation(line: 670, column: 10, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9387, file: !8952, line: 670, column: 10)
!9387 = distinct !DILexicalBlock(scope: !9382, file: !8952, line: 668, column: 5)
!9388 = !DILocation(line: 670, column: 46, scope: !9386)
!9389 = !DILocation(line: 670, column: 10, scope: !9387)
!9390 = !DILocation(line: 676, column: 5, scope: !9372)
!9391 = !DILocation(line: 679, column: 17, scope: !9372)
!9392 = !DILocation(line: 681, column: 5, scope: !9372)
!9393 = !DILocation(line: 681, column: 12, scope: !9372)
!9394 = !DILocation(line: 681, column: 65, scope: !9372)
!9395 = !DILocation(line: 681, column: 78, scope: !9372)
!9396 = !DILocation(line: 681, column: 42, scope: !9372)
!9397 = !DILocation(line: 683, column: 12, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !8952, line: 683, column: 11)
!9399 = distinct !DILexicalBlock(scope: !9372, file: !8952, line: 682, column: 5)
!9400 = !DILocation(line: 683, column: 26, scope: !9398)
!9401 = !DILocation(line: 683, column: 39, scope: !9398)
!9402 = !DILocation(line: 683, column: 11, scope: !9399)
!9403 = distinct !{!9403, !9392, !9404}
!9404 = !DILocation(line: 687, column: 5, scope: !9372)
!9405 = !DILocation(line: 691, column: 17, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 691, column: 6)
!9407 = !DILocation(line: 691, column: 15, scope: !9406)
!9408 = !DILocation(line: 691, column: 6, scope: !9312)
!9409 = !DILocation(line: 694, column: 5, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9406, file: !8952, line: 692, column: 3)
!9411 = !DILocation(line: 698, column: 8, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9410, file: !8952, line: 698, column: 8)
!9413 = !DILocation(line: 698, column: 34, scope: !9412)
!9414 = !DILocation(line: 698, column: 8, scope: !9410)
!9415 = !DILocation(line: 705, column: 27, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 705, column: 6)
!9417 = !DILocation(line: 705, column: 38, scope: !9416)
!9418 = !DILocation(line: 705, column: 61, scope: !9416)
!9419 = !DILocation(line: 705, column: 6, scope: !9312)
!9420 = !DILocation(line: 708, column: 5, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9416, file: !8952, line: 706, column: 3)
!9422 = !DILocation(line: 712, column: 27, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9312, file: !8952, line: 712, column: 6)
!9424 = !DILocation(line: 709, column: 3, scope: !9421)
!9425 = !DILocation(line: 712, column: 38, scope: !9423)
!9426 = !DILocation(line: 712, column: 61, scope: !9423)
!9427 = !DILocation(line: 712, column: 6, scope: !9312)
!9428 = !DILocation(line: 715, column: 5, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9423, file: !8952, line: 713, column: 3)
!9430 = !DILocation(line: 716, column: 3, scope: !9429)
!9431 = !DILocation(line: 719, column: 21, scope: !9312)
!9432 = !DILocation(line: 719, column: 70, scope: !9312)
!9433 = !DILocation(line: 719, column: 91, scope: !9312)
!9434 = !DILocation(line: 719, column: 50, scope: !9312)
!9435 = !DILocation(line: 719, column: 47, scope: !9312)
!9436 = !DILocation(line: 719, column: 19, scope: !9312)
!9437 = !DILocation(line: 722, column: 17, scope: !9312)
!9438 = !DILocation(line: 722, column: 3, scope: !9312)
!9439 = !DILocation(line: 724, column: 3, scope: !9312)
!9440 = !DILocation(line: 725, column: 1, scope: !9312)
!9441 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !8952, file: !8952, line: 885, type: !4778, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !9442)
!9442 = !{!9443, !9444, !9445, !9446}
!9443 = !DILocalVariable(name: "pllm", scope: !9441, file: !8952, line: 887, type: !121)
!9444 = !DILocalVariable(name: "pllvco", scope: !9441, file: !8952, line: 887, type: !121)
!9445 = !DILocalVariable(name: "pllp", scope: !9441, file: !8952, line: 887, type: !121)
!9446 = !DILocalVariable(name: "sysclockfreq", scope: !9441, file: !8952, line: 888, type: !121)
!9447 = !DILocation(line: 0, scope: !9441)
!9448 = !DILocation(line: 891, column: 16, scope: !9441)
!9449 = !DILocation(line: 891, column: 21, scope: !9441)
!9450 = !DILocation(line: 891, column: 3, scope: !9441)
!9451 = !DILocation(line: 901, column: 7, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !8952, line: 899, column: 5)
!9453 = distinct !DILexicalBlock(scope: !9441, file: !8952, line: 892, column: 3)
!9454 = !DILocation(line: 907, column: 19, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9453, file: !8952, line: 904, column: 5)
!9456 = !DILocation(line: 907, column: 27, scope: !9455)
!9457 = !DILocation(line: 908, column: 10, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9455, file: !8952, line: 908, column: 10)
!9459 = !DILocation(line: 908, column: 40, scope: !9458)
!9460 = !DILocation(line: 0, scope: !9458)
!9461 = !DILocation(line: 908, column: 10, scope: !9455)
!9462 = !DILocation(line: 911, column: 53, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9458, file: !8952, line: 909, column: 7)
!9464 = !DILocation(line: 911, column: 130, scope: !9463)
!9465 = !DILocation(line: 912, column: 7, scope: !9463)
!9466 = !DILocation(line: 916, column: 56, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9458, file: !8952, line: 914, column: 7)
!9468 = !DILocation(line: 916, column: 53, scope: !9467)
!9469 = !DILocation(line: 916, column: 132, scope: !9467)
!9470 = !DILocation(line: 916, column: 130, scope: !9467)
!9471 = !DILocation(line: 916, column: 18, scope: !9467)
!9472 = !DILocation(line: 918, column: 23, scope: !9455)
!9473 = !DILocation(line: 918, column: 82, scope: !9455)
!9474 = !DILocation(line: 920, column: 28, scope: !9455)
!9475 = !DILocation(line: 921, column: 7, scope: !9455)
!9476 = !DILocation(line: 0, scope: !9453)
!9477 = !DILocation(line: 929, column: 3, scope: !9441)
!9478 = !DISubprogram(name: "HAL_InitTick", scope: !9311, file: !9311, line: 223, type: !9479, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9479 = !DISubroutineType(types: !9480)
!9480 = !{!8955, !121}
!9481 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !8952, file: !8952, line: 775, type: !9482, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !9484)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{null, !121, !121, !121}
!9484 = !{!9485, !9486, !9487, !9488, !9498, !9502}
!9485 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !9481, file: !8952, line: 775, type: !121)
!9486 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !9481, file: !8952, line: 775, type: !121)
!9487 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !9481, file: !8952, line: 775, type: !121)
!9488 = !DILocalVariable(name: "GPIO_InitStruct", scope: !9481, file: !8952, line: 777, type: !9489)
!9489 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !9490, line: 62, baseType: !9491)
!9490 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9490, line: 46, size: 160, elements: !9492)
!9492 = !{!9493, !9494, !9495, !9496, !9497}
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !9491, file: !9490, line: 48, baseType: !121, size: 32)
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !9491, file: !9490, line: 51, baseType: !121, size: 32, offset: 32)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !9491, file: !9490, line: 54, baseType: !121, size: 32, offset: 64)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !9491, file: !9490, line: 57, baseType: !121, size: 32, offset: 96)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !9491, file: !9490, line: 60, baseType: !121, size: 32, offset: 128)
!9498 = !DILocalVariable(name: "tmpreg", scope: !9499, file: !8952, line: 787, type: !120)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !8952, line: 787, column: 5)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !8952, line: 783, column: 3)
!9501 = distinct !DILexicalBlock(scope: !9481, file: !8952, line: 782, column: 6)
!9502 = !DILocalVariable(name: "tmpreg", scope: !9503, file: !8952, line: 811, type: !120)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !8952, line: 811, column: 5)
!9504 = distinct !DILexicalBlock(scope: !9501, file: !8952, line: 807, column: 3)
!9505 = !DILocation(line: 0, scope: !9481)
!9506 = !DILocation(line: 777, column: 3, scope: !9481)
!9507 = !DILocation(line: 777, column: 20, scope: !9481)
!9508 = !DILocation(line: 782, column: 15, scope: !9501)
!9509 = !DILocation(line: 782, column: 6, scope: !9481)
!9510 = !DILocation(line: 787, column: 5, scope: !9499)
!9511 = !DILocation(line: 787, column: 5, scope: !9500)
!9512 = !DILocation(line: 790, column: 21, scope: !9500)
!9513 = !DILocation(line: 790, column: 25, scope: !9500)
!9514 = !DILocation(line: 791, column: 21, scope: !9500)
!9515 = !DILocation(line: 791, column: 26, scope: !9500)
!9516 = !DILocation(line: 792, column: 21, scope: !9500)
!9517 = !DILocation(line: 792, column: 27, scope: !9500)
!9518 = !DILocation(line: 793, column: 21, scope: !9500)
!9519 = !DILocation(line: 793, column: 26, scope: !9500)
!9520 = !DILocation(line: 794, column: 21, scope: !9500)
!9521 = !DILocation(line: 794, column: 31, scope: !9500)
!9522 = !DILocation(line: 795, column: 5, scope: !9500)
!9523 = !DILocation(line: 798, column: 5, scope: !9500)
!9524 = !DILocation(line: 804, column: 3, scope: !9500)
!9525 = !DILocation(line: 811, column: 5, scope: !9503)
!9526 = !DILocation(line: 811, column: 5, scope: !9504)
!9527 = !DILocation(line: 814, column: 21, scope: !9504)
!9528 = !DILocation(line: 814, column: 25, scope: !9504)
!9529 = !DILocation(line: 815, column: 21, scope: !9504)
!9530 = !DILocation(line: 815, column: 26, scope: !9504)
!9531 = !DILocation(line: 816, column: 21, scope: !9504)
!9532 = !DILocation(line: 816, column: 27, scope: !9504)
!9533 = !DILocation(line: 817, column: 21, scope: !9504)
!9534 = !DILocation(line: 817, column: 26, scope: !9504)
!9535 = !DILocation(line: 818, column: 21, scope: !9504)
!9536 = !DILocation(line: 818, column: 31, scope: !9504)
!9537 = !DILocation(line: 819, column: 5, scope: !9504)
!9538 = !DILocation(line: 822, column: 5, scope: !9504)
!9539 = !DILocation(line: 0, scope: !9501)
!9540 = !DILocation(line: 830, column: 1, scope: !9481)
!9541 = !DISubprogram(name: "HAL_GPIO_Init", scope: !9490, file: !9490, line: 224, type: !9542, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{null, !2620, !9544}
!9544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9489, size: 32)
!9545 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !8952, file: !8952, line: 841, type: !2738, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9546 = !DILocation(line: 843, column: 38, scope: !9545)
!9547 = !DILocation(line: 844, column: 1, scope: !9545)
!9548 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !8952, file: !8952, line: 850, type: !2738, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9549 = !DILocation(line: 852, column: 38, scope: !9548)
!9550 = !DILocation(line: 853, column: 1, scope: !9548)
!9551 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !8952, file: !8952, line: 941, type: !4778, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9552 = !DILocation(line: 943, column: 10, scope: !9551)
!9553 = !DILocation(line: 943, column: 3, scope: !9551)
!9554 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !8952, file: !8952, line: 952, type: !4778, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9555 = !DILocation(line: 955, column: 11, scope: !9554)
!9556 = !DILocation(line: 955, column: 56, scope: !9554)
!9557 = !DILocation(line: 955, column: 78, scope: !9554)
!9558 = !DILocation(line: 955, column: 36, scope: !9554)
!9559 = !DILocation(line: 955, column: 33, scope: !9554)
!9560 = !DILocation(line: 955, column: 3, scope: !9554)
!9561 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !8952, file: !8952, line: 964, type: !4778, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9562 = !DILocation(line: 967, column: 11, scope: !9561)
!9563 = !DILocation(line: 967, column: 55, scope: !9561)
!9564 = !DILocation(line: 967, column: 77, scope: !9561)
!9565 = !DILocation(line: 967, column: 35, scope: !9561)
!9566 = !DILocation(line: 967, column: 32, scope: !9561)
!9567 = !DILocation(line: 967, column: 3, scope: !9561)
!9568 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !8952, file: !8952, line: 977, type: !9569, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !9571)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{null, !8960}
!9571 = !{!9572}
!9572 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9568, file: !8952, line: 977, type: !8960)
!9573 = !DILocation(line: 0, scope: !9568)
!9574 = !DILocation(line: 980, column: 22, scope: !9568)
!9575 = !DILocation(line: 980, column: 37, scope: !9568)
!9576 = !DILocation(line: 983, column: 12, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9568, file: !8952, line: 983, column: 6)
!9578 = !DILocation(line: 983, column: 15, scope: !9577)
!9579 = !DILocation(line: 983, column: 31, scope: !9577)
!9580 = !DILocation(line: 983, column: 6, scope: !9568)
!9581 = !DILocation(line: 985, column: 24, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9577, file: !8952, line: 984, column: 3)
!9583 = !DILocation(line: 985, column: 33, scope: !9582)
!9584 = !DILocation(line: 986, column: 3, scope: !9582)
!9585 = !DILocation(line: 987, column: 17, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9577, file: !8952, line: 987, column: 11)
!9587 = !DILocation(line: 987, column: 20, scope: !9586)
!9588 = !DILocation(line: 987, column: 35, scope: !9586)
!9589 = !DILocation(line: 0, scope: !9586)
!9590 = !DILocation(line: 987, column: 11, scope: !9577)
!9591 = !DILocation(line: 989, column: 33, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9586, file: !8952, line: 988, column: 3)
!9593 = !DILocation(line: 990, column: 3, scope: !9592)
!9594 = !DILocation(line: 993, column: 33, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9586, file: !8952, line: 992, column: 3)
!9596 = !DILocation(line: 997, column: 12, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9568, file: !8952, line: 997, column: 6)
!9598 = !DILocation(line: 997, column: 15, scope: !9597)
!9599 = !DILocation(line: 1003, column: 24, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9597, file: !8952, line: 1002, column: 3)
!9601 = !DILocation(line: 1003, column: 33, scope: !9600)
!9602 = !DILocation(line: 1006, column: 61, scope: !9568)
!9603 = !DILocation(line: 1006, column: 81, scope: !9568)
!9604 = !DILocation(line: 1006, column: 22, scope: !9568)
!9605 = !DILocation(line: 1006, column: 42, scope: !9568)
!9606 = !DILocation(line: 1009, column: 12, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9568, file: !8952, line: 1009, column: 6)
!9608 = !DILocation(line: 1009, column: 17, scope: !9607)
!9609 = !DILocation(line: 1009, column: 35, scope: !9607)
!9610 = !DILocation(line: 1009, column: 6, scope: !9568)
!9611 = !DILocation(line: 1011, column: 24, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9607, file: !8952, line: 1010, column: 3)
!9613 = !DILocation(line: 1011, column: 33, scope: !9612)
!9614 = !DILocation(line: 1012, column: 3, scope: !9612)
!9615 = !DILocation(line: 1013, column: 17, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9607, file: !8952, line: 1013, column: 11)
!9617 = !DILocation(line: 1013, column: 22, scope: !9616)
!9618 = !DILocation(line: 1013, column: 39, scope: !9616)
!9619 = !DILocation(line: 0, scope: !9616)
!9620 = !DILocation(line: 1013, column: 11, scope: !9607)
!9621 = !DILocation(line: 1015, column: 33, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !8952, line: 1014, column: 3)
!9623 = !DILocation(line: 1016, column: 3, scope: !9622)
!9624 = !DILocation(line: 1019, column: 33, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9616, file: !8952, line: 1018, column: 3)
!9626 = !DILocation(line: 1023, column: 12, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9568, file: !8952, line: 1023, column: 6)
!9628 = !DILocation(line: 1023, column: 16, scope: !9627)
!9629 = !DILocation(line: 1029, column: 24, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9627, file: !8952, line: 1028, column: 3)
!9631 = !DILocation(line: 1029, column: 33, scope: !9630)
!9632 = !DILocation(line: 1033, column: 12, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9568, file: !8952, line: 1033, column: 6)
!9634 = !DILocation(line: 1033, column: 15, scope: !9633)
!9635 = !DILocation(line: 1033, column: 30, scope: !9633)
!9636 = !DILocation(line: 1033, column: 6, scope: !9568)
!9637 = !DILocation(line: 1039, column: 28, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !8952, line: 1038, column: 3)
!9639 = !DILocation(line: 1039, column: 37, scope: !9638)
!9640 = !DILocation(line: 1041, column: 54, scope: !9568)
!9641 = !DILocation(line: 1041, column: 62, scope: !9568)
!9642 = !DILocation(line: 1041, column: 26, scope: !9568)
!9643 = !DILocation(line: 1041, column: 36, scope: !9568)
!9644 = !DILocation(line: 1042, column: 49, scope: !9568)
!9645 = !DILocation(line: 1042, column: 57, scope: !9568)
!9646 = !DILocation(line: 1042, column: 26, scope: !9568)
!9647 = !DILocation(line: 1042, column: 31, scope: !9568)
!9648 = !DILocation(line: 1043, column: 50, scope: !9568)
!9649 = !DILocation(line: 1043, column: 78, scope: !9568)
!9650 = !DILocation(line: 1043, column: 26, scope: !9568)
!9651 = !DILocation(line: 1043, column: 31, scope: !9568)
!9652 = !DILocation(line: 1044, column: 52, scope: !9568)
!9653 = !DILocation(line: 1044, column: 102, scope: !9568)
!9654 = !DILocation(line: 1044, column: 109, scope: !9568)
!9655 = !DILocation(line: 1044, column: 26, scope: !9568)
!9656 = !DILocation(line: 1044, column: 31, scope: !9568)
!9657 = !DILocation(line: 1045, column: 50, scope: !9568)
!9658 = !DILocation(line: 1045, column: 78, scope: !9568)
!9659 = !DILocation(line: 1045, column: 26, scope: !9568)
!9660 = !DILocation(line: 1045, column: 31, scope: !9568)
!9661 = !DILocation(line: 1046, column: 1, scope: !9568)
!9662 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !8952, file: !8952, line: 1056, type: !9663, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !9665)
!9663 = !DISubroutineType(types: !9664)
!9664 = !{null, !9315, !687}
!9665 = !{!9666, !9667}
!9666 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9662, file: !8952, line: 1056, type: !9315)
!9667 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !9662, file: !8952, line: 1056, type: !687)
!9668 = !DILocation(line: 0, scope: !9662)
!9669 = !DILocation(line: 1059, column: 22, scope: !9662)
!9670 = !DILocation(line: 1059, column: 32, scope: !9662)
!9671 = !DILocation(line: 1062, column: 53, scope: !9662)
!9672 = !DILocation(line: 1062, column: 58, scope: !9662)
!9673 = !DILocation(line: 1062, column: 22, scope: !9662)
!9674 = !DILocation(line: 1062, column: 35, scope: !9662)
!9675 = !DILocation(line: 1065, column: 54, scope: !9662)
!9676 = !DILocation(line: 1065, column: 59, scope: !9662)
!9677 = !DILocation(line: 1065, column: 22, scope: !9662)
!9678 = !DILocation(line: 1065, column: 36, scope: !9662)
!9679 = !DILocation(line: 1068, column: 55, scope: !9662)
!9680 = !DILocation(line: 1068, column: 60, scope: !9662)
!9681 = !DILocation(line: 1068, column: 22, scope: !9662)
!9682 = !DILocation(line: 1068, column: 37, scope: !9662)
!9683 = !DILocation(line: 1071, column: 56, scope: !9662)
!9684 = !DILocation(line: 1071, column: 79, scope: !9662)
!9685 = !DILocation(line: 1071, column: 22, scope: !9662)
!9686 = !DILocation(line: 1071, column: 37, scope: !9662)
!9687 = !DILocation(line: 1074, column: 34, scope: !9662)
!9688 = !DILocation(line: 1074, column: 38, scope: !9662)
!9689 = !DILocation(line: 1074, column: 14, scope: !9662)
!9690 = !DILocation(line: 1075, column: 1, scope: !9662)
!9691 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !8952, file: !8952, line: 1082, type: !2738, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9692 = !DILocation(line: 1085, column: 6, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9691, file: !8952, line: 1085, column: 6)
!9694 = !DILocation(line: 1085, column: 6, scope: !9691)
!9695 = !DILocation(line: 1088, column: 5, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9693, file: !8952, line: 1086, column: 3)
!9697 = !DILocation(line: 1091, column: 5, scope: !9696)
!9698 = !DILocation(line: 1092, column: 3, scope: !9696)
!9699 = !DILocation(line: 1093, column: 1, scope: !9691)
!9700 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !8952, file: !8952, line: 1099, type: !2738, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !322)
!9701 = !DILocation(line: 1104, column: 1, scope: !9700)
!9702 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !9703, file: !9703, line: 257, type: !4788, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9704)
!9703 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9704 = !{!9705}
!9705 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9702, file: !9703, line: 257, type: !121)
!9706 = !DILocation(line: 0, scope: !9702)
!9707 = !DILocation(line: 260, column: 3, scope: !9702)
!9708 = !DILocation(line: 261, column: 1, scope: !9702)
!9709 = distinct !DISubprogram(name: "LL_InitTick", scope: !9710, file: !9710, line: 260, type: !7380, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9711)
!9710 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9711 = !{!9712, !9713}
!9712 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9709, file: !9710, line: 260, type: !121)
!9713 = !DILocalVariable(name: "Ticks", arg: 2, scope: !9709, file: !9710, line: 260, type: !121)
!9714 = !DILocation(line: 0, scope: !9709)
!9715 = !DILocation(line: 263, column: 46, scope: !9709)
!9716 = !DILocation(line: 263, column: 55, scope: !9709)
!9717 = !DILocation(line: 263, column: 18, scope: !9709)
!9718 = !DILocation(line: 264, column: 18, scope: !9709)
!9719 = !DILocation(line: 265, column: 18, scope: !9709)
!9720 = !DILocation(line: 267, column: 1, scope: !9709)
!9721 = distinct !DISubprogram(name: "LL_mDelay", scope: !9703, file: !9703, line: 273, type: !4788, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9722)
!9722 = !{!9723, !9724}
!9723 = !DILocalVariable(name: "Delay", arg: 1, scope: !9721, file: !9703, line: 273, type: !121)
!9724 = !DILocalVariable(name: "tmp", scope: !9721, file: !9703, line: 275, type: !120)
!9725 = !DILocation(line: 0, scope: !9721)
!9726 = !DILocation(line: 275, column: 3, scope: !9721)
!9727 = !DILocation(line: 275, column: 18, scope: !9721)
!9728 = !DILocation(line: 275, column: 33, scope: !9721)
!9729 = !DILocation(line: 277, column: 10, scope: !9721)
!9730 = !DILocation(line: 280, column: 12, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9721, file: !9703, line: 280, column: 6)
!9732 = !DILocation(line: 285, column: 3, scope: !9721)
!9733 = !DILocation(line: 287, column: 18, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !9703, line: 287, column: 8)
!9735 = distinct !DILexicalBlock(scope: !9721, file: !9703, line: 286, column: 3)
!9736 = !DILocation(line: 292, column: 1, scope: !9721)
!9737 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !9703, file: !9703, line: 323, type: !4788, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9738)
!9738 = !{!9739}
!9739 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9737, file: !9703, line: 323, type: !121)
!9740 = !DILocation(line: 0, scope: !9737)
!9741 = !DILocation(line: 326, column: 19, scope: !9737)
!9742 = !DILocation(line: 327, column: 1, scope: !9737)
!9743 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !9703, file: !9703, line: 338, type: !9744, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9747)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!9746, !121}
!9746 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !631, line: 201, baseType: !630)
!9747 = !{!9748, !9749, !9750, !9751, !9752}
!9748 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !9743, file: !9703, line: 338, type: !121)
!9749 = !DILocalVariable(name: "timeout", scope: !9743, file: !9703, line: 340, type: !121)
!9750 = !DILocalVariable(name: "getlatency", scope: !9743, file: !9703, line: 341, type: !121)
!9751 = !DILocalVariable(name: "latency", scope: !9743, file: !9703, line: 342, type: !121)
!9752 = !DILocalVariable(name: "status", scope: !9743, file: !9703, line: 343, type: !9746)
!9753 = !DILocation(line: 0, scope: !9743)
!9754 = !DILocation(line: 347, column: 21, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9743, file: !9703, line: 347, column: 6)
!9756 = !DILocation(line: 347, column: 6, scope: !9743)
!9757 = !DILocation(line: 353, column: 8, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !9703, line: 353, column: 8)
!9759 = distinct !DILexicalBlock(scope: !9755, file: !9703, line: 352, column: 3)
!9760 = !DILocation(line: 353, column: 40, scope: !9758)
!9761 = !DILocation(line: 353, column: 8, scope: !9759)
!9762 = !DILocation(line: 374, column: 55, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !9703, line: 374, column: 10)
!9764 = distinct !DILexicalBlock(scope: !9758, file: !9703, line: 354, column: 5)
!9765 = !DILocation(line: 368, column: 26, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9764, file: !9703, line: 368, column: 10)
!9767 = !DILocation(line: 368, column: 55, scope: !9766)
!9768 = !DILocation(line: 380, column: 57, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !9703, line: 380, column: 12)
!9770 = distinct !DILexicalBlock(scope: !9763, file: !9703, line: 379, column: 7)
!9771 = !DILocation(line: 387, column: 8, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9759, file: !9703, line: 387, column: 8)
!9773 = !DILocation(line: 387, column: 40, scope: !9772)
!9774 = !DILocation(line: 387, column: 8, scope: !9759)
!9775 = !DILocation(line: 407, column: 26, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !9703, line: 407, column: 10)
!9777 = distinct !DILexicalBlock(scope: !9772, file: !9703, line: 388, column: 5)
!9778 = !DILocation(line: 407, column: 55, scope: !9776)
!9779 = !DILocation(line: 413, column: 28, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !9703, line: 413, column: 12)
!9781 = distinct !DILexicalBlock(scope: !9776, file: !9703, line: 412, column: 7)
!9782 = !DILocation(line: 413, column: 57, scope: !9780)
!9783 = !DILocation(line: 0, scope: !9759)
!9784 = !DILocation(line: 420, column: 8, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9759, file: !9703, line: 420, column: 8)
!9786 = !DILocation(line: 420, column: 40, scope: !9785)
!9787 = !DILocation(line: 420, column: 8, scope: !9759)
!9788 = !DILocation(line: 429, column: 26, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !9703, line: 429, column: 10)
!9790 = distinct !DILexicalBlock(scope: !9785, file: !9703, line: 421, column: 5)
!9791 = !DILocation(line: 429, column: 55, scope: !9789)
!9792 = !DILocation(line: 435, column: 28, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9794, file: !9703, line: 435, column: 12)
!9794 = distinct !DILexicalBlock(scope: !9789, file: !9703, line: 434, column: 7)
!9795 = !DILocation(line: 435, column: 57, scope: !9793)
!9796 = !DILocation(line: 444, column: 5, scope: !9759)
!9797 = !DILocation(line: 448, column: 5, scope: !9759)
!9798 = !DILocation(line: 451, column: 18, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9759, file: !9703, line: 449, column: 5)
!9800 = !DILocation(line: 452, column: 12, scope: !9799)
!9801 = !DILocation(line: 453, column: 26, scope: !9759)
!9802 = !DILocation(line: 453, column: 38, scope: !9759)
!9803 = !DILocation(line: 453, column: 5, scope: !9799)
!9804 = distinct !{!9804, !9797, !9805}
!9805 = !DILocation(line: 453, column: 54, scope: !9759)
!9806 = !DILocation(line: 0, scope: !9755)
!9807 = !DILocation(line: 464, column: 3, scope: !9743)
!9808 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !9809, file: !9809, line: 519, type: !4778, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9809 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9810 = !DILocation(line: 521, column: 21, scope: !9808)
!9811 = !DILocation(line: 521, column: 3, scope: !9808)
!9812 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4544, file: !4544, line: 1543, type: !4788, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9813)
!9813 = !{!9814}
!9814 = !DILocalVariable(name: "Latency", arg: 1, scope: !9812, file: !4544, line: 1543, type: !121)
!9815 = !DILocation(line: 0, scope: !9812)
!9816 = !DILocation(line: 1545, column: 3, scope: !9812)
!9817 = !DILocation(line: 1546, column: 1, scope: !9812)
!9818 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4544, file: !4544, line: 1569, type: !4778, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9819 = !DILocation(line: 1571, column: 21, scope: !9818)
!9820 = !DILocation(line: 1571, column: 3, scope: !9818)
!9821 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !9703, file: !9703, line: 483, type: !9822, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9838)
!9822 = !DISubroutineType(types: !9823)
!9823 = !{!9746, !9824, !9831}
!9824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9825, size: 32)
!9825 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !9710, line: 114, baseType: !9826)
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9710, line: 94, size: 96, elements: !9827)
!9827 = !{!9828, !9829, !9830}
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9826, file: !9710, line: 96, baseType: !121, size: 32)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9826, file: !9710, line: 102, baseType: !121, size: 32, offset: 32)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9826, file: !9710, line: 109, baseType: !121, size: 32, offset: 64)
!9831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9832, size: 32)
!9832 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !9710, line: 139, baseType: !9833)
!9833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9710, line: 119, size: 96, elements: !9834)
!9834 = !{!9835, !9836, !9837}
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9833, file: !9710, line: 121, baseType: !121, size: 32)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9833, file: !9710, line: 127, baseType: !121, size: 32, offset: 32)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9833, file: !9710, line: 133, baseType: !121, size: 32, offset: 64)
!9838 = !{!9839, !9840, !9841, !9842}
!9839 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !9821, file: !9703, line: 483, type: !9824)
!9840 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !9821, file: !9703, line: 484, type: !9831)
!9841 = !DILocalVariable(name: "status", scope: !9821, file: !9703, line: 486, type: !9746)
!9842 = !DILocalVariable(name: "pllfreq", scope: !9821, file: !9703, line: 487, type: !121)
!9843 = !DILocation(line: 0, scope: !9821)
!9844 = !DILocation(line: 490, column: 6, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9821, file: !9703, line: 490, column: 6)
!9846 = !DILocation(line: 490, column: 25, scope: !9845)
!9847 = !DILocation(line: 490, column: 6, scope: !9821)
!9848 = !DILocation(line: 493, column: 15, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9845, file: !9703, line: 491, column: 3)
!9850 = !DILocation(line: 496, column: 8, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9849, file: !9703, line: 496, column: 8)
!9852 = !DILocation(line: 496, column: 29, scope: !9851)
!9853 = !DILocation(line: 496, column: 8, scope: !9849)
!9854 = !DILocation(line: 498, column: 7, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9851, file: !9703, line: 497, column: 5)
!9856 = !DILocation(line: 499, column: 7, scope: !9855)
!9857 = !DILocation(line: 499, column: 14, scope: !9855)
!9858 = !DILocation(line: 499, column: 35, scope: !9855)
!9859 = distinct !{!9859, !9856, !9860}
!9860 = !DILocation(line: 502, column: 7, scope: !9855)
!9861 = !DILocation(line: 506, column: 76, scope: !9849)
!9862 = !DILocation(line: 506, column: 103, scope: !9849)
!9863 = !DILocation(line: 507, column: 54, scope: !9849)
!9864 = !DILocation(line: 506, column: 5, scope: !9849)
!9865 = !DILocation(line: 510, column: 14, scope: !9849)
!9866 = !DILocation(line: 511, column: 3, scope: !9849)
!9867 = !DILocation(line: 0, scope: !9845)
!9868 = !DILocation(line: 518, column: 3, scope: !9821)
!9869 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !9703, file: !9703, line: 642, type: !9870, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9872)
!9870 = !DISubroutineType(types: !9871)
!9871 = !{!9746}
!9872 = !{!9873}
!9873 = !DILocalVariable(name: "status", scope: !9869, file: !9703, line: 644, type: !9746)
!9874 = !DILocation(line: 0, scope: !9869)
!9875 = !DILocation(line: 647, column: 6, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9869, file: !9703, line: 647, column: 6)
!9877 = !DILocation(line: 647, column: 27, scope: !9876)
!9878 = !DILocation(line: 663, column: 6, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9869, file: !9703, line: 663, column: 6)
!9880 = !DILocation(line: 663, column: 30, scope: !9879)
!9881 = !DILocation(line: 663, column: 6, scope: !9869)
!9882 = !DILocation(line: 669, column: 3, scope: !9869)
!9883 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !9703, file: !9703, line: 611, type: !9884, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9886)
!9884 = !DISubroutineType(types: !9885)
!9885 = !{!121, !121, !9824}
!9886 = !{!9887, !9888, !9889}
!9887 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !9883, file: !9703, line: 611, type: !121)
!9888 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !9883, file: !9703, line: 611, type: !9824)
!9889 = !DILocalVariable(name: "pllfreq", scope: !9883, file: !9703, line: 613, type: !121)
!9890 = !DILocation(line: 0, scope: !9883)
!9891 = !DILocation(line: 622, column: 56, scope: !9883)
!9892 = !DILocation(line: 622, column: 61, scope: !9883)
!9893 = !DILocation(line: 622, column: 32, scope: !9883)
!9894 = !DILocation(line: 626, column: 45, scope: !9883)
!9895 = !DILocation(line: 626, column: 50, scope: !9883)
!9896 = !DILocation(line: 626, column: 21, scope: !9883)
!9897 = !DILocation(line: 630, column: 47, scope: !9883)
!9898 = !DILocation(line: 630, column: 82, scope: !9883)
!9899 = !DILocation(line: 630, column: 21, scope: !9883)
!9900 = !DILocation(line: 633, column: 3, scope: !9883)
!9901 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6730, file: !6730, line: 3007, type: !4778, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9902 = !DILocation(line: 3009, column: 11, scope: !9901)
!9903 = !DILocation(line: 3009, column: 44, scope: !9901)
!9904 = !DILocation(line: 3009, column: 3, scope: !9901)
!9905 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6730, file: !6730, line: 2987, type: !2738, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9906 = !DILocation(line: 2989, column: 3, scope: !9905)
!9907 = !DILocation(line: 2990, column: 1, scope: !9905)
!9908 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6730, file: !6730, line: 4304, type: !6854, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9909)
!9909 = !{!9910, !9911, !9912, !9913}
!9910 = !DILocalVariable(name: "Source", arg: 1, scope: !9908, file: !6730, line: 4304, type: !121)
!9911 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9908, file: !6730, line: 4304, type: !121)
!9912 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9908, file: !6730, line: 4304, type: !121)
!9913 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9908, file: !6730, line: 4304, type: !121)
!9914 = !DILocation(line: 0, scope: !9908)
!9915 = !DILocation(line: 4306, column: 3, scope: !9908)
!9916 = !DILocation(line: 4308, column: 3, scope: !9908)
!9917 = !DILocation(line: 4312, column: 1, scope: !9908)
!9918 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !9703, file: !9703, line: 681, type: !9919, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9921)
!9919 = !DISubroutineType(types: !9920)
!9920 = !{!9746, !121, !9831}
!9921 = !{!9922, !9923, !9924, !9925}
!9922 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !9918, file: !9703, line: 681, type: !121)
!9923 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !9918, file: !9703, line: 681, type: !9831)
!9924 = !DILocalVariable(name: "status", scope: !9918, file: !9703, line: 683, type: !9746)
!9925 = !DILocalVariable(name: "hclk_frequency", scope: !9918, file: !9703, line: 684, type: !121)
!9926 = !DILocation(line: 0, scope: !9918)
!9927 = !DILocation(line: 691, column: 20, scope: !9918)
!9928 = !DILocation(line: 694, column: 6, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9918, file: !9703, line: 694, column: 6)
!9930 = !DILocation(line: 694, column: 22, scope: !9929)
!9931 = !DILocation(line: 694, column: 6, scope: !9918)
!9932 = !DILocation(line: 697, column: 14, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9929, file: !9703, line: 695, column: 3)
!9934 = !DILocation(line: 701, column: 13, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9918, file: !9703, line: 701, column: 6)
!9936 = !DILocation(line: 701, column: 6, scope: !9918)
!9937 = !DILocation(line: 704, column: 5, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9935, file: !9703, line: 702, column: 3)
!9939 = !DILocation(line: 705, column: 5, scope: !9938)
!9940 = !DILocation(line: 705, column: 12, scope: !9938)
!9941 = !DILocation(line: 705, column: 33, scope: !9938)
!9942 = distinct !{!9942, !9939, !9943}
!9943 = !DILocation(line: 708, column: 5, scope: !9938)
!9944 = !DILocation(line: 711, column: 49, scope: !9938)
!9945 = !DILocation(line: 711, column: 5, scope: !9938)
!9946 = !DILocation(line: 712, column: 5, scope: !9938)
!9947 = !DILocation(line: 713, column: 5, scope: !9938)
!9948 = !DILocation(line: 713, column: 12, scope: !9938)
!9949 = !DILocation(line: 713, column: 37, scope: !9938)
!9950 = distinct !{!9950, !9947, !9951}
!9951 = !DILocation(line: 716, column: 5, scope: !9938)
!9952 = !DILocation(line: 719, column: 50, scope: !9938)
!9953 = !DILocation(line: 719, column: 5, scope: !9938)
!9954 = !DILocation(line: 720, column: 50, scope: !9938)
!9955 = !DILocation(line: 720, column: 5, scope: !9938)
!9956 = !DILocation(line: 721, column: 3, scope: !9938)
!9957 = !DILocation(line: 724, column: 6, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9918, file: !9703, line: 724, column: 6)
!9959 = !DILocation(line: 724, column: 22, scope: !9958)
!9960 = !DILocation(line: 724, column: 6, scope: !9918)
!9961 = !DILocation(line: 727, column: 14, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9958, file: !9703, line: 725, column: 3)
!9963 = !DILocation(line: 728, column: 3, scope: !9962)
!9964 = !DILocation(line: 731, column: 13, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9918, file: !9703, line: 731, column: 6)
!9966 = !DILocation(line: 731, column: 6, scope: !9918)
!9967 = !DILocation(line: 733, column: 5, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9965, file: !9703, line: 732, column: 3)
!9969 = !DILocation(line: 734, column: 3, scope: !9968)
!9970 = !DILocation(line: 736, column: 3, scope: !9918)
!9971 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6730, file: !6730, line: 4184, type: !2738, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9972 = !DILocation(line: 4186, column: 3, scope: !9971)
!9973 = !DILocation(line: 4187, column: 1, scope: !9971)
!9974 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6730, file: !6730, line: 4205, type: !4778, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9975 = !DILocation(line: 4207, column: 11, scope: !9974)
!9976 = !DILocation(line: 4207, column: 44, scope: !9974)
!9977 = !DILocation(line: 4207, column: 3, scope: !9974)
!9978 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6730, file: !6730, line: 3224, type: !4788, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9979)
!9979 = !{!9980}
!9980 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9978, file: !6730, line: 3224, type: !121)
!9981 = !DILocation(line: 0, scope: !9978)
!9982 = !DILocation(line: 3226, column: 3, scope: !9978)
!9983 = !DILocation(line: 3227, column: 1, scope: !9978)
!9984 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6730, file: !6730, line: 3188, type: !4788, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9985)
!9985 = !{!9986}
!9986 = !DILocalVariable(name: "Source", arg: 1, scope: !9984, file: !6730, line: 3188, type: !121)
!9987 = !DILocation(line: 0, scope: !9984)
!9988 = !DILocation(line: 3190, column: 3, scope: !9984)
!9989 = !DILocation(line: 3191, column: 1, scope: !9984)
!9990 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6730, file: !6730, line: 3204, type: !4778, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!9991 = !DILocation(line: 3206, column: 21, scope: !9990)
!9992 = !DILocation(line: 3206, column: 3, scope: !9990)
!9993 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6730, file: !6730, line: 3240, type: !4788, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !9994)
!9994 = !{!9995}
!9995 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9993, file: !6730, line: 3240, type: !121)
!9996 = !DILocation(line: 0, scope: !9993)
!9997 = !DILocation(line: 3242, column: 3, scope: !9993)
!9998 = !DILocation(line: 3243, column: 1, scope: !9993)
!9999 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6730, file: !6730, line: 3256, type: !4788, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !10000)
!10000 = !{!10001}
!10001 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9999, file: !6730, line: 3256, type: !121)
!10002 = !DILocation(line: 0, scope: !9999)
!10003 = !DILocation(line: 3258, column: 3, scope: !9999)
!10004 = !DILocation(line: 3259, column: 1, scope: !9999)
!10005 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6730, file: !6730, line: 5153, type: !4778, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!10006 = !DILocation(line: 5155, column: 11, scope: !10005)
!10007 = !DILocation(line: 5155, column: 47, scope: !10005)
!10008 = !DILocation(line: 5155, column: 3, scope: !10005)
!10009 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !9703, file: !9703, line: 540, type: !10010, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !10012)
!10010 = !DISubroutineType(types: !10011)
!10011 = !{!9746, !121, !121, !9824, !9831}
!10012 = !{!10013, !10014, !10015, !10016, !10017, !10018}
!10013 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10009, file: !9703, line: 540, type: !121)
!10014 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10009, file: !9703, line: 540, type: !121)
!10015 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10009, file: !9703, line: 541, type: !9824)
!10016 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10009, file: !9703, line: 541, type: !9831)
!10017 = !DILocalVariable(name: "status", scope: !10009, file: !9703, line: 543, type: !9746)
!10018 = !DILocalVariable(name: "pllfreq", scope: !10009, file: !9703, line: 544, type: !121)
!10019 = !DILocation(line: 0, scope: !10009)
!10020 = !DILocation(line: 551, column: 6, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10009, file: !9703, line: 551, column: 6)
!10022 = !DILocation(line: 551, column: 25, scope: !10021)
!10023 = !DILocation(line: 551, column: 6, scope: !10009)
!10024 = !DILocation(line: 554, column: 15, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !9703, line: 552, column: 3)
!10026 = !DILocation(line: 557, column: 8, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10025, file: !9703, line: 557, column: 8)
!10028 = !DILocation(line: 557, column: 29, scope: !10027)
!10029 = !DILocation(line: 557, column: 8, scope: !10025)
!10030 = !DILocation(line: 560, column: 20, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !9703, line: 560, column: 10)
!10032 = distinct !DILexicalBlock(scope: !10027, file: !9703, line: 558, column: 5)
!10033 = !DILocation(line: 560, column: 10, scope: !10032)
!10034 = !DILocation(line: 562, column: 9, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10031, file: !9703, line: 561, column: 7)
!10036 = !DILocation(line: 563, column: 7, scope: !10035)
!10037 = !DILocation(line: 566, column: 9, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10031, file: !9703, line: 565, column: 7)
!10039 = !DILocation(line: 570, column: 7, scope: !10032)
!10040 = !DILocation(line: 571, column: 7, scope: !10032)
!10041 = !DILocation(line: 571, column: 14, scope: !10032)
!10042 = !DILocation(line: 571, column: 35, scope: !10032)
!10043 = distinct !{!10043, !10040, !10044}
!10044 = !DILocation(line: 574, column: 7, scope: !10032)
!10045 = !DILocation(line: 578, column: 76, scope: !10025)
!10046 = !DILocation(line: 578, column: 103, scope: !10025)
!10047 = !DILocation(line: 579, column: 54, scope: !10025)
!10048 = !DILocation(line: 578, column: 5, scope: !10025)
!10049 = !DILocation(line: 582, column: 14, scope: !10025)
!10050 = !DILocation(line: 583, column: 3, scope: !10025)
!10051 = !DILocation(line: 0, scope: !10021)
!10052 = !DILocation(line: 590, column: 3, scope: !10009)
!10053 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6730, file: !6730, line: 2969, type: !4778, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!10054 = !DILocation(line: 2971, column: 11, scope: !10053)
!10055 = !DILocation(line: 2971, column: 44, scope: !10053)
!10056 = !DILocation(line: 2971, column: 3, scope: !10053)
!10057 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6730, file: !6730, line: 2929, type: !2738, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!10058 = !DILocation(line: 2931, column: 3, scope: !10057)
!10059 = !DILocation(line: 2932, column: 1, scope: !10057)
!10060 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6730, file: !6730, line: 2939, type: !2738, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!10061 = !DILocation(line: 2941, column: 3, scope: !10060)
!10062 = !DILocation(line: 2942, column: 1, scope: !10060)
!10063 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6730, file: !6730, line: 2949, type: !2738, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !322)
!10064 = !DILocation(line: 2951, column: 3, scope: !10063)
!10065 = !DILocation(line: 2952, column: 1, scope: !10063)
!10066 = distinct !DISubprogram(name: "z_device_state_init", scope: !10067, file: !10067, line: 23, type: !2738, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10068)
!10067 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10068 = !{!10069}
!10069 = !DILocalVariable(name: "dev", scope: !10066, file: !10067, line: 25, type: !10070)
!10070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10071, size: 32)
!10071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10072)
!10072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10073)
!10073 = !{!10074, !10075, !10076, !10077, !10083, !10084}
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10072, file: !141, line: 380, baseType: !144, size: 32)
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10072, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10072, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10072, file: !141, line: 386, baseType: !10078, size: 32, offset: 96)
!10078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10079, size: 32)
!10079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10080)
!10080 = !{!10081, !10082}
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10079, file: !141, line: 359, baseType: !154, size: 8)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10079, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10072, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10072, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10085 = !DILocation(line: 0, scope: !10066)
!10086 = !DILocation(line: 31, column: 1, scope: !10066)
!10087 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10067, file: !10067, line: 33, type: !10088, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10090)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{!10070, !144}
!10090 = !{!10091, !10092}
!10091 = !DILocalVariable(name: "name", arg: 1, scope: !10087, file: !10067, line: 33, type: !144)
!10092 = !DILocalVariable(name: "dev", scope: !10087, file: !10067, line: 35, type: !10070)
!10093 = !DILocation(line: 0, scope: !10087)
!10094 = !DILocation(line: 40, column: 12, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10087, file: !10067, line: 40, column: 6)
!10096 = !DILocation(line: 40, column: 21, scope: !10095)
!10097 = !DILocation(line: 40, column: 25, scope: !10095)
!10098 = !DILocation(line: 40, column: 33, scope: !10095)
!10099 = !DILocation(line: 40, column: 6, scope: !10087)
!10100 = !DILocation(line: 55, column: 2, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10087, file: !10067, line: 55, column: 2)
!10102 = !DILocation(line: 50, column: 7, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10104, file: !10067, line: 50, column: 7)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !10067, line: 49, column: 57)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !10067, line: 49, column: 2)
!10106 = distinct !DILexicalBlock(scope: !10087, file: !10067, line: 49, column: 2)
!10107 = !DILocation(line: 50, column: 30, scope: !10103)
!10108 = !DILocation(line: 50, column: 39, scope: !10103)
!10109 = !DILocation(line: 50, column: 44, scope: !10103)
!10110 = !DILocation(line: 50, column: 7, scope: !10104)
!10111 = !DILocation(line: 49, column: 53, scope: !10105)
!10112 = !DILocation(line: 49, column: 33, scope: !10105)
!10113 = !DILocation(line: 49, column: 2, scope: !10106)
!10114 = distinct !{!10114, !10113, !10115}
!10115 = !DILocation(line: 53, column: 2, scope: !10106)
!10116 = !DILocation(line: 56, column: 7, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !10067, line: 56, column: 7)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !10067, line: 55, column: 57)
!10119 = distinct !DILexicalBlock(scope: !10101, file: !10067, line: 55, column: 2)
!10120 = !DILocation(line: 56, column: 30, scope: !10117)
!10121 = !DILocation(line: 56, column: 52, scope: !10117)
!10122 = !DILocation(line: 56, column: 34, scope: !10117)
!10123 = !DILocation(line: 56, column: 58, scope: !10117)
!10124 = !DILocation(line: 56, column: 7, scope: !10118)
!10125 = !DILocation(line: 55, column: 53, scope: !10119)
!10126 = !DILocation(line: 55, column: 33, scope: !10119)
!10127 = distinct !{!10127, !10100, !10128}
!10128 = !DILocation(line: 59, column: 2, scope: !10101)
!10129 = !DILocation(line: 62, column: 1, scope: !10087)
!10130 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10067, file: !10067, line: 93, type: !10131, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10133)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{!157, !10070}
!10133 = !{!10134}
!10134 = !DILocalVariable(name: "dev", arg: 1, scope: !10130, file: !10067, line: 93, type: !10070)
!10135 = !DILocation(line: 0, scope: !10130)
!10136 = !DILocation(line: 99, column: 10, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10130, file: !10067, line: 99, column: 6)
!10138 = !DILocation(line: 99, column: 6, scope: !10130)
!10139 = !DILocation(line: 103, column: 14, scope: !10130)
!10140 = !DILocation(line: 103, column: 21, scope: !10130)
!10141 = !DILocation(line: 103, column: 33, scope: !10130)
!10142 = !DILocation(line: 103, column: 49, scope: !10130)
!10143 = !DILocation(line: 103, column: 58, scope: !10130)
!10144 = !DILocation(line: 104, column: 1, scope: !10130)
!10145 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10067, file: !10067, line: 87, type: !10146, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10149)
!10146 = !DISubroutineType(types: !10147)
!10147 = !{!200, !10148}
!10148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10070, size: 32)
!10149 = !{!10150}
!10150 = !DILocalVariable(name: "devices", arg: 1, scope: !10145, file: !10067, line: 87, type: !10148)
!10151 = !DILocation(line: 0, scope: !10145)
!10152 = !DILocation(line: 89, column: 11, scope: !10145)
!10153 = !DILocation(line: 90, column: 2, scope: !10145)
!10154 = distinct !DISubprogram(name: "device_required_foreach", scope: !10067, file: !10067, line: 125, type: !10155, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10161)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{!103, !10070, !10157, !102}
!10157 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !10158)
!10158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10159, size: 32)
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!103, !10070, !102}
!10161 = !{!10162, !10163, !10164, !10165, !10166}
!10162 = !DILocalVariable(name: "dev", arg: 1, scope: !10154, file: !10067, line: 125, type: !10070)
!10163 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10154, file: !10067, line: 126, type: !10157)
!10164 = !DILocalVariable(name: "context", arg: 3, scope: !10154, file: !10067, line: 127, type: !102)
!10165 = !DILocalVariable(name: "handle_count", scope: !10154, file: !10067, line: 129, type: !200)
!10166 = !DILocalVariable(name: "handles", scope: !10154, file: !10067, line: 130, type: !160)
!10167 = !DILocation(line: 0, scope: !10154)
!10168 = !DILocation(line: 129, column: 2, scope: !10154)
!10169 = !DILocation(line: 129, column: 9, scope: !10154)
!10170 = !DILocation(line: 130, column: 35, scope: !10154)
!10171 = !DILocation(line: 132, column: 33, scope: !10154)
!10172 = !DILocation(line: 132, column: 9, scope: !10154)
!10173 = !DILocation(line: 133, column: 1, scope: !10154)
!10174 = !DILocation(line: 132, column: 2, scope: !10154)
!10175 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !10176, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10178)
!10176 = !DISubroutineType(types: !10177)
!10177 = !{!160, !10070, !2193}
!10178 = !{!10179, !10180, !10181, !10182}
!10179 = !DILocalVariable(name: "dev", arg: 1, scope: !10175, file: !141, line: 493, type: !10070)
!10180 = !DILocalVariable(name: "count", arg: 2, scope: !10175, file: !141, line: 493, type: !2193)
!10181 = !DILocalVariable(name: "rv", scope: !10175, file: !141, line: 495, type: !160)
!10182 = !DILocalVariable(name: "i", scope: !10183, file: !141, line: 498, type: !200)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !141, line: 497, column: 18)
!10184 = distinct !DILexicalBlock(scope: !10175, file: !141, line: 497, column: 6)
!10185 = !DILocation(line: 0, scope: !10175)
!10186 = !DILocation(line: 495, column: 35, scope: !10175)
!10187 = !DILocation(line: 497, column: 9, scope: !10184)
!10188 = !DILocation(line: 497, column: 6, scope: !10175)
!10189 = !DILocation(line: 0, scope: !10183)
!10190 = !DILocation(line: 500, column: 11, scope: !10183)
!10191 = !DILocation(line: 500, column: 40, scope: !10183)
!10192 = !DILocation(line: 502, column: 4, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10183, file: !141, line: 501, column: 40)
!10194 = distinct !{!10194, !10195, !10196}
!10195 = !DILocation(line: 500, column: 3, scope: !10183)
!10196 = !DILocation(line: 503, column: 3, scope: !10183)
!10197 = !DILocation(line: 504, column: 10, scope: !10183)
!10198 = !DILocation(line: 505, column: 2, scope: !10183)
!10199 = !DILocation(line: 507, column: 2, scope: !10175)
!10200 = distinct !DISubprogram(name: "device_visitor", scope: !10067, file: !10067, line: 106, type: !10201, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10203)
!10201 = !DISubroutineType(types: !10202)
!10202 = !{!103, !160, !200, !10157, !102}
!10203 = !{!10204, !10205, !10206, !10207, !10208, !10210, !10213, !10214}
!10204 = !DILocalVariable(name: "handles", arg: 1, scope: !10200, file: !10067, line: 106, type: !160)
!10205 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10200, file: !10067, line: 107, type: !200)
!10206 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10200, file: !10067, line: 108, type: !10157)
!10207 = !DILocalVariable(name: "context", arg: 4, scope: !10200, file: !10067, line: 109, type: !102)
!10208 = !DILocalVariable(name: "i", scope: !10209, file: !10067, line: 112, type: !200)
!10209 = distinct !DILexicalBlock(scope: !10200, file: !10067, line: 112, column: 2)
!10210 = !DILocalVariable(name: "dh", scope: !10211, file: !10067, line: 113, type: !162)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !10067, line: 112, column: 44)
!10212 = distinct !DILexicalBlock(scope: !10209, file: !10067, line: 112, column: 2)
!10213 = !DILocalVariable(name: "rdev", scope: !10211, file: !10067, line: 114, type: !10070)
!10214 = !DILocalVariable(name: "rc", scope: !10211, file: !10067, line: 115, type: !103)
!10215 = !DILocation(line: 0, scope: !10200)
!10216 = !DILocation(line: 0, scope: !10209)
!10217 = !DILocation(line: 112, column: 23, scope: !10212)
!10218 = !DILocation(line: 112, column: 2, scope: !10209)
!10219 = distinct !{!10219, !10218, !10220}
!10220 = !DILocation(line: 120, column: 2, scope: !10209)
!10221 = !DILocation(line: 113, column: 24, scope: !10211)
!10222 = !DILocation(line: 0, scope: !10211)
!10223 = !DILocation(line: 114, column: 31, scope: !10211)
!10224 = !DILocation(line: 115, column: 12, scope: !10211)
!10225 = !DILocation(line: 117, column: 10, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10211, file: !10067, line: 117, column: 7)
!10227 = !DILocation(line: 112, column: 39, scope: !10212)
!10228 = !DILocation(line: 123, column: 1, scope: !10200)
!10229 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !10230, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10232)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!10070, !162}
!10232 = !{!10233, !10234, !10235}
!10233 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10229, file: !141, line: 439, type: !162)
!10234 = !DILocalVariable(name: "dev", scope: !10229, file: !141, line: 443, type: !10070)
!10235 = !DILocalVariable(name: "numdev", scope: !10229, file: !141, line: 444, type: !200)
!10236 = !DILocation(line: 0, scope: !10229)
!10237 = !DILocation(line: 446, column: 7, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10229, file: !141, line: 446, column: 6)
!10239 = !DILocation(line: 446, column: 18, scope: !10238)
!10240 = !DILocation(line: 446, column: 23, scope: !10238)
!10241 = !DILocation(line: 450, column: 2, scope: !10229)
!10242 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10067, file: !10067, line: 135, type: !10155, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10243)
!10243 = !{!10244, !10245, !10246, !10247, !10248}
!10244 = !DILocalVariable(name: "dev", arg: 1, scope: !10242, file: !10067, line: 135, type: !10070)
!10245 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10242, file: !10067, line: 136, type: !10157)
!10246 = !DILocalVariable(name: "context", arg: 3, scope: !10242, file: !10067, line: 137, type: !102)
!10247 = !DILocalVariable(name: "handle_count", scope: !10242, file: !10067, line: 139, type: !200)
!10248 = !DILocalVariable(name: "handles", scope: !10242, file: !10067, line: 140, type: !160)
!10249 = !DILocation(line: 0, scope: !10242)
!10250 = !DILocation(line: 139, column: 2, scope: !10242)
!10251 = !DILocation(line: 139, column: 9, scope: !10242)
!10252 = !DILocation(line: 140, column: 35, scope: !10242)
!10253 = !DILocation(line: 142, column: 33, scope: !10242)
!10254 = !DILocation(line: 142, column: 9, scope: !10242)
!10255 = !DILocation(line: 143, column: 1, scope: !10242)
!10256 = !DILocation(line: 142, column: 2, scope: !10242)
!10257 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !10176, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !10258)
!10258 = !{!10259, !10260, !10261, !10262, !10263}
!10259 = !DILocalVariable(name: "dev", arg: 1, scope: !10257, file: !141, line: 573, type: !10070)
!10260 = !DILocalVariable(name: "count", arg: 2, scope: !10257, file: !141, line: 573, type: !2193)
!10261 = !DILocalVariable(name: "rv", scope: !10257, file: !141, line: 575, type: !160)
!10262 = !DILocalVariable(name: "region", scope: !10257, file: !141, line: 576, type: !200)
!10263 = !DILocalVariable(name: "i", scope: !10257, file: !141, line: 577, type: !200)
!10264 = !DILocation(line: 0, scope: !10257)
!10265 = !DILocation(line: 575, column: 35, scope: !10257)
!10266 = !DILocation(line: 579, column: 9, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10257, file: !141, line: 579, column: 6)
!10268 = !DILocation(line: 579, column: 6, scope: !10257)
!10269 = !DILocation(line: 582, column: 8, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !141, line: 582, column: 8)
!10271 = distinct !DILexicalBlock(scope: !10272, file: !141, line: 581, column: 23)
!10272 = distinct !DILexicalBlock(scope: !10267, file: !141, line: 579, column: 18)
!10273 = !DILocation(line: 582, column: 12, scope: !10270)
!10274 = !DILocation(line: 585, column: 6, scope: !10271)
!10275 = !DILocation(line: 0, scope: !10272)
!10276 = !DILocation(line: 581, column: 17, scope: !10272)
!10277 = !DILocation(line: 581, column: 3, scope: !10272)
!10278 = !DILocation(line: 588, column: 10, scope: !10272)
!10279 = !DILocation(line: 588, column: 16, scope: !10272)
!10280 = !DILocation(line: 589, column: 4, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10272, file: !141, line: 588, column: 39)
!10282 = !DILocation(line: 588, column: 3, scope: !10272)
!10283 = distinct !{!10283, !10282, !10284}
!10284 = !DILocation(line: 590, column: 3, scope: !10272)
!10285 = !DILocation(line: 591, column: 10, scope: !10272)
!10286 = !DILocation(line: 592, column: 2, scope: !10272)
!10287 = !DILocation(line: 575, column: 25, scope: !10257)
!10288 = !DILocation(line: 594, column: 2, scope: !10257)
!10289 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1612, file: !1612, line: 49, type: !10290, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1609, retainedNodes: !322)
!10290 = !DISubroutineType(types: !10291)
!10291 = !{!2186}
!10292 = !DILocation(line: 51, column: 10, scope: !10289)
!10293 = !DILocation(line: 51, column: 20, scope: !10289)
!10294 = !DILocation(line: 51, column: 2, scope: !10289)
!10295 = distinct !DISubprogram(name: "coredump", scope: !2705, file: !2705, line: 209, type: !10296, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10442)
!10296 = !DISubroutineType(types: !10297)
!10297 = !{null, !32, !10298, !10342}
!10298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10299, size: 32)
!10299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10300)
!10300 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2318, line: 141, baseType: !10301)
!10301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2318, line: 97, size: 256, elements: !10302)
!10302 = !{!10303}
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10301, file: !2318, line: 107, baseType: !10304, size: 256)
!10304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2318, line: 98, size: 256, elements: !10305)
!10305 = !{!10306, !10311, !10316, !10321, !10326, !10331, !10336, !10341}
!10306 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 99, baseType: !10307, size: 32)
!10307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 99, size: 32, elements: !10308)
!10308 = !{!10309, !10310}
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10307, file: !2318, line: 99, baseType: !121, size: 32)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10307, file: !2318, line: 99, baseType: !121, size: 32)
!10311 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 100, baseType: !10312, size: 32, offset: 32)
!10312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 100, size: 32, elements: !10313)
!10313 = !{!10314, !10315}
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10312, file: !2318, line: 100, baseType: !121, size: 32)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10312, file: !2318, line: 100, baseType: !121, size: 32)
!10316 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 101, baseType: !10317, size: 32, offset: 64)
!10317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 101, size: 32, elements: !10318)
!10318 = !{!10319, !10320}
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10317, file: !2318, line: 101, baseType: !121, size: 32)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10317, file: !2318, line: 101, baseType: !121, size: 32)
!10321 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 102, baseType: !10322, size: 32, offset: 96)
!10322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 102, size: 32, elements: !10323)
!10323 = !{!10324, !10325}
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10322, file: !2318, line: 102, baseType: !121, size: 32)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10322, file: !2318, line: 102, baseType: !121, size: 32)
!10326 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 103, baseType: !10327, size: 32, offset: 128)
!10327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 103, size: 32, elements: !10328)
!10328 = !{!10329, !10330}
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10327, file: !2318, line: 103, baseType: !121, size: 32)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10327, file: !2318, line: 103, baseType: !121, size: 32)
!10331 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 104, baseType: !10332, size: 32, offset: 160)
!10332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 104, size: 32, elements: !10333)
!10333 = !{!10334, !10335}
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10332, file: !2318, line: 104, baseType: !121, size: 32)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10332, file: !2318, line: 104, baseType: !121, size: 32)
!10336 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !2318, line: 105, baseType: !10337, size: 32, offset: 192)
!10337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !2318, line: 105, size: 32, elements: !10338)
!10338 = !{!10339, !10340}
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10337, file: !2318, line: 105, baseType: !121, size: 32)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10337, file: !2318, line: 105, baseType: !121, size: 32)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10304, file: !2318, line: 106, baseType: !121, size: 32, offset: 224)
!10342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10343, size: 32)
!10343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !10344)
!10344 = !{!10345, !10403, !10415, !10416, !10417, !10418, !10424, !10437}
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10343, file: !211, line: 247, baseType: !10346, size: 384)
!10346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !10347)
!10347 = !{!10348, !10372, !10379, !10380, !10381, !10390, !10391, !10392}
!10348 = !DIDerivedType(tag: DW_TAG_member, scope: !10346, file: !211, line: 60, baseType: !10349, size: 64)
!10349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10346, file: !211, line: 60, size: 64, elements: !10350)
!10350 = !{!10351, !10366}
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10349, file: !211, line: 61, baseType: !10352, size: 64)
!10352 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !10353)
!10353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !10354)
!10354 = !{!10355, !10361}
!10355 = !DIDerivedType(tag: DW_TAG_member, scope: !10353, file: !221, line: 38, baseType: !10356, size: 32)
!10356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10353, file: !221, line: 38, size: 32, elements: !10357)
!10357 = !{!10358, !10360}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10356, file: !221, line: 39, baseType: !10359, size: 32)
!10359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10353, size: 32)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10356, file: !221, line: 40, baseType: !10359, size: 32)
!10361 = !DIDerivedType(tag: DW_TAG_member, scope: !10353, file: !221, line: 42, baseType: !10362, size: 32, offset: 32)
!10362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10353, file: !221, line: 42, size: 32, elements: !10363)
!10363 = !{!10364, !10365}
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10362, file: !221, line: 43, baseType: !10359, size: 32)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10362, file: !221, line: 44, baseType: !10359, size: 32)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10349, file: !211, line: 62, baseType: !10367, size: 64)
!10367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !10368)
!10368 = !{!10369}
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10367, file: !237, line: 50, baseType: !10370, size: 64)
!10370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10371, size: 64, elements: !242)
!10371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10367, size: 32)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10346, file: !211, line: 68, baseType: !10373, size: 32, offset: 64)
!10373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10374, size: 32)
!10374 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !10375)
!10375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !10376)
!10376 = !{!10377}
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10375, file: !247, line: 232, baseType: !10378, size: 64)
!10378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !10353)
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10346, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10346, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!10381 = !DIDerivedType(tag: DW_TAG_member, scope: !10346, file: !211, line: 90, baseType: !10382, size: 16, offset: 112)
!10382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10346, file: !211, line: 90, size: 16, elements: !10383)
!10383 = !{!10384, !10389}
!10384 = !DIDerivedType(tag: DW_TAG_member, scope: !10382, file: !211, line: 91, baseType: !10385, size: 16)
!10385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10382, file: !211, line: 91, size: 16, elements: !10386)
!10386 = !{!10387, !10388}
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10385, file: !211, line: 96, baseType: !261, size: 8)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10385, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10382, file: !211, line: 100, baseType: !265, size: 16)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10346, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!10391 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10346, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10346, file: !211, line: 131, baseType: !10393, size: 192, offset: 192)
!10393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !10394)
!10394 = !{!10395, !10396, !10402}
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10393, file: !247, line: 245, baseType: !10352, size: 64)
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10393, file: !247, line: 246, baseType: !10397, size: 32, offset: 64)
!10397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !10398)
!10398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10399, size: 32)
!10399 = !DISubroutineType(types: !10400)
!10400 = !{null, !10401}
!10401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10393, size: 32)
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10393, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10343, file: !211, line: 250, baseType: !10404, size: 288, offset: 384)
!10404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !10405)
!10405 = !{!10406, !10407, !10408, !10409, !10410, !10411, !10412, !10413, !10414}
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10404, file: !284, line: 26, baseType: !121, size: 32)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10404, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10404, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10404, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10404, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10404, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10404, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10404, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10404, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10343, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10343, file: !211, line: 256, baseType: !10374, size: 64, offset: 704)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10343, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10343, file: !211, line: 300, baseType: !10419, size: 96, offset: 800)
!10419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !10420)
!10420 = !{!10421, !10422, !10423}
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10419, file: !211, line: 153, baseType: !22, size: 32)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10419, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10419, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10343, file: !211, line: 325, baseType: !10425, size: 32, offset: 896)
!10425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10426, size: 32)
!10426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !10427)
!10427 = !{!10428, !10434, !10435}
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10426, file: !307, line: 5074, baseType: !10429, size: 96)
!10429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !10430)
!10430 = !{!10431, !10432, !10433}
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10429, file: !311, line: 57, baseType: !314, size: 32)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10429, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10429, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10426, file: !307, line: 5075, baseType: !10374, size: 64, offset: 96)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10426, file: !307, line: 5076, baseType: !10436, offset: 160)
!10436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10343, file: !211, line: 343, baseType: !10438, size: 64, offset: 928)
!10438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !10439)
!10439 = !{!10440, !10441}
!10440 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10438, file: !284, line: 63, baseType: !121, size: 32)
!10441 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10438, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!10442 = !{!10443, !10444, !10445}
!10443 = !DILocalVariable(name: "reason", arg: 1, scope: !10295, file: !2705, line: 209, type: !32)
!10444 = !DILocalVariable(name: "esf", arg: 2, scope: !10295, file: !2705, line: 209, type: !10298)
!10445 = !DILocalVariable(name: "thread", arg: 3, scope: !10295, file: !2705, line: 210, type: !10342)
!10446 = !DILocation(line: 0, scope: !10295)
!10447 = !DILocation(line: 212, column: 1, scope: !10295)
!10448 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2705, file: !2705, line: 214, type: !10449, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10451)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{null, !22, !22}
!10451 = !{!10452, !10453}
!10452 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10448, file: !2705, line: 214, type: !22)
!10453 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10448, file: !2705, line: 214, type: !22)
!10454 = !DILocation(line: 0, scope: !10448)
!10455 = !DILocation(line: 216, column: 1, scope: !10448)
!10456 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2705, file: !2705, line: 218, type: !10457, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10459)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{null, !1653, !200}
!10459 = !{!10460, !10461}
!10460 = !DILocalVariable(name: "buf", arg: 1, scope: !10456, file: !2705, line: 218, type: !1653)
!10461 = !DILocalVariable(name: "buflen", arg: 2, scope: !10456, file: !2705, line: 218, type: !200)
!10462 = !DILocation(line: 0, scope: !10456)
!10463 = !DILocation(line: 220, column: 1, scope: !10456)
!10464 = distinct !DISubprogram(name: "coredump_query", scope: !2705, file: !2705, line: 222, type: !10465, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10467)
!10465 = !DISubroutineType(types: !10466)
!10466 = !{!103, !2704, !102}
!10467 = !{!10468, !10469}
!10468 = !DILocalVariable(name: "query_id", arg: 1, scope: !10464, file: !2705, line: 222, type: !2704)
!10469 = !DILocalVariable(name: "arg", arg: 2, scope: !10464, file: !2705, line: 222, type: !102)
!10470 = !DILocation(line: 0, scope: !10464)
!10471 = !DILocation(line: 224, column: 2, scope: !10464)
!10472 = distinct !DISubprogram(name: "coredump_cmd", scope: !2705, file: !2705, line: 227, type: !10473, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10475)
!10473 = !DISubroutineType(types: !10474)
!10474 = !{!103, !2711, !102}
!10475 = !{!10476, !10477}
!10476 = !DILocalVariable(name: "query_id", arg: 1, scope: !10472, file: !2705, line: 227, type: !2711)
!10477 = !DILocalVariable(name: "arg", arg: 2, scope: !10472, file: !2705, line: 227, type: !102)
!10478 = !DILocation(line: 0, scope: !10472)
!10479 = !DILocation(line: 229, column: 2, scope: !10472)
!10480 = distinct !DISubprogram(name: "arch_system_halt", scope: !10481, file: !10481, line: 23, type: !4534, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10482)
!10481 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10482 = !{!10483}
!10483 = !DILocalVariable(name: "reason", arg: 1, scope: !10480, file: !10481, line: 23, type: !32)
!10484 = !DILocation(line: 0, scope: !10480)
!10485 = !DILocation(line: 55, column: 2, scope: !10486, inlinedAt: !10490)
!10486 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10487)
!10487 = !{!10488, !10489}
!10488 = !DILocalVariable(name: "key", scope: !10486, file: !4523, line: 44, type: !32)
!10489 = !DILocalVariable(name: "tmp", scope: !10486, file: !4523, line: 53, type: !32)
!10490 = distinct !DILocation(line: 31, column: 8, scope: !10480)
!10491 = !{i64 1949660}
!10492 = !DILocation(line: 0, scope: !10486, inlinedAt: !10490)
!10493 = !DILocation(line: 32, column: 2, scope: !10480)
!10494 = !DILocation(line: 32, column: 2, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !10481, line: 32, column: 2)
!10496 = distinct !DILexicalBlock(scope: !10480, file: !10481, line: 32, column: 2)
!10497 = distinct !{!10497, !10498, !10499}
!10498 = !DILocation(line: 32, column: 2, scope: !10496)
!10499 = !DILocation(line: 34, column: 2, scope: !10496)
!10500 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10481, file: !10481, line: 39, type: !10501, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{null, !32, !10298}
!10503 = !{!10504, !10505}
!10504 = !DILocalVariable(name: "reason", arg: 1, scope: !10500, file: !10481, line: 39, type: !32)
!10505 = !DILocalVariable(name: "esf", arg: 2, scope: !10500, file: !10481, line: 40, type: !10298)
!10506 = !DILocation(line: 0, scope: !10500)
!10507 = !DILocation(line: 46, column: 2, scope: !10500)
!10508 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10481, file: !10481, line: 81, type: !4534, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10509)
!10509 = !{!10510}
!10510 = !DILocalVariable(name: "reason", arg: 1, scope: !10508, file: !10481, line: 81, type: !32)
!10511 = !DILocation(line: 0, scope: !10508)
!10512 = !DILocation(line: 83, column: 2, scope: !10508)
!10513 = distinct !DISubprogram(name: "z_fatal_error", scope: !10481, file: !10481, line: 96, type: !10501, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10514)
!10514 = !{!10515, !10516, !10517, !10518}
!10515 = !DILocalVariable(name: "reason", arg: 1, scope: !10513, file: !10481, line: 96, type: !32)
!10516 = !DILocalVariable(name: "esf", arg: 2, scope: !10513, file: !10481, line: 96, type: !10298)
!10517 = !DILocalVariable(name: "key", scope: !10513, file: !10481, line: 102, type: !32)
!10518 = !DILocalVariable(name: "thread", scope: !10513, file: !10481, line: 103, type: !10342)
!10519 = !DILocation(line: 0, scope: !10513)
!10520 = !DILocation(line: 55, column: 2, scope: !10486, inlinedAt: !10521)
!10521 = distinct !DILocation(line: 102, column: 21, scope: !10513)
!10522 = !DILocation(line: 0, scope: !10486, inlinedAt: !10521)
!10523 = !DILocation(line: 119, column: 11, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10513, file: !10481, line: 119, column: 6)
!10525 = !DILocation(line: 119, column: 20, scope: !10524)
!10526 = !DILocation(line: 131, column: 2, scope: !10513)
!10527 = !DILocation(line: 151, column: 7, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !10481, line: 146, column: 32)
!10529 = distinct !DILexicalBlock(scope: !10513, file: !10481, line: 146, column: 6)
!10530 = !DILocation(line: 151, column: 21, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10528, file: !10481, line: 151, column: 7)
!10532 = !DILocation(line: 104, column: 4, scope: !10513)
!10533 = !DILocalVariable(name: "key", arg: 1, scope: !10534, file: !4523, line: 84, type: !32)
!10534 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10535)
!10535 = !{!10533}
!10536 = !DILocation(line: 0, scope: !10534, inlinedAt: !10537)
!10537 = distinct !DILocation(line: 186, column: 2, scope: !10513)
!10538 = !DILocation(line: 95, column: 2, scope: !10534, inlinedAt: !10537)
!10539 = !{i64 1950477}
!10540 = !DILocation(line: 189, column: 3, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !10481, line: 188, column: 41)
!10542 = distinct !DILexicalBlock(scope: !10513, file: !10481, line: 188, column: 6)
!10543 = !DILocation(line: 191, column: 1, scope: !10513)
!10544 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !10545, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !322)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!10547}
!10547 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !10342)
!10548 = !DILocation(line: 535, column: 9, scope: !10544)
!10549 = !DILocation(line: 535, column: 2, scope: !10544)
!10550 = distinct !DISubprogram(name: "k_thread_abort", scope: !3162, file: !3162, line: 188, type: !10551, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !10553)
!10551 = !DISubroutineType(types: !10552)
!10552 = !{null, !10547}
!10553 = !{!10554}
!10554 = !DILocalVariable(name: "thread", arg: 1, scope: !10550, file: !3162, line: 188, type: !10547)
!10555 = !DILocation(line: 0, scope: !10550)
!10556 = !DILocation(line: 197, column: 2, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10550, file: !3162, line: 197, column: 2)
!10558 = !{i64 2154064700}
!10559 = !DILocation(line: 198, column: 2, scope: !10550)
!10560 = !DILocation(line: 199, column: 1, scope: !10550)
!10561 = distinct !DISubprogram(name: "z_current_get", scope: !3162, file: !3162, line: 173, type: !10545, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !322)
!10562 = !DILocation(line: 180, column: 2, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10561, file: !3162, line: 180, column: 2)
!10564 = !{i64 2154064632}
!10565 = !DILocation(line: 181, column: 9, scope: !10561)
!10566 = !DILocation(line: 181, column: 2, scope: !10561)
!10567 = distinct !DISubprogram(name: "z_early_memset", scope: !1620, file: !1620, line: 108, type: !10568, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10570)
!10568 = !DISubroutineType(types: !10569)
!10569 = !{null, !102, !103, !200}
!10570 = !{!10571, !10572, !10573}
!10571 = !DILocalVariable(name: "dst", arg: 1, scope: !10567, file: !1620, line: 108, type: !102)
!10572 = !DILocalVariable(name: "c", arg: 2, scope: !10567, file: !1620, line: 108, type: !103)
!10573 = !DILocalVariable(name: "n", arg: 3, scope: !10567, file: !1620, line: 108, type: !200)
!10574 = !DILocation(line: 0, scope: !10567)
!10575 = !DILocation(line: 110, column: 9, scope: !10567)
!10576 = !DILocation(line: 111, column: 1, scope: !10567)
!10577 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1620, file: !1620, line: 121, type: !10578, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10580)
!10578 = !DISubroutineType(types: !10579)
!10579 = !{null, !102, !13, !200}
!10580 = !{!10581, !10582, !10583}
!10581 = !DILocalVariable(name: "dst", arg: 1, scope: !10577, file: !1620, line: 121, type: !102)
!10582 = !DILocalVariable(name: "src", arg: 2, scope: !10577, file: !1620, line: 121, type: !13)
!10583 = !DILocalVariable(name: "n", arg: 3, scope: !10577, file: !1620, line: 121, type: !200)
!10584 = !DILocation(line: 0, scope: !10577)
!10585 = !DILocation(line: 123, column: 9, scope: !10577)
!10586 = !DILocation(line: 124, column: 1, scope: !10577)
!10587 = distinct !DISubprogram(name: "z_bss_zero", scope: !1620, file: !1620, line: 132, type: !2738, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!10588 = !DILocation(line: 143, column: 2, scope: !10587)
!10589 = !DILocation(line: 168, column: 1, scope: !10587)
!10590 = distinct !DISubprogram(name: "z_init_cpu", scope: !1620, file: !1620, line: 372, type: !6342, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10591)
!10591 = !{!10592}
!10592 = !DILocalVariable(name: "id", arg: 1, scope: !10590, file: !1620, line: 372, type: !103)
!10593 = !DILocation(line: 0, scope: !10590)
!10594 = !DILocation(line: 374, column: 2, scope: !10590)
!10595 = !DILocation(line: 375, column: 34, scope: !10590)
!10596 = !DILocation(line: 375, column: 19, scope: !10590)
!10597 = !DILocation(line: 375, column: 31, scope: !10590)
!10598 = !DILocation(line: 376, column: 24, scope: !10590)
!10599 = !DILocation(line: 376, column: 19, scope: !10590)
!10600 = !DILocation(line: 376, column: 22, scope: !10590)
!10601 = !DILocation(line: 378, column: 26, scope: !10590)
!10602 = !DILocation(line: 378, column: 4, scope: !10590)
!10603 = !DILocation(line: 378, column: 50, scope: !10590)
!10604 = !DILocation(line: 377, column: 19, scope: !10590)
!10605 = !DILocation(line: 377, column: 29, scope: !10590)
!10606 = !DILocation(line: 384, column: 1, scope: !10590)
!10607 = distinct !DISubprogram(name: "init_idle_thread", scope: !1620, file: !1620, line: 343, type: !6342, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10608)
!10608 = !{!10609, !10610, !10611, !10614}
!10609 = !DILocalVariable(name: "i", arg: 1, scope: !10607, file: !1620, line: 343, type: !103)
!10610 = !DILocalVariable(name: "thread", scope: !10607, file: !1620, line: 345, type: !1713)
!10611 = !DILocalVariable(name: "stack", scope: !10607, file: !1620, line: 346, type: !10612)
!10612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10613, size: 32)
!10613 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3041, line: 44, baseType: !1827)
!10614 = !DILocalVariable(name: "tname", scope: !10607, file: !1620, line: 358, type: !957)
!10615 = !DILocation(line: 0, scope: !10607)
!10616 = !DILocation(line: 345, column: 29, scope: !10607)
!10617 = !DILocation(line: 346, column: 28, scope: !10607)
!10618 = !DILocation(line: 362, column: 37, scope: !10607)
!10619 = !DILocation(line: 362, column: 36, scope: !10607)
!10620 = !DILocation(line: 361, column: 2, scope: !10607)
!10621 = !DILocation(line: 365, column: 2, scope: !10607)
!10622 = !DILocation(line: 370, column: 1, scope: !10607)
!10623 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1828, file: !1828, line: 331, type: !10624, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10626)
!10624 = !DISubroutineType(types: !10625)
!10625 = !{!957, !10612}
!10626 = !{!10627}
!10627 = !DILocalVariable(name: "sym", arg: 1, scope: !10623, file: !1828, line: 331, type: !10612)
!10628 = !DILocation(line: 0, scope: !10623)
!10629 = !DILocation(line: 333, column: 21, scope: !10623)
!10630 = !DILocation(line: 333, column: 2, scope: !10623)
!10631 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10632, file: !10632, line: 155, type: !10633, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10635)
!10632 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10633 = !DISubroutineType(types: !10634)
!10634 = !{null, !1713}
!10635 = !{!10636}
!10636 = !DILocalVariable(name: "thread", arg: 1, scope: !10631, file: !10632, line: 155, type: !1713)
!10637 = !DILocation(line: 0, scope: !10631)
!10638 = !DILocation(line: 157, column: 15, scope: !10631)
!10639 = !DILocation(line: 157, column: 28, scope: !10631)
!10640 = !DILocation(line: 158, column: 1, scope: !10631)
!10641 = distinct !DISubprogram(name: "z_cstart", scope: !1620, file: !1620, line: 501, type: !2738, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10642)
!10642 = !{!10643}
!10643 = !DILocalVariable(name: "dummy_thread", scope: !10641, file: !1620, line: 518, type: !1714)
!10644 = !DILocation(line: 507, column: 2, scope: !10641)
!10645 = !DILocation(line: 43, column: 14, scope: !10646, inlinedAt: !10650)
!10646 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10647, file: !10647, line: 40, type: !2738, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10648)
!10647 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "msp", scope: !10646, file: !10647, line: 42, type: !121)
!10650 = distinct !DILocation(line: 44, column: 2, scope: !10651, inlinedAt: !10653)
!10651 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10652, file: !10652, line: 42, type: !2738, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!10652 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10653 = distinct !DILocation(line: 510, column: 2, scope: !10641)
!10654 = !DILocation(line: 43, column: 3, scope: !10646, inlinedAt: !10650)
!10655 = !DILocation(line: 43, column: 60, scope: !10646, inlinedAt: !10650)
!10656 = !DILocation(line: 0, scope: !10646, inlinedAt: !10650)
!10657 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10658, file: !4697, line: 1153, type: !121)
!10658 = distinct !DISubprogram(name: "__set_MSP", scope: !4697, file: !4697, line: 1153, type: !4788, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10659)
!10659 = !{!10657}
!10660 = !DILocation(line: 0, scope: !10658, inlinedAt: !10661)
!10661 = distinct !DILocation(line: 46, column: 2, scope: !10646, inlinedAt: !10650)
!10662 = !DILocation(line: 1155, column: 3, scope: !10658, inlinedAt: !10661)
!10663 = !{i64 2846904}
!10664 = !DILocation(line: 62, column: 11, scope: !10646, inlinedAt: !10650)
!10665 = !DILocation(line: 102, column: 2, scope: !10666, inlinedAt: !10667)
!10666 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5491, file: !5491, line: 97, type: !2738, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!10667 = distinct !DILocation(line: 45, column: 2, scope: !10651, inlinedAt: !10653)
!10668 = !DILocation(line: 108, column: 2, scope: !10666, inlinedAt: !10667)
!10669 = !DILocation(line: 112, column: 2, scope: !10666, inlinedAt: !10667)
!10670 = !DILocation(line: 113, column: 2, scope: !10666, inlinedAt: !10667)
!10671 = !DILocation(line: 114, column: 2, scope: !10666, inlinedAt: !10667)
!10672 = !DILocation(line: 116, column: 2, scope: !10666, inlinedAt: !10667)
!10673 = !DILocation(line: 123, column: 13, scope: !10666, inlinedAt: !10667)
!10674 = !DILocation(line: 46, column: 2, scope: !10651, inlinedAt: !10653)
!10675 = !DILocation(line: 47, column: 2, scope: !10651, inlinedAt: !10653)
!10676 = !DILocation(line: 174, column: 12, scope: !10677, inlinedAt: !10678)
!10677 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5491, file: !5491, line: 169, type: !2738, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!10678 = distinct !DILocation(line: 48, column: 2, scope: !10651, inlinedAt: !10653)
!10679 = !DILocation(line: 179, column: 12, scope: !10677, inlinedAt: !10678)
!10680 = !DILocation(line: 50, column: 2, scope: !10651, inlinedAt: !10653)
!10681 = !DILocation(line: 57, column: 2, scope: !10651, inlinedAt: !10653)
!10682 = !DILocation(line: 518, column: 2, scope: !10641)
!10683 = !DILocation(line: 518, column: 18, scope: !10641)
!10684 = !DILocation(line: 520, column: 2, scope: !10641)
!10685 = !DILocation(line: 523, column: 2, scope: !10641)
!10686 = !DILocation(line: 526, column: 2, scope: !10641)
!10687 = !DILocation(line: 527, column: 2, scope: !10641)
!10688 = !DILocation(line: 543, column: 24, scope: !10641)
!10689 = !DILocation(line: 543, column: 2, scope: !10641)
!10690 = !DILocation(line: 0, scope: !1847)
!10691 = !DILocation(line: 246, column: 15, scope: !1865)
!10692 = !DILocation(line: 246, column: 36, scope: !1864)
!10693 = !DILocation(line: 246, column: 2, scope: !1865)
!10694 = !DILocation(line: 247, column: 37, scope: !1863)
!10695 = !DILocation(line: 0, scope: !1863)
!10696 = !DILocation(line: 248, column: 19, scope: !1863)
!10697 = !DILocation(line: 248, column: 12, scope: !1863)
!10698 = !DILocation(line: 250, column: 11, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !1863, file: !1620, line: 250, column: 7)
!10700 = !DILocation(line: 250, column: 7, scope: !1863)
!10701 = !DILocation(line: 254, column: 11, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !1620, line: 254, column: 8)
!10703 = distinct !DILexicalBlock(scope: !10699, file: !1620, line: 250, column: 20)
!10704 = !DILocation(line: 254, column: 8, scope: !10703)
!10705 = !DILocation(line: 255, column: 9, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10702, file: !1620, line: 254, column: 17)
!10707 = !DILocation(line: 258, column: 9, scope: !10706)
!10708 = !DILocation(line: 261, column: 28, scope: !10706)
!10709 = !DILocation(line: 261, column: 10, scope: !10706)
!10710 = !DILocation(line: 261, column: 17, scope: !10706)
!10711 = !DILocation(line: 261, column: 26, scope: !10706)
!10712 = !DILocation(line: 262, column: 4, scope: !10706)
!10713 = !DILocation(line: 263, column: 9, scope: !10703)
!10714 = !DILocation(line: 263, column: 16, scope: !10703)
!10715 = !DILocation(line: 263, column: 28, scope: !10703)
!10716 = !DILocation(line: 264, column: 3, scope: !10703)
!10717 = !DILocation(line: 246, column: 60, scope: !1864)
!10718 = distinct !{!10718, !10693, !10719}
!10719 = !DILocation(line: 265, column: 2, scope: !1865)
!10720 = !DILocation(line: 266, column: 1, scope: !1847)
!10721 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4731, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10722)
!10722 = !{!10723, !10724}
!10723 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10721, file: !356, line: 1814, type: !592)
!10724 = !DILocalVariable(name: "priority", arg: 2, scope: !10721, file: !356, line: 1814, type: !121)
!10725 = !DILocation(line: 0, scope: !10721)
!10726 = !DILocation(line: 1822, column: 48, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10728, file: !356, line: 1821, column: 3)
!10728 = distinct !DILexicalBlock(scope: !10721, file: !356, line: 1816, column: 7)
!10729 = !DILocation(line: 1822, column: 32, scope: !10727)
!10730 = !DILocation(line: 1822, column: 40, scope: !10727)
!10731 = !DILocation(line: 1822, column: 5, scope: !10727)
!10732 = !DILocation(line: 1822, column: 46, scope: !10727)
!10733 = !DILocation(line: 1824, column: 1, scope: !10721)
!10734 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10652, file: !10652, line: 32, type: !2738, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10735 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10736, file: !10736, line: 215, type: !10633, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10737)
!10736 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10737 = !{!10738}
!10738 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10735, file: !10736, line: 215, type: !1713)
!10739 = !DILocation(line: 0, scope: !10735)
!10740 = !DILocation(line: 217, column: 21, scope: !10735)
!10741 = !DILocation(line: 217, column: 34, scope: !10735)
!10742 = !DILocation(line: 221, column: 21, scope: !10735)
!10743 = !DILocation(line: 221, column: 34, scope: !10735)
!10744 = !DILocation(line: 223, column: 27, scope: !10735)
!10745 = !DILocation(line: 223, column: 33, scope: !10735)
!10746 = !DILocation(line: 224, column: 27, scope: !10735)
!10747 = !DILocation(line: 224, column: 32, scope: !10735)
!10748 = !DILocation(line: 232, column: 16, scope: !10735)
!10749 = !DILocation(line: 232, column: 30, scope: !10735)
!10750 = !DILocation(line: 239, column: 24, scope: !10735)
!10751 = !DILocation(line: 240, column: 1, scope: !10735)
!10752 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1620, file: !1620, line: 399, type: !10753, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{!957}
!10755 = !{!10756}
!10756 = !DILocalVariable(name: "stack_ptr", scope: !10752, file: !1620, line: 401, type: !957)
!10757 = !DILocation(line: 404, column: 2, scope: !10752)
!10758 = !DILocation(line: 416, column: 24, scope: !10752)
!10759 = !DILocation(line: 418, column: 14, scope: !10752)
!10760 = !DILocation(line: 0, scope: !10752)
!10761 = !DILocation(line: 423, column: 2, scope: !10752)
!10762 = !DILocation(line: 424, column: 2, scope: !10752)
!10763 = !DILocation(line: 426, column: 2, scope: !10752)
!10764 = !DILocation(line: 428, column: 2, scope: !10752)
!10765 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1620, file: !1620, line: 432, type: !10766, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10768)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !957}
!10768 = !{!10769}
!10769 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10765, file: !1620, line: 432, type: !957)
!10770 = !DILocation(line: 0, scope: !10765)
!10771 = !DILocation(line: 435, column: 2, scope: !10765)
!10772 = !DILocation(line: 445, column: 2, scope: !10765)
!10773 = distinct !DISubprogram(name: "bg_thread_main", scope: !1620, file: !1620, line: 277, type: !3043, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !10774)
!10774 = !{!10775, !10776, !10777}
!10775 = !DILocalVariable(name: "unused1", arg: 1, scope: !10773, file: !1620, line: 277, type: !102)
!10776 = !DILocalVariable(name: "unused2", arg: 2, scope: !10773, file: !1620, line: 277, type: !102)
!10777 = !DILocalVariable(name: "unused3", arg: 3, scope: !10773, file: !1620, line: 277, type: !102)
!10778 = !DILocation(line: 0, scope: !10773)
!10779 = !DILocation(line: 291, column: 20, scope: !10773)
!10780 = !DILocation(line: 293, column: 2, scope: !10773)
!10781 = !DILocation(line: 297, column: 2, scope: !10773)
!10782 = !DILocation(line: 305, column: 2, scope: !10773)
!10783 = !DILocation(line: 307, column: 2, scope: !10773)
!10784 = !DILocation(line: 330, column: 8, scope: !10773)
!10785 = !DILocation(line: 333, column: 34, scope: !10773)
!10786 = !DILocation(line: 339, column: 1, scope: !10773)
!10787 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1876, file: !1876, line: 45, type: !10788, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10796)
!10788 = !DISubroutineType(types: !10789)
!10789 = !{null, !10790, !102}
!10790 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !10791)
!10791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10792, size: 32)
!10792 = !DISubroutineType(types: !10793)
!10793 = !{null, !10794, !102}
!10794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10795, size: 32)
!10795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!10796 = !{!10797, !10798}
!10797 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10787, file: !1876, line: 45, type: !10790)
!10798 = !DILocalVariable(name: "user_data", arg: 2, scope: !10787, file: !1876, line: 45, type: !102)
!10799 = !DILocation(line: 0, scope: !10787)
!10800 = !DILocation(line: 71, column: 1, scope: !10787)
!10801 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1876, file: !1876, line: 73, type: !10788, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10802)
!10802 = !{!10803, !10804}
!10803 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10801, file: !1876, line: 73, type: !10790)
!10804 = !DILocalVariable(name: "user_data", arg: 2, scope: !10801, file: !1876, line: 73, type: !102)
!10805 = !DILocation(line: 0, scope: !10801)
!10806 = !DILocation(line: 95, column: 1, scope: !10801)
!10807 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1876, file: !1876, line: 97, type: !5492, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!10808 = !DILocation(line: 1031, column: 3, scope: !10809, inlinedAt: !10812)
!10809 = distinct !DISubprogram(name: "__get_IPSR", scope: !4697, file: !4697, line: 1027, type: !4778, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10810)
!10810 = !{!10811}
!10811 = !DILocalVariable(name: "result", scope: !10809, file: !4697, line: 1029, type: !121)
!10812 = distinct !DILocation(line: 48, column: 10, scope: !10813, inlinedAt: !10814)
!10813 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5491, file: !5491, line: 46, type: !5492, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!10814 = distinct !DILocation(line: 99, column: 9, scope: !10807)
!10815 = !{i64 2852555}
!10816 = !DILocation(line: 0, scope: !10809, inlinedAt: !10812)
!10817 = !DILocation(line: 48, column: 9, scope: !10813, inlinedAt: !10814)
!10818 = !DILocation(line: 99, column: 2, scope: !10807)
!10819 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1876, file: !1876, line: 106, type: !2738, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!10820 = !DILocation(line: 108, column: 2, scope: !10819)
!10821 = !DILocation(line: 108, column: 17, scope: !10819)
!10822 = !DILocation(line: 108, column: 30, scope: !10819)
!10823 = !DILocation(line: 109, column: 1, scope: !10819)
!10824 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1876, file: !1876, line: 116, type: !2738, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!10825 = !DILocation(line: 118, column: 2, scope: !10824)
!10826 = !DILocation(line: 118, column: 17, scope: !10824)
!10827 = !DILocation(line: 118, column: 30, scope: !10824)
!10828 = !DILocation(line: 119, column: 1, scope: !10824)
!10829 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1876, file: !1876, line: 126, type: !5492, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!10830 = !DILocation(line: 128, column: 10, scope: !10829)
!10831 = !DILocation(line: 128, column: 25, scope: !10829)
!10832 = !DILocation(line: 128, column: 38, scope: !10829)
!10833 = !DILocation(line: 128, column: 53, scope: !10829)
!10834 = !DILocation(line: 128, column: 2, scope: !10829)
!10835 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1876, file: !1876, line: 187, type: !10836, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10838)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{!103, !1880, !144}
!10838 = !{!10839, !10840}
!10839 = !DILocalVariable(name: "thread", arg: 1, scope: !10835, file: !1876, line: 187, type: !1880)
!10840 = !DILocalVariable(name: "value", arg: 2, scope: !10835, file: !1876, line: 187, type: !144)
!10841 = !DILocation(line: 0, scope: !10835)
!10842 = !DILocation(line: 206, column: 2, scope: !10835)
!10843 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1876, file: !1876, line: 238, type: !10844, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10846)
!10844 = !DISubroutineType(types: !10845)
!10845 = !{!144, !1880}
!10846 = !{!10847}
!10847 = !DILocalVariable(name: "thread", arg: 1, scope: !10843, file: !1876, line: 238, type: !1880)
!10848 = !DILocation(line: 0, scope: !10843)
!10849 = !DILocation(line: 244, column: 2, scope: !10843)
!10850 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1876, file: !1876, line: 248, type: !10851, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10853)
!10851 = !DISubroutineType(types: !10852)
!10852 = !{!103, !1879, !957, !200}
!10853 = !{!10854, !10855, !10856}
!10854 = !DILocalVariable(name: "thread", arg: 1, scope: !10850, file: !1876, line: 248, type: !1879)
!10855 = !DILocalVariable(name: "buf", arg: 2, scope: !10850, file: !1876, line: 248, type: !957)
!10856 = !DILocalVariable(name: "size", arg: 3, scope: !10850, file: !1876, line: 248, type: !200)
!10857 = !DILocation(line: 0, scope: !10850)
!10858 = !DILocation(line: 257, column: 2, scope: !10850)
!10859 = !DILocation(line: 0, scope: !1875)
!10860 = !DILocation(line: 281, column: 11, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !1875, file: !1876, line: 281, column: 6)
!10862 = !DILocation(line: 281, column: 20, scope: !10861)
!10863 = !DILocation(line: 275, column: 45, scope: !1875)
!10864 = !DILocation(line: 285, column: 10, scope: !1875)
!10865 = !DILocation(line: 0, scope: !1996)
!10866 = !DILocation(line: 293, column: 39, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !1996, file: !1876, line: 293, column: 2)
!10868 = !DILocation(line: 293, column: 2, scope: !1996)
!10869 = !DILocation(line: 273, column: 14, scope: !1875)
!10870 = !DILocation(line: 309, column: 2, scope: !1875)
!10871 = !DILocation(line: 309, column: 11, scope: !1875)
!10872 = !DILocation(line: 311, column: 2, scope: !1875)
!10873 = !DILocation(line: 293, column: 26, scope: !10867)
!10874 = !DILocation(line: 294, column: 9, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10867, file: !1876, line: 293, column: 54)
!10876 = !DILocation(line: 295, column: 21, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10875, file: !1876, line: 295, column: 7)
!10878 = !DILocation(line: 295, column: 28, scope: !10877)
!10879 = !DILocation(line: 295, column: 7, scope: !10875)
!10880 = !DILocation(line: 299, column: 25, scope: !10875)
!10881 = !DILocation(line: 299, column: 41, scope: !10875)
!10882 = !DILocation(line: 300, column: 7, scope: !10875)
!10883 = !DILocation(line: 300, column: 26, scope: !10875)
!10884 = !DILocation(line: 299, column: 10, scope: !10875)
!10885 = !DILocation(line: 299, column: 7, scope: !10875)
!10886 = !DILocation(line: 302, column: 16, scope: !10875)
!10887 = !DILocation(line: 304, column: 20, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10875, file: !1876, line: 304, column: 7)
!10889 = !DILocation(line: 304, column: 7, scope: !10875)
!10890 = !DILocation(line: 305, column: 26, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10888, file: !1876, line: 304, column: 26)
!10892 = !DILocation(line: 305, column: 42, scope: !10891)
!10893 = !DILocation(line: 305, column: 11, scope: !10891)
!10894 = !DILocation(line: 305, column: 8, scope: !10891)
!10895 = !DILocation(line: 306, column: 3, scope: !10891)
!10896 = !DILocation(line: 293, column: 50, scope: !10867)
!10897 = !DILocation(line: 312, column: 1, scope: !1875)
!10898 = distinct !DISubprogram(name: "copy_bytes", scope: !1876, file: !1876, line: 261, type: !10899, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10901)
!10899 = !DISubroutineType(types: !10900)
!10900 = !{!200, !957, !200, !144, !200}
!10901 = !{!10902, !10903, !10904, !10905, !10906}
!10902 = !DILocalVariable(name: "dest", arg: 1, scope: !10898, file: !1876, line: 261, type: !957)
!10903 = !DILocalVariable(name: "dest_size", arg: 2, scope: !10898, file: !1876, line: 261, type: !200)
!10904 = !DILocalVariable(name: "src", arg: 3, scope: !10898, file: !1876, line: 261, type: !144)
!10905 = !DILocalVariable(name: "src_size", arg: 4, scope: !10898, file: !1876, line: 261, type: !200)
!10906 = !DILocalVariable(name: "bytes_to_copy", scope: !10898, file: !1876, line: 263, type: !200)
!10907 = !DILocation(line: 0, scope: !10898)
!10908 = !DILocation(line: 265, column: 18, scope: !10898)
!10909 = !DILocation(line: 266, column: 2, scope: !10898)
!10910 = !DILocation(line: 268, column: 2, scope: !10898)
!10911 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1876, file: !1876, line: 383, type: !10912, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10914)
!10912 = !DISubroutineType(types: !10913)
!10913 = !{null, !1880}
!10914 = !{!10915}
!10915 = !DILocalVariable(name: "thread", arg: 1, scope: !10911, file: !1876, line: 383, type: !1880)
!10916 = !DILocation(line: 0, scope: !10911)
!10917 = !DILocation(line: 387, column: 2, scope: !10911)
!10918 = !DILocation(line: 388, column: 1, scope: !10911)
!10919 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1876, file: !1876, line: 528, type: !10920, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10927)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{!957, !1880, !10922, !200, !3040, !102, !102, !102, !103, !121, !144}
!10922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10923, size: 32)
!10923 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3041, line: 44, baseType: !10924)
!10924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !10925)
!10925 = !{!10926}
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10924, file: !1828, line: 48, baseType: !146, size: 8)
!10927 = !{!10928, !10929, !10930, !10931, !10932, !10933, !10934, !10935, !10936, !10937, !10938}
!10928 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10919, file: !1876, line: 528, type: !1880)
!10929 = !DILocalVariable(name: "stack", arg: 2, scope: !10919, file: !1876, line: 529, type: !10922)
!10930 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10919, file: !1876, line: 529, type: !200)
!10931 = !DILocalVariable(name: "entry", arg: 4, scope: !10919, file: !1876, line: 530, type: !3040)
!10932 = !DILocalVariable(name: "p1", arg: 5, scope: !10919, file: !1876, line: 531, type: !102)
!10933 = !DILocalVariable(name: "p2", arg: 6, scope: !10919, file: !1876, line: 531, type: !102)
!10934 = !DILocalVariable(name: "p3", arg: 7, scope: !10919, file: !1876, line: 531, type: !102)
!10935 = !DILocalVariable(name: "prio", arg: 8, scope: !10919, file: !1876, line: 532, type: !103)
!10936 = !DILocalVariable(name: "options", arg: 9, scope: !10919, file: !1876, line: 532, type: !121)
!10937 = !DILocalVariable(name: "name", arg: 10, scope: !10919, file: !1876, line: 532, type: !144)
!10938 = !DILocalVariable(name: "stack_ptr", scope: !10919, file: !1876, line: 534, type: !957)
!10939 = !DILocation(line: 0, scope: !10919)
!10940 = !DILocation(line: 550, column: 28, scope: !10919)
!10941 = !DILocation(line: 550, column: 2, scope: !10919)
!10942 = !DILocation(line: 553, column: 34, scope: !10919)
!10943 = !DILocation(line: 553, column: 2, scope: !10919)
!10944 = !DILocation(line: 554, column: 14, scope: !10919)
!10945 = !DILocation(line: 564, column: 2, scope: !10919)
!10946 = !DILocation(line: 567, column: 14, scope: !10919)
!10947 = !DILocation(line: 567, column: 24, scope: !10919)
!10948 = !DILocation(line: 612, column: 7, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10919, file: !1876, line: 612, column: 6)
!10950 = !DILocation(line: 612, column: 6, scope: !10919)
!10951 = !DILocation(line: 627, column: 40, scope: !10919)
!10952 = !DILocation(line: 637, column: 2, scope: !10919)
!10953 = !DILocation(line: 613, column: 15, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10949, file: !1876, line: 612, column: 17)
!10955 = !DILocation(line: 613, column: 29, scope: !10954)
!10956 = !DILocation(line: 638, column: 1, scope: !10919)
!10957 = distinct !DISubprogram(name: "z_waitq_init", scope: !10958, file: !10958, line: 47, type: !10959, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10961)
!10958 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10959 = !DISubroutineType(types: !10960)
!10960 = !{null, !1911}
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "w", arg: 1, scope: !10957, file: !10958, line: 47, type: !1911)
!10963 = !DILocation(line: 0, scope: !10957)
!10964 = !DILocation(line: 49, column: 21, scope: !10957)
!10965 = !DILocation(line: 49, column: 2, scope: !10957)
!10966 = !DILocation(line: 50, column: 1, scope: !10957)
!10967 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1876, file: !1876, line: 791, type: !10968, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10971)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{null, !10970, !103, !121, !32}
!10970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!10971 = !{!10972, !10973, !10974, !10975}
!10972 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10967, file: !1876, line: 791, type: !10970)
!10973 = !DILocalVariable(name: "priority", arg: 2, scope: !10967, file: !1876, line: 791, type: !103)
!10974 = !DILocalVariable(name: "initial_state", arg: 3, scope: !10967, file: !1876, line: 792, type: !121)
!10975 = !DILocalVariable(name: "options", arg: 4, scope: !10967, file: !1876, line: 792, type: !32)
!10976 = !DILocation(line: 0, scope: !10967)
!10977 = !DILocation(line: 795, column: 15, scope: !10967)
!10978 = !DILocation(line: 795, column: 25, scope: !10967)
!10979 = !DILocation(line: 796, column: 30, scope: !10967)
!10980 = !DILocation(line: 796, column: 15, scope: !10967)
!10981 = !DILocation(line: 796, column: 28, scope: !10967)
!10982 = !DILocation(line: 797, column: 30, scope: !10967)
!10983 = !DILocation(line: 797, column: 15, scope: !10967)
!10984 = !DILocation(line: 797, column: 28, scope: !10967)
!10985 = !DILocation(line: 799, column: 22, scope: !10967)
!10986 = !DILocation(line: 799, column: 15, scope: !10967)
!10987 = !DILocation(line: 799, column: 20, scope: !10967)
!10988 = !DILocation(line: 801, column: 15, scope: !10967)
!10989 = !DILocation(line: 801, column: 28, scope: !10967)
!10990 = !DILocation(line: 814, column: 2, scope: !10967)
!10991 = !DILocation(line: 815, column: 1, scope: !10967)
!10992 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1876, file: !1876, line: 449, type: !10993, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !10995)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!957, !1880, !10922, !200}
!10995 = !{!10996, !10997, !10998, !10999, !11000, !11001, !11002, !11003}
!10996 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10992, file: !1876, line: 449, type: !1880)
!10997 = !DILocalVariable(name: "stack", arg: 2, scope: !10992, file: !1876, line: 450, type: !10922)
!10998 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10992, file: !1876, line: 450, type: !200)
!10999 = !DILocalVariable(name: "stack_obj_size", scope: !10992, file: !1876, line: 452, type: !200)
!11000 = !DILocalVariable(name: "stack_buf_size", scope: !10992, file: !1876, line: 452, type: !200)
!11001 = !DILocalVariable(name: "stack_ptr", scope: !10992, file: !1876, line: 453, type: !957)
!11002 = !DILocalVariable(name: "stack_buf_start", scope: !10992, file: !1876, line: 453, type: !957)
!11003 = !DILocalVariable(name: "delta", scope: !10992, file: !1876, line: 454, type: !200)
!11004 = !DILocation(line: 0, scope: !10992)
!11005 = !DILocation(line: 465, column: 20, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10992, file: !1876, line: 463, column: 2)
!11007 = !DILocation(line: 466, column: 21, scope: !11006)
!11008 = !DILocation(line: 473, column: 28, scope: !10992)
!11009 = !DILocation(line: 514, column: 33, scope: !10992)
!11010 = !DILocation(line: 514, column: 25, scope: !10992)
!11011 = !DILocation(line: 514, column: 31, scope: !10992)
!11012 = !DILocation(line: 515, column: 25, scope: !10992)
!11013 = !DILocation(line: 515, column: 30, scope: !10992)
!11014 = !DILocation(line: 516, column: 25, scope: !10992)
!11015 = !DILocation(line: 516, column: 31, scope: !10992)
!11016 = !DILocation(line: 520, column: 2, scope: !10992)
!11017 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1828, file: !1828, line: 331, type: !11018, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11020)
!11018 = !DISubroutineType(types: !11019)
!11019 = !{!957, !10922}
!11020 = !{!11021}
!11021 = !DILocalVariable(name: "sym", arg: 1, scope: !11017, file: !1828, line: 331, type: !10922)
!11022 = !DILocation(line: 0, scope: !11017)
!11023 = !DILocation(line: 333, column: 21, scope: !11017)
!11024 = !DILocation(line: 333, column: 2, scope: !11017)
!11025 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11026, file: !11026, line: 40, type: !11027, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11029)
!11026 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11027 = !DISubroutineType(types: !11028)
!11028 = !{null, !10970}
!11029 = !{!11030}
!11030 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11025, file: !11026, line: 40, type: !10970)
!11031 = !DILocation(line: 0, scope: !11025)
!11032 = !DILocation(line: 42, column: 31, scope: !11025)
!11033 = !DILocation(line: 42, column: 2, scope: !11025)
!11034 = !DILocation(line: 43, column: 1, scope: !11025)
!11035 = distinct !DISubprogram(name: "z_init_timeout", scope: !11026, file: !11026, line: 25, type: !1937, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11036)
!11036 = !{!11037}
!11037 = !DILocalVariable(name: "to", arg: 1, scope: !11035, file: !11026, line: 25, type: !1939)
!11038 = !DILocation(line: 0, scope: !11035)
!11039 = !DILocation(line: 27, column: 22, scope: !11035)
!11040 = !DILocation(line: 27, column: 2, scope: !11035)
!11041 = !DILocation(line: 28, column: 1, scope: !11035)
!11042 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11043, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11045)
!11043 = !DISubroutineType(types: !11044)
!11044 = !{null, !1983}
!11045 = !{!11046}
!11046 = !DILocalVariable(name: "node", arg: 1, scope: !11042, file: !221, line: 211, type: !1983)
!11047 = !DILocation(line: 0, scope: !11042)
!11048 = !DILocation(line: 213, column: 8, scope: !11042)
!11049 = !DILocation(line: 213, column: 13, scope: !11042)
!11050 = !DILocation(line: 214, column: 8, scope: !11042)
!11051 = !DILocation(line: 214, column: 13, scope: !11042)
!11052 = !DILocation(line: 215, column: 1, scope: !11042)
!11053 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11054, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11057)
!11054 = !DISubroutineType(types: !11055)
!11055 = !{null, !11056}
!11056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!11057 = !{!11058}
!11058 = !DILocalVariable(name: "list", arg: 1, scope: !11053, file: !221, line: 197, type: !11056)
!11059 = !DILocation(line: 0, scope: !11053)
!11060 = !DILocation(line: 199, column: 8, scope: !11053)
!11061 = !DILocation(line: 199, column: 13, scope: !11053)
!11062 = !DILocation(line: 200, column: 8, scope: !11053)
!11063 = !DILocation(line: 200, column: 13, scope: !11053)
!11064 = !DILocation(line: 201, column: 1, scope: !11053)
!11065 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1876, file: !1876, line: 641, type: !11066, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11072)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{!1879, !1880, !10922, !200, !3040, !102, !102, !102, !103, !121, !11068}
!11068 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !11069)
!11069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !11070)
!11070 = !{!11071}
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11069, file: !1359, line: 66, baseType: !1358, size: 64)
!11072 = !{!11073, !11074, !11075, !11076, !11077, !11078, !11079, !11080, !11081, !11082}
!11073 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11065, file: !1876, line: 641, type: !1880)
!11074 = !DILocalVariable(name: "stack", arg: 2, scope: !11065, file: !1876, line: 642, type: !10922)
!11075 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11065, file: !1876, line: 643, type: !200)
!11076 = !DILocalVariable(name: "entry", arg: 4, scope: !11065, file: !1876, line: 643, type: !3040)
!11077 = !DILocalVariable(name: "p1", arg: 5, scope: !11065, file: !1876, line: 644, type: !102)
!11078 = !DILocalVariable(name: "p2", arg: 6, scope: !11065, file: !1876, line: 644, type: !102)
!11079 = !DILocalVariable(name: "p3", arg: 7, scope: !11065, file: !1876, line: 644, type: !102)
!11080 = !DILocalVariable(name: "prio", arg: 8, scope: !11065, file: !1876, line: 645, type: !103)
!11081 = !DILocalVariable(name: "options", arg: 9, scope: !11065, file: !1876, line: 645, type: !121)
!11082 = !DILocalVariable(name: "delay", arg: 10, scope: !11065, file: !1876, line: 645, type: !11068)
!11083 = !DILocation(line: 0, scope: !11065)
!11084 = !DILocation(line: 649, column: 2, scope: !11065)
!11085 = !DILocation(line: 652, column: 7, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11065, file: !1876, line: 652, column: 6)
!11087 = !DILocation(line: 652, column: 6, scope: !11065)
!11088 = !DILocation(line: 653, column: 3, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11086, file: !1876, line: 652, column: 39)
!11090 = !DILocation(line: 654, column: 2, scope: !11089)
!11091 = !DILocation(line: 656, column: 2, scope: !11065)
!11092 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1876, file: !1876, line: 401, type: !11093, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11095)
!11093 = !DISubroutineType(types: !11094)
!11094 = !{null, !1880, !11068}
!11095 = !{!11096, !11097}
!11096 = !DILocalVariable(name: "thread", arg: 1, scope: !11092, file: !1876, line: 401, type: !1880)
!11097 = !DILocalVariable(name: "delay", arg: 2, scope: !11092, file: !1876, line: 401, type: !11068)
!11098 = !DILocation(line: 0, scope: !11092)
!11099 = !DILocation(line: 404, column: 6, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11092, file: !1876, line: 404, column: 6)
!11101 = !DILocation(line: 404, column: 6, scope: !11092)
!11102 = !DILocation(line: 405, column: 3, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11100, file: !1876, line: 404, column: 38)
!11104 = !DILocation(line: 406, column: 2, scope: !11103)
!11105 = !DILocation(line: 407, column: 3, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11100, file: !1876, line: 406, column: 9)
!11107 = !DILocation(line: 413, column: 1, scope: !11092)
!11108 = distinct !DISubprogram(name: "k_thread_start", scope: !3162, file: !3162, line: 205, type: !11109, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11111)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{null, !1879}
!11111 = !{!11112}
!11112 = !DILocalVariable(name: "thread", arg: 1, scope: !11108, file: !3162, line: 205, type: !1879)
!11113 = !DILocation(line: 0, scope: !11108)
!11114 = !DILocation(line: 214, column: 2, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11108, file: !3162, line: 214, column: 2)
!11116 = !{i64 2154089924}
!11117 = !DILocation(line: 215, column: 2, scope: !11108)
!11118 = !DILocation(line: 216, column: 1, scope: !11108)
!11119 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11026, file: !11026, line: 47, type: !11093, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11120)
!11120 = !{!11121, !11122}
!11121 = !DILocalVariable(name: "thread", arg: 1, scope: !11119, file: !11026, line: 47, type: !1880)
!11122 = !DILocalVariable(name: "ticks", arg: 2, scope: !11119, file: !11026, line: 47, type: !11068)
!11123 = !DILocation(line: 0, scope: !11119)
!11124 = !DILocation(line: 49, column: 30, scope: !11119)
!11125 = !DILocation(line: 49, column: 2, scope: !11119)
!11126 = !DILocation(line: 50, column: 1, scope: !11119)
!11127 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1876, file: !1876, line: 748, type: !2738, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11128)
!11128 = !{!11129, !11147}
!11129 = !DILocalVariable(name: "thread_data", scope: !11130, file: !1876, line: 750, type: !11131)
!11130 = distinct !DILexicalBlock(scope: !11127, file: !1876, line: 750, column: 2)
!11131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11132, size: 32)
!11132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !11133)
!11133 = !{!11134, !11135, !11136, !11137, !11138, !11139, !11140, !11141, !11142, !11143, !11144, !11146}
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11132, file: !307, line: 621, baseType: !1880, size: 32)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11132, file: !307, line: 622, baseType: !10922, size: 32, offset: 32)
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11132, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11132, file: !307, line: 624, baseType: !3040, size: 32, offset: 96)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11132, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11132, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11132, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11132, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11132, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11132, file: !307, line: 630, baseType: !566, size: 32, offset: 288)
!11144 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11132, file: !307, line: 631, baseType: !11145, size: 32, offset: 320)
!11145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!11146 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11132, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!11147 = !DILocalVariable(name: "thread_data", scope: !11148, file: !1876, line: 781, type: !11131)
!11148 = distinct !DILexicalBlock(scope: !11127, file: !1876, line: 781, column: 2)
!11149 = !DILocation(line: 0, scope: !11130)
!11150 = !DILocation(line: 750, column: 2, scope: !11130)
!11151 = !DILocation(line: 780, column: 2, scope: !11127)
!11152 = !DILocation(line: 0, scope: !11148)
!11153 = !DILocation(line: 781, column: 2, scope: !11148)
!11154 = !DILocation(line: 752, column: 17, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !1876, line: 750, column: 38)
!11156 = distinct !DILexicalBlock(scope: !11130, file: !1876, line: 750, column: 2)
!11157 = !DILocation(line: 753, column: 17, scope: !11155)
!11158 = !DILocation(line: 754, column: 17, scope: !11155)
!11159 = !DILocation(line: 755, column: 17, scope: !11155)
!11160 = !DILocation(line: 756, column: 17, scope: !11155)
!11161 = !DILocation(line: 757, column: 17, scope: !11155)
!11162 = !DILocation(line: 758, column: 17, scope: !11155)
!11163 = !DILocation(line: 759, column: 17, scope: !11155)
!11164 = !DILocation(line: 760, column: 17, scope: !11155)
!11165 = !DILocation(line: 751, column: 3, scope: !11155)
!11166 = !DILocation(line: 763, column: 16, scope: !11155)
!11167 = !DILocation(line: 763, column: 29, scope: !11155)
!11168 = !DILocation(line: 763, column: 39, scope: !11155)
!11169 = !DILocation(line: 750, column: 2, scope: !11156)
!11170 = !DILocation(line: 750, column: 2, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11156, file: !1876, line: 750, column: 2)
!11172 = distinct !{!11172, !11150, !11173}
!11173 = !DILocation(line: 764, column: 2, scope: !11130)
!11174 = !DILocation(line: 787, column: 2, scope: !11127)
!11175 = !DILocation(line: 788, column: 1, scope: !11127)
!11176 = !DILocation(line: 782, column: 20, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !1876, line: 782, column: 7)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !1876, line: 781, column: 38)
!11179 = distinct !DILexicalBlock(scope: !11148, file: !1876, line: 781, column: 2)
!11180 = !DILocation(line: 782, column: 31, scope: !11177)
!11181 = !DILocation(line: 782, column: 7, scope: !11178)
!11182 = !DILocation(line: 783, column: 37, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11177, file: !1876, line: 782, column: 51)
!11184 = !DILocation(line: 784, column: 10, scope: !11183)
!11185 = !DILocation(line: 783, column: 4, scope: !11183)
!11186 = !DILocation(line: 785, column: 3, scope: !11183)
!11187 = !DILocation(line: 781, column: 2, scope: !11179)
!11188 = !DILocation(line: 781, column: 2, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11179, file: !1876, line: 781, column: 2)
!11190 = distinct !{!11190, !11153, !11191}
!11191 = !DILocation(line: 786, column: 2, scope: !11148)
!11192 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11193, file: !11193, line: 403, type: !11194, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11196)
!11193 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11194 = !DISubroutineType(types: !11195)
!11195 = !{!1270, !1270}
!11196 = !{!11197}
!11197 = !DILocalVariable(name: "t", arg: 1, scope: !11192, file: !11193, line: 403, type: !1270)
!11198 = !DILocation(line: 0, scope: !11192)
!11199 = !DILocalVariable(name: "t", arg: 1, scope: !11200, file: !11193, line: 102, type: !1270)
!11200 = distinct !DISubprogram(name: "z_tmcvt", scope: !11193, file: !11193, line: 102, type: !11201, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11203)
!11201 = !DISubroutineType(types: !11202)
!11202 = !{!1270, !1270, !121, !121, !157, !157, !157, !157}
!11203 = !{!11199, !11204, !11205, !11206, !11207, !11208, !11209, !11210, !11211, !11212, !11213}
!11204 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11200, file: !11193, line: 102, type: !121)
!11205 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11200, file: !11193, line: 103, type: !121)
!11206 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11200, file: !11193, line: 103, type: !157)
!11207 = !DILocalVariable(name: "result32", arg: 5, scope: !11200, file: !11193, line: 104, type: !157)
!11208 = !DILocalVariable(name: "round_up", arg: 6, scope: !11200, file: !11193, line: 104, type: !157)
!11209 = !DILocalVariable(name: "round_off", arg: 7, scope: !11200, file: !11193, line: 105, type: !157)
!11210 = !DILocalVariable(name: "mul_ratio", scope: !11200, file: !11193, line: 107, type: !157)
!11211 = !DILocalVariable(name: "div_ratio", scope: !11200, file: !11193, line: 109, type: !157)
!11212 = !DILocalVariable(name: "off", scope: !11200, file: !11193, line: 116, type: !1270)
!11213 = !DILocalVariable(name: "rdivisor", scope: !11214, file: !11193, line: 119, type: !121)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !11193, line: 118, column: 18)
!11215 = distinct !DILexicalBlock(scope: !11200, file: !11193, line: 118, column: 6)
!11216 = !DILocation(line: 0, scope: !11200, inlinedAt: !11217)
!11217 = distinct !DILocation(line: 406, column: 9, scope: !11192)
!11218 = !DILocation(line: 145, column: 13, scope: !11219, inlinedAt: !11217)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !11193, line: 144, column: 10)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !11193, line: 142, column: 7)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !11193, line: 141, column: 24)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !11193, line: 141, column: 13)
!11223 = distinct !DILexicalBlock(scope: !11200, file: !11193, line: 134, column: 6)
!11224 = !DILocation(line: 406, column: 2, scope: !11192)
!11225 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1876, file: !1876, line: 817, type: !3038, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11226)
!11226 = !{!11227, !11228, !11229, !11230}
!11227 = !DILocalVariable(name: "entry", arg: 1, scope: !11225, file: !1876, line: 817, type: !3040)
!11228 = !DILocalVariable(name: "p1", arg: 2, scope: !11225, file: !1876, line: 818, type: !102)
!11229 = !DILocalVariable(name: "p2", arg: 3, scope: !11225, file: !1876, line: 818, type: !102)
!11230 = !DILocalVariable(name: "p3", arg: 4, scope: !11225, file: !1876, line: 818, type: !102)
!11231 = !DILocation(line: 0, scope: !11225)
!11232 = !DILocation(line: 822, column: 2, scope: !11225)
!11233 = !DILocation(line: 822, column: 17, scope: !11225)
!11234 = !DILocation(line: 822, column: 30, scope: !11225)
!11235 = !DILocation(line: 823, column: 2, scope: !11225)
!11236 = !DILocation(line: 845, column: 2, scope: !11225)
!11237 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1876, file: !1876, line: 888, type: !11238, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11240)
!11238 = !DISubroutineType(types: !11239)
!11239 = !{!103, !1880}
!11240 = !{!11241}
!11241 = !DILocalVariable(name: "thread", arg: 1, scope: !11237, file: !1876, line: 888, type: !1880)
!11242 = !DILocation(line: 0, scope: !11237)
!11243 = !DILocation(line: 893, column: 2, scope: !11237)
!11244 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1876, file: !1876, line: 897, type: !11245, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11247)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{!103, !1880, !32}
!11247 = !{!11248, !11249}
!11248 = !DILocalVariable(name: "thread", arg: 1, scope: !11244, file: !1876, line: 897, type: !1880)
!11249 = !DILocalVariable(name: "options", arg: 2, scope: !11244, file: !1876, line: 897, type: !32)
!11250 = !DILocation(line: 0, scope: !11244)
!11251 = !DILocation(line: 902, column: 2, scope: !11244)
!11252 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1876, file: !1876, line: 1072, type: !11253, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11258)
!11253 = !DISubroutineType(types: !11254)
!11254 = !{!103, !1879, !11255}
!11255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11256, size: 32)
!11256 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !11257)
!11257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!11258 = !{!11259, !11260}
!11259 = !DILocalVariable(name: "thread", arg: 1, scope: !11252, file: !1876, line: 1072, type: !1879)
!11260 = !DILocalVariable(name: "stats", arg: 2, scope: !11252, file: !1876, line: 1073, type: !11255)
!11261 = !DILocation(line: 0, scope: !11252)
!11262 = !DILocation(line: 1075, column: 14, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11252, file: !1876, line: 1075, column: 6)
!11264 = !DILocation(line: 1075, column: 23, scope: !11263)
!11265 = !DILocation(line: 1086, column: 1, scope: !11252)
!11266 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1876, file: !1876, line: 1088, type: !11267, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11269)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!103, !11255}
!11269 = !{!11270}
!11270 = !DILocalVariable(name: "stats", arg: 1, scope: !11266, file: !1876, line: 1088, type: !11255)
!11271 = !DILocation(line: 0, scope: !11266)
!11272 = !DILocation(line: 1094, column: 12, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11266, file: !1876, line: 1094, column: 6)
!11274 = !DILocation(line: 1120, column: 1, scope: !11266)
!11275 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11276, file: !11276, line: 20, type: !2738, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !322)
!11276 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11277 = !DILocation(line: 30, column: 2, scope: !11275)
!11278 = !DILocation(line: 31, column: 1, scope: !11275)
!11279 = distinct !DISubprogram(name: "idle", scope: !11276, file: !11276, line: 33, type: !3043, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !11280)
!11280 = !{!11281, !11282, !11283}
!11281 = !DILocalVariable(name: "unused1", arg: 1, scope: !11279, file: !11276, line: 33, type: !102)
!11282 = !DILocalVariable(name: "unused2", arg: 2, scope: !11279, file: !11276, line: 33, type: !102)
!11283 = !DILocalVariable(name: "unused3", arg: 3, scope: !11279, file: !11276, line: 33, type: !102)
!11284 = !DILocation(line: 0, scope: !11279)
!11285 = !DILocation(line: 41, column: 2, scope: !11279)
!11286 = !DILocation(line: 55, column: 2, scope: !11287, inlinedAt: !11291)
!11287 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !11288)
!11288 = !{!11289, !11290}
!11289 = !DILocalVariable(name: "key", scope: !11287, file: !4523, line: 44, type: !32)
!11290 = !DILocalVariable(name: "tmp", scope: !11287, file: !4523, line: 53, type: !32)
!11291 = distinct !DILocation(line: 62, column: 10, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11279, file: !11276, line: 41, column: 15)
!11293 = !{i64 1948002}
!11294 = !DILocation(line: 0, scope: !11287, inlinedAt: !11291)
!11295 = !DILocation(line: 86, column: 3, scope: !11292)
!11296 = distinct !{!11296, !11285, !11297}
!11297 = !DILocation(line: 105, column: 2, scope: !11279)
!11298 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2738, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !322)
!11299 = !DILocation(line: 5629, column: 2, scope: !11298)
!11300 = !DILocation(line: 5630, column: 1, scope: !11298)
!11301 = !DISubprogram(name: "arch_cpu_idle", scope: !3041, file: !3041, line: 167, type: !2738, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11302 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2108, file: !2108, line: 93, type: !11303, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11305)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!566, !2003, !2003}
!11305 = !{!11306, !11307, !11308, !11309}
!11306 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11302, file: !2108, line: 93, type: !2003)
!11307 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11302, file: !2108, line: 94, type: !2003)
!11308 = !DILocalVariable(name: "b1", scope: !11302, file: !2108, line: 97, type: !566)
!11309 = !DILocalVariable(name: "b2", scope: !11302, file: !2108, line: 98, type: !566)
!11310 = !DILocation(line: 0, scope: !11302)
!11311 = !DILocation(line: 97, column: 30, scope: !11302)
!11312 = !DILocation(line: 98, column: 30, scope: !11302)
!11313 = !DILocation(line: 100, column: 9, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11302, file: !2108, line: 100, column: 6)
!11315 = !DILocation(line: 100, column: 6, scope: !11302)
!11316 = !DILocation(line: 125, column: 1, scope: !11302)
!11317 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2108, file: !2108, line: 428, type: !11318, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11320)
!11318 = !DISubroutineType(types: !11319)
!11319 = !{null, !2003}
!11320 = !{!11321}
!11321 = !DILocalVariable(name: "curr", arg: 1, scope: !11317, file: !2108, line: 428, type: !2003)
!11322 = !DILocation(line: 0, scope: !11317)
!11323 = !DILocation(line: 434, column: 6, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11317, file: !2108, line: 434, column: 6)
!11325 = !DILocation(line: 434, column: 23, scope: !11324)
!11326 = !DILocation(line: 434, column: 6, scope: !11317)
!11327 = !DILocation(line: 435, column: 50, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11324, file: !2108, line: 434, column: 29)
!11329 = !DILocation(line: 435, column: 48, scope: !11328)
!11330 = !DILocation(line: 435, column: 29, scope: !11328)
!11331 = !DILocation(line: 436, column: 24, scope: !11328)
!11332 = !DILocation(line: 436, column: 3, scope: !11328)
!11333 = !DILocation(line: 437, column: 2, scope: !11328)
!11334 = !DILocation(line: 438, column: 1, scope: !11317)
!11335 = distinct !DISubprogram(name: "slice_time", scope: !2108, file: !2108, line: 407, type: !11336, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11338)
!11336 = !DISubroutineType(types: !11337)
!11337 = !{!103, !2003}
!11338 = !{!11339, !11340}
!11339 = !DILocalVariable(name: "curr", arg: 1, scope: !11335, file: !2108, line: 407, type: !2003)
!11340 = !DILocalVariable(name: "ret", scope: !11335, file: !2108, line: 409, type: !103)
!11341 = !DILocation(line: 0, scope: !11335)
!11342 = !DILocation(line: 409, column: 12, scope: !11335)
!11343 = !DILocation(line: 416, column: 2, scope: !11335)
!11344 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2108, file: !2108, line: 440, type: !11345, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11347)
!11345 = !DISubroutineType(types: !11346)
!11346 = !{null, !566, !103}
!11347 = !{!11348, !11349, !11350, !11356}
!11348 = !DILocalVariable(name: "slice", arg: 1, scope: !11344, file: !2108, line: 440, type: !566)
!11349 = !DILocalVariable(name: "prio", arg: 2, scope: !11344, file: !2108, line: 440, type: !103)
!11350 = !DILocalVariable(name: "__i", scope: !11351, file: !2108, line: 442, type: !11352)
!11351 = distinct !DILexicalBlock(scope: !11344, file: !2108, line: 442, column: 2)
!11352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !11353)
!11353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !11354)
!11354 = !{!11355}
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11353, file: !321, line: 33, baseType: !103, size: 32)
!11356 = !DILocalVariable(name: "__key", scope: !11351, file: !2108, line: 442, type: !11352)
!11357 = !DILocation(line: 0, scope: !11344)
!11358 = !DILocation(line: 0, scope: !11351)
!11359 = !DILocalVariable(name: "l", arg: 1, scope: !11360, file: !321, line: 136, type: !11363)
!11360 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !11361, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11364)
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!11352, !11363}
!11363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!11364 = !{!11359, !11365}
!11365 = !DILocalVariable(name: "k", scope: !11360, file: !321, line: 139, type: !11352)
!11366 = !DILocation(line: 0, scope: !11360, inlinedAt: !11367)
!11367 = distinct !DILocation(line: 442, column: 2, scope: !11351)
!11368 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !11373)
!11369 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11370)
!11370 = !{!11371, !11372}
!11371 = !DILocalVariable(name: "key", scope: !11369, file: !4523, line: 44, type: !32)
!11372 = !DILocalVariable(name: "tmp", scope: !11369, file: !4523, line: 53, type: !32)
!11373 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !11367)
!11374 = !{i64 1991973}
!11375 = !DILocation(line: 0, scope: !11369, inlinedAt: !11373)
!11376 = !DILocation(line: 443, column: 29, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !2108, line: 442, column: 26)
!11378 = distinct !DILexicalBlock(scope: !11351, file: !2108, line: 442, column: 2)
!11379 = !DILocation(line: 444, column: 17, scope: !11377)
!11380 = !DILocation(line: 445, column: 51, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11377, file: !2108, line: 445, column: 7)
!11382 = !DILocation(line: 445, column: 7, scope: !11377)
!11383 = !DILocation(line: 0, scope: !11377)
!11384 = !DILocation(line: 451, column: 18, scope: !11377)
!11385 = !DILocation(line: 452, column: 3, scope: !11377)
!11386 = !DILocalVariable(name: "key", arg: 2, scope: !11387, file: !321, line: 190, type: !11352)
!11387 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !11388, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11390)
!11388 = !DISubroutineType(types: !11389)
!11389 = !{null, !11363, !11352}
!11390 = !{!11391, !11386}
!11391 = !DILocalVariable(name: "l", arg: 1, scope: !11387, file: !321, line: 189, type: !11363)
!11392 = !DILocation(line: 0, scope: !11387, inlinedAt: !11393)
!11393 = distinct !DILocation(line: 442, column: 2, scope: !11378)
!11394 = !DILocalVariable(name: "key", arg: 1, scope: !11395, file: !4523, line: 84, type: !32)
!11395 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11396)
!11396 = !{!11394}
!11397 = !DILocation(line: 0, scope: !11395, inlinedAt: !11398)
!11398 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11393)
!11399 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11398)
!11400 = !{i64 1992790}
!11401 = !DILocation(line: 454, column: 1, scope: !11344)
!11402 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11193, file: !11193, line: 389, type: !5705, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11403)
!11403 = !{!11404}
!11404 = !DILocalVariable(name: "t", arg: 1, scope: !11402, file: !11193, line: 389, type: !121)
!11405 = !DILocation(line: 0, scope: !11402)
!11406 = !DILocalVariable(name: "t", arg: 1, scope: !11407, file: !11193, line: 102, type: !1270)
!11407 = distinct !DISubprogram(name: "z_tmcvt", scope: !11193, file: !11193, line: 102, type: !11201, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11408)
!11408 = !{!11406, !11409, !11410, !11411, !11412, !11413, !11414, !11415, !11416, !11417, !11418}
!11409 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11407, file: !11193, line: 102, type: !121)
!11410 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11407, file: !11193, line: 103, type: !121)
!11411 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11407, file: !11193, line: 103, type: !157)
!11412 = !DILocalVariable(name: "result32", arg: 5, scope: !11407, file: !11193, line: 104, type: !157)
!11413 = !DILocalVariable(name: "round_up", arg: 6, scope: !11407, file: !11193, line: 104, type: !157)
!11414 = !DILocalVariable(name: "round_off", arg: 7, scope: !11407, file: !11193, line: 105, type: !157)
!11415 = !DILocalVariable(name: "mul_ratio", scope: !11407, file: !11193, line: 107, type: !157)
!11416 = !DILocalVariable(name: "div_ratio", scope: !11407, file: !11193, line: 109, type: !157)
!11417 = !DILocalVariable(name: "off", scope: !11407, file: !11193, line: 116, type: !1270)
!11418 = !DILocalVariable(name: "rdivisor", scope: !11419, file: !11193, line: 119, type: !121)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !11193, line: 118, column: 18)
!11420 = distinct !DILexicalBlock(scope: !11407, file: !11193, line: 118, column: 6)
!11421 = !DILocation(line: 0, scope: !11407, inlinedAt: !11422)
!11422 = distinct !DILocation(line: 392, column: 9, scope: !11402)
!11423 = !DILocation(line: 143, column: 25, scope: !11424, inlinedAt: !11422)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !11193, line: 142, column: 17)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !11193, line: 142, column: 7)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !11193, line: 141, column: 24)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !11193, line: 141, column: 13)
!11428 = distinct !DILexicalBlock(scope: !11407, file: !11193, line: 134, column: 6)
!11429 = !DILocation(line: 392, column: 2, scope: !11402)
!11430 = distinct !DISubprogram(name: "z_time_slice", scope: !2108, file: !2108, line: 502, type: !6342, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11431)
!11431 = !{!11432, !11433}
!11432 = !DILocalVariable(name: "ticks", arg: 1, scope: !11430, file: !2108, line: 502, type: !103)
!11433 = !DILocalVariable(name: "key", scope: !11430, file: !2108, line: 511, type: !11352)
!11434 = !DILocation(line: 0, scope: !11430)
!11435 = !DILocation(line: 0, scope: !11360, inlinedAt: !11436)
!11436 = distinct !DILocation(line: 511, column: 25, scope: !11430)
!11437 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !11438)
!11438 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !11436)
!11439 = !DILocation(line: 0, scope: !11369, inlinedAt: !11438)
!11440 = !DILocation(line: 514, column: 6, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11430, file: !2108, line: 514, column: 6)
!11442 = !DILocation(line: 514, column: 25, scope: !11441)
!11443 = !DILocation(line: 514, column: 22, scope: !11441)
!11444 = !DILocation(line: 514, column: 6, scope: !11430)
!11445 = !DILocation(line: 515, column: 3, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11441, file: !2108, line: 514, column: 35)
!11447 = !DILocation(line: 0, scope: !11387, inlinedAt: !11448)
!11448 = distinct !DILocation(line: 516, column: 3, scope: !11446)
!11449 = !DILocation(line: 0, scope: !11395, inlinedAt: !11450)
!11450 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11448)
!11451 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11450)
!11452 = !DILocation(line: 517, column: 3, scope: !11446)
!11453 = !DILocation(line: 519, column: 18, scope: !11430)
!11454 = !DILocation(line: 522, column: 6, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11430, file: !2108, line: 522, column: 6)
!11456 = !DILocation(line: 522, column: 27, scope: !11455)
!11457 = !DILocation(line: 522, column: 30, scope: !11455)
!11458 = !DILocation(line: 522, column: 6, scope: !11430)
!11459 = !DILocation(line: 523, column: 30, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !2108, line: 523, column: 7)
!11461 = distinct !DILexicalBlock(scope: !11455, file: !2108, line: 522, column: 51)
!11462 = !DILocation(line: 523, column: 13, scope: !11460)
!11463 = !DILocation(line: 523, column: 7, scope: !11461)
!11464 = !DILocation(line: 530, column: 10, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !2108, line: 523, column: 43)
!11466 = !DILocation(line: 531, column: 3, scope: !11465)
!11467 = !DILocation(line: 532, column: 30, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11460, file: !2108, line: 531, column: 10)
!11469 = !DILocation(line: 535, column: 29, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11455, file: !2108, line: 534, column: 9)
!11471 = !DILocation(line: 0, scope: !11387, inlinedAt: !11472)
!11472 = distinct !DILocation(line: 537, column: 2, scope: !11430)
!11473 = !DILocation(line: 0, scope: !11395, inlinedAt: !11474)
!11474 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11472)
!11475 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11474)
!11476 = !DILocation(line: 538, column: 1, scope: !11430)
!11477 = distinct !DISubprogram(name: "sliceable", scope: !2108, file: !2108, line: 468, type: !11478, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11480)
!11478 = !DISubroutineType(types: !11479)
!11479 = !{!157, !2003}
!11480 = !{!11481, !11482}
!11481 = !DILocalVariable(name: "thread", arg: 1, scope: !11477, file: !2108, line: 468, type: !2003)
!11482 = !DILocalVariable(name: "ret", scope: !11477, file: !2108, line: 470, type: !157)
!11483 = !DILocation(line: 0, scope: !11477)
!11484 = !DILocation(line: 470, column: 13, scope: !11477)
!11485 = !DILocation(line: 471, column: 3, scope: !11477)
!11486 = !DILocation(line: 471, column: 7, scope: !11477)
!11487 = !DILocation(line: 472, column: 3, scope: !11477)
!11488 = !DILocation(line: 472, column: 37, scope: !11477)
!11489 = !DILocation(line: 472, column: 24, scope: !11477)
!11490 = !DILocation(line: 472, column: 43, scope: !11477)
!11491 = !DILocation(line: 472, column: 7, scope: !11477)
!11492 = !DILocation(line: 473, column: 3, scope: !11477)
!11493 = !DILocation(line: 473, column: 7, scope: !11477)
!11494 = !DILocation(line: 473, column: 6, scope: !11477)
!11495 = !DILocation(line: 479, column: 2, scope: !11477)
!11496 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2108, file: !2108, line: 482, type: !11497, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11499)
!11497 = !DISubroutineType(types: !11498)
!11498 = !{!11352, !11352}
!11499 = !{!11500, !11501}
!11500 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11496, file: !2108, line: 482, type: !11352)
!11501 = !DILocalVariable(name: "curr", scope: !11496, file: !2108, line: 484, type: !2003)
!11502 = !DILocation(line: 0, scope: !11496)
!11503 = !DILocation(line: 484, column: 26, scope: !11496)
!11504 = !DILocation(line: 493, column: 7, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11496, file: !2108, line: 493, column: 6)
!11506 = !DILocation(line: 493, column: 6, scope: !11496)
!11507 = !DILocation(line: 494, column: 3, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11505, file: !2108, line: 493, column: 49)
!11509 = !DILocation(line: 495, column: 2, scope: !11508)
!11510 = !DILocation(line: 496, column: 2, scope: !11496)
!11511 = !DILocation(line: 499, column: 1, scope: !11496)
!11512 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10632, file: !10632, line: 106, type: !11478, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11513)
!11513 = !{!11514, !11515}
!11514 = !DILocalVariable(name: "thread", arg: 1, scope: !11512, file: !10632, line: 106, type: !2003)
!11515 = !DILocalVariable(name: "state", scope: !11512, file: !10632, line: 108, type: !154)
!11516 = !DILocation(line: 0, scope: !11512)
!11517 = !DILocation(line: 108, column: 31, scope: !11512)
!11518 = !DILocation(line: 110, column: 16, scope: !11512)
!11519 = !DILocation(line: 111, column: 41, scope: !11512)
!11520 = !DILocation(line: 110, column: 2, scope: !11512)
!11521 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2108, file: !2108, line: 393, type: !11318, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11522)
!11522 = !{!11523}
!11523 = !DILocalVariable(name: "thread", arg: 1, scope: !11521, file: !2108, line: 393, type: !2003)
!11524 = !DILocation(line: 0, scope: !11521)
!11525 = !DILocation(line: 395, column: 6, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11521, file: !2108, line: 395, column: 6)
!11527 = !DILocation(line: 395, column: 6, scope: !11521)
!11528 = !DILocalVariable(name: "thread", arg: 1, scope: !11529, file: !2108, line: 264, type: !2003)
!11529 = distinct !DISubprogram(name: "dequeue_thread", scope: !2108, file: !2108, line: 264, type: !11318, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11530)
!11530 = !{!11528}
!11531 = !DILocation(line: 0, scope: !11529, inlinedAt: !11532)
!11532 = distinct !DILocation(line: 396, column: 3, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11526, file: !2108, line: 395, column: 34)
!11534 = !DILocation(line: 266, column: 15, scope: !11529, inlinedAt: !11532)
!11535 = !DILocation(line: 266, column: 28, scope: !11529, inlinedAt: !11532)
!11536 = !DILocalVariable(name: "thread", arg: 1, scope: !11537, file: !2108, line: 232, type: !2003)
!11537 = distinct !DISubprogram(name: "runq_remove", scope: !2108, file: !2108, line: 232, type: !11318, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11538)
!11538 = !{!11536}
!11539 = !DILocation(line: 0, scope: !11537, inlinedAt: !11540)
!11540 = distinct !DILocation(line: 268, column: 3, scope: !11541, inlinedAt: !11532)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !2108, line: 267, column: 35)
!11542 = distinct !DILexicalBlock(scope: !11529, file: !2108, line: 267, column: 6)
!11543 = !DILocation(line: 234, column: 2, scope: !11537, inlinedAt: !11540)
!11544 = !DILocation(line: 397, column: 2, scope: !11533)
!11545 = !DILocalVariable(name: "thread", arg: 1, scope: !11546, file: !2108, line: 250, type: !2003)
!11546 = distinct !DISubprogram(name: "queue_thread", scope: !2108, file: !2108, line: 250, type: !11318, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11547)
!11547 = !{!11545}
!11548 = !DILocation(line: 0, scope: !11546, inlinedAt: !11549)
!11549 = distinct !DILocation(line: 398, column: 2, scope: !11521)
!11550 = !DILocation(line: 252, column: 15, scope: !11546, inlinedAt: !11549)
!11551 = !DILocation(line: 252, column: 28, scope: !11546, inlinedAt: !11549)
!11552 = !DILocalVariable(name: "thread", arg: 1, scope: !11553, file: !2108, line: 227, type: !2003)
!11553 = distinct !DISubprogram(name: "runq_add", scope: !2108, file: !2108, line: 227, type: !11318, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11554)
!11554 = !{!11552}
!11555 = !DILocation(line: 0, scope: !11553, inlinedAt: !11556)
!11556 = distinct !DILocation(line: 254, column: 3, scope: !11557, inlinedAt: !11549)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !2108, line: 253, column: 35)
!11558 = distinct !DILexicalBlock(scope: !11546, file: !2108, line: 253, column: 6)
!11559 = !DILocalVariable(name: "pq", arg: 1, scope: !11560, file: !2108, line: 181, type: !11563)
!11560 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2108, file: !2108, line: 181, type: !11561, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11564)
!11561 = !DISubroutineType(types: !11562)
!11562 = !{null, !11563, !2003}
!11563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!11564 = !{!11559, !11565, !11566}
!11565 = !DILocalVariable(name: "thread", arg: 2, scope: !11560, file: !2108, line: 182, type: !2003)
!11566 = !DILocalVariable(name: "t", scope: !11560, file: !2108, line: 184, type: !2003)
!11567 = !DILocation(line: 0, scope: !11560, inlinedAt: !11568)
!11568 = distinct !DILocation(line: 229, column: 2, scope: !11553, inlinedAt: !11556)
!11569 = !DILocation(line: 188, column: 2, scope: !11570, inlinedAt: !11568)
!11570 = distinct !DILexicalBlock(scope: !11560, file: !2108, line: 188, column: 2)
!11571 = !DILocation(line: 188, column: 2, scope: !11572, inlinedAt: !11568)
!11572 = distinct !DILexicalBlock(scope: !11570, file: !2108, line: 188, column: 2)
!11573 = !DILocation(line: 0, scope: !11570, inlinedAt: !11568)
!11574 = !DILocation(line: 189, column: 7, scope: !11575, inlinedAt: !11568)
!11575 = distinct !DILexicalBlock(scope: !11576, file: !2108, line: 189, column: 7)
!11576 = distinct !DILexicalBlock(scope: !11572, file: !2108, line: 188, column: 56)
!11577 = !DILocation(line: 189, column: 35, scope: !11575, inlinedAt: !11568)
!11578 = !DILocation(line: 189, column: 7, scope: !11576, inlinedAt: !11568)
!11579 = !DILocation(line: 191, column: 21, scope: !11580, inlinedAt: !11568)
!11580 = distinct !DILexicalBlock(scope: !11575, file: !2108, line: 189, column: 40)
!11581 = !DILocation(line: 190, column: 4, scope: !11580, inlinedAt: !11568)
!11582 = !DILocation(line: 192, column: 4, scope: !11580, inlinedAt: !11568)
!11583 = distinct !{!11583, !11569, !11584}
!11584 = !DILocation(line: 194, column: 2, scope: !11570, inlinedAt: !11568)
!11585 = !DILocation(line: 196, column: 37, scope: !11560, inlinedAt: !11568)
!11586 = !DILocation(line: 196, column: 2, scope: !11560, inlinedAt: !11568)
!11587 = !DILocation(line: 197, column: 1, scope: !11560, inlinedAt: !11568)
!11588 = !DILocation(line: 399, column: 25, scope: !11521)
!11589 = !DILocation(line: 399, column: 22, scope: !11521)
!11590 = !DILocation(line: 399, column: 2, scope: !11521)
!11591 = !DILocation(line: 400, column: 1, scope: !11521)
!11592 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10632, file: !10632, line: 136, type: !11478, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11593)
!11593 = !{!11594}
!11594 = !DILocalVariable(name: "thread", arg: 1, scope: !11592, file: !10632, line: 136, type: !2003)
!11595 = !DILocation(line: 0, scope: !11592)
!11596 = !DILocation(line: 138, column: 9, scope: !11592)
!11597 = !DILocation(line: 138, column: 2, scope: !11592)
!11598 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2108, file: !2108, line: 1137, type: !11561, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11599)
!11599 = !{!11600, !11601}
!11600 = !DILocalVariable(name: "pq", arg: 1, scope: !11598, file: !2108, line: 1137, type: !11563)
!11601 = !DILocalVariable(name: "thread", arg: 2, scope: !11598, file: !2108, line: 1137, type: !2003)
!11602 = !DILocation(line: 0, scope: !11598)
!11603 = !DILocation(line: 1141, column: 33, scope: !11598)
!11604 = !DILocation(line: 1141, column: 2, scope: !11598)
!11605 = !DILocation(line: 1142, column: 1, scope: !11598)
!11606 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !11607, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11609)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{!2104, !11563}
!11609 = !{!11610}
!11610 = !DILocalVariable(name: "list", arg: 1, scope: !11606, file: !221, line: 294, type: !11563)
!11611 = !DILocation(line: 0, scope: !11606)
!11612 = !DILocation(line: 296, column: 9, scope: !11606)
!11613 = !DILocation(line: 296, column: 49, scope: !11606)
!11614 = !DILocation(line: 296, column: 2, scope: !11606)
!11615 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !11616, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11618)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{null, !2104, !2104}
!11618 = !{!11619, !11620, !11621}
!11619 = !DILocalVariable(name: "successor", arg: 1, scope: !11615, file: !221, line: 443, type: !2104)
!11620 = !DILocalVariable(name: "node", arg: 2, scope: !11615, file: !221, line: 443, type: !2104)
!11621 = !DILocalVariable(name: "prev", scope: !11615, file: !221, line: 445, type: !11622)
!11622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2104)
!11623 = !DILocation(line: 0, scope: !11615)
!11624 = !DILocation(line: 445, column: 39, scope: !11615)
!11625 = !DILocation(line: 447, column: 8, scope: !11615)
!11626 = !DILocation(line: 447, column: 13, scope: !11615)
!11627 = !DILocation(line: 448, column: 8, scope: !11615)
!11628 = !DILocation(line: 448, column: 13, scope: !11615)
!11629 = !DILocation(line: 449, column: 8, scope: !11615)
!11630 = !DILocation(line: 449, column: 13, scope: !11615)
!11631 = !DILocation(line: 450, column: 18, scope: !11615)
!11632 = !DILocation(line: 451, column: 1, scope: !11615)
!11633 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !11634, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11636)
!11634 = !DISubroutineType(types: !11635)
!11635 = !{!2104, !11563, !2104}
!11636 = !{!11637, !11638}
!11637 = !DILocalVariable(name: "list", arg: 1, scope: !11633, file: !221, line: 341, type: !11563)
!11638 = !DILocalVariable(name: "node", arg: 2, scope: !11633, file: !221, line: 342, type: !2104)
!11639 = !DILocation(line: 0, scope: !11633)
!11640 = !DILocation(line: 344, column: 15, scope: !11633)
!11641 = !DILocation(line: 344, column: 9, scope: !11633)
!11642 = !DILocation(line: 344, column: 26, scope: !11633)
!11643 = !DILocation(line: 344, column: 2, scope: !11633)
!11644 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !11645, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11647)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{null, !11563, !2104}
!11647 = !{!11648, !11649, !11650}
!11648 = !DILocalVariable(name: "list", arg: 1, scope: !11644, file: !221, line: 404, type: !11563)
!11649 = !DILocalVariable(name: "node", arg: 2, scope: !11644, file: !221, line: 404, type: !2104)
!11650 = !DILocalVariable(name: "tail", scope: !11644, file: !221, line: 406, type: !11622)
!11651 = !DILocation(line: 0, scope: !11644)
!11652 = !DILocation(line: 406, column: 34, scope: !11644)
!11653 = !DILocation(line: 408, column: 8, scope: !11644)
!11654 = !DILocation(line: 408, column: 13, scope: !11644)
!11655 = !DILocation(line: 409, column: 8, scope: !11644)
!11656 = !DILocation(line: 409, column: 13, scope: !11644)
!11657 = !DILocation(line: 411, column: 8, scope: !11644)
!11658 = !DILocation(line: 411, column: 13, scope: !11644)
!11659 = !DILocation(line: 412, column: 13, scope: !11644)
!11660 = !DILocation(line: 413, column: 1, scope: !11644)
!11661 = distinct !DISubprogram(name: "update_cache", scope: !2108, file: !2108, line: 559, type: !6342, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11662)
!11662 = !{!11663, !11664}
!11663 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11661, file: !2108, line: 559, type: !103)
!11664 = !DILocalVariable(name: "thread", scope: !11661, file: !2108, line: 562, type: !2003)
!11665 = !DILocation(line: 0, scope: !11661)
!11666 = !DILocation(line: 239, column: 9, scope: !11667, inlinedAt: !11670)
!11667 = distinct !DISubprogram(name: "runq_best", scope: !2108, file: !2108, line: 237, type: !11668, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{!2003}
!11670 = distinct !DILocation(line: 314, column: 28, scope: !11671, inlinedAt: !11674)
!11671 = distinct !DISubprogram(name: "next_up", scope: !2108, file: !2108, line: 312, type: !11668, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11672)
!11672 = !{!11673}
!11673 = !DILocalVariable(name: "thread", scope: !11671, file: !2108, line: 314, type: !2003)
!11674 = distinct !DILocation(line: 562, column: 28, scope: !11661)
!11675 = !DILocation(line: 0, scope: !11671, inlinedAt: !11674)
!11676 = !DILocation(line: 340, column: 17, scope: !11671, inlinedAt: !11674)
!11677 = !DILocation(line: 340, column: 9, scope: !11671, inlinedAt: !11674)
!11678 = !DILocalVariable(name: "thread", arg: 1, scope: !11679, file: !2108, line: 127, type: !2003)
!11679 = distinct !DISubprogram(name: "should_preempt", scope: !2108, file: !2108, line: 127, type: !11680, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11682)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{!157, !2003, !103}
!11682 = !{!11678, !11683}
!11683 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11679, file: !2108, line: 128, type: !103)
!11684 = !DILocation(line: 0, scope: !11679, inlinedAt: !11685)
!11685 = distinct !DILocation(line: 564, column: 6, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11661, file: !2108, line: 564, column: 6)
!11687 = !DILocation(line: 133, column: 17, scope: !11688, inlinedAt: !11685)
!11688 = distinct !DILexicalBlock(scope: !11679, file: !2108, line: 133, column: 6)
!11689 = !DILocation(line: 0, scope: !11686)
!11690 = !DILocation(line: 133, column: 6, scope: !11679, inlinedAt: !11685)
!11691 = !DILocation(line: 140, column: 6, scope: !11692, inlinedAt: !11685)
!11692 = distinct !DILexicalBlock(scope: !11679, file: !2108, line: 140, column: 6)
!11693 = !DILocation(line: 140, column: 6, scope: !11679, inlinedAt: !11685)
!11694 = !DILocation(line: 150, column: 9, scope: !11695, inlinedAt: !11685)
!11695 = distinct !DILexicalBlock(scope: !11679, file: !2108, line: 149, column: 6)
!11696 = !DILocation(line: 149, column: 6, scope: !11679, inlinedAt: !11685)
!11697 = !DILocation(line: 157, column: 6, scope: !11698, inlinedAt: !11685)
!11698 = distinct !DILexicalBlock(scope: !11679, file: !2108, line: 157, column: 6)
!11699 = !DILocation(line: 564, column: 6, scope: !11661)
!11700 = !DILocation(line: 566, column: 14, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !2108, line: 566, column: 7)
!11702 = distinct !DILexicalBlock(scope: !11686, file: !2108, line: 564, column: 42)
!11703 = !DILocation(line: 566, column: 7, scope: !11702)
!11704 = !DILocation(line: 567, column: 4, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11701, file: !2108, line: 566, column: 27)
!11706 = !DILocation(line: 568, column: 3, scope: !11705)
!11707 = !DILocation(line: 585, column: 1, scope: !11661)
!11708 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2108, file: !2108, line: 1144, type: !11709, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11711)
!11709 = !DISubroutineType(types: !11710)
!11710 = !{!2003, !11563}
!11711 = !{!11712, !11713, !11714}
!11712 = !DILocalVariable(name: "pq", arg: 1, scope: !11708, file: !2108, line: 1144, type: !11563)
!11713 = !DILocalVariable(name: "thread", scope: !11708, file: !2108, line: 1146, type: !2003)
!11714 = !DILocalVariable(name: "n", scope: !11708, file: !2108, line: 1147, type: !2104)
!11715 = !DILocation(line: 0, scope: !11708)
!11716 = !DILocation(line: 1147, column: 19, scope: !11708)
!11717 = !DILocation(line: 1152, column: 2, scope: !11708)
!11718 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10632, file: !10632, line: 115, type: !11478, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11719)
!11719 = !{!11720}
!11720 = !DILocalVariable(name: "thread", arg: 1, scope: !11718, file: !10632, line: 115, type: !2003)
!11721 = !DILocation(line: 0, scope: !11718)
!11722 = !DILocation(line: 117, column: 46, scope: !11718)
!11723 = !DILocation(line: 117, column: 10, scope: !11718)
!11724 = !DILocation(line: 117, column: 9, scope: !11718)
!11725 = !DILocation(line: 117, column: 2, scope: !11718)
!11726 = distinct !DISubprogram(name: "is_preempt", scope: !2108, file: !2108, line: 62, type: !11336, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11727)
!11727 = !{!11728}
!11728 = !DILocalVariable(name: "thread", arg: 1, scope: !11726, file: !2108, line: 62, type: !2003)
!11729 = !DILocation(line: 0, scope: !11726)
!11730 = !DILocation(line: 65, column: 22, scope: !11726)
!11731 = !DILocation(line: 65, column: 30, scope: !11726)
!11732 = !DILocation(line: 65, column: 2, scope: !11726)
!11733 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11026, file: !11026, line: 35, type: !11734, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11738)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{!157, !11736}
!11736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11737, size: 32)
!11737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!11738 = !{!11739}
!11739 = !DILocalVariable(name: "to", arg: 1, scope: !11733, file: !11026, line: 35, type: !11736)
!11740 = !DILocation(line: 0, scope: !11733)
!11741 = !DILocation(line: 37, column: 35, scope: !11733)
!11742 = !DILocation(line: 37, column: 10, scope: !11733)
!11743 = !DILocation(line: 37, column: 9, scope: !11733)
!11744 = !DILocation(line: 37, column: 2, scope: !11733)
!11745 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !11746, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11750)
!11746 = !DISubroutineType(types: !11747)
!11747 = !{!157, !11748}
!11748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11749, size: 32)
!11749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2013)
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "node", arg: 1, scope: !11745, file: !221, line: 225, type: !11748)
!11752 = !DILocation(line: 0, scope: !11745)
!11753 = !DILocation(line: 227, column: 15, scope: !11745)
!11754 = !DILocation(line: 227, column: 20, scope: !11745)
!11755 = !DILocation(line: 227, column: 2, scope: !11745)
!11756 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !11634, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11757)
!11757 = !{!11758, !11759}
!11758 = !DILocalVariable(name: "list", arg: 1, scope: !11756, file: !221, line: 325, type: !11563)
!11759 = !DILocalVariable(name: "node", arg: 2, scope: !11756, file: !221, line: 326, type: !2104)
!11760 = !DILocation(line: 0, scope: !11756)
!11761 = !DILocation(line: 328, column: 24, scope: !11756)
!11762 = !DILocation(line: 328, column: 15, scope: !11756)
!11763 = !DILocation(line: 328, column: 9, scope: !11756)
!11764 = !DILocation(line: 328, column: 45, scope: !11756)
!11765 = !DILocation(line: 328, column: 2, scope: !11756)
!11766 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !11767, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11769)
!11767 = !DISubroutineType(types: !11768)
!11768 = !{!157, !11563}
!11769 = !{!11770}
!11770 = !DILocalVariable(name: "list", arg: 1, scope: !11766, file: !221, line: 266, type: !11563)
!11771 = !DILocation(line: 0, scope: !11766)
!11772 = !DILocation(line: 268, column: 15, scope: !11766)
!11773 = !DILocation(line: 268, column: 20, scope: !11766)
!11774 = !DILocation(line: 268, column: 2, scope: !11766)
!11775 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !11776, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11778)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{null, !2104}
!11778 = !{!11779, !11780, !11781}
!11779 = !DILocalVariable(name: "node", arg: 1, scope: !11775, file: !221, line: 496, type: !2104)
!11780 = !DILocalVariable(name: "prev", scope: !11775, file: !221, line: 498, type: !11622)
!11781 = !DILocalVariable(name: "next", scope: !11775, file: !221, line: 499, type: !11622)
!11782 = !DILocation(line: 0, scope: !11775)
!11783 = !DILocation(line: 498, column: 34, scope: !11775)
!11784 = !DILocation(line: 499, column: 34, scope: !11775)
!11785 = !DILocation(line: 501, column: 8, scope: !11775)
!11786 = !DILocation(line: 501, column: 13, scope: !11775)
!11787 = !DILocation(line: 502, column: 8, scope: !11775)
!11788 = !DILocation(line: 502, column: 13, scope: !11775)
!11789 = !DILocation(line: 503, column: 2, scope: !11775)
!11790 = !DILocation(line: 504, column: 1, scope: !11775)
!11791 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11776, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11792)
!11792 = !{!11793}
!11793 = !DILocalVariable(name: "node", arg: 1, scope: !11791, file: !221, line: 211, type: !2104)
!11794 = !DILocation(line: 0, scope: !11791)
!11795 = !DILocation(line: 213, column: 8, scope: !11791)
!11796 = !DILocation(line: 213, column: 13, scope: !11791)
!11797 = !DILocation(line: 214, column: 8, scope: !11791)
!11798 = !DILocation(line: 214, column: 13, scope: !11791)
!11799 = !DILocation(line: 215, column: 1, scope: !11791)
!11800 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10632, file: !10632, line: 131, type: !11801, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11803)
!11801 = !DISubroutineType(types: !11802)
!11802 = !{!157, !2003, !121}
!11803 = !{!11804, !11805}
!11804 = !DILocalVariable(name: "thread", arg: 1, scope: !11800, file: !10632, line: 131, type: !2003)
!11805 = !DILocalVariable(name: "state", arg: 2, scope: !11800, file: !10632, line: 131, type: !121)
!11806 = !DILocation(line: 0, scope: !11800)
!11807 = !DILocation(line: 133, column: 23, scope: !11800)
!11808 = !DILocation(line: 133, column: 45, scope: !11800)
!11809 = !DILocation(line: 133, column: 2, scope: !11800)
!11810 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10632, file: !10632, line: 211, type: !11811, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11813)
!11811 = !DISubroutineType(types: !11812)
!11812 = !{!157, !103, !103}
!11813 = !{!11814, !11815}
!11814 = !DILocalVariable(name: "prio", arg: 1, scope: !11810, file: !10632, line: 211, type: !103)
!11815 = !DILocalVariable(name: "test_prio", arg: 2, scope: !11810, file: !10632, line: 211, type: !103)
!11816 = !DILocation(line: 0, scope: !11810)
!11817 = !DILocation(line: 213, column: 9, scope: !11810)
!11818 = !DILocation(line: 213, column: 2, scope: !11810)
!11819 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10632, file: !10632, line: 83, type: !11478, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11820)
!11820 = !{!11821}
!11821 = !DILocalVariable(name: "thread", arg: 1, scope: !11819, file: !10632, line: 83, type: !2003)
!11822 = !DILocation(line: 0, scope: !11819)
!11823 = !DILocation(line: 89, column: 16, scope: !11819)
!11824 = !DILocation(line: 89, column: 2, scope: !11819)
!11825 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10632, file: !10632, line: 206, type: !11811, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11826)
!11826 = !{!11827, !11828}
!11827 = !DILocalVariable(name: "prio1", arg: 1, scope: !11825, file: !10632, line: 206, type: !103)
!11828 = !DILocalVariable(name: "prio2", arg: 2, scope: !11825, file: !10632, line: 206, type: !103)
!11829 = !DILocation(line: 0, scope: !11825)
!11830 = !DILocation(line: 208, column: 15, scope: !11825)
!11831 = !DILocation(line: 208, column: 2, scope: !11825)
!11832 = distinct !DISubprogram(name: "z_ready_thread", scope: !2108, file: !2108, line: 635, type: !11318, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11833)
!11833 = !{!11834, !11835, !11837}
!11834 = !DILocalVariable(name: "thread", arg: 1, scope: !11832, file: !2108, line: 635, type: !2003)
!11835 = !DILocalVariable(name: "__i", scope: !11836, file: !2108, line: 637, type: !11352)
!11836 = distinct !DILexicalBlock(scope: !11832, file: !2108, line: 637, column: 2)
!11837 = !DILocalVariable(name: "__key", scope: !11836, file: !2108, line: 637, type: !11352)
!11838 = !DILocation(line: 0, scope: !11832)
!11839 = !DILocation(line: 0, scope: !11836)
!11840 = !DILocation(line: 0, scope: !11360, inlinedAt: !11841)
!11841 = distinct !DILocation(line: 637, column: 2, scope: !11836)
!11842 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !11841)
!11844 = !DILocation(line: 0, scope: !11369, inlinedAt: !11843)
!11845 = !DILocation(line: 639, column: 4, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !2108, line: 638, column: 41)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !2108, line: 638, column: 7)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !2108, line: 637, column: 26)
!11849 = distinct !DILexicalBlock(scope: !11836, file: !2108, line: 637, column: 2)
!11850 = !DILocation(line: 0, scope: !11387, inlinedAt: !11851)
!11851 = distinct !DILocation(line: 637, column: 2, scope: !11849)
!11852 = !DILocation(line: 0, scope: !11395, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11851)
!11854 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11853)
!11855 = !DILocation(line: 642, column: 1, scope: !11832)
!11856 = distinct !DISubprogram(name: "ready_thread", scope: !2108, file: !2108, line: 617, type: !11318, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11857)
!11857 = !{!11858}
!11858 = !DILocalVariable(name: "thread", arg: 1, scope: !11856, file: !2108, line: 617, type: !2003)
!11859 = !DILocation(line: 0, scope: !11856)
!11860 = !DILocation(line: 626, column: 7, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11856, file: !2108, line: 626, column: 6)
!11862 = !DILocation(line: 626, column: 34, scope: !11861)
!11863 = !DILocation(line: 626, column: 37, scope: !11861)
!11864 = !DILocation(line: 626, column: 6, scope: !11856)
!11865 = !DILocation(line: 0, scope: !11546, inlinedAt: !11866)
!11866 = distinct !DILocation(line: 629, column: 3, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11861, file: !2108, line: 626, column: 64)
!11868 = !DILocation(line: 252, column: 15, scope: !11546, inlinedAt: !11866)
!11869 = !DILocation(line: 252, column: 28, scope: !11546, inlinedAt: !11866)
!11870 = !DILocation(line: 0, scope: !11553, inlinedAt: !11871)
!11871 = distinct !DILocation(line: 254, column: 3, scope: !11557, inlinedAt: !11866)
!11872 = !DILocation(line: 0, scope: !11560, inlinedAt: !11873)
!11873 = distinct !DILocation(line: 229, column: 2, scope: !11553, inlinedAt: !11871)
!11874 = !DILocation(line: 188, column: 2, scope: !11570, inlinedAt: !11873)
!11875 = !DILocation(line: 188, column: 2, scope: !11572, inlinedAt: !11873)
!11876 = !DILocation(line: 0, scope: !11570, inlinedAt: !11873)
!11877 = !DILocation(line: 189, column: 7, scope: !11575, inlinedAt: !11873)
!11878 = !DILocation(line: 189, column: 35, scope: !11575, inlinedAt: !11873)
!11879 = !DILocation(line: 189, column: 7, scope: !11576, inlinedAt: !11873)
!11880 = !DILocation(line: 191, column: 21, scope: !11580, inlinedAt: !11873)
!11881 = !DILocation(line: 190, column: 4, scope: !11580, inlinedAt: !11873)
!11882 = !DILocation(line: 192, column: 4, scope: !11580, inlinedAt: !11873)
!11883 = distinct !{!11883, !11874, !11884}
!11884 = !DILocation(line: 194, column: 2, scope: !11570, inlinedAt: !11873)
!11885 = !DILocation(line: 196, column: 37, scope: !11560, inlinedAt: !11873)
!11886 = !DILocation(line: 196, column: 2, scope: !11560, inlinedAt: !11873)
!11887 = !DILocation(line: 197, column: 1, scope: !11560, inlinedAt: !11873)
!11888 = !DILocation(line: 630, column: 3, scope: !11867)
!11889 = !DILocation(line: 632, column: 2, scope: !11867)
!11890 = !DILocation(line: 633, column: 1, scope: !11856)
!11891 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10632, file: !10632, line: 120, type: !11478, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11892)
!11892 = !{!11893}
!11893 = !DILocalVariable(name: "thread", arg: 1, scope: !11891, file: !10632, line: 120, type: !2003)
!11894 = !DILocation(line: 0, scope: !11891)
!11895 = !DILocation(line: 122, column: 12, scope: !11891)
!11896 = !DILocation(line: 122, column: 62, scope: !11891)
!11897 = !DILocation(line: 123, column: 4, scope: !11891)
!11898 = !DILocation(line: 122, column: 2, scope: !11891)
!11899 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2108, file: !2108, line: 644, type: !11318, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11900)
!11900 = !{!11901, !11902, !11904}
!11901 = !DILocalVariable(name: "thread", arg: 1, scope: !11899, file: !2108, line: 644, type: !2003)
!11902 = !DILocalVariable(name: "__i", scope: !11903, file: !2108, line: 646, type: !11352)
!11903 = distinct !DILexicalBlock(scope: !11899, file: !2108, line: 646, column: 2)
!11904 = !DILocalVariable(name: "__key", scope: !11903, file: !2108, line: 646, type: !11352)
!11905 = !DILocation(line: 0, scope: !11899)
!11906 = !DILocation(line: 0, scope: !11903)
!11907 = !DILocation(line: 0, scope: !11360, inlinedAt: !11908)
!11908 = distinct !DILocation(line: 646, column: 2, scope: !11903)
!11909 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !11910)
!11910 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !11908)
!11911 = !DILocation(line: 0, scope: !11369, inlinedAt: !11910)
!11912 = !DILocation(line: 647, column: 3, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !2108, line: 646, column: 26)
!11914 = distinct !DILexicalBlock(scope: !11903, file: !2108, line: 646, column: 2)
!11915 = !DILocation(line: 0, scope: !11387, inlinedAt: !11916)
!11916 = distinct !DILocation(line: 646, column: 2, scope: !11914)
!11917 = !DILocation(line: 0, scope: !11395, inlinedAt: !11918)
!11918 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11916)
!11919 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11918)
!11920 = !DILocation(line: 649, column: 1, scope: !11899)
!11921 = distinct !DISubprogram(name: "z_sched_start", scope: !2108, file: !2108, line: 651, type: !11318, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11922)
!11922 = !{!11923, !11924}
!11923 = !DILocalVariable(name: "thread", arg: 1, scope: !11921, file: !2108, line: 651, type: !2003)
!11924 = !DILocalVariable(name: "key", scope: !11921, file: !2108, line: 653, type: !11352)
!11925 = !DILocation(line: 0, scope: !11921)
!11926 = !DILocation(line: 0, scope: !11360, inlinedAt: !11927)
!11927 = distinct !DILocation(line: 653, column: 25, scope: !11921)
!11928 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !11929)
!11929 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !11927)
!11930 = !DILocation(line: 0, scope: !11369, inlinedAt: !11929)
!11931 = !DILocation(line: 655, column: 6, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11921, file: !2108, line: 655, column: 6)
!11933 = !DILocation(line: 655, column: 6, scope: !11921)
!11934 = !DILocation(line: 0, scope: !11387, inlinedAt: !11935)
!11935 = distinct !DILocation(line: 656, column: 3, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !2108, line: 655, column: 36)
!11937 = !DILocation(line: 0, scope: !11395, inlinedAt: !11938)
!11938 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11935)
!11939 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11938)
!11940 = !DILocation(line: 657, column: 3, scope: !11936)
!11941 = !DILocation(line: 660, column: 2, scope: !11921)
!11942 = !DILocation(line: 661, column: 2, scope: !11921)
!11943 = !DILocation(line: 662, column: 2, scope: !11921)
!11944 = !DILocation(line: 663, column: 1, scope: !11921)
!11945 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10632, file: !10632, line: 126, type: !11478, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11946)
!11946 = !{!11947}
!11947 = !DILocalVariable(name: "thread", arg: 1, scope: !11945, file: !10632, line: 126, type: !2003)
!11948 = !DILocation(line: 0, scope: !11945)
!11949 = !DILocation(line: 128, column: 23, scope: !11945)
!11950 = !DILocation(line: 128, column: 36, scope: !11945)
!11951 = !DILocation(line: 128, column: 56, scope: !11945)
!11952 = !DILocation(line: 128, column: 2, scope: !11945)
!11953 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10632, file: !10632, line: 155, type: !11318, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11954)
!11954 = !{!11955}
!11955 = !DILocalVariable(name: "thread", arg: 1, scope: !11953, file: !10632, line: 155, type: !2003)
!11956 = !DILocation(line: 0, scope: !11953)
!11957 = !DILocation(line: 157, column: 15, scope: !11953)
!11958 = !DILocation(line: 157, column: 28, scope: !11953)
!11959 = !DILocation(line: 158, column: 1, scope: !11953)
!11960 = distinct !DISubprogram(name: "z_reschedule", scope: !2108, file: !2108, line: 967, type: !11388, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11961)
!11961 = !{!11962, !11963}
!11962 = !DILocalVariable(name: "lock", arg: 1, scope: !11960, file: !2108, line: 967, type: !11363)
!11963 = !DILocalVariable(name: "key", arg: 2, scope: !11960, file: !2108, line: 967, type: !11352)
!11964 = !DILocation(line: 0, scope: !11960)
!11965 = !DILocation(line: 969, column: 6, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11960, file: !2108, line: 969, column: 6)
!11967 = !DILocation(line: 969, column: 23, scope: !11966)
!11968 = !DILocation(line: 969, column: 26, scope: !11966)
!11969 = !DILocation(line: 969, column: 6, scope: !11960)
!11970 = !DILocalVariable(name: "key", arg: 2, scope: !11971, file: !10736, line: 193, type: !11352)
!11971 = distinct !DISubprogram(name: "z_swap", scope: !10736, file: !10736, line: 193, type: !11972, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11974)
!11972 = !DISubroutineType(types: !11973)
!11973 = !{!103, !11363, !11352}
!11974 = !{!11975, !11970}
!11975 = !DILocalVariable(name: "lock", arg: 1, scope: !11971, file: !10736, line: 193, type: !11363)
!11976 = !DILocation(line: 0, scope: !11971, inlinedAt: !11977)
!11977 = distinct !DILocation(line: 970, column: 3, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11966, file: !2108, line: 969, column: 39)
!11979 = !DILocation(line: 196, column: 9, scope: !11971, inlinedAt: !11977)
!11980 = !DILocation(line: 971, column: 2, scope: !11978)
!11981 = !DILocation(line: 0, scope: !11387, inlinedAt: !11982)
!11982 = distinct !DILocation(line: 972, column: 3, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11966, file: !2108, line: 971, column: 9)
!11984 = !DILocation(line: 0, scope: !11395, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !11982)
!11986 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !11985)
!11987 = !DILocation(line: 975, column: 1, scope: !11960)
!11988 = distinct !DISubprogram(name: "resched", scope: !2108, file: !2108, line: 940, type: !11989, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!157, !121}
!11991 = !{!11992}
!11992 = !DILocalVariable(name: "key", arg: 1, scope: !11988, file: !2108, line: 940, type: !121)
!11993 = !DILocation(line: 0, scope: !11988)
!11994 = !DILocalVariable(name: "key", arg: 1, scope: !11995, file: !4523, line: 112, type: !32)
!11995 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4523, file: !4523, line: 112, type: !11996, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11998)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{!157, !32}
!11998 = !{!11994}
!11999 = !DILocation(line: 0, scope: !11995, inlinedAt: !12000)
!12000 = distinct !DILocation(line: 946, column: 9, scope: !11988)
!12001 = !DILocation(line: 115, column: 13, scope: !11995, inlinedAt: !12000)
!12002 = !DILocation(line: 946, column: 32, scope: !11988)
!12003 = !DILocation(line: 1031, column: 3, scope: !12004, inlinedAt: !12007)
!12004 = distinct !DISubprogram(name: "__get_IPSR", scope: !4697, file: !4697, line: 1027, type: !4778, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12005)
!12005 = !{!12006}
!12006 = !DILocalVariable(name: "result", scope: !12004, file: !4697, line: 1029, type: !121)
!12007 = distinct !DILocation(line: 48, column: 10, scope: !12008, inlinedAt: !12009)
!12008 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5491, file: !5491, line: 46, type: !5492, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12009 = distinct !DILocation(line: 946, column: 36, scope: !11988)
!12010 = !{i64 2869712}
!12011 = !DILocation(line: 0, scope: !12004, inlinedAt: !12007)
!12012 = !DILocation(line: 48, column: 9, scope: !12008, inlinedAt: !12009)
!12013 = !DILocation(line: 946, column: 2, scope: !11988)
!12014 = distinct !DISubprogram(name: "need_swap", scope: !2108, file: !2108, line: 953, type: !5492, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12015)
!12015 = !{!12016}
!12016 = !DILocalVariable(name: "new_thread", scope: !12014, file: !2108, line: 959, type: !2003)
!12017 = !DILocation(line: 962, column: 31, scope: !12014)
!12018 = !DILocation(line: 0, scope: !12014)
!12019 = !DILocation(line: 963, column: 23, scope: !12014)
!12020 = !DILocation(line: 963, column: 20, scope: !12014)
!12021 = !DILocation(line: 963, column: 2, scope: !12014)
!12022 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10736, file: !10736, line: 181, type: !4707, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12023)
!12023 = !{!12024, !12025}
!12024 = !DILocalVariable(name: "key", arg: 1, scope: !12022, file: !10736, line: 181, type: !32)
!12025 = !DILocalVariable(name: "ret", scope: !12022, file: !10736, line: 183, type: !103)
!12026 = !DILocation(line: 0, scope: !12022)
!12027 = !DILocation(line: 185, column: 8, scope: !12022)
!12028 = !DILocation(line: 186, column: 2, scope: !12022)
!12029 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2108, file: !2108, line: 665, type: !11318, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12030)
!12030 = !{!12031, !12032, !12034}
!12031 = !DILocalVariable(name: "thread", arg: 1, scope: !12029, file: !2108, line: 665, type: !2003)
!12032 = !DILocalVariable(name: "__i", scope: !12033, file: !2108, line: 671, type: !11352)
!12033 = distinct !DILexicalBlock(scope: !12029, file: !2108, line: 671, column: 2)
!12034 = !DILocalVariable(name: "__key", scope: !12033, file: !2108, line: 671, type: !11352)
!12035 = !DILocation(line: 0, scope: !12029)
!12036 = !DILocation(line: 669, column: 8, scope: !12029)
!12037 = !DILocation(line: 0, scope: !12033)
!12038 = !DILocation(line: 0, scope: !11360, inlinedAt: !12039)
!12039 = distinct !DILocation(line: 671, column: 2, scope: !12033)
!12040 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12041)
!12041 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12039)
!12042 = !DILocation(line: 0, scope: !11369, inlinedAt: !12041)
!12043 = !DILocation(line: 672, column: 7, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !2108, line: 672, column: 7)
!12045 = distinct !DILexicalBlock(scope: !12046, file: !2108, line: 671, column: 26)
!12046 = distinct !DILexicalBlock(scope: !12033, file: !2108, line: 671, column: 2)
!12047 = !DILocation(line: 672, column: 7, scope: !12045)
!12048 = !DILocation(line: 0, scope: !11529, inlinedAt: !12049)
!12049 = distinct !DILocation(line: 673, column: 4, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12044, file: !2108, line: 672, column: 35)
!12051 = !DILocation(line: 266, column: 15, scope: !11529, inlinedAt: !12049)
!12052 = !DILocation(line: 266, column: 28, scope: !11529, inlinedAt: !12049)
!12053 = !DILocation(line: 0, scope: !11537, inlinedAt: !12054)
!12054 = distinct !DILocation(line: 268, column: 3, scope: !11541, inlinedAt: !12049)
!12055 = !DILocation(line: 234, column: 2, scope: !11537, inlinedAt: !12054)
!12056 = !DILocation(line: 674, column: 3, scope: !12050)
!12057 = !DILocation(line: 675, column: 3, scope: !12045)
!12058 = !DILocation(line: 676, column: 26, scope: !12045)
!12059 = !DILocation(line: 676, column: 23, scope: !12045)
!12060 = !DILocation(line: 676, column: 3, scope: !12045)
!12061 = !DILocation(line: 0, scope: !11387, inlinedAt: !12062)
!12062 = distinct !DILocation(line: 671, column: 2, scope: !12046)
!12063 = !DILocation(line: 0, scope: !11395, inlinedAt: !12064)
!12064 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12062)
!12065 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12064)
!12066 = !DILocation(line: 679, column: 16, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12029, file: !2108, line: 679, column: 6)
!12068 = !DILocation(line: 679, column: 13, scope: !12067)
!12069 = !DILocation(line: 679, column: 6, scope: !12029)
!12070 = !DILocation(line: 680, column: 3, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12067, file: !2108, line: 679, column: 26)
!12072 = !DILocation(line: 681, column: 2, scope: !12071)
!12073 = !DILocation(line: 684, column: 1, scope: !12029)
!12074 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11026, file: !11026, line: 52, type: !11336, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12075)
!12075 = !{!12076}
!12076 = !DILocalVariable(name: "thread", arg: 1, scope: !12074, file: !11026, line: 52, type: !2003)
!12077 = !DILocation(line: 0, scope: !12074)
!12078 = !DILocation(line: 54, column: 39, scope: !12074)
!12079 = !DILocation(line: 54, column: 9, scope: !12074)
!12080 = !DILocation(line: 54, column: 2, scope: !12074)
!12081 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10632, file: !10632, line: 141, type: !11318, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12082)
!12082 = !{!12083}
!12083 = !DILocalVariable(name: "thread", arg: 1, scope: !12081, file: !10632, line: 141, type: !2003)
!12084 = !DILocation(line: 0, scope: !12081)
!12085 = !DILocation(line: 143, column: 15, scope: !12081)
!12086 = !DILocation(line: 143, column: 28, scope: !12081)
!12087 = !DILocation(line: 146, column: 1, scope: !12081)
!12088 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10632, file: !10632, line: 73, type: !2738, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12089 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12090)
!12090 = distinct !DILocation(line: 75, column: 30, scope: !12088)
!12091 = !DILocation(line: 0, scope: !11369, inlinedAt: !12090)
!12092 = !DILocation(line: 75, column: 9, scope: !12088)
!12093 = !DILocation(line: 76, column: 1, scope: !12088)
!12094 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2108, file: !2108, line: 977, type: !4788, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12095)
!12095 = !{!12096}
!12096 = !DILocalVariable(name: "key", arg: 1, scope: !12094, file: !2108, line: 977, type: !121)
!12097 = !DILocation(line: 0, scope: !12094)
!12098 = !DILocation(line: 979, column: 6, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12094, file: !2108, line: 979, column: 6)
!12100 = !DILocation(line: 979, column: 6, scope: !12094)
!12101 = !DILocation(line: 980, column: 3, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12099, file: !2108, line: 979, column: 20)
!12103 = !DILocation(line: 981, column: 2, scope: !12102)
!12104 = !DILocation(line: 0, scope: !11395, inlinedAt: !12105)
!12105 = distinct !DILocation(line: 982, column: 3, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12099, file: !2108, line: 981, column: 9)
!12107 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12105)
!12108 = !DILocation(line: 985, column: 1, scope: !12094)
!12109 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2108, file: !2108, line: 695, type: !11318, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12110)
!12110 = !{!12111, !12112}
!12111 = !DILocalVariable(name: "thread", arg: 1, scope: !12109, file: !2108, line: 695, type: !2003)
!12112 = !DILocalVariable(name: "key", scope: !12109, file: !2108, line: 699, type: !11352)
!12113 = !DILocation(line: 0, scope: !12109)
!12114 = !DILocation(line: 0, scope: !11360, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 699, column: 25, scope: !12109)
!12116 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12117)
!12117 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12115)
!12118 = !DILocation(line: 0, scope: !11369, inlinedAt: !12117)
!12119 = !DILocation(line: 702, column: 7, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12109, file: !2108, line: 702, column: 6)
!12121 = !DILocation(line: 702, column: 6, scope: !12109)
!12122 = !DILocation(line: 0, scope: !11387, inlinedAt: !12123)
!12123 = distinct !DILocation(line: 703, column: 3, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12120, file: !2108, line: 702, column: 38)
!12125 = !DILocation(line: 0, scope: !11395, inlinedAt: !12126)
!12126 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12123)
!12127 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12126)
!12128 = !DILocation(line: 704, column: 3, scope: !12124)
!12129 = !DILocation(line: 707, column: 2, scope: !12109)
!12130 = !DILocation(line: 708, column: 2, scope: !12109)
!12131 = !DILocation(line: 710, column: 2, scope: !12109)
!12132 = !DILocation(line: 713, column: 1, scope: !12109)
!12133 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10632, file: !10632, line: 96, type: !11478, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12134)
!12134 = !{!12135}
!12135 = !DILocalVariable(name: "thread", arg: 1, scope: !12133, file: !10632, line: 96, type: !2003)
!12136 = !DILocation(line: 0, scope: !12133)
!12137 = !DILocation(line: 98, column: 23, scope: !12133)
!12138 = !DILocation(line: 98, column: 36, scope: !12133)
!12139 = !DILocation(line: 98, column: 57, scope: !12133)
!12140 = !DILocation(line: 98, column: 2, scope: !12133)
!12141 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10632, file: !10632, line: 148, type: !11318, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12142)
!12142 = !{!12143}
!12143 = !DILocalVariable(name: "thread", arg: 1, scope: !12141, file: !10632, line: 148, type: !2003)
!12144 = !DILocation(line: 0, scope: !12141)
!12145 = !DILocation(line: 150, column: 15, scope: !12141)
!12146 = !DILocation(line: 150, column: 28, scope: !12141)
!12147 = !DILocation(line: 153, column: 1, scope: !12141)
!12148 = distinct !DISubprogram(name: "z_pend_thread", scope: !2108, file: !2108, line: 770, type: !12149, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12155)
!12149 = !DISubroutineType(types: !12150)
!12150 = !{null, !2003, !2034, !12151}
!12151 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !12152)
!12152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !12153)
!12153 = !{!12154}
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12152, file: !1359, line: 66, baseType: !1358, size: 64)
!12155 = !{!12156, !12157, !12158, !12159, !12161}
!12156 = !DILocalVariable(name: "thread", arg: 1, scope: !12148, file: !2108, line: 770, type: !2003)
!12157 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12148, file: !2108, line: 770, type: !2034)
!12158 = !DILocalVariable(name: "timeout", arg: 3, scope: !12148, file: !2108, line: 771, type: !12151)
!12159 = !DILocalVariable(name: "__i", scope: !12160, file: !2108, line: 774, type: !11352)
!12160 = distinct !DILexicalBlock(scope: !12148, file: !2108, line: 774, column: 2)
!12161 = !DILocalVariable(name: "__key", scope: !12160, file: !2108, line: 774, type: !11352)
!12162 = !DILocation(line: 0, scope: !12148)
!12163 = !DILocation(line: 0, scope: !12160)
!12164 = !DILocation(line: 0, scope: !11360, inlinedAt: !12165)
!12165 = distinct !DILocation(line: 774, column: 2, scope: !12160)
!12166 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12167)
!12167 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12165)
!12168 = !DILocation(line: 0, scope: !11369, inlinedAt: !12167)
!12169 = !DILocation(line: 775, column: 3, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !2108, line: 774, column: 26)
!12171 = distinct !DILexicalBlock(scope: !12160, file: !2108, line: 774, column: 2)
!12172 = !DILocation(line: 0, scope: !11387, inlinedAt: !12173)
!12173 = distinct !DILocation(line: 774, column: 2, scope: !12171)
!12174 = !DILocation(line: 0, scope: !11395, inlinedAt: !12175)
!12175 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12173)
!12176 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12175)
!12177 = !DILocation(line: 777, column: 1, scope: !12148)
!12178 = distinct !DISubprogram(name: "pend_locked", scope: !2108, file: !2108, line: 760, type: !12149, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12179)
!12179 = !{!12180, !12181, !12182}
!12180 = !DILocalVariable(name: "thread", arg: 1, scope: !12178, file: !2108, line: 760, type: !2003)
!12181 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12178, file: !2108, line: 760, type: !2034)
!12182 = !DILocalVariable(name: "timeout", arg: 3, scope: !12178, file: !2108, line: 761, type: !12151)
!12183 = !DILocation(line: 0, scope: !12178)
!12184 = !DILocation(line: 766, column: 2, scope: !12178)
!12185 = !DILocation(line: 767, column: 2, scope: !12178)
!12186 = !DILocation(line: 768, column: 1, scope: !12178)
!12187 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2108, file: !2108, line: 740, type: !12188, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12190)
!12188 = !DISubroutineType(types: !12189)
!12189 = !{null, !2003, !2034}
!12190 = !{!12191, !12192}
!12191 = !DILocalVariable(name: "thread", arg: 1, scope: !12187, file: !2108, line: 740, type: !2003)
!12192 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12187, file: !2108, line: 740, type: !2034)
!12193 = !DILocation(line: 0, scope: !12187)
!12194 = !DILocation(line: 742, column: 2, scope: !12187)
!12195 = !DILocation(line: 743, column: 2, scope: !12187)
!12196 = !DILocation(line: 747, column: 13, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12187, file: !2108, line: 747, column: 6)
!12198 = !DILocation(line: 747, column: 6, scope: !12187)
!12199 = !DILocation(line: 748, column: 16, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12197, file: !2108, line: 747, column: 22)
!12201 = !DILocation(line: 748, column: 26, scope: !12200)
!12202 = !DILocation(line: 749, column: 28, scope: !12200)
!12203 = !DILocation(line: 0, scope: !11560, inlinedAt: !12204)
!12204 = distinct !DILocation(line: 749, column: 3, scope: !12200)
!12205 = !DILocation(line: 188, column: 2, scope: !11570, inlinedAt: !12204)
!12206 = !DILocation(line: 188, column: 2, scope: !11572, inlinedAt: !12204)
!12207 = !DILocation(line: 0, scope: !11570, inlinedAt: !12204)
!12208 = !DILocation(line: 189, column: 7, scope: !11575, inlinedAt: !12204)
!12209 = !DILocation(line: 189, column: 35, scope: !11575, inlinedAt: !12204)
!12210 = !DILocation(line: 189, column: 7, scope: !11576, inlinedAt: !12204)
!12211 = !DILocation(line: 191, column: 21, scope: !11580, inlinedAt: !12204)
!12212 = !DILocation(line: 190, column: 4, scope: !11580, inlinedAt: !12204)
!12213 = !DILocation(line: 192, column: 4, scope: !11580, inlinedAt: !12204)
!12214 = distinct !{!12214, !12205, !12215}
!12215 = !DILocation(line: 194, column: 2, scope: !11570, inlinedAt: !12204)
!12216 = !DILocation(line: 196, column: 37, scope: !11560, inlinedAt: !12204)
!12217 = !DILocation(line: 196, column: 2, scope: !11560, inlinedAt: !12204)
!12218 = !DILocation(line: 197, column: 1, scope: !11560, inlinedAt: !12204)
!12219 = !DILocation(line: 751, column: 1, scope: !12187)
!12220 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2108, file: !2108, line: 753, type: !12221, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12223)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{null, !2003, !12151}
!12223 = !{!12224, !12225}
!12224 = !DILocalVariable(name: "thread", arg: 1, scope: !12220, file: !2108, line: 753, type: !2003)
!12225 = !DILocalVariable(name: "timeout", arg: 2, scope: !12220, file: !2108, line: 753, type: !12151)
!12226 = !DILocation(line: 0, scope: !12220)
!12227 = !DILocation(line: 755, column: 7, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12220, file: !2108, line: 755, column: 6)
!12229 = !DILocation(line: 755, column: 6, scope: !12220)
!12230 = !DILocation(line: 756, column: 3, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12228, file: !2108, line: 755, column: 41)
!12232 = !DILocation(line: 757, column: 2, scope: !12231)
!12233 = !DILocation(line: 758, column: 1, scope: !12220)
!12234 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11026, file: !11026, line: 47, type: !12221, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12235)
!12235 = !{!12236, !12237}
!12236 = !DILocalVariable(name: "thread", arg: 1, scope: !12234, file: !11026, line: 47, type: !2003)
!12237 = !DILocalVariable(name: "ticks", arg: 2, scope: !12234, file: !11026, line: 47, type: !12151)
!12238 = !DILocation(line: 0, scope: !12234)
!12239 = !DILocation(line: 49, column: 30, scope: !12234)
!12240 = !DILocation(line: 49, column: 2, scope: !12234)
!12241 = !DILocation(line: 50, column: 1, scope: !12234)
!12242 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2108, file: !2108, line: 795, type: !2060, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12243)
!12243 = !{!12244, !12245, !12246, !12248, !12249}
!12244 = !DILocalVariable(name: "timeout", arg: 1, scope: !12242, file: !2108, line: 795, type: !2062)
!12245 = !DILocalVariable(name: "thread", scope: !12242, file: !2108, line: 797, type: !2003)
!12246 = !DILocalVariable(name: "__i", scope: !12247, file: !2108, line: 800, type: !11352)
!12247 = distinct !DILexicalBlock(scope: !12242, file: !2108, line: 800, column: 2)
!12248 = !DILocalVariable(name: "__key", scope: !12247, file: !2108, line: 800, type: !11352)
!12249 = !DILocalVariable(name: "killed", scope: !12250, file: !2108, line: 801, type: !157)
!12250 = distinct !DILexicalBlock(scope: !12251, file: !2108, line: 800, column: 26)
!12251 = distinct !DILexicalBlock(scope: !12247, file: !2108, line: 800, column: 2)
!12252 = !DILocation(line: 0, scope: !12242)
!12253 = !DILocation(line: 797, column: 28, scope: !12242)
!12254 = !DILocation(line: 0, scope: !12247)
!12255 = !DILocation(line: 0, scope: !11360, inlinedAt: !12256)
!12256 = distinct !DILocation(line: 800, column: 2, scope: !12247)
!12257 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12258)
!12258 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12256)
!12259 = !DILocation(line: 0, scope: !11369, inlinedAt: !12258)
!12260 = !DILocation(line: 801, column: 27, scope: !12250)
!12261 = !DILocation(line: 801, column: 32, scope: !12250)
!12262 = !DILocation(line: 801, column: 61, scope: !12250)
!12263 = !DILocation(line: 0, scope: !12250)
!12264 = !DILocation(line: 804, column: 7, scope: !12250)
!12265 = !DILocation(line: 805, column: 21, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !2108, line: 805, column: 8)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !2108, line: 804, column: 16)
!12268 = distinct !DILexicalBlock(scope: !12250, file: !2108, line: 804, column: 7)
!12269 = !DILocation(line: 805, column: 31, scope: !12266)
!12270 = !DILocation(line: 805, column: 8, scope: !12267)
!12271 = !DILocation(line: 806, column: 5, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12266, file: !2108, line: 805, column: 40)
!12273 = !DILocation(line: 807, column: 4, scope: !12272)
!12274 = !DILocation(line: 808, column: 4, scope: !12267)
!12275 = !DILocation(line: 809, column: 4, scope: !12267)
!12276 = !DILocation(line: 810, column: 4, scope: !12267)
!12277 = !DILocation(line: 811, column: 3, scope: !12267)
!12278 = !DILocation(line: 0, scope: !11387, inlinedAt: !12279)
!12279 = distinct !DILocation(line: 800, column: 2, scope: !12251)
!12280 = !DILocation(line: 0, scope: !11395, inlinedAt: !12281)
!12281 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12279)
!12282 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12281)
!12283 = !DILocation(line: 813, column: 1, scope: !12242)
!12284 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2108, file: !2108, line: 779, type: !11318, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12285)
!12285 = !{!12286}
!12286 = !DILocalVariable(name: "thread", arg: 1, scope: !12284, file: !2108, line: 779, type: !2003)
!12287 = !DILocation(line: 0, scope: !12284)
!12288 = !DILocation(line: 781, column: 2, scope: !12284)
!12289 = !DILocation(line: 782, column: 2, scope: !12284)
!12290 = !DILocation(line: 783, column: 15, scope: !12284)
!12291 = !DILocation(line: 783, column: 25, scope: !12284)
!12292 = !DILocation(line: 784, column: 1, scope: !12284)
!12293 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10632, file: !10632, line: 165, type: !11318, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12294)
!12294 = !{!12295}
!12295 = !DILocalVariable(name: "thread", arg: 1, scope: !12293, file: !10632, line: 165, type: !2003)
!12296 = !DILocation(line: 0, scope: !12293)
!12297 = !DILocation(line: 167, column: 15, scope: !12293)
!12298 = !DILocation(line: 167, column: 28, scope: !12293)
!12299 = !DILocation(line: 168, column: 1, scope: !12293)
!12300 = distinct !DISubprogram(name: "unready_thread", scope: !2108, file: !2108, line: 731, type: !11318, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12301)
!12301 = !{!12302}
!12302 = !DILocalVariable(name: "thread", arg: 1, scope: !12300, file: !2108, line: 731, type: !2003)
!12303 = !DILocation(line: 0, scope: !12300)
!12304 = !DILocation(line: 733, column: 6, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12300, file: !2108, line: 733, column: 6)
!12306 = !DILocation(line: 733, column: 6, scope: !12300)
!12307 = !DILocation(line: 0, scope: !11529, inlinedAt: !12308)
!12308 = distinct !DILocation(line: 734, column: 3, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !2108, line: 733, column: 34)
!12310 = !DILocation(line: 266, column: 15, scope: !11529, inlinedAt: !12308)
!12311 = !DILocation(line: 266, column: 28, scope: !11529, inlinedAt: !12308)
!12312 = !DILocation(line: 0, scope: !11537, inlinedAt: !12313)
!12313 = distinct !DILocation(line: 268, column: 3, scope: !11541, inlinedAt: !12308)
!12314 = !DILocation(line: 234, column: 2, scope: !11537, inlinedAt: !12313)
!12315 = !DILocation(line: 735, column: 2, scope: !12309)
!12316 = !DILocation(line: 736, column: 25, scope: !12300)
!12317 = !DILocation(line: 736, column: 22, scope: !12300)
!12318 = !DILocation(line: 736, column: 2, scope: !12300)
!12319 = !DILocation(line: 737, column: 1, scope: !12300)
!12320 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10632, file: !10632, line: 160, type: !11318, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12321)
!12321 = !{!12322}
!12322 = !DILocalVariable(name: "thread", arg: 1, scope: !12320, file: !10632, line: 160, type: !2003)
!12323 = !DILocation(line: 0, scope: !12320)
!12324 = !DILocation(line: 162, column: 15, scope: !12320)
!12325 = !DILocation(line: 162, column: 28, scope: !12320)
!12326 = !DILocation(line: 163, column: 1, scope: !12320)
!12327 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2108, file: !2108, line: 786, type: !11318, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12328)
!12328 = !{!12329, !12330, !12332}
!12329 = !DILocalVariable(name: "thread", arg: 1, scope: !12327, file: !2108, line: 786, type: !2003)
!12330 = !DILocalVariable(name: "__i", scope: !12331, file: !2108, line: 788, type: !11352)
!12331 = distinct !DILexicalBlock(scope: !12327, file: !2108, line: 788, column: 2)
!12332 = !DILocalVariable(name: "__key", scope: !12331, file: !2108, line: 788, type: !11352)
!12333 = !DILocation(line: 0, scope: !12327)
!12334 = !DILocation(line: 0, scope: !12331)
!12335 = !DILocation(line: 0, scope: !11360, inlinedAt: !12336)
!12336 = distinct !DILocation(line: 788, column: 2, scope: !12331)
!12337 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12338)
!12338 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12336)
!12339 = !DILocation(line: 0, scope: !11369, inlinedAt: !12338)
!12340 = !DILocation(line: 789, column: 3, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !2108, line: 788, column: 26)
!12342 = distinct !DILexicalBlock(scope: !12331, file: !2108, line: 788, column: 2)
!12343 = !DILocation(line: 0, scope: !11387, inlinedAt: !12344)
!12344 = distinct !DILocation(line: 788, column: 2, scope: !12342)
!12345 = !DILocation(line: 0, scope: !11395, inlinedAt: !12346)
!12346 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12344)
!12347 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12346)
!12348 = !DILocation(line: 791, column: 1, scope: !12327)
!12349 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2108, file: !2108, line: 816, type: !12350, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12352)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{!103, !121, !2034, !12151}
!12352 = !{!12353, !12354, !12355, !12356, !12357, !12359}
!12353 = !DILocalVariable(name: "key", arg: 1, scope: !12349, file: !2108, line: 816, type: !121)
!12354 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12349, file: !2108, line: 816, type: !2034)
!12355 = !DILocalVariable(name: "timeout", arg: 3, scope: !12349, file: !2108, line: 816, type: !12151)
!12356 = !DILocalVariable(name: "ret", scope: !12349, file: !2108, line: 828, type: !103)
!12357 = !DILocalVariable(name: "__i", scope: !12358, file: !2108, line: 829, type: !11352)
!12358 = distinct !DILexicalBlock(scope: !12349, file: !2108, line: 829, column: 2)
!12359 = !DILocalVariable(name: "__key", scope: !12358, file: !2108, line: 829, type: !11352)
!12360 = !DILocation(line: 0, scope: !12349)
!12361 = !DILocation(line: 823, column: 14, scope: !12349)
!12362 = !DILocation(line: 823, column: 2, scope: !12349)
!12363 = !DILocation(line: 826, column: 20, scope: !12349)
!12364 = !DILocation(line: 826, column: 18, scope: !12349)
!12365 = !DILocation(line: 828, column: 12, scope: !12349)
!12366 = !DILocation(line: 0, scope: !12358)
!12367 = !DILocation(line: 0, scope: !11360, inlinedAt: !12368)
!12368 = distinct !DILocation(line: 829, column: 2, scope: !12358)
!12369 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12370)
!12370 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12368)
!12371 = !DILocation(line: 0, scope: !11369, inlinedAt: !12370)
!12372 = !DILocation(line: 830, column: 7, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12374, file: !2108, line: 830, column: 7)
!12374 = distinct !DILexicalBlock(scope: !12375, file: !2108, line: 829, column: 26)
!12375 = distinct !DILexicalBlock(scope: !12358, file: !2108, line: 829, column: 2)
!12376 = !DILocation(line: 830, column: 26, scope: !12373)
!12377 = !DILocation(line: 830, column: 23, scope: !12373)
!12378 = !DILocation(line: 830, column: 7, scope: !12374)
!12379 = !DILocation(line: 831, column: 20, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12373, file: !2108, line: 830, column: 36)
!12381 = !DILocation(line: 832, column: 3, scope: !12380)
!12382 = !DILocation(line: 0, scope: !11387, inlinedAt: !12383)
!12383 = distinct !DILocation(line: 829, column: 2, scope: !12375)
!12384 = !DILocation(line: 0, scope: !11395, inlinedAt: !12385)
!12385 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12383)
!12386 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12385)
!12387 = !DILocation(line: 834, column: 2, scope: !12349)
!12388 = distinct !DISubprogram(name: "z_pend_curr", scope: !2108, file: !2108, line: 840, type: !12389, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12391)
!12389 = !DISubroutineType(types: !12390)
!12390 = !{!103, !11363, !11352, !2034, !12151}
!12391 = !{!12392, !12393, !12394, !12395}
!12392 = !DILocalVariable(name: "lock", arg: 1, scope: !12388, file: !2108, line: 840, type: !11363)
!12393 = !DILocalVariable(name: "key", arg: 2, scope: !12388, file: !2108, line: 840, type: !11352)
!12394 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12388, file: !2108, line: 841, type: !2034)
!12395 = !DILocalVariable(name: "timeout", arg: 4, scope: !12388, file: !2108, line: 841, type: !12151)
!12396 = !DILocation(line: 0, scope: !12388)
!12397 = !DILocation(line: 844, column: 20, scope: !12388)
!12398 = !DILocation(line: 844, column: 18, scope: !12388)
!12399 = !DILocation(line: 0, scope: !11360, inlinedAt: !12400)
!12400 = distinct !DILocation(line: 856, column: 9, scope: !12388)
!12401 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12402)
!12402 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12400)
!12403 = !DILocation(line: 0, scope: !11369, inlinedAt: !12402)
!12404 = !DILocation(line: 857, column: 14, scope: !12388)
!12405 = !DILocation(line: 857, column: 2, scope: !12388)
!12406 = !DILocation(line: 0, scope: !11971, inlinedAt: !12407)
!12407 = distinct !DILocation(line: 859, column: 9, scope: !12388)
!12408 = !DILocation(line: 196, column: 9, scope: !11971, inlinedAt: !12407)
!12409 = !DILocation(line: 859, column: 2, scope: !12388)
!12410 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2108, file: !2108, line: 862, type: !12411, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12413)
!12411 = !DISubroutineType(types: !12412)
!12412 = !{!2003, !2034}
!12413 = !{!12414, !12415, !12416, !12418}
!12414 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12410, file: !2108, line: 862, type: !2034)
!12415 = !DILocalVariable(name: "thread", scope: !12410, file: !2108, line: 864, type: !2003)
!12416 = !DILocalVariable(name: "__i", scope: !12417, file: !2108, line: 866, type: !11352)
!12417 = distinct !DILexicalBlock(scope: !12410, file: !2108, line: 866, column: 2)
!12418 = !DILocalVariable(name: "__key", scope: !12417, file: !2108, line: 866, type: !11352)
!12419 = !DILocation(line: 0, scope: !12410)
!12420 = !DILocation(line: 0, scope: !12417)
!12421 = !DILocation(line: 0, scope: !11360, inlinedAt: !12422)
!12422 = distinct !DILocation(line: 866, column: 2, scope: !12417)
!12423 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12424)
!12424 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12422)
!12425 = !DILocation(line: 0, scope: !11369, inlinedAt: !12424)
!12426 = !DILocation(line: 867, column: 12, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !2108, line: 866, column: 26)
!12428 = distinct !DILexicalBlock(scope: !12417, file: !2108, line: 866, column: 2)
!12429 = !DILocation(line: 869, column: 14, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12427, file: !2108, line: 869, column: 7)
!12431 = !DILocation(line: 869, column: 7, scope: !12427)
!12432 = !DILocation(line: 870, column: 4, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12430, file: !2108, line: 869, column: 23)
!12434 = !DILocation(line: 871, column: 3, scope: !12433)
!12435 = !DILocation(line: 0, scope: !11387, inlinedAt: !12436)
!12436 = distinct !DILocation(line: 866, column: 2, scope: !12428)
!12437 = !DILocation(line: 0, scope: !11395, inlinedAt: !12438)
!12438 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12436)
!12439 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12438)
!12440 = !DILocation(line: 874, column: 2, scope: !12410)
!12441 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2108, file: !2108, line: 877, type: !12411, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12442)
!12442 = !{!12443, !12444, !12445, !12447}
!12443 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12441, file: !2108, line: 877, type: !2034)
!12444 = !DILocalVariable(name: "thread", scope: !12441, file: !2108, line: 879, type: !2003)
!12445 = !DILocalVariable(name: "__i", scope: !12446, file: !2108, line: 881, type: !11352)
!12446 = distinct !DILexicalBlock(scope: !12441, file: !2108, line: 881, column: 2)
!12447 = !DILocalVariable(name: "__key", scope: !12446, file: !2108, line: 881, type: !11352)
!12448 = !DILocation(line: 0, scope: !12441)
!12449 = !DILocation(line: 0, scope: !12446)
!12450 = !DILocation(line: 0, scope: !11360, inlinedAt: !12451)
!12451 = distinct !DILocation(line: 881, column: 2, scope: !12446)
!12452 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12453)
!12453 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12451)
!12454 = !DILocation(line: 0, scope: !11369, inlinedAt: !12453)
!12455 = !DILocation(line: 882, column: 12, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12457, file: !2108, line: 881, column: 26)
!12457 = distinct !DILexicalBlock(scope: !12446, file: !2108, line: 881, column: 2)
!12458 = !DILocation(line: 884, column: 14, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12456, file: !2108, line: 884, column: 7)
!12460 = !DILocation(line: 884, column: 7, scope: !12456)
!12461 = !DILocation(line: 885, column: 4, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12459, file: !2108, line: 884, column: 23)
!12463 = !DILocation(line: 886, column: 10, scope: !12462)
!12464 = !DILocation(line: 887, column: 3, scope: !12462)
!12465 = !DILocation(line: 0, scope: !11387, inlinedAt: !12466)
!12466 = distinct !DILocation(line: 881, column: 2, scope: !12457)
!12467 = !DILocation(line: 0, scope: !11395, inlinedAt: !12468)
!12468 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12466)
!12469 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12468)
!12470 = !DILocation(line: 890, column: 2, scope: !12441)
!12471 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2108, file: !2108, line: 893, type: !11318, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12472)
!12472 = !{!12473}
!12473 = !DILocalVariable(name: "thread", arg: 1, scope: !12471, file: !2108, line: 893, type: !2003)
!12474 = !DILocation(line: 0, scope: !12471)
!12475 = !DILocation(line: 0, scope: !12327, inlinedAt: !12476)
!12476 = distinct !DILocation(line: 895, column: 2, scope: !12471)
!12477 = !DILocation(line: 0, scope: !12331, inlinedAt: !12476)
!12478 = !DILocation(line: 0, scope: !11360, inlinedAt: !12479)
!12479 = distinct !DILocation(line: 788, column: 2, scope: !12331, inlinedAt: !12476)
!12480 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12481)
!12481 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12479)
!12482 = !DILocation(line: 0, scope: !11369, inlinedAt: !12481)
!12483 = !DILocation(line: 789, column: 3, scope: !12341, inlinedAt: !12476)
!12484 = !DILocation(line: 0, scope: !11387, inlinedAt: !12485)
!12485 = distinct !DILocation(line: 788, column: 2, scope: !12342, inlinedAt: !12476)
!12486 = !DILocation(line: 0, scope: !11395, inlinedAt: !12487)
!12487 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12485)
!12488 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12487)
!12489 = !DILocation(line: 896, column: 8, scope: !12471)
!12490 = !DILocation(line: 897, column: 1, scope: !12471)
!12491 = distinct !DISubprogram(name: "z_set_prio", scope: !2108, file: !2108, line: 902, type: !11680, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12492)
!12492 = !{!12493, !12494, !12495, !12496, !12498}
!12493 = !DILocalVariable(name: "thread", arg: 1, scope: !12491, file: !2108, line: 902, type: !2003)
!12494 = !DILocalVariable(name: "prio", arg: 2, scope: !12491, file: !2108, line: 902, type: !103)
!12495 = !DILocalVariable(name: "need_sched", scope: !12491, file: !2108, line: 904, type: !157)
!12496 = !DILocalVariable(name: "__i", scope: !12497, file: !2108, line: 906, type: !11352)
!12497 = distinct !DILexicalBlock(scope: !12491, file: !2108, line: 906, column: 2)
!12498 = !DILocalVariable(name: "__key", scope: !12497, file: !2108, line: 906, type: !11352)
!12499 = !DILocation(line: 0, scope: !12491)
!12500 = !DILocation(line: 0, scope: !12497)
!12501 = !DILocation(line: 0, scope: !11360, inlinedAt: !12502)
!12502 = distinct !DILocation(line: 906, column: 2, scope: !12497)
!12503 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12504)
!12504 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12502)
!12505 = !DILocation(line: 0, scope: !11369, inlinedAt: !12504)
!12506 = !DILocation(line: 907, column: 16, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !2108, line: 906, column: 26)
!12508 = distinct !DILexicalBlock(scope: !12497, file: !2108, line: 906, column: 2)
!12509 = !DILocation(line: 909, column: 7, scope: !12507)
!12510 = !DILocation(line: 0, scope: !11529, inlinedAt: !12511)
!12511 = distinct !DILocation(line: 912, column: 5, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12513, file: !2108, line: 911, column: 63)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !2108, line: 911, column: 8)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !2108, line: 909, column: 19)
!12515 = distinct !DILexicalBlock(scope: !12507, file: !2108, line: 909, column: 7)
!12516 = !DILocation(line: 266, column: 28, scope: !11529, inlinedAt: !12511)
!12517 = !DILocation(line: 0, scope: !11537, inlinedAt: !12518)
!12518 = distinct !DILocation(line: 268, column: 3, scope: !11541, inlinedAt: !12511)
!12519 = !DILocation(line: 234, column: 2, scope: !11537, inlinedAt: !12518)
!12520 = !DILocation(line: 913, column: 23, scope: !12512)
!12521 = !DILocation(line: 0, scope: !11546, inlinedAt: !12522)
!12522 = distinct !DILocation(line: 914, column: 5, scope: !12512)
!12523 = !DILocation(line: 252, column: 28, scope: !11546, inlinedAt: !12522)
!12524 = !DILocation(line: 0, scope: !11553, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 254, column: 3, scope: !11557, inlinedAt: !12522)
!12526 = !DILocation(line: 0, scope: !11560, inlinedAt: !12527)
!12527 = distinct !DILocation(line: 229, column: 2, scope: !11553, inlinedAt: !12525)
!12528 = !DILocation(line: 188, column: 2, scope: !11570, inlinedAt: !12527)
!12529 = !DILocation(line: 188, column: 2, scope: !11572, inlinedAt: !12527)
!12530 = !DILocation(line: 0, scope: !11570, inlinedAt: !12527)
!12531 = !DILocation(line: 189, column: 7, scope: !11575, inlinedAt: !12527)
!12532 = !DILocation(line: 189, column: 35, scope: !11575, inlinedAt: !12527)
!12533 = !DILocation(line: 189, column: 7, scope: !11576, inlinedAt: !12527)
!12534 = !DILocation(line: 190, column: 4, scope: !11580, inlinedAt: !12527)
!12535 = !DILocation(line: 192, column: 4, scope: !11580, inlinedAt: !12527)
!12536 = distinct !{!12536, !12528, !12537}
!12537 = !DILocation(line: 194, column: 2, scope: !11570, inlinedAt: !12527)
!12538 = !DILocation(line: 196, column: 2, scope: !11560, inlinedAt: !12527)
!12539 = !DILocation(line: 197, column: 1, scope: !11560, inlinedAt: !12527)
!12540 = !DILocation(line: 918, column: 4, scope: !12514)
!12541 = !DILocation(line: 919, column: 3, scope: !12514)
!12542 = !DILocation(line: 920, column: 22, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12515, file: !2108, line: 919, column: 10)
!12544 = !DILocation(line: 0, scope: !11387, inlinedAt: !12545)
!12545 = distinct !DILocation(line: 906, column: 2, scope: !12508)
!12546 = !DILocation(line: 0, scope: !11395, inlinedAt: !12547)
!12547 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12545)
!12548 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12547)
!12549 = !DILocation(line: 926, column: 2, scope: !12491)
!12550 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2108, file: !2108, line: 929, type: !12551, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12553)
!12551 = !DISubroutineType(types: !12552)
!12552 = !{null, !2003, !103}
!12553 = !{!12554, !12555, !12556}
!12554 = !DILocalVariable(name: "thread", arg: 1, scope: !12550, file: !2108, line: 929, type: !2003)
!12555 = !DILocalVariable(name: "prio", arg: 2, scope: !12550, file: !2108, line: 929, type: !103)
!12556 = !DILocalVariable(name: "need_sched", scope: !12550, file: !2108, line: 931, type: !157)
!12557 = !DILocation(line: 0, scope: !12550)
!12558 = !DILocation(line: 931, column: 20, scope: !12550)
!12559 = !DILocation(line: 935, column: 17, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12550, file: !2108, line: 935, column: 6)
!12561 = !DILocation(line: 935, column: 20, scope: !12560)
!12562 = !DILocation(line: 935, column: 35, scope: !12560)
!12563 = !DILocation(line: 935, column: 48, scope: !12560)
!12564 = !DILocation(line: 935, column: 6, scope: !12550)
!12565 = !DILocation(line: 936, column: 3, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12560, file: !2108, line: 935, column: 55)
!12567 = !DILocation(line: 937, column: 2, scope: !12566)
!12568 = !DILocation(line: 938, column: 1, scope: !12550)
!12569 = distinct !DISubprogram(name: "k_sched_lock", scope: !2108, file: !2108, line: 987, type: !2738, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12570)
!12570 = !{!12571, !12573}
!12571 = !DILocalVariable(name: "__i", scope: !12572, file: !2108, line: 989, type: !11352)
!12572 = distinct !DILexicalBlock(scope: !12569, file: !2108, line: 989, column: 2)
!12573 = !DILocalVariable(name: "__key", scope: !12572, file: !2108, line: 989, type: !11352)
!12574 = !DILocation(line: 0, scope: !12572)
!12575 = !DILocation(line: 0, scope: !11360, inlinedAt: !12576)
!12576 = distinct !DILocation(line: 989, column: 2, scope: !12572)
!12577 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12578)
!12578 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12576)
!12579 = !DILocation(line: 0, scope: !11369, inlinedAt: !12578)
!12580 = !DILocation(line: 992, column: 3, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !2108, line: 989, column: 26)
!12582 = distinct !DILexicalBlock(scope: !12572, file: !2108, line: 989, column: 2)
!12583 = !DILocation(line: 0, scope: !11387, inlinedAt: !12584)
!12584 = distinct !DILocation(line: 989, column: 2, scope: !12582)
!12585 = !DILocation(line: 0, scope: !11395, inlinedAt: !12586)
!12586 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12584)
!12587 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12586)
!12588 = !DILocation(line: 994, column: 1, scope: !12569)
!12589 = distinct !DISubprogram(name: "z_sched_lock", scope: !10632, file: !10632, line: 251, type: !2738, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12590 = !DILocation(line: 256, column: 4, scope: !12589)
!12591 = !DILocation(line: 256, column: 19, scope: !12589)
!12592 = !DILocation(line: 256, column: 2, scope: !12589)
!12593 = !DILocation(line: 258, column: 2, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12589, file: !10632, line: 258, column: 2)
!12595 = !{i64 2154189100}
!12596 = !DILocation(line: 259, column: 1, scope: !12589)
!12597 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2108, file: !2108, line: 996, type: !2738, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12598)
!12598 = !{!12599, !12601}
!12599 = !DILocalVariable(name: "__i", scope: !12600, file: !2108, line: 998, type: !11352)
!12600 = distinct !DILexicalBlock(scope: !12597, file: !2108, line: 998, column: 2)
!12601 = !DILocalVariable(name: "__key", scope: !12600, file: !2108, line: 998, type: !11352)
!12602 = !DILocation(line: 0, scope: !12600)
!12603 = !DILocation(line: 0, scope: !11360, inlinedAt: !12604)
!12604 = distinct !DILocation(line: 998, column: 2, scope: !12600)
!12605 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12606)
!12606 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12604)
!12607 = !DILocation(line: 0, scope: !11369, inlinedAt: !12606)
!12608 = !DILocation(line: 1002, column: 5, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !2108, line: 998, column: 26)
!12610 = distinct !DILexicalBlock(scope: !12600, file: !2108, line: 998, column: 2)
!12611 = !DILocation(line: 1002, column: 20, scope: !12609)
!12612 = !DILocation(line: 1002, column: 3, scope: !12609)
!12613 = !DILocation(line: 1003, column: 3, scope: !12609)
!12614 = !DILocation(line: 0, scope: !11387, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 998, column: 2, scope: !12610)
!12616 = !DILocation(line: 0, scope: !11395, inlinedAt: !12617)
!12617 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !12615)
!12618 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !12617)
!12619 = !DILocation(line: 1011, column: 2, scope: !12597)
!12620 = !DILocation(line: 1012, column: 1, scope: !12597)
!12621 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2108, file: !2108, line: 1014, type: !11668, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12622 = !DILocation(line: 1028, column: 25, scope: !12621)
!12623 = !DILocation(line: 1028, column: 2, scope: !12621)
!12624 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2108, file: !2108, line: 1155, type: !12625, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12627)
!12625 = !DISubroutineType(types: !12626)
!12626 = !{!157, !2032, !2032}
!12627 = !{!12628, !12629, !12630, !12631, !12632}
!12628 = !DILocalVariable(name: "a", arg: 1, scope: !12624, file: !2108, line: 1155, type: !2032)
!12629 = !DILocalVariable(name: "b", arg: 2, scope: !12624, file: !2108, line: 1155, type: !2032)
!12630 = !DILocalVariable(name: "thread_a", scope: !12624, file: !2108, line: 1157, type: !2003)
!12631 = !DILocalVariable(name: "thread_b", scope: !12624, file: !2108, line: 1157, type: !2003)
!12632 = !DILocalVariable(name: "cmp", scope: !12624, file: !2108, line: 1158, type: !566)
!12633 = !DILocation(line: 0, scope: !12624)
!12634 = !DILocation(line: 1160, column: 13, scope: !12624)
!12635 = !DILocation(line: 1161, column: 13, scope: !12624)
!12636 = !DILocation(line: 1163, column: 8, scope: !12624)
!12637 = !DILocation(line: 1165, column: 10, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12624, file: !2108, line: 1165, column: 6)
!12639 = !DILocation(line: 1165, column: 6, scope: !12624)
!12640 = !DILocation(line: 1167, column: 17, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12638, file: !2108, line: 1167, column: 13)
!12642 = !DILocation(line: 1167, column: 13, scope: !12638)
!12643 = !DILocation(line: 1170, column: 25, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12641, file: !2108, line: 1169, column: 9)
!12645 = !DILocation(line: 1170, column: 52, scope: !12644)
!12646 = !DILocation(line: 1170, column: 35, scope: !12644)
!12647 = !DILocation(line: 1170, column: 3, scope: !12644)
!12648 = !DILocation(line: 0, scope: !12638)
!12649 = !DILocation(line: 1173, column: 1, scope: !12624)
!12650 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2108, file: !2108, line: 1175, type: !12651, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12666)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{null, !12653, !2003}
!12653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12654, size: 32)
!12654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12655, line: 37, size: 128, elements: !12656)
!12655 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12656 = !{!12657, !12665}
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12654, file: !12655, line: 38, baseType: !12658, size: 96)
!12658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !12659)
!12659 = !{!12660, !12661, !12664}
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12658, file: !237, line: 84, baseType: !2032, size: 32)
!12661 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12658, file: !237, line: 85, baseType: !12662, size: 32, offset: 32)
!12662 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !12663)
!12663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12625, size: 32)
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12658, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12654, file: !12655, line: 39, baseType: !103, size: 32, offset: 96)
!12666 = !{!12667, !12668, !12669, !12670, !12679}
!12667 = !DILocalVariable(name: "pq", arg: 1, scope: !12650, file: !2108, line: 1175, type: !12653)
!12668 = !DILocalVariable(name: "thread", arg: 2, scope: !12650, file: !2108, line: 1175, type: !2003)
!12669 = !DILocalVariable(name: "t", scope: !12650, file: !2108, line: 1177, type: !2003)
!12670 = !DILocalVariable(name: "__f", scope: !12671, file: !2108, line: 1190, type: !12674)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !2108, line: 1190, column: 3)
!12672 = distinct !DILexicalBlock(scope: !12673, file: !2108, line: 1189, column: 27)
!12673 = distinct !DILexicalBlock(scope: !12650, file: !2108, line: 1189, column: 6)
!12674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !12675)
!12675 = !{!12676, !12677, !12678}
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12674, file: !237, line: 156, baseType: !2103, size: 32)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12674, file: !237, line: 157, baseType: !1653, size: 32, offset: 32)
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12674, file: !237, line: 158, baseType: !566, size: 32, offset: 64)
!12679 = !DILocalVariable(name: "n", scope: !12680, file: !2108, line: 1190, type: !2032)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !2108, line: 1190, column: 3)
!12681 = distinct !DILexicalBlock(scope: !12671, file: !2108, line: 1190, column: 3)
!12682 = !DILocation(line: 0, scope: !12650)
!12683 = !DILocation(line: 1181, column: 31, scope: !12650)
!12684 = !DILocation(line: 1181, column: 45, scope: !12650)
!12685 = !DILocation(line: 1181, column: 15, scope: !12650)
!12686 = !DILocation(line: 1181, column: 25, scope: !12650)
!12687 = !DILocation(line: 1189, column: 11, scope: !12673)
!12688 = !DILocation(line: 1189, column: 7, scope: !12673)
!12689 = !DILocation(line: 1189, column: 6, scope: !12650)
!12690 = !DILocation(line: 1190, column: 3, scope: !12671)
!12691 = !DILocation(line: 1190, column: 3, scope: !12680)
!12692 = !DILocation(line: 0, scope: !12680)
!12693 = !DILocation(line: 1190, column: 3, scope: !12681)
!12694 = !DILocation(line: 1193, column: 2, scope: !12672)
!12695 = !DILocation(line: 1191, column: 42, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12681, file: !2108, line: 1190, column: 54)
!12697 = !DILocation(line: 1191, column: 12, scope: !12696)
!12698 = !DILocation(line: 1191, column: 22, scope: !12696)
!12699 = distinct !{!12699, !12690, !12700}
!12700 = !DILocation(line: 1192, column: 3, scope: !12671)
!12701 = !DILocation(line: 1195, column: 17, scope: !12650)
!12702 = !DILocation(line: 1195, column: 37, scope: !12650)
!12703 = !DILocation(line: 1195, column: 2, scope: !12650)
!12704 = !DILocation(line: 1196, column: 1, scope: !12650)
!12705 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !12706, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!2032, !12708, !12709}
!12708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12658, size: 32)
!12709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12674, size: 32)
!12710 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !12711, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{null, !12708, !2032}
!12713 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2108, file: !2108, line: 1198, type: !12651, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12714)
!12714 = !{!12715, !12716}
!12715 = !DILocalVariable(name: "pq", arg: 1, scope: !12713, file: !2108, line: 1198, type: !12653)
!12716 = !DILocalVariable(name: "thread", arg: 2, scope: !12713, file: !2108, line: 1198, type: !2003)
!12717 = !DILocation(line: 0, scope: !12713)
!12718 = !DILocation(line: 1202, column: 17, scope: !12713)
!12719 = !DILocation(line: 1202, column: 37, scope: !12713)
!12720 = !DILocation(line: 1202, column: 2, scope: !12713)
!12721 = !DILocation(line: 1204, column: 16, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12713, file: !2108, line: 1204, column: 6)
!12723 = !DILocation(line: 1204, column: 7, scope: !12722)
!12724 = !DILocation(line: 1204, column: 6, scope: !12713)
!12725 = !DILocation(line: 1205, column: 7, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12722, file: !2108, line: 1204, column: 22)
!12727 = !DILocation(line: 1205, column: 22, scope: !12726)
!12728 = !DILocation(line: 1206, column: 2, scope: !12726)
!12729 = !DILocation(line: 1207, column: 1, scope: !12713)
!12730 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !12711, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12731 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2108, file: !2108, line: 1209, type: !12732, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12734)
!12732 = !DISubroutineType(types: !12733)
!12733 = !{!2003, !12653}
!12734 = !{!12735, !12736, !12737}
!12735 = !DILocalVariable(name: "pq", arg: 1, scope: !12731, file: !2108, line: 1209, type: !12653)
!12736 = !DILocalVariable(name: "thread", scope: !12731, file: !2108, line: 1211, type: !2003)
!12737 = !DILocalVariable(name: "n", scope: !12731, file: !2108, line: 1212, type: !2032)
!12738 = !DILocation(line: 0, scope: !12731)
!12739 = !DILocation(line: 1212, column: 37, scope: !12731)
!12740 = !DILocation(line: 1212, column: 21, scope: !12731)
!12741 = !DILocation(line: 1217, column: 2, scope: !12731)
!12742 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !12743, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12745)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!2032, !12708}
!12745 = !{!12746}
!12746 = !DILocalVariable(name: "tree", arg: 1, scope: !12742, file: !237, line: 115, type: !12708)
!12747 = !DILocation(line: 0, scope: !12742)
!12748 = !DILocation(line: 117, column: 9, scope: !12742)
!12749 = !DILocation(line: 117, column: 2, scope: !12742)
!12750 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !12751, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12751 = !DISubroutineType(types: !12752)
!12752 = !{!2032, !12708, !154}
!12753 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2108, file: !2108, line: 1246, type: !12754, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12764)
!12754 = !DISubroutineType(types: !12755)
!12755 = !{!2003, !12756}
!12756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12757, size: 32)
!12757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12655, line: 53, size: 2080, elements: !12758)
!12758 = !{!12759, !12763}
!12759 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !12757, file: !12655, line: 54, baseType: !12760, size: 2048)
!12760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 2048, elements: !12761)
!12761 = !{!12762}
!12762 = !DISubrange(count: 32)
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !12757, file: !12655, line: 55, baseType: !32, size: 32, offset: 2048)
!12764 = !{!12765, !12766, !12767, !12768}
!12765 = !DILocalVariable(name: "pq", arg: 1, scope: !12753, file: !2108, line: 1246, type: !12756)
!12766 = !DILocalVariable(name: "thread", scope: !12753, file: !2108, line: 1252, type: !2003)
!12767 = !DILocalVariable(name: "l", scope: !12753, file: !2108, line: 1253, type: !11563)
!12768 = !DILocalVariable(name: "n", scope: !12753, file: !2108, line: 1254, type: !2104)
!12769 = !DILocation(line: 0, scope: !12753)
!12770 = !DILocation(line: 1248, column: 11, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12753, file: !2108, line: 1248, column: 6)
!12772 = !DILocation(line: 1248, column: 7, scope: !12771)
!12773 = !DILocation(line: 1248, column: 6, scope: !12753)
!12774 = !DILocation(line: 1253, column: 31, scope: !12753)
!12775 = !DILocation(line: 1253, column: 20, scope: !12753)
!12776 = !DILocation(line: 1254, column: 19, scope: !12753)
!12777 = !DILocation(line: 1260, column: 1, scope: !12753)
!12778 = distinct !DISubprogram(name: "z_unpend_all", scope: !2108, file: !2108, line: 1262, type: !12779, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{!103, !2034}
!12781 = !{!12782, !12783, !12784}
!12782 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12778, file: !2108, line: 1262, type: !2034)
!12783 = !DILocalVariable(name: "need_sched", scope: !12778, file: !2108, line: 1264, type: !103)
!12784 = !DILocalVariable(name: "thread", scope: !12778, file: !2108, line: 1265, type: !2003)
!12785 = !DILocation(line: 0, scope: !12778)
!12786 = !DILocation(line: 1267, column: 19, scope: !12778)
!12787 = !DILocation(line: 1267, column: 41, scope: !12778)
!12788 = !DILocation(line: 1267, column: 2, scope: !12778)
!12789 = !DILocation(line: 1268, column: 3, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12778, file: !2108, line: 1267, column: 50)
!12791 = !DILocation(line: 1269, column: 3, scope: !12790)
!12792 = distinct !{!12792, !12788, !12793}
!12793 = !DILocation(line: 1271, column: 2, scope: !12778)
!12794 = !DILocation(line: 1273, column: 2, scope: !12778)
!12795 = distinct !DISubprogram(name: "z_waitq_head", scope: !10958, file: !10958, line: 52, type: !12411, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12796)
!12796 = !{!12797}
!12797 = !DILocalVariable(name: "w", arg: 1, scope: !12795, file: !10958, line: 52, type: !2034)
!12798 = !DILocation(line: 0, scope: !12795)
!12799 = !DILocation(line: 54, column: 52, scope: !12795)
!12800 = !DILocation(line: 54, column: 28, scope: !12795)
!12801 = !DILocation(line: 54, column: 9, scope: !12795)
!12802 = !DILocation(line: 54, column: 2, scope: !12795)
!12803 = distinct !DISubprogram(name: "init_ready_q", scope: !2108, file: !2108, line: 1276, type: !12804, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12811)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{null, !12806}
!12806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12807, size: 32)
!12807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !12808)
!12808 = !{!12809, !12810}
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !12807, file: !247, line: 86, baseType: !2003, size: 32)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !12807, file: !247, line: 90, baseType: !2039, size: 64, offset: 32)
!12811 = !{!12812}
!12812 = !DILocalVariable(name: "rq", arg: 1, scope: !12803, file: !2108, line: 1276, type: !12806)
!12813 = !DILocation(line: 0, scope: !12803)
!12814 = !DILocation(line: 1289, column: 22, scope: !12803)
!12815 = !DILocation(line: 1289, column: 2, scope: !12803)
!12816 = !DILocation(line: 1291, column: 1, scope: !12803)
!12817 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !12818, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12820)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{null, !11563}
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "list", arg: 1, scope: !12817, file: !221, line: 197, type: !11563)
!12822 = !DILocation(line: 0, scope: !12817)
!12823 = !DILocation(line: 199, column: 8, scope: !12817)
!12824 = !DILocation(line: 199, column: 13, scope: !12817)
!12825 = !DILocation(line: 200, column: 8, scope: !12817)
!12826 = !DILocation(line: 200, column: 13, scope: !12817)
!12827 = !DILocation(line: 201, column: 1, scope: !12817)
!12828 = distinct !DISubprogram(name: "z_sched_init", scope: !2108, file: !2108, line: 1293, type: !2738, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12829 = !DILocation(line: 1302, column: 2, scope: !12828)
!12830 = !DILocation(line: 1306, column: 2, scope: !12828)
!12831 = !DILocation(line: 1309, column: 1, scope: !12828)
!12832 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2108, file: !2108, line: 1311, type: !12833, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12836)
!12833 = !DISubroutineType(types: !12834)
!12834 = !{!103, !12835}
!12835 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2003)
!12836 = !{!12837}
!12837 = !DILocalVariable(name: "thread", arg: 1, scope: !12832, file: !2108, line: 1311, type: !12835)
!12838 = !DILocation(line: 0, scope: !12832)
!12839 = !DILocation(line: 1313, column: 22, scope: !12832)
!12840 = !DILocation(line: 1313, column: 9, scope: !12832)
!12841 = !DILocation(line: 1313, column: 2, scope: !12832)
!12842 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2108, file: !2108, line: 1325, type: !12843, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12845)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{null, !12835, !103}
!12845 = !{!12846, !12847, !12848}
!12846 = !DILocalVariable(name: "thread", arg: 1, scope: !12842, file: !2108, line: 1325, type: !12835)
!12847 = !DILocalVariable(name: "prio", arg: 2, scope: !12842, file: !2108, line: 1325, type: !103)
!12848 = !DILocalVariable(name: "th", scope: !12842, file: !2108, line: 1334, type: !2003)
!12849 = !DILocation(line: 0, scope: !12842)
!12850 = !DILocation(line: 1336, column: 2, scope: !12842)
!12851 = !DILocation(line: 1337, column: 1, scope: !12842)
!12852 = distinct !DISubprogram(name: "k_can_yield", scope: !2108, file: !2108, line: 1384, type: !5492, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12853 = !DILocation(line: 1386, column: 11, scope: !12852)
!12854 = !DILocation(line: 1386, column: 29, scope: !12852)
!12855 = !DILocation(line: 1386, column: 32, scope: !12852)
!12856 = !DILocation(line: 1386, column: 46, scope: !12852)
!12857 = !DILocation(line: 1387, column: 28, scope: !12852)
!12858 = !DILocation(line: 1387, column: 4, scope: !12852)
!12859 = !DILocation(line: 1386, column: 2, scope: !12852)
!12860 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !5492, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12861 = !DILocation(line: 993, column: 10, scope: !12860)
!12862 = !DILocation(line: 993, column: 2, scope: !12860)
!12863 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2108, file: !2108, line: 1390, type: !2738, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12864)
!12864 = !{!12865}
!12865 = !DILocalVariable(name: "key", scope: !12863, file: !2108, line: 1396, type: !11352)
!12866 = !DILocation(line: 0, scope: !11360, inlinedAt: !12867)
!12867 = distinct !DILocation(line: 1396, column: 25, scope: !12863)
!12868 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12867)
!12870 = !DILocation(line: 0, scope: !11369, inlinedAt: !12869)
!12871 = !DILocation(line: 0, scope: !12863)
!12872 = !DILocation(line: 1400, column: 18, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !2108, line: 1399, column: 36)
!12874 = distinct !DILexicalBlock(scope: !12863, file: !2108, line: 1398, column: 6)
!12875 = !DILocation(line: 0, scope: !11529, inlinedAt: !12876)
!12876 = distinct !DILocation(line: 1400, column: 3, scope: !12873)
!12877 = !DILocation(line: 266, column: 15, scope: !11529, inlinedAt: !12876)
!12878 = !DILocation(line: 266, column: 28, scope: !11529, inlinedAt: !12876)
!12879 = !DILocation(line: 0, scope: !11537, inlinedAt: !12880)
!12880 = distinct !DILocation(line: 268, column: 3, scope: !11541, inlinedAt: !12876)
!12881 = !DILocation(line: 234, column: 2, scope: !11537, inlinedAt: !12880)
!12882 = !DILocation(line: 1402, column: 15, scope: !12863)
!12883 = !DILocation(line: 0, scope: !11546, inlinedAt: !12884)
!12884 = distinct !DILocation(line: 1402, column: 2, scope: !12863)
!12885 = !DILocation(line: 252, column: 15, scope: !11546, inlinedAt: !12884)
!12886 = !DILocation(line: 252, column: 28, scope: !11546, inlinedAt: !12884)
!12887 = !DILocation(line: 0, scope: !11553, inlinedAt: !12888)
!12888 = distinct !DILocation(line: 254, column: 3, scope: !11557, inlinedAt: !12884)
!12889 = !DILocation(line: 0, scope: !11560, inlinedAt: !12890)
!12890 = distinct !DILocation(line: 229, column: 2, scope: !11553, inlinedAt: !12888)
!12891 = !DILocation(line: 188, column: 2, scope: !11570, inlinedAt: !12890)
!12892 = !DILocation(line: 188, column: 2, scope: !11572, inlinedAt: !12890)
!12893 = !DILocation(line: 0, scope: !11570, inlinedAt: !12890)
!12894 = !DILocation(line: 189, column: 7, scope: !11575, inlinedAt: !12890)
!12895 = !DILocation(line: 189, column: 35, scope: !11575, inlinedAt: !12890)
!12896 = !DILocation(line: 189, column: 7, scope: !11576, inlinedAt: !12890)
!12897 = !DILocation(line: 191, column: 21, scope: !11580, inlinedAt: !12890)
!12898 = !DILocation(line: 190, column: 4, scope: !11580, inlinedAt: !12890)
!12899 = !DILocation(line: 192, column: 4, scope: !11580, inlinedAt: !12890)
!12900 = distinct !{!12900, !12891, !12901}
!12901 = !DILocation(line: 194, column: 2, scope: !11570, inlinedAt: !12890)
!12902 = !DILocation(line: 196, column: 37, scope: !11560, inlinedAt: !12890)
!12903 = !DILocation(line: 196, column: 2, scope: !11560, inlinedAt: !12890)
!12904 = !DILocation(line: 197, column: 1, scope: !11560, inlinedAt: !12890)
!12905 = !DILocation(line: 1403, column: 2, scope: !12863)
!12906 = !DILocation(line: 0, scope: !11971, inlinedAt: !12907)
!12907 = distinct !DILocation(line: 1404, column: 2, scope: !12863)
!12908 = !DILocation(line: 196, column: 9, scope: !11971, inlinedAt: !12907)
!12909 = !DILocation(line: 1405, column: 1, scope: !12863)
!12910 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2108, file: !2108, line: 1459, type: !12911, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12913)
!12911 = !DISubroutineType(types: !12912)
!12912 = !{!566, !12151}
!12913 = !{!12914, !12915, !12916}
!12914 = !DILocalVariable(name: "timeout", arg: 1, scope: !12910, file: !2108, line: 1459, type: !12151)
!12915 = !DILocalVariable(name: "ticks", scope: !12910, file: !2108, line: 1461, type: !1358)
!12916 = !DILocalVariable(name: "ret", scope: !12910, file: !2108, line: 1480, type: !566)
!12917 = !DILocation(line: 0, scope: !12910)
!12918 = !DILocation(line: 1468, column: 6, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12910, file: !2108, line: 1468, column: 6)
!12920 = !DILocation(line: 1468, column: 6, scope: !12910)
!12921 = !DILocation(line: 1469, column: 20, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12919, file: !2108, line: 1468, column: 40)
!12923 = !DILocation(line: 1469, column: 3, scope: !12922)
!12924 = !DILocation(line: 1473, column: 3, scope: !12922)
!12925 = !DILocation(line: 1478, column: 10, scope: !12910)
!12926 = !DILocation(line: 1480, column: 16, scope: !12910)
!12927 = !DILocation(line: 1485, column: 1, scope: !12910)
!12928 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3162, file: !3162, line: 310, type: !12929, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12931)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{null, !12835}
!12931 = !{!12932}
!12932 = !DILocalVariable(name: "thread", arg: 1, scope: !12928, file: !3162, line: 310, type: !12835)
!12933 = !DILocation(line: 0, scope: !12928)
!12934 = !DILocation(line: 319, column: 2, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12928, file: !3162, line: 319, column: 2)
!12936 = !{i64 2154107489}
!12937 = !DILocation(line: 320, column: 2, scope: !12928)
!12938 = !DILocation(line: 321, column: 1, scope: !12928)
!12939 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2108, file: !2108, line: 1415, type: !12940, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12942)
!12940 = !DISubroutineType(types: !12941)
!12941 = !{!566, !1358}
!12942 = !{!12943, !12944, !12945, !12946}
!12943 = !DILocalVariable(name: "ticks", arg: 1, scope: !12939, file: !2108, line: 1415, type: !1358)
!12944 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !12939, file: !2108, line: 1418, type: !121)
!12945 = !DILocalVariable(name: "timeout", scope: !12939, file: !2108, line: 1430, type: !12151)
!12946 = !DILocalVariable(name: "key", scope: !12939, file: !2108, line: 1437, type: !11352)
!12947 = !DILocation(line: 0, scope: !12939)
!12948 = !DILocation(line: 1425, column: 12, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12939, file: !2108, line: 1425, column: 6)
!12950 = !DILocation(line: 1425, column: 6, scope: !12939)
!12951 = !DILocation(line: 1426, column: 3, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12949, file: !2108, line: 1425, column: 18)
!12953 = !DILocation(line: 1427, column: 3, scope: !12952)
!12954 = !DILocation(line: 1431, column: 24, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12939, file: !2108, line: 1431, column: 6)
!12956 = !DILocation(line: 1431, column: 6, scope: !12939)
!12957 = !DILocation(line: 1432, column: 35, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12955, file: !2108, line: 1431, column: 30)
!12959 = !DILocation(line: 1432, column: 27, scope: !12958)
!12960 = !DILocation(line: 1433, column: 2, scope: !12958)
!12961 = !DILocation(line: 1434, column: 27, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12955, file: !2108, line: 1433, column: 9)
!12963 = !DILocation(line: 0, scope: !12955)
!12964 = !DILocation(line: 0, scope: !11360, inlinedAt: !12965)
!12965 = distinct !DILocation(line: 1437, column: 25, scope: !12939)
!12966 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !12967)
!12967 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !12965)
!12968 = !DILocation(line: 0, scope: !11369, inlinedAt: !12967)
!12969 = !DILocation(line: 1440, column: 20, scope: !12939)
!12970 = !DILocation(line: 1440, column: 18, scope: !12939)
!12971 = !DILocation(line: 1442, column: 2, scope: !12939)
!12972 = !DILocation(line: 1443, column: 23, scope: !12939)
!12973 = !DILocation(line: 1443, column: 2, scope: !12939)
!12974 = !DILocation(line: 1444, column: 29, scope: !12939)
!12975 = !DILocation(line: 1444, column: 2, scope: !12939)
!12976 = !DILocation(line: 0, scope: !11971, inlinedAt: !12977)
!12977 = distinct !DILocation(line: 1446, column: 8, scope: !12939)
!12978 = !DILocation(line: 196, column: 9, scope: !11971, inlinedAt: !12977)
!12979 = !DILocation(line: 1450, column: 10, scope: !12939)
!12980 = !DILocation(line: 1450, column: 45, scope: !12939)
!12981 = !DILocation(line: 1450, column: 43, scope: !12939)
!12982 = !DILocation(line: 1451, column: 6, scope: !12939)
!12983 = !DILocation(line: 1457, column: 1, scope: !12939)
!12984 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11193, file: !11193, line: 1103, type: !11194, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12985)
!12985 = !{!12986}
!12986 = !DILocalVariable(name: "t", arg: 1, scope: !12984, file: !11193, line: 1103, type: !1270)
!12987 = !DILocation(line: 0, scope: !12984)
!12988 = !DILocation(line: 0, scope: !11407, inlinedAt: !12989)
!12989 = distinct !DILocation(line: 1106, column: 9, scope: !12984)
!12990 = !DILocation(line: 139, column: 13, scope: !12991, inlinedAt: !12989)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !11193, line: 138, column: 10)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !11193, line: 136, column: 7)
!12993 = distinct !DILexicalBlock(scope: !11428, file: !11193, line: 134, column: 17)
!12994 = !DILocation(line: 1106, column: 2, scope: !12984)
!12995 = distinct !DISubprogram(name: "k_yield", scope: !3162, file: !3162, line: 140, type: !2738, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12996 = !DILocation(line: 148, column: 2, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12995, file: !3162, line: 148, column: 2)
!12998 = !{i64 2154106809}
!12999 = !DILocation(line: 149, column: 2, scope: !12995)
!13000 = !DILocation(line: 150, column: 1, scope: !12995)
!13001 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2108, file: !2108, line: 1495, type: !13002, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13004)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{!566, !103}
!13004 = !{!13005, !13006}
!13005 = !DILocalVariable(name: "us", arg: 1, scope: !13001, file: !2108, line: 1495, type: !103)
!13006 = !DILocalVariable(name: "ticks", scope: !13001, file: !2108, line: 1497, type: !566)
!13007 = !DILocation(line: 0, scope: !13001)
!13008 = !DILocation(line: 1501, column: 31, scope: !13001)
!13009 = !DILocation(line: 1501, column: 10, scope: !13001)
!13010 = !DILocation(line: 1502, column: 23, scope: !13001)
!13011 = !DILocation(line: 1502, column: 10, scope: !13001)
!13012 = !DILocation(line: 1506, column: 31, scope: !13001)
!13013 = !DILocation(line: 1506, column: 9, scope: !13001)
!13014 = !DILocation(line: 1506, column: 2, scope: !13001)
!13015 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11193, file: !11193, line: 571, type: !11194, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13016)
!13016 = !{!13017}
!13017 = !DILocalVariable(name: "t", arg: 1, scope: !13015, file: !11193, line: 571, type: !1270)
!13018 = !DILocation(line: 0, scope: !13015)
!13019 = !DILocation(line: 0, scope: !11407, inlinedAt: !13020)
!13020 = distinct !DILocation(line: 574, column: 9, scope: !13015)
!13021 = !DILocation(line: 135, column: 5, scope: !12993, inlinedAt: !13020)
!13022 = !DILocation(line: 139, column: 13, scope: !12991, inlinedAt: !13020)
!13023 = !DILocation(line: 574, column: 2, scope: !13015)
!13024 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11193, file: !11193, line: 1187, type: !11194, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13025)
!13025 = !{!13026}
!13026 = !DILocalVariable(name: "t", arg: 1, scope: !13024, file: !11193, line: 1187, type: !1270)
!13027 = !DILocation(line: 0, scope: !13024)
!13028 = !DILocation(line: 0, scope: !11407, inlinedAt: !13029)
!13029 = distinct !DILocation(line: 1190, column: 9, scope: !13024)
!13030 = !DILocation(line: 145, column: 13, scope: !13031, inlinedAt: !13029)
!13031 = distinct !DILexicalBlock(scope: !11425, file: !11193, line: 144, column: 10)
!13032 = !DILocation(line: 1190, column: 2, scope: !13024)
!13033 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2108, file: !2108, line: 1517, type: !12929, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13034)
!13034 = !{!13035}
!13035 = !DILocalVariable(name: "thread", arg: 1, scope: !13033, file: !2108, line: 1517, type: !12835)
!13036 = !DILocation(line: 0, scope: !13033)
!13037 = !DILocation(line: 1521, column: 6, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13033, file: !2108, line: 1521, column: 6)
!13039 = !DILocation(line: 1521, column: 6, scope: !13033)
!13040 = !DILocation(line: 1525, column: 6, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13033, file: !2108, line: 1525, column: 6)
!13042 = !DILocation(line: 1525, column: 37, scope: !13041)
!13043 = !DILocation(line: 1525, column: 6, scope: !13033)
!13044 = !DILocation(line: 1527, column: 20, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13046, file: !2108, line: 1527, column: 7)
!13046 = distinct !DILexicalBlock(scope: !13041, file: !2108, line: 1525, column: 42)
!13047 = !DILocation(line: 1527, column: 33, scope: !13045)
!13048 = !DILocation(line: 1527, column: 7, scope: !13046)
!13049 = !DILocation(line: 1532, column: 2, scope: !13033)
!13050 = !DILocation(line: 1533, column: 2, scope: !13033)
!13051 = !DILocation(line: 1031, column: 3, scope: !12004, inlinedAt: !13052)
!13052 = distinct !DILocation(line: 48, column: 10, scope: !12008, inlinedAt: !13053)
!13053 = distinct !DILocation(line: 1537, column: 7, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13033, file: !2108, line: 1537, column: 6)
!13055 = !DILocation(line: 0, scope: !12004, inlinedAt: !13052)
!13056 = !DILocation(line: 48, column: 9, scope: !12008, inlinedAt: !13053)
!13057 = !DILocation(line: 1537, column: 6, scope: !13033)
!13058 = !DILocation(line: 1538, column: 3, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13054, file: !2108, line: 1537, column: 25)
!13060 = !DILocation(line: 1539, column: 2, scope: !13059)
!13061 = !DILocation(line: 1540, column: 1, scope: !13033)
!13062 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10632, file: !10632, line: 101, type: !11478, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13063)
!13063 = !{!13064}
!13064 = !DILocalVariable(name: "thread", arg: 1, scope: !13062, file: !10632, line: 101, type: !2003)
!13065 = !DILocation(line: 0, scope: !13062)
!13066 = !DILocation(line: 103, column: 23, scope: !13062)
!13067 = !DILocation(line: 103, column: 36, scope: !13062)
!13068 = !DILocation(line: 103, column: 55, scope: !13062)
!13069 = !DILocation(line: 103, column: 2, scope: !13062)
!13070 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2108, file: !2108, line: 1567, type: !13071, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13073)
!13071 = !DISubroutineType(types: !13072)
!13072 = !{!12835}
!13073 = !{!13074}
!13074 = !DILocalVariable(name: "ret", scope: !13070, file: !2108, line: 1577, type: !12835)
!13075 = !DILocation(line: 1577, column: 30, scope: !13070)
!13076 = !DILocation(line: 0, scope: !13070)
!13077 = !DILocation(line: 1582, column: 2, scope: !13070)
!13078 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2108, file: !2108, line: 1593, type: !5767, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13079 = !DILocation(line: 1031, column: 3, scope: !12004, inlinedAt: !13080)
!13080 = distinct !DILocation(line: 48, column: 10, scope: !12008, inlinedAt: !13081)
!13081 = distinct !DILocation(line: 1595, column: 10, scope: !13078)
!13082 = !DILocation(line: 0, scope: !12004, inlinedAt: !13080)
!13083 = !DILocation(line: 48, column: 9, scope: !12008, inlinedAt: !13081)
!13084 = !DILocation(line: 1595, column: 27, scope: !13078)
!13085 = !DILocation(line: 1595, column: 41, scope: !13078)
!13086 = !DILocation(line: 1595, column: 30, scope: !13078)
!13087 = !DILocation(line: 1595, column: 2, scope: !13078)
!13088 = distinct !DISubprogram(name: "z_thread_abort", scope: !2108, file: !2108, line: 1725, type: !11318, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13089)
!13089 = !{!13090, !13091}
!13090 = !DILocalVariable(name: "thread", arg: 1, scope: !13088, file: !2108, line: 1725, type: !2003)
!13091 = !DILocalVariable(name: "key", scope: !13088, file: !2108, line: 1727, type: !11352)
!13092 = !DILocation(line: 0, scope: !13088)
!13093 = !DILocation(line: 0, scope: !11360, inlinedAt: !13094)
!13094 = distinct !DILocation(line: 1727, column: 25, scope: !13088)
!13095 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !13094)
!13097 = !DILocation(line: 0, scope: !11369, inlinedAt: !13096)
!13098 = !DILocation(line: 1729, column: 20, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13088, file: !2108, line: 1729, column: 6)
!13100 = !DILocation(line: 1729, column: 33, scope: !13099)
!13101 = !DILocation(line: 1729, column: 48, scope: !13099)
!13102 = !DILocation(line: 1729, column: 6, scope: !13088)
!13103 = !DILocation(line: 0, scope: !11387, inlinedAt: !13104)
!13104 = distinct !DILocation(line: 1730, column: 3, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13099, file: !2108, line: 1729, column: 54)
!13106 = !DILocation(line: 0, scope: !11395, inlinedAt: !13107)
!13107 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !13104)
!13108 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !13107)
!13109 = !DILocation(line: 1732, column: 3, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13105, file: !2108, line: 1732, column: 3)
!13111 = !{i64 2154844219, i64 2154844235, i64 2154844261, i64 2154844289, i64 2154844309}
!13112 = !DILocation(line: 1733, column: 3, scope: !13105)
!13113 = !DILocation(line: 1736, column: 20, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13088, file: !2108, line: 1736, column: 6)
!13115 = !DILocation(line: 1736, column: 33, scope: !13114)
!13116 = !DILocation(line: 1736, column: 49, scope: !13114)
!13117 = !DILocation(line: 1736, column: 6, scope: !13088)
!13118 = !DILocation(line: 0, scope: !11387, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 1737, column: 3, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13114, file: !2108, line: 1736, column: 56)
!13121 = !DILocation(line: 0, scope: !11395, inlinedAt: !13122)
!13122 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !13119)
!13123 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !13122)
!13124 = !DILocation(line: 1738, column: 3, scope: !13120)
!13125 = !DILocation(line: 1775, column: 2, scope: !13088)
!13126 = !DILocation(line: 1776, column: 16, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13088, file: !2108, line: 1776, column: 6)
!13128 = !DILocation(line: 1776, column: 13, scope: !13127)
!13129 = !DILocation(line: 1776, column: 25, scope: !13127)
!13130 = !DILocation(line: 1031, column: 3, scope: !12004, inlinedAt: !13131)
!13131 = distinct !DILocation(line: 48, column: 10, scope: !12008, inlinedAt: !13132)
!13132 = distinct !DILocation(line: 1776, column: 29, scope: !13127)
!13133 = !DILocation(line: 0, scope: !12004, inlinedAt: !13131)
!13134 = !DILocation(line: 48, column: 9, scope: !12008, inlinedAt: !13132)
!13135 = !DILocation(line: 1776, column: 6, scope: !13088)
!13136 = !DILocation(line: 0, scope: !11971, inlinedAt: !13137)
!13137 = distinct !DILocation(line: 1777, column: 3, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13127, file: !2108, line: 1776, column: 47)
!13139 = !DILocation(line: 196, column: 9, scope: !11971, inlinedAt: !13137)
!13140 = !DILocation(line: 1779, column: 2, scope: !13138)
!13141 = !DILocation(line: 0, scope: !11387, inlinedAt: !13142)
!13142 = distinct !DILocation(line: 1780, column: 2, scope: !13088)
!13143 = !DILocation(line: 0, scope: !11395, inlinedAt: !13144)
!13144 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !13142)
!13145 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !13144)
!13146 = !DILocation(line: 1781, column: 1, scope: !13088)
!13147 = distinct !DISubprogram(name: "end_thread", scope: !2108, file: !2108, line: 1690, type: !11318, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13148)
!13148 = !{!13149}
!13149 = !DILocalVariable(name: "thread", arg: 1, scope: !13147, file: !2108, line: 1690, type: !2003)
!13150 = !DILocation(line: 0, scope: !13147)
!13151 = !DILocation(line: 1695, column: 20, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13147, file: !2108, line: 1695, column: 6)
!13153 = !DILocation(line: 1695, column: 33, scope: !13152)
!13154 = !DILocation(line: 1695, column: 49, scope: !13152)
!13155 = !DILocation(line: 1695, column: 6, scope: !13147)
!13156 = !DILocation(line: 1697, column: 29, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13152, file: !2108, line: 1695, column: 56)
!13158 = !DILocation(line: 1698, column: 7, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13157, file: !2108, line: 1698, column: 7)
!13160 = !DILocation(line: 1698, column: 7, scope: !13157)
!13161 = !DILocation(line: 0, scope: !11529, inlinedAt: !13162)
!13162 = distinct !DILocation(line: 1699, column: 4, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13159, file: !2108, line: 1698, column: 35)
!13164 = !DILocation(line: 266, column: 28, scope: !11529, inlinedAt: !13162)
!13165 = !DILocation(line: 0, scope: !11537, inlinedAt: !13166)
!13166 = distinct !DILocation(line: 268, column: 3, scope: !11541, inlinedAt: !13162)
!13167 = !DILocation(line: 234, column: 2, scope: !11537, inlinedAt: !13166)
!13168 = !DILocation(line: 1700, column: 3, scope: !13163)
!13169 = !DILocation(line: 1701, column: 20, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13157, file: !2108, line: 1701, column: 7)
!13171 = !DILocation(line: 1701, column: 30, scope: !13170)
!13172 = !DILocation(line: 1701, column: 7, scope: !13157)
!13173 = !DILocation(line: 1702, column: 4, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13170, file: !2108, line: 1701, column: 39)
!13175 = !DILocation(line: 1703, column: 3, scope: !13174)
!13176 = !DILocation(line: 1704, column: 9, scope: !13157)
!13177 = !DILocation(line: 1705, column: 23, scope: !13157)
!13178 = !DILocation(line: 1705, column: 3, scope: !13157)
!13179 = !DILocation(line: 1706, column: 3, scope: !13157)
!13180 = !DILocation(line: 1722, column: 2, scope: !13157)
!13181 = !DILocation(line: 1723, column: 1, scope: !13147)
!13182 = distinct !DISubprogram(name: "unpend_all", scope: !2108, file: !2108, line: 1674, type: !13183, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13185)
!13183 = !DISubroutineType(types: !13184)
!13184 = !{null, !2034}
!13185 = !{!13186, !13187}
!13186 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13182, file: !2108, line: 1674, type: !2034)
!13187 = !DILocalVariable(name: "thread", scope: !13182, file: !2108, line: 1676, type: !2003)
!13188 = !DILocation(line: 0, scope: !13182)
!13189 = !DILocation(line: 1678, column: 19, scope: !13182)
!13190 = !DILocation(line: 1678, column: 41, scope: !13182)
!13191 = !DILocation(line: 1678, column: 2, scope: !13182)
!13192 = !DILocation(line: 1679, column: 3, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13182, file: !2108, line: 1678, column: 50)
!13194 = !DILocation(line: 1680, column: 9, scope: !13193)
!13195 = !DILocalVariable(name: "thread", arg: 1, scope: !13196, file: !10652, line: 65, type: !2003)
!13196 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10652, file: !10652, line: 65, type: !13197, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13199)
!13197 = !DISubroutineType(types: !13198)
!13198 = !{null, !2003, !32}
!13199 = !{!13195, !13200}
!13200 = !DILocalVariable(name: "value", arg: 2, scope: !13196, file: !10652, line: 65, type: !32)
!13201 = !DILocation(line: 0, scope: !13196, inlinedAt: !13202)
!13202 = distinct !DILocation(line: 1681, column: 3, scope: !13193)
!13203 = !DILocation(line: 67, column: 15, scope: !13196, inlinedAt: !13202)
!13204 = !DILocation(line: 67, column: 33, scope: !13196, inlinedAt: !13202)
!13205 = !DILocation(line: 1682, column: 3, scope: !13193)
!13206 = distinct !{!13206, !13191, !13207}
!13207 = !DILocation(line: 1683, column: 2, scope: !13182)
!13208 = !DILocation(line: 1684, column: 1, scope: !13182)
!13209 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2108, file: !2108, line: 1794, type: !13210, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13212)
!13210 = !DISubroutineType(types: !13211)
!13211 = !{!103, !2003, !12151}
!13212 = !{!13213, !13214, !13215, !13216}
!13213 = !DILocalVariable(name: "thread", arg: 1, scope: !13209, file: !2108, line: 1794, type: !2003)
!13214 = !DILocalVariable(name: "timeout", arg: 2, scope: !13209, file: !2108, line: 1794, type: !12151)
!13215 = !DILocalVariable(name: "key", scope: !13209, file: !2108, line: 1796, type: !11352)
!13216 = !DILocalVariable(name: "ret", scope: !13209, file: !2108, line: 1797, type: !103)
!13217 = !DILocation(line: 0, scope: !13209)
!13218 = !DILocation(line: 0, scope: !11360, inlinedAt: !13219)
!13219 = distinct !DILocation(line: 1796, column: 25, scope: !13209)
!13220 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !13221)
!13221 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !13219)
!13222 = !DILocation(line: 0, scope: !11369, inlinedAt: !13221)
!13223 = !DILocation(line: 1801, column: 20, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13209, file: !2108, line: 1801, column: 6)
!13225 = !DILocation(line: 1801, column: 33, scope: !13224)
!13226 = !DILocation(line: 1801, column: 49, scope: !13224)
!13227 = !DILocation(line: 1801, column: 6, scope: !13209)
!13228 = !DILocation(line: 1803, column: 13, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13224, file: !2108, line: 1803, column: 13)
!13230 = !DILocation(line: 1803, column: 13, scope: !13224)
!13231 = !DILocation(line: 1805, column: 24, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13229, file: !2108, line: 1805, column: 13)
!13233 = !DILocation(line: 1805, column: 21, scope: !13232)
!13234 = !DILocation(line: 1805, column: 34, scope: !13232)
!13235 = !DILocation(line: 1806, column: 20, scope: !13232)
!13236 = !DILocation(line: 1806, column: 44, scope: !13232)
!13237 = !DILocation(line: 1806, column: 30, scope: !13232)
!13238 = !DILocation(line: 1805, column: 13, scope: !13229)
!13239 = !DILocation(line: 1810, column: 42, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13232, file: !2108, line: 1808, column: 9)
!13241 = !DILocation(line: 1810, column: 3, scope: !13240)
!13242 = !DILocation(line: 1811, column: 22, scope: !13240)
!13243 = !DILocation(line: 1811, column: 3, scope: !13240)
!13244 = !DILocation(line: 0, scope: !11971, inlinedAt: !13245)
!13245 = distinct !DILocation(line: 1814, column: 9, scope: !13240)
!13246 = !DILocation(line: 196, column: 9, scope: !11971, inlinedAt: !13245)
!13247 = !DILocation(line: 1817, column: 3, scope: !13240)
!13248 = !DILocation(line: 0, scope: !13224)
!13249 = !DILocation(line: 0, scope: !11387, inlinedAt: !13250)
!13250 = distinct !DILocation(line: 1822, column: 2, scope: !13209)
!13251 = !DILocation(line: 0, scope: !11395, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !13250)
!13253 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !13252)
!13254 = !DILocation(line: 1823, column: 2, scope: !13209)
!13255 = !DILocation(line: 1824, column: 1, scope: !13209)
!13256 = distinct !DISubprogram(name: "z_sched_wake", scope: !2108, file: !2108, line: 1882, type: !13257, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13259)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{!157, !2034, !103, !102}
!13259 = !{!13260, !13261, !13262, !13263, !13264, !13265, !13267}
!13260 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13256, file: !2108, line: 1882, type: !2034)
!13261 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13256, file: !2108, line: 1882, type: !103)
!13262 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13256, file: !2108, line: 1882, type: !102)
!13263 = !DILocalVariable(name: "thread", scope: !13256, file: !2108, line: 1884, type: !2003)
!13264 = !DILocalVariable(name: "ret", scope: !13256, file: !2108, line: 1885, type: !157)
!13265 = !DILocalVariable(name: "__i", scope: !13266, file: !2108, line: 1887, type: !11352)
!13266 = distinct !DILexicalBlock(scope: !13256, file: !2108, line: 1887, column: 2)
!13267 = !DILocalVariable(name: "__key", scope: !13266, file: !2108, line: 1887, type: !11352)
!13268 = !DILocation(line: 0, scope: !13256)
!13269 = !DILocation(line: 0, scope: !13266)
!13270 = !DILocation(line: 0, scope: !11360, inlinedAt: !13271)
!13271 = distinct !DILocation(line: 1887, column: 2, scope: !13266)
!13272 = !DILocation(line: 55, column: 2, scope: !11369, inlinedAt: !13273)
!13273 = distinct !DILocation(line: 145, column: 10, scope: !11360, inlinedAt: !13271)
!13274 = !DILocation(line: 0, scope: !11369, inlinedAt: !13273)
!13275 = !DILocation(line: 1888, column: 12, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13277, file: !2108, line: 1887, column: 26)
!13277 = distinct !DILexicalBlock(scope: !13266, file: !2108, line: 1887, column: 2)
!13278 = !DILocation(line: 1890, column: 14, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13276, file: !2108, line: 1890, column: 7)
!13280 = !DILocation(line: 1890, column: 7, scope: !13276)
!13281 = !DILocalVariable(name: "thread", arg: 1, scope: !13282, file: !13283, line: 134, type: !2003)
!13282 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13283, file: !13283, line: 134, type: !13284, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13286)
!13283 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13284 = !DISubroutineType(types: !13285)
!13285 = !{null, !2003, !32, !102}
!13286 = !{!13281, !13287, !13288}
!13287 = !DILocalVariable(name: "value", arg: 2, scope: !13282, file: !13283, line: 135, type: !32)
!13288 = !DILocalVariable(name: "data", arg: 3, scope: !13282, file: !13283, line: 136, type: !102)
!13289 = !DILocation(line: 0, scope: !13282, inlinedAt: !13290)
!13290 = distinct !DILocation(line: 1891, column: 4, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13279, file: !2108, line: 1890, column: 23)
!13292 = !DILocation(line: 0, scope: !13196, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 138, column: 2, scope: !13282, inlinedAt: !13290)
!13294 = !DILocation(line: 67, column: 15, scope: !13196, inlinedAt: !13293)
!13295 = !DILocation(line: 67, column: 33, scope: !13196, inlinedAt: !13293)
!13296 = !DILocation(line: 139, column: 15, scope: !13282, inlinedAt: !13290)
!13297 = !DILocation(line: 139, column: 25, scope: !13282, inlinedAt: !13290)
!13298 = !DILocation(line: 1894, column: 4, scope: !13291)
!13299 = !DILocation(line: 1895, column: 10, scope: !13291)
!13300 = !DILocation(line: 1896, column: 4, scope: !13291)
!13301 = !DILocation(line: 1898, column: 3, scope: !13291)
!13302 = !DILocation(line: 0, scope: !11387, inlinedAt: !13303)
!13303 = distinct !DILocation(line: 1887, column: 2, scope: !13277)
!13304 = !DILocation(line: 0, scope: !11395, inlinedAt: !13305)
!13305 = distinct !DILocation(line: 215, column: 2, scope: !11387, inlinedAt: !13303)
!13306 = !DILocation(line: 95, column: 2, scope: !11395, inlinedAt: !13305)
!13307 = !DILocation(line: 1901, column: 2, scope: !13256)
!13308 = distinct !DISubprogram(name: "z_sched_wait", scope: !2108, file: !2108, line: 1904, type: !13309, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13312)
!13309 = !DISubroutineType(types: !13310)
!13310 = !{!103, !11363, !11352, !2034, !12151, !13311}
!13311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!13312 = !{!13313, !13314, !13315, !13316, !13317, !13318}
!13313 = !DILocalVariable(name: "lock", arg: 1, scope: !13308, file: !2108, line: 1904, type: !11363)
!13314 = !DILocalVariable(name: "key", arg: 2, scope: !13308, file: !2108, line: 1904, type: !11352)
!13315 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13308, file: !2108, line: 1905, type: !2034)
!13316 = !DILocalVariable(name: "timeout", arg: 4, scope: !13308, file: !2108, line: 1905, type: !12151)
!13317 = !DILocalVariable(name: "data", arg: 5, scope: !13308, file: !2108, line: 1905, type: !13311)
!13318 = !DILocalVariable(name: "ret", scope: !13308, file: !2108, line: 1907, type: !103)
!13319 = !DILocation(line: 0, scope: !13308)
!13320 = !DILocation(line: 1907, column: 12, scope: !13308)
!13321 = !DILocation(line: 1909, column: 11, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13308, file: !2108, line: 1909, column: 6)
!13323 = !DILocation(line: 1909, column: 6, scope: !13308)
!13324 = !DILocation(line: 1910, column: 11, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13322, file: !2108, line: 1909, column: 20)
!13326 = !DILocation(line: 1910, column: 26, scope: !13325)
!13327 = !DILocation(line: 1910, column: 9, scope: !13325)
!13328 = !DILocation(line: 1911, column: 2, scope: !13325)
!13329 = !DILocation(line: 1912, column: 2, scope: !13308)
!13330 = distinct !DISubprogram(name: "z_data_copy", scope: !13331, file: !13331, line: 22, type: !2738, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !322)
!13331 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13332 = !DILocation(line: 24, column: 2, scope: !13330)
!13333 = !DILocation(line: 27, column: 2, scope: !13330)
!13334 = !DILocation(line: 71, column: 1, scope: !13330)
!13335 = distinct !DISubprogram(name: "z_add_timeout", scope: !2145, file: !2145, line: 88, type: !13336, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13342)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{null, !2118, !2137, !13338}
!13338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !13339)
!13339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !13340)
!13340 = !{!13341}
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13339, file: !1359, line: 66, baseType: !1358, size: 64)
!13342 = !{!13343, !13344, !13345, !13346, !13352, !13353, !13356, !13359}
!13343 = !DILocalVariable(name: "to", arg: 1, scope: !13335, file: !2145, line: 88, type: !2118)
!13344 = !DILocalVariable(name: "fn", arg: 2, scope: !13335, file: !2145, line: 88, type: !2137)
!13345 = !DILocalVariable(name: "timeout", arg: 3, scope: !13335, file: !2145, line: 89, type: !13338)
!13346 = !DILocalVariable(name: "__i", scope: !13347, file: !2145, line: 102, type: !13348)
!13347 = distinct !DILexicalBlock(scope: !13335, file: !2145, line: 102, column: 2)
!13348 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !13349)
!13349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !13350)
!13350 = !{!13351}
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13349, file: !321, line: 33, baseType: !103, size: 32)
!13352 = !DILocalVariable(name: "__key", scope: !13347, file: !2145, line: 102, type: !13348)
!13353 = !DILocalVariable(name: "t", scope: !13354, file: !2145, line: 103, type: !2118)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !2145, line: 102, column: 24)
!13355 = distinct !DILexicalBlock(scope: !13347, file: !2145, line: 102, column: 2)
!13356 = !DILocalVariable(name: "ticks", scope: !13357, file: !2145, line: 107, type: !1358)
!13357 = distinct !DILexicalBlock(scope: !13358, file: !2145, line: 106, column: 39)
!13358 = distinct !DILexicalBlock(scope: !13354, file: !2145, line: 105, column: 7)
!13359 = !DILocalVariable(name: "next_time", scope: !13360, file: !2145, line: 137, type: !566)
!13360 = distinct !DILexicalBlock(scope: !13361, file: !2145, line: 127, column: 22)
!13361 = distinct !DILexicalBlock(scope: !13354, file: !2145, line: 127, column: 7)
!13362 = !DILocation(line: 0, scope: !13335)
!13363 = !DILocation(line: 91, column: 6, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13335, file: !2145, line: 91, column: 6)
!13365 = !DILocation(line: 91, column: 6, scope: !13335)
!13366 = !DILocation(line: 100, column: 6, scope: !13335)
!13367 = !DILocation(line: 100, column: 9, scope: !13335)
!13368 = !DILocation(line: 0, scope: !13347)
!13369 = !DILocalVariable(name: "l", arg: 1, scope: !13370, file: !321, line: 136, type: !13373)
!13370 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !13371, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13374)
!13371 = !DISubroutineType(types: !13372)
!13372 = !{!13348, !13373}
!13373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!13374 = !{!13369, !13375}
!13375 = !DILocalVariable(name: "k", scope: !13370, file: !321, line: 139, type: !13348)
!13376 = !DILocation(line: 0, scope: !13370, inlinedAt: !13377)
!13377 = distinct !DILocation(line: 102, column: 2, scope: !13347)
!13378 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13383)
!13379 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4523, file: !4523, line: 42, type: !4524, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13380)
!13380 = !{!13381, !13382}
!13381 = !DILocalVariable(name: "key", scope: !13379, file: !4523, line: 44, type: !32)
!13382 = !DILocalVariable(name: "tmp", scope: !13379, file: !4523, line: 53, type: !32)
!13383 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13377)
!13384 = !{i64 1953515}
!13385 = !DILocation(line: 0, scope: !13379, inlinedAt: !13383)
!13386 = !DILocation(line: 106, column: 33, scope: !13358)
!13387 = !DILocation(line: 105, column: 7, scope: !13354)
!13388 = !DILocation(line: 107, column: 50, scope: !13357)
!13389 = !DILocation(line: 107, column: 48, scope: !13357)
!13390 = !DILocation(line: 0, scope: !13357)
!13391 = !DILocation(line: 109, column: 17, scope: !13357)
!13392 = !DILocation(line: 110, column: 3, scope: !13357)
!13393 = !DILocation(line: 111, column: 31, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13358, file: !2145, line: 110, column: 10)
!13395 = !DILocation(line: 111, column: 37, scope: !13394)
!13396 = !DILocation(line: 111, column: 35, scope: !13394)
!13397 = !DILocation(line: 0, scope: !13358)
!13398 = !DILocation(line: 109, column: 8, scope: !13357)
!13399 = !DILocation(line: 109, column: 15, scope: !13357)
!13400 = !DILocation(line: 114, column: 12, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13354, file: !2145, line: 114, column: 3)
!13402 = !DILocation(line: 0, scope: !13354)
!13403 = !DILocation(line: 114, column: 3, scope: !13401)
!13404 = !DILocation(line: 115, column: 24, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !2145, line: 115, column: 8)
!13406 = distinct !DILexicalBlock(scope: !13407, file: !2145, line: 114, column: 45)
!13407 = distinct !DILexicalBlock(scope: !13401, file: !2145, line: 114, column: 3)
!13408 = !DILocation(line: 115, column: 11, scope: !13405)
!13409 = !DILocation(line: 115, column: 18, scope: !13405)
!13410 = !DILocation(line: 115, column: 8, scope: !13406)
!13411 = !DILocation(line: 116, column: 15, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13405, file: !2145, line: 115, column: 32)
!13413 = !DILocation(line: 117, column: 26, scope: !13412)
!13414 = !DILocation(line: 117, column: 37, scope: !13412)
!13415 = !DILocation(line: 117, column: 5, scope: !13412)
!13416 = !DILocation(line: 123, column: 7, scope: !13354)
!13417 = !DILocation(line: 120, column: 15, scope: !13406)
!13418 = !DILocation(line: 114, column: 36, scope: !13407)
!13419 = distinct !{!13419, !13403, !13420}
!13420 = !DILocation(line: 121, column: 3, scope: !13401)
!13421 = !DILocation(line: 124, column: 41, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !2145, line: 123, column: 18)
!13423 = distinct !DILexicalBlock(scope: !13354, file: !2145, line: 123, column: 7)
!13424 = !DILocation(line: 124, column: 4, scope: !13422)
!13425 = !DILocation(line: 125, column: 3, scope: !13422)
!13426 = !DILocation(line: 127, column: 13, scope: !13361)
!13427 = !DILocation(line: 127, column: 10, scope: !13361)
!13428 = !DILocation(line: 127, column: 7, scope: !13354)
!13429 = !DILocation(line: 137, column: 24, scope: !13360)
!13430 = !DILocation(line: 0, scope: !13360)
!13431 = !DILocation(line: 139, column: 18, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13360, file: !2145, line: 139, column: 8)
!13433 = !DILocation(line: 139, column: 23, scope: !13432)
!13434 = !DILocation(line: 141, column: 5, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13432, file: !2145, line: 140, column: 48)
!13436 = !DILocation(line: 142, column: 4, scope: !13435)
!13437 = !DILocalVariable(name: "key", arg: 2, scope: !13438, file: !321, line: 190, type: !13348)
!13438 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !13439, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13441)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{null, !13373, !13348}
!13441 = !{!13442, !13437}
!13442 = !DILocalVariable(name: "l", arg: 1, scope: !13438, file: !321, line: 189, type: !13373)
!13443 = !DILocation(line: 0, scope: !13438, inlinedAt: !13444)
!13444 = distinct !DILocation(line: 102, column: 2, scope: !13355)
!13445 = !DILocalVariable(name: "key", arg: 1, scope: !13446, file: !4523, line: 84, type: !32)
!13446 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4523, file: !4523, line: 84, type: !4534, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13447)
!13447 = !{!13445}
!13448 = !DILocation(line: 0, scope: !13446, inlinedAt: !13449)
!13449 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13444)
!13450 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13449)
!13451 = !{i64 1954332}
!13452 = !DILocation(line: 148, column: 1, scope: !13335)
!13453 = distinct !DISubprogram(name: "elapsed", scope: !2145, file: !2145, line: 62, type: !13454, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!13454 = !DISubroutineType(types: !13455)
!13455 = !{!566}
!13456 = !DILocation(line: 64, column: 9, scope: !13453)
!13457 = !DILocation(line: 64, column: 28, scope: !13453)
!13458 = !DILocation(line: 64, column: 35, scope: !13453)
!13459 = !DILocation(line: 64, column: 2, scope: !13453)
!13460 = distinct !DISubprogram(name: "first", scope: !2145, file: !2145, line: 39, type: !13461, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13463)
!13461 = !DISubroutineType(types: !13462)
!13462 = !{!2118}
!13463 = !{!13464}
!13464 = !DILocalVariable(name: "t", scope: !13460, file: !2145, line: 41, type: !13465)
!13465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!13466 = !DILocation(line: 41, column: 19, scope: !13460)
!13467 = !DILocation(line: 0, scope: !13460)
!13468 = !DILocation(line: 43, column: 9, scope: !13460)
!13469 = !DILocation(line: 43, column: 2, scope: !13460)
!13470 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !13471, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13473)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{null, !13465, !13465}
!13473 = !{!13474, !13475, !13476}
!13474 = !DILocalVariable(name: "successor", arg: 1, scope: !13470, file: !221, line: 443, type: !13465)
!13475 = !DILocalVariable(name: "node", arg: 2, scope: !13470, file: !221, line: 443, type: !13465)
!13476 = !DILocalVariable(name: "prev", scope: !13470, file: !221, line: 445, type: !13477)
!13477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13465)
!13478 = !DILocation(line: 0, scope: !13470)
!13479 = !DILocation(line: 445, column: 39, scope: !13470)
!13480 = !DILocation(line: 447, column: 8, scope: !13470)
!13481 = !DILocation(line: 447, column: 13, scope: !13470)
!13482 = !DILocation(line: 448, column: 8, scope: !13470)
!13483 = !DILocation(line: 448, column: 13, scope: !13470)
!13484 = !DILocation(line: 449, column: 8, scope: !13470)
!13485 = !DILocation(line: 449, column: 13, scope: !13470)
!13486 = !DILocation(line: 450, column: 18, scope: !13470)
!13487 = !DILocation(line: 451, column: 1, scope: !13470)
!13488 = distinct !DISubprogram(name: "next", scope: !2145, file: !2145, line: 46, type: !13489, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{!2118, !2118}
!13491 = !{!13492, !13493}
!13492 = !DILocalVariable(name: "t", arg: 1, scope: !13488, file: !2145, line: 46, type: !2118)
!13493 = !DILocalVariable(name: "n", scope: !13488, file: !2145, line: 48, type: !13465)
!13494 = !DILocation(line: 0, scope: !13488)
!13495 = !DILocation(line: 48, column: 58, scope: !13488)
!13496 = !DILocation(line: 48, column: 19, scope: !13488)
!13497 = !DILocation(line: 50, column: 9, scope: !13488)
!13498 = !DILocation(line: 50, column: 2, scope: !13488)
!13499 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !13500, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13503)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{null, !13502, !13465}
!13502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!13503 = !{!13504, !13505, !13506}
!13504 = !DILocalVariable(name: "list", arg: 1, scope: !13499, file: !221, line: 404, type: !13502)
!13505 = !DILocalVariable(name: "node", arg: 2, scope: !13499, file: !221, line: 404, type: !13465)
!13506 = !DILocalVariable(name: "tail", scope: !13499, file: !221, line: 406, type: !13477)
!13507 = !DILocation(line: 0, scope: !13499)
!13508 = !DILocation(line: 406, column: 34, scope: !13499)
!13509 = !DILocation(line: 408, column: 8, scope: !13499)
!13510 = !DILocation(line: 408, column: 13, scope: !13499)
!13511 = !DILocation(line: 409, column: 8, scope: !13499)
!13512 = !DILocation(line: 409, column: 13, scope: !13499)
!13513 = !DILocation(line: 411, column: 8, scope: !13499)
!13514 = !DILocation(line: 411, column: 13, scope: !13499)
!13515 = !DILocation(line: 412, column: 13, scope: !13499)
!13516 = !DILocation(line: 413, column: 1, scope: !13499)
!13517 = distinct !DISubprogram(name: "next_timeout", scope: !2145, file: !2145, line: 67, type: !13454, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13518)
!13518 = !{!13519, !13520, !13521}
!13519 = !DILocalVariable(name: "to", scope: !13517, file: !2145, line: 69, type: !2118)
!13520 = !DILocalVariable(name: "ticks_elapsed", scope: !13517, file: !2145, line: 70, type: !566)
!13521 = !DILocalVariable(name: "ret", scope: !13517, file: !2145, line: 71, type: !566)
!13522 = !DILocation(line: 69, column: 24, scope: !13517)
!13523 = !DILocation(line: 0, scope: !13517)
!13524 = !DILocation(line: 70, column: 26, scope: !13517)
!13525 = !DILocation(line: 73, column: 10, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13517, file: !2145, line: 73, column: 6)
!13527 = !DILocation(line: 73, column: 19, scope: !13526)
!13528 = !DILocation(line: 74, column: 21, scope: !13526)
!13529 = !DILocation(line: 74, column: 30, scope: !13526)
!13530 = !DILocation(line: 74, column: 28, scope: !13526)
!13531 = !DILocation(line: 74, column: 45, scope: !13526)
!13532 = !DILocation(line: 73, column: 6, scope: !13517)
!13533 = !DILocation(line: 77, column: 9, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13526, file: !2145, line: 76, column: 9)
!13535 = !DILocation(line: 0, scope: !13526)
!13536 = !DILocation(line: 81, column: 20, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13517, file: !2145, line: 81, column: 6)
!13538 = !DILocation(line: 81, column: 6, scope: !13537)
!13539 = !DILocation(line: 81, column: 32, scope: !13537)
!13540 = !DILocation(line: 85, column: 2, scope: !13517)
!13541 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !13542, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13544)
!13542 = !DISubroutineType(types: !13543)
!13543 = !{!13465, !13502, !13465}
!13544 = !{!13545, !13546}
!13545 = !DILocalVariable(name: "list", arg: 1, scope: !13541, file: !221, line: 341, type: !13502)
!13546 = !DILocalVariable(name: "node", arg: 2, scope: !13541, file: !221, line: 342, type: !13465)
!13547 = !DILocation(line: 0, scope: !13541)
!13548 = !DILocation(line: 344, column: 15, scope: !13541)
!13549 = !DILocation(line: 344, column: 9, scope: !13541)
!13550 = !DILocation(line: 344, column: 26, scope: !13541)
!13551 = !DILocation(line: 344, column: 2, scope: !13541)
!13552 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !13542, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13553)
!13553 = !{!13554, !13555}
!13554 = !DILocalVariable(name: "list", arg: 1, scope: !13552, file: !221, line: 325, type: !13502)
!13555 = !DILocalVariable(name: "node", arg: 2, scope: !13552, file: !221, line: 326, type: !13465)
!13556 = !DILocation(line: 0, scope: !13552)
!13557 = !DILocation(line: 328, column: 24, scope: !13552)
!13558 = !DILocation(line: 328, column: 15, scope: !13552)
!13559 = !DILocation(line: 328, column: 9, scope: !13552)
!13560 = !DILocation(line: 328, column: 45, scope: !13552)
!13561 = !DILocation(line: 328, column: 2, scope: !13552)
!13562 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !13563, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{!13465, !13502}
!13565 = !{!13566}
!13566 = !DILocalVariable(name: "list", arg: 1, scope: !13562, file: !221, line: 294, type: !13502)
!13567 = !DILocation(line: 0, scope: !13562)
!13568 = !DILocation(line: 296, column: 9, scope: !13562)
!13569 = !DILocation(line: 296, column: 2, scope: !13562)
!13570 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !13571, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13573)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{!157, !13502}
!13573 = !{!13574}
!13574 = !DILocalVariable(name: "list", arg: 1, scope: !13570, file: !221, line: 266, type: !13502)
!13575 = !DILocation(line: 0, scope: !13570)
!13576 = !DILocation(line: 268, column: 15, scope: !13570)
!13577 = !DILocation(line: 268, column: 20, scope: !13570)
!13578 = !DILocation(line: 268, column: 2, scope: !13570)
!13579 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2145, file: !2145, line: 150, type: !13580, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13582)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{!103, !2118}
!13582 = !{!13583, !13584, !13585, !13587}
!13583 = !DILocalVariable(name: "to", arg: 1, scope: !13579, file: !2145, line: 150, type: !2118)
!13584 = !DILocalVariable(name: "ret", scope: !13579, file: !2145, line: 152, type: !103)
!13585 = !DILocalVariable(name: "__i", scope: !13586, file: !2145, line: 154, type: !13348)
!13586 = distinct !DILexicalBlock(scope: !13579, file: !2145, line: 154, column: 2)
!13587 = !DILocalVariable(name: "__key", scope: !13586, file: !2145, line: 154, type: !13348)
!13588 = !DILocation(line: 0, scope: !13579)
!13589 = !DILocation(line: 0, scope: !13586)
!13590 = !DILocation(line: 0, scope: !13370, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 154, column: 2, scope: !13586)
!13592 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13593)
!13593 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13591)
!13594 = !DILocation(line: 0, scope: !13379, inlinedAt: !13593)
!13595 = !DILocation(line: 155, column: 7, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13597, file: !2145, line: 155, column: 7)
!13597 = distinct !DILexicalBlock(scope: !13598, file: !2145, line: 154, column: 24)
!13598 = distinct !DILexicalBlock(scope: !13586, file: !2145, line: 154, column: 2)
!13599 = !DILocation(line: 155, column: 7, scope: !13597)
!13600 = !DILocation(line: 156, column: 4, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13596, file: !2145, line: 155, column: 39)
!13602 = !DILocation(line: 158, column: 3, scope: !13601)
!13603 = !DILocation(line: 0, scope: !13438, inlinedAt: !13604)
!13604 = distinct !DILocation(line: 154, column: 2, scope: !13598)
!13605 = !DILocation(line: 0, scope: !13446, inlinedAt: !13606)
!13606 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13604)
!13607 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13606)
!13608 = !DILocation(line: 161, column: 2, scope: !13579)
!13609 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !13610, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13614)
!13610 = !DISubroutineType(types: !13611)
!13611 = !{!157, !13612}
!13612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13613, size: 32)
!13613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "node", arg: 1, scope: !13609, file: !221, line: 225, type: !13612)
!13616 = !DILocation(line: 0, scope: !13609)
!13617 = !DILocation(line: 227, column: 15, scope: !13609)
!13618 = !DILocation(line: 227, column: 20, scope: !13609)
!13619 = !DILocation(line: 227, column: 2, scope: !13609)
!13620 = distinct !DISubprogram(name: "remove_timeout", scope: !2145, file: !2145, line: 53, type: !2139, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13621)
!13621 = !{!13622}
!13622 = !DILocalVariable(name: "t", arg: 1, scope: !13620, file: !2145, line: 53, type: !2118)
!13623 = !DILocation(line: 0, scope: !13620)
!13624 = !DILocation(line: 55, column: 6, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13620, file: !2145, line: 55, column: 6)
!13626 = !DILocation(line: 55, column: 14, scope: !13625)
!13627 = !DILocation(line: 55, column: 6, scope: !13620)
!13628 = !DILocation(line: 56, column: 25, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13625, file: !2145, line: 55, column: 23)
!13630 = !DILocation(line: 56, column: 12, scope: !13629)
!13631 = !DILocation(line: 56, column: 19, scope: !13629)
!13632 = !DILocation(line: 57, column: 2, scope: !13629)
!13633 = !DILocation(line: 59, column: 23, scope: !13620)
!13634 = !DILocation(line: 59, column: 2, scope: !13620)
!13635 = !DILocation(line: 60, column: 1, scope: !13620)
!13636 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !13637, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13639)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{null, !13465}
!13639 = !{!13640, !13641, !13642}
!13640 = !DILocalVariable(name: "node", arg: 1, scope: !13636, file: !221, line: 496, type: !13465)
!13641 = !DILocalVariable(name: "prev", scope: !13636, file: !221, line: 498, type: !13477)
!13642 = !DILocalVariable(name: "next", scope: !13636, file: !221, line: 499, type: !13477)
!13643 = !DILocation(line: 0, scope: !13636)
!13644 = !DILocation(line: 498, column: 34, scope: !13636)
!13645 = !DILocation(line: 499, column: 34, scope: !13636)
!13646 = !DILocation(line: 501, column: 8, scope: !13636)
!13647 = !DILocation(line: 501, column: 13, scope: !13636)
!13648 = !DILocation(line: 502, column: 8, scope: !13636)
!13649 = !DILocation(line: 502, column: 13, scope: !13636)
!13650 = !DILocation(line: 503, column: 2, scope: !13636)
!13651 = !DILocation(line: 504, column: 1, scope: !13636)
!13652 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !13637, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13653)
!13653 = !{!13654}
!13654 = !DILocalVariable(name: "node", arg: 1, scope: !13652, file: !221, line: 211, type: !13465)
!13655 = !DILocation(line: 0, scope: !13652)
!13656 = !DILocation(line: 213, column: 8, scope: !13652)
!13657 = !DILocation(line: 213, column: 13, scope: !13652)
!13658 = !DILocation(line: 214, column: 8, scope: !13652)
!13659 = !DILocation(line: 214, column: 13, scope: !13652)
!13660 = !DILocation(line: 215, column: 1, scope: !13652)
!13661 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2145, file: !2145, line: 183, type: !13662, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13666)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!1358, !13664}
!13664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13665, size: 32)
!13665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2119)
!13666 = !{!13667, !13668, !13669, !13671}
!13667 = !DILocalVariable(name: "timeout", arg: 1, scope: !13661, file: !2145, line: 183, type: !13664)
!13668 = !DILocalVariable(name: "ticks", scope: !13661, file: !2145, line: 185, type: !1358)
!13669 = !DILocalVariable(name: "__i", scope: !13670, file: !2145, line: 187, type: !13348)
!13670 = distinct !DILexicalBlock(scope: !13661, file: !2145, line: 187, column: 2)
!13671 = !DILocalVariable(name: "__key", scope: !13670, file: !2145, line: 187, type: !13348)
!13672 = !DILocation(line: 0, scope: !13661)
!13673 = !DILocation(line: 0, scope: !13670)
!13674 = !DILocation(line: 0, scope: !13370, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 187, column: 2, scope: !13670)
!13676 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13675)
!13678 = !DILocation(line: 0, scope: !13379, inlinedAt: !13677)
!13679 = !DILocation(line: 188, column: 11, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13681, file: !2145, line: 187, column: 24)
!13681 = distinct !DILexicalBlock(scope: !13670, file: !2145, line: 187, column: 2)
!13682 = !DILocation(line: 0, scope: !13438, inlinedAt: !13683)
!13683 = distinct !DILocation(line: 187, column: 2, scope: !13681)
!13684 = !DILocation(line: 0, scope: !13446, inlinedAt: !13685)
!13685 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13683)
!13686 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13685)
!13687 = !DILocation(line: 191, column: 2, scope: !13661)
!13688 = distinct !DISubprogram(name: "timeout_rem", scope: !2145, file: !2145, line: 165, type: !13662, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13689)
!13689 = !{!13690, !13691, !13692}
!13690 = !DILocalVariable(name: "timeout", arg: 1, scope: !13688, file: !2145, line: 165, type: !13664)
!13691 = !DILocalVariable(name: "ticks", scope: !13688, file: !2145, line: 167, type: !1358)
!13692 = !DILocalVariable(name: "t", scope: !13693, file: !2145, line: 173, type: !2118)
!13693 = distinct !DILexicalBlock(scope: !13688, file: !2145, line: 173, column: 2)
!13694 = !DILocation(line: 0, scope: !13688)
!13695 = !DILocation(line: 169, column: 6, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13688, file: !2145, line: 169, column: 6)
!13697 = !DILocation(line: 169, column: 6, scope: !13688)
!13698 = !DILocation(line: 173, column: 28, scope: !13693)
!13699 = !DILocation(line: 0, scope: !13693)
!13700 = !DILocation(line: 173, column: 39, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13693, file: !2145, line: 173, column: 2)
!13702 = !DILocation(line: 173, column: 2, scope: !13693)
!13703 = !DILocation(line: 174, column: 15, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13701, file: !2145, line: 173, column: 61)
!13705 = !DILocation(line: 174, column: 9, scope: !13704)
!13706 = !DILocation(line: 175, column: 15, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13704, file: !2145, line: 175, column: 7)
!13708 = !DILocation(line: 175, column: 7, scope: !13704)
!13709 = !DILocation(line: 173, column: 52, scope: !13701)
!13710 = distinct !{!13710, !13702, !13711}
!13711 = !DILocation(line: 178, column: 2, scope: !13693)
!13712 = !DILocation(line: 180, column: 17, scope: !13688)
!13713 = !DILocation(line: 180, column: 15, scope: !13688)
!13714 = !DILocation(line: 180, column: 2, scope: !13688)
!13715 = !DILocation(line: 181, column: 1, scope: !13688)
!13716 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11026, file: !11026, line: 35, type: !13717, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13719)
!13717 = !DISubroutineType(types: !13718)
!13718 = !{!157, !13664}
!13719 = !{!13720}
!13720 = !DILocalVariable(name: "to", arg: 1, scope: !13716, file: !11026, line: 35, type: !13664)
!13721 = !DILocation(line: 0, scope: !13716)
!13722 = !DILocation(line: 37, column: 35, scope: !13716)
!13723 = !DILocation(line: 37, column: 10, scope: !13716)
!13724 = !DILocation(line: 37, column: 9, scope: !13716)
!13725 = !DILocation(line: 37, column: 2, scope: !13716)
!13726 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2145, file: !2145, line: 194, type: !13662, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13727)
!13727 = !{!13728, !13729, !13730, !13732}
!13728 = !DILocalVariable(name: "timeout", arg: 1, scope: !13726, file: !2145, line: 194, type: !13664)
!13729 = !DILocalVariable(name: "ticks", scope: !13726, file: !2145, line: 196, type: !1358)
!13730 = !DILocalVariable(name: "__i", scope: !13731, file: !2145, line: 198, type: !13348)
!13731 = distinct !DILexicalBlock(scope: !13726, file: !2145, line: 198, column: 2)
!13732 = !DILocalVariable(name: "__key", scope: !13731, file: !2145, line: 198, type: !13348)
!13733 = !DILocation(line: 0, scope: !13726)
!13734 = !DILocation(line: 0, scope: !13731)
!13735 = !DILocation(line: 0, scope: !13370, inlinedAt: !13736)
!13736 = distinct !DILocation(line: 198, column: 2, scope: !13731)
!13737 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13738)
!13738 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13736)
!13739 = !DILocation(line: 0, scope: !13379, inlinedAt: !13738)
!13740 = !DILocation(line: 199, column: 11, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !2145, line: 198, column: 24)
!13742 = distinct !DILexicalBlock(scope: !13731, file: !2145, line: 198, column: 2)
!13743 = !DILocation(line: 199, column: 23, scope: !13741)
!13744 = !DILocation(line: 0, scope: !13438, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 198, column: 2, scope: !13742)
!13746 = !DILocation(line: 0, scope: !13446, inlinedAt: !13747)
!13747 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13745)
!13748 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13747)
!13749 = !DILocation(line: 199, column: 21, scope: !13741)
!13750 = !DILocation(line: 202, column: 2, scope: !13726)
!13751 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2145, file: !2145, line: 205, type: !13454, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13752)
!13752 = !{!13753, !13754, !13756}
!13753 = !DILocalVariable(name: "ret", scope: !13751, file: !2145, line: 207, type: !566)
!13754 = !DILocalVariable(name: "__i", scope: !13755, file: !2145, line: 209, type: !13348)
!13755 = distinct !DILexicalBlock(scope: !13751, file: !2145, line: 209, column: 2)
!13756 = !DILocalVariable(name: "__key", scope: !13755, file: !2145, line: 209, type: !13348)
!13757 = !DILocation(line: 0, scope: !13751)
!13758 = !DILocation(line: 0, scope: !13755)
!13759 = !DILocation(line: 0, scope: !13370, inlinedAt: !13760)
!13760 = distinct !DILocation(line: 209, column: 2, scope: !13755)
!13761 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13762)
!13762 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13760)
!13763 = !DILocation(line: 0, scope: !13379, inlinedAt: !13762)
!13764 = !DILocation(line: 210, column: 9, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13766, file: !2145, line: 209, column: 24)
!13766 = distinct !DILexicalBlock(scope: !13755, file: !2145, line: 209, column: 2)
!13767 = !DILocation(line: 0, scope: !13438, inlinedAt: !13768)
!13768 = distinct !DILocation(line: 209, column: 2, scope: !13766)
!13769 = !DILocation(line: 0, scope: !13446, inlinedAt: !13770)
!13770 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13768)
!13771 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13770)
!13772 = !DILocation(line: 212, column: 2, scope: !13751)
!13773 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2145, file: !2145, line: 215, type: !8636, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13774)
!13774 = !{!13775, !13776, !13777, !13779, !13780, !13783, !13784}
!13775 = !DILocalVariable(name: "ticks", arg: 1, scope: !13773, file: !2145, line: 215, type: !566)
!13776 = !DILocalVariable(name: "is_idle", arg: 2, scope: !13773, file: !2145, line: 215, type: !157)
!13777 = !DILocalVariable(name: "__i", scope: !13778, file: !2145, line: 217, type: !13348)
!13778 = distinct !DILexicalBlock(scope: !13773, file: !2145, line: 217, column: 2)
!13779 = !DILocalVariable(name: "__key", scope: !13778, file: !2145, line: 217, type: !13348)
!13780 = !DILocalVariable(name: "next_to", scope: !13781, file: !2145, line: 218, type: !103)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !2145, line: 217, column: 24)
!13782 = distinct !DILexicalBlock(scope: !13778, file: !2145, line: 217, column: 2)
!13783 = !DILocalVariable(name: "sooner", scope: !13781, file: !2145, line: 219, type: !157)
!13784 = !DILocalVariable(name: "imminent", scope: !13781, file: !2145, line: 221, type: !157)
!13785 = !DILocation(line: 0, scope: !13773)
!13786 = !DILocation(line: 0, scope: !13778)
!13787 = !DILocation(line: 0, scope: !13370, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 217, column: 2, scope: !13778)
!13789 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13788)
!13791 = !DILocation(line: 0, scope: !13379, inlinedAt: !13790)
!13792 = !DILocation(line: 218, column: 17, scope: !13781)
!13793 = !DILocation(line: 0, scope: !13781)
!13794 = !DILocation(line: 221, column: 27, scope: !13781)
!13795 = !DILocation(line: 233, column: 17, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13781, file: !2145, line: 233, column: 7)
!13797 = !DILocation(line: 234, column: 26, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13796, file: !2145, line: 233, column: 56)
!13799 = !DILocation(line: 234, column: 4, scope: !13798)
!13800 = !DILocation(line: 235, column: 3, scope: !13798)
!13801 = !DILocation(line: 0, scope: !13438, inlinedAt: !13802)
!13802 = distinct !DILocation(line: 217, column: 2, scope: !13782)
!13803 = !DILocation(line: 0, scope: !13446, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13802)
!13805 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13804)
!13806 = !DILocation(line: 237, column: 1, scope: !13773)
!13807 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2145, file: !2145, line: 239, type: !13808, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13810)
!13808 = !DISubroutineType(types: !13809)
!13809 = !{null, !566}
!13810 = !{!13811, !13812, !13813, !13815}
!13811 = !DILocalVariable(name: "ticks", arg: 1, scope: !13807, file: !2145, line: 239, type: !566)
!13812 = !DILocalVariable(name: "key", scope: !13807, file: !2145, line: 245, type: !13348)
!13813 = !DILocalVariable(name: "t", scope: !13814, file: !2145, line: 262, type: !2118)
!13814 = distinct !DILexicalBlock(scope: !13807, file: !2145, line: 261, column: 67)
!13815 = !DILocalVariable(name: "dt", scope: !13814, file: !2145, line: 263, type: !103)
!13816 = !DILocation(line: 0, scope: !13807)
!13817 = !DILocation(line: 242, column: 2, scope: !13807)
!13818 = !DILocation(line: 0, scope: !13370, inlinedAt: !13819)
!13819 = distinct !DILocation(line: 245, column: 25, scope: !13807)
!13820 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13821)
!13821 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13819)
!13822 = !DILocation(line: 0, scope: !13379, inlinedAt: !13821)
!13823 = !DILocation(line: 261, column: 9, scope: !13807)
!13824 = !DILocation(line: 261, column: 17, scope: !13807)
!13825 = !DILocation(line: 261, column: 25, scope: !13807)
!13826 = !DILocation(line: 261, column: 37, scope: !13807)
!13827 = !DILocation(line: 261, column: 47, scope: !13807)
!13828 = !DILocation(line: 261, column: 44, scope: !13807)
!13829 = !DILocation(line: 261, column: 2, scope: !13807)
!13830 = !DILocation(line: 0, scope: !13814)
!13831 = !DILocation(line: 263, column: 12, scope: !13814)
!13832 = !DILocation(line: 265, column: 16, scope: !13814)
!13833 = !DILocation(line: 265, column: 13, scope: !13814)
!13834 = !DILocation(line: 266, column: 13, scope: !13814)
!13835 = !DILocation(line: 267, column: 3, scope: !13814)
!13836 = !DILocation(line: 0, scope: !13438, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 269, column: 3, scope: !13814)
!13838 = !DILocation(line: 0, scope: !13446, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13837)
!13840 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13839)
!13841 = !DILocation(line: 270, column: 6, scope: !13814)
!13842 = !DILocation(line: 270, column: 3, scope: !13814)
!13843 = !DILocation(line: 0, scope: !13370, inlinedAt: !13844)
!13844 = distinct !DILocation(line: 271, column: 9, scope: !13814)
!13845 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13846)
!13846 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13844)
!13847 = !DILocation(line: 0, scope: !13379, inlinedAt: !13846)
!13848 = !DILocation(line: 272, column: 22, scope: !13814)
!13849 = distinct !{!13849, !13829, !13850}
!13850 = !DILocation(line: 273, column: 2, scope: !13807)
!13851 = !DILocation(line: 276, column: 19, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13853, file: !2145, line: 275, column: 23)
!13853 = distinct !DILexicalBlock(scope: !13807, file: !2145, line: 275, column: 6)
!13854 = !DILocation(line: 277, column: 2, scope: !13852)
!13855 = !DILocation(line: 279, column: 15, scope: !13807)
!13856 = !DILocation(line: 279, column: 12, scope: !13807)
!13857 = !DILocation(line: 280, column: 21, scope: !13807)
!13858 = !DILocation(line: 282, column: 24, scope: !13807)
!13859 = !DILocation(line: 282, column: 2, scope: !13807)
!13860 = !DILocation(line: 0, scope: !13438, inlinedAt: !13861)
!13861 = distinct !DILocation(line: 284, column: 2, scope: !13807)
!13862 = !DILocation(line: 0, scope: !13446, inlinedAt: !13863)
!13863 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13861)
!13864 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13863)
!13865 = !DILocation(line: 285, column: 1, scope: !13807)
!13866 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2145, file: !2145, line: 287, type: !13867, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13869)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!280}
!13869 = !{!13870, !13871, !13873}
!13870 = !DILocalVariable(name: "t", scope: !13866, file: !2145, line: 289, type: !1270)
!13871 = !DILocalVariable(name: "__i", scope: !13872, file: !2145, line: 291, type: !13348)
!13872 = distinct !DILexicalBlock(scope: !13866, file: !2145, line: 291, column: 2)
!13873 = !DILocalVariable(name: "__key", scope: !13872, file: !2145, line: 291, type: !13348)
!13874 = !DILocation(line: 0, scope: !13866)
!13875 = !DILocation(line: 0, scope: !13872)
!13876 = !DILocation(line: 0, scope: !13370, inlinedAt: !13877)
!13877 = distinct !DILocation(line: 291, column: 2, scope: !13872)
!13878 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13879)
!13879 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13877)
!13880 = !DILocation(line: 0, scope: !13379, inlinedAt: !13879)
!13881 = !DILocation(line: 292, column: 7, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13883, file: !2145, line: 291, column: 24)
!13883 = distinct !DILexicalBlock(scope: !13872, file: !2145, line: 291, column: 2)
!13884 = !DILocation(line: 292, column: 19, scope: !13882)
!13885 = !DILocation(line: 0, scope: !13438, inlinedAt: !13886)
!13886 = distinct !DILocation(line: 291, column: 2, scope: !13883)
!13887 = !DILocation(line: 0, scope: !13446, inlinedAt: !13888)
!13888 = distinct !DILocation(line: 215, column: 2, scope: !13438, inlinedAt: !13886)
!13889 = !DILocation(line: 95, column: 2, scope: !13446, inlinedAt: !13888)
!13890 = !DILocation(line: 292, column: 17, scope: !13882)
!13891 = !DILocation(line: 294, column: 2, scope: !13866)
!13892 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2145, file: !2145, line: 297, type: !4778, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!13893 = !DILocation(line: 300, column: 19, scope: !13892)
!13894 = !DILocation(line: 300, column: 9, scope: !13892)
!13895 = !DILocation(line: 300, column: 2, scope: !13892)
!13896 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2145, file: !2145, line: 306, type: !13867, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!13897 = !DILocation(line: 308, column: 9, scope: !13896)
!13898 = !DILocation(line: 308, column: 2, scope: !13896)
!13899 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2145, file: !2145, line: 319, type: !4788, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13900)
!13900 = !{!13901, !13902, !13903, !13904}
!13901 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !13899, file: !2145, line: 319, type: !121)
!13902 = !DILocalVariable(name: "start_cycles", scope: !13899, file: !2145, line: 328, type: !121)
!13903 = !DILocalVariable(name: "cycles_to_wait", scope: !13899, file: !2145, line: 331, type: !121)
!13904 = !DILocalVariable(name: "current_cycles", scope: !13905, file: !2145, line: 338, type: !121)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !2145, line: 337, column: 11)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !2145, line: 337, column: 2)
!13907 = distinct !DILexicalBlock(scope: !13899, file: !2145, line: 337, column: 2)
!13908 = !DILocation(line: 0, scope: !13899)
!13909 = !DILocation(line: 322, column: 19, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13899, file: !2145, line: 322, column: 6)
!13911 = !DILocation(line: 322, column: 6, scope: !13899)
!13912 = !DILocation(line: 328, column: 26, scope: !13899)
!13913 = !DILocation(line: 333, column: 43, scope: !13899)
!13914 = !DILocation(line: 337, column: 2, scope: !13899)
!13915 = !DILocation(line: 338, column: 29, scope: !13905)
!13916 = !DILocation(line: 0, scope: !13905)
!13917 = !DILocation(line: 341, column: 23, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13905, file: !2145, line: 341, column: 7)
!13919 = !DILocation(line: 341, column: 39, scope: !13918)
!13920 = !DILocation(line: 349, column: 1, scope: !13899)
!13921 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !4778, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!13922 = !DILocation(line: 1677, column: 9, scope: !13921)
!13923 = !DILocation(line: 1677, column: 2, scope: !13921)
!13924 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !13925, file: !13925, line: 24, type: !4778, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!13925 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13926 = !DILocation(line: 26, column: 9, scope: !13924)
!13927 = !DILocation(line: 26, column: 2, scope: !13924)
!13928 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2145, file: !2145, line: 364, type: !13929, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !13931)
!13929 = !DISubroutineType(types: !13930)
!13930 = !{!1270, !13338}
!13931 = !{!13932, !13933}
!13932 = !DILocalVariable(name: "timeout", arg: 1, scope: !13928, file: !2145, line: 364, type: !13338)
!13933 = !DILocalVariable(name: "dt", scope: !13928, file: !2145, line: 366, type: !1358)
!13934 = !DILocation(line: 0, scope: !13928)
!13935 = !DILocation(line: 368, column: 6, scope: !13928)
!13936 = !DILocation(line: 371, column: 10, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !2145, line: 370, column: 47)
!13938 = distinct !DILexicalBlock(scope: !13939, file: !2145, line: 370, column: 13)
!13939 = distinct !DILexicalBlock(scope: !13928, file: !2145, line: 368, column: 6)
!13940 = !DILocation(line: 371, column: 3, scope: !13937)
!13941 = !DILocation(line: 376, column: 58, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13943, file: !2145, line: 376, column: 7)
!13943 = distinct !DILexicalBlock(scope: !13938, file: !2145, line: 372, column: 9)
!13944 = !DILocation(line: 376, column: 7, scope: !13943)
!13945 = !DILocation(line: 376, column: 43, scope: !13942)
!13946 = !DILocation(line: 377, column: 4, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13942, file: !2145, line: 376, column: 64)
!13948 = !DILocation(line: 379, column: 10, scope: !13943)
!13949 = !DILocation(line: 379, column: 33, scope: !13943)
!13950 = !DILocation(line: 379, column: 31, scope: !13943)
!13951 = !DILocation(line: 379, column: 3, scope: !13943)
!13952 = !DILocation(line: 0, scope: !13939)
!13953 = !DILocation(line: 381, column: 1, scope: !13928)
!13954 = distinct !DISubprogram(name: "boot_banner", scope: !13955, file: !13955, line: 26, type: !2738, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !322)
!13955 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13956 = !DILocation(line: 34, column: 2, scope: !13954)
!13957 = !DILocation(line: 36, column: 1, scope: !13954)
